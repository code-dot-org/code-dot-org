---
fr:
  data:
    long_instructions:
      "'pre-assessment survey q25A'": Si oui, quel(s) cours d’informatique as-tu suivi
        avant ton cours d’informatique actuel ?
      2-3 Artist 1 new: "Bonjour, je suis un artiste. Vous pouvez écrire du code \npour
        me faire dessiner presque tout. Utilisez des blocs pour me faire dessiner
        sur les \nlignes grises de la figure. (chaque ligne a une longueur de 100
        pixels)\\\r\n\\\r"
      2-3 Artist 11: "Donne une bordure au panneau stop en ajoutant\nun octogone où
        chaque côté possède une longueur de 100 pixels. "
      2-3 Artist 12: "Create a circle to finish the eyeball!\n\\\r\n\\\r\nIf the artist
        turns 1 degree with each loop, how many times do you\nneed to repeat the code
        to draw a circle? "
      2-3 Artist 2 new: Cette maison a un mur à moitié fini. Chaque côté est de longueur
        100, mais le mur à moitié fini est de longueur 50. Finissez le mur.
      2-3 Artist 3.4: Le bloc de saut déplace l'artiste sans rien dessiner. Dessine
        la ligne pointillée en utilisant les blocs de saut et de dessin.
      2-3 Artist 3new: "Le chapeau rouge a une hauteur de 100 pixels. Termine le chapeau
        noir qui est de 70 pixels moins haut que le chapeau rouge. \\\r\\\r\\*(Note:
        La largeur de chaque chapeau est de 50 pixels.)"
      2-3 Artist 4: Aide-moi à terminer la maison pour ce chat.
      2-3 Artist 6: "This house needs a roof! Draw the triangle.  \\\r\n\\\r\nHint:\nall
        three sides are the same length.\\\r\n\\\r\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      2-3 Artist 7: "Finish drawing the last set of windows\non the school so that
        everyone in class can see outside. \\\r\n\\\r\nThe sides\nof each square window
        pane are 25 pixels long. "
      2-3 Artist 8: "Time to build a barn!\\\r\n\\\r\nMake the rooms\nfor each animal
        by splitting the barn into 2 equal-sized squares. \\\r\n\\\r\nHint:\nThe rectangle
        is 200 pixels wide and 100 pixels tall.\\\r\n\\\r\nThere are many\ndifferent
        ways to solve this puzzle."
      2-3 Artist 9 NEW: Terminer ce cerf-volant
      2-3 Artist 9 REPLACEMENT: Terminez de dessiner ces escaliers !
      2-3 Artist 9: Terminer ce cerf-volant
      2-3 Artist Assessment 1: "**Évaluation :** Termine de dessiner la dernière dent.
        Elle fait 25 pixels de large et 25 pixels de haut."
      2-3 Artist Debugging 1: "This hat should only be 50 pixels\nwide. \\\r\nCan
        you fix it?\\\r\n\\\r\n<br/>\\\r"
      2-3 Artist Debugging 10: "The direction pad on my game\ncontroller is too narrow.
        \\\r\n\\\r\nCan you make it wider by 10 pixels?\\\r\n\\\r\nTry\nrunning the
        code first to see what's wrong."
      2-3 Artist Debugging 11: Aide-moi à terminer mon beau flocon de neige. Combien
        de fois ai-je besoin de le «Répéter» pour le terminer ?
      2-3 Artist Debugging 2: 'Le code pour les trois moustaches que tu vois est faux.
        Indice : chaque moustache fait 75 pixels de long. Corrige ce code pour dessiner
        les moustaches.'
      2-3 Artist Debugging 3: 'Mon bateau est troué ! Peux-tu le réparer en changeant
        l''angle de la ligne ? Indice : le dernier angle comporte une erreur de 15
        degrés.'
      2-3 Artist Debugging 5: 'Le code pour la jambe et le pied que tu vois est faux.
        Indice : le pied est trop long, nous devrons supprimer un pas (jeu de mots).'
      2-3 Artist Debugging 6: Il semblerait que je sois assis sur une chaise à laquelle
        il manque un pied. Modifie les blocs pour dessiner le pied.
      2-3 Artist Debugging 7: On dirait que «C» dans le code est dessiné à l’envers.
        Peux-tu le faire ressembler à un vrai «C» ?
      2-3 Artist Debugging 8: Mon moulinet n'est pas fini. Combien de fois dois-je
        le répéter pour le terminer ?
      2-3 Artist Debugging 9: 'Le code de cette tige est incorrect. Indice : l’angle
        comporte une erreur de 60 degrés.'
      2-3 Artist Debugging Assessment 1: "**Assessment:** \\\r\nWhy\ndoes this square
        end up being 75 pixels too small on each side?  \\\r\n\\\r\nWhere\ndoes the
        code go wrong?"
      2-3 Artist Free Play: Activité libre ! Dessine tout ce que tu veux.
      2-3 Artist Functions 1 a: "\"Me zombie artist. Me love drawing!\"\n\\\r\n\\\r\nHelp
        the zombie draw square glasses.  \\\r\n\\\r\nThe bridge between the\nglasses
        is 25 pixels shorter than the width of the squares, which is 100 pixels.\\\r\n\\\r"
      2-3 Artist Functions 1: "\"Me zombie artist. Me love drawing!\"\n\\\r\n\\\r\nHelp
        the zombie draw square glasses.  \\\r\n\\\r\nThe bridge between the\nglasses
        is 25 pixels shorter than the width of the squares, which is 100 pixels.\\\r\n\\\r"
      2-3 Artist Functions 10: "**Freeplay:** Here are two functions,\none to draw
        a big gear and one to draw a small gear.  \\\r\n\\\r\nUse them to\ndraw the
        inside of a machine!"
      2-3 Artist Functions 11 a: "We've renamed the `draw a square`\nfunction to `draw
        a hexagon`, but it's still giving us squares!  \\\r\n\\\r\nCan\nyou modify
        the `draw a hexagon` function to draw a hexagon with 50 pixel sides?\n\\\r\n\\\r\nDraw
        the image using the new function!"
      2-3 Artist Functions 11.5 a: |-
        Voici cette même fonction ˋdessiner un hexagone\`.

        Que se passe-t-il si tu fais boucler le programme principal **6** fois en tournant de **60** degrés à chaque boucle ?
      2-3 Artist Functions 11.5: Voici cette même fonction « dessiner un hexagone ».
        Que se passe-t-il si tu mets seulement 60 degrés à chaque fois que tu boucles ?
      2-3 Artist Functions 11: "We've renamed the `draw a square`\nfunction to `draw
        a hexagon`, but it's still giving us squares!  \\\r\n\\\r\nCan\nyou modify
        the `draw a hexagon` function to draw a hexagon with 50 pixel sides?\n\\\r\n\\\r\nDraw
        the image using the new function!"
      2-3 Artist Functions 12 Mike: 'Les fonctions sont vraiment très biens pour dessiner
        des choses complexes plusieurs fois. Peux-tu utiliser la fonction «Dessiner
        une fleur» pour remplir le reste de la jardinière ? (Indice : les plantes
        sont séparées les unes des autres d’une longueur de 100 pixels)  '
      2-3 Artist Functions 12 a: 'Les fonctions sont vraiment très biens pour dessiner
        des choses complexes plusieurs fois. Peux-tu utiliser la fonction «Dessiner
        une fleur» pour remplir le reste de la jardinière ? (Indice : les plantes
        sont séparées les unes des autres d’une longueur de 100 pixels)  '
      2-3 Artist Functions 12: 'Les fonctions sont vraiment très biens pour dessiner
        des choses complexes plusieurs fois. Peux-tu utiliser la fonction «Dessiner
        une fleur» pour remplir le reste de la jardinière ? (Indice : les plantes
        sont séparées les unes des autres d’une longueur de 100 pixels)  '
      2-3 Artist Functions 2 a: |-
        Les fonctions te permettent de définir de nouveaux blocs !

        Nous avons déplacé les blocs pour dessiner un carré dans une fonction appelée ˋdessine un carré`. Cette fois-ci, utilise le petit bloc vert ˋdessine un carré` pour appéer cette nouvelle fonction et créer les lunettes.

        Les carrés de ce dessin sont à 75 pixels les uns des autres.
      2-3 Artist Functions 2: Les fonctions te permettent de définir de nouveaux blocs
        ! Nous avons déplacé les blocs pour dessiner un carré dans une fonction appelée
        «Dessiner un carré». Peut-tu utiliser la fonction «Dessiner un carré» pour
        créer les lunettes ? Les carrés sont à 75 pixels les uns des autres.
      2-3 Artist Functions 3 a: "Modifie la fonction ˋdessine un carré\\` pour dessiner
        des lunettes avec une monture de 115px de chaque côté. \n\nLes carrés sont
        maintenant à 45 pixels les uns des autres."
      2-3 Artist Functions 3: Modifie la fonction pour dessiner un carré de 115 pixels
        de côté et dessine de plus grands verres. Les carrés sont maintenant à 45
        pixels les uns des autres.
      2-3 Artist Functions 4 a: Maintenant, met cette fonction dans une boucle et
        ajoute un autre tour pour dessiner ces trois carrés.
      2-3 Artist Functions 4: Utilise le bloc « Répéter » pour dessiner ces 3 carrés.
      2-3 Artist Functions 9: "**Freeplay:** Here is a snowflake\nfunction. Experiment
        with it to create a winter scene! \\\r\n\\\r\nThis is a free\nplay level,
        so there is no puzzle to solve. Have fun!"
      2-3 Artist Loops 1: Peux-tu faire un hexagone avec des côtés de 100 pixels de
        long pour finir la cellule ? N'oublie pas, cela signifie que tu devras seulement
        tourner à 60 degrés !
      2-3 Artist Loops 2: Maintenant, utilise un bloc répéter pour que la cellule
        devienne une coquille.
      2-3 Artist Loops New 1: "Let's draw this robot's head!\nCan you make a square
        with sides that are 100 pixels?\\\r\n\\\r\n<br/>\\\r"
      2-3 Artist Loops New 10: Maintenant connectons ensemble plusieurs « V » en les
        dessinant dans une boucle.
      2-3 Artist Loops New 11: "Time to make something snazzy!\n\\\r\n\\\r\nRebuild
        the code from the last puzzle, but this time, add a left turn\nof 30 degrees
        inside the loop. Now, repeat it 24 times instead of 8."
      2-3 Artist Loops New 12: Dessine un losange avec des côtés de 100 pixels.
      2-3 Artist Loops New 13: "We are going to start you with\nsome code (in grey)
        to make one diamond. \\\r\n\\\r\nLoop the grey code to create\na fun pattern!"
      2-3 Artist Loops New 14: "Play around with the code for\nthe diamond and see
        what other patterns you can make. \\\r\n\\\r\nTry changing\nhow many degrees
        you turn and how many times you loop."
      2-3 Artist Loops New 15: "Maintenant, dessinez ce que vous voulez ! \\\r\n<br/>
        <br/> \\\r\n\\\r"
      2-3 Artist Loops New 2: Voici une partie du code que tu as utilisé pour dessiner
        ce carré. Que se passe-t-il si tu utilises le bloc Répéter pour exécuter ce
        code 4 fois ?
      2-3 Artist Loops New 9: Dessine un simple « V » dont les deux parties font 50
        pixels de long pour terminer la flèche.
      2-3 Artist Nested Loops 1: "You've used loops to draw\nshapes before, but now
        we're going to put loops inside of other loops!\\\r\n\\\r\nPut\na `repeat`
        block around this whole stack of code to draw the pattern.\\\r\n\\\r\n<br/>\\\r\n\\\r"
      2-3 Artist Nested Loops 10: Boucle ce code 12 fois pour terminer le motif.
      2-3 Artist Nested Loops 11: Boucle ce code 4 fois pour terminer le motif, en
        tournant de 90 degrés après chaque cercle.
      2-3 Artist Nested Loops 12: Boucle ce code 12 fois pour terminer les bouclettes.
      2-3 Artist Nested Loops 2: Maintenant boucle le triangle 6 fois. Après chaque
        triangle, tu devras tourner de 60 degrés avant de dessiner le suivant.
      2-3 Artist Nested Loops 3: "You'll need to loop your\ntriangle 12 times to draw
        this pattern. \\\r\n\\\r\nDivide the number of degrees\nin a circle (360)
        by the number of shapes you're drawing (12) to figure out\nhow far to turn
        after each shape."
      2-3 Artist Nested Loops 4: 'Boucle ce losange 12 fois pour dessiner une fleur.
        Indice : les 12 losanges sont justes comme les 12 triangles que tu as faits
        - de combien devras-tu tourner après chaque forme ?'
      2-3 Artist Nested Loops 5: Remplis les fenêtres de ce bâtiment avec une boucle
        imbriquée. Les fenêtres font 20 pixels de long et sont à 20 pixels l’une de
        l’autre.
      2-3 Artist Nested Loops 6: "This dinosaur has 8 spikes\nrunning up its tail.\\\r\n\\\r\nEach
        spike is 30 pixels long. \\\r\n\\\r\nLoop the\ntriangle 8 times, but make
        sure to jump forward after each one!"
      2-3 Artist Nested Loops 7: Boucle ce triangle 10 fois pour dessiner le soleil.
        Tu devras te déplacer et tourner après chaque triangle. Tu peux déterminer
        de combien tu dois tourner en divisant le nombre de degrés dans un cercle
        par le nombre de formes qui le constituent.
      2-3 Artist Nested Loops 8: Maintenant nous allons ajouter un peu d’herbe à notre
        image. Chaque touffe d'herbe est à 50 pixels l’une de l’autre.
      2-3 Artist Nested Loops 9: Nous allons terminer cette image en ajoutant une
        fleur. Boucle ce losange 12 fois pour dessiner ta fleur.
      2-3 Artist Nested Loops Free Play: Activité libre, dessine quelque chose de
        cool avec des boucles imbriquées.
      2-3 Bee Conditionals 11: Butine les fleurs qui ont du nectar.
      2-3 Bee Conditionals 13: 'Recueille le nectar et fabrique du miel. Indice :
        que se passe-t-il si tu utilises l’instruction conditionnelle «Si nectar»
        sur une fleur rouge ? Peux-tu terminer ceci avec une boucle ?'
      2-3 Bee Conditionals 14: "Let's put everything together!\\\r\n\\\r\nUse\nwhat
        you've learned to help me collect nectar only from flowers that have\nit,
        using as few blocks as possible.  \\\r\n\\\r\nDon't forget to make honey\nat
        the end."
      2-3 Bee Conditionals 15: Recueille le nectar des quatre fleurs.
      2-3 Bee Conditionals 2: "I'm a hungry bee! \\\r\n\\\r\n\\\r\nHelp\nme collect
        all of the nectar from the flowers using the fewest number of blocks."
      2-3 Bee Conditionals 3: Aide-moi à recueillir tout le nectar des fleurs et à
        fabriquer du miel. Utilise une boucle.
      2-3 Bee Conditionals 5: "These magic purple flowers change!\\\r\n\\\r\nEach\ntime
        you try the puzzle, purple flowers can have either 1 nectar or none at\nall...but
        you won't know the number until you run the code! \\\r\n\\\r\nBe careful\nnot
        to collect nectar from a purple flower if it doesn't have any. \\\r\nYou\nmust
        first check if the nectar is equal to 1 using the `if nectar` block."
      2-3 Bee Conditionals Assessment 1: "**Assessment:** Collect\nall of the nectar.
        \ \\\r\nBe careful not to try to collect nectar from a purple\nflower if it
        doesn't have any."
      2-3 Bee Debugging 1: "These blocks are really bugging\nme!\\\r\n\\\r\nFix the
        error(s) to collect all of the nectar."
      2-3 Bee Debugging 10: "This puzzle is making me loopy!\n\\\r\n\\\r\nFix the
        error(s) to collect all of the nectar and make all of the\nhoney."
      2-3 Bee Debugging 2: "Can you find the problem here?\\\r\n\\\r\nFix\nthe error(s)
        to collect all of the nectar."
      2-3 Bee Debugging 3: Ces blocs-là me gênent vraiment. Corrige l’erreur ou les
        erreurs afin de récolter tout le nectar et fabriquer tout le miel.
      2-3 Bee Debugging 5: "That flower looks tasty! \\\r\n\\\r\nFix\nthe error(s)
        to collect all of the nectar.  \\\r\nYou can now use both run and\nstep."
      2-3 Bee Debugging 6: Ces blocs-là me gênent vraiment. Corrige l’erreur ou les
        erreurs afin de récolter tout le nectar.
      2-3 Bee Debugging 9: Ces blocs-là me gênent vraiment. Corrige l’erreur ou les
        erreurs afin de récolter tout le nectar et fabriquer tout le miel.
      2-3 Bee Debugging Assessment 1: "**Assessment:**  Now\nit's time to show what
        you know!\\\r\n\\\r\nFix the error(s) to collect all of\nthe nectar and make
        all of the honey."
      2-3 Bee Functions 1: "Functions are blocks of code that\nperform a task.  \\\r\n\\\r\nUse
        the `get 2 nectar` function to collect the nectar\nfrom each flower."
      2-3 Bee Functions 10: Les fleurs pourpres peuvent avoir 1 ou 0 nectar.  Crée
        une fonction qui récolte du nectar seulement sur les fleurs pourpres qui en
        ont.
      2-3 Bee Functions 2: Les fonctions sont des blocs de code qui effectuent une
        tâche. Utilise la fonction « Obtenir 5 » pour obtenir 5 nectars à la fois.
        Veille également à utiliser une boucle pour obtenir un compte de bloc idéal.
      2-3 Bee Functions 4: La fonction «Déplacer et obtenir le nectar» déplace l'abeille,
        recueille le nectar et renvoie l'abeille là où elle a commencé. Utilise la
        fonction pour récolter tout le nectar.
      2-3 Bee Functions Assessment 1: "**Évaluation :** Utilise les fonctions données
        pour recueillir le nectar de chaque fleur."
      2-3 Bee Functions Assessment 2: "**Évaluation :** Crée une fonction pour tourner,
        avancer et fabriquer du miel 3 fois, puis faire retourner l’abeille au point
        de départ et la retourner."
      2-3 Bee Loops 1: 'Chaque fleur contient une unité de nectar. Récolte le nectar
        de chacune des fleurs. '
      2-3 Bee Loops 13: "**Évaluation :** Recueille tout le nectar en utilisant le
        moins de blocs possible."
      2-3 Bee Loops 3A: Peux-tu utiliser une boucle pour recueillir tout ce nectar
        ?
      2-3 Bee Loops 3B: Maintenant, utilise le nouveau bloc «Répéter» pour recueillir
        tout le nectar et fabriquer tout le miel.
      2-3 Bee Loops 4: "Such a busy bee!\\\r\n\\\r\nHelp Bee collect\nall of the nectar
        and make all of the honey with the fewest blocks possible."
      2-3 Bee Loops 4A: Que se passe-t-il si tu mets cette séquence en boucle 3 fois
        ? N'oublie pas de faire le miel à la fin !
      2-3 Bee Loops 5: "The shape of this path is different\nfrom the others. \\\r\n\\\r\nCan
        you collect all of the nectar using as few blocks\nas possible?"
      2-3 Bee Loops 7: "What a beautiful field of flowers!   \\\r\n\\\r\nHelp\nthe
        bee visit each one.\\\r\n\\\r\nCan you find a way to do it with fewer than\n7
        blocks?"
      2-3 Bee Loops 8: Ces fleurs pourpres ont une quantité inconnue de nectar. Utilise
        une boucle «Tant que nectar» pour recueillir tout le nectar. Cette boucle
        s'exécutera tant que la condition est vraie, dans ce cas «Nectar > 0».
      2-3 Bee Loops Assessment 1: "**Évaluation :** Utilise une boucle `tant que`
        pour recueillir tout le nectar de ces fleurs."
      2-3 Maze 1: "Can you help me catch the naughty\npig? \\\r\n\\\r\nStack a couple
        of `move forward` blocks below the `when run`\nblock and press \"Run\". "
      2-3 Maze 12 - One Move Block: "Get the mean pig! But this\ntime, you can only
        use one `move forward` block...\\\r\n\\\r\nAh, look closely\n\n-   do you
        see any other blocks that can help you get there?"
      2-3 Maze 12: "Suddenly, a magical block appears!  With\nthe `repeat` block,
        you can loop code over and over.\\\r\n\\\r\nCan you get to\nthe pig by creating
        a loop that uses only one `move forward` block inside\nof a `repeat`?"
      2-3 Maze 13: Amène-moi au cochon ! Tu ne peux utiliser qu’un seul bloc ˋavancer
        plus\` cette fois-ci
      2-3 Maze 15: Utilise deux boucles « Répéter » pour aller au cochon avec le plus
        petit nombre de blocs possible.
      2-3 Maze Loops 18: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      2-3 Maze Loops 19: "Let's take this to another level!\n\\\r\n\\\r\nUse loops
        to get me to the sunflower with the fewest loops possible."
      2-3 Maze Loops Assessment 1: "**Évaluation :** Amène-moi au tournesol en n’utilisant
        que 5 blocs ! "
      4-5 Artist 1: "Help me finish drawing my box. (Each line\nis 300 pixels long)
        \\\r\n\\\r"
      4-5 Artist 10: Appuie sur « Exécuter » pour tester le code. Ensuite, répète-le
        suffisamment de fois pour terminer le dessin. Les couleurs seront différentes
        chaque fois.
      4-5 Artist 11: "Complete the green lines.  \\\r\n\\\r\nThe\nlines are 300 pixels
        long and 15 pixels apart."
      4-5 Artist 2: Peux-tu boucler ce code pour compléter le carré ?
      4-5 Artist 3.5: "Try to figure out what happens if you\nrun this code (or just
        press \"Run\" and try it). \\\r\n\\\r\nNext, repeat the\ncode enough times
        to complete the drawing!"
      4-5 Artist 3: "This rectangular flower bed has a perimeter\nof 600.  \\\r\nThe
        long side has a length of 200. \\\r\n\\\r\nDraw the rectangle\nusing as few
        blocks as possible."
      4-5 Artist 4: "How many degrees are in a circle?  \\\r\n\\\r\nLoop\nthe blocks
        to create a circle of colors."
      4-5 Artist 5: Quel angle utilises-tu ?
      4-5 Artist 6: Ce triangle équilatéral possède des angles de 60, 60 et 60 degrés.
        Chaque côté fait 200 pixels. Termine le dessin.
      4-5 Artist 7: "This right triangle has angles of 30, 60,\nand 90 degrees.  The
        slanted side's length (length of the hypotenuse) is\n200 pixels. \\\r\n\\\r\nComplete
        the drawing."
      4-5 Artist 8: "The halfway line on a soccer field is _perpendicular_\nto the
        sidelines.   \\\r\nThis rectangle has a perimeter of 800 pixels total,\nand
        it is 240 pixels long. How tall is it?   \\\r\n\\\r\nDraw the bounds and the\nhalfway
        line."
      4-5 Artist 9: "Draw the right half of this image so that\nthe design is symmetrical.
        \\\r\nThe triangles are equilateral and have sides\nthat are 50 pixels long."
      4-5 Artist Assessment 1: "**Évaluation :** Utilise une boucle pour dessiner
        le triangle équilatéral. Chaque côté fait 300 pixels."
      4-5 Artist Free Draw 1: Dessin libre !  Dessine tout ce qui t’inspire.
      4-5 Artist Patterns 1: Peux-tu dessiner ce carré à l'aide d'une boucle ? Chaque
        côté mesure 20 pixels de long.
      4-5 Artist Patterns 10: "This code draws two rows of hexagons\n\n-   loop the
        whole thing 4 times to draw the whole honeycomb. \\\r\n    \\\r\n    You'll\n
        \   need to jump back 120 pixels in your outermost loop to make sure the artist\n
        \   doesn't draw off the screen."
      4-5 Artist Patterns 11: Combien de fois dois-tu boucler ceci pour dessiner un
        demi-cercle ?
      4-5 Artist Patterns 12: Si tu copies cette boucle et tourne à gauche plutôt
        qu'à droite, que se passe-t-il ? Peux-tu répéter cela pour dessiner cette
        vague ?
      4-5 Artist Patterns 13: Maintenant nous allons boucler tout cela quatre fois
        pour créer ce cadre photo. Attention aux coins - tu ne peux simplement pas
        tourner à 90 degrés ! Si boucler un virage de 3 degrés 60 fois donne un demi
        cercle, lequel de ces blocs de code fera un quart de cercle pour les coins
        ?
      4-5 Artist Patterns 2: "If you place your square loop\ninside another loop,
        we call that a nested loop. \\\r\n\\\r\nWhat do you need\nto add as an outer
        loop to make sure all 15 squares line up next to each other?"
      4-5 Artist Patterns 3: Maintenant, passons à un niveau plus approfondi ! Nous
        avons imbriqué tout ce bloc de code dans une autre boucle, mais tu dois remettre
        l'artiste en place pour dessiner la ligne suivante. Lequel de ces blocs de
        code peux-tu placer à la fin de la boucle ultrapériphérique pour dessiner
        la grille entière ?
      4-5 Artist Patterns 4: "This diamond has 50 pixel sides\nand angles of 120 and
        60 degrees. \\\r\n\\\r\nUse a loop to draw it."
      4-5 Artist Patterns 5: "Repeat this code to make a row\nof 6 diamonds. \\\r\n\\\r\nNotice
        that we changed our diamond code to repeat 3\ntimes instead of 2 - why do
        you think that is?"
      4-5 Artist Patterns 6: "How many times do you need to\nrepeat this block to
        draw the full grid of diamonds?\\\r\n\\\r"
      4-5 Artist Patterns 7: "Let's modify the code from the\nlast puzzle to make
        this more complex pattern. Notice how the diamonds overlap\nnow, try changing
        the first \"jump backwards\" from 100 to 50 (half as far)\n\n-   now how far
        should the artist go in the second \"jump backwards\"?\\\r\n    \\\r"
      4-5 Artist Patterns 8: Utilise une boucle pour dessiner cet hexagone avec des
        côtés de 40 pixels et des angles de 60 degrés.
      4-5 Artist Patterns 9.5: "Let's loop this code to draw\ntwo rows of hexagons.
        \\\r\n\\\r\nNotice how our second row is shifted to the\nright."
      4-5 Artist Patterns 9: 'Maintenant répète ce code 3 fois pour dessiner la rangée
        entière. Indice: chaque hexagone mesure 80 pixels de largeur à partir des
        points les plus éloignées à gauche et à droite.'
      4-5 Artist Patterns Free Play: Activité libre - essaie de faire ton propre motif
        !
      4-5 Bee Conditionals 1: "This cloud is blocking my view!\n\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud, and only get nectar\nif there's
        a flower.   \\\r\nBe careful, it can change!"
      4-5 Bee Conditionals 2: L'abeille veut seulement du nectar maintenant. Tous
        les objets ne sont pas des fleurs, alors vérifie sous CHAQUE NUAGE pour voir
        s’il s’y cache une fleur. Si c'est le cas, alors tu peux recueillir du nectar.
      4-5 Bee Conditionals 4: "Sometimes this cloud covers a\nflower, and sometimes
        it covers a honeycomb! \\\r\n\\\r\nUse the `if/else` block\nto collect nectar
        only if it is a flower.  \\\r\nElse, make honey (because it\nis a honeycomb)."
      4-5 Bee Conditionals 5: Il pourrait y avoir une fleur ou un gâteau de miel sous
        ces nuages. Utilise le bloc « Si/Sinon » pour récupérer le nectar si c'est
        une fleur, et le bloc « Sinon » pour fabriquer du miel (parce que c'est un
        gâteau de miel).
      4-5 Bee Conditionals 6: Cette fleur pourpre peut avoir 3, 2 ou 1 nectar(s).
        Ici un bloc «Si-Sinon» est associé à un autre bloc « Si-Sinon » pour créer
        un bloc « Si », « Si-Sinon », « Sinon ». Complète la solution pour recueillir
        la quantité inconnue de nectar.
      4-5 Bee Conditionals 7: N'oublie pas que les fleurs pourpres peuvent avoir 3,
        2 ou 1 nectar(s). Termine la fonction «Vérifier la fleur pourpre» et utilise-la
        pour recueillir tout le nectar des fleurs.
      4-5 Bee Conditionals 8: Écris à l'intérieur de la fonction «Vérifier la fleur
        et fabriquer du miel». Ta fonction doit vérifier si la fleur pourpre a 1,
        2 ou 3 nectars et recueillir l'ensemble du nectar. Ensuite, avance et fabrique
        du miel.
      4-5 Bee Conditionals Assessment 1: "**Assessment:** This\ncloud is either hiding
        a flower with one nectar or a honeycomb that needs\none honey.  \\\r\n\\\r\nComplete
        the `get nectar or make honey` function, then\ncall it to collect the nectar
        or honey. \\\r"
      4-5 Bee Debugging 1: Ces blocs-là me gênent vraiment. Peux-tu les réparer ?
      4-5 Bee Debugging 6: La fleur pourpre a une quantité inconnue de nectar. Répare
        les blocs pour obtenir tout le nectar de la fleur.
      4-5 Bee Debugging Assessment 1: "**Évaluation :** Corrige le code."
      4-5 Bee Nested Loops 2: "Collect all of the nectar from\neach flower. \\\r\n\\\r\nUse
        a nested loop. "
      4-5 Bee Nested Loops 4: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      4-5 Bee Nested Loops Assessment 1: Évaluation - Recueille tout le nectar et
        fabrique tout le miel en utilisant des boucles.
      4-5 Maze 7: "Get the zombie to the sunflower quickly!  \\\r\n\\\r\nCan\nyou
        solve the puzzle in fewer than 11 blocks?"
      4-5 Maze 9: Crée une boucle avec le bloc « Répéter jusqu’à ».
      4-5 Maze Assessment 1: "**Évaluation :** Va au tournesol en utilisant le moins
        de blocs possible."
      4-5 Maze Conditionals 1: Utilise le bloc « Répéter jusqu'à » pour amener le
        zombie au tournesol.
      4-5 Maze Conditionals 10: "Peux tu rajouter juste 3 blocs pour aider le zombie
        à résoudre un labyrinthe plus complexe ? \\\r \\\r Si tu le fais bien, il
        peut parcourir n'importe quel chemin sinueux peu importe la longueur!"
      4-5 Maze Conditionals 2: Utilise le bloc « Répéter jusqu'à » pour amener le
        zombie au tournesol.
      4-5 Maze Conditionals 3: "Use the `if` block to help me\ndecide when to turn.
        \\\r"
      4-5 Maze Conditionals 4: OK, c'est la même chose que le puzzle précédent, mais
        tu dois te rappeler comment tu as utilisé le bloc «Si» et le bloc « Répéter
        » ensemble.
      4-5 Maze Conditionals 5: Moi veux tournesol ! Utilise un bloc « Si » pour m'y
        amener avec le plus petit nombre de blocs possible.
      4-5 Maze Conditionals 6: Moi veux tournesol ! Utilise un bloc « Si » pour m'y
        amener avec le plus petit nombre de blocs possible.
      4-5 Maze Conditionals 7: OK, nous allons le refaire encore une fois pour nous
        entraîner - ce n'est pas très différent, mais attention aux plantes carnivores!
      4-5 Maze Conditionals 8: Le blocs « Si/Sinon » vérifie une condition et puis
        fait une chose OU une autre. Pour m'amener au tournesol, essaie d'utiliser
        ce nouveau bloc.
      4-5 Maze Conditionals 9: Encore un exercice avec le bloc « Si/Sinon » - peux-tu
        y arriver dès le premier essai?
      4-5 Maze Conditionals Assessment 1: Utilise un bloc « Répéter jusqu'à » et un
        bloc « Si/Sinon » pour m'amener au tournesol avec le plus petit nombre de
        blocs possible.
      4-5 Nested Loops 1: "Complete the code to draw these triangles.  The\nfirst
        one is done for you.  Hint:  3 triangles in a 360 degree rotation.\\\r\n\\\r"
      4-5 Nested Loops 11: "Can you draw these 10 squares of\nthis sidewalk using
        a nested loop? \\\r\n\\\r\nEach square is 30 pixels."
      4-5 Nested Loops 12: Peux-tu dessiner ces 36 triangles en utilisant une boucle
        imbriquée?
      4-5 Nested Loops 2: "Now nest this loop inside another\nloop to draw 10 triangles.
        \ \\\r\nThis is called a \"nested\" loop.  "
      4-5 Nested Loops 3: Crée un soleil en insérant le code de démarrage dans une
        autre boucle. C'est ce qu'on appelle une boucle imbriquée.
      4-5 Nested Loops 5: Insère le code fourni dans une boucle pour créer un moulin
        à vent.
      4-5 Nested Loops 6: Peux-tu dessiner un hexagone en bouclant le code du triangle
        ?
      4-5 Nested Loops 7: 'Boucle ce dessin 10 fois. De combien dois-tu tourner chaque
        fois que tu fais une boucle ? (Indice : combien fait 360 divisé par 10?)'
      4-5 Nested Loops 8: 'Boucle ce dessin 6 fois. De combien dois-tu tourner chaque
        fois que tu fais une boucle ? (Indice : combien fait 360 divisé par 6?)'
      4-5 Nested Loops 9: Dessine les dents dans la bouche de l'alligator !
      4-5 Nested Loops Assessment 1: "**Évaluation :** Utilise une boucle imbriquée
        pour terminer le dessin."
      4-5 While Loops 1: Déplace-moi vers le trou et remplis-le avec deux pelletées
        de terre, en utilisant le bloc «Remplir».
      4-5 While Loops 2: Déplace-moi vers le tas de terre et enlève-le en 5 coups
        de pelle, en utilisant le bloc «Supprimer».
      4-5 While Loops 3: 'Déplace-moi vers le tas et enlève-le entièrement, ensuite
        va vers le trou et remplis-le entièrement.  Indice :  essaie d’utiliser le
        moins de blocs possible.'
      4-5 While Loops 4: 'Wow, j''ai trouvé un trou vraiment profond ! Je ne sais
        pas combien de pelletées de terre il faudra pour le remplir.  Peux-tu écrire
        un programme qui le remplira jusqu’à ce que le sol soit nivelé ?  Indice :  essaie
        d''utiliser la boucle «Tant que» cette fois.'
      AWS applab: |-
        # Fait ceci maintenant

        -   étape une
        -   étape deux
      AWS link: "# Utilise cet outil pour des trucs"
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A': "<img\nalign=\"right\"
        src=\"https://code.org/images/cspunit1/letterA.png\" width=\"150\"\nhspace=\"20\">\\\r\n
        \           \\# Task 1: Make a 3x5 letter 'A'\\\r\n            Start\nby trying
        to recreate the 3x5 letter \"A\" depicted (at right) using the pixelation\nwidget.
        \\\r\n          \\\r\n            The image is intially setup with the\n_incorrect_
        dimensions. Your first task is to set the second byte to the 8-bit\nbinary
        code for 5: 0000 0101. Then you can start entering pixel data to make\nthe
        A.\\\r\n            "
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4': "# \n\nPixelation:
        Task 3\\\r\n<img src = \"https://code.org/images/cspunit1/ColorTask3.png\"\nalign=right
        width=200 hspace=20>\\\r\n**Directions:**\\\r\nWe start you out with\nthe
        4x4 image Maddie created in the video.\\\r\n\\\r\nYour task is to fill a 4x4\ngrid
        with colors using _12-bits per pixel_. The result should look something\nlike
        (but not exactly) the image shown at right.  \\\r\n\\\r\nHere are the requirements:\\\r\n\\\r\n\n-
        \  Row 1 - fill with shades of red. \\\r\n-   Row 2 - shades of green. \\\r\n-
        \  \\*\n    Row 3 - shades of blue. \\\r\n-   Row 4 - shades of gray.\\\r"
      AppLab Intro 1 - Add Button: "# Getting Started - Add\n\na button\\\r\n\\\r\nYou'll
        need a button on your home screen to go to your new\nscreen. You can make
        a new button in two ways. \\\r\n\\\r\n\n1.  If you like the\n    style of
        the \"Dogs\" button you can make a copy of it. Click the button and\n    then
        click \"Duplicate\".\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/171aa97d90014f66f999ecf929b672c0-image-1504289310310.08.10>\n
        \   AM.png>)\\\r\n    \\\r\n2.  You can also make a new button from scratch
        by dragging\n    it in from the Design Toolbox.\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/501c9ddd3e5b737df5b9cf053ae198a7-image-1504289359851.09.09>\n
        \   AM.png>)\\\r\n    \\\r\n3.  Click and drag to move your new button where
        you want it.\\\r\n    \\\r\n4.  3.\n    Once you have a new button give it
        a clear name, \"catButton\". You can also\n    change its text to read \"Cats!\".\\\r\n
        \   \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/87586b18b001fae0001d2243f6d09889-image-1504289448320.10.14>\n
        \   AM.png>)\\\r\n    \\\r\n5.  There's lots of other ways you can change
        the look\n    of your button. Experiment with the full menu of options.\\\r\n
        \   \\\r\n6.  Once you're\n    done run your app to make sure your button
        appears. Then click \"Finish\"\n    to move on to learn how to make your button
        actually work."
      AppLab Intro 1 - Add Event: "# Getting Started - onEvent\\\r\n\n\\\r\nYou're\nback
        in \"Code Mode\". You'll notice there's already a bit of code in this\napp.
        This `onEvent()` block runs some code when the `dogButton` is clicked.\nYou're
        going to need a second `onEvent()` block to make your button work.\nThere's
        two ways to do this.\\\r\n\\\r\n\n1.  From Code Mode you can drag in the\n
        \   block \\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/c1ca564880152242c3bf92b2b9ad4fca-image-1504290427563.26.56>\n
        \   AM.png>)\\\r\n    \\\r\n2.  From Design Mode your button has an \"Events\"
        tab.\n    Click 'Insert and show code' to add the code.\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/90d6c0cb723ee4317244f99dcfbd3a66-image-1504290568475.29.18>\n
        \   AM.png>)\\\r\n    \\\r\n3.  Use the drop down to make sure you're making
        the event\n    respond to the \"catButton\".\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/ebef61f18259a2fb0d8addb90d9d8ba4-image-1504290674099.31.03>\n
        \   AM.png>)\\\r\n    \\\r\n4.  The `setScreen()` block changes the screen.
        Drag this\n    block inside your `onEvent()` block and choose your `catScreen`
        from the list.\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/00433d32665ec6f2aa6a0caac2626568-image-1504290788639.33.02>\n
        \   AM.png>)\\\r\n    \\\r\n5.  Run your app. If everything worked correctly
        your cat\n    button should now take you to your cat screen when you click
        it. When you're\n    ready move on to learn how to add sounds to your app!"
      AppLab Intro 1 - Add Screen: "# Getting Started - Add\n\na cats screen\\\r\n\\\r\n\n1.
        \ You're going to make a cats screen. This is \"Design\n    Mode\" where you
        can add and edit screens. To add a screen click the screen\n    dropdown and
        select \"New screen\".\\\r\n    \\\r\n    \\\\t![expandable]\\(\\<<https://images.code.org/4e90c1d897ede63403a1351f5ec3bfae-image-1504288061907.47.33>\n
        \   AM.png>) \\\r\n    \\\r\n2.  Then name your new screen \"catScreen\".
        \\\r\n    \\\r\n    \\\\t![expandable]\\(\\<<https://images.code.org/966a2563aaf8a59a983fe6417d01dae9-image-1504288205242.49.33>\n
        \   AM.png>)\\\r\n    \\\r\n3.  Finally, choose the cats background image
        of your screen\\\r\n    \\\r\n    \\\\t![expandable]\\(\\<<https://images.code.org/ff8509146b8a249973498af63f41b08d-image-1504288758611.51.40>\n
        \   AM.png>)\\\r\n    \\\r\n    Once you have added your new screen hit \"Finish\"
        to learn\n    how to add buttons to navigate to the screen."
      AppLab Intro 1 - Add Sound: "# Getting Started - Add Sound\\\r\n\n\\\r\nApp\nLab
        can play sound too. You'll need to use the `playSound()` block to do\nit.\\\r\n\\\r\n\n1.
        \ Drag a `playSound()` block into your `onEvent`. This will make\n    the
        sound play when your user clicks the button. Then click \"Choose...\"\n    from
        the menu.\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/9c84293859317f7ae46391a28c5a51e7-image-1504291688560.47.41>\n
        \   AM.png>)\\\r\n    \\\r\n2.  Go through the \"Sound Library\" and find
        the sounds you\n    want. There's tons!\\\r\n    \\\r\n    \\\\t\\!\\[](\\<<https://images.code.org/5393762b4f31fa4f09040ca8b09ca91c-image-1504291692587.47.52>\n
        \   AM.png>)\\\r\n    \\\r\n3.  Run your app to check out how your sounds
        work."
      AppLab Intro 1 - Build Your Adventure: "# Build Your Adventure\\\r\n\n\\\r\nUse\nthis
        blank project to build your project. To get you started there's already\na
        home screen with a couple of buttons. If you want you can **quickly make\ncopies
        of screens** to build out your world. What will you create?!\\\r\n\\\r\nWhen\nyou're
        done you can \"Share\" your work with a friend by phone or with a\nlink. Create
        your own account to keep building in App Lab!"
      AppLab Intro 1 - Template: "# Getting Started - Try this\n\napp\\\r\n\\\r\nBefore
        you build your own Choose Your Own Adventure app, practice\nusing AppLab by
        building this one about a visit to a pet shop. To get started,\nclick \"Run\"
        and then navigate to the \"Dogs\" screen. Once you've made\nit there click
        \"Finish\" to move on."
      AppLab Intro 1 - Try App: "# Getting Started - Try this\n\napp\\\r\n\\\r\nBefore
        you build your own Choose Your Own Adventure app, practice\nusing AppLab by
        building this one about a visit to a pet shop. To get started,\nclick \"Run\"
        and then navigate to the \"Dogs\" screen. Once you've made\nit there click
        \"Finish\" to move on."
      AppLab Intro 2 - Edit place1 2: "Think about how you want\nyour adventure to
        continue on this screen. Then add some text to tell your\nstory!\\\r\n\\\r\n\n1.
        \ Use the screen selector to choose the screen you just made\n    ([Show me
        where](#triggercallout=selector))\\\r\n2.  Drag a new \"text area\"\n    onto
        your screen to add it. ([Show me where](#triggercallout=textArea))\\\r\n3.
        \ 3.\n    Drag the bottom right corner of your text area to change its size.\\\r\n4.
        \ Change\n    the text to tell your user what happens on this screen. Then
        change the color\n    of your text if you want!\\\r\n    \\\r\n    Click \"Run\"
        and then \"Finish\" to move\n    on.\\\r\n    \\\r\n    ![expandable](https://images.code.org/8ba0d4f0eccaf83163e86d10eec3a291-image-1505766539456.gif)\n
        \   Click to see a GIF of these steps"
      AppLab Intro 2 - Edit place1: "On the last screen you\ngave your character a
        choice between to actions or places. Pick one of them\nand start making a
        screen for it!\\\r\n\\\r\n\n1.  In the screen selector choose\n    \"New screen...\"
        ([Show me where](#triggercallout=selector))\\\r\n2.  Change\n    the \"id\"
        of the screen to something clear, for example the name of the new\n    location
        ([Show me where](#triggercallout=idChange))\\\r\n3.  You can switch\n    back
        and forth between your two screens from the screen selector. ([Show me\n    where](#triggercallout=selector))\\\r\n4.
        \ You can select the \"background-color\"\n    of your screen if you like.\\\r\n
        \   \\\r\n    Click \"Run\" and then \"Finish\" to move\n    on and start
        adding to your screen."
      AppLab Intro 2 - Edit startScreen: "Welcome to App Lab!\nRight now you're in
        **Design Mode** where you can personalize the look of\nyour app. Get your
        adventure started by picking a fun title!\\\r\n\\\r\n\n1.  Click\n    the
        title of your app. ([Show me where](#triggercallout=titleCallout))\\\r\n2.
        \ 2.\n    Change the \"text\" to pick whatever name you like! ([Show me where](#triggercallout=designMenu))\\\r\n3.
        \ 3.\n    Scroll down the menu to change the color of your title ([Show me
        where](#triggercallout=changeTextColor))\\\r\n    \\\r\n    Once\n    you
        like the look of your title hit \"Run\" once to make sure it's looking\n    good.
        Then hit \"Finish\" to move on!\\\r\n    \\\r\n    ![expandable](https://images.code.org/47c8fc2986226beaa39e382bc0759797-image-1505765264098.com-gif-maker.gif)\n
        \   Click here to see all three steps in a GIF"
      AppLab Intro 2 - Edit startScreen2: "Nice work! Time to\nstart filling in your
        story.\\\r\n\\\r\n\n1.  Click the story text on this screen.\n    ([Show me
        where](#triggercallout=storyText))\\\r\n2.  Fill in your story ([Show\n    me
        where](#triggercallout=editStoryText))\\\r\n3.  Explore the different properties\n
        \   you can change in the menu. Personalize this screen's look! ([Show me
        where](#triggercallout=changeTextColor))\\\r\n    \\\r\n    Hit\n    \"Run\"
        once to make everything looks good. Then hit \"Finish\" to move on!"
      AppLab Intro 2 - Template: "# Getting Started - Try this\n\napp\\\r\n\\\r\nBefore
        you build your own Choose Your Own Adventure app, practice\nusing AppLab by
        building this one about a visit to a pet shop. To get started,\nclick \"Run\"
        and then navigate to the \"Dogs\" screen. Once you've made\nit there click
        \"Finish\" to move on."
      AppLab Intro 2 - Try App: "\\<img src=\"<https://images.code.org/1f43ffc6a6da4c3a7644802cdbbff58b-image-1504737782528.jpg\">,\nstyle=\"float:right;width:200px\">\\\r\n\\\r\n\n#
        Getting Started - Try this app\\\r\n\n\\\r\nYou're\ngoing to build a \"Choose
        Your Own Adventure\" app by extending this project.\nTo get you started you
        already have the parts of your project outlined in\nblue. Hit \"Run\" and
        click through what's already been created for you.\n\\\r\n\\\r\nOnce you see
        how the project already works hit \"Finish\" to start\nmaking it yours."
      AppLab Intro 2 - Try Cat Commander: "This is what the\ncode for Cat Commander
        looks like. Take one minute to scroll through the code\nand see if you can
        understand how it works. Talk about it with a partner.\nWhat patterns do you
        see? \\\r\n\\\r\nOnce you're done, move on by clicking \"Run\"\nthen \"Finish\",
        to learn to build your own adventure."
      AppLab Intro 2 - add Button: "Now you have two screens,\nbut no way to get between
        them. Time to start adding buttons!\\\r\n\\\r\n\n1.  Use\n    the screen selector
        to go back to your \"startScreen\" ([Show me where](#triggercallout=selector))\\\r\n2.
        \ 2.\n    Drag a button onto the screen ([Show me where](#triggercallout=dragButton))\\\r\n3.
        \ 3.\n    Give your button a clear \"id\" that describes what it does ([Show
        me where](#triggercallout=changeButtonID))\\\r\n4.  4.\n    Change the \"text\"
        of your button to describe where it will take the user.\\\r\n5.  5.\n    Personalize
        your button's other properties like \"text color\" or \"background\n    color\".\\\r\n
        \   \\\r\n    Click \"Run\" then \"Finish\" to move on and start writing\n
        \   the code that will make your button work\\\r\n    \\\r\n    ![expandable](https://images.code.org/43f2678e4748a1fa09556f75cad65e97-image-1505766882756.gif)\n
        \   Click to see a GIF of all steps"
      AppLab Intro 2 - add images: "You now know everything\nyou need to make a simple
        Choose Your Own Adventure app, but you can add so\nmuch more! If you want
        to add images to your screen it's easy!\\\r\n\\\r\n1.\nIn another tab in your
        browser go online and find an image you want to use\\\r\n2.\nRight click the
        image and save its URL (usually \"Copy link address\" or \"Copy\nimage URL\")\\\r\n\n3.
        \ Back in App Lab go to Design Mode\\\r\n4.  Drag an \"image\"\n    element
        onto your screen\\\r\n5.  Paste the URL you copied into the \"image\"\n    property\\\r\n
        \   \\\r\n    \"Run\" your app once to test it. Then hit \"Finish\" to move\n
        \   to learn to add sounds.\\\r\n    \\\r\n    ![expandable](https://images.code.org/5b977b1c127b3fcb1761aadcb74c79e8-image-1505772215256.gif)\n
        \   Click to see GIF of all steps"
      AppLab Intro 2 - add more buttons 2: "Time to add a second\nbutton and write
        the code to make it work.\\\r\n\\\r\n\n1.  Drag a second button\n    onto
        your \"startScreen\" and give it a clear \"id\"\\\r\n2.  Change the text\n
        \   and color of your button\\\r\n3.  In Code Mode drag in a second `onEvent()`
        block\n    and drag a `setScreen()` inside of it\\\r\n4.  Set the \"id\"s
        of your `onEvent()`\n    and `setScreen()` blocks to the button and screens
        you added\\\r\n    \\\r\n    If everything\n    worked you should now have
        a second button that changes the screen. \"Run\"\n    your app and hit \"Finish\"
        if it worked.\\\r\n    \\\r\n    ![expandable](https://images.code.org/33d1a6d2dcc81ed8ecd0966d2f0682ca-image-1505770427380.gif)\n
        \   Click to see a GIF of all steps"
      AppLab Intro 2 - add more buttons: "If this is going to\nbe a real Choose Your
        Own Adventure, you're need to add some more choices!\nStart by adding a screen
        for the second choice your player could make.\\\r\n\\\r\n1.\nUse the screen
        selector to add a new screen. Give it a clear \"id\".\\\r\n2.\nSet the \"background
        color\" of your screen\\\r\n\n3.  Add a \"Text Area\" to your\n    screen
        describing what happens on it.\\\r\n    \\\r\n    Click \"Run\" then \"Finish\"\n
        \   to move on. You'll add another button and write the code to make it work.\\\r\n
        \   \\\r\n    ![expandable](https://images.code.org/f1c83578a245d832c94c78aeba6ef317-image-1505768404048.gif)\n
        \   Click to see a GIF of all steps"
      AppLab Intro 2 - add onEvent: "<img src=\"https://images.code.org/89a0cddfc305cb44a3d888c5de864d2e-image-1505423852271.17.02\nPM.png\"
        style=\"float:right;height:120px\">\\\r\n\\\r\nThis is Code Mode where\nyou
        write the code of your app. You're going to add code that looks like\nthis
        picture.\\\r\n\\\r\n\n1.  Click and drag an \"onEvent\" block into your workspace\n
        \   ([Show me where](#triggercallout=onEvent))\\\r\n2.  Use the left dropdown
        to\n    pick your button's ID\\\r\n3.  Click and drag a \"setScreen\" block
        inside the\n    \"onEvent\" block ([Show me where](#triggercallout=setScreen))\\\r\n4.
        \ Use the\n    dropdown to pick your new screen's ID\\\r\n    \\\r\n    Your
        app now switches screens!\n    Try it out yourself by hitting \"Run\". Then
        \"Finish\" to move on.\\\r\n    \\\r\n    ![expandable](https://images.code.org/b9970c3478dfb15e7531034d26fbcc40-image-1505767231404.gif)\n
        \   Click to see all steps in a GIF"
      AppLab Intro 2 - add sound: "<img src=\"https://images.code.org/3c1d6506a6a3c350380b921e08588a2b-image-1505429594117.52.37\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\nYou can add sound to your\napp
        too! Add them outside an `onEvent()` to play from the start of the adventure\n(good
        for background music) or inside an `onEvent()` to play when that button\nis
        clicked (good for \"Win\" / \"Lose\" sounds).\\\r\n\\\r\n\n1.  Drag a `playSound()`\n
        \   block into your program\\\r\n2.  Click the dropdown, then \"Choose...\",
        then\n    \"Sound Library\" to find the library of sounds built into App Lab\\\r\n3.
        \ Try\n    out the \"Background\" category for longer songs that will play
        for your entire\n    adventure.\\\r\n4.  Hit \"Choose\" to select the sound
        you like.\\\r\n5.  You can\n    also drag code inside an `onEvent` block to
        play sound only when an event\n    happens. Shorter sounds work better here.\\\r\n
        \   \\\r\n    Run your app. There should\n    be sound playing now too!"
      AppLab Intro 2 - finish and share: "Congrats on finishing\nyour Hour of Code!
        You can share your work with friends! Click \"Share\" to\nget a link or even
        text it to them.\\\r\n\\\r\nYou can keep working on your project\nhere. Whenever
        your friends go to the link you shared they'll get the latest\nversion you
        made. How far will you build your adventure?"
      AppLab Intro 3 - Change Screen Color: "Set the screen's\n`\"background-color\"`
        to `\"red\"`. Click the picture to see how. \\\r\n\\\r\n![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 3 - Change Text 2: "Give `\"label1\"` a `\"font-size:`\nof 40 and
        set its `\"text-color\"` to `\"blue\"`. Don't forget the double\nquote `\"`
        for colors. Click the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 3 - Change Text: "Make the `\"font-size\"`\nof `\"label1\"` even
        bigger. Click the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/6125888ad13353978132b19dfca8cc49-image-1505953367275.gif)"
      AppLab Intro 3 - Change Two Buttons: "Make the `\"background-color\"`\nof the
        left button `\"red\"` and the right one `\"blue\"`. Hover over a button\nwith
        your mouse to read its `\"id\"`. Click the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/d6418be215384e89872a72c2bd6d4a8a-image-1505875864576.gif)"
      AppLab Intro 3 - Full Text: "Set the `\"text\"` of this\nlabel to anything you
        want (for example `\"Hi there!\"`). Make sure you include\nthe double-quotes
        `\"`. Click the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/4e8549acbca3449cb336fe0ed495f8f3-image-1505878779849.gif)"
      AppLab Intro 3 - onEvent before: "Set the screen's `\"background-color\"`\nto
        `\"orange\"`. Then add code inside the `onEvent()` so the button will set\nthe
        screen's `\"background-color\"` to `\"pink\"`. Click the picture to see\nhow.\\\r\n\\\r\n![expandable](https://images.code.org/6c338185d7fe959daed2465c4f91fb55-image-1505888600472.gif)"
      AppLab Intro 3 - onEvent intro: "Blocks placed inside\nthe new `onEvent()` block
        will only run when you `\"click\"` the `\"bigButton\"`.\nAdd code so the button
        will make the screen's `\"background-color\"` turn\n`\"green\"`. Remember
        to use double-quotes `\"` for colors. Click the picture\nto see how.\\\r\n\\\r\n![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)"
      AppLab Intro 3 - onEvent mouseInOut: "Your program can\nuse multiple `onEvent()`
        blocks. The left button already sets both buttons'\n`\"background-color\"`
        to `\"purple\"`. Add code to make the right button\nset both buttons' `\"background-color\"`
        to `\"green\"`. Click the picture\nto see how.\\\r\n\\\r\n![expandable](https://images.code.org/5cd0c24b0f7f855daa2225a4b6a08087-image-1505932139152.gif)"
      AppLab Intro 3 - onEvent mouseOut: "The `\"mouseout\"`\nevent fires when your
        mouse moves out of a button. Write code that will set\nthe screen's `\"background-color\"`
        back to `\"black\"` and set the button's\n`\"text\"` to `\"Off!\"` when the
        mouse moves out of the button. Remember\nto use double quotes `\"`. Click
        the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/a3403900844f631cc2579539c8d68ed1-image-1505937421979.gif)"
      AppLab Intro 3 - onEvent mouseOver: "`\"click\"` is just\none type of event.
        `\"mouseover\"` events run when your mouse is over a button,\neven if you
        don't click it. Add code to set the `\"background-color\"` of\nthe screen
        to `\"black\"` when the mouse is over the `\"offButton\"`. Click\nthe picture
        to see how.\\\r\n\\\r\n![expandable](https://images.code.org/756e2c5ee19fd94963ca364fd46bcbd8-image-1505935772425.gif)"
      AppLab Intro 3 - onEvent twoButtons: "Your program can\nuse multiple `onEvent()`
        blocks. The left button already sets both buttons'\n`\"background-color\"`
        to `\"purple\"`. Add code to make the right button\nset both buttons' `\"background-color\"`
        to `\"green\"`. Click the picture\nto see how.\\\r\n\\\r\n![expandable](https://images.code.org/5cd0c24b0f7f855daa2225a4b6a08087-image-1505932139152.gif)"
      AppLab Intro 3 - playSound: "The `\"playSound()\"` block\nplays sounds. The
        `\"horseButton\"` already plays a horse sound. Add code\nto make the `\"duckButton\"`
        play a duck sound. Click the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/30e35a2c35ac309545d90af9330ba76d-image-1505939876315.gif)"
      AppLab Intro 3 - share and keep going: "Make a This or\nThat app. Decide what
        happens to the screen and text when the user clicks\neach button.\\\r\n\\\r\nWhen
        you're done with your app click \"Share\" at the\ntop to send it to a friend
        to play! Click the picture to see how to share.\\\r\n\\\r\n![expandable](https://images.code.org/c1d23a0288a42d48963053e0d9a1002e-image-1505943063546.gif)"
      AppLab Intro 3 - stopSound: "The `stopSound()` block stops\nall sounds. The
        `\"playButton\"` plays a very long sound. Add code to make\nthe `\"stopButton\"`
        stop all sounds. Click the picture to see how.\\\r\n\\\r\n![expandable](https://images.code.org/a5081cce1969c5a784b4440369706801-image-1505941723405.gif)"
      AppLab Intro 3 - thisOrThat: "Make a This or\nThat app. Decide what happens
        to the screen and text when the user clicks\neach button.\\\r\n\\\r\nWhen
        you're done with your app click \"Share\" at the\ntop to send it to a friend
        to play! Click the picture to see how to share.\\\r\n\\\r\n![expandable](https://images.code.org/c1d23a0288a42d48963053e0d9a1002e-image-1505943063546.gif)"
      AppLab Intro 4 - Change Screen Color: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/1c2a02a2caebbda2be4e537ab5087dcd-image-1506613875548.50.54\nAM.png\"
        style=\"height:150px\"> \r\n</div>\r\n\r\n**Goal:** Make the screen\n`\"red\"`.
        \r\n\r\n**How:** Drag in the block and hit \"Run\".\r\n\r\n**Show\nMe:** ![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 4 - Change Text 2: "<div style=\"float:right\">\r\n<img\nsrc=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29\nPM.png\"
        style=\"height:150px;\">\r\n</div>\r\n\r\n**Goal:** Make the text\nbigger
        and blue \r\n\r\n**How:**  Give `\"label1\"` a `\"font-size\"` of `80`\nand
        `\"text-color\"` of `\"blue\"`.\r\n\r\n**Show Me:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 4 - Change Text: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/7435f9effd46381a1d7d0c9078d6db78-image-1506554154216.15.23\nPM.png\"
        style=\"height:150px\">\r\n</div>\r\n\r\n**Goal:** Make the text\nbigger\r\n\r\n**How:**
        Drag in the block and then choose a bigger `\"font-size\"`\nof `\"label1\"`.\r\n\r\n**Show
        Me:** ![expandable](https://images.code.org/6125888ad13353978132b19dfca8cc49-image-1505953367275.gif)"
      AppLab Intro 4 - Change Two Buttons: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/a35a27104ec33f192971be1cd8d28a6a-image-1506617895943.57.33\nAM.png\"
        style=\"height:150px\">\r\n</div>\r\n\r\n**Goal:** Make the buttons\n`\"red\"`
        and `\"blue\"`\r\n\r\n**How:** Hover over the buttons with your\nmouse to
        read its `\"id\"`. Then set the `\"background-color\"` of each block\r\n\r\n**Show\nMe:**
        ![expandable](https://images.code.org/d6418be215384e89872a72c2bd6d4a8a-image-1505875864576.gif)"
      AppLab Intro 4 - Full Text: "<div style=\"float:right\">\\\r\n<img\nsrc=\"https://images.code.org/9109abf972acc093fd591eb56619aee5-image-1506617570302.52.18\nAM.png\"
        style=\"height:150px\">\\\r\n</div>\\\r\n\\\r\n**Goal:** Change the words\non
        the screen\\\r\n\\\r\n**How:** Set the `\"text\"` of the label to anything\nyou
        want, like `\"My app is uh-mazing!`\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/4e8549acbca3449cb336fe0ed495f8f3-image-1505878779849.gif)</details>\\\r\n\\\r"
      AppLab Intro 4 - onEvent before: "<img src=\"https://images.code.org/d1d4126613db6bc3db331d47eecf0748-image-1506619589642.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n**Goal:**
        The screen starts as\n`\"orange\"`. The button turns the screen `\"pink\"`.\\\r\n\\\r\n**How:**
        Before\nthe `onEvent()` set the screen's `\"background-color\"` to `\"orange\"`.\nInside
        the `onEvent()` set it to `\"pink\"`.\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/6c338185d7fe959daed2465c4f91fb55-image-1505888600472.gif)"
      AppLab Intro 4 - onEvent intro: "<img src=\"https://images.code.org/d793e711e9e2ea74f68cebf228fcb360-image-1506618780451.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n**Goal:**
        The screen turns `\"green\"`\nwhen you click the button\\\r\n\\\r\n**How:**
        Add code inside the `\"onEvent\"`\nthat sets the screen's `\"background-color\"`
        to `\"green\"`.\\\r\n\\\r\n**Show\nMe:** ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)"
      AppLab Intro 4 - onEvent mouseOver: "`\"click\"` is just\none type of event.
        `\"mouseover\"` events run when your mouse is over a button,\neven if you
        don't click it. Add code to set the `\"background-color\"` of\nthe screen
        to `\"black\"` when the mouse is over the `\"offButton\"`. Click\nthe picture
        to see how.\\\r\n\\\r\n![expandable](https://images.code.org/756e2c5ee19fd94963ca364fd46bcbd8-image-1505935772425.gif)"
      AppLab Intro 4 - onEvent twoButtons: "<img src=\"https://images.code.org/624964d54e36fe248f91f08563a57c4b-image-1506620778039.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n**Goal:**
        The right button makes\nboth buttons `\"green\"`\\\r\n\\\r\n**How:** Add a
        second `onEvent()` below the\nfirst. Set the `\"id\"` to `\"rightButton\"`.
        Inside it add code that changes\nboth buttons' `\"background-color\"`\\\r\n\\\r\n**Show
        Me:** ![expandable](https://images.code.org/5cd0c24b0f7f855daa2225a4b6a08087-image-1505932139152.gif)"
      AppLab Intro 4 - playSound: "**Goal:** The right button\nplays a duck sound\\\r\n\\\r\n**How:**
        The `playSound()` block plays sounds. Add\nan `onEvent()` for the right button
        and use the `playSound()` block inside\nit.\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/30e35a2c35ac309545d90af9330ba76d-image-1505939876315.gif)"
      AppLab Intro 4 - stopSound: "**Goal:** The right button\nstops all sound\\\r\n\\\r\n**How:**
        Add an `onEvent()` for the right button and\nuse the `stopSound()` block inside
        it.\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/a5081cce1969c5a784b4440369706801-image-1505941723405.gif)"
      AppLab Intro 4 - thisOrThat design: "**Goal:** Try out\nDesign Mode to keep
        making changes to your This or That App. There's also\nsome new blocks in
        your toolbox! You'll learn more about these in later lessons.\\\r\n\\\r\n**How:**\nClick
        into \"Design\" to quickly edit how your app looks or add screen elements\nyourself.
        Experiment with some of the new blocks in the toolbox."
      AppLab Intro 4 - thisOrThat template: "**Goal:** Try out\nDesign Mode to keep
        making changes to your This or That App. You'll learn\nmore in later lessons.\\\r\n\\\r\n**How:**
        Click into \"Design\" to quickly edit\nhow your app looks or add screen elements
        yourself."
      AppLab Intro 4 - thisOrThat: "**Goal:** Make a \"This\nor That\" app, then share
        it with friends\\\r\n\\\r\n**How:** You know how to\nuse `\"background-color\"`,
        `\"font-size\"`, `\"text-color\"`, `\"text\"`,\n`playSound()`, and `onEvent()`.
        Use them to set the look of your app and make\nit change when your user clicks
        the buttons. Click \"Share\" to send it to\na friend.\\\r\n\\\r\n**Show Me:**
        ![expandable](https://images.code.org/c1d23a0288a42d48963053e0d9a1002e-image-1505943063546.gif)"
      AppLab Intro 5 - Change Screen Color: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/1c2a02a2caebbda2be4e537ab5087dcd-image-1506613875548.50.54\nAM.png\"
        style=\"height:150px\"> \r\n</div>\r\n\r\n**Goal:** Make the screen\n`\"red\"`.
        \r\n\r\n**How:** Drag in the block, change the color, then hit\n\"Run\"\r\n\r\n**Show
        Me:** ![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 5 - Change Text 2: "<div style=\"float:right\">\r\n<img\nsrc=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29\nPM.png\"
        style=\"height:150px;\">\r\n</div>\r\n\r\n**Goal:** Make the text\nbigger
        and blue \r\n\r\n**How:**  Give `\"label1\"` a `\"font-size\"` of `80`\nand
        `\"text-color\"` of `\"blue\"`.\r\n\r\n**Show Me:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 5 - Change Text: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/7435f9effd46381a1d7d0c9078d6db78-image-1506554154216.15.23\nPM.png\"
        style=\"height:150px\">\r\n</div>\r\n\r\n**Goal:** Make the text\nbigger\r\n\r\n**How:**
        Drag in the block and then choose a bigger `\"font-size\"`\nof `\"label1\"`.\r\n\r\n**Show
        Me:** ![expandable](https://images.code.org/6125888ad13353978132b19dfca8cc49-image-1505953367275.gif)"
      AppLab Intro 5 - Change Two Buttons: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/a35a27104ec33f192971be1cd8d28a6a-image-1506617895943.57.33\nAM.png\"
        style=\"height:150px\">\r\n</div>\r\n\r\n**Goal:** Make the buttons\n`\"red\"`
        and `\"blue\"`\r\n\r\n**How:** Hover over the buttons with your\nmouse to
        read its `\"id\"`. Then set the `\"background-color\"` of each block\r\n\r\n**Show\nMe:**
        ![expandable](https://images.code.org/d6418be215384e89872a72c2bd6d4a8a-image-1505875864576.gif)"
      AppLab Intro 5 - Full Text: "<div style=\"float:right\">\\\r\n<img\nsrc=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19\nAM.png\"
        style=\"height:200px\">\\\r\n</div>\\\r\n\\\r\n**Goal:** Change the words\non
        the screen and the colors of the buttons.\\\r\n\\\r\n**How:** Set the `\"text\"`\nof
        the label to anything you want, like `\"Welcome to my app!\"`. Then set\nthe
        `\"background-color\"` of the buttons.\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/709ff200e5b5f553b24d1d0a769db6ed-image-1507565545993.gif)"
      AppLab Intro 5 - addButton: "**Goal:** Add a right arrow\nto the screen for
        switching the next image. In the next level you'll make\nit work.\\\r\n\\\r\n**How:**
        Use Design Mode to drag in an `\"image\"` element.\nThe icon library has many
        different arrows to choose from. \\\r\n\\\r\n**Show\nMe:** ![expandable](https://images.code.org/066245e52135c038502620a19f961667-image-1507570682956.gif)"
      AppLab Intro 5 - onEvent intro: "<img src=\"https://images.code.org/d793e711e9e2ea74f68cebf228fcb360-image-1506618780451.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n**Goal:**
        The screen turns `\"green\"`\nwhen you click the button\\\r\n\\\r\n**How:**
        Add code inside the `\"onEvent\"`\nthat sets the screen's `\"background-color\"`
        to `\"green\"`.\\\r\n\\\r\n**Show\nMe:** ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)"
      AppLab Intro 5 - onEvent twoButtons: "<img src=\"https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        Complete this flashlight\napp. The right button should switch the make the
        screen `\"black\"` and the\ntext `\"white\"`\\\r\n\\\r\n**How:** Add a second
        `onEvent()` block below the\nfirst. Then set the `\"background-color\"` of
        the screen and `\"text-color\"`\nof the label.\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/64c83d66a723eae01d09e4aea38fbad1-image-1507567249833.gif)"
      AppLab Intro 5 - playSound: "<img src=\"https://images.code.org/cdc81e79687693db50383a41894d6679-image-1507566452258.26.22\nAM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Add two more\nanimals
        to the sound board.\\\r\n\\\r\n**How:** You'll need to add two `onEvent()`\nblocks
        to the program. Then use `playSound()` inside them.\\\r\n\\\r\n**Show Me:**\n![expandable](https://images.code.org/b0f254d319f788f832553648db6fb13c-image-1507566138094.gif)"
      AppLab Intro 5 - rate it app: "<img src=\"https://images.code.org/74c675e72f33fa368057d7b783e50e31-image-1507568235560.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        Complete this simple\nprofile. Set the user name. Choose a main image. When
        you click the heart\nit should switch to a filled in heart icon and turn red.\\\r\n\\\r\n**How:**
        You'll\nneed to use the `\"image\"` property.\\\r\n\\\r\n**Show Me:** ![expandable](https://images.code.org/217e10ec9ac91037b80b963fab299a60-image-1507568801064.gif)"
      AppLab Intro 5 - setScreen: "**Goal:** Write code to let\nthe user switch to
        your second screen.\\\r\n\\\r\n**How:** Add an `onEvent()`\nfor the button
        you just created. Use `setScreen()` to switch between screens.\\\r\n\\\r\n**Show\nMe:**
        ![expandable](https://images.code.org/9ac5102ec678c1ecd0278446560ba617-image-1507571425597.gif)"
      AppLab Intro 5 - share keep going: "**Goal:** Share your\napp with someone,
        or just send it to yourself! Then keep building it out!\\\r\n\\\r\n**How:**\nClick
        \"Share\" to find lots of ways to share your app. Here's some ideas\nto try\\\r\n\\\r\n\n-
        \  Add a button that takes you back from `\"screen2\"` to `\"screen1\"`\\\r\n-
        \  \\*\n    Add more screens with more images\\\r\n-   Add more types of reaction
        buttons\n    that users can click"
      AppLab Intro 5 - socialTemplate: "**Goal:** Add a button\nto the screen for
        scrolling to the next image. Give it a good icon, like a\nright arrow. In
        the next level you'll make it work.\\\r\n\\\r\n**How:** Use Design\nMode to
        drag in a button. The icon library has many different arrows to choose\nfrom.
        Don't forget you can search for them.\\\r\n\\\r\n**Show Me:** "
      AppLab Intro 6 - Change Screen Color: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/1c2a02a2caebbda2be4e537ab5087dcd-image-1506613875548.50.54\nAM.png\"
        style=\"height:150px\"> \r\n</div>\r\n\r\n**Goal:** Make the screen\n`\"red\"`.
        \r\n\r\n**How:** Drag in the block, change the color, then hit\n\"Run\"\r\n\r\n**Stuck?
        Click here** ![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 6 - Change Text 2: "<div style=\"float:right\">\r\n<img\nsrc=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29\nPM.png\"
        style=\"height:150px;\">\r\n</div>\r\n\r\n**Goal:** Make the text\nbigger
        and blue \r\n\r\n**How:**  Give `\"label1\"` a `\"font-size\"` of `80`\nand
        `\"text-color\"` of `\"blue\"`.\r\n\r\n**Stuck? Click here:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 6 - Full Text: "<div style=\"float:right\">\\\r\n<img\nsrc=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19\nAM.png\"
        style=\"height:200px\">\\\r\n</div>\\\r\n\\\r\n**Goal:** Change the words\non
        the screen and the colors of the buttons.\\\r\n\\\r\n**How:** Set the `\"text\"`\nof
        the label to anything you want, like `\"Welcome to my app!\"`. Then set\nthe
        `\"background-color\"` of the buttons.\\\r\n\\\r\n**Stuck? Click here:** ![expandable](https://images.code.org/709ff200e5b5f553b24d1d0a769db6ed-image-1507565545993.gif)"
      AppLab Intro 6 - animalSoundBoard: "**Goal:** Keep building\nout the Animal
        Sound board. Then make sure to \"Share\" it.\\\r\n\\\r\n**How:**\nAdd new
        buttons for more animals. Or make the soundboard for a totally different\ntopic
        entirely!"
      AppLab Intro 6 - blankApp: "**Goal:** This is a completely\nblank App Lab App.
        Build whatever you want from scratch!?\\\r\n\\\r\n**How:**\nYou're in control
        here. You decide what you want to make!"
      AppLab Intro 6 - onEvent intro: "<img src=\"https://images.code.org/d793e711e9e2ea74f68cebf228fcb360-image-1506618780451.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n**Goal:**
        The screen turns `\"green\"`\nwhen you click the button\\\r\n\\\r\n**How:**
        Add code inside the `\"onEvent\"`\nthat sets the screen's `\"background-color\"`
        to `\"green\"`.\\\r\n\\\r\n**Stuck?\nClick here:** ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)"
      AppLab Intro 6 - onEvent twoButtons: "<img src=\"https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        Complete this flashlight\napp. The right button should switch the make the
        screen `\"black\"` and the\ntext `\"white\"`\\\r\n\\\r\n**How:** Add a second
        `onEvent()` block below the\nfirst. Then set the `\"background-color\"` of
        the screen and `\"text-color\"`\nof the label.\\\r\n\\\r\n**Stuck? Click here:**
        ![expandable](https://images.code.org/64c83d66a723eae01d09e4aea38fbad1-image-1507567249833.gif)"
      AppLab Intro 6 - playSound Template: "<img src=\"https://images.code.org/2bb21cff40cc9823a4ae370895de2953-image-1508294971111.49.16\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Add an animal\nto
        the sound board. If you don't want to find a picture of your animal then\nchange
        the color of the speaker icon to one you like.\\\r\n\\\r\n**How:** Add\nan
        `onEvent()` and use `playSound()` inside of it. Find an animal sound you\nlike
        in the sound library. For the picture you can either upload an image\nyou
        find online and change the button's `\"image\"` property, or just change\nthe
        `\"icon-color\"`. \\\r\n\\\r\n**Stuck? Click here:** ![expandable](https://images.code.org/b0f254d319f788f832553648db6fb13c-image-1507566138094.gif)"
      AppLab Intro 6 - playSound: "<img src=\"https://images.code.org/2bb21cff40cc9823a4ae370895de2953-image-1508294971111.49.16\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Add an animal\nto
        the sound board. If you don't want to find a picture of your animal then\nchange
        the color of the speaker icon to one you like.\\\r\n\\\r\n**How:** Add\nan
        `onEvent()` and use `playSound()` inside of it. Find an animal sound you\nlike
        in the sound library. For the picture you can either upload an image\nyou
        find online and change the button's `\"image\"` property, or just change\nthe
        `\"icon-color\"`. \\\r\n\\\r\n**Stuck? Click here:** ![expandable](https://images.code.org/80b30e5bd85dd5430e2c375568d53580-image-1508432171734.gif)"
      AppLab Intro 6 - quizApp: "**Goal:** Build out three questions\nin this Quiz
        App. You can always make more questions by duplicating screens.\nThen send
        it to a friend!\\\r\n\\\r\n**How:** Run the app first and try clicked\nall
        the buttons to see how it works. Then from Design Mode you can change\nthe
        default text for the questions and buttons. In Code mode create response\ntext
        for when the user clicks the different buttons. Customize the colors\nor add
        images if you want too!"
      AppLab Intro 6 - thisOrThatAddButton Template: "**Goal:**\nAdd a second button
        to the screen that says \"Right!\"\\\r\n\\\r\n**How:** In\nDesign Mode drag
        in a new button. Position and resize it. Then set its `\"text\"`,\n`\"background
        color\"`, and `\"font size\"`\\\r\n\\\r\n**Show Me:** "
      AppLab Intro 6 - thisOrThatAddButton: "<img src=\"https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Add a second\nbutton
        to the screen that says \"Right!\"\\\r\n\\\r\n**How:** In Design Mode drag\nin
        a new button. Position and resize it. Then set its `\"text\"`, `\"background\ncolor\"`,
        and `\"font size\"`\\\r\n\\\r\n**Stuck? Click here:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)"
      AppLab Intro 6 - thisOrThatAddScreen: "<img src=\"https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Create a new\nscreen
        called `\"rightScreen\"`. Add a short text label to the screen.\\\r\n\\\r\n**How:**\nIn
        Design Mode add a new screen. Change its `\"id\"` to be `\"rightScreen\"`.\nThen
        drag a label onto the screen with a short message to your user. You can\nalso
        duplicate the `\"leftScreen\"` to do this.\\\r\n\\\r\n**Stuck? Click here:**\n![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)"
      AppLab Intro 6 - thisOrThatPersonalize: "<img src=\"https://images.code.org/762507aef26d512f820c42fb2e7fc6f1-image-1508386296370.11.19\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Start building\nyour
        own \"Choose Your Own Adventure\" app. Don't forget to \"Share\" it\nwith
        someone!\\\r\n\\\r\n**How:** Choose the basic story you want to tell, like\nwho
        your character is and the setting. Then change the text and images of\nyour
        app to match the story. You can always add more screens as you keep building\nout
        your adventure.\\\r\n\\\r\n\n<details><summary><b>Stuck? Click here for some\nideas</b></summary>\\\r\n\\\r\n<li>Make
        an adventure about your favorite fictional\ncharacter</li>\\\r\n<li>Make an
        adventure about a famous (or not-so-famous person)\nyou're a big fan of</li>\\\r\n<li>Make
        an adventure that has a lot of unexpected\ntwists or has a difficult moral
        choice</li>\\\r\n\\\r\n</details>"
      AppLab Intro 6 - thisOrThatSetScreen: "<img src=\"https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop\n(1).gif\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** The screen\nswitches
        to `\"rightScreen\"` when the user clicks the \"Right!\" button.\\\r\n\\\r\n**How:**\nIn
        Code Mode add a new `onEvent()` to your program for your \"Right!\" button.\nAdd
        a `setScreen()` block inside of it that switches screens to `\"thatScreen\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)"
      AppLab Intro 7 - Change Screen Color: "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54\nAM.png\"
        style=\"height:150px\"> \r\n</div>\r\n\r\n**Goal:** Make the screen\ngreen.
        \r\n\r\n**How:** Drag in a `setProperty()` block. Use the dropdowns\nto set
        the screen's `\"background-color\"` to `\"green\"`. Then hit \"Run\"\r\n\r\n**Stuck?\nClick
        here** ![expandable](https://images.code.org/817990cbff035c9960b84a4b228ecaba-image-1508521071643.gif)"
      AppLab Intro 7 - Change Text 2: "<div style=\"float:right\">\\\r\n<img\nsrc=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29\nPM.png\"
        style=\"height:150px;\">\\\r\n</div>\\\r\n\\\r\n**Goal:** Make the text\nbigger
        and blue.\\\r\n\\\r\n**How:**  You'll need two lines of code. Give `\"label1\"`\na
        `\"font-size\"` of `80` and `\"text-color\"` of `\"blue\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 7 - Full Text: "<div style=\"float:right\">\r\n<img\nsrc=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19\nAM.png\"
        style=\"height:200px\">\r\n</div>\r\n\r\n**Goal:** Make the buttons\n`\"red\"`
        and `\"blue\"`. Then change the text in the large orange label.\r\n\r\n**How:**\n\r\n*
        Set the `\"text\"` property of the label to anything you want, like\n`\"Welcome
        to my app!\"`.\r\n* Set the `\"background-color\"` of the buttons\nto `\"blue\"`
        and `\"red\"`\r\n* Remember you can hover over elements to see\ntheir `\"id\"`\r\n\r\n**Stuck?
        Click here:** ![expandable](https://images.code.org/709ff200e5b5f553b24d1d0a769db6ed-image-1507565545993.gif)"
      AppLab Intro 7 - onEvent intro: "<img src=\"https://images.code.org/8ac2e62d8940bfbe6e3a8ffdb94dd43b-image-1509043765361.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        The screen will start\nout blue. Add code so it turns green when you click
        the \"Green-ify\" button.\\\r\n\\\r\n**How:**\nAdd code inside the `\"onEvent\"`
        that sets the screen's `\"background-color\"`\nto `\"green\"`.\\\r\n\\\r\n**Stuck?
        Click here:** ![expandable](https://images.code.org/da6f9467a7da28efcbbe2f18a7d4721f-image-1509043778833.gif)"
      AppLab Intro 7 - onEvent twoButtons: "<img src=\"https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        Help finish this flashlight\napp. The \"On\" button already turns the screen
        white. Run the app and try\nit out. Then write code so the \"Off\" button
        makes the screen black again.\\\r\n\\\r\n**How:**\nAdd code inside the empty
        `onEvent()` that sets the `\"background-color\"`\nof the screen to `\"black\"`
        and `\"text-color\"` of the label to `\"white\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/64c83d66a723eae01d09e4aea38fbad1-image-1507567249833.gif)"
      AppLab Intro 7 - playSound: "<img src=\"https://images.code.org/2bb21cff40cc9823a4ae370895de2953-image-1508294971111.49.16\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** This sound board\napp
        is almost done! Add an image, text, and sound to the bottom right button.\\\r\n\\\r\n**How:**\nAdd
        an `onEvent()` below the others and use `playSound()` inside of it. Choose\nany
        animal sound you like from the library. Use `setProperty()` to set the\n`\"image\"`
        property of the button to either an image or icon of your choosing.\nFinally,
        set the `\"text\"` with a second `setProperty()`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/d33c2d008b3f03f7a9775a4a3a1bbfcf-image-1509047489327.gif)"
      AppLab Intro 7 - thisOrThatAddButton: "<img src=\"https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Add a second\nbutton
        to the screen that says \"Right!\" with an `\"id\"` of `\"rightButton\"`.\\\r\n\\\r\n**How:**\nIn
        Design Mode drag in a new button. Position and resize it. Then set its\n`\"id\"`,
        `\"text\"`, `\"background color\"`, and `\"font size\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)"
      AppLab Intro 7 - thisOrThatAddScreen: "<img src=\"https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Create a new\nscreen
        called `\"rightScreen\"`. Add a text label that says \"You went right!\".\\\r\n\\\r\n**How:**\nIn
        Design Mode drag in a new screen element. Change its `\"id\"` to `\"rightScreen\"`.\nThen
        drag a label onto the screen and change the text to \"You went right!\".\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)"
      AppLab Intro 7 - thisOrThatPersonalize: "<img src=\"https://images.code.org/fe6ff9b7605128f999e727487d87908b-image-1510169816629.35.34\nAM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Start building\nyour
        own \"Choose Your Own Adventure\" app. Don't forget to \"Share\" it\nwith
        someone!\\\r\n\\\r\n**How:** Choose the basic story you want to tell, like\nwho
        your character is and the setting. Then change the text and images of\nyour
        app to match the story. You can always add more screens as you keep building\nout
        your adventure.\\\r\n\\\r\n\n<details><summary><b>Stuck? Click here for some\nideas</b></summary>\r\n\r\n<li>Make
        an adventure about your favorite fictional\ncharacter</li>\r\n<li>Make an
        adventure about a famous (or not-so-famous person)\nyou're a big fan of</li>\r\n<li>Make
        an adventure that has a lot of unexpected\ntwists or has a difficult moral
        choice</li>\r\n\r\n</details>"
      AppLab Intro 7 - thisOrThatSetScreen: "<img src=\"https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop\n(1).gif\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** The screen\nswitches
        to `\"rightScreen\"` when the user clicks the `\"rightButton\"`.\\\r\n\\\r\n**How:**\nIn
        Code Mode add a new `onEvent()` to your program for your \"Right!\" button.\nAdd
        a `setScreen()` block inside of it that switches screens to `\"rightScreen\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)"
      Artist Autorun Test: Utilise le bloc « Répéter » pour dessiner ces 3 carrés.
      Artist Inspiration: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\\\r\n\\\r\nNotice:\nWe've
        used the `set alpha` block to make the \"petals\" fade toward the outside."
      Bergeron Robot Maze1: "Can you help me catch the naughty\npig? \\\r\n\\\r\nStack
        a couple of `move forward` blocks below the `when run`\nblock and press \"Run\". "
      CSD U2 CSS explore CSS: "<div style=\"float: right; height:\n250px; width: 40%;
        overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I switch between files?**</summary>\\\r\nClick\nthe name of the file you
        want to look at in the menu on the left side of the\nscreen.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#
        Adding Style\\\r\n\\\r\nThis Web Lab\nproject is using a new language to add
        style to the page. With a partner explore\nboth the `index.html` and `style.css`
        files. Be ready to discuss the following\nquestions.\\\r\n\\\r\n* What changes
        is this new language making to the page?\\\r\n*\nHow is this language different
        from HTML?\\\r\n* How are the `index.html` and\n`style.css` files connected?"
      CSD U2 CSS explore CSS_2018: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I switch between files?**</summary>\\\r\nClick\nthe name of the file you
        want to look at in the menu on the left side of the\nscreen.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#
        Adding Style\\\r\n\\\r\nThis Web Lab\nproject is using a new language to add
        style to the page. With a partner explore\nboth the `index.html` and `style.css`
        files. Be ready to discuss the following\nquestions.\\\r\n\\\r\n* What changes
        is this new language making to the page?\\\r\n*\nHow is this language different
        from HTML?\\\r\n* How are the `index.html` and\n`style.css` files connected?"
      CSD U2 CSS explore CSS_2019: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I switch between files?**</summary>\\\r\nClick\nthe name of the file you
        want to look at in the menu on the left side of the\nscreen.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#
        Adding Style\\\r\n\\\r\nThis Web Lab\nproject is using a new language to add
        style to the page. With a partner explore\nboth the `index.html` and `style.css`
        files. Be ready to discuss the following\nquestions.\\\r\n\\\r\n* What changes
        is this new language making to the page?\\\r\n*\nHow is this language different
        from HTML?\\\r\n* How are the `index.html` and\n`style.css` files connected?"
      CSD U2 Debugging 1: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nComputer\ncode
        is written by humans, and all humans make mistakes. Part of being a good\ncomputer
        scientist is finding your mistakes and fixing them. In computer science\nwe
        call mistakes **bugs**. The process of finding and fixing those bugs is\ncalled
        **debugging**.  Over the next couple levels you are going to work on\nyour
        debugging skills.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56\nAM.png\"
        style=\"float:right;border:black solid 5px;\">\\\r\n\\\r\n* Look at the\nweb
        page code, and discuss with your partner what is causing the following\ntwo
        bugs:\\\r\n\\\\t* The heading is not big enough.\\\r\n\\\\t* The second item
        on\nthe list doesn't have a number.\\\r\n* Fix all the bugs in the code so
        that\nthe final result matches the image on the right.\\\r"
      CSD U2 Debugging 1_2018: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n</div>\r\n\r\nComputer\ncode
        is written by humans, and all humans make mistakes. Part of being a good\ncomputer
        scientist is finding your mistakes and fixing them. In computer science\nwe
        call mistakes **bugs**. The process of finding and fixing those bugs is\ncalled
        **debugging**.  Over the next couple levels you are going to work on\nyour
        debugging skills.\r\n\r\n# Do This\r\n\r\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56\nAM.png\"
        style=\"float:right;border:black solid 5px;\">\r\n\r\n* Look at the\nweb page
        code, and discuss with your partner what is causing the following\ntwo bugs:\r\n\\t*
        The heading is not big enough.\r\n\\t* The second item on\nthe list doesn't
        have a number.\r\n* Fix all the bugs in the code so that\nthe final result
        matches the image on the right.\r"
      CSD U2 Debugging 1_2019: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n</div>\r\n\r\nComputer\ncode
        is written by humans, and all humans make mistakes. Part of being a good\ncomputer
        scientist is finding your mistakes and fixing them. In computer science\nwe
        call mistakes **bugs**. The process of finding and fixing those bugs is\ncalled
        **debugging**.  Over the next couple levels you are going to work on\nyour
        debugging skills.\r\n\r\n# Do This\r\n\r\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56\nAM.png\"
        style=\"float:right;border:black solid 5px;\">\r\n\r\n* Look at the\nweb page
        code, and discuss with your partner what is causing the following\ntwo bugs:\r\n\\t*
        The heading is not big enough.\r\n\\t* The second item on\nthe list doesn't
        have a number.\r\n* Fix all the bugs in the code so that\nthe final result
        matches the image on the right.\r"
      CSD U2 Debugging 2: "# Debugging\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nMore\ndebugging
        practice!  This page is a little more challenging to debug than\nthe last
        one.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38\nAM.png\"
        style=\"float:right;border:5px black solid;width:250px\">\\\r\n\\\r\n*\nDiscuss
        with your partner what you think the bugs are in this page.\\\r\n* Find\nand
        fix all the bugs so that your page matches the one on the right."
      CSD U2 Debugging 2_2018: "# Debugging\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n</div>\r\n\r\nMore\ndebugging
        practice!  This page is a little more challenging to debug than\nthe last
        one.\r\n\r\n# Do This\r\n\r\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38\nAM.png\"
        style=\"float:right;border:5px black solid;width:250px\">\r\n\r\n*\nDiscuss
        with your partner what you think the bugs are in this page.\r\n* Find\nand
        fix all the bugs so that your page matches the one on the right."
      CSD U2 Debugging 2_2019: "# Debugging\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n</div>\r\n\r\nMore\ndebugging
        practice!  This page is a little more challenging to debug than\nthe last
        one.\r\n\r\n# Do This\r\n\r\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38\nAM.png\"
        style=\"float:right;border:5px black solid;width:250px\">\r\n\r\n*\nDiscuss
        with your partner what you think the bugs are in this page.\r\n* Find\nand
        fix all the bugs so that your page matches the one on the right."
      CSD U2 Debugging 3: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n<details>\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\r\n</details>\r\n</div>\r\n\r\nThis\npage
        has images in it. Images make finding bugs a little more tricky. Can\nyou
        debug this page?\r\n\r\n# Do This\r\n\r\n* Discuss with your partner what\nis
        causing the bugs in this page.\r\n* Fix the bugs so that your page matches\nthe
        target page shown below.\r\n\r\n![](https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24\nAM.png)"
      CSD U2 Debugging 3_2018: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n<details>\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\r\n</details>\r\n</div>\r\n\r\nThis\npage
        has images in it. Images make finding bugs a little more tricky. Can\nyou
        debug this page?\r\n\r\n# Do This\r\n\r\n* Discuss with your partner what\nis
        causing the bugs in this page.\r\n* Fix the bugs so that your page matches\nthe
        target page shown below.\r\n\r\n![](https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24\nAM.png)"
      CSD U2 Debugging 3_2019: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        is a bug?**</summary>\r\nBugs\nare mistakes in code which causes it not to
        work as planned.\r\n</details>\r\n<details>\r\n<summary>**What\nis debugging?**</summary>\r\nDebugging
        is the process of finding and fixing\nbugs.  Debugging is a problem solving
        process so use your problem solving\nsteps as you try to debug. \r\n</details>\r\n<details>\r\n<summary>**What\nare
        some examples of bugs?**</summary>\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\r\n</details>\r\n<details>\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\r\n</details>\r\n</div>\r\n\r\nThis\npage
        has images in it. Images make finding bugs a little more tricky. Can\nyou
        debug this page?\r\n\r\n# Do This\r\n\r\n* Discuss with your partner what\nis
        causing the bugs in this page.\r\n* Fix the bugs so that your page matches\nthe
        target page shown below.\r\n\r\n![](https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24\nAM.png)"
      CSD U2 Debugging 4: "# Formatting\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThe\nway
        that you write your code can make it easier or harder to find bugs.  If\nyou
        use **whitespace** and **indentation**, it will make it easier to read\nand
        easier to fix.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at the code with your
        partner\nand discuss how you should format the code to make it easier to read.\\\r\n*\nMake
        the code easier to read by adding new lines and indentation.\\\r\n* Fix\nall
        the bugs so that your page matches the target page below.\\\r\n\\\r\n![](https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13\nAM.png)"
      CSD U2 Debugging 4_2018: "# Formatting\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThe\nway
        that you write your code can make it easier or harder to find bugs.  If\nyou
        use **whitespace** and **indentation**, it will make it easier to read\nand
        easier to fix.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at the code with your
        partner\nand discuss how you should format the code to make it easier to read.\\\r\n*\nMake
        the code easier to read by adding new lines and indentation.\\\r\n* Fix\nall
        the bugs so that your page matches the target page below.\\\r\n\\\r\n![](https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13\nAM.png)"
      CSD U2 Debugging 4_2019: "# Formatting\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThe\nway
        that you write your code can make it easier or harder to find bugs.  If\nyou
        use **whitespace** and **indentation**, it will make it easier to read\nand
        easier to fix.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at the code with your
        partner\nand discuss how you should format the code to make it easier to read.\\\r\n*\nMake
        the code easier to read by adding new lines and indentation.\\\r\n* Fix\nall
        the bugs so that your page matches the target page below.\\\r\n\\\r\n![](https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13\nAM.png)"
      CSD U2 Debugging comments: "# Debugging\\\r\n\n\\\r\nThis page has\nimages in
        it. Images make finding bugs a little more tricky. Can you debug\nthis page?\\\r\n\\\r\nAs
        you are debugging you may notice a new set of symbols\nthat look something
        like this:\\\r\n\n<pre>\\\r\n&lt;!-- this is a comment --&gt;\\\r\n</pre>\\\r\n\n\\\r\nThis\nis
        a **comment**. Comments are written by computer scientists creating web\npages
        for themselves and other humans who might look at their HTML file. Comments\nexplain
        the different parts of the code and what it should create.  Comments\nmight
        help you debug.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Find and fix all
        bugs in the\n    starting HTML\\\r\n-   You know you’ve found all of the bugs
        when your page matches\n    the <a href=\"https://thimbleprojects.org/danimcavoy/103295/\"
        target=\"_blank\">\n    Target Page</a>."
      CSD U2 HTML Add Content: "# Adding Content\\\r\n\n\\\r\nStart\ncreating your
        first web page! Try to create a page with a title and two paragraphs.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Write a sentence about your favorite animal\\\r\n-
        \  On a separate\n    line write another sentence about your least favorite
        animal.\\\r\n-   Above both\n    sentences try adding a title that says \"Animals\"\\\r\n-
        \  Don't forget to click\n    <img src=\"https://images.code.org/6a35d13b10ed2029a9323c9cb555e39e-image-1477681291001.01.12\n
        \   PM.png\" style=\"width:100px\">\\\r\n-   **What do you notice about the
        structure\n    of your content?**"
      CSD U2 HTML Adding Paragraphs Template: "# Add Text to\n\nthe Body\\\r\n\\\r\nWhen
        you start any Web Lab project it will automatically add\n`<!DOCTYPE>`, `<html>`,
        `<head>`, and `<body>` tags to your project. When\nyou add content to your
        projects you'll need to do it between the `<body>`\nand `</body>` tags since
        it should be part of the body of your webpage.\\\r\n\\\r\n\n# \n\nDo This\\\r\n\\\r\n\n-
        \  Write three separate sentences about any topic you like inside\n    of
        the body tags of your web page\\\r\n-   Hit \"Refresh and Save\" if you don't\n
        \   see the changes in the Preview area\\\r\n-   Compare your work with a
        neighbor.\n    Make sure you're placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs Template_2018: "# Add Text to\n\nthe Body\\\r\n\\\r\nWhen
        you start any Web Lab project it will automatically add\n`<!DOCTYPE>`, `<html>`,
        `<head>`, and `<body>` tags to your project. When\nyou add content to your
        projects you'll need to do it between the `<body>`\nand `</body>` tags since
        it should be part of the body of your webpage.\\\r\n\\\r\n\n# \n\nDo This\\\r\n\\\r\n\n-
        \  Write three separate sentences about any topic you like inside\n    of
        the body tags of your web page\\\r\n-   Hit \"Refresh and Save\" if you don't\n
        \   see the changes in the Preview area\\\r\n-   Compare your work with a
        neighbor.\n    Make sure you're placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs Template_2019: "# Add Text to\n\nthe Body\\\r\n\\\r\nWhen
        you start any Web Lab project it will automatically add\n`<!DOCTYPE>`, `<html>`,
        `<head>`, and `<body>` tags to your project. When\nyou add content to your
        projects you'll need to do it between the `<body>`\nand `</body>` tags since
        it should be part of the body of your webpage.\\\r\n\\\r\n\n# \n\nDo This\\\r\n\\\r\n\n-
        \  Write three separate sentences about any topic you like inside\n    of
        the body tags of your web page\\\r\n-   Hit \"Refresh and Save\" if you don't\n
        \   see the changes in the Preview area\\\r\n-   Compare your work with a
        neighbor.\n    Make sure you're placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs pt 2: "<div style=\"float:\nright; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a paragraph element?**</summary>\\\r\nParagraphs\nare marked by opening(`<p>`)
        and closing(`</p>`) tags. Paragraphs in HTML\ncan be any length of text from
        one word to a bunch of sentences. Paragraphs\ngroup together sets of sentences
        and put some space between that group of\ntext and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make multiple paragraphs?**</summary>\\\r\nHere's an example of several\nparagraph
        tags in a row. This code would be placed inside of the body of your\nweb page.\\\r\n\\\r\n<pre>\\\r\n`<p>This
        is a paragraph. It has two sentences.</p>`\\\r\n`<p>This\nis another paragraph.</p>`\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nUse
        Paragraph Tags\\\r\n\\\r\nThe `<p>` tag or \"paragraph\" tag is placed around\ntext
        to indicate that it is part of a paragraph. Placing text in a paragraph\ntag
        lets the computer know that it should be displayed differently, usually\njust
        by spacing it out from other text.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Place
        the\ntext you just wrote inside at least two separate paragraphs by surrounding\nit
        with `<p>` and `</p>` tags\\\r\n* Compare the results with a neighbor. What\nhas
        changed about the way your text is displayed?"
      CSD U2 HTML Adding Paragraphs pt 2_2018: "<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a paragraph element?**</summary>\\\r\nParagraphs\nare marked by opening(`<p>`)
        and closing(`</p>`) tags. Paragraphs in HTML\ncan be any length of text from
        one word to a bunch of sentences. Paragraphs\ngroup together sets of sentences
        and put some space between that group of\ntext and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make multiple paragraphs?**</summary>\\\r\nHere's an example of several\nparagraph
        tags in a row. This code would be placed inside of the body of your\nweb page.\\\r\n\\\r\n<pre>\\\r\n`<p>This
        is a paragraph. It has two sentences.</p>`\\\r\n`<p>This\nis another paragraph.</p>`\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nUse
        Paragraph Tags\\\r\n\\\r\nThe `<p>` tag or \"paragraph\" tag is placed around\ntext
        to indicate that it is part of a paragraph. Placing text in a paragraph\ntag
        lets the computer know that it should be displayed differently, usually\njust
        by spacing it out from other text.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Place
        the\ntext you just wrote inside at least two separate paragraphs by surrounding\nit
        with `<p>` and `</p>` tags\\\r\n* Compare the results with a neighbor. What\nhas
        changed about the way your text is displayed?"
      CSD U2 HTML Adding Paragraphs pt 2_2019: "<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a paragraph element?**</summary>\\\r\nParagraphs\nare marked by opening(`<p>`)
        and closing(`</p>`) tags. Paragraphs in HTML\ncan be any length of text from
        one word to a bunch of sentences. Paragraphs\ngroup together sets of sentences
        and put some space between that group of\ntext and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make multiple paragraphs?**</summary>\\\r\nHere's an example of several\nparagraph
        tags in a row. This code would be placed inside of the body of your\nweb page.\\\r\n\\\r\n<pre>\\\r\n`<p>This
        is a paragraph. It has two sentences.</p>`\\\r\n`<p>This\nis another paragraph.</p>`\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nUse
        Paragraph Tags\\\r\n\\\r\nThe `<p>` tag or \"paragraph\" tag is placed around\ntext
        to indicate that it is part of a paragraph. Placing text in a paragraph\ntag
        lets the computer know that it should be displayed differently, usually\njust
        by spacing it out from other text.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Place
        the\ntext you just wrote inside at least two separate paragraphs by surrounding\nit
        with `<p>` and `</p>` tags\\\r\n* Compare the results with a neighbor. What\nhas
        changed about the way your text is displayed?"
      CSD U2 HTML Adding Paragraphs: "# Add Text to the Body\\\r\n\n\\\r\nWhen\nyou
        start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`,\n`<head>`,
        and `<body>` tags to your project. When you add content to your\nprojects,
        you'll need to do it between the `<body>` and `</body>` tags because\nit should
        be part of the body of your webpage.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    three separate sentences about any topic you like inside of
        the body tags\n    of your web page.\\\r\n-   Hit \"Refresh and Save\" if
        you don't see the changes\n    in the preview area.\\\r\n-   Compare your
        work with a neighbor. Make sure you're\n    placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs_2018: "# Add Text to the Body\\\r\n\n\\\r\nWhen\nyou
        start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`,\n`<head>`,
        and `<body>` tags to your project. When you add content to your\nprojects,
        you'll need to do it between the `<body>` and `</body>` tags because\nit should
        be part of the body of your webpage.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    three separate sentences about any topic you like inside of
        the body tags\n    of your web page.\\\r\n-   Hit \"Refresh and Save\" if
        you don't see the changes\n    in the preview area.\\\r\n-   Compare your
        work with a neighbor. Make sure you're\n    placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs_2019: "# Add Text to the Body\\\r\n\n\\\r\nWhen\nyou
        start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`,\n`<head>`,
        and `<body>` tags to your project. When you add content to your\nprojects,
        you'll need to do it between the `<body>` and `</body>` tags because\nit should
        be part of the body of your webpage.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    three separate sentences about any topic you like inside of
        the body tags\n    of your web page.\\\r\n-   Hit \"Refresh and Save\" if
        you don't see the changes\n    in the preview area.\\\r\n-   Compare your
        work with a neighbor. Make sure you're\n    placing code in the same place.\\\r"
      CSD U2 HTML Debug Paragraphs: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary><strong>What
        is a paragraph element?</strong></summary>\\\r\nParagraphs\nare marked by
        opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML\ncan be any
        length of text from one word to a bunch of sentences. Paragraphs\ngroup together
        sets of sentences and put some space between that group of\ntext and the next
        group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        HTML seem to work even when it's broken?</strong></summary>\\\r\nHTML\nis
        read by your web browser to generate web pages. Since people often make\nlittle
        mistakes when writing their web pages, browsers are programmed to make\na
        best guess of what you intended to do. Sometimes different browsers are\neven
        programmed to make different guesses! The only way to ensure your code\nlooks
        like you intend is make sure you're always using tags correctly.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        the code sometimes turn pink?</strong></summary>\\\r\nWeb Lab is programmed\nto
        automatically detect some mistakes in HTML.  When it notices a mistake,\nit
        turns that code pink.  The mistake might be in pink, or it might be somewhere\nbefore
        the pink code.  You'll need to carefully debug to find your mistake.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#\nDebug:
        Fix the Broken Tags\\\r\n\\\r\nThis simple web page has some issues which\nare
        preventing the content from being displayed correctly. Identify and fix\nthe
        issues. This practice is also called \"debugging\" your code.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Fix the broken code so that the web page displays correctly\\\r\n*\nCompare
        the problems you fixed with a neighbor"
      CSD U2 HTML Debug Paragraphs_2018: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary><strong>What
        is a paragraph element?</strong></summary>\\\r\nParagraphs\nare marked by
        opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML\ncan be any
        length of text from one word to a bunch of sentences. Paragraphs\ngroup together
        sets of sentences and put some space between that group of\ntext and the next
        group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        HTML seem to work even when it's broken?</strong></summary>\\\r\nHTML\nis
        read by your web browser to generate web pages. Since people often make\nlittle
        mistakes when writing their web pages, browsers are programmed to make\na
        best guess of what you intended to do. Sometimes different browsers are\neven
        programmed to make different guesses! The only way to ensure your code\nlooks
        like you intend is make sure you're always using tags correctly.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        the code sometimes turn pink?</strong></summary>\\\r\nWeb Lab is programmed\nto
        automatically detect some mistakes in HTML.  When it notices a mistake,\nit
        turns that code pink.  The mistake might be in pink, or it might be somewhere\nbefore
        the pink code.  You'll need to carefully debug to find your mistake.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#\nDebug:
        Fix the Broken Tags\\\r\n\\\r\nThis simple web page has some issues which\nare
        preventing the content from being displayed correctly. Identify and fix\nthe
        issues. This practice is also called \"debugging\" your code.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Fix the broken code so that the web page displays correctly\\\r\n*\nCompare
        the problems you fixed with a neighbor"
      CSD U2 HTML Debug Paragraphs_2019: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary><strong>What
        is a paragraph element?</strong></summary>\\\r\nParagraphs\nare marked by
        opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML\ncan be any
        length of text from one word to a bunch of sentences. Paragraphs\ngroup together
        sets of sentences and put some space between that group of\ntext and the next
        group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        HTML seem to work even when it's broken?</strong></summary>\\\r\nHTML\nis
        read by your web browser to generate web pages. Since people often make\nlittle
        mistakes when writing their web pages, browsers are programmed to make\na
        best guess of what you intended to do. Sometimes different browsers are\neven
        programmed to make different guesses! The only way to ensure your code\nlooks
        like you intend is make sure you're always using tags correctly.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        the code sometimes turn pink?</strong></summary>\\\r\nWeb Lab is programmed\nto
        automatically detect some mistakes in HTML.  When it notices a mistake,\nit
        turns that code pink.  The mistake might be in pink, or it might be somewhere\nbefore
        the pink code.  You'll need to carefully debug to find your mistake.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#\nDebug:
        Fix the Broken Tags\\\r\n\\\r\nThis simple web page has some issues which\nare
        preventing the content from being displayed correctly. Identify and fix\nthe
        issues. This practice is also called \"debugging\" your code.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Fix the broken code so that the web page displays correctly\\\r\n*\nCompare
        the problems you fixed with a neighbor"
      CSD U2 Header Demo: "# Headers\\\r\n\n\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headers?**</summary>\r\nHeaders\nare the different sized section titles
        throughout a web page. Headers add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headers?**</summary>\r\nHeaders come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest header. The smallest\nheader
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n</div>\r\n\r\nSo far, you've organized your
        content\ninto paragraphs.  Another way HTML allows you to organize your code
        is by\nusing **headers**.  A header is a short piece of text that goes at
        the top\nof a section of content, like a title.\r\n\r\nDo This:\r\n* Find
        the headers\nin the web page below and use the inspector tool to see that
        code that makes\nthem.\r\n* Make sure you and your partner agree on what the
        tags do.\r\n*\nChange the code so that \"Drawing\" and \"2 years\" match the
        headers on the\nrest of the page."
      CSD U2 Header Sizes: "# Header Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headers?**</summary>\r\nHeaders\nare the different sized section titles
        throughout a web page. Headers add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headers?**</summary>\r\nHeaders come in 6 different\nsizes.
        \ The most common header is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest header. The smallest header is &lt;h6&gt;.\nYou can
        also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nHeaders can come in different
        sizes.  In\nthis page, there are six different sized headers, but they are
        all mixed up.  Can\nyou and your partner figure out how to fix them?\r\n\r\n\r\n\r\nDo
        This:\r\n*\nUse the inspector tool to figure out what makes the headers different
        sizes\r\n*\nMake sure you and your partner agree on what the different header
        tags do.\r\n*\nChange the tags so that the headers are in order from biggest
        to smallest,\nand the text says the correct size, as in the picture below.
        \r\n\r\n<img\nsrc=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\r"
      CSD U2 Header Test: "# Headers and Paragraphs\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\r\n<details>\r\n<summary>**What is\na paragraph
        element?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. Paragraphs in HTML can be any length of\ntext from one word
        to a bunch of sentences. All of your text in your web page\nshould be contained
        in an HTML element (headers or paragraphs). Paragraphs\ngroup together sets
        of sentences and put some space between that group of\ntext and the next group
        of text.\r\n</details>\r\n<details>\r\n<summary>**How\ndo I create multiple
        paragraphs?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. To create more than one paragraph you will\nwant multiple sets
        of opening and closing `<p>` tags. For example\r\n<pre>\r\n\\t&lt;p&gt;\r\n
        \   \\tThis\nis a paragraph.\r\n    &lt;/p&gt;\r\n\\t&lt;p&gt;\r\n    \\tThis
        is another\nparagraph.\r\n    &lt;/p&gt;\r\n</pre>\r\n</details>\r\n<details>\r\n<summary>**What\nare
        headers?**</summary>\r\nHeaders are the different sized section titles\nthroughout
        a web page. Headers add structure to your web page by breaking\nit up so its
        easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headers?**</summary>\r\nHeaders come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest header. The smallest\nheader
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nThe author of this page added
        in\na lot of content, but did not think about structure.  All of the text
        is mashed\ntogether.\r\n\r\nDo This:\r\n* Look through the content with your
        partner\nand decide what you think the best structure should be.\r\n* Use
        your header\nand paragraph tags to code the structure into the page.\r"
      CSD U2 Heading Demo: "# Headings\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headings?**</summary>\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one: &lt;h1&gt;. The number\n'1'
        in the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags, which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n</div>\r\n\r\nSo far, you've organized your
        content\ninto paragraphs.  Another way HTML allows you to organize your code
        is by\nusing **headings**.  A heading is a short piece of text that goes at
        the top\nof a section of content, like a title.\r\n\r\nDo This:\r\n* Find
        the headings\nin the web page below and use the Inspector Tool to see the
        code that makes\nthem.\r\n* Make sure you and your partner agree on what the
        tags do.\r\n*\nChange the code so that \"Drawing\" and \"2 years\" match the
        headings on\nthe rest of the page."
      CSD U2 Heading Demo_2018: "# Headings\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headings?**</summary>\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one: &lt;h1&gt;. The number\n'1'
        in the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags, which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n</div>\r\n\r\nSo far, you've organized your
        content\ninto paragraphs.  Another way HTML allows you to organize your code
        is by\nusing **headings**.  A heading is a short piece of text that goes at
        the top\nof a section of content, like a title.\r\n\r\nDo This:\r\n* Find
        the headings\nin the web page below and use the Inspector Tool to see the
        code that makes\nthem.\r\n* Make sure you and your partner agree on what the
        tags do.\r\n*\nChange the code so that \"Drawing\" and \"2 years\" match the
        headings on\nthe rest of the page."
      CSD U2 Heading Demo_2019: "# Headings\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headings?**</summary>\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one: &lt;h1&gt;. The number\n'1'
        in the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags, which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n</div>\r\n\r\nSo far, you've organized your
        content\ninto paragraphs.  Another way HTML allows you to organize your code
        is by\nusing **headings**.  A heading is a short piece of text that goes at
        the top\nof a section of content, like a title.\r\n\r\nDo This:\r\n* Find
        the headings\nin the web page below and use the Inspector Tool to see the
        code that makes\nthem.\r\n* Make sure you and your partner agree on what the
        tags do.\r\n*\nChange the code so that \"Drawing\" and \"2 years\" match the
        headings on\nthe rest of the page."
      CSD U2 Heading Sizes: "# Heading Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headings?**</summary>\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        \ The most common heading is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest heading. The smallest heading is &lt;h6&gt;.\nYou
        can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nHeadings can come in different
        sizes.  In\nthis page, there are six different sized headings, but they are
        all mixed\nup.  Can you and your partner figure out how to fix them?\r\n\r\n\r\n\r\nDo\nThis:\r\n*
        Use the inspector tool to figure out what makes the headings different\nsizes\r\n*
        Make sure you and your partner agree on what the different heading\ntags do.\r\n*
        Change the tags so that the headings are in order from biggest\nto smallest,
        and the text says the correct size, as in the picture below.\n\r\n\r\n<img
        src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\r"
      CSD U2 Heading Sizes_2018: "# Heading Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headings?**</summary>\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        \ The most common heading is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest heading. The smallest heading is &lt;h6&gt;.\nYou
        can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nHeadings can come in different
        sizes.  In\nthis page, there are six different sized headings, but they are
        all mixed\nup.  Can you and your partner figure out how to fix them?\r\n\r\n\r\n\r\nDo\nThis:\r\n*
        Use the inspector tool to figure out what makes the headings different\nsizes\r\n*
        Make sure you and your partner agree on what the different heading\ntags do.\r\n*
        Change the tags so that the headings are in order from biggest\nto smallest,
        and the text says the correct size, as in the picture below.\n\r\n\r\n<img
        src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\r"
      CSD U2 Heading Sizes_2019: "# Heading Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are headings?**</summary>\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        \ The most common heading is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest heading. The smallest heading is &lt;h6&gt;.\nYou
        can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nHeadings can come in different
        sizes.  In\nthis page, there are six different sized headings, but they are
        all mixed\nup.  Can you and your partner figure out how to fix them?\r\n\r\n\r\n\r\nDo\nThis:\r\n*
        Use the inspector tool to figure out what makes the headings different\nsizes\r\n*
        Make sure you and your partner agree on what the different heading\ntags do.\r\n*
        Change the tags so that the headings are in order from biggest\nto smallest,
        and the text says the correct size, as in the picture below.\n\r\n\r\n<img
        src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\r"
      CSD U2 Heading Test: "# Headings and Paragraphs\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\r\n<details>\r\n<summary>**What is\na paragraph
        element?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. Paragraphs in HTML can be any length of\ntext from one word
        to a bunch of sentences. All of your text in your web page\nshould be contained
        in an HTML element (headings or paragraphs). Paragraphs\ngroup together sets
        of sentences and put some space between that group of\ntext and the next group
        of text.\r\n</details>\r\n<details>\r\n<summary>**How\ndo I create multiple
        paragraphs?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. To create more than one paragraph you will\nwant multiple sets
        of opening and closing `<p>` tags. For example\r\n<pre>\r\n\\t&lt;p&gt;\r\n
        \   \\tThis\nis a paragraph.\r\n    &lt;/p&gt;\r\n\\t&lt;p&gt;\r\n    \\tThis
        is another\nparagraph.\r\n    &lt;/p&gt;\r\n</pre>\r\n</details>\r\n<details>\r\n<summary>**What\nare
        headings?**</summary>\r\nHeadings are the different sized section titles\nthroughout
        a web page. Headings add structure to your web page by breaking\nit up so
        its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nThe author of this page added
        in\na lot of content, but did not think about structure.  All of the text
        is mashed\ntogether.\r\n\r\nDo This:\r\n* Look through the content with your
        partner\nand decide what you think the best structure should be.\r\n* Use
        your heading\nand paragraph tags to code the structure into the page.\r"
      CSD U2 Heading Test_2018: "# Headings and Paragraphs\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\r\n<details>\r\n<summary>**What is\na paragraph
        element?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. Paragraphs in HTML can be any length of\ntext from one word
        to a bunch of sentences. All of your text in your web page\nshould be contained
        in an HTML element (headings or paragraphs). Paragraphs\ngroup together sets
        of sentences and put some space between that group of\ntext and the next group
        of text.\r\n</details>\r\n<details>\r\n<summary>**How\ndo I create multiple
        paragraphs?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. To create more than one paragraph you will\nwant multiple sets
        of opening and closing `<p>` tags. For example\r\n<pre>\r\n\\t&lt;p&gt;\r\n
        \   \\tThis\nis a paragraph.\r\n    &lt;/p&gt;\r\n\\t&lt;p&gt;\r\n    \\tThis
        is another\nparagraph.\r\n    &lt;/p&gt;\r\n</pre>\r\n</details>\r\n<details>\r\n<summary>**What\nare
        headings?**</summary>\r\nHeadings are the different sized section titles\nthroughout
        a web page. Headings add structure to your web page by breaking\nit up so
        its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nThe author of this page added
        in\na lot of content, but did not think about structure.  All of the text
        is mashed\ntogether.\r\n\r\nDo This:\r\n* Look through the content with your
        partner\nand decide what you think the best structure should be.\r\n* Use
        your heading\nand paragraph tags to code the structure into the page.\r"
      CSD U2 Heading Test_2019: "# Headings and Paragraphs\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\r\n<details>\r\n<summary>**What is\na paragraph
        element?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. Paragraphs in HTML can be any length of\ntext from one word
        to a bunch of sentences. All of your text in your web page\nshould be contained
        in an HTML element (headings or paragraphs). Paragraphs\ngroup together sets
        of sentences and put some space between that group of\ntext and the next group
        of text.\r\n</details>\r\n<details>\r\n<summary>**How\ndo I create multiple
        paragraphs?**</summary>\r\nParagraphs are marked by opening(`<p>`)\nand closing(`</p>`)
        tags as well. To create more than one paragraph you will\nwant multiple sets
        of opening and closing `<p>` tags. For example\r\n<pre>\r\n\\t&lt;p&gt;\r\n
        \   \\tThis\nis a paragraph.\r\n    &lt;/p&gt;\r\n\\t&lt;p&gt;\r\n    \\tThis
        is another\nparagraph.\r\n    &lt;/p&gt;\r\n</pre>\r\n</details>\r\n<details>\r\n<summary>**What\nare
        headings?**</summary>\r\nHeadings are the different sized section titles\nthroughout
        a web page. Headings add structure to your web page by breaking\nit up so
        its easier for a user to read.\r\n</details>\r\n<details>\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\r\n</h1>\r\n</details>\r\n<details>\r\n<summary>**What\nis
        HTML?**</summary>\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \r\n</details>\r\n<details>\r\n<summary>**What is an HTML\nelement?**</summary>\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\r\n</details>\r\n<details>\r\n<summary>**What
        is an\nHTML tag?**</summary>\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\r\n</details>\r\n\r\n</div>\r\n\r\nThe author of this page added
        in\na lot of content, but did not think about structure.  All of the text
        is mashed\ntogether.\r\n\r\nDo This:\r\n* Look through the content with your
        partner\nand decide what you think the best structure should be.\r\n* Use
        your heading\nand paragraph tags to code the structure into the page.\r"
      CSD U2 Image Tag 1: "<div style=\"float: right; height:\n250px; width: 40%;
        overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Images\r\n\r\nA Dog\nvs Cat web page has been started for you. The dog image
        has already been added\nto the below web page. Use an image tag to add the
        `cat.jpeg` image to the\npage below the cat heading."
      CSD U2 Image Tag 1_2018: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I add images?**</summary>\\\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\\\r\n\\\r\nExample:\\\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\\\r\n\\\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\\\r\n\\\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\\\r\n\\\r\nAn `<img>` tag is an\nexample of
        a  **self-closing tag** because it starts and closes in one tag.\nTo mark
        this we put the `/` which usually goes in the close tag at the end\nof the
        image tag.\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why does an\nimage
        tag not have a closing tag?**</summary>\\\r\nAn image tag doesn't need\na
        closing tag because there is no text content which must be wrapped in tags.\nThe
        content that shows on the screen is specified through the tags attributes.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an attribute?**</summary>\\\r\nAttributes are extra information included\nin
        a tag.  Attributes have names and values. The name tells what type of information\nis
        being provided and then the value gives the specific information for that\ntag.
        \\\r\n\\\r\nFor example &lt;img&gt; tags have two attributes, src and alt.\nsrc
        specifies the name of the image file and alt tells the browser in readable\ntext
        what the image is.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n# Images\\\r\n\\\r\nA
        Dog\nvs Cat web page has been started for you. The dog image has already been
        added\nto the below web page. Use an image tag to add the `cat.jpeg` image
        to the\npage below the cat heading."
      CSD U2 Image Tag 1_2019: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I add images?**</summary>\\\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\\\r\n\\\r\nExample:\\\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\\\r\n\\\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\\\r\n\\\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\\\r\n\\\r\nAn `<img>` tag is an\nexample of
        a  **self-closing tag** because it starts and closes in one tag.\nTo mark
        this we put the `/` which usually goes in the close tag at the end\nof the
        image tag.\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why does an\nimage
        tag not have a closing tag?**</summary>\\\r\nAn image tag doesn't need\na
        closing tag because there is no text content which must be wrapped in tags.\nThe
        content that shows on the screen is specified through the tags attributes.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an attribute?**</summary>\\\r\nAttributes are extra information included\nin
        a tag.  Attributes have names and values. The name tells what type of information\nis
        being provided and then the value gives the specific information for that\ntag.
        \\\r\n\\\r\nFor example &lt;img&gt; tags have two attributes, src and alt.\nsrc
        specifies the name of the image file and alt tells the browser in readable\ntext
        what the image is.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n# Images\\\r\n\\\r\nA
        Dog\nvs Cat web page has been started for you. The dog image has already been
        added\nto the below web page. Use an image tag to add the `cat.jpeg` image
        to the\npage below the cat heading."
      CSD U2 Image Tag 2: "<div style=\"float: right; height:\n250px; width: 40%;
        overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Uploading Images\r\n\r\nYou\ncan upload images that you've found elsewhere
        using the **Add Image** button.\nGo find an image of a different type of pet
        that you like and download it\nto your computer (using right-click \"Save
        As\").\r\n\r\nOnce you have your\nimages, click ![](https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49\nPM.png)
        and upload the image from your computer into your project, where you\ncan
        then use it in your page.\r\n\r\n# Do This\r\n\r\n* Upload at least one\nimage
        into this web page\r\n* Use the `<img>` tag to display the image(s)\nin your
        website.\r\n* Make sure to add an `alt` attribute."
      CSD U2 Image Tag 2_2018: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Uploading Images\r\n\r\nYou\ncan upload images that you've found elsewhere
        using the **Add Image** button.\nGo find an image of a different type of pet
        that you like and download it\nto your computer (using right-click \"Save
        As\").\r\n\r\nOnce you have your\nimages, click ![](https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49\nPM.png)
        and upload the image from your computer into your project, where you\ncan
        then use it in your page.\r\n\r\n# Do This\r\n\r\n* Upload at least one\nimage
        into this web page\r\n* Use the `<img>` tag to display the image(s)\nin your
        website.\r\n* Make sure to add an `alt` attribute."
      CSD U2 Image Tag 2_2019: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Uploading Images\r\n\r\nYou\ncan upload images that you've found elsewhere
        using the **Add Image** button.\nGo find an image of a different type of pet
        that you like and download it\nto your computer (using right-click \"Save
        As\").\r\n\r\nOnce you have your\nimages, click ![](https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49\nPM.png)
        and upload the image from your computer into your project, where you\ncan
        then use it in your page.\r\n\r\n# Do This\r\n\r\n* Upload at least one\nimage
        into this web page\r\n* Use the `<img>` tag to display the image(s)\nin your
        website.\r\n* Make sure to add an `alt` attribute."
      CSD U2 Image Tag Attribution: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Giving Credit\r\n\r\nWhen\nusing a Creative Commons licensed image, you need
        to give credit to the original\ncreator (this is also called _attribution_).
        There are lots of ways to provide\nattribution, but the easiest way is to
        add text below the image that identifies\nthe creator and website it came
        from.\r\n\r\n# Do This\r\n\r\nIn this page\nwe've already added and attributed
        an image of a frog. Use the Creative Commons\nsearch engine to find another
        image of an amphibian. Add your found image\nto this page, along with proper
        attribution, including:\r\n\r\n* The name\nof the creator (if available)\r\n*
        The website it was found on (e.g. commons.wikimedia.org)\r\n*\nThe license
        it was published under (e.g. CC-BY)"
      CSD U2 Image Tag Attribution_2018: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Giving Credit\r\n\r\nWhen\nusing a Creative Commons licensed image, you need
        to give credit to the original\ncreator (this is also called _attribution_).
        There are lots of ways to provide\nattribution, but the easiest way is to
        add text below the image that identifies\nthe creator and website it came
        from.\r\n\r\n# Do This\r\n\r\nIn this page\nwe've already added and attributed
        an image of a frog. Use the Creative Commons\nsearch engine to find another
        image of an amphibian. Add your found image\nto this page, along with proper
        attribution, including:\r\n\r\n* The name\nof the creator (if available)\r\n*
        The website it was found on (e.g. commons.wikimedia.org)\r\n*\nThe license
        it was published under (e.g. CC-BY)"
      CSD U2 Image Tag Attribution_2019: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        Giving Credit\r\n\r\nWhen\nusing a Creative Commons licensed image, you need
        to give credit to the original\ncreator (this is also called _attribution_).
        There are lots of ways to provide\nattribution, but the easiest way is to
        add text below the image that identifies\nthe creator and website it came
        from.\r\n\r\n# Do This\r\n\r\nIn this page\nwe've already added and attributed
        an image of a frog. Use the Creative Commons\nsearch engine to find another
        image of an amphibian. Add your found image\nto this page, along with proper
        attribution, including:\r\n\r\n* The name\nof the creator (if available)\r\n*
        The website it was found on (e.g. commons.wikimedia.org)\r\n*\nThe license
        it was published under (e.g. CC-BY)"
      CSD U2 Image Tag Debug: "<div style=\"float: right; height:\n250px; width: 40%;
        overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        The Details Matter\r\n\r\nThe\n`src` attribute needs to point to the _exact_
        filename of the image you want\nto use. That means you need to pay attention
        to spelling, capitalization,\nand the file extension. Each of the three images
        on this page is broken because\nof an improper `src` attribute. Using the
        file menu for reference, fix each\nof the image tags.\r\n\r\n_Note: Even though
        the images are not loading properly,\nour website is still showing descriptive
        text of what should be there because\nwe used `alt` attributes. Cool!_"
      CSD U2 Image Tag Debug_2018: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        The Details Matter\r\n\r\nThe\n`src` attribute needs to point to the _exact_
        filename of the image you want\nto use. That means you need to pay attention
        to spelling, capitalization,\nand the file extension. Each of the three images
        on this page is broken because\nof an improper `src` attribute. Using the
        file menu for reference, fix each\nof the image tags.\r\n\r\n_Note: Even though
        the images are not loading properly,\nour website is still showing descriptive
        text of what should be there because\nwe used `alt` attributes. Cool!_"
      CSD U2 Image Tag Debug_2019: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**How
        do I add images?**</summary>\r\nThe\n`<img>` tag allows you to show images
        on your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img\nsrc=\"dog.png\"
        alt=\"dog jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to\ntell the browser
        which file to use, extra information, called an **attribute**,\nis added to
        the &lt;img&gt; tag inside the brackets. The attribute `src` stands\nfor **s**ou**rc**e
        and tell the name of the image. Image files names include\nextensions which
        tell the computer which type of image they are working with.\nCommon extensions
        are .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have\nthe src attribute,
        image elements also have the `alt` attribute which describe\nthe image. This
        is important in case the image doesn’t load or for people\nwho have trouble
        with their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an\nexample of a  **self-closing
        tag** because it starts and closes in one tag.\nTo mark this we put the `/`
        which usually goes in the close tag at the end\nof the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**Why
        does an\nimage tag not have a closing tag?**</summary>\r\nAn image tag doesn't
        need\na closing tag because there is no text content which must be wrapped
        in tags.\nThe content that shows on the screen is specified through the tags
        attributes.\r\n</details>\r\n<details>\r\n<summary>**What\nis an attribute?**</summary>\r\nAttributes
        are extra information included\nin a tag.  Attributes have names and values.
        The name tells what type of information\nis being provided and then the value
        gives the specific information for that\ntag. \r\n\r\nFor example &lt;img&gt;
        tags have two attributes, src and alt.\nsrc specifies the name of the image
        file and alt tells the browser in readable\ntext what the image is.\r\n</details>\r\n</div>\r\n\r\n#
        The Details Matter\r\n\r\nThe\n`src` attribute needs to point to the _exact_
        filename of the image you want\nto use. That means you need to pay attention
        to spelling, capitalization,\nand the file extension. Each of the three images
        on this page is broken because\nof an improper `src` attribute. Using the
        file menu for reference, fix each\nof the image tags.\r\n\r\n_Note: Even though
        the images are not loading properly,\nour website is still showing descriptive
        text of what should be there because\nwe used `alt` attributes. Cool!_"
      CSD U2 Info Page Content: "# Adding Your Content\\\r\n\n\\\r\nYou\nshould now
        have found a handful of websites that you can use to help make\nyour case
        for the cause you've chosen. If not, keep on researching! Otherwise\nit's
        time to start structuring the content of your page.\\\r\n\\\r\nFor all of\nthe
        content you find externally, you'll need to provide attribution to the\noriginal
        creator. For now, just include the url of the site where you found\nit in
        parenthesis. For example\\\r\n\\\r\n\n-   According to the ASPCA only 10%
        of\n    animals entering shelters have been spayed or neutered (<http://www.aspca.org/animal-homelessness>).\\\r\n-
        \  \\*\n    Kill shelters euthanize 2.7 million animals per year (<http://www.aspca.org/animal-homelessness>).\\\r\n
        \   \\\r\n    # \n    Do This\\\r\n    \\\r\n    The specifics of your page
        layout will depend on your topics\n    and goals, but in general you should
        create the following structure\\\r\n    \\\r\n-   \\*\n    A first level header
        with a catchy title for your page\\\r\n-   A second level\n    header for
        each separate argument to support your cause\\\r\n-   Paragraphs of\n    content
        under each second level header\\\r\n-   The urls of any sites where you\n
        \   found information\\\r\n-   Don't worry about styling right now you are
        just getting\n    the content\\\r"
      CSD U2 Info Page Create: "# Informational Page\\\r\n\n\\\r\nLet's\nstart by
        setting up the page you will be using to create your informational\npage.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add a new HTML file to your project for your\n
        \   informational page.\\\r\n-   Add a title and description"
      CSD U2 Info Page Final Touches: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n\\\r\n<h2>\\\r\nChecklist\\\r\n</h2>\\\r\n\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Ensure that your image is properly licensed</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Upload image into Web Lab</span>\\\r\n<input type=\"checkbox\"\nstyle=\"float:
        left\"><span style=\"display: block; margin-left: 20px; margin-bottom:\n10px\">Create
        an image tag with a descriptive alt attribute</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">If the image isn't your own, add attribution\nunderneath<br/>\\\r\n\\\r\n</div>\\\r\n\\\r\n\\\r\n#
        Adding Images to Your Site\\\r\n\\\r\nYou've\nalready created some pages with
        great content on your website, now you can\nadd some images!\\\r\n\\\r\n#
        Do This\\\r\n\\\r\nUsing either your own images or those\nfound through a
        Commons Search, add some images to the pages you've already\ncreated. Get
        creative! Use the checklist to the right to keep track of the\nsteps you need
        to follow when adding images.\\\r"
      CSD U2 Info Page Final Touches_2018: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n\\\r\n<h2>\\\r\nChecklist\\\r\n</h2>\\\r\n\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Ensure that your image is properly licensed</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Upload image into Web Lab</span>\\\r\n<input type=\"checkbox\"\nstyle=\"float:
        left\"><span style=\"display: block; margin-left: 20px; margin-bottom:\n10px\">Create
        an image tag with a descriptive alt attribute</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">If the image isn't your own, add attribution\nunderneath<br/>\\\r\n\\\r\n</div>\\\r\n\\\r\n\\\r\n#
        Adding Images to Your Site\\\r\n\\\r\nYou've\nalready created some pages with
        great content on your website, now you can\nadd some images!\\\r\n\\\r\n#
        Do This\\\r\n\\\r\nUsing either your own images or those\nfound through a
        Commons Search, add some images to the pages you've already\ncreated. Get
        creative! Use the checklist to the right to keep track of the\nsteps you need
        to follow when adding images.\\\r"
      CSD U2 Info Page Final Touches_2019: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n\\\r\n<h2>\\\r\nChecklist\\\r\n</h2>\\\r\n\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Ensure that your image is properly licensed</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Upload image into Web Lab</span>\\\r\n<input type=\"checkbox\"\nstyle=\"float:
        left\"><span style=\"display: block; margin-left: 20px; margin-bottom:\n10px\">Create
        an image tag with a descriptive alt attribute</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">If the image isn't your own, add attribution\nunderneath<br/>\\\r\n\\\r\n</div>\\\r\n\\\r\n\\\r\n#
        Adding Images to Your Site\\\r\n\\\r\nYou've\nalready created some pages with
        great content on your website, now you can\nadd some images!\\\r\n\\\r\n#
        Do This\\\r\n\\\r\nUsing either your own images or those\nfound through a
        Commons Search, add some images to the pages you've already\ncreated. Get
        creative! Use the checklist to the right to keep track of the\nsteps you need
        to follow when adding images.\\\r"
      CSD U2 Info Page Images: "# Adding Your Images\\\r\n\n\\\r\nWith\nimages and
        attribution information in hand, it's time to spruce up your new\npage.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nUpload your images to Web Lab and, using `<img>`\ntags,
        add them where you'd like them to go. For each image:\\\r\n\\\r\n\n-   Add\n
        \   a descriptive `alt` attribute\\\r\n-   Add attribution underneath the
        image, including\\\r\n    \\\\t\\*\n    Name or screenname of author (if available)\\\r\n
        \   -   Title of image (if available)\\\r\n    -   \\*\n        Url to original
        site\\\r\n    -   License image was published under either in\n        text
        (eg CC-BY) or using a badge from the [Creative Commons website](https://creativecommons.org/about/downloads/).\\\r\n
        \       \\\r\n        For\n        example\\\r\n        \\\r\n        ![Sad
        Dog](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Longhaired_Dachshund_portrait.jpg/629px-Longhaired_Dachshund_portrait.jpg)\\\r\n
        \       \\\r\n        Longhaired\n        Dachshund portrait by Flickr user
        Soggydan (ht<span>tps://</span>commons.wikimedia.org/wiki/File:Longhaired_Dachshund_portrait.jpg)\n-
        \  CC-BY"
      CSD U2 Inspector Warm Up: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n<details>\\\r\n<summary>**<span>\nHow
        do I use the Inspector Tool? </span>**</summary>\\\r\nThe Inspector Tool\nis
        a great way to learn more about unfamiliar code in Web Lab. To turn on\nthe
        Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56\nPM.png\"
        style=\"width:100px\">. You will know that the Inspector Tool is\non because
        the button will turn white and say \"Inspector: On\". Once you\nturn on the
        Inspector Tool, you can hover over anything in the preview area\nand Web Lab
        will highlight the code that is making that part of the page appear.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nExplore
        HTML\\\r\n\\\r\nThis is a web page written in HTML, the language of the\nweb.
        You'll learn more about how it works, but first explore it by using\nthe Inspector
        Tool.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Click the Tip \"How do I use\nthe
        Inspector Tool?\" on the right to learn how to use the Inspector Tool.\\\r\n*\nFollow
        the instructions in the web page to explore the web page and discuss\nwith
        a partner how it is working."
      CSD U2 Inspector Warm Up_2018: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n<details>\\\r\n<summary>**<span>\nHow
        do I use the Inspector Tool? </span>**</summary>\\\r\nThe Inspector Tool\nis
        a great way to learn more about unfamiliar code in Web Lab. To turn on\nthe
        Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56\nPM.png\"
        style=\"width:100px\">. You will know that the Inspector Tool is\non because
        the button will turn white and say \"Inspector: On\". Once you\nturn on the
        Inspector Tool, you can hover over anything in the preview area\nand Web Lab
        will highlight the code that is making that part of the page appear.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nExplore
        HTML\\\r\n\\\r\nThis is a web page written in HTML, the language of the\nweb.
        You'll learn more about how it works, but first explore it by using\nthe Inspector
        Tool.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Click the Tip \"How do I use\nthe
        Inspector Tool?\" on the right to learn how to use the Inspector Tool.\\\r\n*\nFollow
        the instructions in the web page to explore the web page and discuss\nwith
        a partner how it is working."
      CSD U2 Inspector Warm Up_2019: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n<details>\\\r\n<summary>**<span>\nHow
        do I use the Inspector Tool? </span>**</summary>\\\r\nThe Inspector Tool\nis
        a great way to learn more about unfamiliar code in Web Lab. To turn on\nthe
        Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56\nPM.png\"
        style=\"width:100px\">. You will know that the Inspector Tool is\non because
        the button will turn white and say \"Inspector: On\". Once you\nturn on the
        Inspector Tool, you can hover over anything in the preview area\nand Web Lab
        will highlight the code that is making that part of the page appear.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nExplore
        HTML\\\r\n\\\r\nThis is a web page written in HTML, the language of the\nweb.
        You'll learn more about how it works, but first explore it by using\nthe Inspector
        Tool.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Click the Tip \"How do I use\nthe
        Inspector Tool?\" on the right to learn how to use the Inspector Tool.\\\r\n*\nFollow
        the instructions in the web page to explore the web page and discuss\nwith
        a partner how it is working."
      CSD U2 Project Start: "# Start Your Project\\\r\n\n\\\r\nNow\nthat you have
        a plan for your personal website, you can start coding it here.  Don't\nworry
        if you can't do everything you want today.  You'll have plenty of\nchances
        to improve your work as you learn more about developing websites.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Use HTML to create the page that you sketched out.
        \ Make sure\n    it includes\\\r\n-   At least **two headings of different
        sizes**\\\r\n-   At least\n    **one paragraph**\\\r\n-   **Reflect** on your
        page by comparing to your sketch\n    and showing it to your partner"
      CSD U2 Project Start_2018: "# Start Your Project\\\r\n\n\\\r\nNow\nthat you
        have a plan for your personal website, you can start coding it here.  Don't\nworry
        if you can't do everything you want today.  You'll have plenty of\nchances
        to improve your work as you learn more about developing websites.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Use HTML to create the page that you sketched out.
        \ Make sure\n    it includes\\\r\n-   At least **two headings of different
        sizes**\\\r\n-   At least\n    **one paragraph**\\\r\n-   **Reflect** on your
        page by comparing to your sketch\n    and showing it to your partner"
      CSD U2 Project Start_2019: "# Start Your Project\\\r\n\n\\\r\nNow\nthat you
        have a plan for your personal website, you can start coding it here.  Don't\nworry
        if you can't do everything you want today.  You'll have plenty of\nchances
        to improve your work as you learn more about developing websites.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Use HTML to create the page that you sketched out.
        \ Make sure\n    it includes\\\r\n-   At least **two headings of different
        sizes**\\\r\n-   At least\n    **one paragraph**\\\r\n-   **Reflect** on your
        page by comparing to your sketch\n    and showing it to your partner"
      CSD U2 add content: "# Add HTML\\\r\n\n\\\r\nNext, you should\nadd the HTML
        to your pages.\\\r\n\\\r\n\n# Do This\\\r\n\n-   For each of the new pages\n
        \   that you've created, add HTML to make the page you sketched in your project\n
        \   guide.\\\r\n-   You may also add more HTML to the pages you've already
        created.\\\r"
      CSD U2 add content_2018: "# Add HTML\\\r\n\n\\\r\nNext, you should\nadd the
        HTML to your pages.\\\r\n\\\r\n\n# Do This\\\r\n\n-   For each of the new
        pages\n    that you've created, add HTML to make the page you sketched in
        your project\n    guide.\\\r\n-   You may also add more HTML to the pages
        you've already created.\\\r"
      CSD U2 add content_2019: "# Add HTML\\\r\n\n\\\r\nNext, you should\nadd the
        HTML to your pages.\\\r\n\\\r\n\n# Do This\\\r\n\n-   For each of the new
        pages\n    that you've created, add HTML to make the page you sketched in
        your project\n    guide.\\\r\n-   You may also add more HTML to the pages
        you've already created.\\\r"
      CSD U2 add file - OLD: "<div style=\"float: right; height:\n250px; width: 40%;
        overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a style sheet?**</summary>\\\r\nA\nstyle sheet is a document that controls
        how a web page will appear.  External\nstyle sheets are separate files that
        are linked to the HTML page.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        CSS?**</summary>\\\r\nCSS is a language that controls the way content on\na
        web site appears.  It uses rule-sets to change the look of a page.  Each\nrule
        set has a selector, which specifies which elements on the page will be\naffected,
        and the rules, which explain how to display the elements.   Each\nrule consists
        of a property and a value for that property.\\\r\n\\\r\n\\\r\nHere’s\nan example
        of a rule-set that makes the text in an `h2` tag blue and cursive:\\\r\n\\\r\n<pre>h2\n{\\\r\n
        \  color: blue;\\\r\n   font-family: cursive;\\\r\n</pre>\\\r\n\\\r\nIn this\nexample,
        `h2` is the selector, `color` and `font-family` are properties, and\n`blue`
        and `cursive` are the values for those properties.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I create a new style sheet?**</summary>\\\r\nTo create a new style sheet,\nclick
        on the \"Add CSS\" button above the code area.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nshould
        I name my style sheet?**</summary>\\\r\nYou can name your style sheet\nanything,
        but it's better to choose a relevant name, such as \"style.css\"\nor \"aboutmestyles.css\"
        so that it's clear what the file is.  Your file\nshould always end in the
        \".css\" extension.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I rename a file?**</summary>\\\r\nTo rename a file, you can right click (or\ncontrol
        click) on the file name and choose the \"Rename\" option.  This will\nallow
        you to type in a new file name.  Clicking on a file name after it is\nalready
        highlighted will also allow you to rename the file.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a style sheet to a web page?**</summary>\\\r\nTo add a style sheet\nto
        a web page, open up the code for the web page.  Inside the head tag, add\nthe
        following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change\n\"style.css\"
        to the name of your style sheet.\\\r\n</details>\\\r\n</div>\\\r\n#\nAdding
        a Style Sheet\\\r\n\\\r\nThis is your About Me page from before.  In the\nnext
        level, you'll have a chance to add some different styles to it, but\nfirst,
        you need to add a style sheet, name it, and link it to your html page.\\\r\n\\\r\n1.\nCreate
        a new style sheet for your project.\\\r\n2. Rename the style sheet file.\\\r\n3.\nAdd
        your style sheet to your HTML page.\\\r\n\\\r\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png\"\nstyle=\"
        max-width:500px\">"
      CSD U2 challenge: "# Challenge\\\r\n\n\\\r\nCheck with your\nteacher before
        starting on this challenge.\\\r\n\\\r\nThis page is only partially\nfinished,
        and it has some bugs.  Luckily, there are comments that should help\nyou to
        finish the page as the author intended.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code and with your partner and discuss what the page should
        look like.\\\r\n-   \\*\n    Work together to finish the page, paying attention
        to formatting.\\\r\n-   Compare\n    with another pair to see whether your
        pages are the same.\\\r"
      CSD U2 challenge_2018: "# Challenge\\\r\n\n\\\r\nCheck with your\nteacher before
        starting on this challenge.\\\r\n\\\r\nThis page is only partially\nfinished,
        and it has some bugs.  Luckily, there are comments that should help\nyou to
        finish the page as the author intended.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code and with your partner and discuss what the page should
        look like.\\\r\n-   \\*\n    Work together to finish the page, paying attention
        to formatting.\\\r\n-   Compare\n    with another pair to see whether your
        pages are the same.\\\r"
      CSD U2 challenge_2019: "# Challenge\\\r\n\n\\\r\nCheck with your\nteacher before
        starting on this challenge.\\\r\n\\\r\nThis page is only partially\nfinished,
        and it has some bugs.  Luckily, there are comments that should help\nyou to
        finish the page as the author intended.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code and with your partner and discuss what the page should
        look like.\\\r\n-   \\*\n    Work together to finish the page, paying attention
        to formatting.\\\r\n-   Compare\n    with another pair to see whether your
        pages are the same.\\\r"
      CSD U2 commenting: "# Comments\\\r\n\n<div style=\"float:\nright; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou\ncan
        add **comments** to your code to explain the different parts of the code\nand
        what it should create.  Comments can help you to debug, and will also\nhelp
        other people who are trying to understand your code.\\\r\n\\\r\n<pre>\\\r\n&lt;!--\nthis
        is a comment --&gt;\\\r\n</pre>\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at
        the code\nwith your partner and find the comments.\\\r\n* Use the comments
        to help you\nfix the bugs in the HTML."
      CSD U2 commenting_2018: "# Comments\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou\ncan
        add **comments** to your code to explain the different parts of the code\nand
        what it should create.  Comments can help you to debug, and will also\nhelp
        other people who are trying to understand your code.\\\r\n\\\r\n<pre>\\\r\n&lt;!--\nthis
        is a comment --&gt;\\\r\n</pre>\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at
        the code\nwith your partner and find the comments.\\\r\n* Use the comments
        to help you\nfix the bugs in the HTML."
      CSD U2 commenting_2019: "# Comments\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou\ncan
        add **comments** to your code to explain the different parts of the code\nand
        what it should create.  Comments can help you to debug, and will also\nhelp
        other people who are trying to understand your code.\\\r\n\\\r\n<pre>\\\r\n&lt;!--\nthis
        is a comment --&gt;\\\r\n</pre>\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at
        the code\nwith your partner and find the comments.\\\r\n* Use the comments
        to help you\nfix the bugs in the HTML."
      CSD U2 create page: "# Create and Name Your New Page\\\r\n\n\\\r\nBefore\nyou
        start coding, you should make sure that you have all the pages that you\nneed
        in your project.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Create a new HTML page
        and rename\n    it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson
        6\n    Level 8</a> if you've forgotten how.)\\\r\n-   Repeat this process
        for any other\n    pages you want to add.\\\r\n    \\\r"
      CSD U2 create page_2018: "# Create and Name Your New Page\\\r\n\n\\\r\nBefore\nyou
        start coding, you should make sure that you have all the pages that you\nneed
        in your project.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Create a new HTML page
        and rename\n    it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson
        6\n    Level 8</a> if you've forgotten how.)\\\r\n-   Repeat this process
        for any other\n    pages you want to add.\\\r\n    \\\r"
      CSD U2 create page_2019: "# Create and Name Your New Page\\\r\n\n\\\r\nBefore\nyou
        start coding, you should make sure that you have all the pages that you\nneed
        in your project.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Create a new HTML page
        and rename\n    it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson
        6\n    Level 8</a> if you've forgotten how.)\\\r\n-   Repeat this process
        for any other\n    pages you want to add.\\\r\n    \\\r"
      CSD U2 debug comments: "# Debugging\\\r\n\n\\\r\nThis page has\nimages in it.
        Images make finding bugs a little more tricky. Can you debug\nthis page?\\\r\n\\\r\nAs
        you are debugging you may notice a new set of symbols\nthat look something
        like this:\\\r\n\n<pre>\\\r\n&lt;!-- this is a comment --&gt;\\\r\n</pre>\\\r\n\n\\\r\nThis\nis
        a **comment**. Comments are written by computer scientists creating web\npages
        for themselves and other humans who might look at their HTML file. Comments\nexplain
        the different parts of the code and what it should create.  Comments\nmight
        help you debug.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Find and fix all
        bugs in the\n    starting HTML\\\r\n-   You know you’ve found all of the bugs
        when your page matches\n    the <a href=\"https://thimbleprojects.org/danimcavoy/103295/\"
        target=\"_blank\">\n    Target Page</a>."
      CSD U2 header footer: "# Navigation Bar and Footer\\\r\n\n\\\r\nEach\nof your
        pages needs a navigation bar and a footer.\\\r\n\\\r\n\n# Do This\\\r\n\n-
        \  For\n    each page, make sure it has a navigation bar that links to other
        pages in\n    your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\"\n
        \   target=\"_new\">Lesson 9 Level 4</a>.\\\r\n-   For each page, make sure
        it has\n    a footer at the bottom that explains the copyright information
        for your page.\n    (Go to <a href=\"https://creativecommons.org/choose/\"
        target=\"_new\">Creative\n    Commons</a> for help in creating this HTML.)"
      CSD U2 header footer_2018: "# Navigation Bar and Footer\\\r\n\n\\\r\nEach\nof
        your pages needs a navigation bar and a footer.\\\r\n\\\r\n\n# Do This\\\r\n\n-
        \  For\n    each page, make sure it has a navigation bar that links to other
        pages in\n    your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\"\n
        \   target=\"_new\">Lesson 9 Level 4</a>.\\\r\n-   For each page, make sure
        it has\n    a footer at the bottom that explains the copyright information
        for your page.\n    (Go to <a href=\"https://creativecommons.org/choose/\"
        target=\"_new\">Creative\n    Commons</a> for help in creating this HTML.)"
      CSD U2 header footer_2019: "# Navigation Bar and Footer\\\r\n\n\\\r\nEach\nof
        your pages needs a navigation bar and a footer.\\\r\n\\\r\n\n# Do This\\\r\n\n-
        \  For\n    each page, make sure it has a navigation bar that links to other
        pages in\n    your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\"\n
        \   target=\"_new\">Lesson 9 Level 4</a>.\\\r\n-   For each page, make sure
        it has\n    a footer at the bottom that explains the copyright information
        for your page.\n    (Go to <a href=\"https://creativecommons.org/choose/\"
        target=\"_new\">Creative\n    Commons</a> for help in creating this HTML.)"
      CSD U2 images intro: "# Images\\\r\n\n<div style=\"float:\nright; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n<details>\r\n<summary>**How\ndo
        I add images?**</summary>\r\nThe `<img>` tag allows you to show images\non
        your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img src=\"dog.png\"\nalt=\"dog
        jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to tell the browser\nwhich file
        to use, extra information, called an **attribute**, is added to\nthe &lt;img&gt;
        tag inside the brackets. The attribute `src` stands for **s**ou**rc**e\nand
        tell the name of the image. Image files names include extensions which\ntell
        the computer which type of image they are working with. Common extensions\nare
        .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have the src attribute,\nimage
        elements also have the `alt` attribute which describe the image. This\nis
        important in case the image doesn’t load or for people who have trouble\nwith
        their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an example of a  **void\nelement**
        because it starts and closes in one tag. To mark this we put the\n`/` which
        usually goes in the close tag at the end of the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**What\nis
        a void tag?**</summary>\r\nAn `<img>` tag is an example of a  **void element**\nbecause
        it starts and closes in one tag. To mark this we put the `/` which\nusually
        goes in the close tag at the end of the image tag. Void tags do not\nneed
        a closing tag because there is no text content which must be wrapped\nin tags.
        The content that shows on the screen is specified through the tags\nattributes.\r\n</details>\r\n<details>\r\n<summary>**Why
        does an image tag\nnot have a closing tag?**</summary>\r\nAn image tag is
        a void tag and void\ntags do not need a closing tag because there is no text
        content which must\nbe wrapped in tags. The content that shows on the screen
        is specified through\nthe tags attributes.\r\n</details>\r\n<details>\r\n<summary>**What
        is an attribute?**</summary>\r\nAttributes\nare extra information included
        in a tag.  Attributes have names and values.\nThe name tells what type of
        information is being provided and then the value\ngives the specific information
        for that tag. \r\n\r\nFor example &lt;img&gt;\ntags have two attributes, src
        and alt. src specifies the name of the image\nfile and alt tells the browser
        in readable text what the image is.\r\n</details>\r\n</div>\r\n\r\nThe\nrecipe
        page would look a lot better with a picture of the scotcheroos, so\nwe added
        one onto this page.  It might look better somewhere else on the page,\nthough.\r\n\r\n#
        Do This\r\n* Look at the file list on the left of your workspace,\nand find
        the file named \"scotcheroos.jpeg\"\r\n* Use the inspector tool to\nfind the
        code that made the image appear on the page.\r\n* Make sure you and\nyour
        partner agree on how the image tag works.\r\n* Try to move the picture\nto
        the top of the page."
      CSD U2 layout style freeplay - OLD: "# Personal Web Site\\\r\n\n\\\r\nTry\nout
        these some new CSS properties on your personal web site.\\\r\n\\\r\n\n-   Add\n
        \   styling of your choice to your web site. Be sure to use at least 3 new
        CSS\n    properties.\\\r\n    \\\r\n    # Checklist\\\r\n    \\\r\n\n-   At
        least 3 of the following CSS Properties\n    are used:\\\r\n    \\\r\n\n-
        \  `background-color`\\\r\n\n-   `height`\\\r\n\n-   `width`\\\r\n\n-   \\*\n
        \   `border-style`\\\r\n\n-   `border-radius`\\\r\n\n-   `border-width`\\\r\n\n-
        \  `float`\\\r\n\n-   `margin`\\\r\n    \\\r\n    \\\r\n    If you’ve used
        at least 3 of the properties from the\n    checklist, you can explore some
        additional CSS properties to add to your About\n    Me page."
      CSD U2 link demo: "# Making a Multi-page Site\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What are\nhyperlinks?**</summary>\\\r\nHyperlinks
        can connect to local web pages or external\nweb pages. To add navigation to
        your website you will need to add hyperlinks\nwhich connect your individual
        web pages. You can **add hyperlinks to your\nweb page using the `<a>` element**.
        \ The text you want to display as the hyperlink\ngoes between the opening
        and closing hyperlink tags. The `<a>` element has\nan attribute `href` which
        is the location to link to.  The location of a local\npage is just the file
        path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink to the unique
        houses page you would add the following code inside your\n`<body>` element.
        <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a hyperlink?**</summary>\\\r\nYou can **add hyperlinks to your web\npage
        using the `<a>` element**.  The text you want to display as the hyperlink\ngoes
        between the opening and closing hyperlink tags. The `<a>` element has\nan
        attribute `href` which is the location to link to.  The location of a local\npage
        is just the file path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink
        to the unique houses page you would add the following code inside your\n`<body>`
        element. <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nA web
        site\nshould include more than one web page, and they should connect to each
        other.   Here's\nan example of a project with multiple pages that are connected
        by hyperlinks\n(the blue underlined words that take you to another page when
        you click on\nthem).\\\r\n\\\r\n# Do This\\\r\n* Use the inspector tool to
        see the code that creates\nthe hyperlinks on the top of index.html.\\\r\n*
        Discuss with your partner how\nyou think that code works.\\\r\n* Click on
        recipe.html in the files list on\nthe left hand side.  Add a hyperlink to
        the top of this page that will take\nyou back to index.html."
      CSD U2 link demo_2018: "# Making a Multi-page Site\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What are\nhyperlinks?**</summary>\\\r\nHyperlinks
        can connect to local web pages or external\nweb pages. To add navigation to
        your website you will need to add hyperlinks\nwhich connect your individual
        web pages. You can **add hyperlinks to your\nweb page using the `<a>` element**.
        \ The text you want to display as the hyperlink\ngoes between the opening
        and closing hyperlink tags. The `<a>` element has\nan attribute `href` which
        is the location to link to.  The location of a local\npage is just the file
        path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink to the unique
        houses page you would add the following code inside your\n`<body>` element.
        <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a hyperlink?**</summary>\\\r\nYou can **add hyperlinks to your web\npage
        using the `<a>` element**.  The text you want to display as the hyperlink\ngoes
        between the opening and closing hyperlink tags. The `<a>` element has\nan
        attribute `href` which is the location to link to.  The location of a local\npage
        is just the file path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink
        to the unique houses page you would add the following code inside your\n`<body>`
        element. <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nA web
        site\nshould include more than one web page, and they should connect to each
        other.   Here's\nan example of a project with multiple pages that are connected
        by hyperlinks\n(the blue underlined words that take you to another page when
        you click on\nthem).\\\r\n\\\r\n# Do This\\\r\n* Use the inspector tool to
        see the code that creates\nthe hyperlinks on the top of index.html.\\\r\n*
        Discuss with your partner how\nyou think that code works.\\\r\n* Click on
        recipe.html in the files list on\nthe left hand side.  Add a hyperlink to
        the top of this page that will take\nyou back to index.html."
      CSD U2 link demo_2019: "# Making a Multi-page Site\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What are\nhyperlinks?**</summary>\\\r\nHyperlinks
        can connect to local web pages or external\nweb pages. To add navigation to
        your website you will need to add hyperlinks\nwhich connect your individual
        web pages. You can **add hyperlinks to your\nweb page using the `<a>` element**.
        \ The text you want to display as the hyperlink\ngoes between the opening
        and closing hyperlink tags. The `<a>` element has\nan attribute `href` which
        is the location to link to.  The location of a local\npage is just the file
        path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink to the unique
        houses page you would add the following code inside your\n`<body>` element.
        <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a hyperlink?**</summary>\\\r\nYou can **add hyperlinks to your web\npage
        using the `<a>` element**.  The text you want to display as the hyperlink\ngoes
        between the opening and closing hyperlink tags. The `<a>` element has\nan
        attribute `href` which is the location to link to.  The location of a local\npage
        is just the file path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink
        to the unique houses page you would add the following code inside your\n`<body>`
        element. <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nA web
        site\nshould include more than one web page, and they should connect to each
        other.   Here's\nan example of a project with multiple pages that are connected
        by hyperlinks\n(the blue underlined words that take you to another page when
        you click on\nthem).\\\r\n\\\r\n# Do This\\\r\n* Use the inspector tool to
        see the code that creates\nthe hyperlinks on the top of index.html.\\\r\n*
        Discuss with your partner how\nyou think that code works.\\\r\n* Click on
        recipe.html in the files list on\nthe left hand side.  Add a hyperlink to
        the top of this page that will take\nyou back to index.html."
      CSD U2 link pages: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  \\!\\[](\\<<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38>\nPM.png>).
        \ The new file will appear in the file list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        header\\\r\n    \\\r"
      CSD U2 lists intro: "# Lists\\\r\n\n<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />\\\r\nAn unordered list element has the tag `<ul> </ul>`.\nThis is
        an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the unordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `<ul> </ul>`.  Next, add your list items **inside**\nthe
        unordered list tags.  To make each list item, use the list item tags `<li>\n</li>`
        and write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can\nbe
        helpful to indent your `<li> </li>` tags so it's clear they are contained\nin
        the `<ul> </ul>` tags.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tags\n`<ol>
        </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the ordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items. To make the ordered list, write\nthe ordered
        list tags `<ol> </ol>`. Next, add your list items **inside** the\nordered
        list tags. To make each list item, use the list item tags `<li> </li>`\nand
        write the list item inside the tags.\\\r\n<br /><br/>\\\r\nIt can be helpful\nto
        indent your `<li> </li>` tags so it's clear they are contained in the\n`<ol>
        </ol>` tags.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou can also use HTML
        to\nmake different types of lists on your web page.  This recipe includes
        two\ndifferent types of lists, one ordered (with numbers) and one unordered
        (with\nbullets).\\\r\n\\\r\n#  Do This\\\r\n\\\r\n* Use the inspector tool
        to see the code\nthat is making the two different kinds of lists.\\\r\n* Make
        sure you and your\npartner agree on what the different tags do.\\\r\n* Fix
        the code so that the\nsecond item in each list displays correctly"
      CSD U2 lists intro_2018: "# Lists\\\r\n\n<div style=\"float: right;\nheight:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />\\\r\nAn unordered list element has the tag `<ul> </ul>`.\nThis is
        an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the unordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `<ul> </ul>`.  Next, add your list items **inside**\nthe
        unordered list tags.  To make each list item, use the list item tags `<li>\n</li>`
        and write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can\nbe
        helpful to indent your `<li> </li>` tags so it's clear they are contained\nin
        the `<ul> </ul>` tags.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tags\n`<ol>
        </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the ordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items. To make the ordered list, write\nthe ordered
        list tags `<ol> </ol>`. Next, add your list items **inside** the\nordered
        list tags. To make each list item, use the list item tags `<li> </li>`\nand
        write the list item inside the tags.\\\r\n<br /><br/>\\\r\nIt can be helpful\nto
        indent your `<li> </li>` tags so it's clear they are contained in the\n`<ol>
        </ol>` tags.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou can also use HTML
        to\nmake different types of lists on your web page.  This recipe includes
        two\ndifferent types of lists, one ordered (with numbers) and one unordered
        (with\nbullets).\\\r\n\\\r\n#  Do This\\\r\n\\\r\n* Use the inspector tool
        to see the code\nthat is making the two different kinds of lists.\\\r\n* Make
        sure you and your\npartner agree on what the different tags do.\\\r\n* Fix
        the code so that the\nsecond item in each list displays correctly"
      CSD U2 lists intro_2019: "# Lists\\\r\n\n<div style=\"float: right;\nheight:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />\\\r\nAn unordered list element has the tag `<ul> </ul>`.\nThis is
        an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the unordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `<ul> </ul>`.  Next, add your list items **inside**\nthe
        unordered list tags.  To make each list item, use the list item tags `<li>\n</li>`
        and write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can\nbe
        helpful to indent your `<li> </li>` tags so it's clear they are contained\nin
        the `<ul> </ul>` tags.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tags\n`<ol>
        </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the ordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items. To make the ordered list, write\nthe ordered
        list tags `<ol> </ol>`. Next, add your list items **inside** the\nordered
        list tags. To make each list item, use the list item tags `<li> </li>`\nand
        write the list item inside the tags.\\\r\n<br /><br/>\\\r\nIt can be helpful\nto
        indent your `<li> </li>` tags so it's clear they are contained in the\n`<ol>
        </ol>` tags.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou can also use HTML
        to\nmake different types of lists on your web page.  This recipe includes
        two\ndifferent types of lists, one ordered (with numbers) and one unordered
        (with\nbullets).\\\r\n\\\r\n#  Do This\\\r\n\\\r\n* Use the inspector tool
        to see the code\nthat is making the two different kinds of lists.\\\r\n* Make
        sure you and your\npartner agree on what the different tags do.\\\r\n* Fix
        the code so that the\nsecond item in each list displays correctly"
      CSD U2 navigation: "# Create a Navigation Bar\\\r\n\n\\\r\nHere's\nyour project
        from before.  You'll be linking the two pages by creating a\n**navigation
        bar** at the top of the page.  Websites usually have the same\nnavigation
        bar across all of their pages so you can get back and forth between\nthings
        on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\"\ntarget=\"_new\">this
        page</a>\\\r\n\\\r\n\n# Do This\\\r\n\n-   In your home page (index.html),\n
        \   add two hyperlinks at the top of the page, one to your lists page, and
        one\n    to the home page.\\\r\n-   _Even though it might seem strange to
        link a page\n    to itself, it's less confusing if the navigation bar is exactly
        the same\n    on every page._\\\r\n-   Copy the code for the navigation bar,
        then add it to\n    the top of your lists page.\\\r\n-   Test your links in
        the preview area by clicking\n    on them.\\\r\n    \\\r"
      CSD U2 navigation_2018: "# Create a Navigation Bar\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be linking the two pages by creating a\n**navigation
        bar** at the top of the page.  Websites usually have the same\nnavigation
        bar across all of their pages so you can get back and forth between\nthings
        on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\"\ntarget=\"_new\">this
        page</a>\\\r\n\\\r\n\n# Do This\\\r\n\n-   In your home page (index.html),\n
        \   add two hyperlinks at the top of the page, one to your lists page, and
        one\n    to the home page.\\\r\n-   _Even though it might seem strange to
        link a page\n    to itself, it's less confusing if the navigation bar is exactly
        the same\n    on every page._\\\r\n-   Copy the code for the navigation bar,
        then add it to\n    the top of your lists page.\\\r\n-   Test your links in
        the preview area by clicking\n    on them.\\\r\n    \\\r"
      CSD U2 navigation_2019: "# Create a Navigation Bar\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be linking the two pages by creating a\n**navigation
        bar** at the top of the page.  Websites usually have the same\nnavigation
        bar across all of their pages so you can get back and forth between\nthings
        on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\"\ntarget=\"_new\">this
        page</a>\\\r\n\\\r\n\n# Do This\\\r\n\n-   In your home page (index.html),\n
        \   add two hyperlinks at the top of the page, one to your lists page, and
        one\n    to the home page.\\\r\n-   _Even though it might seem strange to
        link a page\n    to itself, it's less confusing if the navigation bar is exactly
        the same\n    on every page._\\\r\n-   Copy the code for the navigation bar,
        then add it to\n    the top of your lists page.\\\r\n-   Test your links in
        the preview area by clicking\n    on them.\\\r\n    \\\r"
      CSD U2 new page: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  \\!\\[](\\<<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38>\nPM.png>).
        \ The new file will appear in the files list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        heading\\\r\n    \\\r"
      CSD U2 new page_2018: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  \\!\\[](\\<<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38>\nPM.png>).
        \ The new file will appear in the files list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        heading\\\r\n    \\\r"
      CSD U2 new page_2019: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  \\!\\[](\\<<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38>\nPM.png>).
        \ The new file will appear in the files list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        heading\\\r\n    \\\r"
      CSD U2 ordered list: "# Ordered Lists\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are the two types of lists?**</summary>\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\r\n<details>\r\n<summary>**What\nis
        an ordered list?**</summary>\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\r\n<br /><br />\r\nAn ordered list element has the tag\n`<ol>`
        . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li>`;. This is an\nabbreviation
        for <strong>L</strong>ist <strong>I</strong>tem.  The list item\nelement is
        a child element, which means that it goes inside of its parent\nelement, the
        ordered list (`<ol>`).\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items.  To make the ordered list, write\nthe
        ordered list tags `<ol></ol>`.  Next, add your list items **inside** the\nordered
        list tags.  To make each list item, use the list item tags `<li></li>`\nand
        write the list item inside the tags.\r\n<br /><br />\r\nIt can be helpful\nto
        indent your `<li>` tags so it's clear they are contained in the `<ol>`\ntag.\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>**Show
        me working code.**</summary>\r\n<table\nborder=\"1\">\r\n<tr>\r\n<td>Example</td>\r\n<td>Result</td>\r\n</tr>\r\n<tr>\r\n<td><pre>\n&lt;ol&gt;
        <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt;\n<br>
        \  &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\r\n<td><img\nsrc=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04\nPM.png\"
        style=\"width:200px\"></td>\r\n</tr>\r\n</table>\r\n\r\n</details>\r\n</div>\r\n\r\nThis\npage
        should include an ordered list, but it's missing the list tags.\r\n\r\n#\nDo
        This\r\n\r\n* Use the `<ol>` and `<li>` tags to structure this content\ninto
        an ordered list that looks like the one below.\r\n\r\n*Hint: There will\nbe
        NO NUMBERS in your code.* \r\n\r\n![](https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03\nPM.png)"
      CSD U2 ordered list_2018: "# Ordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are the two types of lists?**</summary>\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\r\n<details>\r\n<summary>**What\nis
        an ordered list?**</summary>\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\r\n<br /><br />\r\nAn ordered list element has the tag\n`<ol>`
        . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li>`;. This is an\nabbreviation
        for <strong>L</strong>ist <strong>I</strong>tem.  The list item\nelement is
        a child element, which means that it goes inside of its parent\nelement, the
        ordered list (`<ol>`).\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items.  To make the ordered list, write\nthe
        ordered list tags `<ol></ol>`.  Next, add your list items **inside** the\nordered
        list tags.  To make each list item, use the list item tags `<li></li>`\nand
        write the list item inside the tags.\r\n<br /><br />\r\nIt can be helpful\nto
        indent your `<li>` tags so it's clear they are contained in the `<ol>`\ntag.\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>**Show
        me working code.**</summary>\r\n<table\nborder=\"1\">\r\n<tr>\r\n<td>Example</td>\r\n<td>Result</td>\r\n</tr>\r\n<tr>\r\n<td><pre>\n&lt;ol&gt;
        <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt;\n<br>
        \  &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\r\n<td><img\nsrc=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04\nPM.png\"
        style=\"width:200px\"></td>\r\n</tr>\r\n</table>\r\n\r\n</details>\r\n</div>\r\n\r\nThis\npage
        should include an ordered list, but it's missing the list tags.\r\n\r\n#\nDo
        This\r\n\r\n* Use the `<ol>` and `<li>` tags to structure this content\ninto
        an ordered list that looks like the one below.\r\n\r\n*Hint: There will\nbe
        NO NUMBERS in your code.* \r\n\r\n![](https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03\nPM.png)"
      CSD U2 ordered list_2019: "# Ordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\r\n<details>\r\n<summary>**What
        are the two types of lists?**</summary>\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\r\n<details>\r\n<summary>**What\nis
        an ordered list?**</summary>\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\r\n<br /><br />\r\nAn ordered list element has the tag\n`<ol>`
        . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li>`;. This is an\nabbreviation
        for <strong>L</strong>ist <strong>I</strong>tem.  The list item\nelement is
        a child element, which means that it goes inside of its parent\nelement, the
        ordered list (`<ol>`).\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items.  To make the ordered list, write\nthe
        ordered list tags `<ol></ol>`.  Next, add your list items **inside** the\nordered
        list tags.  To make each list item, use the list item tags `<li></li>`\nand
        write the list item inside the tags.\r\n<br /><br />\r\nIt can be helpful\nto
        indent your `<li>` tags so it's clear they are contained in the `<ol>`\ntag.\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>**Show
        me working code.**</summary>\r\n<table\nborder=\"1\">\r\n<tr>\r\n<td>Example</td>\r\n<td>Result</td>\r\n</tr>\r\n<tr>\r\n<td><pre>\n&lt;ol&gt;
        <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt;\n<br>
        \  &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\r\n<td><img\nsrc=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04\nPM.png\"
        style=\"width:200px\"></td>\r\n</tr>\r\n</table>\r\n\r\n</details>\r\n</div>\r\n\r\nThis\npage
        should include an ordered list, but it's missing the list tags.\r\n\r\n#\nDo
        This\r\n\r\n* Use the `<ol>` and `<li>` tags to structure this content\ninto
        an ordered list that looks like the one below.\r\n\r\n*Hint: There will\nbe
        NO NUMBERS in your code.* \r\n\r\n![](https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03\nPM.png)"
      CSD U2 project review: "# Review Your Project\\\r\n\n\\\r\nYou're\nalmost ready
        to publish your project, but you should check one more time that\nyou have
        fulfilled all the requirements for this project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nCheck
        that you are comfortable sharing all the information that's on your\nsite.\\\r\n\n-
        \  Check that all of your images are correctly attributed, and that\n    you
        have the right to put them on your site.\\\r\n-   Check that your project\n
        \   includes everything included in the project rubric.\\\r\n-   Use comments
        and\n    whitespace to make your website readable.\\\r\n-   Ask your partner
        to help you\n    find any potential problems with your site.\\\r"
      CSD U2 project review_2018: "# Review Your Project\\\r\n\n\\\r\nYou're\nalmost
        ready to publish your project, but you should check one more time that\nyou
        have fulfilled all the requirements for this project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nCheck
        that you are comfortable sharing all the information that's on your\nsite.\\\r\n\n-
        \  Check that all of your images are correctly attributed, and that\n    you
        have the right to put them on your site.\\\r\n-   Check that your project\n
        \   includes everything included in the project rubric.\\\r\n-   Use comments
        and\n    whitespace to make your website readable.\\\r\n-   Ask your partner
        to help you\n    find any potential problems with your site.\\\r"
      CSD U2 project review_2019: "# Review Your Project\\\r\n\n\\\r\nYou're\nalmost
        ready to publish your project, but you should check one more time that\nyou
        have fulfilled all the requirements for this project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nCheck
        that you are comfortable sharing all the information that's on your\nsite.\\\r\n\n-
        \  Check that all of your images are correctly attributed, and that\n    you
        have the right to put them on your site.\\\r\n-   Check that your project\n
        \   includes everything included in the project rubric.\\\r\n-   Use comments
        and\n    whitespace to make your website readable.\\\r\n-   Ask your partner
        to help you\n    find any potential problems with your site.\\\r"
      CSD U2 project share: "# Share Your Project\\\r\n\n\\\r\nIt's\ntime to share
        your project with the world!\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click the\n
        \   \\!\\[](\\<<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27>\n
        \   AM.png>) button at the top of this page.\\\r\n-   Copy the URL it gives
        you, and\n    email it to the people you want to see your page.\\\r\n    \\\r"
      CSD U2 project share_2018: "# Share Your Project\\\r\n\n\\\r\nIt's\ntime to
        share your project with the world!\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click
        the\n    \\!\\[](\\<<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27>\n
        \   AM.png>) button at the top of this page.\\\r\n-   Copy the URL it gives
        you, and\n    email it to the people you want to see your page.\\\r\n    \\\r"
      CSD U2 project share_2019: "# Share Your Project\\\r\n\n\\\r\nIt's\ntime to
        share your project with the world!\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click
        the\n    \\!\\[](\\<<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27>\n
        \   AM.png>) button at the top of this page.\\\r\n-   Copy the URL it gives
        you, and\n    email it to the people you want to see your page.\\\r\n    \\\r"
      CSD U2 text style freeplay - OLD: "# Adding Styles\\\r\n\n\\\r\nNow\nyou can
        style the text on your personal web site!\\\r\n\\\r\n\n-   Open your style\n
        \   sheet and add styling of your choice to your page. Be sure to use at least\n
        \   3 different CSS properties.\\\r\n    \\\r\n    # Checklist\\\r\n    \\\r\n\n-
        \  At least 3 of the\n    following CSS Properties are used:\\\r\n\n-   `font-size`\\\r\n\n-
        \  `font-family`\\\r\n\n-   `color`\\\r\n\n-   `text-decoration`\\\r\n\n-
        \  `text-align`\\\r\n    \\\r\n    If you’ve used\n    at least 3 of the properties
        from the checklist, you can explore some additional\n    text properties to
        add to your project."
      CSD U2 unordered list: "# Unordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />An unordered list element has the tag &lt;ul&gt; . This\nis an abbreviation
        for <strong>U</strong>nordered <strong>L</strong>ist. Each\nitem in the list
        is marked by a list item element &lt;li&gt;. This is an abbreviation\nfor
        <strong>L</strong>ist <strong>I</strong>tem.  The list item element is\na
        child element, which means that it goes inside of its parent element, the\nunordered
        list (&lt;ul&gt;).\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `&lt;ul&gt; &lt;/ul&gt;`.  Next, add your list\nitems
        **inside** the unordered list tags.  To make each list item, use the\nlist
        item tags `&lt;li&gt; &lt;/li&gt;` and write the list item inside the\ntags.\\\r\n<br
        /><br />\\\r\nIt can be helpful to indent your &lt;li&gt; tags\nso it's clear
        they are contained in the &lt;ul&gt; tag.\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**Show\nme
        working code.**</summary>\\\r\n<table border=\"1\">\\\r\n<tr>\\\r\n<td>Example</td>\\\r\n<td>Result</td>\\\r\n</tr>\\\r\n<tr>\\\r\n<td><pre>\n&lt;ul&gt;
        <br>   &lt;li&gt;Red &lt;/li&gt; <br>   &lt;li&gt;Green &lt;/li&gt;\n<br>
        \  &lt;li&gt;Blue&lt;/li&gt; <br> &lt;/ul&gt; </pre></td>\\\r\n<td><img\nsrc=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32\nPM.png\"
        style=\"width:200px\"></td>\\\r\n</tr>\\\r\n</table>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        should have an unordered list, but it's missing the list tags.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Use the `<ul>` and `<li>` tags to structure the content
        into\nan unordered list like the picture below.\\\r\n\\\r\n![](https://images.code.org/64581a90765cd2d53b6c5235c48f2855-image-1493238358294.25.04\nPM.png)"
      CSD U2 unordered list_2018: "# Unordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />An unordered list element has the tag &lt;ul&gt; . This\nis an abbreviation
        for <strong>U</strong>nordered <strong>L</strong>ist. Each\nitem in the list
        is marked by a list item element &lt;li&gt;. This is an abbreviation\nfor
        <strong>L</strong>ist <strong>I</strong>tem.  The list item element is\na
        child element, which means that it goes inside of its parent element, the\nunordered
        list (&lt;ul&gt;).\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `&lt;ul&gt; &lt;/ul&gt;`.  Next, add your list\nitems
        **inside** the unordered list tags.  To make each list item, use the\nlist
        item tags `&lt;li&gt; &lt;/li&gt;` and write the list item inside the\ntags.\\\r\n<br
        /><br />\\\r\nIt can be helpful to indent your &lt;li&gt; tags\nso it's clear
        they are contained in the &lt;ul&gt; tag.\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**Show\nme
        working code.**</summary>\\\r\n<table border=\"1\">\\\r\n<tr>\\\r\n<td>Example</td>\\\r\n<td>Result</td>\\\r\n</tr>\\\r\n<tr>\\\r\n<td><pre>\n&lt;ul&gt;
        <br>   &lt;li&gt;Red &lt;/li&gt; <br>   &lt;li&gt;Green &lt;/li&gt;\n<br>
        \  &lt;li&gt;Blue&lt;/li&gt; <br> &lt;/ul&gt; </pre></td>\\\r\n<td><img\nsrc=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32\nPM.png\"
        style=\"width:200px\"></td>\\\r\n</tr>\\\r\n</table>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        should have an unordered list, but it's missing the list tags.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Use the `<ul>` and `<li>` tags to structure the content
        into\nan unordered list like the picture below.\\\r\n\\\r\n![](https://images.code.org/64581a90765cd2d53b6c5235c48f2855-image-1493238358294.25.04\nPM.png)"
      CSD U2 unordered list_2019: "# Unordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />An unordered list element has the tag &lt;ul&gt; . This\nis an abbreviation
        for <strong>U</strong>nordered <strong>L</strong>ist. Each\nitem in the list
        is marked by a list item element &lt;li&gt;. This is an abbreviation\nfor
        <strong>L</strong>ist <strong>I</strong>tem.  The list item element is\na
        child element, which means that it goes inside of its parent element, the\nunordered
        list (&lt;ul&gt;).\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `&lt;ul&gt; &lt;/ul&gt;`.  Next, add your list\nitems
        **inside** the unordered list tags.  To make each list item, use the\nlist
        item tags `&lt;li&gt; &lt;/li&gt;` and write the list item inside the\ntags.\\\r\n<br
        /><br />\\\r\nIt can be helpful to indent your &lt;li&gt; tags\nso it's clear
        they are contained in the &lt;ul&gt; tag.\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**Show\nme
        working code.**</summary>\\\r\n<table border=\"1\">\\\r\n<tr>\\\r\n<td>Example</td>\\\r\n<td>Result</td>\\\r\n</tr>\\\r\n<tr>\\\r\n<td><pre>\n&lt;ul&gt;
        <br>   &lt;li&gt;Red &lt;/li&gt; <br>   &lt;li&gt;Green &lt;/li&gt;\n<br>
        \  &lt;li&gt;Blue&lt;/li&gt; <br> &lt;/ul&gt; </pre></td>\\\r\n<td><img\nsrc=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32\nPM.png\"
        style=\"width:200px\"></td>\\\r\n</tr>\\\r\n</table>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        should have an unordered list, but it's missing the list tags.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Use the `<ul>` and `<li>` tags to structure the content
        into\nan unordered list like the picture below.\\\r\n\\\r\n![](https://images.code.org/64581a90765cd2d53b6c5235c48f2855-image-1493238358294.25.04\nPM.png)"
      CSD U2 upload image: "# Upload a new image\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n<details>\r\n<summary>**How\ndo
        I add images?**</summary>\r\nThe `<img>` tag allows you to show images\non
        your web page. <br><br>\r\n\r\nExample:\r\n<pre>&lt;img src=\"dog.png\"\nalt=\"dog
        jumping\"/&gt;</pre><br><br>\r\n\r\nIn order to tell the browser\nwhich file
        to use, extra information, called an **attribute**, is added to\nthe &lt;img&gt;
        tag inside the brackets. The attribute `src` stands for **s**ou**rc**e\nand
        tell the name of the image. Image files names include extensions which\ntell
        the computer which type of image they are working with. Common extensions\nare
        .jpg, .jpeg, .png. <br><br>\r\n\r\nIn addition to have the src attribute,\nimage
        elements also have the `alt` attribute which describe the image. This\nis
        important in case the image doesn’t load or for people who have trouble\nwith
        their eyesight. <br><br>\r\n\r\nAn `<img>` tag is an example of a  **void\nelement**
        because it starts and closes in one tag. To mark this we put the\n`/` which
        usually goes in the close tag at the end of the image tag.\r\n\r\n</details>\r\n<details>\r\n<summary>**What\nis
        a void tag?**</summary>\r\nAn `<img>` tag is an example of a  **void element**\nbecause
        it starts and closes in one tag. To mark this we put the `/` which\nusually
        goes in the close tag at the end of the image tag. Void tags do not\nneed
        a closing tag because there is no text content which must be wrapped\nin tags.
        The content that shows on the screen is specified through the tags\nattributes.\r\n</details>\r\n<details>\r\n<summary>**Why
        does an image tag\nnot have a closing tag?**</summary>\r\nAn image tag is
        a void tag and void\ntags do not need a closing tag because there is no text
        content which must\nbe wrapped in tags. The content that shows on the screen
        is specified through\nthe tags attributes.\r\n</details>\r\n<details>\r\n<summary>**What
        is an attribute?**</summary>\r\nAttributes\nare extra information included
        in a tag.  Attributes have names and values.\nThe name tells what type of
        information is being provided and then the value\ngives the specific information
        for that tag. \r\n\r\nFor example &lt;img&gt;\ntags have two attributes, src
        and alt. src specifies the name of the image\nfile and alt tells the browser
        in readable text what the image is.\r\n</details>\r\n</div>\r\n\r\nYou\ncan
        now add your own images to your personal website.  If you don't have\nthe
        images that you want on your computer, you can search for them here and\ndownload
        them.\r\n<form action=\"https://www.google.com/search\" method=\"GET\"\ntarget=\"_blank\">\r\n<input
        type=hidden name=site value=\"imghp\" />\r\n<input\ntype=hidden name=tbm value=isch
        />\r\n<input type=hidden name=tbs value=\"sur:fmc\"\n/>\r\n<input name=q />\r\n<input
        type=submit value=\"search\">\r\n<br />\r\n</form>\r\n\r\nOnce\nyou have your
        images, click ![](https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49\nPM.png)
        and upload the image from your computer into your project.\r\n\r\n#\nDo This\r\n*
        Upload at least two images into your project\r\n* Use the `<img>`\ntag to
        display the images in your website."
      CSD U2 upload images: "# Upload Images\\\r\n\n\\\r\nNext, you'll\nneed to upload
        all of your images into your project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nDownload
        all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\"\ntarget=\"_new\">Lesson
        7 Level 5</a> for help if you need it.\\\r\n\n-   Make sure\n    you have
        the right to use these images.\\\r\n-   Write down all of the attribution\n
        \   information that you need.\\\r\n-   Upload all of the images into your
        project.  Visit\n    <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson
        8 Level 6</a>\n    if you've forgotten how.\\\r\n    \\\r"
      CSD U2 upload images_2018: "# Upload Images\\\r\n\n\\\r\nNext, you'll\nneed
        to upload all of your images into your project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nDownload
        all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\"\ntarget=\"_new\">Lesson
        7 Level 5</a> for help if you need it.\\\r\n\n-   Make sure\n    you have
        the right to use these images.\\\r\n-   Write down all of the attribution\n
        \   information that you need.\\\r\n-   Upload all of the images into your
        project.  Visit\n    <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson
        8 Level 6</a>\n    if you've forgotten how.\\\r\n    \\\r"
      CSD U2 upload images_2019: "# Upload Images\\\r\n\n\\\r\nNext, you'll\nneed
        to upload all of your images into your project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nDownload
        all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\"\ntarget=\"_new\">Lesson
        7 Level 5</a> for help if you need it.\\\r\n\n-   Make sure\n    you have
        the right to use these images.\\\r\n-   Write down all of the attribution\n
        \   information that you need.\\\r\n-   Upload all of the images into your
        project.  Visit\n    <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson
        8 Level 6</a>\n    if you've forgotten how.\\\r\n    \\\r"
      CSD U3 - conditionals - arrows and gears: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake
        the gears spin only when the space key is being held down.\\\r\n\\\r\n\n#
        Do\n\nThis\\\r\n\\\r\n\n-   Add an `if` statement.\\\r\n-   Use `keyDown`
        as input to the if\n    statement to check when the space key is pressed.\\\r\n-
        \  Move the code that\n    makes the gears rotate inside the `if`."
      CSD U3 Conditionals Apple 2: "# Turning Red\\\r\n\n\\\r\nNow\nthat we know how
        to use _if_ statements, you can do more than just check if\nthe apple has
        reached a scale of 2, you turn it red once it happens.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUse a conditional in the draw loop to check whether `apple.scale`\nis
        greater than 2 - if it is, set the apples new animation to \"apple*red\".\\\r\n\\\r\n\\_Challenge:\nCan
        you also make the apple stop growing once it turns red?*"
      CSD U3 Conditionals Apple: "# More Practice With Booleans\\\r\n\n\\\r\nLet's\nuse
        one more Boolean expression to check the condition of a sprite.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\nThere is a growing apple sprite created for you. It starts
        as green\nand should turn red when it gets to a scale of 2. We won't worry
        about making\nit red yet, let's just use a `console.log` command to check
        whether it's\nscale is 2 yet.\\\r\n\\\r\n\n-   Add a `console.log` statement.\\\r\n-
        \  Add a Boolean\n    expression inside the `console.log` that checks whether
        the `apple.scale`\n    is greater than 2."
      CSD U3 Diagonal Movement: "<img src=\"https://images.code.org/f92774863b17074adc85b8f6bbd017f2-image-1492726926884.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Diagonal Movement\\\r\n\n\\\r\nUpdating\nonly
        the `x` or `y` properties of a sprite can only make it move straight\nup and
        down or left and right. If you want a sprite to move on a diagonal\npath you'll
        need to updated _both_ of those properties.\\\r\n\\\r\nThis program\ncurrently
        makes the mouse move straight down the screen - can you update it\nso that
        it moves diagonally across the screen like the image to the right?\\\r\n\\\r\n_Challenge:\nCan
        you make the mouse point in the same direction as the image?_"
      CSD U3 Draw Loop Plugged orange and green: "<img src=\"https://images.code.org/2b5b2ce029e2f1d7377db7dcd7760cf0-image-1492031771047.15.45\nPM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Using the Draw Loop\\\r\n\n\\\r\nNow\nit's
        your turn to do some work with the draw loop. Remember that the code\ninside
        the draw loop is run by Game Lab over and over again.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        code to this program so that your drawing has orange circles being drawn,\ntoo.\\\r\n\n-
        \  Move on when your program looks like the picture to the right."
      CSD U3 Draw Loop Plugged orange and green_2018: "<img src=\"https://images.code.org/2b5b2ce029e2f1d7377db7dcd7760cf0-image-1492031771047.15.45\nPM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Using the Draw Loop\\\r\n\n\\\r\nNow\nit's
        your turn to do some work with the draw loop. Remember that the code\ninside
        the draw loop is run by Game Lab over and over again.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        code to this program so that your drawing has orange circles being drawn,\ntoo.\\\r\n\n-
        \  Move on when your program looks like the picture to the right."
      CSD U3 Draw Loop Plugged orange and green_2019: "<img src=\"https://images.code.org/2b5b2ce029e2f1d7377db7dcd7760cf0-image-1492031771047.15.45\nPM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Using the Draw Loop\\\r\n\n\\\r\nNow\nit's
        your turn to do some work with the draw loop. Remember that the code\ninside
        the draw loop is run by Game Lab over and over again.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        code to this program so that your drawing has orange circles being drawn,\ntoo.\\\r\n\n-
        \  Move on when your program looks like the picture to the right."
      CSD U3 Draw Loop Plugged predict 1 embed: "# Predict\\\r\n\n\\\r\nThis\nprogram
        has some code in the draw loop and some code outside of it. Remember:\\\r\n\\\r\n\\*\nAll
        your code outside the draw loop is run first, one time\\\r\n\n-   All your
        code\n    inside the draw loop is run over and over forever\\\r\n    \\\r\n
        \   What will this program\n    do? Write your prediction below."
      CSD U3 Draw Loop Plugged predict 1: "# Draw Loop\\\r\n\n\\\r\nHere's\nan example
        of the draw loop at work.\\\r\n\\\r\n\n# Do this\\\r\n\n-   Run the code and\n
        \   see how it works.\\\r\n-   Discuss with your partner whether this looks
        like the\n    flip book you saw in the video.  Why or why not?"
      CSD U3 Draw Loop Plugged predict 1_2018: "# Draw Loop\\\r\n\n\\\r\nHere's\nan
        example of the draw loop at work.\\\r\n\\\r\n\n# Do this\\\r\n\n-   Run the
        code and\n    see how it works.\\\r\n-   Discuss with your partner whether
        this looks like the\n    flip book you saw in the video.  Why or why not?"
      CSD U3 Draw Loop Plugged predict 1_2019: "# Draw Loop\\\r\n\n\\\r\nHere's\nan
        example of the draw loop at work.\\\r\n\\\r\n\n# Do this\\\r\n\n-   Run the
        code and\n    see how it works.\\\r\n-   Discuss with your partner whether
        this looks like the\n    flip book you saw in the video.  Why or why not?"
      CSD U3 Draw Loop Plugged predict 2 embed: "# Predict\\\r\n\n\\\r\nThis\nprogram
        has one small difference that will make it run a little differently.\nAgain
        though, remember:\\\r\n\\\r\n\n-   All your code outside the draw loop is
        run\n    first, one time\\\r\n-   All your code inside the draw loop is run
        over and over\n    forever\\\r\n    \\\r\n    What will this program do? Write
        your prediction below."
      CSD U3 Draw Loop Plugged predict 2 embed_2018: "# Predict\\\r\n\n\\\r\nThis\nprogram
        has one small difference that will make it run a little differently.\nAgain
        though, remember:\\\r\n\\\r\n\n-   All your code outside the draw loop is
        run\n    first, one time\\\r\n-   All your code inside the draw loop is run
        over and over\n    forever\\\r\n    \\\r\n    What will this program do? Write
        your prediction below."
      CSD U3 Draw Loop Plugged predict 2 embed_2019: "# Predict\\\r\n\n\\\r\nThis\nprogram
        has one small difference that will make it run a little differently.\nAgain
        though, remember:\\\r\n\\\r\n\n-   All your code outside the draw loop is
        run\n    first, one time\\\r\n-   All your code inside the draw loop is run
        over and over\n    forever\\\r\n    \\\r\n    What will this program do? Write
        your prediction below."
      CSD U3 Draw Loop Plugged update your scene: "# Extend\n\nYour Scene\\\r\n\\\r\nThis
        is the sprite scene you made in the last lesson. You'll\nnow be updating it
        a little bit to use the draw loop and sprite properties.\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add\n    a draw loop to your program (you should only have one).\\\r\n-
        \  Use the lasso\n    selector (click, hold and drag) to select all your code
        and place it inside\n    your draw loop. Ctrl-Z will let you undo any mistakes
        you make.\\\r\n-   Add code\n    to your program that updates your sprites'
        `sprite.x`, `sprite.y`, or `sprite.rotation`\n    properties so that they
        move. You'll need to update them with `randomNumber()`.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged update your scene_2018: "# Extend\n\nYour Scene\\\r\n\\\r\nThis
        is the sprite scene you made in the last lesson. You'll\nnow be updating it
        a little bit to use the draw loop and sprite properties.\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add\n    a draw loop to your program (you should only have one).\\\r\n-
        \  Use the lasso\n    selector (click, hold and drag) to select all your code
        and place it inside\n    your draw loop. Ctrl-Z will let you undo any mistakes
        you make.\\\r\n-   Add code\n    to your program that updates your sprites'
        `sprite.x`, `sprite.y`, or `sprite.rotation`\n    properties so that they
        move. You'll need to update them with `randomNumber()`.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged update your scene_2019: "# Extend\n\nYour Scene\\\r\n\\\r\nThis
        is the sprite scene you made in the last lesson. You'll\nnow be updating it
        a little bit to use the draw loop and sprite properties.\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add\n    a draw loop to your program (you should only have one).\\\r\n-
        \  Use the lasso\n    selector (click, hold and drag) to select all your code
        and place it inside\n    your draw loop. Ctrl-Z will let you undo any mistakes
        you make.\\\r\n-   Add code\n    to your program that updates your sprites'
        `sprite.x`, `sprite.y`, or `sprite.rotation`\n    properties so that they
        move. You'll need to update them with `randomNumber()`.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite rotation: "\\<img\nsrc=\"<https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\ncombines some of the skills you've
        already seen. It's drawing ellipses in\nthe background and also updating sprite
        properties. This time it's changing\nthe sprite's `sprite.rotation` property.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation\nalready is updating one sprite's rotation
        property to make it look like it's\nshaking\\\r\n\\\r\n\n-   Run the program
        to see how it works.\\\r\n-   Add code to this\n    program to make the other
        alien shake just like the first.\\\r\n-   Move on when\n    your program looks
        like the picture to the right."
      CSD U3 Draw Loop Plugged wiggle sprite rotation_2018: "\\<img\nsrc=\"<https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\ncombines some of the skills you've
        already seen. It's drawing ellipses in\nthe background and also updating sprite
        properties. This time it's changing\nthe sprite's `sprite.rotation` property.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation\nalready is updating one sprite's rotation
        property to make it look like it's\nshaking\\\r\n\\\r\n\n-   Run the program
        to see how it works.\\\r\n-   Add code to this\n    program to make the other
        alien shake just like the first.\\\r\n-   Move on when\n    your program looks
        like the picture to the right."
      CSD U3 Draw Loop Plugged wiggle sprite rotation_2019: "\\<img\nsrc=\"<https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\ncombines some of the skills you've
        already seen. It's drawing ellipses in\nthe background and also updating sprite
        properties. This time it's changing\nthe sprite's `sprite.rotation` property.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation\nalready is updating one sprite's rotation
        property to make it look like it's\nshaking\\\r\n\\\r\n\n-   Run the program
        to see how it works.\\\r\n-   Add code to this\n    program to make the other
        alien shake just like the first.\\\r\n-   Move on when\n    your program looks
        like the picture to the right."
      CSD U3 Draw Loop Plugged wiggle sprite x: "\\<img src=\"<https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nSprites\nhave properties that let the computer
        know where and how to draw them. Two\ncommon properties to use are `sprite.x`
        and `sprite.y` which control the location\nof the sprite. Assigning these
        properties a new value will move your sprite\nto a new location on the screen.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation already\nis updating one sprite's x property
        to make it look like it's shaking\\\r\n\\\r\n\\*\nRun the program to see how
        it works.\\\r\n\n-   Edit the code in this program to\n    make the second
        sprite shake like the first one.\\\r\n-   Move on when your program\n    looks
        like the picture to the right.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite x_2018: "\\<img src=\"<https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nSprites\nhave properties that let the computer
        know where and how to draw them. Two\ncommon properties to use are `sprite.x`
        and `sprite.y` which control the location\nof the sprite. Assigning these
        properties a new value will move your sprite\nto a new location on the screen.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation already\nis updating one sprite's x property
        to make it look like it's shaking\\\r\n\\\r\n\\*\nRun the program to see how
        it works.\\\r\n\n-   Edit the code in this program to\n    make the second
        sprite shake like the first one.\\\r\n-   Move on when your program\n    looks
        like the picture to the right.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite x_2019: "\\<img src=\"<https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nSprites\nhave properties that let the computer
        know where and how to draw them. Two\ncommon properties to use are `sprite.x`
        and `sprite.y` which control the location\nof the sprite. Assigning these
        properties a new value will move your sprite\nto a new location on the screen.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation already\nis updating one sprite's x property
        to make it look like it's shaking\\\r\n\\\r\n\\*\nRun the program to see how
        it works.\\\r\n\n-   Edit the code in this program to\n    make the second
        sprite shake like the first one.\\\r\n-   Move on when your program\n    looks
        like the picture to the right.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite y: "\\<img src=\"<https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\nis very similar to the last,
        but this time, you'll add in the draw loop yourself.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\n-   Add the draw loop block to the bottom of this program.\\\r\n-
        \  Move\n    any blocks that need to be inside the draw loop.\\\r\n-   Move
        on when your program\n    looks like the picture to the right.\\\r"
      CSD U3 Draw Loop Plugged wiggle sprite y_2018: "\\<img src=\"<https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\nis very similar to the last,
        but this time, you'll add in the draw loop yourself.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\n-   Add the draw loop block to the bottom of this program.\\\r\n-
        \  Move\n    any blocks that need to be inside the draw loop.\\\r\n-   Move
        on when your program\n    looks like the picture to the right.\\\r"
      CSD U3 Draw Loop Plugged wiggle sprite y_2019: "\\<img src=\"<https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\nis very similar to the last,
        but this time, you'll add in the draw loop yourself.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\n-   Add the draw loop block to the bottom of this program.\\\r\n-
        \  Move\n    any blocks that need to be inside the draw loop.\\\r\n-   Move
        on when your program\n    looks like the picture to the right.\\\r"
      CSD U3 Drawing Squares to Corners: "<img src=\"https://images.code.org/9e09a96901b1e5ad9d5869b2b1fd3897-image-1498671940133.45.12\nAM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Place Squares in Corners\\\r\n\n\\\r\nA\nbig
        part of using Game Lab is understanding position. Remember you can always\nturn
        on the grid or hover with the mouse to help find the x and y position\nyou
        want.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Place two rectangles exactly
        in the corners\n    of the screen, just like the picture."
      CSD U3 Drawing Squares to Corners_2018: "<img src=\"https://images.code.org/9e09a96901b1e5ad9d5869b2b1fd3897-image-1498671940133.45.12\nAM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Place Squares in Corners\\\r\n\n\\\r\nA\nbig
        part of using Game Lab is understanding position. Remember you can always\nturn
        on the grid or hover with the mouse to help find the x and y position\nyou
        want.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Place two rectangles exactly
        in the corners\n    of the screen, just like the picture."
      CSD U3 Drawing Squares to Corners_2019: "<img src=\"https://images.code.org/9e09a96901b1e5ad9d5869b2b1fd3897-image-1498671940133.45.12\nAM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Place Squares in Corners\\\r\n\n\\\r\nA\nbig
        part of using Game Lab is understanding position. Remember you can always\nturn
        on the grid or hover with the mouse to help find the x and y position\nyou
        want.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Place two rectangles exactly
        in the corners\n    of the screen, just like the picture."
      CSD U3 Entertainment Sample 1: "# Alien Jumper\\\r\n\n\\\r\nPress\n\"Run\" to
        play the game on the left.  You can make the alien jump with the\nspace bar,
        and move it to the left and right with the arrow keys.  You score\nby collecting
        stars, and if you score high enough, the background will change."
      CSD U3 Entertainment Sample 1_2018: "# Alien Jumper\\\r\n\n\\\r\nPress\n\"Run\"
        to play the game on the left.  You can make the alien jump with the\nspace
        bar, and move it to the left and right with the arrow keys.  You score\nby
        collecting stars, and if you score high enough, the background will change."
      CSD U3 Entertainment Sample 1_2019: "# Alien Jumper\\\r\n\n\\\r\nPress\n\"Run\"
        to play the game on the left.  You can make the alien jump with the\nspace
        bar, and move it to the left and right with the arrow keys.  You score\nby
        collecting stars, and if you score high enough, the background will change."
      CSD U3 Entertainment Sample 2: "# Hungry Bunny\\\r\n\n\\\r\nThe\nbunny is hungry,
        and it's looking for mushrooms and carrots for dinner.\\\r\n\\\r\nTo\nwin,
        you'll need to find a dinner bowl, then collect at least ten carrots\nand
        five mushrooms.\\\r\n\\\r\nMake sure to avoid the bugs.  Ladybugs and snails\nwill
        eat your food, and bees will sting you, making you drop everything!\\\r\n\\\r\nUse\nthe
        space bar to jump.  You can squash ladybugs and snails by jumping on them.\\\r\n\\\r\nClick\n\"Run\"
        to start the program."
      CSD U3 Entertainment Sample 2_2018: "# Hungry Bunny\\\r\n\n\\\r\nThe\nbunny
        is hungry, and it's looking for mushrooms and carrots for dinner.\\\r\n\\\r\nTo\nwin,
        you'll need to find a dinner bowl, then collect at least ten carrots\nand
        five mushrooms.\\\r\n\\\r\nMake sure to avoid the bugs.  Ladybugs and snails\nwill
        eat your food, and bees will sting you, making you drop everything!\\\r\n\\\r\nUse\nthe
        space bar to jump.  You can squash ladybugs and snails by jumping on them.\\\r\n\\\r\nClick\n\"Run\"
        to start the program."
      CSD U3 Entertainment Sample 2_2019: "# Hungry Bunny\\\r\n\n\\\r\nThe\nbunny
        is hungry, and it's looking for mushrooms and carrots for dinner.\\\r\n\\\r\nTo\nwin,
        you'll need to find a dinner bowl, then collect at least ten carrots\nand
        five mushrooms.\\\r\n\\\r\nMake sure to avoid the bugs.  Ladybugs and snails\nwill
        eat your food, and bees will sting you, making you drop everything!\\\r\n\\\r\nUse\nthe
        space bar to jump.  You can squash ladybugs and snails by jumping on them.\\\r\n\\\r\nClick\n\"Run\"
        to start the program."
      CSD U3 Entertainment Sample 3: "# Animated Comics\\\r\n\n\\\r\nCombining\nimages,
        text, and some subtle animation can make for really interesting comics\nor
        graphic stories.  Click \"Run\" to see an example.\\\r"
      CSD U3 Entertainment Sample 3_2018: "# Animated Comics\\\r\n\n\\\r\nCombining\nimages,
        text, and some subtle animation can make for really interesting comics\nor
        graphic stories.  Click \"Run\" to see an example.\\\r"
      CSD U3 Entertainment Sample 3_2019: "# Animated Comics\\\r\n\n\\\r\nCombining\nimages,
        text, and some subtle animation can make for really interesting comics\nor
        graphic stories.  Click \"Run\" to see an example.\\\r"
      CSD U3 Entertainment Sample 4: "# Stamp Pad\\\r\n\n\\\r\nClick\n\"Run\" to start
        the program, then use the stamp pad to draw pictures with\nsimple colors and
        animal stamps.\\\r"
      CSD U3 Entertainment Sample 4_2018: "# Stamp Pad\\\r\n\n\\\r\nClick\n\"Run\"
        to start the program, then use the stamp pad to draw pictures with\nsimple
        colors and animal stamps.\\\r"
      CSD U3 Entertainment Sample 4_2019: "# Stamp Pad\\\r\n\n\\\r\nClick\n\"Run\"
        to start the program, then use the stamp pad to draw pictures with\nsimple
        colors and animal stamps.\\\r"
      CSD U3 Input Fish: "# Fish With Arrows\\\r\n\n\\\r\nThe fish\nare back. Can
        you make the fish move left only when the left arrow key is\npressed down?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add an if statement to check when\n    the left
        arrow key is pressed down.\\\r\n-   Move the commands for moving the\n    fish
        inside the if statement."
      CSD U3 Input Fish_2018: "# Fish With Arrows\\\r\n\n\\\r\nThe fish\nare back.
        Can you make the fish move left only when the left arrow key is\npressed down?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add an if statement to check when\n    the left
        arrow key is pressed down.\\\r\n-   Move the commands for moving the\n    fish
        inside the if statement."
      CSD U3 Input Fish_2019: "# Fish With Arrows\\\r\n\n\\\r\nThe fish\nare back.
        Can you make the fish move left only when the left arrow key is\npressed down?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add an if statement to check when\n    the left
        arrow key is pressed down.\\\r\n-   Move the commands for moving the\n    fish
        inside the if statement."
      CSD U3 Input Gears: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake the
        gears spin only when the space key is being held down.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Add an `if` statement.\\\r\n-   Use `keyDown` as input to the if\n    statement
        to check when the space key is pressed.\\\r\n-   Move the code that\n    makes
        the gears rotate inside the `if`."
      CSD U3 Input Gears_2018: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake
        the gears spin only when the space key is being held down.\\\r\n\\\r\n\n#
        Do\n\nThis\\\r\n\\\r\n\n-   Add an `if` statement.\\\r\n-   Use `keyDown`
        as input to the if\n    statement to check when the space key is pressed.\\\r\n-
        \  Move the code that\n    makes the gears rotate inside the `if`."
      CSD U3 Input Gears_2019: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake
        the gears spin only when the space key is being held down.\\\r\n\\\r\n\n#
        Do\n\nThis\\\r\n\\\r\n\n-   Add an `if` statement.\\\r\n-   Use `keyDown`
        as input to the if\n    statement to check when the space key is pressed.\\\r\n-
        \  Move the code that\n    makes the gears rotate inside the `if`."
      CSD U3 Keyboard Input Challenge-2018: "# Challenge\\\r\n\n_Check\nwith your
        teacher before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've
        been working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 Keyboard Input Challenge: "# Challenge\\\r\n\n_Check\nwith your teacher
        before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've been
        working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 Keyboard Input Challenge_2018: "# Challenge\\\r\n\n_Check\nwith your
        teacher before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've
        been working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 Keyboard Input Challenge_2018_2019: "# Challenge\\\r\n\n_Check\nwith
        your teacher before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've
        been working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 Keypress Boolean Predict: "# Make a Prediction:\n\nkeyDown()\\\r\nThe
        `keyDown()` block is the first of a new set of blocks that\nwill let us get
        input from the user. This is the first step on our road to\nactually making
        games! See if you can figure out how the `keyDown()` block\nworks.\\\r\n\\\r\nWhat
        do you think will happen when you run the program and press\nthe \"up\" arrow?
        Write your prediction below and then run the program to\nsee if your prediction
        was accurate."
      CSD U3 Keypress Watchers Predict: "# Make a Prediction:\n\nUser Input\\\r\n\\\r\nSo
        far you've used `keyDown` as a way to let users control\nyour programs, but
        that's just one of many ways to take input. In fact, just\none of many ways
        _to detect keypresses_! Depending on how you want to react\nto a keypress,
        there are a few other blocks you might want to use.\\\r\n\\\r\nRead\nthe program
        and predict below what will happen when you press each of the\nup, down, left,
        and right arrows.\\\r\n\\\r\nAfter making your prediction, run\nthe code and
        write down or share with your neighbor your observations.\\\r\n\\\r\n\\*\nWhat
        seems to be the difference between `keyDown()`, `keyWentDown()`, and\n`keyWentUp()`?\\\r\n\n-
        \  What do you think the exclamation mark (`!`) on line 10\n    does?\\\r\n-
        \  How might you use the different keypress blocks in a game?"
      CSD U3 Keypress Watchers Predict_2018: "# Make a Prediction:\n\nUser Input\\\r\n\\\r\nSo
        far you've used `keyDown` as a way to let users control\nyour programs, but
        that's just one of many ways to take input. In fact, just\none of many ways
        _to detect keypresses_! Depending on how you want to react\nto a keypress,
        there are a few other blocks you might want to use.\\\r\n\\\r\nRead\nthe program
        and predict below what will happen when you press each of the\nup, down, left,
        and right arrows.\\\r\n\\\r\nAfter making your prediction, run\nthe code and
        write down or share with your neighbor your observations.\\\r\n\\\r\n\\*\nWhat
        seems to be the difference between `keyDown()`, `keyWentDown()`, and\n`keyWentUp()`?\\\r\n\n-
        \  What do you think the exclamation mark (`!`) on line 10\n    does?\\\r\n-
        \  How might you use the different keypress blocks in a game?"
      CSD U3 Keypress Watchers Predict_2019: "# Make a Prediction:\n\nUser Input\\\r\n\\\r\nSo
        far you've used `keyDown` as a way to let users control\nyour programs, but
        that's just one of many ways to take input. In fact, just\none of many ways
        _to detect keypresses_! Depending on how you want to react\nto a keypress,
        there are a few other blocks you might want to use.\\\r\n\\\r\nRead\nthe program
        and predict below what will happen when you press each of the\nup, down, left,
        and right arrows.\\\r\n\\\r\nAfter making your prediction, run\nthe code and
        write down or share with your neighbor your observations.\\\r\n\\\r\n\\*\nWhat
        seems to be the difference between `keyDown()`, `keyWentDown()`, and\n`keyWentUp()`?\\\r\n\n-
        \  What do you think the exclamation mark (`!`) on line 10\n    does?\\\r\n-
        \  How might you use the different keypress blocks in a game?"
      CSD U3 L11 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L11 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L11 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L12 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L12 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L12 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L13 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L13 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L13 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L15 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L15 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L15 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L16 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L16 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L16 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L17 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L17 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L17 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L18 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L18 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L18 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L19 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L19 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L19 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L3 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L3 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L3 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L4 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L4 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L4 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L5 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L5 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L5 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L6 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L6 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L6 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L7 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L7 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L7 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L9 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L9 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L9 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  \\!\\[](\\<<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43>\nPM.png>)
        \ to send your creation to a friend, or \\!\\[](\\<<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50>\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 Mouse Input Bee 2: "# Random Around Point\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\"\nstyle=\"float:right\">\\\r\n\\\r\nNow
        that you can make the bee follow the mouse,\nlets make a bee fly around the
        mouse as shown in the picture on the right.  In\norder to do this, you will
        need to **add a random amount between -50 and 50\nto the `mouseX` or `mouseY`.**\\\r\n\\\r\n\n#
        Do This\\\r\n\nYou already have a bee\nsprite that follows the mouse.\\\r\n\\\r\n\n-
        \  Update the x and y location to be\n    randomly close to the mouse.\\\r\n
        \   \\\\t\\* Add a random number between -50 and 50\n    to the `World.mouseX`
        and `World.mouseY`.\\\r\n-   If necessary, use the `World.frameRate`\n    block
        to slow down the animation and find the best frame rate.\\\r\n    \\\r\n    _Challenge:\n
        \   **Add 3 more bees** that follow the mouse in the same way to make a swarm\n
        \   of bees._"
      CSD U3 Mouse Input Bee 2_2018: "# Random Around Point\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\"\nstyle=\"float:right\">\\\r\n\\\r\nNow
        that you can make the bee follow the mouse,\nlets make a bee fly around the
        mouse as shown in the picture on the right.  In\norder to do this, you will
        need to **add a random amount between -50 and 50\nto the `mouseX` or `mouseY`.**\\\r\n\\\r\n\n#
        Do This\\\r\n\nYou already have a bee\nsprite that follows the mouse.\\\r\n\\\r\n\n-
        \  Update the x and y location to be\n    randomly close to the mouse.\\\r\n
        \   \\\\t\\* Add a random number between -50 and 50\n    to the `World.mouseX`
        and `World.mouseY`.\\\r\n-   If necessary, use the `World.frameRate`\n    block
        to slow down the animation and find the best frame rate.\\\r\n    \\\r\n    _Challenge:\n
        \   **Add 3 more bees** that follow the mouse in the same way to make a swarm\n
        \   of bees._"
      CSD U3 Mouse Input Bee 2_2019: "# Random Around Point\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\"\nstyle=\"float:right\">\\\r\n\\\r\nNow
        that you can make the bee follow the mouse,\nlets make a bee fly around the
        mouse as shown in the picture on the right.  In\norder to do this, you will
        need to **add a random amount between -50 and 50\nto the `mouseX` or `mouseY`.**\\\r\n\\\r\n\n#
        Do This\\\r\n\nYou already have a bee\nsprite that follows the mouse.\\\r\n\\\r\n\n-
        \  Update the x and y location to be\n    randomly close to the mouse.\\\r\n
        \   \\\\t\\* Add a random number between -50 and 50\n    to the `World.mouseX`
        and `World.mouseY`.\\\r\n-   If necessary, use the `World.frameRate`\n    block
        to slow down the animation and find the best frame rate.\\\r\n    \\\r\n    _Challenge:\n
        \   **Add 3 more bees** that follow the mouse in the same way to make a swarm\n
        \   of bees._"
      CSD U3 Movement Fish: "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Fish Animation\\\r\n\n\\\r\nUsing\nthe
        counter pattern, make all three of the fish move in the image to the right.\nThe
        blue fish should move the fastest, followed by the orange fish, with the\ngreen
        fish being the slowest."
      CSD U3 Movement Fish_2018: "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Fish Animation\\\r\n\n\\\r\nUsing\nthe
        counter pattern, make all three of the fish move in the image to the right.\nThe
        blue fish should move the fastest, followed by the orange fish, with the\ngreen
        fish being the slowest."
      CSD U3 Movement Fish_2019: "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Fish Animation\\\r\n\n\\\r\nUsing\nthe
        counter pattern, make all three of the fish move in the image to the right.\nThe
        blue fish should move the fastest, followed by the orange fish, with the\ngreen
        fish being the slowest."
      CSD U3 Movement Gears: "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\"\nstyle=\"width:200px;
        float:right; margin-left: 20px;\">\\\r\n\\\r\n\n# Rotation\n\nDirection\\\r\n\\\r\nWhen
        you use the counter pattern for the `rotation` property\nwith addition, the
        object will always rotate clockwise. Sometimes however\nyou will want your
        sprite to rotate the other direction. To do this you can\njust use subtraction!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThere are three gears set up\nfor you. You need to make
        the gears all look like they are rotating in sync\nwith each other.\\\r\n\\\r\n\n-
        \  Make the gears rotate so they look like they are\n    working as one system.\\\r\n-
        \  **Hint: They won't all rotate the same direction**."
      CSD U3 Movement Gears_2018: "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\"\nstyle=\"width:200px;
        float:right; margin-left: 20px;\">\\\r\n\\\r\n\n# Rotation\n\nDirection\\\r\n\\\r\nWhen
        you use the counter pattern for the `rotation` property\nwith addition, the
        object will always rotate clockwise. Sometimes however\nyou will want your
        sprite to rotate the other direction. To do this you can\njust use subtraction!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThere are three gears set up\nfor you. You need to make
        the gears all look like they are rotating in sync\nwith each other.\\\r\n\\\r\n\n-
        \  Make the gears rotate so they look like they are\n    working as one system.\\\r\n-
        \  **Hint: They won't all rotate the same direction**."
      CSD U3 Movement Gears_2019: "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\"\nstyle=\"width:200px;
        float:right; margin-left: 20px;\">\\\r\n\\\r\n\n# Rotation\n\nDirection\\\r\n\\\r\nWhen
        you use the counter pattern for the `rotation` property\nwith addition, the
        object will always rotate clockwise. Sometimes however\nyou will want your
        sprite to rotate the other direction. To do this you can\njust use subtraction!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThere are three gears set up\nfor you. You need to make
        the gears all look like they are rotating in sync\nwith each other.\\\r\n\\\r\n\n-
        \  Make the gears rotate so they look like they are\n    working as one system.\\\r\n-
        \  **Hint: They won't all rotate the same direction**."
      CSD U3 Movement Your Own 1: "# Make an animation of your\n\nown\\\r\n\\\r\nUsing
        the counter pattern and sprite properties, make an animation\nall your own.
        You might consider building on the static images you've made\nin the past,
        or come up with a new image to create or story to tell.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nTo start, let's just get a static scene set up.\\\r\n\\\r\n\n-
        \  Add\n    images in the Animation Tab.\\\r\n-   Create sprites and assign
        images.\\\r\n-   Set\n    up the draw loop to draw a background and your sprites."
      CSD U3 Movement Your Own 1_2018: "# Make an animation of your\n\nown\\\r\n\\\r\nUsing
        the counter pattern and sprite properties, make an animation\nall your own.
        You might consider building on the static images you've made\nin the past,
        or come up with a new image to create or story to tell.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nTo start, let's just get a static scene set up.\\\r\n\\\r\n\n-
        \  Add\n    images in the Animation Tab.\\\r\n-   Create sprites and assign
        images.\\\r\n-   Set\n    up the draw loop to draw a background and your sprites."
      CSD U3 Movement Your Own 1_2019: "# Make an animation of your\n\nown\\\r\n\\\r\nUsing
        the counter pattern and sprite properties, make an animation\nall your own.
        You might consider building on the static images you've made\nin the past,
        or come up with a new image to create or story to tell.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nTo start, let's just get a static scene set up.\\\r\n\\\r\n\n-
        \  Add\n    images in the Animation Tab.\\\r\n-   Create sprites and assign
        images.\\\r\n-   Set\n    up the draw loop to draw a background and your sprites."
      CSD U3 Movement Your Own 2: "# Add movement to your animation\\\r\n\n\\\r\nWith\nyour
        static scene set up, you can now add some movement. When you are satisfied\nwith
        your program, click the \"Submit\" button to turn it in. You can always\nunsubmit
        and continue working if you want to add features.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nIn\nthe
        draw loop\\\r\n\\\r\n\n-   Identify which sprite properties to change.\\\r\n-
        \  Update\n    those properties using the counter pattern.\\\r\n    \\\r\n
        \   _Tip: If your counter pattern\n    isn't working like you expect, add
        watchers to help debug your program._"
      CSD U3 Movement Your Own 2_2018: "# Add movement to your animation\\\r\n\n\\\r\nWith\nyour
        static scene set up, you can now add some movement. When you are satisfied\nwith
        your program, click the \"Submit\" button to turn it in. You can always\nunsubmit
        and continue working if you want to add features.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nIn\nthe
        draw loop\\\r\n\\\r\n\n-   Identify which sprite properties to change.\\\r\n-
        \  Update\n    those properties using the counter pattern.\\\r\n    \\\r\n
        \   _Tip: If your counter pattern\n    isn't working like you expect, add
        watchers to help debug your program._"
      CSD U3 Movement Your Own 2_2019: "# Add movement to your animation\\\r\n\n\\\r\nWith\nyour
        static scene set up, you can now add some movement. When you are satisfied\nwith
        your program, click the \"Submit\" button to turn it in. You can always\nunsubmit
        and continue working if you want to add features.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nIn\nthe
        draw loop\\\r\n\\\r\n\n-   Identify which sprite properties to change.\\\r\n-
        \  Update\n    those properties using the counter pattern.\\\r\n    \\\r\n
        \   _Tip: If your counter pattern\n    isn't working like you expect, add
        watchers to help debug your program._"
      CSD U3 Plotting Shapes Shape Lab Open: "# Drawing Shapes\\\r\n\n\\\r\nExplore\nusing
        this tool that lets you draw different colored shapes. \\\r\n\\\r\nMake\nsure
        you hit \"Run\" and try out turning on the grid to help you place shapes\nprecisely.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d52dbc112dcc088858c4b8f54be09aa1-image-1502914103923.07.59>\nPM.png>)"
      CSD U3 Plotting Shapes Shape Lab: "# Drawing Shapes\\\r\n\n\\\r\nExplore\nusing
        this tool that lets you draw different colored shapes. \\\r\n\\\r\nMake\nsure
        you hit \"Run\" and try out turning on the grid to help you place shapes\nprecisely.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d52dbc112dcc088858c4b8f54be09aa1-image-1502914103923.07.59>\nPM.png>)"
      CSD U3 Plotting Shapes Shape Lab_2018: "# Drawing Shapes\\\r\n\n\\\r\nExplore\nusing
        this tool that lets you draw different colored shapes. \\\r\n\\\r\nMake\nsure
        you hit \"Run\" and try out turning on the grid to help you place shapes\nprecisely.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d52dbc112dcc088858c4b8f54be09aa1-image-1502914103923.07.59>\nPM.png>)"
      CSD U3 Plotting Shapes Shape Lab_2019: "# Drawing Shapes\\\r\n\n\\\r\nExplore\nusing
        this tool that lets you draw different colored shapes. \\\r\n\\\r\nMake\nsure
        you hit \"Run\" and try out turning on the grid to help you place shapes\nprecisely.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d52dbc112dcc088858c4b8f54be09aa1-image-1502914103923.07.59>\nPM.png>)"
      CSD U3 Random Add a Door: "<img src=\"https://images.code.org/fd746a708d8a94ad0aad863f3284a1ad-image-1490826372819.25.25\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    code that makes a red rectangle that is taller than the one
        already in the\n    drawing.\\\r\n-   Don't worry about the exact dimensions
        as long as your new\n    rectangle is taller."
      CSD U3 Random Debug Cloud: "<img src=\"https://images.code.org/529b7e5ddda4683e6a0cc5b3028e4dbf-image-1490824752133.58.50\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Debug - Using 4 Parameters\\\r\n\n\\\r\nNow\nthat
        the grass is working, let's add a cloud to the sky. Unfortunately, it\nlooks
        a little funny right now.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Debug
        this program\n    to make the cloud wider than it is tall, like in the image.\\\r\n-
        \  Hint: You'll\n    need to change two parameters. Which ones set your cloud's
        width and height?\\\r\n    \\\r\n    _Challenge:\n    The sun is not in the
        exact same place as in the picture.  Can you change\n    the sun's coordinates
        so that the picture matches completely?_"
      CSD U3 Random Debug Grass: "<img src=\"https://images.code.org/83269268e1c4f8af8551253ff4573b43-image-1490825158453.03.45\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Debug - Using 4 Parameters\\\r\n\n\\\r\nThis\nprogram
        uses the four parameter version of `rect()` and `ellipse()` to draw\na simple
        scene.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Debug this program and correct
        the\n    error so that the grass extends across the entire bottom.\\\r\n-
        \  Hint: You only\n    have to change one number. Which parameter makes your
        rectangle (the grass)\n    wider?"
      CSD U3 Random Ellipse Behind: "<img src=\"https://images.code.org/a8ed6092389aedceceb38a83ac59fae1-image-1490832453029.07.10\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    code that makes an orange ellipse behind the green one.\\\r\n-
        \  Don't worry\n    about the exact size as long as the green ellipse is entirely
        inside the orange\n    one."
      CSD U3 Random Number Map: "# Random Numbers\\\r\n\n\\\r\n\n# Using\n\nRandom
        Numbers\\\r\n\\\r\nThe `randomNumber()` block can be used to generate random\nnumbers
        in your programs. It can be used in the place of a single number and\nso can
        make your program run a little differently each time.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/ef48e7f0312a567eca8641f349968c2a-image-1491521271912.27.09>\nPM.png>)\\\r\n\\\r\n<img
        src=\"https://images.code.org/246e7ac850015aa830d469b7eeb5f00e-image-1491523022253.50.04\nPM.png\"
        style=\"float:left;width:150px\">\\\r\n\\\r\n<img src=\"https://images.code.org/01b10dc034475fd5a90bd3c7bd0c51b8-image-1491523025607.50.17\nPM.png\"
        style=\"float:left;width:150px\">\\\r\n\\\r\n<img src=\"https://images.code.org/0f0c3cc4d42923dc4321809daf189053-image-1491523028093.50.49\nPM.png\"
        style=\"float:left;width:150px\">\\\r\n\\\r\n`randomNumber()` has two\nparameters
        for the minimum and maximum numbers it can choose between. If you\nwant you
        can make these numbers negative.\\\r\n\\\r\n\n# Drawing and Random Numbers\\\r\n\n\\\r\nBelow\nthis
        program you can see three examples of possible output. Notice that even\nthough
        it's the same program it's a different image every time.\\\r\n\\\r\nYou\ncan
        use the `randomNumber()` command multiple times in your programs. Each\ntime
        it's used a new random number will be generated.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/2c562cef4ef69c163db2b183225ee954-image-1491522524705.48.33>\nPM.png>)"
      CSD U3 Random Taller Rectangle: "<img src=\"https://images.code.org/02871e5c5d041ea1724e4a02d3697941-image-1492721665345.54.10\nPM.png\"
        style=\"float:right;height:150px; border: 1px solid #CCC\">\\\r\n\n# \n\nRectangle
        Size\\\r\n\\\r\nThese `rect` blocks have two more parameters that you\ncan
        use to control the size. Notice that the `noStroke()` block turns off\nthe
        stroke (border) for shapes.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Look
        at the code\n    and try to figure out how the last two inputs in `rect` work.\\\r\n-
        \  Change\n    the numbers in the second `rect` to make red rectangle longer
        than the blue\n    one.\\\r"
      CSD U3 Random Taller Rectangle_2018: "<img src=\"https://images.code.org/02871e5c5d041ea1724e4a02d3697941-image-1492721665345.54.10\nPM.png\"
        style=\"float:right;height:150px; border: 1px solid #CCC\">\\\r\n\n# \n\nRectangle
        Size\\\r\n\\\r\nThese `rect` blocks have two more parameters that you\ncan
        use to control the size. Notice that the `noStroke()` block turns off\nthe
        stroke (border) for shapes.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Look
        at the code\n    and try to figure out how the last two inputs in `rect` work.\\\r\n-
        \  Change\n    the numbers in the second `rect` to make red rectangle longer
        than the blue\n    one.\\\r"
      CSD U3 Random Taller Rectangle_2019: "<img src=\"https://images.code.org/02871e5c5d041ea1724e4a02d3697941-image-1492721665345.54.10\nPM.png\"
        style=\"float:right;height:150px; border: 1px solid #CCC\">\\\r\n\n# \n\nRectangle
        Size\\\r\n\\\r\nThese `rect` blocks have two more parameters that you\ncan
        use to control the size. Notice that the `noStroke()` block turns off\nthe
        stroke (border) for shapes.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Look
        at the code\n    and try to figure out how the last two inputs in `rect` work.\\\r\n-
        \  Change\n    the numbers in the second `rect` to make red rectangle longer
        than the blue\n    one.\\\r"
      CSD U3 Random background: "# Background\\\r\n\n\\\r\nSometimes\nyou'll want
        to fill the entire screen with a color.  For that, you can use\n`background`.
        \ It covers everything on the screen with the color you choose.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code to see `background` work.\\\r\n-
        \  Change the background\n    from yellow to orange.\\\r\n    \\\r\n    _Challenge:
        There is a purple square that is\n    covered up by the background.  Can you
        change the order of the code so you\n    can see both the purple and blue
        squares?_"
      CSD U3 Random background2: "<img src=\"https://images.code.org/a68cfd23a13b6bdeef91dc9fd584f657-image-1491332601738.03.04\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Background\\\r\n\n\\\r\n`background()`\nwill
        draw on top of everything already in your drawing, so it's important\nto think
        about the order of your code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use
        `background()`\n    to make a \"black\" background behind the green circle."
      CSD U3 Random background2_2018: "<img src=\"https://images.code.org/a68cfd23a13b6bdeef91dc9fd584f657-image-1491332601738.03.04\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Background\\\r\n\n\\\r\n`background()`\nwill
        draw on top of everything already in your drawing, so it's important\nto think
        about the order of your code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use
        `background()`\n    to make a \"black\" background behind the green circle."
      CSD U3 Random background2_2019: "<img src=\"https://images.code.org/a68cfd23a13b6bdeef91dc9fd584f657-image-1491332601738.03.04\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Background\\\r\n\n\\\r\n`background()`\nwill
        draw on top of everything already in your drawing, so it's important\nto think
        about the order of your code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use
        `background()`\n    to make a \"black\" background behind the green circle."
      CSD U3 Random background_2018: "# Background\\\r\n\n\\\r\nSometimes\nyou'll
        want to fill the entire screen with a color.  For that, you can use\n`background`.
        \ It covers everything on the screen with the color you choose.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code to see `background` work.\\\r\n-
        \  Change the background\n    from yellow to orange.\\\r\n    \\\r\n    _Challenge:
        There is a purple square that is\n    covered up by the background.  Can you
        change the order of the code so you\n    can see both the purple and blue
        squares?_"
      CSD U3 Random background_2019: "# Background\\\r\n\n\\\r\nSometimes\nyou'll
        want to fill the entire screen with a color.  For that, you can use\n`background`.
        \ It covers everything on the screen with the color you choose.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code to see `background` work.\\\r\n-
        \  Change the background\n    from yellow to orange.\\\r\n    \\\r\n    _Challenge:
        There is a purple square that is\n    covered up by the background.  Can you
        change the order of the code so you\n    can see both the purple and blue
        squares?_"
      CSD U3 Random rainbow snake: "<img src=\"https://images.code.org/d1e4780e483ffa510a27e91b2b1f1963-image-1491341267537.26.14\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Rainbow Snake\\\r\n\n\\\r\nThis\nprogram
        draws a very rare breed of rainbow snake. To make the snake draw differently\nevery
        time you'll need to use random numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Run\n    the program several times to see how the starter code works.\\\r\n-
        \  Add at least\n    three new different colored circles to your rainbow snake.\\\r\n-
        \  Use `randomNumber()`\n    to make the rest of the snake's body move up
        and down like the first three.\\\r\n    \\\r\n    _Challenge:\n    Can you
        make size of some of the circles random, too?_"
      CSD U3 Random random ellipse-2018: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Random random ellipse: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Random random ellipse2: "<img src=\"https://images.code.org/ff3be801c7e634d49584aac103df292a-image-1491334428729.33.18\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Random Numbers\\\r\n\n\\\r\nHere's\nthe
        same sun from last time.  Right now only the x-coordinate is random, but\nyou
        can make the y-coordinate random, too.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Use `randomNumber()`\n    for the ellipse's Y parameter so the circle is
        drawn in a random Y position,\n    too.\\\r\n-   As long as your circle is
        appearing at random X and Y positions,\n    you can move on."
      CSD U3 Random random ellipse_2018: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Random random ellipse_2018_2019: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Scene Example: "# Sprite Scenes\\\r\n\n\\\r\nBy combining\nshapes, sprites,
        and a new block called `text`, you can create simple scenes,\nstories, or
        comics. While this example is fairly simple, you can combine as\nmany sprites
        and shapes as you like to create scenes as complex or detailed\nas you like.\\\r\n\\\r\n\n##
        Sketch It Out\\\r\n\n\\\r\nBefore moving on, take a second\nto sketch out
        a scene that you'd like to make at the end of this lesson.\nConsider the simple
        shapes that you've used in the past, sprites for your\ncharacters, and any
        text that you'd like on the screen. Once you've sketched\nout an idea, you'll
        learn about `text` and how to compose a scene.\\\r"
      CSD U3 Sprite Movement Left: "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Moving to the Left\\\r\n\n\\\r\nIf\nadding
        to a sprite's x coordinate makes it move to the right, how could you\nmake
        it move to the left?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake your program
        animate\nlike the image to the right. Update `fly.x` inside the draw loop
        so that in\neach frame the fly is drawn a little bit further to the left.\\\r\n\\\r\n_Tip:\nYou
        can make your sprites move faster by adding or subtracting larger numbers.\nThe
        fly in our example moves about twice as fast as the plane in the last\nlevel._"
      CSD U3 Sprite Movement Left_2018: "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Moving to the Left\\\r\n\n\\\r\nIf\nadding
        to a sprite's x coordinate makes it move to the right, how could you\nmake
        it move to the left?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake your program
        animate\nlike the image to the right. Update `fly.x` inside the draw loop
        so that in\neach frame the fly is drawn a little bit further to the left.\\\r\n\\\r\n_Tip:\nYou
        can make your sprites move faster by adding or subtracting larger numbers.\nThe
        fly in our example moves about twice as fast as the plane in the last\nlevel._"
      CSD U3 Sprite Movement Left_2019: "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Moving to the Left\\\r\n\n\\\r\nIf\nadding
        to a sprite's x coordinate makes it move to the right, how could you\nmake
        it move to the left?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake your program
        animate\nlike the image to the right. Update `fly.x` inside the draw loop
        so that in\neach frame the fly is drawn a little bit further to the left.\\\r\n\\\r\n_Tip:\nYou
        can make your sprites move faster by adding or subtracting larger numbers.\nThe
        fly in our example moves about twice as fast as the plane in the last\nlevel._"
      CSD U3 Sprite Movement Right: "<img src=\"https://images.code.org/629bc615a879f0f3dc9f290bea2358c8-image-1491861334164.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Sprite Movement\\\r\n\n\\\r\nUsing\nthe
        counter pattern, you can write programs that animate sprites smoothly.\nAdding
        to or removing from a sprite's `x` or `y` property in the draw loop\nmakes
        your sprite move just a bit each time it is redrawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\nyour
        program animate like the image to the right. We've already added a line\nto
        update `plane.x` in the draw loop, but it needs to be finished.\\\r"
      CSD U3 Sprite Movement Right_2018: "<img src=\"https://images.code.org/629bc615a879f0f3dc9f290bea2358c8-image-1491861334164.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Sprite Movement\\\r\n\n\\\r\nUsing\nthe
        counter pattern, you can write programs that animate sprites smoothly.\nAdding
        to or removing from a sprite's `x` or `y` property in the draw loop\nmakes
        your sprite move just a bit each time it is redrawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\nyour
        program animate like the image to the right. We've already added a line\nto
        update `plane.x` in the draw loop, but it needs to be finished.\\\r"
      CSD U3 Sprite Movement Right_2019: "<img src=\"https://images.code.org/629bc615a879f0f3dc9f290bea2358c8-image-1491861334164.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Sprite Movement\\\r\n\n\\\r\nUsing\nthe
        counter pattern, you can write programs that animate sprites smoothly.\nAdding
        to or removing from a sprite's `x` or `y` property in the draw loop\nmakes
        your sprite move just a bit each time it is redrawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\nyour
        program animate like the image to the right. We've already added a line\nto
        update `plane.x` in the draw loop, but it needs to be finished.\\\r"
      CSD U3 Sprites anitab 1: "# Images\\\r\n\n\\\r\nOver on the\n**Animations Tab**,
        you'll see three images that have been loaded for you.\nYou can get to the
        animations tab by clicking the **Animation** button above\nthe display area.\\\r\n\\\r\n<img
        src=\"https://images.code.org/f694a37bbadcf0533e7b19d8c0f5309b-image-1465580394090.35.11\nPM.png\"
        style=\"width:300px;float:right\">\\\r\n\\\r\nOnce you have created a\nsprite,
        you can **use the `sprite.setAnimation()` command to change the look\nof your
        sprite from a rectangle to a picture.** All the images you have loaded\nin
        the Animation Tab show up in the `sprite.setAnimation()` dropdown.  The\nalien
        is set up for you as an example.\\\r\n\\\r\n\n# Do This\\\r\n\nChange the
        sprite\nto your favorite image from the animations tab.\\\r\n\\\r\n\n-   A
        sprite that is\n    set to an image has already been created for you.\\\r\n-
        \  Run the code to see\n    how it works.\\\r\n-   Change the input to the
        `setAnimation` command to change\n    the look of the sprite.\\\r\n-   Try
        out all the different images."
      CSD U3 Sprites anitab 1_2018: "# Images\\\r\n\n\\\r\nOver on the\n**Animations
        Tab**, you'll see three images that have been loaded for you.\nYou can get
        to the animations tab by clicking the **Animation** button above\nthe display
        area.\\\r\n\\\r\n<img src=\"https://images.code.org/f694a37bbadcf0533e7b19d8c0f5309b-image-1465580394090.35.11\nPM.png\"
        style=\"width:300px;float:right\">\\\r\n\\\r\nOnce you have created a\nsprite,
        you can **use the `sprite.setAnimation()` command to change the look\nof your
        sprite from a rectangle to a picture.** All the images you have loaded\nin
        the Animation Tab show up in the `sprite.setAnimation()` dropdown.  The\nalien
        is set up for you as an example.\\\r\n\\\r\n\n# Do This\\\r\n\nChange the
        sprite\nto your favorite image from the animations tab.\\\r\n\\\r\n\n-   A
        sprite that is\n    set to an image has already been created for you.\\\r\n-
        \  Run the code to see\n    how it works.\\\r\n-   Change the input to the
        `setAnimation` command to change\n    the look of the sprite.\\\r\n-   Try
        out all the different images."
      CSD U3 Sprites anitab 1_2019: "# Images\\\r\n\n\\\r\nOver on the\n**Animations
        Tab**, you'll see three images that have been loaded for you.\nYou can get
        to the animations tab by clicking the **Animation** button above\nthe display
        area.\\\r\n\\\r\n<img src=\"https://images.code.org/f694a37bbadcf0533e7b19d8c0f5309b-image-1465580394090.35.11\nPM.png\"
        style=\"width:300px;float:right\">\\\r\n\\\r\nOnce you have created a\nsprite,
        you can **use the `sprite.setAnimation()` command to change the look\nof your
        sprite from a rectangle to a picture.** All the images you have loaded\nin
        the Animation Tab show up in the `sprite.setAnimation()` dropdown.  The\nalien
        is set up for you as an example.\\\r\n\\\r\n\n# Do This\\\r\n\nChange the
        sprite\nto your favorite image from the animations tab.\\\r\n\\\r\n\n-   A
        sprite that is\n    set to an image has already been created for you.\\\r\n-
        \  Run the code to see\n    how it works.\\\r\n-   Change the input to the
        `setAnimation` command to change\n    the look of the sprite.\\\r\n-   Try
        out all the different images."
      CSD U3 Sprites anitab 2: "# Upload your own image\\\r\n\n\\\r\nYou\ncan also
        use the Animation tab to upload or draw your own image.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\nYou are going to make a flying kite. You can search the web for\nan
        image or create a new animation from scratch by drawing your own kite.\\\r\n\\\r\n\\*\nDownload
        your kite image. Images with transparent backgrounds work best.\\\r\n\\*\nOpen
        the animations tab.\\\r\n\n-   Click <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05\n
        \   PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16\n
        \   PM.png\" style=\"width:50px\"> to upload an image.\\\r\n-   Select the
        file from\n    your computer.\\\r\n-   Rename your image so it is easy to
        remember. To rename\n    it click the text below the image.\\\r\n-   Back
        in code mode, use `sprite.setAnimation()`\n    to make your `kite` sprite
        show your new animation.\\\r\n    \\\r\n    Don't worry if\n    your kite
        image is too big! You'll learn how to fix that in the next level."
      CSD U3 Sprites anitab 2_2018: "# Upload your own image\\\r\n\n\\\r\nYou\ncan
        also use the Animation tab to upload or draw your own image.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\nYou are going to make a flying kite. You can search the web
        for\nan image or create a new animation from scratch by drawing your own kite.\\\r\n\\\r\n\\*\nDownload
        your kite image. Images with transparent backgrounds work best.\\\r\n\\*\nOpen
        the animations tab.\\\r\n\n-   Click <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05\n
        \   PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16\n
        \   PM.png\" style=\"width:50px\"> to upload an image.\\\r\n-   Select the
        file from\n    your computer.\\\r\n-   Rename your image so it is easy to
        remember. To rename\n    it click the text below the image.\\\r\n-   Back
        in code mode, use `sprite.setAnimation()`\n    to make your `kite` sprite
        show your new animation.\\\r\n    \\\r\n    Don't worry if\n    your kite
        image is too big! You'll learn how to fix that in the next level."
      CSD U3 Sprites anitab 2_2019: "# Upload your own image\\\r\n\n\\\r\nYou\ncan
        also use the Animation tab to upload or draw your own image.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\nYou are going to make a flying kite. You can search the web
        for\nan image or create a new animation from scratch by drawing your own kite.\\\r\n\\\r\n\\*\nDownload
        your kite image. Images with transparent backgrounds work best.\\\r\n\\*\nOpen
        the animations tab.\\\r\n\n-   Click <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05\n
        \   PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16\n
        \   PM.png\" style=\"width:50px\"> to upload an image.\\\r\n-   Select the
        file from\n    your computer.\\\r\n-   Rename your image so it is easy to
        remember. To rename\n    it click the text below the image.\\\r\n-   Back
        in code mode, use `sprite.setAnimation()`\n    to make your `kite` sprite
        show your new animation.\\\r\n    \\\r\n    Don't worry if\n    your kite
        image is too big! You'll learn how to fix that in the next level."
      CSD U3 Sprites anitab 3: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox, you'll see a new block called `sprite.scale`.\nIt lets
        you change the size of a sprite in relation to its original size.\n`sprite.scale
        = 1` is the normal size. `sprite.scale = 0.5` makes your sprite\nhalf as big,
        while `sprite.scale = 2` makes it twice as big.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThe\nprogram
        should already include your newly uploaded image, but it's probably\nnot the
        _perfect_ size. Use `sprite.scale` to change the size of your `kite`\nsprite.\\\r\n\\\r\n_Hint:
        the order of your code matters! You need to add `sprite.scale`\n**after**
        you've created the sprite, but **before** you draw the sprite with\n`drawSprites()`.
        For clarity, try to keep all of your sprite code together\nat the top of your
        program._"
      CSD U3 Sprites anitab 3_2018: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox, you'll see a new block called `sprite.scale`.\nIt lets
        you change the size of a sprite in relation to its original size.\n`sprite.scale
        = 1` is the normal size. `sprite.scale = 0.5` makes your sprite\nhalf as big,
        while `sprite.scale = 2` makes it twice as big.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThe\nprogram
        should already include your newly uploaded image, but it's probably\nnot the
        _perfect_ size. Use `sprite.scale` to change the size of your `kite`\nsprite.\\\r\n\\\r\n_Hint:
        the order of your code matters! You need to add `sprite.scale`\n**after**
        you've created the sprite, but **before** you draw the sprite with\n`drawSprites()`.
        For clarity, try to keep all of your sprite code together\nat the top of your
        program._"
      CSD U3 Sprites anitab 3_2019: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox, you'll see a new block called `sprite.scale`.\nIt lets
        you change the size of a sprite in relation to its original size.\n`sprite.scale
        = 1` is the normal size. `sprite.scale = 0.5` makes your sprite\nhalf as big,
        while `sprite.scale = 2` makes it twice as big.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThe\nprogram
        should already include your newly uploaded image, but it's probably\nnot the
        _perfect_ size. Use `sprite.scale` to change the size of your `kite`\nsprite.\\\r\n\\\r\n_Hint:
        the order of your code matters! You need to add `sprite.scale`\n**after**
        you've created the sprite, but **before** you draw the sprite with\n`drawSprites()`.
        For clarity, try to keep all of your sprite code together\nat the top of your
        program._"
      CSD U3 Sprites anitab 4: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox you'll see a new block called `sprite.scale`.\nThis
        command let's you change the size of a sprite in relation to its original\nsize.
        `sprite.scale = 1` is the normal size. `sprite.scale = 0.5` would make\nyour
        sprite half as big, while `sprite.scale = 2` would make it twice as big.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nAt this point the program should include your newly
        uploaded\nimage, but it's probably not the _perfect_ size. Add a `sprite.scale`
        block\nto change the size of your `kite` sprite.\\\r\n\\\r\n_Hint: the order
        of your\ncode matters! You need to add `sprite.scale` **after** you've created
        the\nsprite, but **before** you draw the sprite with `drawSprites()`. For
        clarity,\ntry to keep all of your sprite code together at the top of your
        program._"
      CSD U3 Sprites intro debug: "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\"\nstyle=\"width:
        150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\\\r\n\n#
        \n\nDebug\\\r\n\\\r\nThis program should create two new sprites, one on the
        left of\nthe screen and one on the right, but it's only drawing one. **You
        don't\nneed to add any code**, just rearrange the code already present to
        make sure\nthat both sprites show up like the picture on the right."
      CSD U3 Sprites intro debug_2018: "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\"\nstyle=\"width:
        150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\\\r\n\n#
        \n\nDebug\\\r\n\\\r\nThis program should create two new sprites, one on the
        left of\nthe screen and one on the right, but it's only drawing one. **You
        don't\nneed to add any code**, just rearrange the code already present to
        make sure\nthat both sprites show up like the picture on the right."
      CSD U3 Sprites intro debug_2019: "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\"\nstyle=\"width:
        150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\\\r\n\n#
        \n\nDebug\\\r\n\\\r\nThis program should create two new sprites, one on the
        left of\nthe screen and one on the right, but it's only drawing one. **You
        don't\nneed to add any code**, just rearrange the code already present to
        make sure\nthat both sprites show up like the picture on the right."
      CSD U3 Sprites scene challenge: "# Challenge: Extend your\n\nscene\\\r\n\\\r\n_Check
        with your teacher before starting this challenge._\\\r\n\\\r\nNow\nthat you've
        finished your scene, consider adding to it or creating another."
      CSD U3 Sprites scene challenge_2018: "# Challenge: Extend your\n\nscene\\\r\n\\\r\n_Check
        with your teacher before starting this challenge._\\\r\n\\\r\nNow\nthat you've
        finished your scene, consider adding to it or creating another."
      CSD U3 Sprites scene challenge_2019: "# Challenge: Extend your\n\nscene\\\r\n\\\r\n_Check
        with your teacher before starting this challenge._\\\r\n\\\r\nNow\nthat you've
        finished your scene, consider adding to it or creating another."
      CSD U3 Sprites scene drawing: "# Create Your Scene - Drawing\\\r\n\n\\\r\nYou're\ngoing
        to start creating a scene of your own. If you haven't already, take\na minute
        to sketch out a picture of your scene (consider using graph paper).\nOnce
        you have an idea and plan for your scene, start drawing the background.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use a `background()` command to fill the screen
        with a color.\\\r\n-   \\*\n    Add any necessary shape commands to draw the
        non-sprite elements of your scene."
      CSD U3 Sprites scene drawing_2018: "# Create Your Scene - Drawing\\\r\n\n\\\r\nYou're\ngoing
        to start creating a scene of your own. If you haven't already, take\na minute
        to sketch out a picture of your scene (consider using graph paper).\nOnce
        you have an idea and plan for your scene, start drawing the background.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use a `background()` command to fill the screen
        with a color.\\\r\n-   \\*\n    Add any necessary shape commands to draw the
        non-sprite elements of your scene."
      CSD U3 Sprites scene drawing_2019: "# Create Your Scene - Drawing\\\r\n\n\\\r\nYou're\ngoing
        to start creating a scene of your own. If you haven't already, take\na minute
        to sketch out a picture of your scene (consider using graph paper).\nOnce
        you have an idea and plan for your scene, start drawing the background.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use a `background()` command to fill the screen
        with a color.\\\r\n-   \\*\n    Add any necessary shape commands to draw the
        non-sprite elements of your scene."
      CSD U3 Sprites scene sprites: "# Create Your Scene - Sprites\\\r\n\n\\\r\nWith\nyour
        background in place, it's time to add your sprites.\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        or create all of your sprite images in the Animation Tab.\\\r\n\n-   Create\n
        \   a variable for each sprite at the top of your program and use `setAnimation()`\n
        \   to assign the images you created in the Animation Tab.\\\r\n-   Call `drawSprites()`\n
        \   once at the end of your program.\\\r\n    \\\r\n    _Hint: You probably
        want to call `drawSprites()`\n    at the very end of your program so the sprites
        are on top of your background,\n    but for some designs you may want to call
        `drawSprites()` earlier so that\n    your sprites are on top of some shapes
        but below others._"
      CSD U3 Sprites scene sprites_2018: "# Create Your Scene - Sprites\\\r\n\n\\\r\nWith\nyour
        background in place, it's time to add your sprites.\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        or create all of your sprite images in the Animation Tab.\\\r\n\n-   Create\n
        \   a variable for each sprite at the top of your program and use `setAnimation()`\n
        \   to assign the images you created in the Animation Tab.\\\r\n-   Call `drawSprites()`\n
        \   once at the end of your program.\\\r\n    \\\r\n    _Hint: You probably
        want to call `drawSprites()`\n    at the very end of your program so the sprites
        are on top of your background,\n    but for some designs you may want to call
        `drawSprites()` earlier so that\n    your sprites are on top of some shapes
        but below others._"
      CSD U3 Sprites scene sprites_2019: "# Create Your Scene - Sprites\\\r\n\n\\\r\nWith\nyour
        background in place, it's time to add your sprites.\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        or create all of your sprite images in the Animation Tab.\\\r\n\n-   Create\n
        \   a variable for each sprite at the top of your program and use `setAnimation()`\n
        \   to assign the images you created in the Animation Tab.\\\r\n-   Call `drawSprites()`\n
        \   once at the end of your program.\\\r\n    \\\r\n    _Hint: You probably
        want to call `drawSprites()`\n    at the very end of your program so the sprites
        are on top of your background,\n    but for some designs you may want to call
        `drawSprites()` earlier so that\n    your sprites are on top of some shapes
        but below others._"
      CSD U3 Sprites scene text: "# Create Your Scene - Text\\\r\n\n\\\r\nThe\nfinal
        piece of your scene is to add text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a\n    `text()` command for each separate line of text.\\\r\n-   If
        necessary, use `fill()`\n    and `textSize()` to change the appearance of
        your text.\\\r\n    \\\r\n    _Hint: Most\n    scenes have the text on top
        of everything else, which would require your `text()`\n    commands to be
        the last lines in your program. If, however, you want the text\n    layered
        in with other elements, you might consider changing the order._"
      CSD U3 Sprites scene text_2018: "# Create Your Scene - Text\\\r\n\n\\\r\nThe\nfinal
        piece of your scene is to add text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a\n    `text()` command for each separate line of text.\\\r\n-   If
        necessary, use `fill()`\n    and `textSize()` to change the appearance of
        your text.\\\r\n    \\\r\n    _Hint: Most\n    scenes have the text on top
        of everything else, which would require your `text()`\n    commands to be
        the last lines in your program. If, however, you want the text\n    layered
        in with other elements, you might consider changing the order._"
      CSD U3 Sprites scene text_2019: "# Create Your Scene - Text\\\r\n\n\\\r\nThe\nfinal
        piece of your scene is to add text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a\n    `text()` command for each separate line of text.\\\r\n-   If
        necessary, use `fill()`\n    and `textSize()` to change the appearance of
        your text.\\\r\n    \\\r\n    _Hint: Most\n    scenes have the text on top
        of everything else, which would require your `text()`\n    commands to be
        the last lines in your program. If, however, you want the text\n    layered
        in with other elements, you might consider changing the order._"
      CSD U3 Sprites text debug-2018: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text debug: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text debug_2018: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text debug_2018_2019: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text: "# Adding Text\\\r\n\n\\\r\nYou can put\ntext anywhere
        you'd like on the screen using `text`. Change the displayed\ntext in the provided
        code, then add a second `text` to write in a different\npart of the screen.\\\r\n\\\r\n_Tip:
        The default text size is pretty small, but\nyou can use the `textSize` block
        to change that. You can also use `fill` to\nchange the color of your text._"
      CSD U3 Sprites text_2018: "# Adding Text\\\r\n\n\\\r\nYou can put\ntext anywhere
        you'd like on the screen using `text`. Change the displayed\ntext in the provided
        code, then add a second `text` to write in a different\npart of the screen.\\\r\n\\\r\n_Tip:
        The default text size is pretty small, but\nyou can use the `textSize` block
        to change that. You can also use `fill` to\nchange the color of your text._"
      CSD U3 Sprites text_2019: "# Adding Text\\\r\n\n\\\r\nYou can put\ntext anywhere
        you'd like on the screen using `text`. Change the displayed\ntext in the provided
        code, then add a second `text` to write in a different\npart of the screen.\\\r\n\\\r\n_Tip:
        The default text size is pretty small, but\nyou can use the `textSize` block
        to change that. You can also use `fill` to\nchange the color of your text._"
      CSD U3 Variables Challenge: "# Challenge: Updating Variables\\\r\n\n\\\r\n_Check\nwith
        your teacher before tackling this challenge level._\\\r\n\\\r\nSo far we've\nonly
        ever assigned a value to a variable once, but did you know you can update\na
        variable during a program?  Read through the example program we've provided,\nrun
        it a few times to understand how it works, and then attempt to modify\nthe
        program to draw one of the following images.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r"
      CSD U3 Variables Challenge_2018: "# Challenge: Updating Variables\\\r\n\n\\\r\n_Check\nwith
        your teacher before tackling this challenge level._\\\r\n\\\r\nSo far we've\nonly
        ever assigned a value to a variable once, but did you know you can update\na
        variable during a program?  Read through the example program we've provided,\nrun
        it a few times to understand how it works, and then attempt to modify\nthe
        program to draw one of the following images.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r"
      CSD U3 Variables Challenge_2019: "# Challenge: Updating Variables\\\r\n\n\\\r\n_Check\nwith
        your teacher before tackling this challenge level._\\\r\n\\\r\nSo far we've\nonly
        ever assigned a value to a variable once, but did you know you can update\na
        variable during a program?  Read through the example program we've provided,\nrun
        it a few times to understand how it works, and then attempt to modify\nthe
        program to draw one of the following images.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r"
      CSD U3 Variables Draw Challenge: "# Challenge: Draw an\n\nImage\\\r\n\\\r\n_Check
        with your teacher before tackling this challenge level._\\\r\n\\\r\nUsing\nvariables,
        draw an image where many of the items rely on a common variable\nfor size
        or placement. For example, draw a face with variables controlling\nthe size
        and/or placement of both eyes, ears, and nostrils. Once you have\nyour drawing
        completed, try changing the values of your variables to make\nsure that the
        whole image changes together.\\\r"
      CSD U3 Variables Draw Challenge_2018: "# Challenge: Draw an\n\nImage\\\r\n\\\r\n_Check
        with your teacher before tackling this challenge level._\\\r\n\\\r\nUsing\nvariables,
        draw an image where many of the items rely on a common variable\nfor size
        or placement. For example, draw a face with variables controlling\nthe size
        and/or placement of both eyes, ears, and nostrils. Once you have\nyour drawing
        completed, try changing the values of your variables to make\nsure that the
        whole image changes together.\\\r"
      CSD U3 Variables Draw Challenge_2019: "# Challenge: Draw an\n\nImage\\\r\n\\\r\n_Check
        with your teacher before tackling this challenge level._\\\r\n\\\r\nUsing\nvariables,
        draw an image where many of the items rely on a common variable\nfor size
        or placement. For example, draw a face with variables controlling\nthe size
        and/or placement of both eyes, ears, and nostrils. Once you have\nyour drawing
        completed, try changing the values of your variables to make\nsure that the
        whole image changes together.\\\r"
      CSD U3 Variables Draw Poppy: "# Using a Variable Many\n\nTimes\\\r\n\\\r\nThis
        program has only one variable called `petalSize` but it\nuses it 8 different
        times. This makes it easy to quickly make lots of changes\nto how your picture
        is drawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change the number\n    assigned
        to `petalSize` so the red petals touch one another.\\\r\n-   Try to find\n
        \   the size that makes the most sense. Compare your answer with someone around\n
        \   you."
      CSD U3 Variables Draw Poppy_2018: "# Using a Variable Many\n\nTimes\\\r\n\\\r\nThis
        program has only one variable called `petalSize` but it\nuses it 8 different
        times. This makes it easy to quickly make lots of changes\nto how your picture
        is drawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change the number\n    assigned
        to `petalSize` so the red petals touch one another.\\\r\n-   Try to find\n
        \   the size that makes the most sense. Compare your answer with someone around\n
        \   you."
      CSD U3 Variables Draw Poppy_2019: "# Using a Variable Many\n\nTimes\\\r\n\\\r\nThis
        program has only one variable called `petalSize` but it\nuses it 8 different
        times. This makes it easy to quickly make lots of changes\nto how your picture
        is drawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change the number\n    assigned
        to `petalSize` so the red petals touch one another.\\\r\n-   Try to find\n
        \   the size that makes the most sense. Compare your answer with someone around\n
        \   you."
      CSD U3 Variables Predict Where X Embed: "# Predict\\\r\n\n\\\r\nIn\nwhich corner
        of the screen will the circle be drawn?"
      CSD U3 Variables Predict Where X: "# Using Variables\\\r\n\n\\\r\nIn\nthis program,
        the variable `xPosition` is used to store the x-coordinate of\nthe circle.\\\r\n\\\r\n\n#
        Do This\\\r\n\n-   Run the program to see how it works.\\\r\n-   \\*\n    Change
        the number that is stored into the variable ([Show me where](#triggercallout=code_triggered))\n
        \   and run the code again."
      CSD U3 Variables Predict Where XY Embed: "# Predict\\\r\n\n\\\r\nIn\nwhich corner
        of the screen will the circle be drawn?\\\r\n\\\r\n_Hint: Click the\n\"Show
        grid\" box to help you find the exact coordinates on the screen._"
      CSD U3 Variables Predict Where XY Embed_2018: "# Predict\\\r\n\n\\\r\nIn\nwhich
        corner of the screen will the circle be drawn?\\\r\n\\\r\n_Hint: Click the\n\"Show
        grid\" box to help you find the exact coordinates on the screen._"
      CSD U3 Variables Predict Where XY Embed_2019: "# Predict\\\r\n\n\\\r\nIn\nwhich
        corner of the screen will the circle be drawn?\\\r\n\\\r\n_Hint: Click the\n\"Show
        grid\" box to help you find the exact coordinates on the screen._"
      CSD U3 Variables Predict Where X_2018: "# Using Variables\\\r\n\n\\\r\nIn\nthis
        program, the variable `xPosition` is used to store the x-coordinate of\nthe
        circle.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Run the program to see how it works.\\\r\n-
        \  \\*\n    Change the number that is stored into the variable ([Show me where](#triggercallout=code_triggered))\n
        \   and run the code again."
      CSD U3 Variables Predict Where X_2019: "# Using Variables\\\r\n\n\\\r\nIn\nthis
        program, the variable `xPosition` is used to store the x-coordinate of\nthe
        circle.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Run the program to see how it works.\\\r\n-
        \  \\*\n    Change the number that is stored into the variable ([Show me where](#triggercallout=code_triggered))\n
        \   and run the code again."
      CSD U3 Variables change circle size: "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01\nAM.png\"
        style=\"float:right; height:150px\">\\\r\n\\\r\n\n# Debug: Using Variables\\\r\n\n\\\r\nThis\nprogram
        uses the variable `circleSize` to control the width and height of\na circle.
        \ If you make the circle big enough, it will fill up the entire screen,\nas
        in the picture on the right.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change
        the value\n    assigned to `circleSize` so that the circle takes up the entire
        screen."
      CSD U3 Variables change circle size_2018: "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01\nAM.png\"
        style=\"float:right; height:150px\">\\\r\n\\\r\n\n# Debug: Using Variables\\\r\n\n\\\r\nThis\nprogram
        uses the variable `circleSize` to control the width and height of\na circle.
        \ If you make the circle big enough, it will fill up the entire screen,\nas
        in the picture on the right.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change
        the value\n    assigned to `circleSize` so that the circle takes up the entire
        screen."
      CSD U3 Variables change circle size_2019: "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01\nAM.png\"
        style=\"float:right; height:150px\">\\\r\n\\\r\n\n# Debug: Using Variables\\\r\n\n\\\r\nThis\nprogram
        uses the variable `circleSize` to control the width and height of\na circle.
        \ If you make the circle big enough, it will fill up the entire screen,\nas
        in the picture on the right.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change
        the value\n    assigned to `circleSize` so that the circle takes up the entire
        screen."
      CSD U3 Variables naming rules v2-2018: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables naming rules v2: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables naming rules v2_2018: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables naming rules v2_2018_2019: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables random with assignment: "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n\n#
        Debug: Variables and Random Numbers\\\r\n\n\\\r\nVariables\ncan be assigned
        a random number too. This lets you save a single random value\nso that you
        can use it as many times as you want in your program.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\n`eyeSize` is assigned a random number. Unfortunately only
        one\nof the eyes is currently using it.\\\r\n\\\r\n\n-   **Run the program**
        to see how\n    it works.\\\r\n-   **Change the program** so that both eyes
        are always the same\n    random size. Hint: you'll only need to make changes
        to one line of code."
      CSD U3 Variables random with assignment_2018: "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n\n#
        Debug: Variables and Random Numbers\\\r\n\n\\\r\nVariables\ncan be assigned
        a random number too. This lets you save a single random value\nso that you
        can use it as many times as you want in your program.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\n`eyeSize` is assigned a random number. Unfortunately only
        one\nof the eyes is currently using it.\\\r\n\\\r\n\n-   **Run the program**
        to see how\n    it works.\\\r\n-   **Change the program** so that both eyes
        are always the same\n    random size. Hint: you'll only need to make changes
        to one line of code."
      CSD U3 Variables random with assignment_2019: "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n\n#
        Debug: Variables and Random Numbers\\\r\n\n\\\r\nVariables\ncan be assigned
        a random number too. This lets you save a single random value\nso that you
        can use it as many times as you want in your program.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\n`eyeSize` is assigned a random number. Unfortunately only
        one\nof the eyes is currently using it.\\\r\n\\\r\n\n-   **Run the program**
        to see how\n    it works.\\\r\n-   **Change the program** so that both eyes
        are always the same\n    random size. Hint: you'll only need to make changes
        to one line of code."
      CSD U3 Watcher Debug: "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Debug: Watching the Counter\n\nPattern\\\r\n\\\r\nLet's
        practice using watchers to debug your code. This program\nshould move the
        motorcycle from the bottom left to the top right, like the\nimage to the right.
        Unfortunately the motorcycle moves off screen too quickly\nto see what's going
        wrong.\\\r\n\\\r\nUsing the provided watchers for `cycle.x`\nand `cycle.y`,
        figure out which one is moving in the wrong direction and fix\nthe program."
      CSD U3 Watcher Debug_2018: "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Debug: Watching the Counter\n\nPattern\\\r\n\\\r\nLet's
        practice using watchers to debug your code. This program\nshould move the
        motorcycle from the bottom left to the top right, like the\nimage to the right.
        Unfortunately the motorcycle moves off screen too quickly\nto see what's going
        wrong.\\\r\n\\\r\nUsing the provided watchers for `cycle.x`\nand `cycle.y`,
        figure out which one is moving in the wrong direction and fix\nthe program."
      CSD U3 Watcher Debug_2019: "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Debug: Watching the Counter\n\nPattern\\\r\n\\\r\nLet's
        practice using watchers to debug your code. This program\nshould move the
        motorcycle from the bottom left to the top right, like the\nimage to the right.
        Unfortunately the motorcycle moves off screen too quickly\nto see what's going
        wrong.\\\r\n\\\r\nUsing the provided watchers for `cycle.x`\nand `cycle.y`,
        figure out which one is moving in the wrong direction and fix\nthe program."
      CSD U3 Watcher Predict response: "# Watching the Counter\n\nPattern\\\r\n\\\r\nWatchers
        are a really useful tool for debugging programs that\nuse the counter pattern.\\\r\n\\\r\n\n-
        \  **Read the program** and predict what the\n    program will do.\\\r\n-
        \  **Run the program** to check your prediction.\\\r\n-   **Look\n    at the
        watchers** and explain to a neighbor what you are seeing.\\\r\n    \\\r"
      CSD U3 Watcher Predict response_2018: "# Watching the Counter\n\nPattern\\\r\n\\\r\nWatchers
        are a really useful tool for debugging programs that\nuse the counter pattern.\\\r\n\\\r\n\n-
        \  **Read the program** and predict what the\n    program will do.\\\r\n-
        \  **Run the program** to check your prediction.\\\r\n-   **Look\n    at the
        watchers** and explain to a neighbor what you are seeing.\\\r\n    \\\r"
      CSD U3 Watcher Predict response_2019: "# Watching the Counter\n\nPattern\\\r\n\\\r\nWatchers
        are a really useful tool for debugging programs that\nuse the counter pattern.\\\r\n\\\r\n\n-
        \  **Read the program** and predict what the\n    program will do.\\\r\n-
        \  **Run the program** to check your prediction.\\\r\n-   **Look\n    at the
        watchers** and explain to a neighbor what you are seeing.\\\r\n    \\\r"
      CSD U3 abstraction velocityX if-statements predict: "# \n\nChanging Velocity
        with Position\\\r\n\\\r\nOne advantage to using the velocity\nblocks inside
        conditionals (`if` blocks) is that your sprite keeps moving,\neven after the
        condition stops being true.  For example, you only had to press\na key once
        to launch your fly bot, and it kept flying forever.  The code below\nuses
        if statements to make a fish sprite move in different directions.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Look at `if` statements that check the sprite's
        position\n    and set its velocity.\\\r\n-   With your partner, discuss what
        you think the code\n    will do, and write your answer below.\\\r\n-   Once
        you have submitted your answer,\n    run the code."
      CSD U3 abstraction velocityX if-statements predict_2018: "# \n\nChanging Velocity
        with Position\\\r\n\\\r\nOne advantage to using the velocity\nblocks inside
        conditionals (`if` blocks) is that your sprite keeps moving,\neven after the
        condition stops being true.  For example, you only had to press\na key once
        to launch your fly bot, and it kept flying forever.  The code below\nuses
        if statements to make a fish sprite move in different directions.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Look at `if` statements that check the sprite's
        position\n    and set its velocity.\\\r\n-   With your partner, discuss what
        you think the code\n    will do, and write your answer below.\\\r\n-   Once
        you have submitted your answer,\n    run the code."
      CSD U3 abstraction velocityX if-statements predict_2019: "# \n\nChanging Velocity
        with Position\\\r\n\\\r\nOne advantage to using the velocity\nblocks inside
        conditionals (`if` blocks) is that your sprite keeps moving,\neven after the
        condition stops being true.  For example, you only had to press\na key once
        to launch your fly bot, and it kept flying forever.  The code below\nuses
        if statements to make a fish sprite move in different directions.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Look at `if` statements that check the sprite's
        position\n    and set its velocity.\\\r\n-   With your partner, discuss what
        you think the code\n    will do, and write your answer below.\\\r\n-   Once
        you have submitted your answer,\n    run the code."
      CSD U3 challenge face: "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\n# Challenge:\n\nFace\\\r\n\\\r\n_Check
        with your teacher before starting any of the challenges._\\\r\n\\\r\nWrite\na
        program that uses `rect`, `ellipse`, and `fill` to create the face on the\nright.
        The colors used are \"lightblue\", \"red\", and \"lightgreen\".\\\r\nOnce\nyou've
        finished, add your own personal touches to the image.\\\r\n\\\r\n\\\r"
      CSD U3 challenge face_2018: "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\n# Challenge:\n\nFace\\\r\n\\\r\n_Check
        with your teacher before starting any of the challenges._\\\r\n\\\r\nWrite\na
        program that uses `rect`, `ellipse`, and `fill` to create the face on the\nright.
        The colors used are \"lightblue\", \"red\", and \"lightgreen\".\\\r\nOnce\nyou've
        finished, add your own personal touches to the image.\\\r\n\\\r\n\\\r"
      CSD U3 challenge face_2019: "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\n# Challenge:\n\nFace\\\r\n\\\r\n_Check
        with your teacher before starting any of the challenges._\\\r\n\\\r\nWrite\na
        program that uses `rect`, `ellipse`, and `fill` to create the face on the\nright.
        The colors used are \"lightblue\", \"red\", and \"lightgreen\".\\\r\nOnce\nyou've
        finished, add your own personal touches to the image.\\\r\n\\\r\n\\\r"
      CSD U3 challenge new shape: "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\\\r\n\n# \n\nChallenge:
        Shape of Shapes\\\r\n\\\r\n_Check with your teacher before starting\nany of
        the challenges._\\\r\n\\\r\nUsing only the `rect` and `ellipse` commands,\ncan
        you draw a new shape, such as this triangle made out of circles?"
      CSD U3 challenge new shape_2018: "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\\\r\n\n# \n\nChallenge:
        Shape of Shapes\\\r\n\\\r\n_Check with your teacher before starting\nany of
        the challenges._\\\r\n\\\r\nUsing only the `rect` and `ellipse` commands,\ncan
        you draw a new shape, such as this triangle made out of circles?"
      CSD U3 challenge new shape_2019: "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\\\r\n\n# \n\nChallenge:
        Shape of Shapes\\\r\n\\\r\n_Check with your teacher before starting\nany of
        the challenges._\\\r\n\\\r\nUsing only the `rect` and `ellipse` commands,\ncan
        you draw a new shape, such as this triangle made out of circles?"
      CSD U3 counter example: "# The Counter Pattern\\\r\n\n\\\r\nIn\nthis program,
        the draw loop is used to make the sprites move across the screen.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code and discuss with your partner how
        you think\n    it works."
      CSD U3 dancing alien: "# Sprites in the Draw Loop\\\r\n\n\\\r\nBy\nchanging
        sprite properties in the draw loop, you can animate your characters.\n\\\r\n\\\r\nThis
        animation has also been slowed down.  At the beginning of the\nprogram the
        `World.frameRate` block has been used to set the frame rate to\n\n10. Usually
        the frame rate is 30. Feel free to explore different frame rates.\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n11. Run the code to see how it works.\\\r\n12. Discuss
        with your partner\n    why some code is inside the draw loop and some code
        is outside.\\\r\n13. Try changing\n    the frame rate and running the code
        again."
      CSD U3 dancing alien_2018: "# Sprites in the Draw Loop\\\r\n\n\\\r\nBy\nchanging
        sprite properties in the draw loop, you can animate your characters.\n\\\r\n\\\r\nThis
        animation has also been slowed down.  At the beginning of the\nprogram the
        `World.frameRate` block has been used to set the frame rate to\n\n10. Usually
        the frame rate is 30. Feel free to explore different frame rates.\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n11. Run the code to see how it works.\\\r\n12. Discuss
        with your partner\n    why some code is inside the draw loop and some code
        is outside.\\\r\n13. Try changing\n    the frame rate and running the code
        again."
      CSD U3 dancing alien_2019: "# Sprites in the Draw Loop\\\r\n\n\\\r\nBy\nchanging
        sprite properties in the draw loop, you can animate your characters.\n\\\r\n\\\r\nThis
        animation has also been slowed down.  At the beginning of the\nprogram the
        `World.frameRate` block has been used to set the frame rate to\n\n10. Usually
        the frame rate is 30. Feel free to explore different frame rates.\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n11. Run the code to see how it works.\\\r\n12. Discuss
        with your partner\n    why some code is inside the draw loop and some code
        is outside.\\\r\n13. Try changing\n    the frame rate and running the code
        again."
      CSD U3 debug: "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50\nAM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# Debugging\\\r\n\n\\\r\nOften,\ncode
        doesn't work the first time it runs, and programmers have to debug it.  The\ncode
        below is supposed to make the picture on the right, but the programmer\ngot
        confused about which order the code should be in, as well as how to put\na
        square in the right place on the screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code in the workspace.\\\r\n-   Change the code so it
        makes the picture\n    on the right.\\\r\n-   (You'll need to move one line
        of code AND change the\n    coordinates of the square.)"
      CSD U3 debug_2018: "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50\nAM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# Debugging\\\r\n\n\\\r\nOften,\ncode
        doesn't work the first time it runs, and programmers have to debug it.  The\ncode
        below is supposed to make the picture on the right, but the programmer\ngot
        confused about which order the code should be in, as well as how to put\na
        square in the right place on the screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code in the workspace.\\\r\n-   Change the code so it
        makes the picture\n    on the right.\\\r\n-   (You'll need to move one line
        of code AND change the\n    coordinates of the square.)"
      CSD U3 debug_2019: "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50\nAM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# Debugging\\\r\n\n\\\r\nOften,\ncode
        doesn't work the first time it runs, and programmers have to debug it.  The\ncode
        below is supposed to make the picture on the right, but the programmer\ngot
        confused about which order the code should be in, as well as how to put\na
        square in the right place on the screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code in the workspace.\\\r\n-   Change the code so it
        makes the picture\n    on the right.\\\r\n-   (You'll need to move one line
        of code AND change the\n    coordinates of the square.)"
      CSD U3 ellipse: "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44\nPM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# ellipse\\\r\n\n\\\r\nYou
        can\nuse `ellipse` to make a circle.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look at the code\n    that makes the ellipse.\\\r\n-   Add a new ellipse
        of a different color.\\\r"
      CSD U3 ellipse_2018: "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44\nPM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# ellipse\\\r\n\n\\\r\nYou
        can\nuse `ellipse` to make a circle.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look at the code\n    that makes the ellipse.\\\r\n-   Add a new ellipse
        of a different color.\\\r"
      CSD U3 ellipse_2019: "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44\nPM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# ellipse\\\r\n\n\\\r\nYou
        can\nuse `ellipse` to make a circle.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look at the code\n    that makes the ellipse.\\\r\n-   Add a new ellipse
        of a different color.\\\r"
      CSD U3 fill: "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19\nPM.png\"
        style=\"float:right;width:200px;\">\\\r\n\n# fill(color)\\\r\n\n\\\r\nYou
        can\nalso make your rectangles different colors with `fill`. It will set the
        color\nfor every shape that comes after it in the code.\\\r\n\\\r\n\n# Do
        This\\\r\n\n\\\r\n\\*\nLook at the code that sets the color. ( [Show me where](#triggercallout=fill)\n)\\\r\n\n-
        \  Change the color from blue to yellow.\\\r\n-   Add a new square by dragging\n
        \   a `rect` block into the code area below the fill command ( [Show me where](#triggercallout=rect_block)\n
        \   ).  The new square can go any location on the screen you like.\\\r"
      CSD U3 fill_2018: "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19\nPM.png\"
        style=\"float:right;width:200px;\">\\\r\n\n# fill(color)\\\r\n\n\\\r\nYou
        can\nalso make your rectangles different colors with `fill`. It will set the
        color\nfor every shape that comes after it in the code.\\\r\n\\\r\n\n# Do
        This\\\r\n\n\\\r\n\\*\nLook at the code that sets the color. ( [Show me where](#triggercallout=fill)\n)\\\r\n\n-
        \  Change the color from blue to yellow.\\\r\n-   Add a new square by dragging\n
        \   a `rect` block into the code area below the fill command ( [Show me where](#triggercallout=rect_block)\n
        \   ).  The new square can go any location on the screen you like.\\\r"
      CSD U3 fill_2019: "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19\nPM.png\"
        style=\"float:right;width:200px;\">\\\r\n\n# fill(color)\\\r\n\n\\\r\nYou
        can\nalso make your rectangles different colors with `fill`. It will set the
        color\nfor every shape that comes after it in the code.\\\r\n\\\r\n\n# Do
        This\\\r\n\n\\\r\n\\*\nLook at the code that sets the color. ( [Show me where](#triggercallout=fill)\n)\\\r\n\n-
        \  Change the color from blue to yellow.\\\r\n-   Add a new square by dragging\n
        \   a `rect` block into the code area below the fill command ( [Show me where](#triggercallout=rect_block)\n
        \   ).  The new square can go any location on the screen you like.\\\r"
      CSD U3 keydown conditional: "# Changing Sprites\\\r\n\n\\\r\nYou\nsaw on the
        last level that `keyDown` returns `true` while you are holding\na key down
        and `false` when the key is not pressed down.   The input for the\n`keyDown`
        command is the name of key you want to check in quotes. Some examples\nare
        \"x\", \"up\" and \"space\".\\\r\n\\\r\nWe can use `keyDown` as an input to\nan
        `if` statement to change our animations based on key presses!\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Run the code and try pressing the up and down arrows.\\\r\n-
        \  Look\n    inside the `if` statement to see how the code works.\\\r\n-   Add
        a block inside\n    the third `if` statement to change the animation to a
        different animal.\\\r\n    \\\r\n    _Hint:\n    you can use the rabbit that's
        already in the Animations tab, or add a new\n    animation._"
      CSD U3 my-rect: "# rect(x,y)\\\r\n\n\\\r\nWelcome to Game Lab,\nwhere you can
        create interactive animations and games!   \\\r\n\\\r\nIn class\nyou already
        practiced the basics of putting shapes on a grid.  In Game Lab,\nyou'll do
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nLook
        at the line of code in the workspace below these instructions ( [Show\nme
        where](#triggercallout=block_trigger) ) and discuss with your partner where\nyou
        think the shape will be dawn on the grid.  (insert picture of block here)\n\\\r\n\n-
        \  Click <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers in
        the two different openings, then try running\n    the program again. \\\r\n-
        \  Try to place the rectangle near the bottom right\n    of the screen"
      CSD U3 picture: "# Challenge: Draw an Image\\\r\n\n\\\r\n_Check\nwith your teacher
        before starting any of the challenges._\\\r\n\\\r\nIn the previous\nlesson
        you and your partner created several interesting images. See if you\ncan recreate
        one of them using code."
      CSD U3 picture_2018: "# Challenge: Draw an Image\\\r\n\n\\\r\n_Check\nwith your
        teacher before starting any of the challenges._\\\r\n\\\r\nIn the previous\nlesson
        you and your partner created several interesting images. See if you\ncan recreate
        one of them using code."
      CSD U3 picture_2019: "# Challenge: Draw an Image\\\r\n\n\\\r\n_Check\nwith your
        teacher before starting any of the challenges._\\\r\n\\\r\nIn the previous\nlesson
        you and your partner created several interesting images. See if you\ncan recreate
        one of them using code."
      CSD U3 rect: "# Explore Game Lab\\\r\n\n\\\r\nWelcome to Game\nLab, where you
        can create interactive animations and games!   \\\r\n\\\r\nYou've\nalready
        practiced the basics of putting shapes on a grid.  In Game Lab, you'll\ndo
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the line of code in the workspace below these instructions
        ( [Show me where](#triggercallout=block_trigger)\n    ) and discuss with your
        partner where you think the shape will be drawn on\n    the grid.\\\r\n-   Click
        <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers inside
        the block, then try running the program again.\\\r\n-   \\*\n    Try to place
        the rectangle near the bottom right of the screen."
      CSD U3 rect_2018: "# Explore Game Lab\\\r\n\n\\\r\nWelcome to Game\nLab, where
        you can create interactive animations and games!   \\\r\n\\\r\nYou've\nalready
        practiced the basics of putting shapes on a grid.  In Game Lab, you'll\ndo
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the line of code in the workspace below these instructions
        ( [Show me where](#triggercallout=block_trigger)\n    ) and discuss with your
        partner where you think the shape will be drawn on\n    the grid.\\\r\n-   Click
        <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers inside
        the block, then try running the program again.\\\r\n-   \\*\n    Try to place
        the rectangle near the bottom right of the screen."
      CSD U3 rect_2019: "# Explore Game Lab\\\r\n\n\\\r\nWelcome to Game\nLab, where
        you can create interactive animations and games!   \\\r\n\\\r\nYou've\nalready
        practiced the basics of putting shapes on a grid.  In Game Lab, you'll\ndo
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the line of code in the workspace below these instructions
        ( [Show me where](#triggercallout=block_trigger)\n    ) and discuss with your
        partner where you think the shape will be drawn on\n    the grid.\\\r\n-   Click
        <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers inside
        the block, then try running the program again.\\\r\n-   \\*\n    Try to place
        the rectangle near the bottom right of the screen."
      CSD U3 sequence: "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05\nPM.png\"
        style=\"float:right\">\\\r\n\n# Order Matters\\\r\n\n\\\r\nIn Game Lab, it\nmatters
        what order your code is in.  New shapes are drawn on top of the ones\nthat
        came before, covering up the shapes that are drawn first.  You can see\nthe
        difference when you use more than one color in your code.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Look at the code that draws the two rectangles.  The first is\n    drawn
        red, and the second is drawn blue.\\\r\n-   Change the red rectangle's\n    color
        to green.\\\r\n-   Change the order of the code so the green rectangle appears\n
        \   on top."
      CSD U3 sequence_2018: "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05\nPM.png\"
        style=\"float:right\">\\\r\n\n# Order Matters\\\r\n\n\\\r\nIn Game Lab, it\nmatters
        what order your code is in.  New shapes are drawn on top of the ones\nthat
        came before, covering up the shapes that are drawn first.  You can see\nthe
        difference when you use more than one color in your code.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Look at the code that draws the two rectangles.  The first is\n    drawn
        red, and the second is drawn blue.\\\r\n-   Change the red rectangle's\n    color
        to green.\\\r\n-   Change the order of the code so the green rectangle appears\n
        \   on top."
      CSD U3 sequence_2019: "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05\nPM.png\"
        style=\"float:right\">\\\r\n\n# Order Matters\\\r\n\n\\\r\nIn Game Lab, it\nmatters
        what order your code is in.  New shapes are drawn on top of the ones\nthat
        came before, covering up the shapes that are drawn first.  You can see\nthe
        difference when you use more than one color in your code.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Look at the code that draws the two rectangles.  The first is\n    drawn
        red, and the second is drawn blue.\\\r\n-   Change the red rectangle's\n    color
        to green.\\\r\n-   Change the order of the code so the green rectangle appears\n
        \   on top."
      CSD U5 Pizza 2: "# Pizza Party\\\r\n\n\\\r\nWhen people work\nwith data, they
        know to leave off answers that don't make sense, and that\nsome answers, such
        as \"peppers\", \"pepppers\" and \"green peppers\", actually\nmeant the same
        thing. Computers don't know how to do this, so we have to\nclean the data
        before the computer is able to use it.\\\r\n\\\r\nThis version\nof the app
        has a second column for data to be cleaned.\\\r\n\\\r\n\n## Do this\\\r\n\n\\*\nClick
        \"Run\" to see the new list of answers to be cleaned.\\\r\n\n-   Click on\n
        \   each answer that needs to be cleaned and correct it so that the computer
        will\n    chart it properly. (You may want to delete some answers entirely.)\\\r\n-
        \  When\n    you are finished, click \"Show Chart\" to see the new chart of
        cleaned answers."
      CSD U5 Pizza 2_2018: "# Pizza Party\\\r\n\n\\\r\nWhen people work\nwith data,
        they know to leave off answers that don't make sense, and that\nsome answers,
        such as \"peppers\", \"pepppers\" and \"green peppers\", actually\nmeant the
        same thing. Computers don't know how to do this, so we have to\nclean the
        data before the computer is able to use it.\\\r\n\\\r\nThis version\nof the
        app has a second column for data to be cleaned.\\\r\n\\\r\n\n## Do this\\\r\n\n\\*\nClick
        \"Run\" to see the new list of answers to be cleaned.\\\r\n\n-   Click on\n
        \   each answer that needs to be cleaned and correct it so that the computer
        will\n    chart it properly. (You may want to delete some answers entirely.)\\\r\n-
        \  When\n    you are finished, click \"Show Chart\" to see the new chart of
        cleaned answers."
      CSD U5 Pizza 2_2019: "# Pizza Party\\\r\n\n\\\r\nWhen people work\nwith data,
        they know to leave off answers that don't make sense, and that\nsome answers,
        such as \"peppers\", \"pepppers\" and \"green peppers\", actually\nmeant the
        same thing. Computers don't know how to do this, so we have to\nclean the
        data before the computer is able to use it.\\\r\n\\\r\nThis version\nof the
        app has a second column for data to be cleaned.\\\r\n\\\r\n\n## Do this\\\r\n\n\\*\nClick
        \"Run\" to see the new list of answers to be cleaned.\\\r\n\n-   Click on\n
        \   each answer that needs to be cleaned and correct it so that the computer
        will\n    chart it properly. (You may want to delete some answers entirely.)\\\r\n-
        \  When\n    you are finished, click \"Show Chart\" to see the new chart of
        cleaned answers."
      CSD U5 Pizza: "# Pizza Party\\\r\n\n\\\r\nThe pizza party data\nhas been put
        into an app for you, and the answers from another class have\nbeen added.
        \ Because this is an app, we can automate the creation of the bar\nchart from
        the given data.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click \"Run\" to see the\n
        \   list of answers that the classes have given.\\\r\n-   Discuss with a partner
        what\n    you think the chart of this data will look like.\\\r\n-   Click
        \"Show Chart\"\n    to see for yourself.\\\r\n    \\\r\n    # Spreadsheet
        Version\\\r\n    \\\r\n    The pizza party data\n    has also been put into
        a spreadsheet for you, if you would like to use it\n    instead.  To use the
        spreadsheet, you'll need to make your own copy of it.\\\r\n    \\\r\n-   \\*\n
        \   This link will make you your own copy of the \"Pizza Topping Choices\"
        data:\n    [Pizza Topping Choices](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/copy)\\\r\n-
        \  \\*\n    You can also download a CSV version of the file [here](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/export?format=csv)."
      CSD U5 Pizza_2018: "# Pizza Party\\\r\n\n\\\r\nThe pizza party data\nhas been
        put into an app for you, and the answers from another class have\nbeen added.
        \ Because this is an app, we can automate the creation of the bar\nchart from
        the given data.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click \"Run\" to see the\n
        \   list of answers that the classes have given.\\\r\n-   Discuss with a partner
        what\n    you think the chart of this data will look like.\\\r\n-   Click
        \"Show Chart\"\n    to see for yourself.\\\r\n    \\\r\n    # Spreadsheet
        Version\\\r\n    \\\r\n    The pizza party data\n    has also been put into
        a spreadsheet for you, if you would like to use it\n    instead.  To use the
        spreadsheet, you'll need to make your own copy of it.\\\r\n    \\\r\n-   \\*\n
        \   This link will make you your own copy of the \"Pizza Topping Choices\"
        data:\n    [Pizza Topping Choices](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/copy)\\\r\n-
        \  \\*\n    You can also download a CSV version of the file [here](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/export?format=csv)."
      CSD U5 Pizza_2019: "# Pizza Party\\\r\n\n\\\r\nThe pizza party data\nhas been
        put into an app for you, and the answers from another class have\nbeen added.
        \ Because this is an app, we can automate the creation of the bar\nchart from
        the given data.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click \"Run\" to see the\n
        \   list of answers that the classes have given.\\\r\n-   Discuss with a partner
        what\n    you think the chart of this data will look like.\\\r\n-   Click
        \"Show Chart\"\n    to see for yourself.\\\r\n    \\\r\n    # Spreadsheet
        Version\\\r\n    \\\r\n    The pizza party data\n    has also been put into
        a spreadsheet for you, if you would like to use it\n    instead.  To use the
        spreadsheet, you'll need to make your own copy of it.\\\r\n    \\\r\n-   \\*\n
        \   This link will make you your own copy of the \"Pizza Topping Choices\"
        data:\n    [Pizza Topping Choices](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/copy)\\\r\n-
        \  \\*\n    You can also download a CSV version of the file [here](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/export?format=csv)."
      CSD U5 binary 1: "# 5-Bit Number\\\r\n\n\\\r\nWhen you only\nhad four bits,
        the highest number that you could make was fifteen.  Now you'll\nhave a chance
        to work with more bits to make higher numbers.\\\r\n\\\r\nIn this\nactivity,
        the dots are replaced with numbers, but you still add up everything\nthat's
        showing to see what number the binary code stands for.  The left-most\nbit
        doesn't have a number yet, so you'll have to give it one.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Click on the bits to turn them on and off, and see the different\n    numbers
        you can make.\\\r\n-   With your partner, discuss the pattern in the numbers.
        \ Decide\n    what number you think should go in the left most box.\\\r\n-
        \  Click \"Edit\"\n    to change the value of the left most bit.\\\r\n-   Once
        you've decided on the\n    value, try to make the following numbers: 16, 27,
        31"
      CSD U5 binary 1_2018: "# 5-Bit Number\\\r\n\n\\\r\nWhen you only\nhad four bits,
        the highest number that you could make was fifteen.  Now you'll\nhave a chance
        to work with more bits to make higher numbers.\\\r\n\\\r\nIn this\nactivity,
        the dots are replaced with numbers, but you still add up everything\nthat's
        showing to see what number the binary code stands for.  The left-most\nbit
        doesn't have a number yet, so you'll have to give it one.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Click on the bits to turn them on and off, and see the different\n    numbers
        you can make.\\\r\n-   With your partner, discuss the pattern in the numbers.
        \ Decide\n    what number you think should go in the left most box.\\\r\n-
        \  Click \"Edit\"\n    to change the value of the left most bit.\\\r\n-   Once
        you've decided on the\n    value, try to make the following numbers: 16, 27,
        31"
      CSD U5 binary 1_2019: "# 5-Bit Number\\\r\n\n\\\r\nWhen you only\nhad four bits,
        the highest number that you could make was fifteen.  Now you'll\nhave a chance
        to work with more bits to make higher numbers.\\\r\n\\\r\nIn this\nactivity,
        the dots are replaced with numbers, but you still add up everything\nthat's
        showing to see what number the binary code stands for.  The left-most\nbit
        doesn't have a number yet, so you'll have to give it one.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Click on the bits to turn them on and off, and see the different\n    numbers
        you can make.\\\r\n-   With your partner, discuss the pattern in the numbers.
        \ Decide\n    what number you think should go in the left most box.\\\r\n-
        \  Click \"Edit\"\n    to change the value of the left most bit.\\\r\n-   Once
        you've decided on the\n    value, try to make the following numbers: 16, 27,
        31"
      CSD U5 binary 2: "# 6-Bit Number\\\r\n\n\\\r\nThis widget helps\nyou to calculate
        6-bit binary numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   With your\n
        \   partner, answer the following questions:\\\r\n    1.  What's the biggest
        number\n        you can make with this widget?\\\r\n    2.  The record for
        most skips by a dog\n        and person in one minute is 59.  How would you
        encode 59 in binary?"
      CSD U5 binary 2_2018: "# 6-Bit Number\\\r\n\n\\\r\nThis widget helps\nyou to
        calculate 6-bit binary numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   With
        your\n    partner, answer the following questions:\\\r\n    1.  What's the
        biggest number\n        you can make with this widget?\\\r\n    2.  The record
        for most skips by a dog\n        and person in one minute is 59.  How would
        you encode 59 in binary?"
      CSD U5 binary 2_2019: "# 6-Bit Number\\\r\n\n\\\r\nThis widget helps\nyou to
        calculate 6-bit binary numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   With
        your\n    partner, answer the following questions:\\\r\n    1.  What's the
        biggest number\n        you can make with this widget?\\\r\n    2.  The record
        for most skips by a dog\n        and person in one minute is 59.  How would
        you encode 59 in binary?"
      CSD U5 binary 3-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na widget
        that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind the
        two world records encoded in the binary string below.\\\r\n\\\r\n\n1.  Most\n
        \   number of people lifted and thrown in two minutes. (4 bits)\\\r\n2.  Most
        canned\n    drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # Do This\\\r\n3.  Decode\n    the two numbers from the binary string."
      CSD U5 binary 3: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na widget
        that can calculate numbers up to to eight bits.  You can use it to\ntry to
        find the three world records encoded in the binary string below.  The\nanswers
        are in order in the string.\\\r\n\\\r\n\n1.  Most canned drinks opened by\n
        \   a parrot in one minute.\\\r\n2.  Most ice cream scoops balanced on a cone.\\\r\n3.
        \ 3.\n    Most number of people lifted and thrown in two minutes.\\\r\n    \\\r\n
        \   ![](https://images.code.org/51fe16afb224a2cc4819def434f6ec9d-image-1502735454689.png)\\\r\n
        \   \\\r\n    # \n    Do This\\\r\n4.  Try to decode the three numbers from
        a the binary string\\\r\n5.  \\*\n    Discuss your answers with your partner.\\\r\n
        \   -   Was there any other information\n        you need to be certain your
        numbers are correct?"
      CSD U5 binary 4-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na widget
        that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind the
        two world records encoded in the binary string below.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/13b0d3307e688575b53e3e6bc86fb739-image-1505426509385.01.06>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Most number of people lifted and thrown in two minutes.\n    (4 bits)\\\r\n2.
        \ Most canned drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n3.  Decode the two numbers from the binary string."
      CSD U5 binary 4-new_2018: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind
        the two world records encoded in the binary string below.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/13b0d3307e688575b53e3e6bc86fb739-image-1505426509385.01.06>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Most number of people lifted and thrown in two minutes.\n    (4 bits)\\\r\n2.
        \ Most canned drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n3.  Decode the two numbers from the binary string."
      CSD U5 binary 4-new_2019: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind
        the two world records encoded in the binary string below.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/13b0d3307e688575b53e3e6bc86fb739-image-1505426509385.01.06>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Most number of people lifted and thrown in two minutes.\n    (4 bits)\\\r\n2.
        \ Most canned drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n3.  Decode the two numbers from the binary string."
      CSD U5 binary 4: "# Bit Length\\\r\n\n\\\r\nIf you don't know\nhow many bits
        long each number is, you won't be able to decode a string of\nnumbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n<img
        src=\"https://images.code.org/51fe16afb224a2cc4819def434f6ec9d-image-1502735454689.png\"\nstyle=\"height:
        30px;\">\\\r\n\\\r\nIf you split the string like this, the string\nreads 71,
        28, 28.\\\r\n\\\r\n<img src=\"https://images.code.org/03f40f140dbdbff92af0784911e66fa2-image-1502741759516.png\"\nstyle=\"height:
        30px;\">    <img src=\"https://images.code.org/b5b34c9ec4d051bd81404756269b1cf0-image-1502741761216.png\"\nstyle=\"height:
        30px;\">    <img src=\"https://images.code.org/b5b34c9ec4d051bd81404756269b1cf0-image-1502741761216.png\"\nstyle=\"height:
        30px;\">\\\r\n\\\r\nIf you split it like this, the string reads\n17, 249,
        12.\\\r\n\\\r\n<img src=\"https://images.code.org/ec9a1533c32a23637f9d1021d318f496-image-1502741540345.png\"\nstyle=\"height:
        30px;\">     <img src=\"https://images.code.org/1239b8d5f24df95e6461165b92a41383-image-1502741542720.png\"\nstyle=\"height:
        30px;\">     <img src=\"https://images.code.org/5e71958697e30b9874ed6f6028a02023-image-1502741545510.png\"\nstyle=\"height:
        30px;\">\\\r\n\\\r\n\\\r\nTo solve this problem, people agree on\na fixed
        length for every number.  The following string uses the same three\nnumbers,
        but each number takes up exactly eight bits.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/2c55ec3f4ff236cb4ffa8d9b1b46895f-image-1502742909603.png\"\nstyle=\"height:
        30px;\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use the binary widget to\n
        \   decode the string that uses eight bit numbers.\\\r\n-   Check you answer
        with\n    a partner to see whether you got the same answer."
      CSD U5 binary 5-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na widget
        that can calculate numbers up to to eight bits. (If you have a shorter\nnumber,
        you can just leave the extra bits at the left off.) You can use it\nto find
        the values of the two world records below.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Longest tail on a dog (in inches) (5 bits)\\\r\n2.  Most spoons\n    balanced
        on someone's face (5 bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Decode the
        two\n    numbers from a the binary string."
      CSD U5 binary 5-new_2018: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers up to to eight bits. (If you have a shorter\nnumber,
        you can just leave the extra bits at the left off.) You can use it\nto find
        the values of the two world records below.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Longest tail on a dog (in inches) (5 bits)\\\r\n2.  Most spoons\n    balanced
        on someone's face (5 bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Decode the
        two\n    numbers from a the binary string."
      CSD U5 binary 5-new_2019: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers up to to eight bits. (If you have a shorter\nnumber,
        you can just leave the extra bits at the left off.) You can use it\nto find
        the values of the two world records below.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Longest tail on a dog (in inches) (5 bits)\\\r\n2.  Most spoons\n    balanced
        on someone's face (5 bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Decode the
        two\n    numbers from a the binary string."
      CSD U5 binary 6-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na new
        bit string.  This time, you don't know the bit length of the two numbers.
        \ Try\nto decode the numbers without knowing the bit length.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Largest wind chime, in feet (? bits)\\\r\n2.  Furthest arrow\n    shot with
        someone's feet (in feet) (? bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Try
        to\n    decode the two numbers from the binary string.\\\r\n4.  Discuss with
        your partner\n    why you cannot know for sure whether your answer is correct."
      CSD U5 binary 6-new_2018: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        new bit string.  This time, you don't know the bit length of the two numbers.
        \ Try\nto decode the numbers without knowing the bit length.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Largest wind chime, in feet (? bits)\\\r\n2.  Furthest arrow\n    shot with
        someone's feet (in feet) (? bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Try
        to\n    decode the two numbers from the binary string.\\\r\n4.  Discuss with
        your partner\n    why you cannot know for sure whether your answer is correct."
      CSD U5 binary 6-new_2019: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        new bit string.  This time, you don't know the bit length of the two numbers.
        \ Try\nto decode the numbers without knowing the bit length.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46>\nPM.png>)\\\r\n\\\r\n\n1.
        \ Largest wind chime, in feet (? bits)\\\r\n2.  Furthest arrow\n    shot with
        someone's feet (in feet) (? bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Try
        to\n    decode the two numbers from the binary string.\\\r\n4.  Discuss with
        your partner\n    why you cannot know for sure whether your answer is correct."
      CSD U5 binary 7-new: "# Bit Length\\\r\n\n\\\r\nIf you don't\nknow how many
        bits long each number is, you won't be able to decode a string\nof numbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46>\nPM.png>)\\\r\n\\\r\nIf
        you split the string like this, the string reads 12, 84.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c8586b93427166ae6ecfdb8b1ff66bdd-image-1505427228630.13.01>\nPM.png>)
        \\!\\[](\\<<https://images.code.org/7d9814dc4bae8512dfaebbe459c29c9b-image-1505427230882.13.08>\nPM.png>)\\\r\n\\\r\n\\\r\nIf
        you split it like this, the string reads 42, 20.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/2e62b4a71b98b68bdf04713c508e4cb2-image-1505427233001.13.13>\nPM.png>)
        \\!\\[](\\<<https://images.code.org/10a316c870b575db4b30a687815bf481-image-1505427235482.13.19>\nPM.png>)\\\r\n\\\r\nTo
        solve this problem, people agree on a fixed length for every\nnumber.  The
        following string uses the same two numbers, but each number takes\nup exactly
        eight bits, no matter how many bits it actually needs.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/257cb728fde57421e58ef31164be5a51-image-1505427467235.13.26>\nPM.png>)\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Use the binary widget to decode the string\n    that
        uses eight bit numbers.\\\r\n-   Check you answer with a partner to see whether\n
        \   you got the same answer."
      CSD U5 binary 7-new_2018: "# Bit Length\\\r\n\n\\\r\nIf you don't\nknow how
        many bits long each number is, you won't be able to decode a string\nof numbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46>\nPM.png>)\\\r\n\\\r\nIf
        you split the string like this, the string reads 12, 84.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c8586b93427166ae6ecfdb8b1ff66bdd-image-1505427228630.13.01>\nPM.png>)
        \\!\\[](\\<<https://images.code.org/7d9814dc4bae8512dfaebbe459c29c9b-image-1505427230882.13.08>\nPM.png>)\\\r\n\\\r\n\\\r\nIf
        you split it like this, the string reads 42, 20.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/2e62b4a71b98b68bdf04713c508e4cb2-image-1505427233001.13.13>\nPM.png>)
        \\!\\[](\\<<https://images.code.org/10a316c870b575db4b30a687815bf481-image-1505427235482.13.19>\nPM.png>)\\\r\n\\\r\nTo
        solve this problem, people agree on a fixed length for every\nnumber.  The
        following string uses the same two numbers, but each number takes\nup exactly
        eight bits, no matter how many bits it actually needs.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/257cb728fde57421e58ef31164be5a51-image-1505427467235.13.26>\nPM.png>)\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Use the binary widget to decode the string\n    that
        uses eight bit numbers.\\\r\n-   Check you answer with a partner to see whether\n
        \   you got the same answer."
      CSD U5 binary 7-new_2019: "# Bit Length\\\r\n\n\\\r\nIf you don't\nknow how
        many bits long each number is, you won't be able to decode a string\nof numbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46>\nPM.png>)\\\r\n\\\r\nIf
        you split the string like this, the string reads 12, 84.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c8586b93427166ae6ecfdb8b1ff66bdd-image-1505427228630.13.01>\nPM.png>)
        \\!\\[](\\<<https://images.code.org/7d9814dc4bae8512dfaebbe459c29c9b-image-1505427230882.13.08>\nPM.png>)\\\r\n\\\r\n\\\r\nIf
        you split it like this, the string reads 42, 20.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/2e62b4a71b98b68bdf04713c508e4cb2-image-1505427233001.13.13>\nPM.png>)
        \\!\\[](\\<<https://images.code.org/10a316c870b575db4b30a687815bf481-image-1505427235482.13.19>\nPM.png>)\\\r\n\\\r\nTo
        solve this problem, people agree on a fixed length for every\nnumber.  The
        following string uses the same two numbers, but each number takes\nup exactly
        eight bits, no matter how many bits it actually needs.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/257cb728fde57421e58ef31164be5a51-image-1505427467235.13.26>\nPM.png>)\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Use the binary widget to decode the string\n    that
        uses eight bit numbers.\\\r\n-   Check you answer with a partner to see whether\n
        \   you got the same answer."
      CSD U5 black white images pixelation 2: "# Do This\\\r\n\n\\\r\nUse\nthe pixelation
        widget to draw a smiley face\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47>\nPM.png>)"
      CSD U5 black white images pixelation 2_2018: "# Do This\\\r\n\n\\\r\nUse\nthe
        pixelation widget to draw a smiley face\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47>\nPM.png>)"
      CSD U5 black white images pixelation 2_2019: "# Do This\\\r\n\n\\\r\nUse\nthe
        pixelation widget to draw a smiley face\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47>\nPM.png>)"
      CSD U5 black white images pixelation 3: "# Do This\\\r\n\n\\\r\nThe\nwidth and
        height sliders are set incorrectly for this image so it doesn't\nlook like
        anything. Change them until you find the image.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c2abe82051e700f22ce613e407e71536-image-1491426050751.00.17>\nPM.png>)"
      CSD U5 black white images pixelation 3_2018: "# Do This\\\r\n\n\\\r\nThe\nwidth
        and height sliders are set incorrectly for this image so it doesn't\nlook
        like anything. Change them until you find the image.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c2abe82051e700f22ce613e407e71536-image-1491426050751.00.17>\nPM.png>)"
      CSD U5 black white images pixelation 3_2019: "# Do This\\\r\n\n\\\r\nThe\nwidth
        and height sliders are set incorrectly for this image so it doesn't\nlook
        like anything. Change them until you find the image.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c2abe82051e700f22ce613e407e71536-image-1491426050751.00.17>\nPM.png>)"
      CSD U5 black white images pixelation 4: "# Do This\\\r\n\n\\\r\nAdd\neyebrows
        to this smiley face. Remember to use the \"Readable Format\" if you\nget stuck.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/269725fa3d9d6857912fe4a20464a830-image-1491427249017.18.37>\nPM.png>)"
      CSD U5 black white images pixelation 4_2018: "# Do This\\\r\n\n\\\r\nAdd\neyebrows
        to this smiley face. Remember to use the \"Readable Format\" if you\nget stuck.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/269725fa3d9d6857912fe4a20464a830-image-1491427249017.18.37>\nPM.png>)"
      CSD U5 black white images pixelation 4_2019: "# Do This\\\r\n\n\\\r\nAdd\neyebrows
        to this smiley face. Remember to use the \"Readable Format\" if you\nget stuck.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/269725fa3d9d6857912fe4a20464a830-image-1491427249017.18.37>\nPM.png>)"
      CSD U5 black white images pixelation 5: "# Do This\\\r\n\n\\\r\nNow\nit's your
        turn. Draw anything you want in the pixelation widget. Feel free\nto change
        the width and height of your image if you wish."
      CSD U5 black white images pixelation 5_2018: "# Do This\\\r\n\n\\\r\nNow\nit's
        your turn. Draw anything you want in the pixelation widget. Feel free\nto
        change the width and height of your image if you wish."
      CSD U5 black white images pixelation 5_2019: "# Do This\\\r\n\n\\\r\nNow\nit's
        your turn. Draw anything you want in the pixelation widget. Feel free\nto
        change the width and height of your image if you wish."
      CSD U5 black white images pixelation: "# Do This\\\r\n\n\\\r\nComplete the\n\"X\"
        shape by typing 0s and 1s. You can always click \"Readable Format\"\nif you
        want to clean up your work."
      CSD U5 black white images pixelation_2018: "# Do This\\\r\n\n\\\r\nComplete
        the\n\"X\" shape by typing 0s and 1s. You can always click \"Readable Format\"\nif
        you want to clean up your work."
      CSD U5 black white images pixelation_2019: "# Do This\\\r\n\n\\\r\nComplete
        the\n\"X\" shape by typing 0s and 1s. You can always click \"Readable Format\"\nif
        you want to clean up your work."
      CSD U6 Catch the Mouse prediction: "# Attrape la souris\\\r\n\n\\\r\nC'est un
        jeu à cliquer, identique à celui que tu as construit dans la dernière leçon.\\\r\n\\\r\nExamine
        le code avec ton binôme et répondez à la question suivante;\\\r\n\\\r\n\n-
        \  Combien de fois dois-tu cliquer sur la souris avant que la LED commence
        à clignoter?\\\r\n    \\\r\n    Écris ta réponse dans la case ci-dessous,
        puis démarre le code et regarde ce qui se passe."
      CSD U6 Catch the Mouse prediction_2018: "# Attrape la souris\\\r\n\n\\\r\nC'est
        un jeu à cliquer, identique à celui que tu as construit dans la dernière leçon.\\\r\n\\\r\nExamine
        le code avec ton binôme et répondez à la question suivante;\\\r\n\\\r\n\n-
        \  Combien de fois dois-tu cliquer sur la souris avant que la LED commence
        à clignoter?\\\r\n    \\\r\n    Écris ta réponse dans la case ci-dessous,
        puis démarre le code et regarde ce qui se passe."
      CSD U6 Catch the Mouse prediction_2019: "# Attrape la souris\\\r\n\n\\\r\nC'est
        un jeu à cliquer, identique à celui que tu as construit dans la dernière leçon.\\\r\n\\\r\nExamine
        le code avec ton binôme et répondez à la question suivante;\\\r\n\\\r\n\n-
        \  Combien de fois dois-tu cliquer sur la souris avant que la LED commence
        à clignoter?\\\r\n    \\\r\n    Écris ta réponse dans la case ci-dessous,
        puis démarre le code et regarde ce qui se passe."
      CSD U6 LED all: "# Lumière multi-fonction\\\r\n\n\\\r\nCette application doit
        vous permettre de choisir entre trois types d'éclairage différents: allumé,
        clignotant et pulsant. Elle doit aussi avoir un bouton qui éteint complétement
        la lumière. Pour le moment, seul le bouton \"on\" fonctionne, et il manque
        le bouton \"off\".\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour
        que les boutons \"blink\" et \"pulse\" fonctionnent.\\\r\n-   En mode Concevoir,
        ajoute un nouveau bouton \"off\".\\\r\n-   Ajoute du code pour le bouton \"off\"
        fonctionne."
      CSD U6 LED all_2018: "# Lumière multi-fonction\\\r\n\n\\\r\nCette application
        doit vous permettre de choisir entre trois types d'éclairage différents: allumé,
        clignotant et pulsant. Elle doit aussi avoir un bouton qui éteint complétement
        la lumière. Pour le moment, seul le bouton \"on\" fonctionne, et il manque
        le bouton \"off\".\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour
        que les boutons \"blink\" et \"pulse\" fonctionnent.\\\r\n-   En mode Concevoir,
        ajoute un nouveau bouton \"off\".\\\r\n-   Ajoute du code pour le bouton \"off\"
        fonctionne."
      CSD U6 LED all_2019: "# Lumière multi-fonction\\\r\n\n\\\r\nCette application
        doit vous permettre de choisir entre trois types d'éclairage différents: allumé,
        clignotant et pulsant. Elle doit aussi avoir un bouton qui éteint complétement
        la lumière. Pour le moment, seul le bouton \"on\" fonctionne, et il manque
        le bouton \"off\".\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour
        que les boutons \"blink\" et \"pulse\" fonctionnent.\\\r\n-   En mode Concevoir,
        ajoute un nouveau bouton \"off\".\\\r\n-   Ajoute du code pour le bouton \"off\"
        fonctionne."
      CSD U6 LED toggle: "# Interrupteur\\\r\n\n\\\r\nIl y a encore trois autres blocs
        que tu n'as pas encore utilisés et qui permettent de contrôler la LED. Un
        de ces blocs peut transformer le bouton en interrupteur, allumant la LED si
        elle est éteinte, et l'éteignant si elle est allumé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Essaie les blocs `blink`, `toggle` et `pulse` pour voir ce qu'ils font.\\\r\n-
        \  Utilise l'un de ces blocs pour que le bouton fonctionne comme un interrupteur.\\\r\n-
        \  Si la LED est éteinte, le bouton doit l'allumer.\\\r\n-   Si la LED est
        allumée, le bouton doit l'éteindre."
      CSD U6 LED toggle_2018: "# Interrupteur\\\r\n\n\\\r\nIl y a encore trois autres
        blocs que tu n'as pas encore utilisés et qui permettent de contrôler la LED.
        Un de ces blocs peut transformer le bouton en interrupteur, allumant la LED
        si elle est éteinte, et l'éteignant si elle est allumé.\\\r\n\\\r\n\n# Fais
        ceci\\\r\n\n-   Essaie les blocs `blink`, `toggle` et `pulse` pour voir ce
        qu'ils font.\\\r\n-   Utilise l'un de ces blocs pour que le bouton fonctionne
        comme un interrupteur.\\\r\n-   Si la LED est éteinte, le bouton doit l'allumer.\\\r\n-
        \  Si la LED est allumée, le bouton doit l'éteindre."
      CSD U6 LED toggle_2019: "# Interrupteur\\\r\n\n\\\r\nIl y a encore trois autres
        blocs que tu n'as pas encore utilisés et qui permettent de contrôler la LED.
        Un de ces blocs peut transformer le bouton en interrupteur, allumant la LED
        si elle est éteinte, et l'éteignant si elle est allumé.\\\r\n\\\r\n\n# Fais
        ceci\\\r\n\n-   Essaie les blocs `blink`, `toggle` et `pulse` pour voir ce
        qu'ils font.\\\r\n-   Utilise l'un de ces blocs pour que le bouton fonctionne
        comme un interrupteur.\\\r\n-   Si la LED est éteinte, le bouton doit l'allumer.\\\r\n-
        \  Si la LED est allumée, le bouton doit l'éteindre."
      CSD U6 LEDbutton predict embed: "# Utilisation des évènements\\\r\n\n\\\r\nCe
        programme utilise des évènements. Examine le code avec ton binôme et imaginez
        sa fonction. Une fois que vous avez répondu à la question, clique sur \"Démarrer\"
        pour vérifier votre réponse.\\\r\n\\\r\n\n-   Est-ce que la lumière s'allume
        quand le programme est \"Démarré\"? Pourquoi s'allume-t-elle ou ne s'allume-t-elle
        pas?"
      CSD U6 LEDbutton predict embed_2018: "# Utilisation des évènements\\\r\n\n\\\r\nCe
        programme utilise des évènements. Examine le code avec ton binôme et imaginez
        sa fonction. Une fois que vous avez répondu à la question, clique sur \"Démarrer\"
        pour vérifier votre réponse.\\\r\n\\\r\n\n-   Est-ce que la lumière s'allume
        quand le programme est \"Démarré\"? Pourquoi s'allume-t-elle ou ne s'allume-t-elle
        pas?"
      CSD U6 LEDbutton predict embed_2019: "# Utilisation des évènements\\\r\n\n\\\r\nCe
        programme utilise des évènements. Examine le code avec ton binôme et imaginez
        sa fonction. Une fois que vous avez répondu à la question, clique sur \"Démarrer\"
        pour vérifier votre réponse.\\\r\n\\\r\n\n-   Est-ce que la lumière s'allume
        quand le programme est \"Démarré\"? Pourquoi s'allume-t-elle ou ne s'allume-t-elle
        pas?"
      CSD U6 add LED button: "# Utilisation des évènements\\\r\n\n\\\r\nCe programme
        a deux boutons. Le bouton \"on\" fonctionne, mais le bouton \"off\" doit être
        programmé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour que le
        second bouton éteigne la LED."
      CSD U6 add LED button_2018: "# Utilisation des évènements\\\r\n\n\\\r\nCe programme
        a deux boutons. Le bouton \"on\" fonctionne, mais le bouton \"off\" doit être
        programmé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour que le
        second bouton éteigne la LED."
      CSD U6 add LED button_2019: "# Utilisation des évènements\\\r\n\n\\\r\nCe programme
        a deux boutons. Le bouton \"on\" fonctionne, mais le bouton \"off\" doit être
        programmé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour que le
        second bouton éteigne la LED."
      CSD U6 analog challenge: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSD U6 analog challenge_2018: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSD U6 analog challenge_2019: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSD U6 analog data: "# Data Event\\\r\n\n\\\r\nEach of these\nanalog sensors
        emits a special event called \"data\" which occurs every time\nnew data comes
        in from the sensor. Using this event, we can write programs\nthat continually
        update.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThis is the first program\nyou
        worked on in this lesson, let's see if we can make it continually update\nthe
        sound reading using the \"data\" event.\\\r\n\\\r\n\n-   Drag out an `onBoardEvent`\n
        \   block\\\r\n-   Choose `lightSensor` as the input to watch and \"data\"
        as the\n    event\\\r\n-   Move the existing code into your event handler"
      CSD U6 analog data_2018: "# Data Event\\\r\n\n\\\r\nEach of these\nanalog sensors
        emits a special event called \"data\" which occurs every time\nnew data comes
        in from the sensor. Using this event, we can write programs\nthat continually
        update.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThis is the first program\nyou
        worked on in this lesson, let's see if we can make it continually update\nthe
        sound reading using the \"data\" event.\\\r\n\\\r\n\n-   Drag out an `onBoardEvent`\n
        \   block\\\r\n-   Choose `lightSensor` as the input to watch and \"data\"
        as the\n    event\\\r\n-   Move the existing code into your event handler"
      CSD U6 analog data_2019: "# Data Event\\\r\n\n\\\r\nEach of these\nanalog sensors
        emits a special event called \"data\" which occurs every time\nnew data comes
        in from the sensor. Using this event, we can write programs\nthat continually
        update.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThis is the first program\nyou
        worked on in this lesson, let's see if we can make it continually update\nthe
        sound reading using the \"data\" event.\\\r\n\\\r\n\n-   Drag out an `onBoardEvent`\n
        \   block\\\r\n-   Choose `lightSensor` as the input to watch and \"data\"
        as the\n    event\\\r\n-   Move the existing code into your event handler"
      CSD U6 analog light: "# Light Sensor Updates\\\r\n\n\\\r\nThis\napp is very
        similar to the last, but we've added a button with the ID \"update\\_button\".\nWrite
        a program that displays the current value of the light sensor every\ntime
        the update button is clicked."
      CSD U6 analog light_2018: "# Light Sensor Updates\\\r\n\n\\\r\nThis\napp is
        very similar to the last, but we've added a button with the ID \"update\\_button\".\nWrite
        a program that displays the current value of the light sensor every\ntime
        the update button is clicked."
      CSD U6 analog light_2019: "# Light Sensor Updates\\\r\n\n\\\r\nThis\napp is
        very similar to the last, but we've added a button with the ID \"update\\_button\".\nWrite
        a program that displays the current value of the light sensor every\ntime
        the update button is clicked."
      CSD U6 analog rbg 1: "# Displaying Sensor Readings in\n\nColor\\\r\n\\\r\nIn
        the earlier prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSD U6 analog rbg 1_2018: "# Displaying Sensor Readings in\n\nColor\\\r\n\\\r\nIn
        the earlier prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSD U6 analog rbg 1_2019: "# Displaying Sensor Readings in\n\nColor\\\r\n\\\r\nIn
        the earlier prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSD U6 analog rbg 2: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat your
        sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSD U6 analog rbg 2_2018: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat
        your sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSD U6 analog rbg 2_2019: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat
        your sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSD U6 analog rgb 3: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSD U6 analog rgb 3_2018: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSD U6 analog rgb 3_2019: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSD U6 analog sound: "# Reading the Sound Sensor\\\r\n\n\\\r\nIn\nthis app we've
        already added a text label with the id \"sound\\_value\". Using\nthe `soundSensor.value`
        block, display the value of the sound sensor."
      CSD U6 analog sound_2018: "# Reading the Sound Sensor\\\r\n\n\\\r\nIn\nthis
        app we've already added a text label with the id \"sound\\_value\". Using\nthe
        `soundSensor.value` block, display the value of the sound sensor."
      CSD U6 analog sound_2019: "# Reading the Sound Sensor\\\r\n\n\\\r\nIn\nthis
        app we've already added a text label with the id \"sound\\_value\". Using\nthe
        `soundSensor.value` block, display the value of the sound sensor."
      CSD U6 analog temp: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSD U6 analog temp_2018: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSD U6 analog temp_2019: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSD U6 balloon clicker predict: "# Make the Balloon Fly\\\r\n\n\\\r\nIn\nthis
        game, you have to click on the correct buttons to make the balloon fly\ninto
        the sky.\\\r\n\\\r\nLook at the code with your partner and answer the following\nquestions:\\\r\n\\\r\n\n-
        \  When does the value stored in the variable `correct` change?\\\r\n-   \\*\n
        \   Why does the program need this line: `var choice = randomNumber(1,3);`?\\\r\n
        \   \\\r\n    Once\n    you have answered the questions, run the code and
        see what happens."
      CSD U6 board getters: "# Using the Circuit Playground\\\r\n\n\\\r\nYou\ncan
        also use getters and setters with the Circuit Playground.  For this level,\nyou'll
        need to plug in your board.\\\r\n\\\r\nRead through the code and predict\nwhat
        the program will do, then hit \"Run\" to test your prediction."
      CSD U6 board getters_2018: "# Using the Circuit Playground\\\r\n\n\\\r\nYou\ncan
        also use getters and setters with the Circuit Playground.  For this level,\nyou'll
        need to plug in your board.\\\r\n\\\r\nRead through the code and predict\nwhat
        the program will do, then hit \"Run\" to test your prediction."
      CSD U6 board getters_2019: "# Using the Circuit Playground\\\r\n\n\\\r\nYou\ncan
        also use getters and setters with the Circuit Playground.  For this level,\nyou'll
        need to plug in your board.\\\r\n\\\r\nRead through the code and predict\nwhat
        the program will do, then hit \"Run\" to test your prediction."
      CSD U6 challenge motorcycle: "# Challenge\\\r\n\n\\\r\nUse this\nprogram to
        experiment some more with getting and setting properties. Some\nideas you
        might try include:\\\r\n\\\r\n\n-   Use the toggle switch to change the\n
        \   motorcycle's movement to go up and down.\\\r\n-   Use a dropdown with
        color names\n    to change the motorcycle's color\\\r\n-   Make the buzzer
        or LED turn on when\n    the motorcycle reaches the top or bottom of the screen."
      CSD U6 challenge motorcycle_2018: "# Challenge\\\r\n\n\\\r\nUse this\nprogram
        to experiment some more with getting and setting properties. Some\nideas you
        might try include:\\\r\n\\\r\n\n-   Use the toggle switch to change the\n
        \   motorcycle's movement to go up and down.\\\r\n-   Use a dropdown with
        color names\n    to change the motorcycle's color\\\r\n-   Make the buzzer
        or LED turn on when\n    the motorcycle reaches the top or bottom of the screen."
      CSD U6 challenge motorcycle_2019: "# Challenge\\\r\n\n\\\r\nUse this\nprogram
        to experiment some more with getting and setting properties. Some\nideas you
        might try include:\\\r\n\\\r\n\n-   Use the toggle switch to change the\n
        \   motorcycle's movement to go up and down.\\\r\n-   Use a dropdown with
        color names\n    to change the motorcycle's color\\\r\n-   Make the buzzer
        or LED turn on when\n    the motorcycle reaches the top or bottom of the screen."
      CSD U6 create LED app 2: "# Créé ton application - Le code\\\r\n\n\\\r\nMaintenant,
        tu dois ajouter le code qui fait fonctionner ton application.\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n\\\r\n\n-   Discute avec ton binôme pour savoir de quel code
        vous aurez besoin pour l'application. Est-qu'il faut...\\\r\n-   des évènements
        ?\\\r\n-   des variables ?\\\r\n-   des accesseurs ?\\\r\n-   des nombres
        aléatoires ?\\\r\n-   Dans le mode Code, ajoute le code qui fait fonctionner
        l'application."
      CSD U6 create LED app 2_2018: "# Créé ton application - Le code\\\r\n\n\\\r\nMaintenant,
        tu dois ajouter le code qui fait fonctionner ton application.\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n\\\r\n\n-   Discute avec ton binôme pour savoir de quel code
        vous aurez besoin pour l'application. Est-qu'il faut...\\\r\n-   des évènements
        ?\\\r\n-   des variables ?\\\r\n-   des accesseurs ?\\\r\n-   des nombres
        aléatoires ?\\\r\n-   Dans le mode Code, ajoute le code qui fait fonctionner
        l'application."
      CSD U6 create LED app 2_2019: "# Créé ton application - Le code\\\r\n\n\\\r\nMaintenant,
        tu dois ajouter le code qui fait fonctionner ton application.\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n\\\r\n\n-   Discute avec ton binôme pour savoir de quel code
        vous aurez besoin pour l'application. Est-qu'il faut...\\\r\n-   des évènements
        ?\\\r\n-   des variables ?\\\r\n-   des accesseurs ?\\\r\n-   des nombres
        aléatoires ?\\\r\n-   Dans le mode Code, ajoute le code qui fait fonctionner
        l'application."
      CSD U6 create LED app: "# Créé ton application - L'écran\\\r\n\n\\\r\nMaintenant,
        toi et ton binôme pouvez créer votre propre application utilisant la LED.
        Décidez entre-vous quelle application vous voulez réaliser.\\\r\n\\\r\n\n#
        Action\\\r\n\n\\\r\n\n-   Discutez entre vous quels éléments seront nécessaires
        sur l'écran de votre application. Est-ce que vous voulez...\\\r\n-   des boutons
        ?\\\r\n-   des images ?\\\r\n-   du texte ?\\\r\n-   Dans le mode Concevoir,
        ajoutez les éléments en vous assurant que vous donnez à chacun un identifiant
        significatif."
      CSD U6 create LED app_2018: "# Créé ton application - L'écran\\\r\n\n\\\r\nMaintenant,
        toi et ton binôme pouvez créer votre propre application utilisant la LED.
        Décidez entre-vous quelle application vous voulez réaliser.\\\r\n\\\r\n\n#
        Action\\\r\n\n\\\r\n\n-   Discutez entre vous quels éléments seront nécessaires
        sur l'écran de votre application. Est-ce que vous voulez...\\\r\n-   des boutons
        ?\\\r\n-   des images ?\\\r\n-   du texte ?\\\r\n-   Dans le mode Concevoir,
        ajoutez les éléments en vous assurant que vous donnez à chacun un identifiant
        significatif."
      CSD U6 create LED app_2019: "# Créé ton application - L'écran\\\r\n\n\\\r\nMaintenant,
        toi et ton binôme pouvez créer votre propre application utilisant la LED.
        Décidez entre-vous quelle application vous voulez réaliser.\\\r\n\\\r\n\n#
        Action\\\r\n\n\\\r\n\n-   Discutez entre vous quels éléments seront nécessaires
        sur l'écran de votre application. Est-ce que vous voulez...\\\r\n-   des boutons
        ?\\\r\n-   des images ?\\\r\n-   du texte ?\\\r\n-   Dans le mode Concevoir,
        ajoutez les éléments en vous assurant que vous donnez à chacun un identifiant
        significatif."
      CSD U6 design motorcycle: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat you
        have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but how can you control\nits
        speed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a slider in design mode.\\\r\n
        \   -   Make\n        sure you set the min and max values of the slider in
        design mode.\\\r\n-   Create\n    an event that will trigger when the slider
        value is changed.\\\r\n-   Add code\n    to get the slider value and store
        it into the `speed` variable when the event\n    is triggered."
      CSD U6 design motorcycle_2018: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat
        you have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but how can you control\nits
        speed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a slider in design mode.\\\r\n
        \   -   Make\n        sure you set the min and max values of the slider in
        design mode.\\\r\n-   Create\n    an event that will trigger when the slider
        value is changed.\\\r\n-   Add code\n    to get the slider value and store
        it into the `speed` variable when the event\n    is triggered."
      CSD U6 design motorcycle_2019: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat
        you have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but how can you control\nits
        speed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a slider in design mode.\\\r\n
        \   -   Make\n        sure you set the min and max values of the slider in
        design mode.\\\r\n-   Create\n    an event that will trigger when the slider
        value is changed.\\\r\n-   Add code\n    to get the slider value and store
        it into the `speed` variable when the event\n    is triggered."
      CSD U6 emoji race demo: "# Emoji Race!\\\r\n\n\\\r\nThis is\nan example of a
        race game that you'll build by the end of this lesson. To\nplay, pair up with
        another student. The student on the left will the click\nthe left button on
        the Circuit Playground as fast as they can, while the student\non the right
        clicks the right button. Whoever can get their emoji to the bottom\nof the
        screen first wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a classmate
        and\nmake a list of the following information.\\\r\n\\\r\n\n-   What components
        of the\n    board does this program use?\\\r\n-   What events is this program
        responding to?\\\r\n-   \\*\n    What functions might you create to make this
        program work?"
      CSD U6 emoji race demo_2018: "# Emoji Race!\\\r\n\n\\\r\nThis is\nan example
        of a race game that you'll build by the end of this lesson. To\nplay, pair
        up with another student. The student on the left will the click\nthe left
        button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get their emoji to the bottom\nof
        the screen first wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a classmate
        and\nmake a list of the following information.\\\r\n\\\r\n\n-   What components
        of the\n    board does this program use?\\\r\n-   What events is this program
        responding to?\\\r\n-   \\*\n    What functions might you create to make this
        program work?"
      CSD U6 emoji race demo_2019: "# Emoji Race!\\\r\n\n\\\r\nThis is\nan example
        of a race game that you'll build by the end of this lesson. To\nplay, pair
        up with another student. The student on the left will the click\nthe left
        button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get their emoji to the bottom\nof
        the screen first wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a classmate
        and\nmake a list of the following information.\\\r\n\\\r\n\n-   What components
        of the\n    board does this program use?\\\r\n-   What events is this program
        responding to?\\\r\n-   \\*\n    What functions might you create to make this
        program work?"
      CSD U6 emotion machine 1: "# Changing Images\\\r\n\n\\\r\nThe\nfirst thing you'll
        need your emotion machine to do is change to the appropriate\nimage when a
        button is clicked. If you look at the starting code, you'll\nsee that we already
        added `setProperty(\"face\", \"image\", \"icon://fa-smile-o\")`\nto change
        to a smiley face when you click happy.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/uploads/select_image.gif)\\\r\n\\\r\n</div>\\\r\n\\\r\nCreate\nan
        event handler for \"sad_button\" and make it change to a sad emoji.\\\r\n\\\r\n*\nDrag
        out an `onEvent` block and select \"sad_button\" from the id dropdown\\\r\n*\nAdd
        a `setProperty` block inside your new event handler\\\r\n* Use your `setProperty`\nblock
        to set \"image\" property of \"face\" to a sad emoji\\\r\n\\\r\n_Tip: when\nyou
        click the last dropdown in the `setProperty` block click \"Choose...\"\nto
        go to your media library. From there you can select an icon from our icon\nlibrary
        or upload an image of your own._"
      CSD U6 emotion machine 1_2018: "# Changing Images\\\r\n\n\\\r\nThe\nfirst thing
        you'll need your emotion machine to do is change to the appropriate\nimage
        when a button is clicked. If you look at the starting code, you'll\nsee that
        we already added `setProperty(\"face\", \"image\", \"icon://fa-smile-o\")`\nto
        change to a smiley face when you click happy.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/uploads/select_image.gif)\\\r\n\\\r\n</div>\\\r\n\\\r\nCreate\nan
        event handler for \"sad_button\" and make it change to a sad emoji.\\\r\n\\\r\n*\nDrag
        out an `onEvent` block and select \"sad_button\" from the id dropdown\\\r\n*\nAdd
        a `setProperty` block inside your new event handler\\\r\n* Use your `setProperty`\nblock
        to set \"image\" property of \"face\" to a sad emoji\\\r\n\\\r\n_Tip: when\nyou
        click the last dropdown in the `setProperty` block click \"Choose...\"\nto
        go to your media library. From there you can select an icon from our icon\nlibrary
        or upload an image of your own._"
      CSD U6 emotion machine 1_2019: "# Changing Images\\\r\n\n\\\r\nThe\nfirst thing
        you'll need your emotion machine to do is change to the appropriate\nimage
        when a button is clicked. If you look at the starting code, you'll\nsee that
        we already added `setProperty(\"face\", \"image\", \"icon://fa-smile-o\")`\nto
        change to a smiley face when you click happy.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/uploads/select_image.gif)\\\r\n\\\r\n</div>\\\r\n\\\r\nCreate\nan
        event handler for \"sad_button\" and make it change to a sad emoji.\\\r\n\\\r\n*\nDrag
        out an `onEvent` block and select \"sad_button\" from the id dropdown\\\r\n*\nAdd
        a `setProperty` block inside your new event handler\\\r\n* Use your `setProperty`\nblock
        to set \"image\" property of \"face\" to a sad emoji\\\r\n\\\r\n_Tip: when\nyou
        click the last dropdown in the `setProperty` block click \"Choose...\"\nto
        go to your media library. From there you can select an icon from our icon\nlibrary
        or upload an image of your own._"
      CSD U6 emotion machine 2: "# Changing Color\\\r\n\n\\\r\nIf\nyou look back at
        the example for this app, you should notice that not only\ndo the emojis change
        when you click a button, but their color changes as well.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nIn each of the event handlers, set the \"icon-color\" property\nof
        \"face\". Pick a warm color for happy and a cool color for sad."
      CSD U6 emotion machine 2_2018: "# Changing Color\\\r\n\n\\\r\nIf\nyou look back
        at the example for this app, you should notice that not only\ndo the emojis
        change when you click a button, but their color changes as well.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nIn each of the event handlers, set the \"icon-color\"
        property\nof \"face\". Pick a warm color for happy and a cool color for sad."
      CSD U6 emotion machine 2_2019: "# Changing Color\\\r\n\n\\\r\nIf\nyou look back
        at the example for this app, you should notice that not only\ndo the emojis
        change when you click a button, but their color changes as well.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nIn each of the event handlers, set the \"icon-color\"
        property\nof \"face\". Pick a warm color for happy and a cool color for sad."
      CSD U6 emotion machine 3: "# Setting Text\\\r\n\n\\\r\nYour\nhappy and sad buttons
        should be almost completely functional now. The only\nthing they still need
        to do is change the text at the bottom of the screen.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nMake each of the event handlers change the text of \"feeling\"\nto
        the appropriate emotion (either \"happy\" or \"sad\")"
      CSD U6 emotion machine 3_2018: "# Setting Text\\\r\n\n\\\r\nYour\nhappy and
        sad buttons should be almost completely functional now. The only\nthing they
        still need to do is change the text at the bottom of the screen.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nMake each of the event handlers change the text of
        \"feeling\"\nto the appropriate emotion (either \"happy\" or \"sad\")"
      CSD U6 emotion machine 3_2019: "# Setting Text\\\r\n\n\\\r\nYour\nhappy and
        sad buttons should be almost completely functional now. The only\nthing they
        still need to do is change the text at the bottom of the screen.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nMake each of the event handlers change the text of
        \"feeling\"\nto the appropriate emotion (either \"happy\" or \"sad\")"
      CSD U6 emotion machine 4: "# Add Another Emotion\\\r\n\n\\\r\nIn\nthe example
        app you saw earlier, you could set the emotion to happy, sad,\nor meh. Your
        app only has happy and sad, can you add a third emotion?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUsing all of the same techniques you used for the happy and\nsad
        buttons, create a third emotion button. You could stick with meh, or you\ncould
        pick an emotion of your own.\\\r\n\\\r\nWhen you're all done, feel free\nto
        add more emotions or features before submitting your final version."
      CSD U6 emotion machine 4_2018: "# Add Another Emotion\\\r\n\n\\\r\nIn\nthe example
        app you saw earlier, you could set the emotion to happy, sad,\nor meh. Your
        app only has happy and sad, can you add a third emotion?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUsing all of the same techniques you used for the happy and\nsad
        buttons, create a third emotion button. You could stick with meh, or you\ncould
        pick an emotion of your own.\\\r\n\\\r\nWhen you're all done, feel free\nto
        add more emotions or features before submitting your final version."
      CSD U6 emotion machine 4_2019: "# Add Another Emotion\\\r\n\n\\\r\nIn\nthe example
        app you saw earlier, you could set the emotion to happy, sad,\nor meh. Your
        app only has happy and sad, can you add a third emotion?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUsing all of the same techniques you used for the happy and\nsad
        buttons, create a third emotion button. You could stick with meh, or you\ncould
        pick an emotion of your own.\\\r\n\\\r\nWhen you're all done, feel free\nto
        add more emotions or features before submitting your final version."
      CSD U6 emotion machine example: "# The Emotion Machine\\\r\n\n\\\r\nCheck\nout
        this Emotion Machine app that you'll be building next. Try clicking on\nthe
        buttons to see how it works.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTry out the
        app,\nand then with a neighbor discuss:\\\r\n\\\r\n\n-   What events handlers
        does this\n    app use?\\\r\n-   Which elements are being changed with code?\\\r\n-
        \  Which properties\n    are being changed when you click a button?"
      CSD U6 emotion machine example_2018: "# The Emotion Machine\\\r\n\n\\\r\nCheck\nout
        this Emotion Machine app that you'll be building next. Try clicking on\nthe
        buttons to see how it works.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTry out the
        app,\nand then with a neighbor discuss:\\\r\n\\\r\n\n-   What events handlers
        does this\n    app use?\\\r\n-   Which elements are being changed with code?\\\r\n-
        \  Which properties\n    are being changed when you click a button?"
      CSD U6 emotion machine example_2019: "# The Emotion Machine\\\r\n\n\\\r\nCheck\nout
        this Emotion Machine app that you'll be building next. Try clicking on\nthe
        buttons to see how it works.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTry out the
        app,\nand then with a neighbor discuss:\\\r\n\\\r\n\n-   What events handlers
        does this\n    app use?\\\r\n-   Which elements are being changed with code?\\\r\n-
        \  Which properties\n    are being changed when you click a button?"
      CSD U6 frequency: "# Frequency\\\r\n\n\\\r\nThis buzzer controller\nhas been
        expanded to control frequency as well, but the code isn't finished\nyet.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Using the `duration` variable as a model, create\n    a
        `frequency` variable that gets the value from the _frequency_ slider.\\\r\n-
        \  \\*\n    Modify the line of code that makes the buzzer sound so that it
        uses the `frequency`\n    variable rather than the default frequency of `500`."
      CSD U6 frequency_2018: "# Frequency\\\r\n\n\\\r\nThis buzzer controller\nhas
        been expanded to control frequency as well, but the code isn't finished\nyet.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Using the `duration` variable as a model, create\n    a
        `frequency` variable that gets the value from the _frequency_ slider.\\\r\n-
        \  \\*\n    Modify the line of code that makes the buzzer sound so that it
        uses the `frequency`\n    variable rather than the default frequency of `500`."
      CSD U6 frequency_2019: "# Frequency\\\r\n\n\\\r\nThis buzzer controller\nhas
        been expanded to control frequency as well, but the code isn't finished\nyet.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Using the `duration` variable as a model, create\n    a
        `frequency` variable that gets the value from the _frequency_ slider.\\\r\n-
        \  \\*\n    Modify the line of code that makes the buzzer sound so that it
        uses the `frequency`\n    variable rather than the default frequency of `500`."
      CSD U6 game project board events: "# Board Events\\\r\n\n\\\r\nGo\nback to the
        Events section of your activity guide and find any events that\nrespond to
        your board (ones that would use `onBoardEvent()`). Create event\nhandlers
        for each of those now. If these events rely on functions you haven't\nwritten
        yet, just leave yourself a comment in the code."
      CSD U6 game project board events_2018: "# Board Events\\\r\n\n\\\r\nGo\nback
        to the Events section of your activity guide and find any events that\nrespond
        to your board (ones that would use `onBoardEvent()`). Create event\nhandlers
        for each of those now. If these events rely on functions you haven't\nwritten
        yet, just leave yourself a comment in the code."
      CSD U6 game project board events_2019: "# Board Events\\\r\n\n\\\r\nGo\nback
        to the Events section of your activity guide and find any events that\nrespond
        to your board (ones that would use `onBoardEvent()`). Create event\nhandlers
        for each of those now. If these events rely on functions you haven't\nwritten
        yet, just leave yourself a comment in the code."
      CSD U6 game project finish: "# Finishing Touches and Testing\\\r\n\n\\\r\nAt\nthis
        point you should have most of your program in place. Now you need to\nadd
        whatever finishing touches are needed and do a little testing. When your\napp
        is ready, have your classmates try it out. See if you can find any bugs,\nconfusing
        design choices, or missing features you'd like to work on.\\\r\n\\\r\nOnce\nyou're
        all done with this version of your program, click Submit to turn it\nin."
      CSD U6 game project finish_2018: "# Finishing Touches and Testing\\\r\n\n\\\r\nAt\nthis
        point you should have most of your program in place. Now you need to\nadd
        whatever finishing touches are needed and do a little testing. When your\napp
        is ready, have your classmates try it out. See if you can find any bugs,\nconfusing
        design choices, or missing features you'd like to work on.\\\r\n\\\r\nOnce\nyou're
        all done with this version of your program, click Submit to turn it\nin."
      CSD U6 game project finish_2019: "# Finishing Touches and Testing\\\r\n\n\\\r\nAt\nthis
        point you should have most of your program in place. Now you need to\nadd
        whatever finishing touches are needed and do a little testing. When your\napp
        is ready, have your classmates try it out. See if you can find any bugs,\nconfusing
        design choices, or missing features you'd like to work on.\\\r\n\\\r\nOnce\nyou're
        all done with this version of your program, click Submit to turn it\nin."
      CSD U6 game project functions call: "# Calling your Functions\\\r\n\n\\\r\nWith\nyour
        functions defined, you can can call them wherever you need. Go through\nyour
        event handlers, or anywhere else in your program that your function should\nbe
        used, and add calls to the function you created."
      CSD U6 game project functions call_2018: "# Calling your Functions\\\r\n\n\\\r\nWith\nyour
        functions defined, you can can call them wherever you need. Go through\nyour
        event handlers, or anywhere else in your program that your function should\nbe
        used, and add calls to the function you created."
      CSD U6 game project functions call_2019: "# Calling your Functions\\\r\n\n\\\r\nWith\nyour
        functions defined, you can can call them wherever you need. Go through\nyour
        event handlers, or anywhere else in your program that your function should\nbe
        used, and add calls to the function you created."
      CSD U6 game project functions define: "# Define Your Functions\\\r\n\n\\\r\nDefine\nall
        of your functions at the bottom of the program, under the comment `//\nCreate
        your functions here`.\\\r\n\\\r\nRight now we're only worrying about writing\nthe
        function _definitions_, the part which looks like:\\\r\n\\\r\n\n```\\\r\nfunction\nmyFunction()
        {\r\n\\t// Things my function does\r\n}\r\n```"
      CSD U6 game project functions define_2018: "# Define Your Functions\\\r\n\n\\\r\nDefine\nall
        of your functions at the bottom of the program, under the comment `//\nCreate
        your functions here`.\\\r\n\\\r\nRight now we're only worrying about writing\nthe
        function _definitions_, the part which looks like:\\\r\n\\\r\n\n```\\\r\nfunction\nmyFunction()
        {\r\n\\t// Things my function does\r\n}\r\n```"
      CSD U6 game project functions define_2019: "# Define Your Functions\\\r\n\n\\\r\nDefine\nall
        of your functions at the bottom of the program, under the comment `//\nCreate
        your functions here`.\\\r\n\\\r\nRight now we're only worrying about writing\nthe
        function _definitions_, the part which looks like:\\\r\n\\\r\n\n```\\\r\nfunction\nmyFunction()
        {\r\n\\t// Things my function does\r\n}\r\n```"
      CSD U6 game project screen links: "# UI Element Events\\\r\n\n\\\r\nNow\nthat
        all of your screens are designed, you can add any event handlers that\nwill
        respond to _screen interaction_. These should be listed in the \"Events\"\nsection
        of your activity guide. If you run into new events that you hadn't\nthought
        of in the planning stage, make sure you add them to your project guide.\\\r\n\\\r\nDon't\nworry
        about making these completely functional yet. If your events rely on\nboard
        elements or your own functions, we'll take care of that in later levels."
      CSD U6 game project screen links_2018: "# UI Element Events\\\r\n\n\\\r\nNow\nthat
        all of your screens are designed, you can add any event handlers that\nwill
        respond to _screen interaction_. These should be listed in the \"Events\"\nsection
        of your activity guide. If you run into new events that you hadn't\nthought
        of in the planning stage, make sure you add them to your project guide.\\\r\n\\\r\nDon't\nworry
        about making these completely functional yet. If your events rely on\nboard
        elements or your own functions, we'll take care of that in later levels."
      CSD U6 game project screen links_2019: "# UI Element Events\\\r\n\n\\\r\nNow\nthat
        all of your screens are designed, you can add any event handlers that\nwill
        respond to _screen interaction_. These should be listed in the \"Events\"\nsection
        of your activity guide. If you run into new events that you hadn't\nthought
        of in the planning stage, make sure you add them to your project guide.\\\r\n\\\r\nDon't\nworry
        about making these completely functional yet. If your events rely on\nboard
        elements or your own functions, we'll take care of that in later levels."
      CSD U6 game project screens: "# Create Your Screens\\\r\n\n\\\r\nThe\nfirst
        thing you'll need to do is create all of the screens that you've sketched\nin
        your planning guide.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUse Design Mode to
        create\nall of the screens that your program will need. Don't forget to **pick
        sensible\nIDs** for all of your design elements."
      CSD U6 game project screens_2018: "# Create Your Screens\\\r\n\n\\\r\nThe\nfirst
        thing you'll need to do is create all of the screens that you've sketched\nin
        your planning guide.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUse Design Mode to
        create\nall of the screens that your program will need. Don't forget to **pick
        sensible\nIDs** for all of your design elements."
      CSD U6 game project screens_2019: "# Create Your Screens\\\r\n\n\\\r\nThe\nfirst
        thing you'll need to do is create all of the screens that you've sketched\nin
        your planning guide.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUse Design Mode to
        create\nall of the screens that your program will need. Don't forget to **pick
        sensible\nIDs** for all of your design elements."
      CSD U6 get toggle: "# onChange\\\r\n\n\\\r\nThis program has\nevents that detect
        three different changes: the toggle switch, the interval\nslider, and the
        duration slider.  Because there are so many different things\nthat cause the
        LED and buzzer to reset, it uses functions to organize the\ncode.\\\r\n\\\r\n\n##
        Do This\\\r\n\n\\\r\n\n-   Read the `updateLED` function to see what\n    it
        does.\\\r\n-   Add code to `updateBuzzer` to make the buzzer only turn on
        when\n    the toggle switch is open."
      CSD U6 get toggle_2018: "# onChange\\\r\n\n\\\r\nThis program has\nevents that
        detect three different changes: the toggle switch, the interval\nslider, and
        the duration slider.  Because there are so many different things\nthat cause
        the LED and buzzer to reset, it uses functions to organize the\ncode.\\\r\n\\\r\n\n##
        Do This\\\r\n\n\\\r\n\n-   Read the `updateLED` function to see what\n    it
        does.\\\r\n-   Add code to `updateBuzzer` to make the buzzer only turn on
        when\n    the toggle switch is open."
      CSD U6 get toggle_2019: "# onChange\\\r\n\n\\\r\nThis program has\nevents that
        detect three different changes: the toggle switch, the interval\nslider, and
        the duration slider.  Because there are so many different things\nthat cause
        the LED and buzzer to reset, it uses functions to organize the\ncode.\\\r\n\\\r\n\n##
        Do This\\\r\n\n\\\r\n\n-   Read the `updateLED` function to see what\n    it
        does.\\\r\n-   Add code to `updateBuzzer` to make the buzzer only turn on
        when\n    the toggle switch is open."
      CSD U6 getProperty Demo: "# Updating Properties\\\r\n\n\\\r\nHere's\nan example
        of an app that uses both `getProperty` and `setProperty` to update\nelements
        on the screen. Read through the code, and then test it out by filling\nout
        the input fields and clicking \"Save\"\\\r\n\\\r\n_Note: you don't need to\nchange
        any code here, but read through the provided code to see how it works._"
      CSD U6 getProperty Demo_2018: "# Updating Properties\\\r\n\n\\\r\nHere's\nan
        example of an app that uses both `getProperty` and `setProperty` to update\nelements
        on the screen. Read through the code, and then test it out by filling\nout
        the input fields and clicking \"Save\"\\\r\n\\\r\n_Note: you don't need to\nchange
        any code here, but read through the provided code to see how it works._"
      CSD U6 getProperty Demo_2019: "# Updating Properties\\\r\n\n\\\r\nHere's\nan
        example of an app that uses both `getProperty` and `setProperty` to update\nelements
        on the screen. Read through the code, and then test it out by filling\nout
        the input fields and clicking \"Save\"\\\r\n\\\r\n_Note: you don't need to\nchange
        any code here, but read through the provided code to see how it works._"
      CSD U6 getProperty Text Input: "# Getting Text\\\r\n\n\\\r\nThe\n`getProperty()`
        block makes it easy to take text input from a user. In this\napp, the user
        can type in their name, click \"Submit,\" and see their name\nbelow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Drag out a `setProperty` block\\\r\n-   For the\n
        \   first parameter, select \"name\" (the element's id)\\\r\n-   For the second
        parameter,\n    select \"text\" (the property you want to set)\\\r\n-   For
        the third parameter,\n    write your name in quotes (the value to set)\\\r\n
        \   \\\r\n    _Note: We've removed\n    the Design Mode tab for now so you
        can practice working with `setProperty`,\n    but it'll come back later once
        you're building apps of your own._"
      CSD U6 getProperty buzzer: "# Using the Circuit Playground\\\r\n\n\\\r\nHere's\nthe
        same code you saw in the last level, but this time there's another dropdown\nmenu
        to control the buzzer.  You'll have to add the code to make it work.\\\r\n\\\r\n\n##
        \n\nDo This\\\r\n\n-   Using the LED code as a model, add new code inside
        the buttonL\n    event that will play a long or short buzz according to the
        text property of\n    the *buzzer\\_input* dropdown menu.\\\r\n-   Add new
        code that will turn the buzzer\n    off when the right button is pressed.\\\r\n
        \   -   (Hint: the event is already in\n        the code.)\\\r\n        \\\r"
      CSD U6 getProperty buzzer_2018: "# Using the Circuit Playground\\\r\n\n\\\r\nHere's\nthe
        same code you saw in the last level, but this time there's another dropdown\nmenu
        to control the buzzer.  You'll have to add the code to make it work.\\\r\n\\\r\n\n##
        \n\nDo This\\\r\n\n-   Using the LED code as a model, add new code inside
        the buttonL\n    event that will play a long or short buzz according to the
        text property of\n    the *buzzer\\_input* dropdown menu.\\\r\n-   Add new
        code that will turn the buzzer\n    off when the right button is pressed.\\\r\n
        \   -   (Hint: the event is already in\n        the code.)\\\r\n        \\\r"
      CSD U6 getProperty buzzer_2019: "# Using the Circuit Playground\\\r\n\n\\\r\nHere's\nthe
        same code you saw in the last level, but this time there's another dropdown\nmenu
        to control the buzzer.  You'll have to add the code to make it work.\\\r\n\\\r\n\n##
        \n\nDo This\\\r\n\n-   Using the LED code as a model, add new code inside
        the buttonL\n    event that will play a long or short buzz according to the
        text property of\n    the *buzzer\\_input* dropdown menu.\\\r\n-   Add new
        code that will turn the buzzer\n    off when the right button is pressed.\\\r\n
        \   -   (Hint: the event is already in\n        the code.)\\\r\n        \\\r"
      CSD U6 getProperty debug: "# Debug\\\r\n\n\\\r\nThis program\nshould change
        the background color, text color, and text of the button \"click\\_me\"\nwhen
        it is clicked, but nothing seems to be working. Fix the code so that\nthe
        program works as expected."
      CSD U6 getProperty dropdown: "# Dropdowns\\\r\n\n\\\r\nText\nInputs are nice
        when you want users to be able to enter _anything_ they want,\nbut often you
        want to restrict them to just a few choices. For example, if\nyou want your
        user to pick a color, you probably want to make sure they can\nonly choose
        colors that will actually work.\\\r\n\\\r\nThe provided dropdown with\nthe
        ID \"color\\_input\" allows a use to choose from a handful of background\ncolors.
        When the \"Set Color\" button is clicked, the screen will turn that\ncolor.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Inside the event block, create a variable\n    called
        `color` and assign it a value using the `getProperty` block\\\r\n-   Use\n
        \   the `setProperty` block to set the \"background-color\" property of \"screen1\"\n
        \   to your variable `color`\\\r\n-   Test your program by picking a color
        and clicking\n    \"Set Color\""
      CSD U6 getProperty dropdown_2018: "# Dropdowns\\\r\n\n\\\r\nText\nInputs are
        nice when you want users to be able to enter _anything_ they want,\nbut often
        you want to restrict them to just a few choices. For example, if\nyou want
        your user to pick a color, you probably want to make sure they can\nonly choose
        colors that will actually work.\\\r\n\\\r\nThe provided dropdown with\nthe
        ID \"color\\_input\" allows a use to choose from a handful of background\ncolors.
        When the \"Set Color\" button is clicked, the screen will turn that\ncolor.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Inside the event block, create a variable\n    called
        `color` and assign it a value using the `getProperty` block\\\r\n-   Use\n
        \   the `setProperty` block to set the \"background-color\" property of \"screen1\"\n
        \   to your variable `color`\\\r\n-   Test your program by picking a color
        and clicking\n    \"Set Color\""
      CSD U6 getProperty dropdown_2019: "# Dropdowns\\\r\n\n\\\r\nText\nInputs are
        nice when you want users to be able to enter _anything_ they want,\nbut often
        you want to restrict them to just a few choices. For example, if\nyou want
        your user to pick a color, you probably want to make sure they can\nonly choose
        colors that will actually work.\\\r\n\\\r\nThe provided dropdown with\nthe
        ID \"color\\_input\" allows a use to choose from a handful of background\ncolors.
        When the \"Set Color\" button is clicked, the screen will turn that\ncolor.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Inside the event block, create a variable\n    called
        `color` and assign it a value using the `getProperty` block\\\r\n-   Use\n
        \   the `setProperty` block to set the \"background-color\" property of \"screen1\"\n
        \   to your variable `color`\\\r\n-   Test your program by picking a color
        and clicking\n    \"Set Color\""
      CSD U6 getProperty input: "# getProperty and Variables\\\r\n\n\\\r\nYou\nmight
        have noticed in the last level that we used a _variable_ to store the\nvalues
        collected with `getProperty()`. Using variables in this way allows\nus to
        both get the properties of design elements and to use those values later\non.\\\r\n\\\r\nThis
        program gets the text typed into \"name_input\" when the Submit\nbutton is
        clicked, and then use that to set the text property of \"name_output\".\nIt
        does this by storing the text in a variable called `name`.  It should do\nthe
        same for *fiend\\_input* and *friend\\_output*, but it's not finished.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Run the program to see how it works. (Make sure you
        type in your\n    name and your friend's name before hitting \"Submit\".)\\\r\n-
        \  Using the variable\n    `name` as a model, create a new variable to hold
        the friend's name.\\\r\n-   \\*\n    Use a `getProperty` block to store the
        text property of *friend\\_input* into\n    your new variable.\\\r\n-   Use
        the `setProperty` block to assign the new variable\n    to the text property
        of *friend\\_input*."
      CSD U6 getProperty input_2018: "# getProperty and Variables\\\r\n\n\\\r\nYou\nmight
        have noticed in the last level that we used a _variable_ to store the\nvalues
        collected with `getProperty()`. Using variables in this way allows\nus to
        both get the properties of design elements and to use those values later\non.\\\r\n\\\r\nThis
        program gets the text typed into \"name_input\" when the Submit\nbutton is
        clicked, and then use that to set the text property of \"name_output\".\nIt
        does this by storing the text in a variable called `name`.  It should do\nthe
        same for *fiend\\_input* and *friend\\_output*, but it's not finished.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Run the program to see how it works. (Make sure you
        type in your\n    name and your friend's name before hitting \"Submit\".)\\\r\n-
        \  Using the variable\n    `name` as a model, create a new variable to hold
        the friend's name.\\\r\n-   \\*\n    Use a `getProperty` block to store the
        text property of *friend\\_input* into\n    your new variable.\\\r\n-   Use
        the `setProperty` block to assign the new variable\n    to the text property
        of *friend\\_input*."
      CSD U6 getProperty input_2019: "# getProperty and Variables\\\r\n\n\\\r\nYou\nmight
        have noticed in the last level that we used a _variable_ to store the\nvalues
        collected with `getProperty()`. Using variables in this way allows\nus to
        both get the properties of design elements and to use those values later\non.\\\r\n\\\r\nThis
        program gets the text typed into \"name_input\" when the Submit\nbutton is
        clicked, and then use that to set the text property of \"name_output\".\nIt
        does this by storing the text in a variable called `name`.  It should do\nthe
        same for *fiend\\_input* and *friend\\_output*, but it's not finished.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Run the program to see how it works. (Make sure you
        type in your\n    name and your friend's name before hitting \"Submit\".)\\\r\n-
        \  Using the variable\n    `name` as a model, create a new variable to hold
        the friend's name.\\\r\n-   \\*\n    Use a `getProperty` block to store the
        text property of *friend\\_input* into\n    your new variable.\\\r\n-   Use
        the `setProperty` block to assign the new variable\n    to the text property
        of *friend\\_input*."
      CSD U6 getProperty predict: "# Debug\\\r\n\n\\\r\nThis program\nshould change
        the background color, text color, and text of the button \"click\\_me\"\nwhen
        it is clicked, but nothing seems to be working. Fix the code so that\nthe
        program works as expected."
      CSD U6 getProperty var: "# getProperty and Variables\\\r\n\n\\\r\nYou\nmight
        have noticed in the last level that we used a _variable_ to store the\nvalues
        collected with `getProperty()`. Using variables in this way allows\nus to
        both get the properties of design elements and to use those values later\non.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis program should get the text typed into \"name_input\"\nwhen
        the Submit button is clicked, and then use that to set the text property\nof
        \"name_output\". It does this by storing the text in a variable called\n`name`,
        but it's not finished.\\\r\n\\\r\nUsing a `getProperty` block, assign\nthe
        `name` variable to the text property of \"name\\_input\". Test your program\nby
        typing in your name and clicking \"Submit.\""
      CSD U6 getProperty xy challenge: "# Challenge: Make it\n\nYour Own\\\r\n\\\r\nUse
        this program to experiment some more with getting and\nsetting properties.
        Some ideas you might try include:\\\r\n\\\r\n\n-   Add a button\n    that
        returns the motorcycle to the center of the screen\\\r\n-   Add buttons that\n
        \   move the motorcycle in two directions at once (eg up and right)\\\r\n-
        \  Use a\n    dropdown with color names to change the motorcycle's color\\\r\n-
        \  Use a text\n    input to control how much the motorcycle moves when you
        click the button"
      CSD U6 getProperty xy design: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat
        you have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but what about left\nand right?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nAdd two more buttons in design move for\nleft and right,
        then program those buttons to move the motorcycle when clicked."
      CSD U6 getProperty xy: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nThis program includes two buttons to move the motorcycle
        up\nand down. Using the working \"up\" button as an example, can you make
        the\n\"down\" button work?"
      CSD U6 getters debug: "# LED and Buzzer Controller\\\r\n\n\\\r\nThis\nprogram
        operates the LED and the buzzer, but it has some problems.\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Read the program to understand how it is supposed to
        work.\\\r\n-   \\*\n    Find and correct the bugs so that the program works
        properly."
      CSD U6 getters debug_2018: "# LED and Buzzer Controller\\\r\n\n\\\r\nThis\nprogram
        operates the LED and the buzzer, but it has some problems.\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Read the program to understand how it is supposed to
        work.\\\r\n-   \\*\n    Find and correct the bugs so that the program works
        properly."
      CSD U6 getters debug_2019: "# LED and Buzzer Controller\\\r\n\n\\\r\nThis\nprogram
        operates the LED and the buzzer, but it has some problems.\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Read the program to understand how it is supposed to
        work.\\\r\n-   \\*\n    Find and correct the bugs so that the program works
        properly."
      CSD U6 interval predict: "# Interval\\\r\n\n\\\r\nNow we're\nusing the slider
        to affect the behavior of the LED.   Just as we could change\nthe values for
        the frequency and duration of the buzzer, we can change the\nvalue for the
        blink or pulse interval of the LED.\\\r\n\\\r\n\n## Do This\\\r\n\n\\\r\n\\*\nRead
        the code and predict what the program will do, then hit \"Run\" to test\nyour
        prediction."
      CSD U6 interval predict_2018: "# Interval\\\r\n\n\\\r\nNow we're\nusing the
        slider to affect the behavior of the LED.   Just as we could change\nthe values
        for the frequency and duration of the buzzer, we can change the\nvalue for
        the blink or pulse interval of the LED.\\\r\n\\\r\n\n## Do This\\\r\n\n\\\r\n\\*\nRead
        the code and predict what the program will do, then hit \"Run\" to test\nyour
        prediction."
      CSD U6 interval predict_2019: "# Interval\\\r\n\n\\\r\nNow we're\nusing the
        slider to affect the behavior of the LED.   Just as we could change\nthe values
        for the frequency and duration of the buzzer, we can change the\nvalue for
        the blink or pulse interval of the LED.\\\r\n\\\r\n\n## Do This\\\r\n\n\\\r\n\\*\nRead
        the code and predict what the program will do, then hit \"Run\" to test\nyour
        prediction."
      CSD U6 iter predict bubbles: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 light pattern challenge: "# Challenge: More Patterns\\\r\n\n\\\r\nAdd\nsome
        more patterns to your app. Find a partner and add their pattern as an\noption.
        Make sure to put each pattern into its own function."
      CSD U6 light pattern challenge_2018: "# Challenge: More Patterns\\\r\n\n\\\r\nAdd\nsome
        more patterns to your app. Find a partner and add their pattern as an\noption.
        Make sure to put each pattern into its own function."
      CSD U6 light pattern challenge_2019: "# Challenge: More Patterns\\\r\n\n\\\r\nAdd\nsome
        more patterns to your app. Find a partner and add their pattern as an\noption.
        Make sure to put each pattern into its own function."
      CSD U6 light show predict: "# Créé un jeu de lumières\\\r\n\n\\\r\nCette application
        te permet de faire un jeu de lumières avec la LED.\\\r\n\\\r\nExamine le code
        avec ton binôme et répond à la question suivante:\\\r\n\\\r\n\n-   À quoi
        sert cette ligne de code: `setProperty(\"screen\", \"background-color\", rgb(randomNumber(0,255),
        randomNumber(0,255), randomNumber(0,255)));`?\\\r\n    \\\r\n    Une fois
        que vous avez répondu à la question, démarre le code et appuie sur les boutons
        pour voir ce qui se passe."
      CSD U6 light show predict_2018: "# Créé un jeu de lumières\\\r\n\n\\\r\nCette
        application te permet de faire un jeu de lumières avec la LED.\\\r\n\\\r\nExamine
        le code avec ton binôme et répond à la question suivante:\\\r\n\\\r\n\n-   À
        quoi sert cette ligne de code: `setProperty(\"screen\", \"background-color\",
        rgb(randomNumber(0,255), randomNumber(0,255), randomNumber(0,255)));`?\\\r\n
        \   \\\r\n    Une fois que vous avez répondu à la question, démarre le code
        et appuie sur les boutons pour voir ce qui se passe."
      CSD U6 light show predict_2019: "# Créé un jeu de lumières\\\r\n\n\\\r\nCette
        application te permet de faire un jeu de lumières avec la LED.\\\r\n\\\r\nExamine
        le code avec ton binôme et répond à la question suivante:\\\r\n\\\r\n\n-   À
        quoi sert cette ligne de code: `setProperty(\"screen\", \"background-color\",
        rgb(randomNumber(0,255), randomNumber(0,255), randomNumber(0,255)));`?\\\r\n
        \   \\\r\n    Une fois que vous avez répondu à la question, démarre le code
        et appuie sur les boutons pour voir ce qui se passe."
      CSD U6 move motorcycle: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Read the program and discuss with your partner
        how the left\n    button makes the motorcycle go up.\\\r\n-   Using the working
        left button as an\n    example, program the right button to make the motorcycle
        go down."
      CSD U6 move motorcycle_2018: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Read the program and discuss with your partner
        how the left\n    button makes the motorcycle go up.\\\r\n-   Using the working
        left button as an\n    example, program the right button to make the motorcycle
        go down."
      CSD U6 move motorcycle_2019: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Read the program and discuss with your partner
        how the left\n    button makes the motorcycle go up.\\\r\n-   Using the working
        left button as an\n    example, program the right button to make the motorcycle
        go down."
      CSD U6 onChange: "# onChange\\\r\n\n\\\r\nIn the last level,\nthe program only
        got the interval value from the slider when you pressed the\nleft button.
        \ Sometime, though, you'll want to change the interval of the\nLED as soon
        as the user chooses a new value.   For that, you'll need the\n\"onChange\"
        event.\\\r\n\\\r\n\n## Do This\\\r\n\n\\\r\n\n-   Look at the first event
        block\n    in the program and find where it says \"onChange\".\\\r\n-   Inside
        the event\n    block, get the interval value from the slider and use it to
        make the LED blink\n    at that new rate.\\\r\n-   Run your program, moving
        the slider to see whether\n    the LED speed changes automatically."
      CSD U6 params starchaser template: Niveau modèle.
      CSD U6 params starchaser template_2018: Niveau modèle.
      CSD U6 params starchaser template_2019: Niveau modèle.
      CSD U6 setProperty Text: "# Changing the Text\\\r\n\n\\\r\nThe\n`setProperty`
        block can be used to changed lots of things about your design\nelements, including
        the text they contain.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Drag\n    out
        a `setProperty` block\\\r\n-   For the first parameter, select \"name\" (the\n
        \   element's id)\\\r\n-   For the second parameter, select \"text\" (the
        property\n    you want to set)\\\r\n-   For the third parameter, write your
        name in quotes (the\n    value to set)\\\r\n    \\\r\n    _Note: We've removed
        the Design Mode tab for now so\n    you can practice working with `setProperty`,
        but it'll come back later once\n    you're building apps of your own._"
      CSD U6 setProperty Text_2018: "# Changing the Text\\\r\n\n\\\r\nThe\n`setProperty`
        block can be used to changed lots of things about your design\nelements, including
        the text they contain.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Drag\n    out
        a `setProperty` block\\\r\n-   For the first parameter, select \"name\" (the\n
        \   element's id)\\\r\n-   For the second parameter, select \"text\" (the
        property\n    you want to set)\\\r\n-   For the third parameter, write your
        name in quotes (the\n    value to set)\\\r\n    \\\r\n    _Note: We've removed
        the Design Mode tab for now so\n    you can practice working with `setProperty`,
        but it'll come back later once\n    you're building apps of your own._"
      CSD U6 setProperty Text_2019: "# Changing the Text\\\r\n\n\\\r\nThe\n`setProperty`
        block can be used to changed lots of things about your design\nelements, including
        the text they contain.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Drag\n    out
        a `setProperty` block\\\r\n-   For the first parameter, select \"name\" (the\n
        \   element's id)\\\r\n-   For the second parameter, select \"text\" (the
        property\n    you want to set)\\\r\n-   For the third parameter, write your
        name in quotes (the\n    value to set)\\\r\n    \\\r\n    _Note: We've removed
        the Design Mode tab for now so\n    you can practice working with `setProperty`,
        but it'll come back later once\n    you're building apps of your own._"
      CSD U6 setProperty hidden 2: "# Showing/Hiding\\\r\n\n\\\r\nThis\nalarm app
        isn't super useful if you can't turn the alarm off once it's\nbeen triggered.
        Let's fix that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd a second `onEvent`\nblock
        to watch for the \"stopAlarmButton\" to be clicked. Inside that block:\\\r\n\\\r\n\\*\nChange
        the status text to \"OFF\"\\\r\n\n-   Hide the \"stopAlarmButton\"\\\r\n    \\\r\n
        \   _Hint:\n    \"hidden\" is a boolean property. If we used `false` to make
        the button show\n    up, what should you use to make it hidden again?_"
      CSD U6 setProperty hidden 2_2018: "# Showing/Hiding\\\r\n\n\\\r\nThis\nalarm
        app isn't super useful if you can't turn the alarm off once it's\nbeen triggered.
        Let's fix that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd a second `onEvent`\nblock
        to watch for the \"stopAlarmButton\" to be clicked. Inside that block:\\\r\n\\\r\n\\*\nChange
        the status text to \"OFF\"\\\r\n\n-   Hide the \"stopAlarmButton\"\\\r\n    \\\r\n
        \   _Hint:\n    \"hidden\" is a boolean property. If we used `false` to make
        the button show\n    up, what should you use to make it hidden again?_"
      CSD U6 setProperty hidden 2_2019: "# Showing/Hiding\\\r\n\n\\\r\nThis\nalarm
        app isn't super useful if you can't turn the alarm off once it's\nbeen triggered.
        Let's fix that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd a second `onEvent`\nblock
        to watch for the \"stopAlarmButton\" to be clicked. Inside that block:\\\r\n\\\r\n\\*\nChange
        the status text to \"OFF\"\\\r\n\n-   Hide the \"stopAlarmButton\"\\\r\n    \\\r\n
        \   _Hint:\n    \"hidden\" is a boolean property. If we used `false` to make
        the button show\n    up, what should you use to make it hidden again?_"
      CSD U6 setProperty hidden: "# Hidden\\\r\n\n\\\r\nWe are going\nto start making
        an alarm app. We have already set up an event handler for\nthe \"triggerAlarmButton\"
        which will do two things when clicked:\\\r\n\\\r\n\\*\nChange the _text_ property
        of \"statusLabel\" to \"on\"\\\r\n\n-   Set the _hidden_\n    property of
        \"stopAlarmButton\" to `false`\\\r\n    \\\r\n    # Do This\\\r\n    \\\r\n-
        \  Run the\n    program and click \"Trigger Alarm\" to see how it works\\\r\n-
        \  Add code to the\n    provided event handler that hides the \"triggerAlarmButton\"\\\r\n
        \   \\\r\n    _Note:\n    the button \"stopAlarmButton\" is already on the
        screen, but because its \"hidden\"\n    property is marked true, it isn't
        shown when the program starts._"
      CSD U6 setProperty hidden_2018: "# Hidden\\\r\n\n\\\r\nWe are going\nto start
        making an alarm app. We have already set up an event handler for\nthe \"triggerAlarmButton\"
        which will do two things when clicked:\\\r\n\\\r\n\\*\nChange the _text_ property
        of \"statusLabel\" to \"on\"\\\r\n\n-   Set the _hidden_\n    property of
        \"stopAlarmButton\" to `false`\\\r\n    \\\r\n    # Do This\\\r\n    \\\r\n-
        \  Run the\n    program and click \"Trigger Alarm\" to see how it works\\\r\n-
        \  Add code to the\n    provided event handler that hides the \"triggerAlarmButton\"\\\r\n
        \   \\\r\n    _Note:\n    the button \"stopAlarmButton\" is already on the
        screen, but because its \"hidden\"\n    property is marked true, it isn't
        shown when the program starts._"
      CSD U6 setProperty hidden_2019: "# Hidden\\\r\n\n\\\r\nWe are going\nto start
        making an alarm app. We have already set up an event handler for\nthe \"triggerAlarmButton\"
        which will do two things when clicked:\\\r\n\\\r\n\\*\nChange the _text_ property
        of \"statusLabel\" to \"on\"\\\r\n\n-   Set the _hidden_\n    property of
        \"stopAlarmButton\" to `false`\\\r\n    \\\r\n    # Do This\\\r\n    \\\r\n-
        \  Run the\n    program and click \"Trigger Alarm\" to see how it works\\\r\n-
        \  Add code to the\n    provided event handler that hides the \"triggerAlarmButton\"\\\r\n
        \   \\\r\n    _Note:\n    the button \"stopAlarmButton\" is already on the
        screen, but because its \"hidden\"\n    property is marked true, it isn't
        shown when the program starts._"
      CSD U6 setProperty xy click: "# Changing With a Click\\\r\n\n\\\r\nIt's\nnot
        really useful to only set a property when your program is run. After all,\nyou
        could just do all of that in Design Mode. When you use an `onEvent` block\nwith
        `setProperty`, you're able to do things you couldn't do with Design\nMode
        alone.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nWe've provided an empty `onEvent`
        block\nthat's watching the \"smiley\" image. Inside the `onEvent` block, use
        two\n`setProperty` blocks to move the smiley somewhere else (it doesn't really\nmatter
        where for now). Test your program by running it and clicking on the\nsmiley."
      CSD U6 setProperty xy click_2018: "# Changing With a Click\\\r\n\n\\\r\nIt's\nnot
        really useful to only set a property when your program is run. After all,\nyou
        could just do all of that in Design Mode. When you use an `onEvent` block\nwith
        `setProperty`, you're able to do things you couldn't do with Design\nMode
        alone.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nWe've provided an empty `onEvent`
        block\nthat's watching the \"smiley\" image. Inside the `onEvent` block, use
        two\n`setProperty` blocks to move the smiley somewhere else (it doesn't really\nmatter
        where for now). Test your program by running it and clicking on the\nsmiley."
      CSD U6 setProperty xy click_2019: "# Changing With a Click\\\r\n\n\\\r\nIt's\nnot
        really useful to only set a property when your program is run. After all,\nyou
        could just do all of that in Design Mode. When you use an `onEvent` block\nwith
        `setProperty`, you're able to do things you couldn't do with Design\nMode
        alone.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nWe've provided an empty `onEvent`
        block\nthat's watching the \"smiley\" image. Inside the `onEvent` block, use
        two\n`setProperty` blocks to move the smiley somewhere else (it doesn't really\nmatter
        where for now). Test your program by running it and clicking on the\nsmiley."
      CSD U6 setProperty xy random: "<img src=\"https://images.code.org/67c6cc358b235e2c2ae39f3f72a3e0b1-image-1507326303839.gif\"\nstyle=\"float:right;
        max-width: 150px; margin: 10px;\">\\\r\n\\\r\n\n# Randomization\\\r\n\n\\\r\nMoving\non
        the first click is fine, but this smiley would be even cooler if it moved\nsomewhere
        new _every time_ we clicked. Fortunately, we can use the `randomNumber`\nblock
        to do just that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInstead of setting the
        \"x\"\nand \"y\" properties to a specific number, use the `randomNumber` block
        to\npick a new random \"x\" and \"y\" each time the smiley is clicked.\\\r\n\\\r\n_Tip:\nThe
        App Lab screen is 320 pixels wide by 450 pixels tall. What range of random\nnumbers
        will ensure that the smiley is always visible on screen?_\\\r"
      CSD U6 setProperty xy random_2018: "<img src=\"https://images.code.org/67c6cc358b235e2c2ae39f3f72a3e0b1-image-1507326303839.gif\"\nstyle=\"float:right;
        max-width: 150px; margin: 10px;\">\\\r\n\\\r\n\n# Randomization\\\r\n\n\\\r\nMoving\non
        the first click is fine, but this smiley would be even cooler if it moved\nsomewhere
        new _every time_ we clicked. Fortunately, we can use the `randomNumber`\nblock
        to do just that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInstead of setting the
        \"x\"\nand \"y\" properties to a specific number, use the `randomNumber` block
        to\npick a new random \"x\" and \"y\" each time the smiley is clicked.\\\r\n\\\r\n_Tip:\nThe
        App Lab screen is 320 pixels wide by 450 pixels tall. What range of random\nnumbers
        will ensure that the smiley is always visible on screen?_\\\r"
      CSD U6 setProperty xy random_2019: "<img src=\"https://images.code.org/67c6cc358b235e2c2ae39f3f72a3e0b1-image-1507326303839.gif\"\nstyle=\"float:right;
        max-width: 150px; margin: 10px;\">\\\r\n\\\r\n\n# Randomization\\\r\n\n\\\r\nMoving\non
        the first click is fine, but this smiley would be even cooler if it moved\nsomewhere
        new _every time_ we clicked. Fortunately, we can use the `randomNumber`\nblock
        to do just that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInstead of setting the
        \"x\"\nand \"y\" properties to a specific number, use the `randomNumber` block
        to\npick a new random \"x\" and \"y\" each time the smiley is clicked.\\\r\n\\\r\n_Tip:\nThe
        App Lab screen is 320 pixels wide by 450 pixels tall. What range of random\nnumbers
        will ensure that the smiley is always visible on screen?_\\\r"
      CSD U6 setProperty xy: "# Changing Position\\\r\n\n\\\r\nEvery\ndesign element
        (except for the screen) has an \"x\" and a \"y\" property that\ncontrols its
        position.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div markdown=\"1\" style=\"float:right\">\\\r\n\\\r\n![expandable](https://images.code.org/e5c325d8105a0cf7cf681d6eab898595-image-1507319516043.png)\\\r\n\\\r\n</div>\\\r\n\\\r\nUsing\nthe
        `setProperty` block, move \"red_button\" so that it matches the image\nto
        the right.\\\r\n\\\r\n_Note: We've removed the Design Mode tab for now so\nyou
        can practice working with setProperty, but it'll come back later once\nyou're
        building apps of your own._"
      CSD U6 setProperty xy_2018: "# Changing Position\\\r\n\n\\\r\nEvery\ndesign
        element (except for the screen) has an \"x\" and a \"y\" property that\ncontrols
        its position.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div markdown=\"1\" style=\"float:right\">\\\r\n\\\r\n![expandable](https://images.code.org/e5c325d8105a0cf7cf681d6eab898595-image-1507319516043.png)\\\r\n\\\r\n</div>\\\r\n\\\r\nUsing\nthe
        `setProperty` block, move \"red_button\" so that it matches the image\nto
        the right.\\\r\n\\\r\n_Note: We've removed the Design Mode tab for now so\nyou
        can practice working with setProperty, but it'll come back later once\nyou're
        building apps of your own._"
      CSD U6 setProperty xy_2019: "# Changing Position\\\r\n\n\\\r\nEvery\ndesign
        element (except for the screen) has an \"x\" and a \"y\" property that\ncontrols
        its position.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div markdown=\"1\" style=\"float:right\">\\\r\n\\\r\n![expandable](https://images.code.org/e5c325d8105a0cf7cf681d6eab898595-image-1507319516043.png)\\\r\n\\\r\n</div>\\\r\n\\\r\nUsing\nthe
        `setProperty` block, move \"red_button\" so that it matches the image\nto
        the right.\\\r\n\\\r\n_Note: We've removed the Design Mode tab for now so\nyou
        can practice working with setProperty, but it'll come back later once\nyou're
        building apps of your own._"
      CSD U6 slider intro: "# Sliders\\\r\n\n\\\r\nLast time, your\nusers were only
        able to choose between a short and long buzz.  To give the\nuser control over
        the exact duration of the buzzer, you'll want to use a\nslider.\\\r\n\\\r\nThis
        slider lets users choose a value between 100 and 1000\nfor the duration of
        the buzz, but there's something not quite right about\nhow it's working.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Look over the code and find the\n    bug that's keeping
        the duration from being set correctly.\\\r\n    \\\\t\\* (Hint: Hover\n    over
        the yellow triangles for clues as to what might be wrong with the code.)"
      CSD U6 slider intro_2018: "# Sliders\\\r\n\n\\\r\nLast time, your\nusers were
        only able to choose between a short and long buzz.  To give the\nuser control
        over the exact duration of the buzzer, you'll want to use a\nslider.\\\r\n\\\r\nThis
        slider lets users choose a value between 100 and 1000\nfor the duration of
        the buzz, but there's something not quite right about\nhow it's working.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Look over the code and find the\n    bug that's keeping
        the duration from being set correctly.\\\r\n    \\\\t\\* (Hint: Hover\n    over
        the yellow triangles for clues as to what might be wrong with the code.)"
      CSD U6 slider intro_2019: "# Sliders\\\r\n\n\\\r\nLast time, your\nusers were
        only able to choose between a short and long buzz.  To give the\nuser control
        over the exact duration of the buzzer, you'll want to use a\nslider.\\\r\n\\\r\nThis
        slider lets users choose a value between 100 and 1000\nfor the duration of
        the buzz, but there's something not quite right about\nhow it's working.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Look over the code and find the\n    bug that's keeping
        the duration from being set correctly.\\\r\n    \\\\t\\* (Hint: Hover\n    over
        the yellow triangles for clues as to what might be wrong with the code.)"
      CSD U6 test LED: "# Prenez le contrôle de la LED\\\r\n\n\\\r\nMaintenant que
        vous savez que le circuit est opérationnel, vous pouvez utiliser les différents
        blocs LED\\\r\n\\\r\n\n# \n\nExpérimentez ceci :\\\r\n\n-   Cliquez \"Démarrer\"
        et discuter avec votre partenaire comment le code fonctionne.\\\r\n-   Essayez
        les différents blocs LED pour voir leur action.\\\r\n-   Astuce: N'oubliez
        pas de cliquez \"Réinitialiser\" et de relancer votre programme à chaque modification"
      CSD U6 test LED_2018: "# Prenez le contrôle de la LED\\\r\n\n\\\r\nMaintenant
        que vous savez que le circuit est opérationnel, vous pouvez utiliser les différents
        blocs LED\\\r\n\\\r\n\n# \n\nExpérimentez ceci :\\\r\n\n-   Cliquez \"Démarrer\"
        et discuter avec votre partenaire comment le code fonctionne.\\\r\n-   Essayez
        les différents blocs LED pour voir leur action.\\\r\n-   Astuce: N'oubliez
        pas de cliquez \"Réinitialiser\" et de relancer votre programme à chaque modification"
      CSD U6 test LED_2019: "# Prenez le contrôle de la LED\\\r\n\n\\\r\nMaintenant
        que vous savez que le circuit est opérationnel, vous pouvez utiliser les différents
        blocs LED\\\r\n\\\r\n\n# \n\nExpérimentez ceci :\\\r\n\n-   Cliquez \"Démarrer\"
        et discuter avec votre partenaire comment le code fonctionne.\\\r\n-   Essayez
        les différents blocs LED pour voir leur action.\\\r\n-   Astuce: N'oubliez
        pas de cliquez \"Réinitialiser\" et de relancer votre programme à chaque modification"
      CSD U6 tugowar buzzer: "# Winning Buzzer\\\r\n\n\\\r\nThat last\nthing that
        that is missing from your project guide's description of this\nproject is
        the buzzer. It should buzz a high tone if player 1 wins and a low\ntone if
        player 2 wins. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSo far we've been able
        to\njust use the `player` parameter directly to report which player won, but
        that\nwon't work for buzzing different sounds. Inside the conditional that
        checks\nif a player won, you'll need to add _another_ conditional that checks
        which\nplayer it was. If `player == \"red\"` the buzzer should play a high
        note,\notherwise (else) it should play a low note."
      CSD U6 tugowar buzzer_2018: "# Winning Buzzer\\\r\n\n\\\r\nThat last\nthing
        that that is missing from your project guide's description of this\nproject
        is the buzzer. It should buzz a high tone if player 1 wins and a low\ntone
        if player 2 wins. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSo far we've been able
        to\njust use the `player` parameter directly to report which player won, but
        that\nwon't work for buzzing different sounds. Inside the conditional that
        checks\nif a player won, you'll need to add _another_ conditional that checks
        which\nplayer it was. If `player == \"red\"` the buzzer should play a high
        note,\notherwise (else) it should play a low note."
      CSD U6 tugowar buzzer_2019: "# Winning Buzzer\\\r\n\n\\\r\nThat last\nthing
        that that is missing from your project guide's description of this\nproject
        is the buzzer. It should buzz a high tone if player 1 wins and a low\ntone
        if player 2 wins. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSo far we've been able
        to\njust use the `player` parameter directly to report which player won, but
        that\nwon't work for buzzing different sounds. Inside the conditional that
        checks\nif a player won, you'll need to add _another_ conditional that checks
        which\nplayer it was. If `player == \"red\"` the buzzer should play a high
        note,\notherwise (else) it should play a low note."
      CSD U6 tugowar conditional: "# Check for a Winner\\\r\n\n\\\r\nYour\ngame should
        be pretty playable by now. Two players can click their respective\nbuttons,
        and their emojies will race down the screen. We still need a way\nfor a player
        to win though.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing a conditional inside\nthe
        `checkWin()` function, you want to check if a player has won each time\nthey
        click. For now, we can just use `console.log` to report the winner.\\\r\n\\\r\n\\*\nAdd
        an if statement to the bottom of `checkWin()`\\\r\n\n-   For the condition
        of\n    your if statement, check if `player_y` is greater than 350 (or use
        the bottom\n    of screen value you decided on in the last level)\\\r\n-   In
        your conditional,\n    add a `console.log` that reports which player won\\\r\n-
        \  Test your program to\n    make sure that it reports a winner when one of
        the emojis makes it to the\n    bottom of the screen"
      CSD U6 tugowar conditional_2018: "# Check for a Winner\\\r\n\n\\\r\nYour\ngame
        should be pretty playable by now. Two players can click their respective\nbuttons,
        and their emojies will race down the screen. We still need a way\nfor a player
        to win though.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing a conditional inside\nthe
        `checkWin()` function, you want to check if a player has won each time\nthey
        click. For now, we can just use `console.log` to report the winner.\\\r\n\\\r\n\\*\nAdd
        an if statement to the bottom of `checkWin()`\\\r\n\n-   For the condition
        of\n    your if statement, check if `player_y` is greater than 350 (or use
        the bottom\n    of screen value you decided on in the last level)\\\r\n-   In
        your conditional,\n    add a `console.log` that reports which player won\\\r\n-
        \  Test your program to\n    make sure that it reports a winner when one of
        the emojis makes it to the\n    bottom of the screen"
      CSD U6 tugowar conditional_2019: "# Check for a Winner\\\r\n\n\\\r\nYour\ngame
        should be pretty playable by now. Two players can click their respective\nbuttons,
        and their emojies will race down the screen. We still need a way\nfor a player
        to win though.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing a conditional inside\nthe
        `checkWin()` function, you want to check if a player has won each time\nthey
        click. For now, we can just use `console.log` to report the winner.\\\r\n\\\r\n\\*\nAdd
        an if statement to the bottom of `checkWin()`\\\r\n\n-   For the condition
        of\n    your if statement, check if `player_y` is greater than 350 (or use
        the bottom\n    of screen value you decided on in the last level)\\\r\n-   In
        your conditional,\n    add a `console.log` that reports which player won\\\r\n-
        \  Test your program to\n    make sure that it reports a winner when one of
        the emojis makes it to the\n    bottom of the screen"
      CSD U6 tugowar demo: "# Grab that Bug!\\\r\n\n\\\r\nThis is\nan example of a
        tug o' war game that you'll build by the end of this lesson.\nTo play, pair
        up with another student. The student on the left will the click\nthe left
        button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get the bug over to their\nside
        first wins."
      CSD U6 tugowar demo_2018: "# Grab that Bug!\\\r\n\n\\\r\nThis is\nan example
        of a tug o' war game that you'll build by the end of this lesson.\nTo play,
        pair up with another student. The student on the left will the click\nthe
        left button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get the bug over to their\nside
        first wins."
      CSD U6 tugowar demo_2019: "# Grab that Bug!\\\r\n\n\\\r\nThis is\nan example
        of a tug o' war game that you'll build by the end of this lesson.\nTo play,
        pair up with another student. The student on the left will the click\nthe
        left button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get the bug over to their\nside
        first wins."
      CSD U6 tugowar design 1.5: "# Game Screen Design\\\r\n\n\\\r\nWe've\nalso added
        a \"game\" screen where the game will be played. It just needs\na couple of
        tweaks.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSwitch to the \"game\" screen\nand,
        using your planning guide, fix this screen by changing the color of the\ntwo
        emoji images.\\\r\n\\\r\nFeel free to add any other design tweaks that you'd\nlike."
      CSD U6 tugowar design 1.5_2018: "# Game Screen Design\\\r\n\n\\\r\nWe've\nalso
        added a \"game\" screen where the game will be played. It just needs\na couple
        of tweaks.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSwitch to the \"game\" screen\nand,
        using your planning guide, fix this screen by changing the color of the\ntwo
        emoji images.\\\r\n\\\r\nFeel free to add any other design tweaks that you'd\nlike."
      CSD U6 tugowar design 1.5_2019: "# Game Screen Design\\\r\n\n\\\r\nWe've\nalso
        added a \"game\" screen where the game will be played. It just needs\na couple
        of tweaks.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSwitch to the \"game\" screen\nand,
        using your planning guide, fix this screen by changing the color of the\ntwo
        emoji images.\\\r\n\\\r\nFeel free to add any other design tweaks that you'd\nlike."
      CSD U6 tugowar design 1: "# Getting Started: Screen Design\\\r\n\n\\\r\nYou\nshould
        have already reviewed the planning guide for this project. Some of\nthe work
        to turn this project guide into a working program has already been\nstarted.
        Based on the project guide you're going to do the rest of this work.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already created a \"start\" screen and included
        a title\nand \"play\" button. Using your planning guide, finish creating this
        screen.\nSpecifically you'll want to:\\\r\n\\\r\n\n-   Update the title text
        to say \"Emoji\n    Race\"\\\r\n-   Add instructions for playing using the
        ID \"instructions\"\\\r\n    \\\r\n    Feel\n    free to add any other design
        tweaks that you'd like."
      CSD U6 tugowar design 1_2018: "# Getting Started: Screen Design\\\r\n\n\\\r\nYou\nshould
        have already reviewed the planning guide for this project. Some of\nthe work
        to turn this project guide into a working program has already been\nstarted.
        Based on the project guide you're going to do the rest of this work.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already created a \"start\" screen and included
        a title\nand \"play\" button. Using your planning guide, finish creating this
        screen.\nSpecifically you'll want to:\\\r\n\\\r\n\n-   Update the title text
        to say \"Emoji\n    Race\"\\\r\n-   Add instructions for playing using the
        ID \"instructions\"\\\r\n    \\\r\n    Feel\n    free to add any other design
        tweaks that you'd like."
      CSD U6 tugowar design 1_2019: "# Getting Started: Screen Design\\\r\n\n\\\r\nYou\nshould
        have already reviewed the planning guide for this project. Some of\nthe work
        to turn this project guide into a working program has already been\nstarted.
        Based on the project guide you're going to do the rest of this work.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already created a \"start\" screen and included
        a title\nand \"play\" button. Using your planning guide, finish creating this
        screen.\nSpecifically you'll want to:\\\r\n\\\r\n\n-   Update the title text
        to say \"Emoji\n    Race\"\\\r\n-   Add instructions for playing using the
        ID \"instructions\"\\\r\n    \\\r\n    Feel\n    free to add any other design
        tweaks that you'd like."
      CSD U6 tugowar design 2: "# Designing the Win Screen\\\r\n\n\\\r\nThe\nfinal
        screen in this program shows who won. It's totally blank right now.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nSwitch to \"win\" and design it based on your project
        guide.\nMake sure to pay close attention to the ID of each element. Once you've
        added\nthe required elements, feel free to add any other design tweaks that
        you'd\nlike."
      CSD U6 tugowar design 2_2018: "# Designing the Win Screen\\\r\n\n\\\r\nThe\nfinal
        screen in this program shows who won. It's totally blank right now.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nSwitch to \"win\" and design it based on your project
        guide.\nMake sure to pay close attention to the ID of each element. Once you've
        added\nthe required elements, feel free to add any other design tweaks that
        you'd\nlike."
      CSD U6 tugowar design 2_2019: "# Designing the Win Screen\\\r\n\n\\\r\nThe\nfinal
        screen in this program shows who won. It's totally blank right now.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nSwitch to \"win\" and design it based on your project
        guide.\nMake sure to pay close attention to the ID of each element. Once you've
        added\nthe required elements, feel free to add any other design tweaks that
        you'd\nlike."
      CSD U6 tugowar final: "# Make It Your Own\\\r\n\n\\\r\nYou just\nwalked through
        someone else's plan for creating a program, so now it's time\nto make it your
        own. What additional features or challenges do you want to\ncreate?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nSelect one of the challenges below to add\nto the game
        or come up with a challenge of your own.\\\r\n\\\r\n\n-   Change the look\n
        \   and layout of the screens\\\r\n-   Use the buzzer or the led to show when
        one\n    of the buttons has been clicked\\\r\n-   Set the \"icon-color\" property
        of \"winner\\_image\"\n    to the winning color\\\r\n-   Make the emojis start
        out sad, change to meh halfway,\n    and end up happy\\\r\n-   Use a variable
        and conditionals to make sure that players\n    can only move their emojis
        when the \"game\" screen is showing"
      CSD U6 tugowar final_2018: "# Make It Your Own\\\r\n\n\\\r\nYou just\nwalked
        through someone else's plan for creating a program, so now it's time\nto make
        it your own. What additional features or challenges do you want to\ncreate?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nSelect one of the challenges below to add\nto the game
        or come up with a challenge of your own.\\\r\n\\\r\n\n-   Change the look\n
        \   and layout of the screens\\\r\n-   Use the buzzer or the led to show when
        one\n    of the buttons has been clicked\\\r\n-   Set the \"icon-color\" property
        of \"winner\\_image\"\n    to the winning color\\\r\n-   Make the emojis start
        out sad, change to meh halfway,\n    and end up happy\\\r\n-   Use a variable
        and conditionals to make sure that players\n    can only move their emojis
        when the \"game\" screen is showing"
      CSD U6 tugowar final_2019: "# Make It Your Own\\\r\n\n\\\r\nYou just\nwalked
        through someone else's plan for creating a program, so now it's time\nto make
        it your own. What additional features or challenges do you want to\ncreate?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nSelect one of the challenges below to add\nto the game
        or come up with a challenge of your own.\\\r\n\\\r\n\n-   Change the look\n
        \   and layout of the screens\\\r\n-   Use the buzzer or the led to show when
        one\n    of the buttons has been clicked\\\r\n-   Set the \"icon-color\" property
        of \"winner\\_image\"\n    to the winning color\\\r\n-   Make the emojis start
        out sad, change to meh halfway,\n    and end up happy\\\r\n-   Use a variable
        and conditionals to make sure that players\n    can only move their emojis
        when the \"game\" screen is showing"
      CSD U6 tugowar movement 1: "# Tracking the Score\\\r\n\n\\\r\nYour\n`score`
        variable should keep track of how many times each user has clicked\ntheir
        button. Instead of just going up, `score` should _decrease_ if the player\n1
        clicks `buttonL` and _increase_ if player 2 clicks `buttonR`.\\\r\n\\\r\n\n#
        Do\n\nThis\\\r\n\\\r\nInside each `onBoardEvent`, use the counter pattern
        to increase\nor decrease `score`. The amount that you change `score` will
        change how difficult\nthe game is to win. Start with changing by 10 - you
        can always experiment\nwith different values when the program is more complete.\\\r"
      CSD U6 tugowar setProperty: "# Display the Winner\\\r\n\n\\\r\nThe\nwinning
        screen doesn't actually know _who_ won the game. Let's fix that\nnow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nBefore each call to `setScreen`, add a `setProperty`\nblock
        to change the \"text\" property of \"winner\" to display the actual\nwinner."
      CSD U6 tugowar setProperty_2018: "# Display the Winner\\\r\n\n\\\r\nThe\nwinning
        screen doesn't actually know _who_ won the game. Let's fix that\nnow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nBefore each call to `setScreen`, add a `setProperty`\nblock
        to change the \"text\" property of \"winner\" to display the actual\nwinner."
      CSD U6 tugowar setProperty_2019: "# Display the Winner\\\r\n\n\\\r\nThe\nwinning
        screen doesn't actually know _who_ won the game. Let's fix that\nnow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nBefore each call to `setScreen`, add a `setProperty`\nblock
        to change the \"text\" property of \"winner\" to display the actual\nwinner."
      CSD U6 tugowar setScreen: "# Change to the Win Screen\\\r\n\n\\\r\nNow\nthat
        we have conditionals to check which player won, let's switch to the\n\"win\"
        screen when a player wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInside the
        conditional\nthat you've created to check if a player has reached the bottom,
        add a `setScreen`\nblock to change to the \"win\" screen. Make sure you test
        that your new code\nworks before moving on!"
      CSD U6 tugowar setScreen_2018: "# Change to the Win Screen\\\r\n\n\\\r\nNow\nthat
        we have conditionals to check which player won, let's switch to the\n\"win\"
        screen when a player wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInside the
        conditional\nthat you've created to check if a player has reached the bottom,
        add a `setScreen`\nblock to change to the \"win\" screen. Make sure you test
        that your new code\nworks before moving on!"
      CSD U6 tugowar setScreen_2019: "# Change to the Win Screen\\\r\n\n\\\r\nNow\nthat
        we have conditionals to check which player won, let's switch to the\n\"win\"
        screen when a player wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInside the
        conditional\nthat you've created to check if a player has reached the bottom,
        add a `setScreen`\nblock to change to the \"win\" screen. Make sure you test
        that your new code\nworks before moving on!"
      CSD U6 tugowar variables 1: "# The startGame() Function\\\r\n\n\\\r\nIf\nyou
        look at the events we planned for in the planning guide, you may notice\nthat
        two events do essentially the same thing. The events that respond to\nboth
        the \"play\" and \"replay\" buttons could be written with identical code,\nbut
        duplicate code like this is a perfect place to use a **function**.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already added blocks that call a new function
        named\n`startGame()` to the appropriate event handlers, and we've created
        an empty\nfunction for you to build out. \\\r\n\\\r\n\n-   Find the `startGame()`
        function definition\n    ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Inside the function:\\\r\n    \\\\t\\*\n    Move both of the emoji
        images to the top of the screen by setting each one's\n    \"y\" property
        to 0\\\r\n    \\\\t\\* Change the screen to \"game\"\\\r\n    \\\r\n    Once
        you've\n    fleshed out the `startGame()` function, try clicking the \"play\"
        button to\n    check that it's working."
      CSD U6 tugowar variables 1_2018: "# The startGame() Function\\\r\n\n\\\r\nIf\nyou
        look at the events we planned for in the planning guide, you may notice\nthat
        two events do essentially the same thing. The events that respond to\nboth
        the \"play\" and \"replay\" buttons could be written with identical code,\nbut
        duplicate code like this is a perfect place to use a **function**.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already added blocks that call a new function
        named\n`startGame()` to the appropriate event handlers, and we've created
        an empty\nfunction for you to build out. \\\r\n\\\r\n\n-   Find the `startGame()`
        function definition\n    ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Inside the function:\\\r\n    \\\\t\\*\n    Move both of the emoji
        images to the top of the screen by setting each one's\n    \"y\" property
        to 0\\\r\n    \\\\t\\* Change the screen to \"game\"\\\r\n    \\\r\n    Once
        you've\n    fleshed out the `startGame()` function, try clicking the \"play\"
        button to\n    check that it's working."
      CSD U6 tugowar variables 1_2019: "# The startGame() Function\\\r\n\n\\\r\nIf\nyou
        look at the events we planned for in the planning guide, you may notice\nthat
        two events do essentially the same thing. The events that respond to\nboth
        the \"play\" and \"replay\" buttons could be written with identical code,\nbut
        duplicate code like this is a perfect place to use a **function**.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already added blocks that call a new function
        named\n`startGame()` to the appropriate event handlers, and we've created
        an empty\nfunction for you to build out. \\\r\n\\\r\n\n-   Find the `startGame()`
        function definition\n    ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Inside the function:\\\r\n    \\\\t\\*\n    Move both of the emoji
        images to the top of the screen by setting each one's\n    \"y\" property
        to 0\\\r\n    \\\\t\\* Change the screen to \"game\"\\\r\n    \\\r\n    Once
        you've\n    fleshed out the `startGame()` function, try clicking the \"play\"
        button to\n    check that it's working."
      CSD U6 tugowar variables 2: "# Functions with Parameters\\\r\n\n\\\r\nMost\nof
        the existing functions you use in App Lab need inputs, or **parameters**,\nto
        pass the function necessary information. For example, when changing a screen,\nyou
        pass the ID of that screen as a parameter, which looks like `setScreen(\"win\")`.\\\r\n\\\r\nThese\nparameters
        show up as a variable that can be used inside the function, and\nyou can create
        functions that use parameters too!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/2eccd9fc9f4887aefd0bfd94d7f332c8-image-1509402194012.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\nInstead of a separate function to move
        the\nred and the blue players, we've created one function called `movePlayer()`\nthat
        takes the ID of the player image as a parameter called `player`. Inside\nthis
        function, you can use `player` any place where you need to specify the\nID
        of the player you want to control.\\\r\n\\\r\n* Find where `movePlayer()`
        is\ndefined ( [Show me where](#triggercallout=block_trigger) )\\\r\n* Inside
        the\n`movePlayer()` definition:\\\r\n  * Get the current \"y\" property of
        the player\nand save it to a variable called `player_y`\\\r\n  * Increase
        the value of `player_y`\nby 10\\\r\n  * Set the \"y\" property of player to
        your new value `player_y`\\\r\n\\\r\nOnce\nyou've added your code, test it.
        You should see that _both buttons_ work\neven though we only created one function
        - cool!"
      CSD U6 tugowar variables 2_2018: "# Functions with Parameters\\\r\n\n\\\r\nMost\nof
        the existing functions you use in App Lab need inputs, or **parameters**,\nto
        pass the function necessary information. For example, when changing a screen,\nyou
        pass the ID of that screen as a parameter, which looks like `setScreen(\"win\")`.\\\r\n\\\r\nThese\nparameters
        show up as a variable that can be used inside the function, and\nyou can create
        functions that use parameters too!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/2eccd9fc9f4887aefd0bfd94d7f332c8-image-1509402194012.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\nInstead of a separate function to move
        the\nred and the blue players, we've created one function called `movePlayer()`\nthat
        takes the ID of the player image as a parameter called `player`. Inside\nthis
        function, you can use `player` any place where you need to specify the\nID
        of the player you want to control.\\\r\n\\\r\n* Find where `movePlayer()`
        is\ndefined ( [Show me where](#triggercallout=block_trigger) )\\\r\n* Inside
        the\n`movePlayer()` definition:\\\r\n  * Get the current \"y\" property of
        the player\nand save it to a variable called `player_y`\\\r\n  * Increase
        the value of `player_y`\nby 10\\\r\n  * Set the \"y\" property of player to
        your new value `player_y`\\\r\n\\\r\nOnce\nyou've added your code, test it.
        You should see that _both buttons_ work\neven though we only created one function
        - cool!"
      CSD U6 tugowar variables 2_2019: "# Functions with Parameters\\\r\n\n\\\r\nMost\nof
        the existing functions you use in App Lab need inputs, or **parameters**,\nto
        pass the function necessary information. For example, when changing a screen,\nyou
        pass the ID of that screen as a parameter, which looks like `setScreen(\"win\")`.\\\r\n\\\r\nThese\nparameters
        show up as a variable that can be used inside the function, and\nyou can create
        functions that use parameters too!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/2eccd9fc9f4887aefd0bfd94d7f332c8-image-1509402194012.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\nInstead of a separate function to move
        the\nred and the blue players, we've created one function called `movePlayer()`\nthat
        takes the ID of the player image as a parameter called `player`. Inside\nthis
        function, you can use `player` any place where you need to specify the\nID
        of the player you want to control.\\\r\n\\\r\n* Find where `movePlayer()`
        is\ndefined ( [Show me where](#triggercallout=block_trigger) )\\\r\n* Inside
        the\n`movePlayer()` definition:\\\r\n  * Get the current \"y\" property of
        the player\nand save it to a variable called `player_y`\\\r\n  * Increase
        the value of `player_y`\nby 10\\\r\n  * Set the \"y\" property of player to
        your new value `player_y`\\\r\n\\\r\nOnce\nyou've added your code, test it.
        You should see that _both buttons_ work\neven though we only created one function
        - cool!"
      CSD U6 tugowar variables 3: "# The checkWin() Function\\\r\n\n\\\r\nThe\nlast
        function that you need to figure out is the `checkWin()` function, which\nafter
        each player is moved, and is used to both check if that player has made\nit
        to the bottom of the screen and to announce the winner if necessary. For\nnow,
        we're just going to find out where the player is and log it to the console.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nJust like the `movePlayer()` function, `checkWin()`
        takes a\nsingle parameter called `player`. If you call `checkWin(\"red\")`,
        then the\nvariable `player` will have the value \"red\".\\\r\n\\\r\n\n-   Find
        where the function\n    is defined ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Create\n    a variable called `player_y` and assign it the \"y\"
        property of the player\\\r\n-   \\*\n    Use either a `console.log()` command
        or a watcher to report the value of `player_y`\\\r\n-   \\*\n    Play the
        game with only one button, keeping an eye on the value of `player_y`\\\r\n-
        \  \\*\n    Decide what value of `player_y` should be considered the bottom
        of the screen"
      CSD U6 tugowar variables 3_2018: "# The checkWin() Function\\\r\n\n\\\r\nThe\nlast
        function that you need to figure out is the `checkWin()` function, which\nafter
        each player is moved, and is used to both check if that player has made\nit
        to the bottom of the screen and to announce the winner if necessary. For\nnow,
        we're just going to find out where the player is and log it to the console.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nJust like the `movePlayer()` function, `checkWin()`
        takes a\nsingle parameter called `player`. If you call `checkWin(\"red\")`,
        then the\nvariable `player` will have the value \"red\".\\\r\n\\\r\n\n-   Find
        where the function\n    is defined ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Create\n    a variable called `player_y` and assign it the \"y\"
        property of the player\\\r\n-   \\*\n    Use either a `console.log()` command
        or a watcher to report the value of `player_y`\\\r\n-   \\*\n    Play the
        game with only one button, keeping an eye on the value of `player_y`\\\r\n-
        \  \\*\n    Decide what value of `player_y` should be considered the bottom
        of the screen"
      CSD U6 tugowar variables 3_2019: "# The checkWin() Function\\\r\n\n\\\r\nThe\nlast
        function that you need to figure out is the `checkWin()` function, which\nafter
        each player is moved, and is used to both check if that player has made\nit
        to the bottom of the screen and to announce the winner if necessary. For\nnow,
        we're just going to find out where the player is and log it to the console.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nJust like the `movePlayer()` function, `checkWin()`
        takes a\nsingle parameter called `player`. If you call `checkWin(\"red\")`,
        then the\nvariable `player` will have the value \"red\".\\\r\n\\\r\n\n-   Find
        where the function\n    is defined ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Create\n    a variable called `player_y` and assign it the \"y\"
        property of the player\\\r\n-   \\*\n    Use either a `console.log()` command
        or a watcher to report the value of `player_y`\\\r\n-   \\*\n    Play the
        game with only one button, keeping an eye on the value of `player_y`\\\r\n-
        \  \\*\n    Decide what value of `player_y` should be considered the bottom
        of the screen"
      'CSD: Cake Defender Exemplar': "# Defend Your Cake!\\\r\n\n\\\r\nThis\nis an
        example of a defender game that you'll build by the end of this lesson.\nMove
        the alien with arrow keys to keep the ladybugs from getting to your cake.\nHow
        high of a score can you get?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a
        classmate\nand make a list of the following information.\\\r\n\\\r\n\n-   How
        many sprites are\n    there in this game. Which are they?\\\r\n-   What variables
        are needed to make\n    this game? What do they store?\\\r\n-   If you were
        to split the code of this\n    game into functions what do you think they
        would be? What are the major pieces\n    of behavior you'd need to create
        in your code?"
      'CSD: Platform Jumper Exemplar': "# Platform Jumper\\\r\n\n\\\r\nThe\ngame on
        the left is an example of a platform jumper.  Press \"Run\" to play\nit.  You
        can make the alien jump with the up arrow, and move it to the left\nand right
        with the arrow keys.  You score by collecting stars, and if you\nscore high
        enough, the background will change.\\\r\n\\\r\nYou already know how\nto use
        all the blocks you need to make a game just like this one, and you'll\nbe
        making your own platform jumper in this lesson.\\\r\n\\\r\nYou can see other\nexamples
        of platform jumpers in the next two levels."
      CSDU2 - First-Weblab: "# Adding Content\\\r\n\n\\\r\nStart\ncreating your first
        web page! Try to create a page with a title and two paragraphs.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Write a sentence about your favorite animal\\\r\n-
        \  On a separate\n    line write another sentence about your least favorite
        animal.\\\r\n-   Above both\n    sentences try adding a title that says \"Animals\"\\\r\n-
        \  Don't forget to click\n    <img src=\"https://images.code.org/6a35d13b10ed2029a9323c9cb555e39e-image-1477681291001.01.12\n
        \   PM.png\" style=\"width:100px\">\\\r\n-   **What do you notice about the
        structure\n    of your content?**"
      CSDU2 - PW - Class Style Personal Site - OLD: "# Free\n\nPlay Styling\\\r\n\\\r\nYour
        turn to decide what you want to style! Play with\nthe classes styling and
        RGB colors to improve your personal website.\\\r\n\\\r\n\\*\nMake sure you
        have completed the checklist below.\\\r\n\n-   Take a screenshot of\n    your
        home page and save it somewhere on your computer so you can find it later.\\\r\n
        \   \\\r\n    ## \n    Checklist\\\r\n    \\\r\n-   Somewhere on your site,
        give text a particular color using\n    RGB values.\\\r\n-   On your lists
        page, give all the list items the same background\n    color.\\\r\n-   Use
        classes to style at least 2 other elements of your personal\n    website"
      CSDU2 Color Blindness: "# Color Blindness Filter\\\r\n\n\\\r\n\\\r\n\\\r"
      CSDU4 Project Events: "# Linking Screens\\\r\n\n\\\r\nWith all\nof your screens
        in place you can start adding events that will change the\nscreens. When you're
        done with this step you'll actually have an interactive\nprototype!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nFor each screen of your app:\\\r\n\\\r\n\n-   Find\n
        \   all of the button IDs\\\r\n-   For each button, add an event handler that
        watches\n    that ID\\\r\n-   In each event handler, use `setScreen()` to
        move the the right\n    screen\\\r\n-   Test it all out!\\\r\n    \\\r\n    Depending
        on the number of screens and\n    buttons your app has, this can be a pretty
        involved process. Make sure that\n    you test your work often, using `console.log()`
        blocks to debug any strange\n    behavior with your app. When you think you've
        got the whole thing working,\n    compare your app with other members of your
        group to see if they work the\n    same."
      CSDU4 Project Events_2018: "# Linking Screens\\\r\n\n\\\r\nWith all\nof your
        screens in place you can start adding events that will change the\nscreens.
        When you're done with this step you'll actually have an interactive\nprototype!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nFor each screen of your app:\\\r\n\\\r\n\n-   Find\n
        \   all of the button IDs\\\r\n-   For each button, add an event handler that
        watches\n    that ID\\\r\n-   In each event handler, use `setScreen()` to
        move the the right\n    screen\\\r\n-   Test it all out!\\\r\n    \\\r\n    Depending
        on the number of screens and\n    buttons your app has, this can be a pretty
        involved process. Make sure that\n    you test your work often, using `console.log()`
        blocks to debug any strange\n    behavior with your app. When you think you've
        got the whole thing working,\n    compare your app with other members of your
        group to see if they work the\n    same."
      CSDU4 Project Events_2019: "# Linking Screens\\\r\n\n\\\r\nWith all\nof your
        screens in place you can start adding events that will change the\nscreens.
        When you're done with this step you'll actually have an interactive\nprototype!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nFor each screen of your app:\\\r\n\\\r\n\n-   Find\n
        \   all of the button IDs\\\r\n-   For each button, add an event handler that
        watches\n    that ID\\\r\n-   In each event handler, use `setScreen()` to
        move the the right\n    screen\\\r\n-   Test it all out!\\\r\n    \\\r\n    Depending
        on the number of screens and\n    buttons your app has, this can be a pretty
        involved process. Make sure that\n    you test your work often, using `console.log()`
        blocks to debug any strange\n    behavior with your app. When you think you've
        got the whole thing working,\n    compare your app with other members of your
        group to see if they work the\n    same."
      CSDU6 - Arrays - expressionsAsIndexes: "# Expressions as Indexes: Using\n\nVariables\\\r\n\\\r\n\n-
        \  **Starter code** has been provided which creates an list\n    of identifiers
        for icons in the icon library\\\r\n-   **Write code** that sets\n    the image
        on the screen to a random icon from the list"
      CSDU6 - Arrays - indexPractice: "# Index Practice\\\r\n\n\\\r\n<img src=\"https://images.code.org/d3b8a9275703944808bc832c02f19fda-image-1486501806089.09.45\nPM.png\"
        style=\"width: 150px; float: right\">\\\r\n\\\r\n**Starter code** has\nbeen
        provided that creates a list called `colors`.\\\r\n\\\r\n\n-   Use `setProperty`\n
        \   and the list of colors to change the `background-color` of the buttons
        to\n    create a rainbow. The first button has been done for you."
      CSDU6 - LED buttonL: "# Utilisation des évènements du circuit\\\r\n\n\\\r\nPour
        le moment, la LED s'allume quand on appuie sur le bouton de gauche (`buttonL`).
        Elle devrait s'éteindre quand on appuie sur le bouton de droite (`buttonR`).\\\r\n\\\r\n\n<div\nstyle=\"float:right;\"
        markdown=1>\r\n\r\n![expandable](https://images.code.org/402489ec13fb6c6f38910829a9633ac3-image-1510874304220.png)\n\r\n\r\n</div>\r\n\r\n#
        Fais ceci\r\n\r\n* Ajoute un autre bloc `onBoardEvent()` pour éteindre la
        LED quand on appuie sur le bouton de droite."
      CSDU6 - LED buttonL_2018: "# Utilisation des évènements du circuit\\\r\n\n\\\r\nPour
        le moment, la LED s'allume quand on appuie sur le bouton de gauche (`buttonL`).
        Elle devrait s'éteindre quand on appuie sur le bouton de droite (`buttonR`).\\\r\n\\\r\n\n<div\nstyle=\"float:right;\"
        markdown=1>\r\n\r\n![expandable](https://images.code.org/402489ec13fb6c6f38910829a9633ac3-image-1510874304220.png)\n\r\n\r\n</div>\r\n\r\n#
        Fais ceci\r\n\r\n* Ajoute un autre bloc `onBoardEvent()` pour éteindre la
        LED quand on appuie sur le bouton de droite."
      CSDU6 - LED buttonL_2019: "# Utilisation des évènements du circuit\\\r\n\n\\\r\nPour
        le moment, la LED s'allume quand on appuie sur le bouton de gauche (`buttonL`).
        Elle devrait s'éteindre quand on appuie sur le bouton de droite (`buttonR`).\\\r\n\\\r\n\n<div\nstyle=\"float:right;\"
        markdown=1>\r\n\r\n![expandable](https://images.code.org/402489ec13fb6c6f38910829a9633ac3-image-1510874304220.png)\n\r\n\r\n</div>\r\n\r\n#
        Fais ceci\r\n\r\n* Ajoute un autre bloc `onBoardEvent()` pour éteindre la
        LED quand on appuie sur le bouton de droite."
      CSDU6 - LED toggle buttonL down: "# Other Board Events\n\nwith the Buttons\\\r\n\\\r\nThe
        left and right buttons have three event types:`press`,\n`down`, and `up`\\\r\n\\\r\nSo
        far you've just been using the `press` event.\nNow, we're going to use the
        `up` and `down` events to make the LED turn on\nand off with just **one**
        button.\\\r\n\\\r\n\n## Do this\\\r\n\n-   Drag out an `onBoardEvent`\n    block
        for one of the buttons and set the event type to `down`.\\\r\n-   Add code\n
        \   to turn the LED on when the button goes down."
      CSDU6 - LED toggle buttonL up: "# Autres évènements du circuit avec les boutons\\\r\n\n\\\r\nAu
        lieu d'utiliser le bouton de droite, tu peux éteindre la LED quand le bouton
        de gauche est relâché.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Créé un évènement
        'up' pour le bouton de gauche.\\\r\n-   Ajoute du code pour éteindre la LED
        quand le bouton est relâché."
      CSDU6 - LED toggle buttonL up_2018: "# Autres évènements du circuit avec les
        boutons\\\r\n\n\\\r\nAu lieu d'utiliser le bouton de droite, tu peux éteindre
        la LED quand le bouton de gauche est relâché.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Créé un évènement 'up' pour le bouton de gauche.\\\r\n-   Ajoute du code
        pour éteindre la LED quand le bouton est relâché."
      CSDU6 - LED toggle buttonL up_2019: "# Autres évènements du circuit avec les
        boutons\\\r\n\n\\\r\nAu lieu d'utiliser le bouton de droite, tu peux éteindre
        la LED quand le bouton de gauche est relâché.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Créé un évènement 'up' pour le bouton de gauche.\\\r\n-   Ajoute du code
        pour éteindre la LED quand le bouton est relâché."
      CSDU6 - LED toggle buttonL: "# Using Board Events with\n\nthe LED\\\r\n\\\r\nCan
        you toggle the LED on and off using a single board event?\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Pull out one `onBoardEvent()` block.\\\r\n-   Add code
        to turn the\n    LED on and off with just the one event on the Board."
      CSDU6 - board event challenge: "# Challenge: Sound Board\\\r\n\n\\\r\nCheck\nwith
        your teacher before starting the challenge.\\\r\n\\\r\nNow that you know\nhow
        to use board events, the buttons, switch, and the buzzer, try making a\nprogram
        that turns your board into a sound board when you press the buttons\nor flip
        the switch. Play around with the duration and frequencies of the sounds,\nand
        listen to how it turns out."
      CSDU6 - board event challenge_2018: "# Challenge: Sound Board\\\r\n\n\\\r\nCheck\nwith
        your teacher before starting the challenge.\\\r\n\\\r\nNow that you know\nhow
        to use board events, the buttons, switch, and the buzzer, try making a\nprogram
        that turns your board into a sound board when you press the buttons\nor flip
        the switch. Play around with the duration and frequencies of the sounds,\nand
        listen to how it turns out."
      CSDU6 - board event challenge_2019: "# Challenge: Sound Board\\\r\n\n\\\r\nCheck\nwith
        your teacher before starting the challenge.\\\r\n\\\r\nNow that you know\nhow
        to use board events, the buttons, switch, and the buzzer, try making a\nprogram
        that turns your board into a sound board when you press the buttons\nor flip
        the switch. Play around with the duration and frequencies of the sounds,\nand
        listen to how it turns out."
      CSDU6 - button_LED_prediction: "# Évènements en provenance du circuit\\\r\n\n\\\r\nLe
        bloc `onBoardEvent()` te permet de commencer à prendre des entrées en provenance
        du Circuit Playground. Examine le programme avec un partenaire et discutez
        de ce que le programme va faire selon vous. Une fois que vous avez une réponse,
        clique sur \"Démarrer\" pour vérifier votre réponse.\\\r\n\\\r\n\n-   Que
        se passe-t-il quand tu appuie sur le bouton de gauche?"
      CSDU6 - button_LED_prediction_2018: "# Évènements en provenance du circuit\\\r\n\n\\\r\nLe
        bloc `onBoardEvent()` te permet de commencer à prendre des entrées en provenance
        du Circuit Playground. Examine le programme avec un partenaire et discutez
        de ce que le programme va faire selon vous. Une fois que vous avez une réponse,
        clique sur \"Démarrer\" pour vérifier votre réponse.\\\r\n\\\r\n\n-   Que
        se passe-t-il quand tu appuie sur le bouton de gauche?"
      CSDU6 - button_LED_prediction_2019: "# Évènements en provenance du circuit\\\r\n\n\\\r\nLe
        bloc `onBoardEvent()` te permet de commencer à prendre des entrées en provenance
        du Circuit Playground. Examine le programme avec un partenaire et discutez
        de ce que le programme va faire selon vous. Une fois que vous avez une réponse,
        clique sur \"Démarrer\" pour vérifier votre réponse.\\\r\n\\\r\n\n-   Que
        se passe-t-il quand tu appuie sur le bouton de gauche?"
      CSDU6 - buzzer duration buttons: "# Le buzzer et les boutons\\\r\n\n\\\r\nCe
        programme doit utiliser les boutons pour jouer des sons longs ou courts\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n-   Change le paramètre de durée de `buzzer.frequency` pour
        que le bouton de gauche joue un son long, et que le bouton de droite joue
        un son court."
      CSDU6 - buzzer duration buttons_2018: "# Le buzzer et les boutons\\\r\n\n\\\r\nCe
        programme doit utiliser les boutons pour jouer des sons longs ou courts\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n-   Change le paramètre de durée de `buzzer.frequency` pour
        que le bouton de gauche joue un son long, et que le bouton de droite joue
        un son court."
      CSDU6 - buzzer duration buttons_2019: "# Le buzzer et les boutons\\\r\n\n\\\r\nCe
        programme doit utiliser les boutons pour jouer des sons longs ou courts\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n-   Change le paramètre de durée de `buzzer.frequency` pour
        que le bouton de gauche joue un son long, et que le bouton de droite joue
        un son court."
      CSDU6 - buzzer duration: "# Durée du buzzer\\\r\n\n\\\r\nComme tu l'as remarqué,
        `buzzer.frequency()` a deux paramètres: la fréquence et la durée. Ces deux
        paramètres prennent un nombre en entrée.\\\r\n\\\r\n\n-   La fréquence change
        le son du buzzer. Plus tu utilises un grand nombre, puis le son du buzzer
        sera aigu.\\\r\n    \\\r\n-   La durée détermine combien de millisecondes
        le buzzer va jouer ce son.\\\r\n    \\\r\n    Pour le moment, nous allons
        nous concentrer sur la durée, le second paramètre.\\\r\n    \\\r\n    \\\r\n
        \   # Fais ceci\\\r\n    Essaie ces quelques actions sur la durée :\\\r\n
        \   \\\r\n-   Change la durée du buzzer avec une valeur plus longue que 100.\\\r\n-
        \  Essaie d'utiliser une durée de 0, que se passe-t-il?\\\r\n    \\\r\n    Démarre
        le programme plusieurs fois pour voir l'influence de tes changements avant
        de passer à la suite."
      CSDU6 - buzzer duration_2018: "# Durée du buzzer\\\r\n\n\\\r\nComme tu l'as
        remarqué, `buzzer.frequency()` a deux paramètres: la fréquence et la durée.
        Ces deux paramètres prennent un nombre en entrée.\\\r\n\\\r\n\n-   La fréquence
        change le son du buzzer. Plus tu utilises un grand nombre, puis le son du
        buzzer sera aigu.\\\r\n    \\\r\n-   La durée détermine combien de millisecondes
        le buzzer va jouer ce son.\\\r\n    \\\r\n    Pour le moment, nous allons
        nous concentrer sur la durée, le second paramètre.\\\r\n    \\\r\n    \\\r\n
        \   # Fais ceci\\\r\n    Essaie ces quelques actions sur la durée :\\\r\n
        \   \\\r\n-   Change la durée du buzzer avec une valeur plus longue que 100.\\\r\n-
        \  Essaie d'utiliser une durée de 0, que se passe-t-il?\\\r\n    \\\r\n    Démarre
        le programme plusieurs fois pour voir l'influence de tes changements avant
        de passer à la suite."
      CSDU6 - buzzer duration_2019: "# Durée du buzzer\\\r\n\n\\\r\nComme tu l'as
        remarqué, `buzzer.frequency()` a deux paramètres: la fréquence et la durée.
        Ces deux paramètres prennent un nombre en entrée.\\\r\n\\\r\n\n-   La fréquence
        change le son du buzzer. Plus tu utilises un grand nombre, puis le son du
        buzzer sera aigu.\\\r\n    \\\r\n-   La durée détermine combien de millisecondes
        le buzzer va jouer ce son.\\\r\n    \\\r\n    Pour le moment, nous allons
        nous concentrer sur la durée, le second paramètre.\\\r\n    \\\r\n    \\\r\n
        \   # Fais ceci\\\r\n    Essaie ces quelques actions sur la durée :\\\r\n
        \   \\\r\n-   Change la durée du buzzer avec une valeur plus longue que 100.\\\r\n-
        \  Essaie d'utiliser une durée de 0, que se passe-t-il?\\\r\n    \\\r\n    Démarre
        le programme plusieurs fois pour voir l'influence de tes changements avant
        de passer à la suite."
      CSDU6 - buzzer intro: "# Utilisation du buzzer\\\r\n\n\\\r\nTu peux utiliser
        le buzzer de plusieurs manières différentes, mais pour le moment, nous allons
        seulement utiliser `buzzer.frequency()`.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Prend un bloc `buzzer.frequency()` dans la boîte à outils et expérimente
        un peu avec. Tu remarqueras qu'il a deux paramètres. Que se passe-t-il si
        tu changes l'un ou l'autre de ces paramètres? Ou les deux en même temps?\\\r\n-
        \  Démarre le programme et apprécie la musique du Circuit Playground."
      CSDU6 - buzzer intro_2018: "# Utilisation du buzzer\\\r\n\n\\\r\nTu peux utiliser
        le buzzer de plusieurs manières différentes, mais pour le moment, nous allons
        seulement utiliser `buzzer.frequency()`.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Prend un bloc `buzzer.frequency()` dans la boîte à outils et expérimente
        un peu avec. Tu remarqueras qu'il a deux paramètres. Que se passe-t-il si
        tu changes l'un ou l'autre de ces paramètres? Ou les deux en même temps?\\\r\n-
        \  Démarre le programme et apprécie la musique du Circuit Playground."
      CSDU6 - buzzer intro_2019: "# Utilisation du buzzer\\\r\n\n\\\r\nTu peux utiliser
        le buzzer de plusieurs manières différentes, mais pour le moment, nous allons
        seulement utiliser `buzzer.frequency()`.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Prend un bloc `buzzer.frequency()` dans la boîte à outils et expérimente
        un peu avec. Tu remarqueras qu'il a deux paramètres. Que se passe-t-il si
        tu changes l'un ou l'autre de ces paramètres? Ou les deux en même temps?\\\r\n-
        \  Démarre le programme et apprécie la musique du Circuit Playground."
      CSDU6 - end challenge: "# Challenge: Board Events and\n\nOutputs\\\r\n\\\r\nCheck
        with your teacher before starting the challenge.\\\r\n\\\r\nNow\nthat you
        know how to use board events, the led, and the buzzer, try to create\nan app
        that uses all three."
      CSDU6 - final project 1: "# Designing the User Interface\\\r\n\n\\\r\nBefore\nworrying
        about the code for your program, start by laying out the user interface.\nAs
        you add elements in Design Mode, make sure to give everything a meaningful\nID.
        Even if you don't plan on accessing an element with code, making sure\nthat
        all of your IDs are descriptive will help make your program more readable\nand
        easier to program."
      CSDU6 - final project 1_2018: "# Designing the User Interface\\\r\n\n\\\r\nBefore\nworrying
        about the code for your program, start by laying out the user interface.\nAs
        you add elements in Design Mode, make sure to give everything a meaningful\nID.
        Even if you don't plan on accessing an element with code, making sure\nthat
        all of your IDs are descriptive will help make your program more readable\nand
        easier to program."
      CSDU6 - final project 1_2019: "# Designing the User Interface\\\r\n\n\\\r\nBefore\nworrying
        about the code for your program, start by laying out the user interface.\nAs
        you add elements in Design Mode, make sure to give everything a meaningful\nID.
        Even if you don't plan on accessing an element with code, making sure\nthat
        all of your IDs are descriptive will help make your program more readable\nand
        easier to program."
      CSDU6 - final project 2: "# Wiring Up the UI\\\r\n\n\\\r\nWith\nyour user interface
        in place, you can now add event handlers for your interface\nelements. At
        this point you may want to just include `console.log()` commands\nto make
        sure that your events are working as expected - you can add the functional\ncode
        later one."
      CSDU6 - final project 2_2018: "# Wiring Up the UI\\\r\n\n\\\r\nWith\nyour user
        interface in place, you can now add event handlers for your interface\nelements.
        At this point you may want to just include `console.log()` commands\nto make
        sure that your events are working as expected - you can add the functional\ncode
        later one."
      CSDU6 - final project 2_2019: "# Wiring Up the UI\\\r\n\n\\\r\nWith\nyour user
        interface in place, you can now add event handlers for your interface\nelements.
        At this point you may want to just include `console.log()` commands\nto make
        sure that your events are working as expected - you can add the functional\ncode
        later one."
      CSDU6 - final project 3: "# Board Input Events\\\r\n\n\\\r\nNow\nyou can add
        the events which will take input from the board. Again, feel free\nto just
        use `console.log()` statements at this point to ensure that your events\nare
        working."
      CSDU6 - final project 3_2018: "# Board Input Events\\\r\n\n\\\r\nNow\nyou can
        add the events which will take input from the board. Again, feel free\nto
        just use `console.log()` statements at this point to ensure that your events\nare
        working."
      CSDU6 - final project 3_2019: "# Board Input Events\\\r\n\n\\\r\nNow\nyou can
        add the events which will take input from the board. Again, feel free\nto
        just use `console.log()` statements at this point to ensure that your events\nare
        working."
      CSDU6 - final project 4: "# Functions\\\r\n\n\\\r\nCreate functions\nfor each
        piece of functionality in your program and call them from the event\nhandlers
        that you created earlier."
      CSDU6 - final project 4_2018: "# Functions\\\r\n\n\\\r\nCreate functions\nfor
        each piece of functionality in your program and call them from the event\nhandlers
        that you created earlier."
      CSDU6 - final project 4_2019: "# Functions\\\r\n\n\\\r\nCreate functions\nfor
        each piece of functionality in your program and call them from the event\nhandlers
        that you created earlier."
      CSDU6 - final project 5: "# Board Output\\\r\n\n\\\r\nIf you\nhaven't already,
        use some of the output elements on the board to communicate\nuseful information
        to the user."
      CSDU6 - final project 5_2018: "# Board Output\\\r\n\n\\\r\nIf you\nhaven't already,
        use some of the output elements on the board to communicate\nuseful information
        to the user."
      CSDU6 - final project 5_2019: "# Board Output\\\r\n\n\\\r\nIf you\nhaven't already,
        use some of the output elements on the board to communicate\nuseful information
        to the user."
      CSDU6 - final project 6: "# Finishing Touches\\\r\n\n\\\r\nAdd\nany finishing
        touches still needed to make your program awesome."
      CSDU6 - final project 6_2018: "# Finishing Touches\\\r\n\n\\\r\nAdd\nany finishing
        touches still needed to make your program awesome."
      CSDU6 - final project 6_2019: "# Finishing Touches\\\r\n\n\\\r\nAdd\nany finishing
        touches still needed to make your program awesome."
      CSDU6 - lightswitch toggleswitch: "# Utilisation de l'interrupteur\\\r\n\n\\\r\nL'interrupteur
        peut changer entre deux positions: allumé `open` et éteint `close`. Ce programme
        l'utilise pour faire un interrupteur pour la LED. Mais pour le moment, il
        ne peut qu'allumer la LED.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n\\\r\n\n-   Créé
        un nouvel événement pour l'interrupteur quand celui-ci devient `close`.\\\r\n-
        \  Ajoute du code pour que la lumière s'éteigne quand l'interrupteur passe
        `close`."
      CSDU6 - lightswitch toggleswitch_2018: "# Utilisation de l'interrupteur\\\r\n\n\\\r\nL'interrupteur
        peut changer entre deux positions: allumé `open` et éteint `close`. Ce programme
        l'utilise pour faire un interrupteur pour la LED. Mais pour le moment, il
        ne peut qu'allumer la LED.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n\\\r\n\n-   Créé
        un nouvel événement pour l'interrupteur quand celui-ci devient `close`.\\\r\n-
        \  Ajoute du code pour que la lumière s'éteigne quand l'interrupteur passe
        `close`."
      CSDU6 - lightswitch toggleswitch_2019: "# Utilisation de l'interrupteur\\\r\n\n\\\r\nL'interrupteur
        peut changer entre deux positions: allumé `open` et éteint `close`. Ce programme
        l'utilise pour faire un interrupteur pour la LED. Mais pour le moment, il
        ne peut qu'allumer la LED.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n\\\r\n\n-   Créé
        un nouvel événement pour l'interrupteur quand celui-ci devient `close`.\\\r\n-
        \  Ajoute du code pour que la lumière s'éteigne quand l'interrupteur passe
        `close`."
      CSDU6 - sensor love tester demo: "# \"Love\" Tester\\\r\n\n\\\r\nThe\n\"Love\"
        Tester is a classic carnival game. It works by having a user place\ntheir
        palm flat on a sensor or hold a metal handle. The tester then displays\nhow
        in love that person is. The simplest version of these machines simply\nmeasure
        the temperature of the user’s hand and equate more love with a higher\ntemperature.\\\r\n\\\r\nTest
        out this \"Love\" Tester by holding your thumb down\non your Circuit Playground's
        temperature sensor. Compare your results with\nthose of your neighbors - do
        all of the boards respond in the same way?"
      CSDU6 - sensor theremin demo: "# Light Theremin\\\r\n\n\\\r\nA\ntheremin is
        an instrument that can be played without the musician actually\ntouching it!
        Traditional theremins use magnetic fields for user interaction,\nbut a simpler
        version can be made by detecting and reacting to light.\\\r\n\\\r\nTest\nout
        this theremin by waving your hand over the light sensor on your Circuit\nPlayground.
        How does the tone change as the amount of light detected changes?"
      CSDU6 - sensor vu meter demo: "# VU Meter\\\r\n\n\\\r\nMany\nstereo systems
        feature a row of LEDs that light up as the music plays. This\ndisplay is called
        a Volume Unit (VU) Meter, and it allows the user to see\nhow loud the music
        is as it plays.\\\r\n\\\r\nTest out this VU Meter by speaking\nor otherwise
        making noise near the Circuit Playground. How do the lights and\ndisplay change
        as the volume of ambient noise changes?"
      CSDU6 - sensors challenge: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSDU6 - sensors experiment: "<iframe width=\"370\" height=\"620\"\nstyle=\"float:right;
        margin-left: 25px; border: 0px;\" src=\"https://studio.code.org/projects/applab/iCWa6Gsb-W4StwmqFX5TkA/embed\"></iframe>\\\r\n\\\r\n#\nSensor
        Experiment\\\r\n\\\r\nRun the program to the right and experiment with\nyour
        board. Try interacting with your board in many different ways to figure\nout
        what each sensor might be. Once you've completed the experiment, answer\nthe
        following questions for each sensor in the text box below.\\\r\n\\\r\n* What\ndoes
        this sensor measure?\\\r\n* What is its maximum value?\\\r\n* What is its\nminimum
        value?"
      CSDU6 - sensors light: "# Light Sensor Updates\\\r\n\n\\\r\nThis\napp is very
        similar to the last, but we've added a button with the ID \"update\\_button\".\nWrite
        a program that displays the current value of the light sensor every\ntime
        the update button is clicked."
      CSDU6 - sensors love tester 1: "# \"Love\" Tester: Collecting\n\nand Scaling
        Input\\\r\n\\\r\nWhich sensor do you need to take input from?\\\r\nWhat\nscale
        of input is appropriate for this app?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd
        an\nevent handler to continually collect data from your chosen sensor and
        use\n`console.log()` to track how it changes to user interaction. If necessary,\nchange
        the scale of your input to meet your needs.\\\r\n\\\r\n_Tip: Consider which\ntype
        of data is easiest to use from the temperature sensor - the raw value,\ntemperature
        in C, or temperature in F._"
      CSDU6 - sensors love tester 2: "# \"Love\" Tester: Displaying\n\nOutput\\\r\n\\\r\nHow
        will your collected data be displayed?\\\r\nDoes your data\nneed to be transformed
        or processed before being displayed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nReplace\nyour
        call to `console.log()` with the kind of output you need for your project.\\\r\n\\\r\n_Tip:\nYou
        may want a conditional to determine which output to display depending\non
        input._"
      CSDU6 - sensors love tester 3: "# \"Love\" Tester: Finishing\n\nit Up\\\r\n\\\r\nDoes
        your app meet the minimum requirements of its objective?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nAdd the finishing touches to your app. Return to your planning\nguide
        to make sure that the app meets your initial goals."
      CSDU6 - sensors predict question: "# Make a Prediction\\\r\n\n\\\r\nRead\nthe
        code in this program and make a prediction below. What do you think this\nprogram
        will do when you run it? How is the user intended to interact with\nthe board?
        You may need to use a flashlight or other bright light source to\nsee the
        full range of this app."
      CSDU6 - sensors predict question_2018: "# Make a Prediction\\\r\n\n\\\r\nRead\nthe
        code in this program and make a prediction below. What do you think this\nprogram
        will do when you run it? How is the user intended to interact with\nthe board?
        You may need to use a flashlight or other bright light source to\nsee the
        full range of this app."
      CSDU6 - sensors predict question_2019: "# Make a Prediction\\\r\n\n\\\r\nRead\nthe
        code in this program and make a prediction below. What do you think this\nprogram
        will do when you run it? How is the user intended to interact with\nthe board?
        You may need to use a flashlight or other bright light source to\nsee the
        full range of this app."
      CSDU6 - sensors rgb part 1: "# Displaying Sensor Readings\n\nin Color\\\r\n\\\r\nIn
        the previous prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSDU6 - sensors rgb part 2: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat
        your sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSDU6 - sensors rgb part 3: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSDU6 - sensors sound: "# Reading the Sound Sensor\\\r\n\n\\\r\nIn\nthis app
        we've already added a text label with the id \"sound\\_value\". Using\nthe
        `soundSensor.value` block. display the value of the sound sensor."
      CSDU6 - sensors temp f c: "# Temperatures in Fahrenheit\n\nand Celsius\\\r\n\\\r\nWhile
        the sound, light, and temperature all behave in the\nsame fashion (converting
        an analog input to a 10 bit number), the temperature\nsensor is often used
        a bit differently. Typically if you are using a temperature\nsensor, you want
        to get a temperature in Fahrenheit or Celsius, not just a\nnumber in a range.
        To help with this, the temperature sensor how two special\nblocks, `tempSensor.F`
        and `tempSensor.C`.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing an\nevent handler,
        write a program that continuously updates the labels \"temp_c\"\nand \"temp_f\"
        with the appropriate temperature readings."
      CSDU6 - sensors temp: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSDU6 - sensors theremin 1: "# Light Theremin: Collecting\n\nand Scaling Input\\\r\n\\\r\nWhich
        sensor do you need to take input from?\\\r\nWhat\nscale of input is appropriate
        for this app?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd an\nevent handler to
        continually collect data from your chosen sensor and use\n`console.log()`
        to track how it changes to user interaction. If necessary,\nchange the scale
        of your input to meet your needs."
      CSDU6 - sensors theremin 2: "# Light Theremin: Displaying\n\nOutput\\\r\n\\\r\nHow
        will your collected data be displayed?\\\r\nDoes your data\nneed to be transformed
        or processed before being displayed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nReplace\nyour
        call to `console.log()` with the kind of output you need for your project."
      CSDU6 - sensors theremin 3: "# Light Theremin: Finishing\n\nit Up\\\r\n\\\r\nDoes
        your app meet the minimum requirements of its objective?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nAdd the finishing touches to your app. Return to your planning\nguide
        to make sure that the app meets your initial goals."
      CSDU6 - sensors vu meter 1: "# VU Meter: Collecting and\n\nScaling Input\\\r\n\\\r\nWhich
        sensor do you need to take input from?\\\r\nWhat\nscale of input is appropriate
        for this app?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd an\nevent handler to
        continually collect data from your chosen sensor and use\n`console.log()`
        to track how it changes to user interaction. If necessary,\nchange the scale
        of your input to meet your needs.\\\r\n\\\r\n_Tip: If you are\ngoing to use
        the 10 color LEDs for output, how should you set the scale of\nyour sensor?_"
      CSDU6 - sensors vu meter 2: "# VU Meter: Displaying Output\\\r\n\n\\\r\nHow\nwill
        your collected data be displayed?\\\r\nDoes your data need to be transformed\nor
        processed before being displayed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nReplace
        your\ncall to `console.log()` with the kind of output you need for your project.\\\r\n\\\r\n_Tip:\nYou
        may want to use a conditional to determine which LEDs to turn on, and\nwhich
        one's to turn off_"
      CSDU6 - sensors vu meter 3: "# VU Meter: Finishing it\n\nUp\\\r\n\\\r\nDoes
        your app meet the minimum requirements of its objective?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nAdd the finishing touches to your app. Return to your planning\nguide
        to make sure that the app meets your initial goals."
      CSDU6 - toggleswitch state setProp: "# État de l'interrupteur\\\r\n\n\\\r\nCe
        programme donne l'état de l'interrupteur, allumé ou éteint, mais il a besoin
        du bloc  `toggleSwitch.isOpen` pour fonctionner. `toggleSwitch.isOpen` est
        vrai (`true`) si l'interrupteur est allumé et faux (`false`) si l'interrupteur
        est éteint.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Complète le bloc si avec la
        propriété `toggleSwitch.isOpen`.\\\r\n-   Démarre le programme et appuie sur
        le bouton de gauche. Puis change l'interrupteur et appuie encore sur le bouton."
      CSDU6 - toggleswitch state setProp_2018: "# État de l'interrupteur\\\r\n\n\\\r\nCe
        programme donne l'état de l'interrupteur, allumé ou éteint, mais il a besoin
        du bloc  `toggleSwitch.isOpen` pour fonctionner. `toggleSwitch.isOpen` est
        vrai (`true`) si l'interrupteur est allumé et faux (`false`) si l'interrupteur
        est éteint.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Complète le bloc si avec la
        propriété `toggleSwitch.isOpen`.\\\r\n-   Démarre le programme et appuie sur
        le bouton de gauche. Puis change l'interrupteur et appuie encore sur le bouton."
      CSDU6 - toggleswitch state setProp_2019: "# État de l'interrupteur\\\r\n\n\\\r\nCe
        programme donne l'état de l'interrupteur, allumé ou éteint, mais il a besoin
        du bloc  `toggleSwitch.isOpen` pour fonctionner. `toggleSwitch.isOpen` est
        vrai (`true`) si l'interrupteur est allumé et faux (`false`) si l'interrupteur
        est éteint.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Complète le bloc si avec la
        propriété `toggleSwitch.isOpen`.\\\r\n-   Démarre le programme et appuie sur
        le bouton de gauche. Puis change l'interrupteur et appuie encore sur le bouton."
      CSDU6 - toggleswitch state: "# State and the Toggle Switch\\\r\n\n\\\r\nThe\ntoggle
        switch has the `toggleSwitch.isOpen` property, which keeps track of\nwhich
        **state** (opened or closed) the switch is in. `toggleSwitch.isOpen`\nis a
        boolean, so its value is `true` if the toggle switch is open, and `false`\nif
        it's closed.\\\r\n\\\r\n\\\r\n\n## Do this\\\r\n\n\\\r\n You'll be adding
        to the if-else\nstatement to check if the toggle switch is open or closed.\\\r\n\\\r\n\n-
        \  Drag the\n    `toggleSwitch.isOpen` block into the condition of the if-statement.
        Since\n    `toggleSwitch.isOpen` is a boolean, the condition reads \"If true\".\\\r\n
        \   \\\r\n-   \\*\n    Add `console.log()` statements that say \"open!\" if
        the switch is open, and\n    \"closed!\" otherwise.\\\r\n    \\\r\n-   Run
        your code and toggle the switch to see\n    what happens.\\\r\n    \\\r\n
        \   Remember: This program is wrapped under an event. You'll\n    _have_ to
        press the left button to update the program when you toggle the\n    switch."
      CSDU6 array index predict contained: "# Predict\\\r\n\n\\\r\nThe\ncode below
        will display four things on the screen.  What do you think they\nwill be?"
      CSDU6 array index predict contained_2018: "# Predict\\\r\n\n\\\r\nThe\ncode
        below will display four things on the screen.  What do you think they\nwill
        be?"
      CSDU6 array index predict contained_2019: "# Predict\\\r\n\n\\\r\nThe\ncode
        below will display four things on the screen.  What do you think they\nwill
        be?"
      CSDU6 arrays rainbow: "# Index Practice\\\r\n\n\\\r\n<img src=\"https://images.code.org/d3b8a9275703944808bc832c02f19fda-image-1486501806089.09.45\nPM.png\"
        style=\"width: 150px; float: right\">\\\r\n\\\r\n**Starter code** has\nbeen
        provided that creates a list called `colors`.\\\r\n\\\r\n\n-   Use `setProperty`\n
        \   and the list of colors to change the `background-color` of the buttons
        to\n    create a rainbow. The first button has been done for you."
      CSDU6 arrays random: "# Expressions as Indexes: Using\n\nVariables\\\r\n\\\r\n\n-
        \  **Starter code** has been provided which creates an list\n    of identifiers
        for icons in the icon library\\\r\n-   **Write code** that sets\n    the image
        on the screen to a random icon from the list"
      CSDU6 arrays select icons: "# Expressions as Indexes: Using\n\nVariables\\\r\n\\\r\n\n-
        \  **Starter code** has been provided which creates an list\n    of identifiers
        for icons in the icon library\\\r\n-   **Write code** that sets\n    the image
        on the screen to a random icon from the list"
      CSDU6 arrays variable: "# Expressions as Indexes: Using\n\nVariables\\\r\n\\\r\n\n-
        \  **Starter code** has been provided which creates an list\n    of identifiers
        for icons in the icon library\\\r\n-   **Write code** that sets\n    the image
        on the screen to a random icon from the list"
      CSDU6 circuit playground piano: "# Circuit Piano\\\r\n\n\\\r\nExaminez le code
        ci-dessous. Vous n'allez pas le modifier, mais essayez de comprendre ce qu'il
        fait.\\\r\n\\\r\n\n# Faite ceci\\\r\n\n\\\r\n\n-   Démarrez le programme et
        jouez avec le piano à l'écran."
      CSDU6 circuit playground piano_2018: "# Circuit Piano\\\r\n\n\\\r\nExaminez
        le code ci-dessous. Vous n'allez pas le modifier, mais essayez de comprendre
        ce qu'il fait.\\\r\n\\\r\n\n# Faite ceci\\\r\n\n\\\r\n\n-   Démarrez le programme
        et jouez avec le piano à l'écran."
      CSDU6 circuit playground piano_2019: "# Circuit Piano\\\r\n\n\\\r\nExaminez
        le code ci-dessous. Vous n'allez pas le modifier, mais essayez de comprendre
        ce qu'il fait.\\\r\n\\\r\n\n# Faite ceci\\\r\n\n\\\r\n\n-   Démarrez le programme
        et jouez avec le piano à l'écran."
      CSDU6 light sensor alarm: "# Auto Alarm\\\r\n\n\\\r\nLet's\nrevisit the alarm
        app one last time. When we last updated this app we made\nit turn on or off
        the buzzer in addition to the LED, but it still needs to\nbe manually triggered.
        Now that we know how to use sensor events, you can\nmake the alarm trigger
        automatically!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing the an\nevent handler
        for the light sensor, make the alarm turn on when it sees light.\nYou can
        test the alarm by placing an object like a piece of paper over the\nboard
        - if someone tries to take the piece of paper your alarm should start\nbuzzing.\\\r\n\\\r\n_Challenge:
        Can you make both the buttons and the sensor play\nnicely together?_"
      CSDU6 toggle state prediction: "# Plus loin avec l'interrupteur\\\r\n\n\\\r\nTu
        peux aussi vérifier la position de l'interrupteur `open` ou `close` n'importe
        où dans ton programme.\\\r\n\\\r\nQuelles sont les différentes action que
        fait le bouton quand l'interrupteur est `open` ou `close`?"
      CSDU6 toggle state prediction_2018: "# Plus loin avec l'interrupteur\\\r\n\n\\\r\nTu
        peux aussi vérifier la position de l'interrupteur `open` ou `close` n'importe
        où dans ton programme.\\\r\n\\\r\nQuelles sont les différentes action que
        fait le bouton quand l'interrupteur est `open` ou `close`?"
      CSDU6 toggle state prediction_2019: "# Plus loin avec l'interrupteur\\\r\n\n\\\r\nTu
        peux aussi vérifier la position de l'interrupteur `open` ou `close` n'importe
        où dans ton programme.\\\r\n\\\r\nQuelles sont les différentes action que
        fait le bouton quand l'interrupteur est `open` ou `close`?"
      'Challenge: Buzzer and LED': "# Challenge\\\r\n\n\\\r\nCheck\nwith your teacher
        before starting the challenge.\\\r\n\\\r\nNow that you know\nhow to use the
        LED and buzzer, try creating an app that can play a variety\nof different
        sounds and which uses the LED. You could make a keyboard or synthesizer\nthat
        plays various sounds when you click different buttons."
      'Challenge: Input and UI': "# Stop\\\r\n\n\\\r\nYou have reached\nthe end of
        the lesson. Check in with your teacher to see if you should work\non the challenge
        level before you start. This is an extra challenge to practice\nyour skills
        if you have time. If you don't have time for it no big deal!\\\r\n\\\r\n\n#
        \n\nChallenge\\\r\n\\\r\nGo to <a href=\"https://studio.code.org/p/applab\"
        target=\"_blank\">Full\nApp Lab</a> and try to make your own profile creator
        like the example program\non this level."
      'Challenge: Lights Picker': "# Challenge: More Patterns\\\r\n\n\\\r\nAdd\nsome
        more patterns to your app. Find a partner and add their pattern as an\noption.
        Make sure to put each pattern into its own function."
      'Challenge: List of Notes': "# Challenge: \\\r\n\n\\\r\nCheck\nwith your teacher
        before starting the challenge.\\\r\n\\\r\n**Starter Code:**\nAn array with
        the name of the 30 buttons on the screen (not including the\nNew Pattern button)
        is provided for you. \\\r\n\\\r\n**Write Code:** Each time\nthe New Pattern
        button is clicked at least one random button from the list\nis set to a random
        color.\\\r"
      'Challenge: Random Button Colors': "# Challenge: Random\n\nButton Colors\\\r\n\\\r\nCheck
        with your teacher before starting the challenge.\\\r\n\\\r\n**Starter\nCode:**
        An array with the name of the 30 buttons on the screen (not including\nthe
        New Pattern button) is provided for you. \\\r\n\\\r\n**Write Code:** Each\ntime
        the New Pattern button is clicked at least one random button from the\nlist
        is set to a random color.\\\r"
      Classroom Management Tips for School Computer Labs: "## \n\nStrategies for Managing
        a Computer Lab\\\r\n\\\r\n\\\r\nIf you're new to teaching\na computer lab,
        consider implementing some of the 7 tips for establishing\nstrong instructional
        routines, outlined in this article by Angela Watson.\n\\\r\n\\\r\n<br><br>"
      Color Blindness Filter: "# Color Blindness Filter\\\r\n\n\\\r\n\\\r\n\\\r"
      Color Contrast Checker: "# Color Contrast\\\r\n\n\\\r\nPeople\nneed to be able
        to see and read the content on your web page for it to be\nuseful. Some people
        might have bad eye sight, others are color blind. How\ndo you design with
        these differences in mind? \\\r\n\\\r\nOne of the easiest ways\nto insure
        that many people will be able to read the content on your website\nis to make
        sure their is enough contrast between the different colors you\nare using
        together on your site.\\\r\n\\\r\n<http://gomedia.com/zine/tutorials/rule-three-contrast-contrast-contrast/\r>\n\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use the color contrast checker to see the difference
        in contrast\n    of the different colors you are using together on your site."
      Considerations for the 1-to-1 Classroom: "## 1-1 Classroom\\\r\n\n\\\r\nIf\nyou're
        new to managing a classroom with computers, check out this article\nin Education
        Week, which outlines some important considerations.\\\r\n\\\r\n<br><br>"
      CoureE_HOC 2018 Level_7a: Vous avez découvert les ruines sous-marines. Fouillez
        le grès à la recherche d'un **coffre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        contenant un trésor de **prismarine** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      Course 4 Artist 1: "Help me draw a box.   \\\r\n(Each line\nis 200 pixels long)
        \\\r\n\\\r\n<br/><br/>\\\r\n\\\r"
      Course 4 Artist 10: "<img src=\"https://images.code.org/c876143212d195192013582f57c6df04-image-1445625392518.36.18.png\"\nwidth=\"150px;\"
        style=\"mix-blend-mode: multiply;\" />\\\r\n\\\r\n**Play time:**  Here\nis
        the code for an interesting shape.   \\\r\n\\\r\nWhat happens when you repeat\nit
        multiple times, turning between each iteration?   \\\r\n\\\r\nNotice that
        the\nturns in this shape add up to _420 degrees_, which means that when your
        artist\nis done drawing, it will be facing a different direction than when
        you started.  That\nnew direction is exactly _60 degrees_ to the _right_ of
        where you began.\\\r\n\\\r\n\n<hr/>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>Repeat\n4</b></summary>\r\n<br/>\r\nIf
        you want to come full circle in just 4 repetitions,\nyou need the artist to
        turn a total of **360 degrees/4 = 90 degrees** each\ntime.  You can do that
        by adding an extra `turn right by 30 degrees` block\nto the outer loop (since
        **60+30 = 90**.)  \r\n<br/>\r\n<img src=\"https://images.code.org/9da67a628ed72e87520a02a0d917e2af-image-1440132370113.44.12.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n<br/><br/>\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>Repeat\n6</b></summary>\r\n<br/>\r\nWhen
        you repeat the shape as-is 6 times, you get\na total rotation of **6x60 degrees**
        which is a full **360 degree** cycle.  \r\n<img\nsrc=\"https://images.code.org/b79f96b87097ce3afe8a6a5608d04e36-image-1440132287456.44.27.png\"
        \ width=\"500px;\"  style=\"mix-blend-mode:\nmultiply;\" />\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>Repeat\n12</b></summary>\r\n<br/>\r\nIf
        you want to repeat the image 12 times, you\nneed the artist to turn a total
        of **360 degrees/12 = 30 degrees** each iteration.  That\nmeans you will need
        to adjust the artist back a bit with `turn left by 30\ndegrees` before you
        repeat the shape again.   <br/><br/>\r\n<img src=\"https://images.code.org/ad254952522674496918561096817c66-image-1440132424792.44.01.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n</details>\r\n</h4>\r\n\r\nNow\nit's
        your turn!  Can you recreate each image by repeating the starting shape?  "
      Course 4 Artist 11: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time.\\\r\n\\\r\nThe repeated shape is almost identical\nto the one from the
        last puzzle, except that the length used in the first\nloop is a little smaller. "
      Course 4 Artist 12: "<img src=\"https://images.code.org/70795d84048767ae7fb65883f476b27c-image-1440050836837.01.09.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nFree
        Play Inspiration: You've now learned everything\nyou need to know to make
        a pattern like this! If this picture inspires you,\ntry to make something
        similar. Otherwise, create something all your own. \\\r\n\\\r\n<br/>"
      Course 4 Artist 13: Encore envie de jouer ?  Voici une toile vierge où tu peux
        concevoir tout ce que tu veux !
      Course 4 Artist 2: "Can you use a loop to draw the greyed\nout square?  \\\r\n(Each
        side is 300px long)"
      Course 4 Artist 20: "Still playing?  \\\r\n\\\r\nHere is a\nblank canvas where
        you can create whatever you want!"
      Course 4 Artist 3: "Try to figure out what happens if\nyou run this code (or
        press \"Run\" to test it).  \\\r\n\\\r\nThen, repeat it\nenough times to complete
        the drawing."
      Course 4 Artist 4: "How many degrees are in a circle?  \\\r\nFill\nin the repeat
        block with that number to create a circle of colors."
      Course 4 Artist 5: "Draw the other half of this design\nso it's symmetrical.
        \\\r\nThe triangles are equilateral and are 50 pixels\nlong.  \\\r\n\\\r\nYou
        may have to run the code several times to figure out all\nof the blocks that
        need to be added."
      Course 4 Artist 6: 'Termine le code pour dessiner ces triangles. Indice : il
        y a 3 triangles à l’intérieur d’une rotation de 360 degrés... combien de fois
        3 rentre dans 360 ?'
      Course 4 Artist 8: Dessine ce soleil en bouclant l’ensemble de ce bloc de code
        plusieurs fois.
      Course 4 Artist 8a: |-
        Tu te souviens de cette forme ?  Maintenant, nous allons te laisser la construire sans te donner aucun bloc pour commencer !
        Indice : il y a 3 triangles à l’intérieur d’une rotation de 360 degrés... combien de fois 3 rentre dans 360 ?
      Course 4 Artist Binary 1: "Here's a function that takes\na binary string of
        1's and 0's and instructs the artist to follow them from\nleft to right, top
        to bottom.  \\\r\n\\\r\nThe artist will fill-in the squares\nwhen it sees
        a 1 and ignore the square when it sees a 0. \\\r\n\\\r\n**Run this\ncode to
        see how the artist uses binary to draw this pattern.**"
      Course 4 Artist Binary 1a: |-
        Voici une fonction qui prend une chaîne binaire de 1 et de 0 et demande à l'artiste de les suivre de gauche à droite, et du haut vers le bas.  L'artiste remplira les carrés lorsqu’il verra un 1 et ignorera le carré quand il verra un 0.

        Exécute ce code pour voir comment l'artiste utilise des binaires pour dessiner ce motif.
      Course 4 Artist Binary Free Play 2b: "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\n\\\r\n<br/>"
      Course 4 Artist Binary pre1: "Binary is a way of representing\ninformation using
        only two options. In this case, <b>off</b> and <b>on</b>.\\\r\n<br/>\\\r\nHere,\nwe're
        going to use the number <b>0</b> as code for \"off\" and the number\n<b>1</b>
        as code for \"on\".\\\r\n\n<hr/>\\\r\nWe've provided you with a grid of\n\"pixels\"
        that you can walk through and make designs by turning on only certain\nsquares.\\\r\n\\\r\n<b>Use
        the blocks below to have the artist draw \"01010101\"\nin binary in the first
        row.</b>"
      Course 4 Artist Binary ryan: "Binary is a way of representing\ninformation using
        only two options.  Here, we're going to use the options\n\"off\" (represented
        by the number 0) and \"on\" (represented by the number\n1).   \\\r\n\\\r\nWe've
        provided you with a grid of \"pixels\" that you can walk\nthrough and make
        designs by turning on only certain squares.  Can you have\nthe artist draw
        \"01010101\" in binary in the first row?"
      Course 4 Artist For Loops 1: "Use a repeat block to draw\nthis triangle that
        is 50 pixels wide.\\\r\n\\\r"
      Course 4 Artist For Loops 11: "Remember back in a previous\nstage when we used
        a variable to control the number of sides in a shape? We\nare going to do
        the same thing with the `counter` variable now.  \\\r\n\\\r\nThis\npattern
        starts with a triangle and adds one side at a time until it draws\na decagon
        (10 sides). Each side should be 100 pixels long. \\\r\n\\\r\nHow will\nyou
        use the `counter` variable from the `for` loop to recreate this drawing?"
      Course 4 Artist For Loops 11a: "Let's put it all together!   \\\r\n\\\r\nUsing\nyour
        knowledge of `for` loops and the `counter` variable, create this drawing\nwhere
        each shape has two more sides than the last.  Make sure that each side\nis
        10 times as long as the number of sides in the polygon.\\\r\n\\\r\nVery little\nof
        the code has been provided for you."
      Course 4 Artist For Loops 13: Hmmm, ces formes sont plus grosses à chaque fois
        ! N'a-t-on pas déjà résolu ce problème avec des variables ? Comment pouvons-nous
        utiliser la variable «Compteur» pour rendre les côtés plus petits lorsqu’ils
        sont plus nombreux ? Au lieu d’avancer d’une distance définie, essaie d’avancer
        de (100 / compteur) pixels.
      Course 4 Artist For Loops 14: "If you turn a little bit\nmore or less than you
        normally would for a shape, it creates a neat effect.\n\\\r\n\\\r\nTry using
        some of the code from the last level, but turning 89 degrees\nto create this
        twisted square spiral."
      Course 4 Artist For Loops 2: "I've put the code for drawing\na triangle inside
        a `for loop` that counts from 50 to 100 by 10. \\\r\n\\\r\n<br/>\\\r\n<strong>NOTE:</strong>\nMake
        sure you look at the code _before_ you hit \"Run\"."
      Course 4 Artist For Loops 4: 'Comment modifierais-tu ce que tu as appris pour
        dessiner ces carrés ? Ils commencent à 15 pixels de long, le plus grand mesure
        300 pixels de long, et chaque carré est plus grand de 15 pixels que le dernier. '
      Course 4 Artist For Loops 5: "Good job on the last puzzle!\nLet's use that \"counter\"
        variable block again to draw this cool picture.\n\\\r\n\\\r"
      Course 4 Artist For Loops 6: Activité libre ! Essaie d'utiliser une « Boucle
        pour » afin de dessiner ta propre suite de formes grandissantes.
      Course 4 Artist For Loops 6a: Effectue trois petits changements dans le code
        du niveau précédent pour obtenir ça !
      Course 4 Artist For Loops 7: "What happens if you remove\nthe \"Repeat 3\" from
        this algorithm, keeping the \"move\" and \"turn\" blocks\nin the for loop?
        \\\r\n\\\r\n<br/>\\\r\nIn this spiraling triangle, each side is\n20 pixels
        longer than the last.\\\r\n\\\r"
      Course 4 Artist For Loops 8: "Just one little change to\nthe code from the last
        image can create this drawing. Can you figure out what\nthat change is?\\\r\n\\\r\nHint:
        \ You need to remove something!  "
      Course 4 Artist For Loops 8a: Un seul petit changement au code de la dernière
        image pourrait créer cette image. Peux-tu trouver quel est ce changement ?
      Course 4 Artist For Loops 9: "Can you make a spiral? Move\nforward from 1 to
        75 pixels, increasing by 1 pixel each time.\\\r\n\\\r"
      Course 4 Artist For Loops Challenge: "**Challenge:** Can\nyou figure out how
        to use all of the things you've learned to create this\nimage of polygons,
        all with 40 pixel sides?\\\r\n\\\r\nRemember, in order to create\na spiral,
        you cannot close the polygon.  This means that each shape will need\nto have
        one fewer sides than usual."
      Course 4 Artist For Loops Challenge_a: |-
        **Défi:** Utilise toutes les choses que tu as apprises pour créer cette image constituée de polygones, tous de côtés 40 pixels ?

        Besoin d'un indice ? Clique ici.
      Course 4 Artist For Loops inspire: "<br/><br/>\\\r\n<img\nsrc=\"https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png\"\nwidth=\"250px\"/>
        \ \\\r\n<br/><br/>\\\r\n**Free-Play Inspiration:** You've now\nlearned everything
        you need to know to make a pattern like this! If this picture\ninspires you,
        try to make something similar. Otherwise, create something all\nyour own."
      Course 4 Artist Functions 13.1: "Now, let's make a function\ncalled `jump to
        upper right` that moves the artist to the upper-right of the\noctagon that
        you just drew so we can finish this pattern.  \\\r\n<br/>\\\r\n_Hint:  To\nget
        yourself to the upper-right corner, try jumping in a pattern that makes\njust
        3/8 of the octagon._  "
      Course 4 Artist Functions Inspiration: "<img src=\"https://images.code.org/cf373e03bede480ae54aec72ce823454-image-1442951867535.54.11.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own."
      Course 4 Artist Functions challenge: "<img src=\"https://images.code.org/69f1c2b415f907c86aaa6ed2534c3682-image-1442870371171.13.38.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Challenge
        Level:** Use what you've learned in\nthis stage and others to figure out how
        to make the drawing above.  "
      Course 4 Artist Functions inspire: "<img src=\"https://images.code.org/6c6ff8e3b5a763926102033a94720f8b-image-1441300952649.19.47.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.  \\\r\n<br/>\\\r\n\\\r\n\n<h4>\r\n<details>\r\n<summary><b>Hints</b></summary>\r\n\\t<br/><br/>\r\n\\t<h5>\r\n\\t<details>\r\n\\t<summary><b>Hint\n#1</b></summary>\r\n
        \   \\t<br/>\r\n    \\tUse a `for loop`, then use its counter\nvariable inside
        of a nested `repeat` loop. \r\n    \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n
        \   \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>Hint\n#2</b></summary>\r\n
        \   \\t<br/>\r\n    \\tEach iteration, you should `draw\na square` then jump
        forward.\r\n    \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>Hint\n#3</b></summary>\r\n
        \   \\t<br/>\r\n    \\tYou will need to turn left by 90\ndegrees outside of
        your `repeat`, but still inside the `for loop`.\r\n    \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n
        \   \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>Solution</b></summary>\r\n
        \   \\t<br/>\r\n    \\t<br/>\r\n    \\t<img\nsrc=\"https://images.code.org/6b07c5de58a1fa573bef19182105f516-image-1441300922567.14.00.png\"\nwidth=\"450px\"/>\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n</details>\r\n</h4>\r\n\r\n<br/>\r\nWhat\nhappens
        if you make the squares a little bigger or smaller?  How about if\nyou turn
        right instead of left?"
      Course 4 Artist Inspire: "<img src=\"https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! If this picture inspires you,\ntry to make something similar. Otherwise,
        create something all your own. "
      Course 4 Artist Vars 1: "Let's draw an equilateral triangle.\n\\\r\n\\\r\nIt
        has to be exactly 100 pixels long on each side.\\\r\n\\\r\n<br/>\\\r"
      Course 4 Artist Vars 10: "Here's an algorithm that draws\na triangle out of
        smaller triangles. Can you modify it so that it uses the\n`sides` variable
        to draw each triangle? \\\r\n\\\r\n</br>\\\r\nLook through the\ncode, and
        every time you see the number 3, replace it with your `sides` variable.\nRemember
        to use the `set sides` block."
      Course 4 Artist Vars 11: "Here’s some more complicated\ncode using the same
        concepts from the last puzzle - what should you set the\n`sides` variable
        to in order to draw this picture made of squares?\\\r\n\\\r\n\n<p\nstyle=\"font-size:small;
        padding: 15px 15px 15px 40px; background-color:#dcf3f3;\nborder-radius:10px;\">\r\n\\tJust
        for fun: Try using a few different numbers\nto see what happens to the pattern!\r\n</p>"
      Course 4 Artist Vars 12: "Let's set the `sides` variable\nto 5. The more sides
        we add to this algorithm, the bigger this whole pattern\ngets! \\\r\n\\\r\n<br/>\\\r\nNotice
        that there is another variable called `length`.\n\\\r\nWe can now use that
        variable wherever we have a `move forward` block.\n\\\r\n\\\r\nSet the `length`
        variable to 75 for this shape."
      Course 4 Artist Vars 13: "When a shape has lots of sides,\neach side needs to
        be shorter if you want the whole pattern to fit on the\nscreen. \\\r\n\\\r\nLet's
        recreate the algorithm for this amazing pattern, but\ninstead of manually
        setting the `length` variable, let's use a math block\nwith the `sides` variable
        inside to make sure that each shape fits correctly.  \\\r\n\\\r\nThe\nperimeter
        of each polygon is 300 pixels."
      Course 4 Artist Vars 14: "**Free Play**: Check it out!\nNow your algorithm is
        nested within one more loop. Experiment with changing\nthe values of your
        two variables to draw cool patterns.\\\r\n\\\r\nFor even more\neffect, try
        playing with color!  Use random colors inside loops to see how\nit changes
        your design."
      Course 4 Artist Vars 3: 'Voici une boucle qui dessine un carré, mais il manque
        quelque chose. Peux-tu la corriger pour qu''elle utilise la variable «Longueur»
        pour déterminer la longueur de chaque côté? '
      Course 4 Artist Vars 6: "Here’s some code that can draw\nany regular polygon.
        \\\r\n\\\r\nThere’s a new variable called `sides` that is\nset to 4. \\\r\n\\\r\nCan
        you use the `sides` variable (along with the math block)\nto turn the right
        amount regardless of how many sides are in the polygon?"
      Course 4 Artist Vars 7: "Use what you learned in the last\npuzzle to create
        this hexagon using the `sides` variable.\\\r\n\\\r\nSee how you\ncould change
        just one value to draw a triangle,  square, pentagon, or octagon?"
      Course 4 Bee 1: "The bee can't tell what's under the\ncloud! \\\r\n\\\r\nUse
        the `if` block to check whether there is a flower under\nthe cloud. \\\r\n\\\r\nGet
        nectar one time, **ONLY** if there is a flower."
      Course 4 Bee 2: "Use the `if/else` block to check each\nobject to see if it's
        a flower or a honeycomb. \\\r\n\\\r\nIf it's a flower,\ncollect one nectar...otherwise,
        make one honey!"
      Course 4 Bee 3: "The unknown object is either a flower\nor a honeycomb. \\\r\n\\\r\nThis
        time, use the `if/else` block to collect one\nnectar **if** it is a flower,
        **else** make one honey (because then it would\nbe a honeycomb)."
      Course 4 Bee 4: "This purple flower may have either 3,\n2, or 1 nectar. \\\r\n\\\r\nHere
        an `if/else` block is combined with another `if/else`\nblock to create an
        `if/else-if/else` statement. \\\r\n\\\r\nComplete the solution\nto collect
        the unknown amount of nectar."
      Course 4 Bee 7: Utilise tout ce que tu as appris jusqu'à présent pour recueillir
        tout le nectar. La fleur pourpre peut avoir 3, 2 ou 1 nectars.
      Course 4 Bee For Loops 11: Quel problème présente cette boucle ? Regarde si
        tu peux la réparer et faire en sorte que les abeilles recueillent tout le
        nectar.
      Course 4 Bee Params 1: Utilise la fonction «Obtenir 3 nectars» qui fait tourner,
        se déplacer pour recueillir le nectar et revenir au point de départ. Écris
        une séquence pour recueillir tout le nectar en utilisant «Obtenir 3 nectars».
      Course 4 Bee Params 3: "Now there are flowers on both\nsides!  \\\r\n\\\r\nWe've
        added variables called `left` and `right` for you to\nuse, and now there is
        a parameter called `direction` inside `get 3 nectar`.\n\\\r\n\\\r\n**Edit
        `get 3 nectar` so that the bee turns the correct direction\nwhen the variables
        `left` or `right` are passed into the function.**"
      Course 4 Bee Params 6: "Wouldn't it be nice if we could\ncollect all of these
        nectars with a single function? \\\r\n\\\r\n<br/>\\\r\nTry\nadding a new parameter
        to your function called `nectar units` to control the\namount of nectar to
        collect. You'll probably want to rename the function\ntoo!"
      Course 4 Bee Params 7: "Try using your new function to\ncollect all of this
        nectar.\\\r\n\\\r\n<br/>\\\r"
      Course 4 Bee Params 8: "**Challenge:** Now there's honey\nto deal with too!
        \\\r\n\\\r\nRewrite your function to use both the number of\nhoney units and
        the number of nectar units.  How would you use those numbers\nto decide what
        you should do?"
      Course 4 EC 3: "**Functions Super Challenge:** Use what\nyou learned in the
        previous level to draw an image like this.\\\r\n\\\r\n_Note:\nThe code becomes
        more simple if you incorporate parameters._\\\r\n\\\r\n<br/>\\\r\n<img\nsrc=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ \\\r\n\\\r\n\\\r"
      Course 4 EC 3a: "**Extreme Challenge:** No rules. No clues.\nJust the challenge!\\\r\n\\\r\n<br/>\\\r\n<img
        src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ \\\r\n\\\r\n\\\r"
      Course 4 Play Lab Params 1: "Here's a function called\n`jump` that causes your
        main character to jump up 100 pixels. \\\r\n\\\r\nRun\nthe program and use
        the jump function to collect all of the flags by moving\nthe dog with the
        arrow keys."
      Course 4 Play Lab Params 10: "We've added one last function\nfor you.\\\r\n\n<hr/>\\\r\n\\\r\n<h4>\\\r\nUse
        an `if` statement to program your game\nto call the `level_up` function only
        when `player_score` becomes greater than\na certain number.<br/><br/>\\\r\n</h4>\\\r\n<i>For
        example: `player_score` > 6</i>\\\r\n\\\r\n\\\r\n<hr/>\\\r\n<i>Play\nthe game,
        and make it to level 3 to move to the next puzzle.</i>"
      Course 4 Play Lab Params 2: "Now we've got flags that\nare too high for our
        current jump! Let's use both the \"up\" and \"down\"\narrows so that we can
        have multiple jump heights.  \\\r\n\\\r\nWe need to add\na parameter to our
        jump function called `height`.  \\\r\n\n-   The up arrow should\n    cause
        the dog to jump 200 pixels \\\r\n-   The down arrow should make it jump\n
        \   only 100 pixels. \\\r"
      Course 4 Play Lab Params 3: "We have added another parameter\nto the jump function
        so that we can use it with other actors. Each actor is\nrepresented by a number,
        starting from one. \\\r\n\\\r\n<br/>\\\r\nEdit the `jump`\nfunction so that
        it uses the `actor` parameter to make the correct character\njump. "
      Course 4 Play Lab Params 4: Voici une fonction appelée «Patrouille». Modifie-la
        pour déplacer le Chat vers le haut de 400 pixels, puis vers le bas de 400
        pixels.
      Course 4 Play Lab Params 7: "Let's have some fun! Look\nat the code provided
        to see if you can figure out what each block does.  \\\r\n\\\r\nWhen\nyou're
        done, use the arrow keys to control Dog and collect all of the flags.\\\r\n\\\r\n**NOTE:**\nYou
        don't need to make any changes to the program"
      Course 4 Play Lab Params 8: Utilise un bloc « Quand acteur touche » pour renvoyer
        le Chien en haut à gauche UNIQUEMENT s'il touche un des autres acteurs.
      Course 4 Play Lab Params 9: "Here's our game from an\nearlier stage but most
        of the code is hidden. We've added a new function\ncalled `score_points.`\\\r\n<br/>\\\r\n\n<hr>\\\r\n<br/>\\\r\n<h4>\\\r\nEdit
        the function\nso that a new parameter called `points` is added to `player_score`.
        \ \\\r\n<br/>\\\r\nThe\nvariable `player_score` should increase each time
        Dog tags Cat with pie, and\ndecrease each time that Cat tags Dog with a sandwich.\\\r\n</h4>\\\r\n<br/>\\\r\n<hr>\\\r\n*Note:\nWhen
        you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove
        on to the next puzzle.*"
      Course 4 Play Lab Vars 1: "This time you don't have to\nwrite any code, just
        hit `Run` to play the game! \\\r\n\\\r\n<br/>\\\r\nIn this\ngame, you're the
        dog who is trying to collect more flags than the cat. Use\nthe down arrow
        to control the dog. Press `Finish` when you're done playing."
      Course 4 Play Lab Vars 2: La course dans ce dernier puzzle n'était pas très
        équitable ! Change la variable «Vitesse du chien» pour t'assurer que tu peux
        obtenir plus de drapeaux que le chat. Le premier à obtenir 10 drapeaux gagne
        !
      Course 4 Play Lab Vars 3: "Here's a new kind of game!\n\\\r\n\\\r\nYou don't
        need to change anything on this level.\\\r\n\\\r\n**Directions:**\nUse the
        left and right arrows to move, and the up arrow to jump. See if you\ncan collect
        all of the flags."
      Course 4 Play Lab Vars 4: "Now we're using a variable\ncalled `height` to control
        how high the dog can jump. Update the `height`\nvariable so that the dog can
        jump high enough to reach all the flags. \\\r"
      Course 4 Play Lab Vars 6: "<h5><b>\\\r\nIn our game, how\nshould we score points?
        \\\r\n</b></h5> \\\r\n<br/>\\\r\n\\\r\n1. Add 1 to your `points`\nvariable
        each time Dog hits Cat with a piece of pie.  <br/>    <br/> \\\r\n2.\nUse
        the `when actor 2 touches anything` event to trigger an update to your\nscore.
        You can increment your variable by setting `points = points + 1.`  <br/>   <br/>\n\\\r\n3.
        Get your score up to 10 to pass the level.\\\r\n\\\r\n<br/><br/>\\\r\n<h4>\\\r\n**Note:**\nUse
        the right arrow to throw pie!\\\r\n</h4>"
      Course 4 Play Lab Vars 7: "Nice, now let's make sure\nthis game isn't too easy
        to play!  \\\r\n\\\r\nAny time Dog (actor 1) gets hit\nby a sandwich from
        Cat (actor 2), you should lose a point. \\\r\n\\\r\nStart with\n10 points
        so it's not too hard. Let your score drop down from 10 to 0 to\npass the level."
      Course 4 Play Lab Vars 9: "Free Play time! Here are all\nof the variables we've
        played with so far in this stage, as well as a few\nmore in case you want
        them. \\\r\n\\\r\nNotice that there are now so many blocks\nin our toolbox
        that they need to be organized!  Here, we've put each piece\ninto an appropriate
        category.  Take some time to explore everything that is\navailable. When you're
        done browsing, make a game or story using repeats,\nvariables, and events.
        \ \\\r\n\\\r\n_Hint: scroll down to see all the commands\nin the workspace._"
      Course 4 Play Labs For Loops 1: Nous allons faire dire chaque nombre de 1 à
        100 au chien. Utilise une « Boucle pour » et le bloc « Compteur » pour faire
        parler la variable chaque fois que la boucle est exécutée.
      Course 4 Play Labs For Loops 4: "Changing the increment\ncan be helpful, but
        we're still counting linearly (each number is the same\ndistance from the
        last) What if I wanted to count exponentially? \\\r\n\\\r\n<br/>\\\r\nWithout\nchanging
        the settings in this for loop, can you count 1, 4, 9, 16, 25... (counter\nsquared)?"
      Course 4 Play Labs For Loops 4a: "Now, let's blend the\nvariables from Stage
        7 together with your `counter` variable to make some\nmagic happen.   \\\r\n\\\r\nIn
        this puzzle, Dog will count from **0** to **1000**\nby `increment`.  Set the
        `increment` variable to **10** at the beginning of\nyour code to see what
        happens."
      Course 4 Play Labs For Loops 5a: "In this puzzle, Dog\nwill be your time keeper.\\\r\n\\\r\nDog
        will count from **0** to **30** by `increment`.  The\n`increment` variable
        will begin with a value of **1**.\\\r\n\\\r\nCan you make\nit so that each
        time you click Dog, `increment` increases by **2**?  Click\nthe forward arrow
        to run the `for loop`.  \\\r\n\\\r\n**Note:** Run the loop a\ncouple of times,
        clicking Dog before each one."
      Course 4 Play Labs For Loops 6a: "Now that we've seen\nhow to control our `for
        loop` using variables inside of our program, let's\nmake a game!\\\r\n\\\r\nDog
        will still keep time by counting with our `for loop`\nby `increment`, but
        this time we will add The Wizard into the mix.  Can you\nchange the code so
        that `increment` goes up by two each time The Wizard is\nclicked?\\\r\n\\\r\nWatch
        out!  The Wizard moves quickly!"
      Course 4 Play Labs For Loops 7a: "Now we're getting somewhere!  What\nif we
        start counting how many times we can click The Wizard before Dog gets\nto
        30?  \\\r\n\\\r\nFinish adding blocks to The Wizard so that every time he's\nclicked
        the variable `clicked` increases by one. You can ignore `increment`\nfor now.\\\r\n\\\r\n**Note:**
        Dog will start counting when you click `Run`."
      Course 4 Play Labs For Loops 8: "Now, help the actors\nmove as they count.  \\\r\n\\\r\nDog
        should move and count by adding 2 (\\`counter\n\n-   2`) each time.  Cat will
        move and count by multiplying by 2 (`counter \\*2`)  each\n    time. Penguin
        will move and count to the power of 2 (`counter ^ 2\\`) each time.  Who\n
        \   will reach their flag first?"
      Course 4 Play Labs For Loops 8a: "To finish our game,\nwe need to bring back
        the `increment` variable!    Let's tie it to the level\nof the game.\\\r\n\\\r\n\n1.
        \ Keep track of the number of times The Wizard is clicked.  \\\r\n2.  2)\n
        \   If The Wizard is clicked at least 10 times before Dog counts to 30, raise\n
        \   `increment` by 1 and start again.  \\\r\n3.  If The Wizard does not get
        clicked\n    at least 10 times, the game is over.  "
      Course 4 Playlab For Loops 4b: "Now, these two characters\nare going to race!
        \ \\\r\n\\\r\nEach of them will move `counter` steps at a time,\nbut their
        counters will have different values because of the `for` loops.  \\\r\n\\\r\nCan\nyou
        change the **increment** in one of the loops so that the race is a tie?"
      Course 4 Playlab For Loops 5b: Ajuste le pas de ces boucles "for" pour que les
        deux personnages terminent exactement au même endroit.
      Course 4 Playlab For Loops 6b: "Now we're going to use\n`for` loops in a whole
        different way!\\\r\n\\\r\nThis game gets hard quickly because\nthe time between
        disappearances shrinks fast!\\\r\n\\\r\n\n<hr/>\r\n\r\n**Edit this\n`for`
        loop to create a game that's fun for you to play!**  \r\n\r\n<hr/>\r\n\r\nPress\n\"Run\"
        and click Madame Unicorn as many times as you can.  Can you beat our\nscore
        of 24? "
      Course 4 SCF 1b: "**Functions Super Challenge:** Can you\nfigure out how to
        collect all of this honey with the fewest blocks possible?\\\r"
      Course 4 SCF 2: "**Functions Super Challenge:** Use what\nyou learned in the
        previous level to draw an image like this.\\\r\n\\\r\n_Note:\nThe code becomes
        more simple if you incorporate parameters._  "
      Course 4 SCF 3 Fail 1: "**Functions Super Challenge #1:**\n\\\r\n\\\r"
      Course 4 SCF 3 Fail 2: "**Functions Super Challenge #1:**\n\\\r\n\\\r"
      Course 4 SCF 3: "**Functions Super Challenge:** Use what\nyou learned in the
        previous level to draw an image like this.\\\r\n\\\r\n_Note:\nThe code becomes
        more simple if you incorporate parameters._\\\r\n\\\r\n<br/>\\\r\n<img\nsrc=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ "
      Course 4 SCFL 1a: "**For Loops Super Challenge:** Can\nyou get Scrat to his
        acorn using as few blocks as possible?\\\r"
      Course 4 SCFL 1b: "**For Loops Super Challenge:** Can\nyou get Scrat to his
        acorn using as few blocks as possible?\\\r"
      Course 4 SCFL 2: "**For-Loops Super Challenge:** Solve\nthis puzzle with the
        fewest number of blocks possible.  \\\r\n<br/>"
      Course 4 SCFL 3: "**For-Loops Super Challenge:** Can you\nfigure out how to
        re-create this drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      Course 4 SCFL 4: "**For-Loops Super Challenge:** Can you\nfigure out how to
        re-create this drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/407f502735beec686187451bdf67aada-image-1446002848700.59.34.png\"\nwidth=\"350px\"/>"
      Course 4 SCFL 5: "**For-Loops Super Challenge #5:** Can\nyou figure out how
        to re-create this drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/407f502735beec686187451bdf67aada-image-1446002848700.59.34.png\"\nwidth=\"350px\"/>\\\r\n\\\r\n\n<h4>\r\n<details>\r\n<summary><b>Hints</b></summary>\r\n\\t<br/><br/>\r\n\\t<h5>\r\n\\t<details>\r\n\\t<summary><b>Hint\n#1</b></summary>\r\n
        \   \\t<br/>\r\n    \\tThe color change happens using the\n`set color with
        red, green, blue` block.  Red is always the value of `counter`,\ngreen is
        always `255 - counter`, and blue remains constant at 255 exactly.\r\n    \\t<br/><br/>\r\n
        \   </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>Hint\n#2</b></summary>\r\n
        \   \\t<br/>\r\n    \\tEach shape is a square with sides\nthat are `counter`
        pixels long, starting with 5px, and increasing by 5px all\nthe way up to 200px.\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>Hint\n#3</b></summary>\r\n
        \   \\t<br/>\r\n    \\tThe artist turns 15 degrees between\neach square.\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>Solution</b></summary>\r\n
        \   \\t<br/>\r\n    \\t<br/>\r\n    \\t<img\nsrc=\"https://images.code.org/0bf4c87e33459f832258939ec53ad595-image-1446002848701.59.15.png\"\nwidth=\"450px\"/>\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n</details>\r\n</h4>"
      Course 4 SCFL 6: "**For-Loops Super Challenge:** Can you\nfigure out how to
        re-create this drawing with a single loop? \\\r\n\\\r\n<img\nsrc=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      Course 4 SCFL 7: "**For-Loops Super Challenge:** The artist\nwants to catch
        some waves! Can you figure out how to re-create this drawing?\n\\\r\n\\\r\n<img
        src=\"https://images.code.org/fba3423f2e9a405d4d3859de32cdb0f3-image-1446102880655.13.36.png\"\nwidth=\"350px\"/>"
      Course 4 SCFP 1: Crée une fonction avec des paramètres qui permettent à l'Artiste
        de sauter vers l'avant ou l'arrière de «x» pixels, et aussi vers le haut ou
        le bas de «y» pixels (en utilisant des chiffres positifs et négatifs).
      Course 4 SCV 1: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Variables
        Super Challenge:** You've now learned\neverything you need to know to make
        a pattern like this! This puzzle is meant\nto be difficult.  Can you stick
        with it until you figure out the solution?"
      Course 4 SCV 2: "<img src=\"https://images.code.org/85f0b27009edd86eff78692004b9ed52-image-1444712655590.02.32.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Variables
        Super Challenge:** You've now learned\neverything you need to know to make
        a pattern like this! This puzzle is meant\nto be difficult.  Can you stick
        with it until you figure out the solution?"
      Course 4 SCV 3: "**Variables Super Challenge:** You've\nnow learned everything
        you need to know to solve this puzzle! This game is\nmeant to be difficult.
        \ Can you stick with it until you figure out the solution?\\\r\n\\\r\n\n<hr/>\\\r\n\\\r\nNow\nfor
        a game of tag!  Tag Cat to get 2 points. Tag Penguin to get 3 points.  Get\nexactly
        10 points to win!\\\r\nBut be careful, when Cat and Penguin tag each\nother,
        they take points away.\\\r\n\\\r\n<strong>\\\r\nAdd the blocks necessary\nto
        make this game work the way it's been explained. \\\r\n- How will you get\nDog
        to move in all directions using the arrow keys?  \\\r\n- How will you add\npoints
        when Dog tags Cat or Penguin?  \\\r\n- How will you subtract points when\nCat
        and Penguin touch?\\\r\n</strong>\\\r\n\\\r\n<hr/>"
      Course 4 SCV 6: "<img src=\"https://images.code.org/499fc71a0a06bacb68a9789ad57f8148-image-1445574373673.16.44.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Variables
        Super Challenge:** You've now learned\neverything you need to know to make
        a pattern like this! This puzzle is meant\nto be difficult.  Can you stick
        with it until you figure out the solution?  "
      Course 4 SCVP 1: Crée une fonction avec des paramètres qui permettent à l'Artiste
        de sauter vers l'avant ou l'arrière de «x» pixels, et aussi vers le haut ou
        le bas de «y» pixels (en utilisant des chiffres positifs et négatifs).
      CourseD_Dance_Party_01: |-
        _Faisons une fête dansante !_

        Faites glisser le bloc « créer un nouveau » dans l’espace de travail, puis connectez-le à l’intérieur du bloc « configuration » pour créer votre premier danseur.

        -   _Vous pouvez également cliquer sur l'ampoule située à gauche si vous souhaitez plus d'informations ou des défis supplémentaires._
      CourseD_Dance_Party_02: |-
        Faisons danser cet orignal !

        Faites glisser le bloc <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> sur l'espace de travail. Connectez-le sous le bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Votre danseur devrait commencer un nouveau mouvement après la quatrième mesure.

        **Les mesures** sont utilisées pour compter le temps en musique. Dans ce tutoriel, une mesure dure quatre temps.
      CourseD_Dance_Party_03: |-
        _Voilà qu'on danse !_

        Ajoutez un bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> à votre espace de travail. Faites en sorte que le danseur commence un nouveau mouvement après 6 mesures.
      CourseD_Dance_Party_04: |-
        _Cette danse a besoin d'être un peu plus éclatante !_

        Recherchez un nouveau bloc dans votre boîte à outils qui ajoute un effet de fond derrière votre danseur. Regardez les effets changer avec la musique !
      CourseD_Dance_Party_05: |-
        Utilisez un autre nouveau bloc pour faire changer les mouvements du danseur **toutes les 2 mesures** !

        \*Choisir « (Suivant) », « (Précédent) » ou « (Aléatoire) » indique au danseur d'effectuer un mouvement différent à chaque fois que le programme est exécuté.
      CourseD_Dance_Party_06: |-
        _Nous avons besoin de plus de danseurs !_

        Créez un danseur de sauvegarde appelé « backup\_dancer1 » pour danser avec le chat.
      CourseD_Dance_Party_08: |-
        Chaque danseur possède un ensemble de _propriétés_ qui contrôlent son apparence.

        Vous pouvez donner l’impression qu’un danseur est à l’arrière-plan en réduisant sa _taille_. Pouvez-vous donner la même taille aux deux danseurs de sauvegarde ?
      CourseD_Dance_Party_09: |-
        Les danseurs ont une propriété « nuance » qui peut ajouter une couche de couleur. Essayez de modifier la nuance de l’un de vos danseurs.
        \*Les nuances vont mélanger la couleur que vous choisissez avec les couleurs du danseur.
      CourseD_Dance_Party_10: |-
        Nous savons maintenant comment changer les propriétés d'un danseur. Nous pouvons également faire en sorte que les mêmes propriétés correspondent automatiquement à la musique en utilisant ce bloc :
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Ce programme utilise le volume « grave » de la musique (les sons graves) pour contrôler la hauteur d'un danseur. Peux-tu aussi faire en sorte que l'autre danseur réponde à la musique ?
      CourseD_Dance_Party_11: |-
        Le bloc <xml><block type="Dancelab_whenKey"></block></xml> vous permet d'exécuter le programme lorsque vous appuyez sur la flèche dirigée vers le haut.

        Vous pouvez changer le mouvement de danse, changer les propriétés d'un danseur ou faire un mouvement rapide une seule fois. Soyez créatif et cherchez de nouveaux blocs !
      CourseD_Dance_Party_11_5: |-
        Jetez un œil à ce bloc :

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Maintenant, vous pouvez créer un groupe de danseurs à la fois !

        Essayez d’utiliser certains des blocs « tous les canards » pour concevoir un programme qui fera danser ensemble tous les canards.
      CourseD_Dance_Party_11b: Il est temps de danser ! Le Chat fait le dab lorsque
        vous appuyez sur la touche fléchée gauche. Faites le Robot faire le « drop
        » lorsque vous appuyez sur la touche fléchée droite.
      CourseD_Dance_Party_12: Prends ton rythme ! Créez votre propre danse à partager
        avec vos amis.
      CourseE_HOC 2018 Level_1: Il vous faudra du matériel pour ce voyage. Prenez
        un **bateau** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        dans le **coffre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Il y a une **pieuvre** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        cachée dans ce monument sous-marin, la trouverez-vous ?
      CourseE_HOC 2018 Level_11: Construisez un mur en **prismarine** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        autour du béton noir. Cela activera le **conduit** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        et vous aurez relevé le défi !
      CourseE_HOC 2018 Level_2: On avance plus facilement en bateau qu'à la nage,
        en eaux profonde ! Allez au bout du quai et montez à bord.
      CourseE_HOC 2018 Level_3: À vos rames pour naviguer sur les mers et pêcher la
        **morue** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Donnez la morue au **dauphin** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Utilisez un bloc répétition pour traverser l'océan plus rapidement.
      CourseE_HOC 2018 Level_5: Il y a une **coquille de nautile** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        par ici ! Explorze l'épave pour trouver le **coffre** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      CourseE_HOC 2018 Level_6: Il n'a pas l'air de faire chaud ! Attrapez un **saumon**
        ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        en allant vers les ruines sous-marines.
      CourseE_HOC 2018 Level_7a: Vous avez découvert les ruines sous-marines. Fouillez
        le grès à la recherche d'un **coffre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        contenant un trésor de **prismarine** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      CourseE_HOC 2018 Level_8: D'abord des icebergs, et maintenant de la lave ? Traversez
        cette île volcanique et dénichez le **poisson tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        dans le récif de corail.
      CourseE_HOC 2018 Level_9b: Vous voici enfin au récif, partez à la recherche
        du **Cœur de l'océan** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) !
        Utilisez les coraux bleus et rouges pour atteindre le **coffre** au trésor ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      CourseF_PlayLab_vars10: "Free Play time! Here are all\nof the variables we've
        played with so far in this stage, as well as a few\nmore in case you want
        them. \\\r\n\\\r\nNotice that there are now so many blocks\nin our toolbox
        that they need to be organized!  Here, we've put each piece\ninto an appropriate
        category.  Take some time to explore everything that is\navailable. When you're
        done browsing, make a game or story using repeats,\nvariables, and events.
        \ \\\r\n\\\r\n_Hint: scroll down to see all the commands\nin the workspace._"
      CourseF_PlayLab_vars2: La course dans ce dernier puzzle n'était pas très équitable
        ! Change la variable «Vitesse du chien» pour t'assurer que tu peux obtenir
        plus de drapeaux que le chat. Le premier à obtenir 10 drapeaux gagne !
      CourseF_PlayLab_vars3: "Here's a new kind of game!\n\\\r\n\\\r\nYou don't need
        to change anything on this level.\\\r\n\\\r\n**Directions:**\nUse the left
        and right arrows to move, and the up arrow to jump. See if you\ncan collect
        all of the flags."
      CourseF_PlayLab_vars4: "Now we're using a variable\ncalled `height` to control
        how high the dog can jump. Update the `height`\nvariable so that the dog can
        jump high enough to reach all the flags. \\\r"
      CourseF_PlayLab_vars6: "<h5><b>\r\nIn our game, how\nshould we score points?
        \r\n</b></h5> \r\n<br/>\r\n\r\n1. Add 1 to your `points`\nvariable each time
        Dog hits Cat with a piece of pie.  <br/>    <br/> \r\n2.\nUse the `when actor
        2 touches anything` event to trigger an update to your\nscore. You can increment
        your variable by setting `points = points + 1.`  <br/>   <br/>\n\r\n3. Get
        your score up to 10 to pass the level.\r\n\r\n<br/><br/>\r\n<h4>\r\n**Note:**\nUse
        the right arrow to throw pie!\r\n</h4>"
      CourseF_PlayLab_vars7: "<h5><b>\r\nIn our game, how\nshould we score points?
        \r\n</b></h5> \r\n<br/>\r\n\r\n1. Add 1 to your `points`\nvariable each time
        Dog hits Cat with a piece of pie.  <br/>    <br/> \r\n2.\nUse the `when actor
        2 touches anything` event to trigger an update to your\nscore. You can increment
        your variable by setting `points = points + 1.`  <br/>   <br/>\n\r\n3. Get
        your score up to 10 to pass the level.\r\n\r\n<br/><br/>\r\n<h4>\r\n**Note:**\nUse
        the right arrow to throw pie!\r\n</h4>"
      CourseF_PlayLab_vars8: "<h5><b>\r\nIn our game, how\nshould we score points?
        \r\n</b></h5> \r\n<br/>\r\n\r\n1. Add 1 to your `points`\nvariable each time
        Dog hits Cat with a piece of pie.  <br/>    <br/> \r\n2.\nUse the `when actor
        2 touches anything` event to trigger an update to your\nscore. You can increment
        your variable by setting `points = points + 1.`  <br/>   <br/>\n\r\n3. Get
        your score up to 10 to pass the level.\r\n\r\n<br/><br/>\r\n<h4>\r\n**Note:**\nUse
        the right arrow to throw pie!\r\n</h4>"
      CourseF_PlayLab_vars9: "Nice, now let's make sure\nthis game isn't too easy
        to play!  \\\r\n\\\r\nAny time Dog (actor 1) gets hit\nby a sandwich from
        Cat (actor 2), you should lose a point. \\\r\n\\\r\nStart with\n10 points
        so it's not too hard. Let your score drop down from 10 to 0 to\npass the level."
      D_Frozen_nested3: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\r\nTake a look at these examples\nwith
        polygons:  \r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\r\n\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      D_Frozen_nested4: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      D_Frozen_nested5: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      D_Frozen_nested6: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      D_Frozen_nested7: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Here\n    is an example
        of stairs that use a 76 degree turn:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      D_Frozen_nested8: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      D_Frozen_nested9: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      Dance Party Template 1_2019: Modèle
      Dance Party Template 2_2019: Modèle
      Dance_Party_01: |-
        _Faisons une fête dansante !_

        Faites glisser le bloc « créer un nouveau » dans l’espace de travail, puis connectez-le à l’intérieur du bloc « configuration » pour créer votre premier danseur.

        -   _Vous pouvez également cliquer sur l'ampoule située à gauche si vous souhaitez plus d'informations ou des défis supplémentaires._
      Dance_Party_01_low: |-
        _Faisons une fête dansante !_

        Faites glisser le bloc « créer un nouveau » dans l’espace de travail, puis connectez-le à l’intérieur du bloc « configuration » pour créer votre premier danseur.

        -   _Vous pouvez également cliquer sur l'ampoule située à gauche si vous souhaitez plus d'informations ou des défis supplémentaires._
      Dance_Party_02: |-
        Faisons danser cet orignal !

        Faites glisser le bloc <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> sur l'espace de travail. Connectez-le sous le bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Votre danseur devrait commencer un nouveau mouvement après la quatrième mesure.

        **Les mesures** sont utilisées pour compter le temps en musique. Dans ce tutoriel, une mesure dure quatre temps.
      Dance_Party_03: |-
        _Voilà qu'on danse !_

        Ajoutez un bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> à votre espace de travail. Faites en sorte que le danseur commence un nouveau mouvement après 6 mesures.
      Dance_Party_04: |-
        _Cette danse a besoin d'être un peu plus éclatante !_

        Recherchez un nouveau bloc dans votre boîte à outils qui ajoute un effet de fond derrière votre danseur. Regardez les effets changer avec la musique !
      Dance_Party_05: |-
        Utilisez un autre nouveau bloc pour faire changer les mouvements du danseur **toutes les 2 mesures** !

        \*Choisir « (Suivant) », « (Précédent) » ou « (Aléatoire) » indique au danseur d'effectuer un mouvement différent à chaque fois que le programme est exécuté.
      Dance_Party_06: |-
        _Nous avons besoin de plus de danseurs !_

        Créez un danseur de sauvegarde appelé « backup\_dancer1 » pour danser avec le chat.
      Dance_Party_08: |-
        Chaque danseur possède un ensemble de _propriétés_ qui contrôlent son apparence.

        Vous pouvez donner l’impression qu’un danseur est à l’arrière-plan en réduisant sa _taille_. Pouvez-vous donner la même taille aux deux danseurs de sauvegarde ?
      Dance_Party_09: |-
        Les danseurs ont une propriété « nuance » qui peut ajouter une couche de couleur. Essayez de modifier la nuance de l’un de vos danseurs.
        \*Les nuances vont mélanger la couleur que vous choisissez avec les couleurs du danseur.
      Dance_Party_10: |-
        Nous savons maintenant comment changer les propriétés d'un danseur. Nous pouvons également faire en sorte que les mêmes propriétés correspondent automatiquement à la musique en utilisant ce bloc :
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Ce programme utilise le volume « grave » de la musique (les sons graves) pour contrôler la hauteur d'un danseur. Peux-tu aussi faire en sorte que l'autre danseur réponde à la musique ?
      Dance_Party_11.5_test: |-
        Jetez un œil à ce bloc :

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Maintenant, vous pouvez créer un groupe de danseurs à la fois !

        Essayez d’utiliser certains des blocs « tous les canards » pour concevoir un programme qui fera danser ensemble tous les canards.
      Dance_Party_11: |-
        Le bloc <xml><block type="Dancelab_whenKey"></block></xml> vous permet d'exécuter le programme lorsque vous appuyez sur la flèche dirigée vers le haut.

        Vous pouvez changer le mouvement de danse, changer les propriétés d'un danseur ou faire un mouvement rapide une seule fois. Soyez créatif et cherchez de nouveaux blocs !
      Dance_Party_11_5: |-
        Jetez un œil à ce bloc :

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Maintenant, vous pouvez créer un groupe de danseurs à la fois !

        Essayez d’utiliser certains des blocs « tous les canards » pour concevoir un programme qui fera danser ensemble tous les canards.
      Dance_Party_11b: Il est temps de danser ! Le Chat fait le dab lorsque vous appuyez
        sur la touche fléchée gauche. Faites le Robot faire le « drop » lorsque vous
        appuyez sur la touche fléchée droite.
      Dance_Party_12: Prends ton rythme ! Créez votre propre danse à partager avec
        vos amis.
      Dance_Party_extras_battle: |-
        # Équipes de danse

        Voici un concours de danse entre deux équipes. Les touches fléchées contrôlent l’un des danseurs et les touches « w,a,s,d » contrôlent l’autre. Avoir une danse avec un ami, puis essayer d'améliorer cette danse.

        -   Ajouter plus de touches pour contrôler les danses
        -   Faire que les danseurs de soutien répondent également lorsque les touches sont enfoncées
        -   Alternez le danseur toutes les 4 mesures en définissant sa visibilité
      Dance_Party_extras_every_beat: |-
        # Noires

        La plupart de nos danses ont utilisé des mesures entières, mais chaque mesure est composée de 4 noires. Cette danse utilise « toutes les 0,25 mesures » pour faire applaudir le danseur sur chaque noire.

        Cette danse utilise également a _conditional_ block pour contrôler quand le bloc « toutes les 0,25 mesures » peut changer la danse. Essayez de changer les nombres dans le bloc conditionnel pour voir comment cela change la danse.

        -   Expérimentez avec d'autres durées de notes (tel que 0,5 pour une blanche ou 0,125 pour une croche).
        -   Ajoutez certains événements « après la mesure ».
        -   Changez les « mesures » en « secondes » et essayez de chronométrer vos danses de cette façon.
      Dance_Party_extras_layout: |-
        # Soyons informés !

        Découvrez cette danse qui utilise le bloc « mise en page » pour modifier la formation des danseurs de secours pendant de la danse. Essayez l’une de ces idées pour l’étendre :

        -   Créez un deuxième groupe de danseurs dans une mise en page différente
        -   Changez la mise en page quand une touche est enfoncée
        -   Modifier une propriété lorsque les danseurs changent de formation
      Dance_Party_extras_on_beat: |-
        # grave, médium et aigu

        Cette danse utilise des événements de « de pointe » pour déclencher le code lorsque différentes parties de la musique deviennent fortes. Essayez de bricoler différentes chansons pour voir comment elles changent la danse.
      Dance_Party_extras_speed: |-
        # Accélérez, ralentissez

        Cette danse finale utilise le bloc « vitesse définie » pour contrôler la rapidité avec laquelle chaque danseur se déplace. Essayez d’expérimenter avec différentes vitesses à différents moments de la chanson. N'hésitez pas à continuer à bricoler sur cette danse, ou à revenir à l'une des danses précédentes pour les rendre encore plus cool.
      Dance_Party_extras_visible: |-
        # Où iraient-ils ?

        Cette danse montre et cache deux groupes de danseurs différents. Jetez-y un coup d'œil, puis essayez d'ajouter votre propre style.

        -   Ajoutez un autre groupe de danseurs
        -   Affichez et masquez les danseurs à l'aide des touches fléchées
        -   Cachez tous les danseurs et passez à un effet d’arrière plan excitant
      Escape Room Example: "# Room Escape\\\r\n\n\\\r\nIn today's\nworkshop you are
        going to be working on making a room escape app!  This level\nhas an example
        app that you should play around with to get the feel for what\nyou will be
        creating.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Click RUN to start the
        app\\\r\n-   \\*\n    Try to find the key that will open the door."
      Final Room Escape App: "# You've done it!\\\r\n\n\\\r\nYou\nmade a room escape!
        Now its time to customize it. \\\r\n\\\r\nConsider:\\\r\n\\\r\n\\*\nAdd more
        style to the room\\\r\n\n-   Adding more things users can interact with\n
        \   in the room\\\r\n-   Try to make your secret code random\\\r\n-   Adding
        more rooms"
      Food Fight!: "We've added one last function\nfor you.\\\r\n\n<hr/>\\\r\n\\\r\n<h4>\\\r\nUse
        an `if` statement to program your game\nto call the `level_up` function only
        when `player_score` becomes greater than\na certain number.<br/><br/>\\\r\n</h4>\\\r\n<i>For
        example: `player_score` > 6</i>\\\r\n\\\r\n\\\r\n<hr/>\\\r\n<i>Play\nthe game,
        and make it to level 3 to move to the next puzzle.</i>"
      Formative versus Summative Assessment: |-
        Le
        lien suivant est une ressource qui fournit des définitions et exemples d’évaluations formatives et sommatives :
      Function intro Ryan: "Une **fonction** nommée « construire un pont » se trouve
        dans votre espace de travail.  Tout le code nécessaire pour traverser la rivière
        est inclus ! \\\r\n \\\r\nPlacez deux fois le petit bloc vert dans votre espace
        de travail pour corriger le chemin et amener {currentPlayerName} vers la torche
        de redstone [redstone_torch]."
      Function intro Ryan_2019: "Une **fonction** nommée « construire un pont » se
        trouve dans votre espace de travail.  Tout le code nécessaire pour traverser
        la rivière est inclus ! \\\r\n \\\r\nPlacez deux fois le petit bloc vert dans
        votre espace de travail pour corriger le chemin et amener {currentPlayerName}
        vers la torche de redstone [redstone_torch]."
      HOC 2018 Level_1: Il vous faudra du matériel pour ce voyage. Prenez un **bateau**
        ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        dans le **coffre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Il y a une **pieuvre** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        cachée dans ce monument sous-marin, la trouverez-vous ?
      HOC 2018 Level_11: Construisez un mur en **prismarine** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        autour du béton noir. Cela activera le **conduit** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        et vous aurez relevé le défi !
      HOC 2018 Level_12: Félicitations ! Le vaste océan vous attend. Construisez un
        récif de corail ! Un volcan ! Une épave ! À vous de voir.
      HOC 2018 Level_2: On avance plus facilement en bateau qu'à la nage, en eaux
        profonde ! Allez au bout du quai et montez à bord.
      HOC 2018 Level_3: À vos rames pour naviguer sur les mers et pêcher la **morue**
        ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Donnez la morue au **dauphin** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Utilisez un bloc répétition pour traverser l'océan plus rapidement.
      HOC 2018 Level_5: Il y a une **coquille de nautile** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        par ici ! Explorze l'épave pour trouver le **coffre** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      HOC 2018 Level_6: Il n'a pas l'air de faire chaud ! Attrapez un **saumon** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        en allant vers les ruines sous-marines.
      HOC 2018 Level_7a: Vous avez découvert les ruines sous-marines. Fouillez le
        grès à la recherche d'un **coffre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        contenant un trésor de **prismarine** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      HOC 2018 Level_8: D'abord des icebergs, et maintenant de la lave ? Traversez
        cette île volcanique et dénichez le **poisson tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        dans le récif de corail.
      HOC 2018 Level_9b: Vous voici enfin au récif, partez à la recherche du **Cœur
        de l'océan** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) !
        Utilisez les coraux bleus et rouges pour atteindre le **coffre** au trésor ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      HOC Dance 4_draft: |-
        Utilisez un autre nouveau bloc pour faire changer les mouvements du danseur **toutes les 2 mesures** !

        \*Choisir « (Suivant) », « (Précédent) » ou « (Aléatoire) » indique au danseur d'effectuer un mouvement différent à chaque fois que le programme est exécuté.
      HOC Dance 5_draft: |-
        _Nous avons besoin de plus de danseurs !_

        Créez un danseur de sauvegarde appelé « backup\_dancer1 » pour danser avec le chat.
      HOC Dance 9_draft: |-
        Le bloc <xml><block type="Dancelab_whenKey"></block></xml> vous permet d'exécuter le programme lorsque vous appuyez sur la flèche dirigée vers le haut.

        Vous pouvez changer le mouvement de danse, changer les propriétés d'un danseur ou faire un mouvement rapide une seule fois. Soyez créatif et cherchez de nouveaux blocs !
      HOC Dance Freeplay: Prends ton rythme ! Créez votre propre danse à partager
        avec vos amis.
      HOC Dance Freeplay_draft: Prends ton rythme ! Créez votre propre danse à partager
        avec vos amis.
      HOC Dance Predraw: Prends ton rythme ! Créez votre propre danse à partager avec
        vos amis.
      Inspirational Artwork: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\\\r\n\\\r\nNotice:\nWe've
        used the `set alpha` block to make the \"petals\" fade toward the outside."
      InspirationalArtwork: "You've now learned everything\nyou need to know to make
        a pattern like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make
        something similar. Otherwise, create something all your own.\\\r"
      InspirationalArtwork_2018: "You've now learned everything\nyou need to know
        to make a pattern like this! \\\r\n\\\r\nIf this picture inspires\nyou, try
        to make something similar. Otherwise, create something all your own.\\\r"
      InspirationalArtwork_2019: "You've now learned everything\nyou need to know
        to make a pattern like this! \\\r\n\\\r\nIf this picture inspires\nyou, try
        to make something similar. Otherwise, create something all your own.\\\r"
      K-1 Bee Loops 2: Utilise une boucle «Répéter» pour te déplacer et ensuite prendre
        le nectar et fabriquer du miel !
      K-1 Bee Loops 3: Utilise trois boucles « Répéter » pour prendre le nectar et
        fabriquer du miel !
      K-1 Bee Loops 4: Utilise les boucles « Répéter » pour prendre le nectar, fabriquer
        du miel et te déplacer !
      K-1 Bee Loops 5: Utilise les boucles « Répéter » pour prendre le nectar et le
        miel !
      K-1 Bee Loops 6: Utilise une boucles « Répéter » pour prendre le nectar, fabriquer
        du miel et te déplacer !
      K-1 Maze Loops 10: "Get me to the pig!   \\\r\nUsing the\n`repeat` loop will
        make it much easier."
      K-1 Maze Loops 11: |-
        Amène-moi au cochon !
        La boucle « Répéter » rendra cela plus facile.
      K-1 Maze Loops 12: |-
        Amène-moi au cochon !
        La boucle « Répéter » rendra cela plus facile.
      K-1 Maze Loops 2: Utilise le bloc « Répéter » pour m'amener au cochon !
      K-1 Maze Loops 3: "Get me to the pig!  \\\r\nBe sure to\nuse `repeat` loops."
      K-1 Maze Loops 5: "Get me to the pig!  \\\r\nBe sure to\nuse `repeat` loops."
      K-1 Maze Loops 6: "Get me to the pig!  \\\r\nBe sure to\nuse `repeat` loops."
      K-1 Maze Loops 7: "Get me to the pig!  \\\r\nBe sure to\nuse `repeat` loops."
      K-1 Maze Loops 8: Utilise les boucles « Répéter » pour m'amener au cochon.
      K-1 Maze Loops Assessment 1: "Look at all we've learned!   \\\r\nUse\na `repeat`
        loop to get me to the pig!"
      LaurelDebugging4Video1: "This is Laurel the Adventurer!\\\r\n\\\r\nMove\nher
        around and get as much gold as you can."
      MC Agent Freeplay: "**Jeu libre :** à votre tour ! Utilisez le code de l'Agent
        pour explorer ce monde."
      MC_2017_Ryan_02: "Code like this can be made even shorter\nusing loops!  \\\r\n\\\r\nNow
        get the Agent to the pressure plate using a `repeat`\nloop to help him move
        forward."
      MC_HOC_2017 Agent Test: "Click \"Run\" to move the player\nusing the **arrow
        keys**.  \\\r\n\\\r\nTo pass this level, you will need to get\nto the door
        and open it (using the **space bar**) so you can get to the orange\nsquare
        inside."
      MC_HOC_2017_01: "Click \"Run\" to move the player\nusing the **arrow keys**.
        \ \\\r\n\\\r\nTo pass this level, you will need to get\nto the door and open
        it (using the **space bar**) so you can get to the orange\nsquare inside."
      MC_HOC_2017_01_Cole: Tu dois utiliser tous les outils sur ce parcours. Déplace-toi
        en utilisant les **flèches du clavier** et atteindre le coffre sur le chemin
        pour gagner
      MC_HOC_2017_01_Kiki: 'Pour terminer ce niveau, cliquez sur le bouton orange
        « Démarrer » sous l''aire de jeu, puis déplacez le joueur en utilisant les
        **touches de direction**.  '
      MC_HOC_2017_01_RETRY: "Utilisez l'Agent pour libérer {currentPlayerName} de
        la maison !   \\\r\n \\\r\n   \\\r\nDéplacez un bloc « avancer » dans le bloc
        « après exécution » dans l'espace de travail afin d'amener l'Agent sur la
        plaque de détection [PressurePlate_Up]. Ensuite, appuyez sur « Démarrer »
        et utilisez les touches de direction pour déplacer {currentPlayerName} hors
        de la maison afin de récupérer le contenu du **coffre** [chest].  "
      MC_HOC_2017_01_RETRY_2019: "Utilisez l'Agent pour libérer {currentPlayerName}
        de la maison !   \\\r\n \\\r\n   \\\r\nDéplacez un bloc « avancer » dans le
        bloc « après exécution » dans l'espace de travail afin d'amener l'Agent sur
        la plaque de détection [PressurePlate_Up]. Ensuite, appuyez sur « Démarrer »
        et utilisez les touches de direction pour déplacer {currentPlayerName} hors
        de la maison afin de récupérer le contenu du **coffre** [chest].  "
      MC_HOC_2017_02: Le joueur doit atteindre le bosquet secret.  Aidez l'Agent à
        ouvrir la porte en écrivant le code qui lui permet d'atteindre la plaque de
        détection.
      MC_HOC_2017_02_Cole: "{currentPlayerName} se lance dans l'aventure ! Pour l'aider,
        atteignez la **carte** [map_empty] située derrière la porte fermée sur la
        droite. \\\r\n \\\r\nDéplacez le code dans l'espace de travail à fin de diriger
        l'Agent sur la plaque de détection [PressurePlate_Up]. Cela permettra à {currentPlayerName}
        de passer. "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} se lance dans l'aventure ! Pour
        l'aider, atteignez la **carte** [map_empty] située derrière la porte fermée
        sur la droite. \\\r\n \\\r\nDéplacez le code dans l'espace de travail à fin
        de diriger l'Agent sur la plaque de détection [PressurePlate_Up]. Cela permettra
        à {currentPlayerName} de passer. "
      MC_HOC_2017_02_Kiki: "Le joueur se lance à l'aventure, mais d'abord il doit
        récupérer la torche cachée de l'autre côté de cette porte fermée. \\\r\n\\\r\nProgrammez
        l'Agent pour qu'il se déplace deux fois vers l'avant en suivant le chemin
        blanc pour atteindre la plaque de détection. Cela ouvrira la porte pour le
        joueur."
      MC_HOC_2017_02_Will: "Pour terminer ce niveau, le joueur doit atteindre le carré
        orange situé à l'intérieur du bosquet secret, qui se trouve derrière la porte
        fermée.  \\\r\n\\\r\nLe code dans l'espace de travail permet à l'Agent de
        se déplacer deux fois vers l'avant pour atteindre la plaque de détection et
        ouvrir la porte pour Alex ou Steve."
      MC_HOC_2017_03_Cole: "{currentPlayerName} continue son aventure et a besoin
        de la **boussole** [compass] pour préparer son voyage.  \\\r\n   \\\r\nProgrammez
        l'Agent pour qu'il ouvre la porte. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} continue son aventure et a besoin
        de la **boussole** [compass] pour préparer son voyage.  \\\r\n   \\\r\nProgrammez
        l'Agent pour qu'il ouvre la porte. "
      MC_HOC_2017_03_Kiki: "L'aventure du joueur commencera derrière une porte fermée
        dans le bosquet secret !  \\\r\n\\\r\n\\\r\nAidez l'Agent à ouvrir la porte
        en écrivant le code pour qu'il atteigne la plaque de détection."
      MC_HOC_2017_04: Modifiez la boucle du dernier casse-tête afin d'aider l'Agent
        à créer un passage par-dessus la partie la plus large de cette rivière.
      MC_HOC_2017_04POINT5_Cole: "Vous êtes sorti du marais !  Maintenant, dirigez
        le joueur en toute sécurité sur le carré orange. \n\nAidez l'Agent à dégager
        le chemin en trouvant un modèle simple et en utilisant des boucles pour traverser
        les deux premières plaques de détection."
      MC_HOC_2017_04POINT5_RYAN: "Vous avez réussi ! \\\r\n\\\r\nMaintenant, dirigez
        {currentPlayerName} en toute sécurité à travers le labyrinthe pour récupérer
        la **hache** [diamond_axe]\\\r"
      MC_HOC_2017_04POINT5_RYAN_2019: "Vous avez réussi ! \\\r\n\\\r\nMaintenant,
        dirigez {currentPlayerName} en toute sécurité à travers le labyrinthe pour
        récupérer la **hache** [diamond_axe]\\\r"
      MC_HOC_2017_04_Cole: "L'Agent peut se déplacer sur l'eau !  \\\r\n \\\r\nUtilisez
        une boucle « répéter » pour résoudre ce casse-tête et aider {currentPlayerName}
        à récupérer le **seau** [bucket_empty] derrière la porte. "
      MC_HOC_2017_04_Cole_2019: "L'Agent peut se déplacer sur l'eau !  \\\r\n \\\r\nUtilisez
        une boucle « répéter » pour résoudre ce casse-tête et aider {currentPlayerName}
        à récupérer le **seau** [bucket_empty] derrière la porte. "
      MC_HOC_2017_04_Kiki: "L'entrée du bosquet secret mène vers cette magnifique
        oasis !  Pour terminer ce niveau, le joueur doit atteindre le carré orange
        dans la cabane.  \\\r\n\\\r\nUtilisez une boucle « répéter » pour aider l'Agent
        à atteindre la plaque de détection qui ouvrira la porte de la cabane."
      MC_HOC_2017_05: "Les boucles ne sont pas toujours utiles. \n\nCes cactus ne
        poussent pas selon un modèle clair, donc une boucle ne pourra pas les contourner
        correctement.  À la place, nous vous avons donné une fonction appelée « détruire
        et avancer » qui fera tout le travail à votre place chaque fois que l'Agent
        rencontrera un obstacle."
      MC_HOC_2017_05_Cole: "Oh non, le pont est détruit ! \\\r\n\\\r\nProgrammez l'Agent
        pour reconstruire le pont en utilisant le bloc « placer » afin que {currentPlayerName}
        puisse atteindre la **pelle** [diamond_shovel]."
      MC_HOC_2017_05_Cole_2019: "Oh non, le pont est détruit ! \\\r\n\\\r\nProgrammez
        l'Agent pour reconstruire le pont en utilisant le bloc « placer » afin que
        {currentPlayerName} puisse atteindre la **pelle** [diamond_shovel]."
      MC_HOC_2017_05_Josh: "Oh non, le pont est détruit ! \n\nAidez l'Agent a reconstruire
        le pont afin que le joueur puisse atteindre la **pelle**."
      MC_HOC_2017_05_Kiki: "Il est temps pour le joueur de quitter le bosquet secret
        et de continuer l'aventure, mais le pont est détruit ! \\\r\n\\\r\nAidez l'Agent
        à reconstruire le pont, puis avancez jusqu'à la planche de bois afin que le
        joueur atteigne le carré orange."
      MC_HOC_2017_06_Cole: "Encore une rivière, mais celle-ci est beaucoup plus large !
        \\\r\n \\\r\nCorrigez ce code pour aider l'Agent à reconstruire un pont à
        fin que {currentPlayerName} récupère la **pioche** [diamond_pickaxe]. "
      MC_HOC_2017_06_Cole_2019: "Encore une rivière, mais celle-ci est beaucoup plus
        large ! \\\r\n \\\r\nCorrigez ce code pour aider l'Agent à reconstruire un
        pont à fin que {currentPlayerName} récupère la **pioche** [diamond_pickaxe]. "
      MC_HOC_2017_06_Josh: "Encore une rivière, mais celle-ci est beaucoup plus large !
        \ \\\r\n\\\r\nCorrigez ce code pour aider l'Agent à construire un pont par-dessus
        cette rivière."
      MC_HOC_2017_06_Kiki: "Encore une rivière, mais celle-ci est beaucoup plus large !
        \ \\\r\n\\\r\nCorrigez ce code pour aider l'Agent à construire un pont au-dessus
        de l'eau."
      MC_HOC_2017_07_Cole: "De la glace bloque passage !  \\\r\n \\\r\nLa fonction
        « supprimer obstacle » vous aidera à détruire la glace et à diriger {currentPlayerName}
        vers le wagonnet [minecart_normal] ! "
      MC_HOC_2017_07_Cole_2019: "De la glace bloque passage !  \\\r\n \\\r\nLa fonction
        « supprimer obstacle » vous aidera à détruire la glace et à diriger {currentPlayerName}
        vers le wagonnet [minecart_normal] ! "
      MC_HOC_2017_07_Kiki: "Vous pouvez utiliser autre chose que des boucles pour
        répéter le code !  \\\r\n\\\r\nIci, nous vous avons donné une fonction appelée
        « supprimer cactus » qui se chargera de détruire les trois cactus chaque fois
        que vous l'utilisez.  Utiliser deux blocs « supprimer cactus » pour dégager
        le passage jusqu'au carré orange. "
      MC_HOC_2017_07a_Kiki: Maintenant, modifiez cette boucle pour aider l'Agent à
        dégager un chemin jusqu'au carré orange.
      MC_HOC_2017_08_Cole: "Maintenant, au lieu de détruire un bloc avant de vous
        déplacer, vous devrez en placer un.  \\\r\n\\\r\nModifiez la fonction fournie
        pour que cela marche dans le désert."
      MC_HOC_2017_08_Kiki: "Maintenant, au lieu de détruire les cactus, vous devez
        placer de la pierre sur la lave, puis détruire le grès.  \\\r\n\\\r\nModifiez
        la fonction pour que cela marche pour ce niveau."
      MC_HOC_2017_08_RY: "Maintenant, vous devez choisir entre **DEUX** fonctions !
        \n\nUtilisez ces fonctions afin de rapidement construire un pont au-dessus
        de la lave pour {currentPlayerName}."
      MC_HOC_2017_08_Will: "Maintenant, vous devez choisir entre **DEUX** fonctions !
        \n\nUtilisez ces fonctions afin de rapidement construire un pont au-dessus
        de la lave pour le joueur."
      MC_HOC_2017_09_Cole: Utilisez les fonctions afin d'aider l'Agent à détruire
        les blocs de terre géants qui empêchent le joueur d'accéder à la plaque de
        détection.
      MC_HOC_2017_09_Kiki: "Ce code de départ ne peut pas être supprimé.\\\r\n\\\r\nAjoutez
        des commandes à la fonction « créer chemin » afin que le programme dans l'espace
        de travail dirige l'Agent jusqu'à la plaque de détection. "
      MC_HOC_2017_09_RS_CLONE: Corrigez cette fonction pour combler les trous, puis
        marchez sur la plaque de détection pour dégager un chemin jusqu'à la torche.
      MC_HOC_2017_10_Cole: Utilisez les fonctions afin de dégager un chemin pour le
        wagonnet et marchez jusqu'au portail du Nether.
      MC_HOC_2017_10_Cole_old: Essayez de construire dès le départ une fonction qui
        permettra à l'Agent de facilement terminer ce wagonnet et d'amener le joueur
        jusqu'au carré orange.
      MC_HOC_2017_10_Kiki: Essayez de construire dès le départ une fonction qui permettra
        à l'Agent de facilement terminer ce wagonnet et d'amener le joueur jusqu'au
        carré orange.
      MC_HOC_2017_10_RETRY: "Saurez-vous remarquer la différence entre les deux fonctions
        dans votre espace de travail ? \\\r\n \\\r\nUtilisez ces fonctions avec d'autres
        codes de votre boîte à outils afin de dégager un chemin pour le wagonnet,
        puis récupérez le **briquet à silex** [flint_and_steel]. \\\r\n "
      MC_HOC_2017_10_RETRY_2019: "Saurez-vous remarquer la différence entre les deux
        fonctions dans votre espace de travail ? \\\r\n \\\r\nUtilisez ces fonctions
        avec d'autres codes de votre boîte à outils afin de dégager un chemin pour
        le wagonnet, puis récupérez le **briquet à silex** [flint_and_steel]. \\\r\n "
      MC_HOC_2017_10_RYAN: Essayez de construire dès le départ des fonctions qui permettront
        à l'Agent de facilement terminer ce wagonnet et d'amener le joueur jusqu'au
        carré orange.
      MC_HOC_2017_10_RYAN2: Essayez de construire dès le départ des fonctions qui
        permettront à l'Agent de facilement terminer ce wagonnet et d'amener le joueur
        jusqu'au carré orange.
      MC_HOC_2017_11_Kiki: À votre tour ! À vous de créer quelque chose autour de
        ce lac gelé.
      MC_HOC_2017_13_Cole: "**Jeu libre :** à votre tour ! Utilisez le code de l'Agent
        pour explorer ce monde."
      MC_HOC_2017_4.5v2: "Vous êtes sorti du marais !  Maintenant, dirigez le joueur
        en toute sécurité sur le carré orange. \n\nAidez l'Agent à dégager le chemin
        en trouvant un modèle simple et en utilisant des boucles pour traverser les
        deux premières plaques de détection."
      MC_HOC_2017_Ali: 'Observez les fonctions ci-dessous.  Comment pouvez-vous les
        utiliser pour éviter les Ghasts et aider {currentPlayerName} à atteindre le
        **livre enchanté** en toute sécurité [book_enchanted] ?  '
      MC_HOC_2017_Ali_2019: 'Observez les fonctions ci-dessous.  Comment pouvez-vous
        les utiliser pour éviter les Ghasts et aider {currentPlayerName} à atteindre
        le **livre enchanté** en toute sécurité [book_enchanted] ?  '
      MC_HOC_2017_FP10x10: "**Jeu libre :** à votre tour ! Pourrez-vous relever le
        défi et récupérer tous les diamants dans ce niveau ? "
      MC_HOC_2017_FP10x10_RE: "**Jeu libre :** à votre tour ! Pourrez-vous relever
        le défi et récupérer tous les diamants dans ce niveau ? "
      MC_HOC_2017_FP20x20: "**Jeu libre :** à votre tour ! Utilisez le code de l'Agent
        pour explorer ce monde."
      MC_HOC_2017_FP20x20_2019: "**Jeu libre :** à votre tour ! Utilisez le code de
        l'Agent pour explorer ce monde."
      MC_HOC_2017_Ryan_03: "Saviez-vous que vous pouvez placer plusieurs bouts de
        code dans une boucle ?  \\\r\n\\\r\nUtilisez une boucle « répéter » pour aider
        l'Agent à construire un pont au-dessus de la rivière en plaçant des blocs
        dans l'eau."
      MC_HOC_2017_Ryan_05: "Parfois, vous devrez détruire ce qui se trouvera en travers
        du chemin de votre joueur.  \\\r\nUtilisez le bloc « détruire » pour vous
        débarrasser de tous les cactus qui se trouvent entre l'Agent et la plaque
        de détection."
      MC_HOC_Kiki_02: Quelqu'un doit se trouver sur la plaque de détection pour ouvrir
        la porte latérale.  Aidez l'Agent à atteindre la plaque afin que le joueur
        puisse sortir de la maison.
      Mike Test Bee Conditionals 1: "This cloud is blocking my view!\n\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud, and only get nectar\nif there's
        a flower.   \\\r\nBe careful, it can change!"
      Mike Test Bee Conditionals 2: "**Assessment:** Collect\nall of the nectar.  \\\r\nBe
        careful not to try to collect nectar from a purple\nflower if it doesn't have
        any."
      NEW Course 4 Artist Functions 1: "Can you draw a square\nthat is 100 pixels
        in length, using a repeat loop?\\\r\n\\\r"
      NEW Course 4 Artist Functions 10.1: Utilise les fonctions des puzzles précédents
        pour dessiner ce motif.
      NEW Course 4 Artist Functions 10: "Click \"edit\" to fill\nout the blocks in
        the function definition to make a 40 pixel square.\\\r\n\\\r"
      NEW Course 4 Artist Functions 11: "Now we want to create\na new function called
        `draw a line of squares` that draws six squares all\nin a row.  \\\r\n\\\r\nCan
        you build this function using this `draw a square 20`\nfunction that we created
        for you?\\\r\n<br/><br/>\\\r\n\\\r\n_Note: See that we've\nchanged the pen
        to be much thinner. Click \"edit\" on the `draw a square 20`\nfunction to
        see how!_"
      NEW Course 4 Artist Functions 12: Utilise la fonction « Dessiner une ligne de
        carrés » du dernier puzzle pour dessiner ce motif.
      NEW Course 4 Artist Functions 13: "Can you draw a star\nshape using the `draw
        a line of squares` function?  \\\r\n\\\r\n(Be sure to `move\nforward` 60 pixels
        before you turn 144 degrees!)"
      NEW Course 4 Artist Functions 2: "Can you draw 3 squares\n20 pixels apart from
        one another? \\\r\n\\\r\nEach square is 100 pixels in size."
      NEW Course 4 Artist Functions 3: Voici un nouveau type de bloc. On l'appelle
        un bloc «Fonction». Clique sur « Modifier », puis remplis-le avec le code
        pour dessiner un carré de 100 pixels de côté. Quand tu as terminé de modifier
        la fonction, clique sur «Fermer» pour revenir à ton programme.
      NEW Course 4 Artist Functions 5: "How did the `draw a\nsquare` block know what
        commands to run? Click on \"edit\" in the `draw a\nsquare` function block.
        The blocks in the function editor are the definition\nthat make up `draw a
        square`. \\\r\n\\\r\n<br/>\\\r\nWhen you're done looking around,\nclick \"Save
        and Close\" and then \"Run.\"\\\r\n\\\r"
      NEW Course 4 Artist Functions 6: "Using the \"draw a square\"\nfunction block,
        can you draw this picture? Hint: each square is 20 pixels\napart.\\\r\n\\\r"
      NEW Course 4 Artist Functions 7: "Are you getting the\nhang of how to use function
        blocks? Let's modify `draw a square` so that\nit draws squares that are 200
        pixels in size. \\\r\n\\\r\nClick on \"edit\" to\nenter the `draw a square`
        function editor.\\\r\n\\\r\nRemember to click on \"Close\"\nto get out of
        the function editor. "
      NEW Course 4 Artist Functions 8: |-
        Nous avons créé une nouvelle
        fonction pour vous, appelée «dessiner un triangle».  Pouvez-vous modifier la définition de la fonction pour dessiner un triangle avec des côtés de 100 pixels ?
      NEW Course 4 Artist Functions 9: Peux-tu résoudre cela en ajoutant un seul bloc
        ?
      NEW Course 4 Artist Functions inspire: "<img src=\"https://images.code.org/5e50e6ef0cafb40a8b697ea158047412-image-1441260841174.11.12.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\n\\\r\n\\\r"
      NEW Course 4 Artist Params 1: "Let's define this function\nto draw a square
        with 50 pixel sides. Click \"edit\" to get started.\\\r\n\\\r"
      NEW Course 4 Artist Params 10: "Create a `draw a hexagon`\nfunction block with
        a length parameter. \\\r\n\\\r\nThis hexagon has sides that\nare 100 pixels
        in length."
      NEW Course 4 Artist Params 11: "Can you figure out how\nto draw this shape?
        \\\r\n\\\r\nEdit the function to use the `sides` parameter."
      NEW Course 4 Artist Params 12: "Can you complete this\ndrawing? \\\r\n\\\r\nThe
        sides of all the shapes are 100 pixels long."
      NEW Course 4 Artist Params 13: "Let's edit this `draw\na polygon` function.
        \\\r\n\\\r\nIt already has a `sides` parameter. Now, let's\nadd a `length`
        parameter. \\\r\n\\\r\n<br/>\\\r\nThe perimeter of each shape is\n200 pixels.
        Do you remember the equation to make shapes the same size when\nthey have
        a different number of sides?"
      NEW Course 4 Artist Params 14: "Edit `draw a spiral edge`\nto use `length` and
        `sides` parameters, then recreate these shapes.\\\r\n\\\r\n\\-\nThe smallest
        side length of the square is 5 pixels.\\\r\n\n-   The smallest side\n    length
        of the triangle is 10 pixels.\\\r\n-   The smallest side length of the\n    hexagon
        is 2 pixels.\\\r\n-   All increase to 100 pixels.  "
      NEW Course 4 Artist Params 2: Crée une fonction "Dessine un triangle" à partir
        de rien qui réalise un triangle avec des côtés de 50 pixels.
      NEW Course 4 Artist Params 3: "Now let's use the function\nto draw 5 triangles
        in a row. \\\r\n\\\r\nEach triangle is 30 pixels apart."
      NEW Course 4 Artist Params 4: As-tu remarqué quelque chose de différent dans
        ces blocs «Fonction» ? Clique sur « Exécuter » pour voir ce qui se passe.
      NEW Course 4 Artist Params 5: "Replace the `???` in the\n`length` parameter
        input block. \\\r\n\\\r\nThe pentagon has 100 pixel sides."
      NEW Course 4 Artist Params 6: "Fill in the `length` parameter\nto draw these
        shapes by replacing the `???` with the right numbers.  \\\r\n\\\r\nThe\nsquare
        and triangle have 100 pixel sides.  \\\r\nThe hexagon sides are 75 pixels\nlong. "
      NEW Course 4 Artist Params 7: "Can you complete this drawing?\n\\\r\n\\\r\nThe
        sides of each triangle are 25 pixels larger than the last.  \\\r\nThe\nfirst
        triangle has 25 pixel sides."
      NEW Course 4 Artist Params 8: "The code for this triangle\nfunction is broken.
        \\\r\n\\\r\nCan you edit the function to fix it, and then\nmake triangles
        of length 25, 50, and 75?"
      NEW Course 4 Artist Params 9: "Click \"edit\" to fill\nin the function definition
        of `draw a square` and add a parameter.  \\\r\nIt\nshould take a length parameter
        just like the triangle. \\\r\n\\\r\n**This time,\ndraw 3 squares:** 25, 50
        and 75 pixels in length. The lefthand corners are\neach 100 pixels away from
        the last."
      NEW Course 4 Artist Params inspire: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\\\r\n\\\r\nNotice:\nWe've
        used the `set alpha` block to make the \"petals\" fade toward the outside."
      NEW Course 4 Artist Vars 12: Maintenant, recrée l'algorithme du dernier niveau
        et crée un pentagone avec des côtés de 150 pixels.
      NEW Course 4 Artist Vars 4: 'Réessayons. Peux-tu définir la variable de longueur
        pour faire ce super dessin avec des hexagones ? Indice : C''est un multiple
        de 10.'
      NEW Course 4 Artist Vars 6: |-
        Dessine ce modèle en supprimant la variable « Longueur » aux bons endroits et puis en définissant la valeur correcte pour la longueur. (Indice : c'est un multiple de 10).

        Tu vois comment tu définis la valeur « Longueur » une seule fois, et le code utilise la bonne valeur partout ?
      NEW Course 4 Bee For Loops 10a: "Ready for a challenge?  Take\nwhat you've learned
        about loops and try to solve this problem. \\\r\n\\\r\nRemember:\nYou may
        have to run through solutions multiple times before you figure out\nall of
        the steps.\\\r"
      NEW Course 4 Bee For Loops 2: "Add the code necessary\nto make sure the bee
        collects all the nectar. \\\r\n\\\r\nLook at how much code\nyou need for this
        puzzle!   \\\r\n(We'll learn a simpler way in the next puzzle.)"
      NEW Course 4 Bee For Loops 4: "Remplacez les ??? dans la\n« boucle for» par
        la plus grande quantité de nectar que l'abeille doit recueillir. "
      NEW Course 4 Bee For Loops 6: "The last number in your\nfor loop is called the
        `increment`.  Each time the loop is run, the counter\nvariable changes by
        the value of the increment. \\\r\n\\\r\nTry collecting these\nflowers using
        an increment of 2."
      NEW Course 4 Bee For Loops 7: "Now, let's combine the\n`counter` variable with
        a math block! How can you use the `counter` variable\nto navigate this garden
        with the fewest number of blocks possible? \\\r\n\\\r\nWhat\ndo you need to
        do to collect 3, 6, 9, 12, 15 nectar this time?  The secret\nis in the `counter`
        variable!\\\r\n\\\r\n<br/>\\\r\nRemember: If your loop is counting\nup, the
        increment is added to your `counter` variable each time through.\\\r\n\\\r"
      NEW Course 4 Play Lab Params 11: "It's free play time!\nHave fun with all the
        blocks in your tool box.  \\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>Need\nsome
        ideas?</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n        \\t<li><strong>Tag</strong>\n-
        Have character 2 patrol and use your arrow keys to make character 1 chase\nuntil
        they collide. </li>\r\n            <li><strong>Whack-a-Sprite</strong>\n-
        Have a character constantly pop up at a random location. Award points for\nclicking
        the sprite before it disappears. </li>\r\n            <li><strong>Best\nGuess</strong>
        - Make both characters disappear, change location to a random\nspot, then
        reappear as a random character.  Click on the first one and get\na point...but
        if you click on the second one you LOSE a point! </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      New Minecraft Hero Project: "**Jeu libre :** à votre tour ! Utilisez le code
        de l'Agent pour explorer ce monde."
      Overworld Move to Sheep: Ajoute une deuxième commande « avancer plus » pour
        atteindre le mouton.
      Overworld Move to Sheep_2018: Ajoute une deuxième commande « avancer plus »
        pour atteindre le mouton.
      Overworld Move to Sheep_2019: Ajoute une deuxième commande « avancer plus »
        pour atteindre le mouton.
      PS - test - pixelation: "# Do This\\\r\n\n\\\r\nComplete the\n\"X\" shape by
        typing 0s and 1s. You can always click \"Readable Format\"\nif you want to
        clean up your work."
      PS copy - CSD U3 Variables Predict Where XY Embed: "# \n\nPredict\\\r\n\\\r\nIn
        which corner of the screen will the circle be drawn?\\\r\n\\\r\n_Hint:\nClick
        the \"Show grid\" box to help you find the exact coordinates on the\nscreen._
        ([Show me where](#triggercallout=code_triggered))"
      PS copy - CSD U3 Variables change circle size: "\\\r\n\\\r\n\n# \n\nDebug: Using
        Variables\\\r\n\\\r\nThis program uses the variable `circleSize`\nto control
        the width and height of a circle.  If you make the circle big enough,\nit
        will fill up the entire screen, as in the picture on the right.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Change the value assigned to `circleSize` so
        that the circle\n    takes up the entire screen."
      PS copy 2-3 Bee Conditionals 5: "These magic purple flowers change!\\\r\n\\\r\nEach\ntime
        you try the puzzle, purple flowers can have either 1 nectar or none at\nall...but
        you won't know the number until you run the code! \\\r\n\\\r\nBe careful\nnot
        to collect nectar from a purple flower if it doesn't have any. \\\r\nYou\nmust
        first check if the nectar is equal to 1 using the `if nectar` block."
      Pixelation - AllTheThings 4: "# Pixelation: AllTheThings\n\n4\\\r\nThis pixelation
        level demonstrates the use of the `hide_encoding_controls`\noption.  Notice
        that the level displays the image data in hexadecimal and\ndoes not let you
        change it back to binary.\\\r\n            "
      Pixelation - AllTheThings 5: "# Pixelation: AllTheThings\n\n5\\\r\nThis pixelation
        level demonstrates the use of the \"Hide sliders\" option.  Notice\nthat the
        width and height sliders are not available, and the width and height\nfields
        are not editable."
      Pixelation - Lesson 15 - Color Shades 4x4: "# \n\nPixelation: Task 3\\\r\n<img
        src = \"https://code.org/images/cspunit1/ColorTask3.png\"\nalign=right width=200
        hspace=20>\\\r\n**Directions:**\\\r\nWe start you out with\nthe 4x4 image
        Maddie created in the video.\\\r\n\\\r\nYour task is to fill a 4x4\ngrid with
        colors using _12-bits per pixel_. The result should look something\nlike (but
        not exactly) the image shown at right.  \\\r\n\\\r\nHere are the requirements:\\\r\n\\\r\n\n-
        \  Row 1 - fill with shades of red. \\\r\n-   Row 2 - shades of green. \\\r\n-
        \  \\*\n    Row 3 - shades of blue. \\\r\n-   Row 4 - shades of gray.\\\r"
      Pixelation - Lesson 15 - Color Shades 4x4_2018: "# \n\nPixelation: Task 3\\\r\n<img
        src = \"https://code.org/images/cspunit1/ColorTask3.png\"\nalign=right width=200
        hspace=20>\\\r\n**Directions:**\\\r\nWe start you out with\nthe 4x4 image
        Maddie created in the video.\\\r\n\\\r\nYour task is to fill a 4x4\ngrid with
        colors using _12-bits per pixel_. The result should look something\nlike (but
        not exactly) the image shown at right.  \\\r\n\\\r\nHere are the requirements:\\\r\n\\\r\n\n-
        \  Row 1 - fill with shades of red. \\\r\n-   Row 2 - shades of green. \\\r\n-
        \  \\*\n    Row 3 - shades of blue. \\\r\n-   Row 4 - shades of gray.\\\r"
      Pixelation - Lesson 15 - Color Shades 4x4_2019: "# \n\nPixelation: Task 3\\\r\n<img
        src = \"https://code.org/images/cspunit1/ColorTask3.png\"\nalign=right width=200
        hspace=20>\\\r\n**Directions:**\\\r\nWe start you out with\nthe 4x4 image
        Maddie created in the video.\\\r\n\\\r\nYour task is to fill a 4x4\ngrid with
        colors using _12-bits per pixel_. The result should look something\nlike (but
        not exactly) the image shown at right.  \\\r\n\\\r\nHere are the requirements:\\\r\n\\\r\n\n-
        \  Row 1 - fill with shades of red. \\\r\n-   Row 2 - shades of green. \\\r\n-
        \  \\*\n    Row 3 - shades of blue. \\\r\n-   Row 4 - shades of gray.\\\r"
      Predict Loop I: "# Predict\\\r\n\n\\\r\nWhat will print as a\nresult of this
        loop?"
      Predict Loop I_2018: "# Predict\\\r\n\n\\\r\nWhat will print as a\nresult of
        this loop?"
      Predict Loop I_2019: "# Predict\\\r\n\n\\\r\nWhat will print as a\nresult of
        this loop?"
      'Project: Finish Color Sleuth': "# Challenge - Pick a\n\nway for the game to
        end and implement it\\\r\n\\\r\nYour challenge now is to add\nsome code completely
        on your own.  Use what you've learned so far, and Alexis\nand Michael's discussion
        to help you.\\\r\n\\\r\n**This is the last programming\nlevel**\\\r\n\\\r\n\n-
        \  Make all changes and additions to the program that you want\n    here\\\r\n-
        \  When you're done hit **Submit**\\\r\n    \\\r\n    **Goal:** Add code that\n
        \   provides a way for the game to end which:\\\r\n-   Switches to the `gameOver_screen`\\\r\n-
        \  \\*\n    Shows which player won the game by showing `player1Win_label`
        or `player2Win_label`\\\r\n    \\\r\n    *We've\n    provided `gameOver_screen`
        as part of the template for this project -- Switch\n    to Design Mode to
        take a look at what's there*\\\r\n    \\\r\n    **Suggestions**\\\r\n-   \\*\n
        \   If you're stuck for ideas, try to implement the end game condition of
        \"first\n    to 10\" - first player to reach a score of 10 wins.\\\r\n-   You
        should use the\n    suggestion from the discussion to add a function like
        `checkGameOver()` and\n    call it from `checkCorrect`\\\r\n    \\\r\n    <details><summary><strong>Above
        and Beyond:\n    optional extra options for your project [Click to expand]</strong></summary>\r\n
        \   \r\n    <p>\r\n    Here\n    are a bunch of ways you can add to or extend
        the project:\r\n    \r\n    </p>\r\n    <ul>\r\n    \r\n    \r\n    <li>Add\n
        \   \"start over\" button on the last screen, which should reset everything,
        and\n    go back to the game play screen\r\n    </li>\r\n    <li>Add a welcome
        screen that\n    explains the rules and invites the player to start the game
        (make it the default\n    screen)\r\n    </li>\r\n    <li>Make the game more
        difficult:</li>\r\n    <uL>\r\n    <li>Make\n    the colors more similar (we
        added 20 to every RGB value, try 15 or 10).</li>\r\n    <li>Or\n    make the
        difficulty variable - you can generate a random number between 5\n    and
        20 and add that to the RGB values. </li>\r\n    <li>Or make it get progressively\n
        \   more difficult - use a variable to keep track of how much to add to each
        RGB\n    value and decrease it over time.</li>\r\n    \\t<li>Or on a welcome
        screen ask\n    if the player wants to play easy, medium, or hard.</li>\r\n
        \   </uL>\r\n    \r\n    <li>Add\n    a timing element - lookup the documentation
        for setTimeout which calls a function\n    after a certain amount of time.
        (Note: you may need to remix the project in\n    as a free-play App Lab project
        to do this).\r\n    </li>\r\n    <li>You can also use\n    <code>getTime()</code>
        at the beginning and end of your code to figure out\n    how long it took
        for the game to end, which you could use to adjust the score.</li>\r\n    </ul>\r\n
        \   </details>\r"
      'Project: Finish Color Sleuth_2018': "# Challenge - Pick a\n\nway for the game
        to end and implement it\\\r\n\\\r\nYour challenge now is to add\nsome code
        completely on your own.  Use what you've learned so far, and Alexis\nand Michael's
        discussion to help you.\\\r\n\\\r\n**This is the last programming\nlevel**\\\r\n\\\r\n\n-
        \  Make all changes and additions to the program that you want\n    here\\\r\n-
        \  When you're done hit **Submit**\\\r\n    \\\r\n    **Goal:** Add code that\n
        \   provides a way for the game to end which:\\\r\n-   Switches to the `gameOver_screen`\\\r\n-
        \  \\*\n    Shows which player won the game by showing `player1Win_label`
        or `player2Win_label`\\\r\n    \\\r\n    *We've\n    provided `gameOver_screen`
        as part of the template for this project -- Switch\n    to Design Mode to
        take a look at what's there*\\\r\n    \\\r\n    **Suggestions**\\\r\n-   \\*\n
        \   If you're stuck for ideas, try to implement the end game condition of
        \"first\n    to 10\" - first player to reach a score of 10 wins.\\\r\n-   You
        should use the\n    suggestion from the discussion to add a function like
        `checkGameOver()` and\n    call it from `checkCorrect`\\\r\n    \\\r\n    <details><summary><strong>Above
        and Beyond:\n    optional extra options for your project [Click to expand]</strong></summary>\r\n
        \   \r\n    <p>\r\n    Here\n    are a bunch of ways you can add to or extend
        the project:\r\n    \r\n    </p>\r\n    <ul>\r\n    \r\n    \r\n    <li>Add\n
        \   \"start over\" button on the last screen, which should reset everything,
        and\n    go back to the game play screen\r\n    </li>\r\n    <li>Add a welcome
        screen that\n    explains the rules and invites the player to start the game
        (make it the default\n    screen)\r\n    </li>\r\n    <li>Make the game more
        difficult:</li>\r\n    <uL>\r\n    <li>Make\n    the colors more similar (we
        added 20 to every RGB value, try 15 or 10).</li>\r\n    <li>Or\n    make the
        difficulty variable - you can generate a random number between 5\n    and
        20 and add that to the RGB values. </li>\r\n    <li>Or make it get progressively\n
        \   more difficult - use a variable to keep track of how much to add to each
        RGB\n    value and decrease it over time.</li>\r\n    \\t<li>Or on a welcome
        screen ask\n    if the player wants to play easy, medium, or hard.</li>\r\n
        \   </uL>\r\n    \r\n    <li>Add\n    a timing element - lookup the documentation
        for setTimeout which calls a function\n    after a certain amount of time.
        (Note: you may need to remix the project in\n    as a free-play App Lab project
        to do this).\r\n    </li>\r\n    <li>You can also use\n    <code>getTime()</code>
        at the beginning and end of your code to figure out\n    how long it took
        for the game to end, which you could use to adjust the score.</li>\r\n    </ul>\r\n
        \   </details>\r"
      'Project: Finish Color Sleuth_2019': "# Challenge - Pick a\n\nway for the game
        to end and implement it\\\r\n\\\r\nYour challenge now is to add\nsome code
        completely on your own.  Use what you've learned so far, and Alexis\nand Michael's
        discussion to help you.\\\r\n\\\r\n**This is the last programming\nlevel**\\\r\n\\\r\n\n-
        \  Make all changes and additions to the program that you want\n    here\\\r\n-
        \  When you're done hit **Submit**\\\r\n    \\\r\n    **Goal:** Add code that\n
        \   provides a way for the game to end which:\\\r\n-   Switches to the `gameOver_screen`\\\r\n-
        \  \\*\n    Shows which player won the game by showing `player1Win_label`
        or `player2Win_label`\\\r\n    \\\r\n    *We've\n    provided `gameOver_screen`
        as part of the template for this project -- Switch\n    to Design Mode to
        take a look at what's there*\\\r\n    \\\r\n    **Suggestions**\\\r\n-   \\*\n
        \   If you're stuck for ideas, try to implement the end game condition of
        \"first\n    to 10\" - first player to reach a score of 10 wins.\\\r\n-   You
        should use the\n    suggestion from the discussion to add a function like
        `checkGameOver()` and\n    call it from `checkCorrect`\\\r\n    \\\r\n    <details><summary><strong>Above
        and Beyond:\n    optional extra options for your project [Click to expand]</strong></summary>\r\n
        \   \r\n    <p>\r\n    Here\n    are a bunch of ways you can add to or extend
        the project:\r\n    \r\n    </p>\r\n    <ul>\r\n    \r\n    \r\n    <li>Add\n
        \   \"start over\" button on the last screen, which should reset everything,
        and\n    go back to the game play screen\r\n    </li>\r\n    <li>Add a welcome
        screen that\n    explains the rules and invites the player to start the game
        (make it the default\n    screen)\r\n    </li>\r\n    <li>Make the game more
        difficult:</li>\r\n    <uL>\r\n    <li>Make\n    the colors more similar (we
        added 20 to every RGB value, try 15 or 10).</li>\r\n    <li>Or\n    make the
        difficulty variable - you can generate a random number between 5\n    and
        20 and add that to the RGB values. </li>\r\n    <li>Or make it get progressively\n
        \   more difficult - use a variable to keep track of how much to add to each
        RGB\n    value and decrease it over time.</li>\r\n    \\t<li>Or on a welcome
        screen ask\n    if the player wants to play easy, medium, or hard.</li>\r\n
        \   </uL>\r\n    \r\n    <li>Add\n    a timing element - lookup the documentation
        for setTimeout which calls a function\n    after a certain amount of time.
        (Note: you may need to remix the project in\n    as a free-play App Lab project
        to do this).\r\n    </li>\r\n    <li>You can also use\n    <code>getTime()</code>
        at the beginning and end of your code to figure out\n    how long it took
        for the game to end, which you could use to adjust the score.</li>\r\n    </ul>\r\n
        \   </details>\r"
      Repeat Predict Contained: "# Predict\\\r\n\n\\\r\nHow many times\nwill the for
        loop below run?"
      Room Escape Workshop - 1: "# Setting Up Rooms\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/9d103d74f7c2da05aeccd5fc317e6ab6-image-1490368234432.08.44\nAM.png\"
        style=\"width:200px; float:right\">\\\r\n\\\r\nIn order to make your\nroom
        escape you will need to set up the room the user will be able to adventure\naround
        in. Some of the work has already been done for you.  You just need\nto decide
        what the different parts of the room will look like by picking pictures!\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   The level starts in Design Mode\\\r\n-   For
        each image element\n    that is blank (gray rectangle) add an appropriate
        image. For example you will\n    need a door image for the image element labeled
        door.\\\r\n-   An example of what\n    the room might look like are on the
        right."
      Room Escape Workshop - 10 - 2: "# Door Open\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/57407cb51f50e08ecddb8ce7d2d89157-image-1491065952915.58.58\nPM.png\"
        style=\"width:200px;float:right\">\\\r\n\\\r\nOpen the door if they have\nthe
        key!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add an `onEvent` block for
        clicking on\n    the door\\\r\n-   Add an `if` statement inside the `onEvent`
        to check if the key\n    position has moved to the bottom of the screen\\\r\n
        \   \\\\t\\* Add an if statement\\\r\n    \\*\n    In the if statement add
        the `==`\\\r\n    -   On one side of the `==` put the\n        x position
        you move the key to when it is clicked\\\r\n    -   On the other side\n        add
        the `getXPosition()` block - The ID for that should be the ID of your\n        key!\\\r\n-
        \  Inside the `if` statement use `showElement` to show the hidden outdoors\n
        \   image if they got the key"
      Room Escape Workshop - 10: "# Door Open\\\r\n\n\\\r\n<img src=\"https://images.code.org/3651f7d5306bdcfd2d9a3d9bb842626e-image-1491066778787.12.36\nPM.png\"
        style=\"width:200px;float:right\">\\\r\n\\\r\nGetting close! Lets set\nup
        the door to get ready for opening it.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add image\n    for the outdoors\\\r\n-   Give it a good ID (maybe _outside_)\\\r\n-
        \  Hide the image\n    for the outdoors (It will be shown when door opens)"
      Room Escape Workshop - 11: "# Got Key\\\r\n\n\\\r\nIn order\nto make sure the
        user got the key before trying to open the door we will need\na variable to
        keep track of if they got the key.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        a variable at the top of the program called gotKey and set the right side\nof
        the gotKey variable to the word false\\\r\n<img src=\"https://images.code.org/58e88b028ee9190b0288c7fcbabe389f-image-1490371419468.02.50\nPM.png\"
        style=\"width:300px\">\\\r\n\\\r\n\n-   Inside the `onEvent` command for\n
        \   the key in the safe set gotKey to true to indicate they got the key.\\\r\n
        \   \\\r\n    <img\n    src=\"https://images.code.org/def02108cabc85383129c5bb29b3af4f-image-1490371463514.04.10\n
        \   PM.png\" style=\"width:400px\">\\\r\n    \\\r\n-   You will use this to
        set up the door\n    on the next level"
      Room Escape Workshop - 2: "# Connecting Rooms\\\r\n\n\\\r\nLets\nmake it so
        the user can go between the rooms. There is an arrow button in\neach room
        which will be used to move between rooms. To make buttons react\nto your click
        you will need an event handler for each button.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Add an `onEvent` block for each of the arrow buttons\\\r\n-   Inside\n
        \   each `onEvent` block use the `setScreen` command to say which screen to
        switch\n    to"
      Room Escape Workshop - 3-2: "# Move Picture\\\r\n\n\\\r\nNow\nmake it so the
        user can find the secret code by clicking the picture. When\nthey click the
        picture it should move up and out of the way.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nPull
        out an `onEvent` block\\\r\n\n-   Change the id spot in the `onEvent` block\n
        \   to picture (which is the ID of the picture element)\\\r\n-   Inside the
        `onEvent`\n    block add the `setPosition` block with the following inputs\\\r\n
        \   \\\\t\\* ID: picture\\\r\n    \\*\n    The next two inputs are x and y
        values - test out some numbers to try to get\n    the picture to move like
        in the pictures on the right"
      Room Escape Workshop - 3: "# Hide the Code\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/6fa80456a39d9b6417545f5f66ec83a5-image-1490368827625.png\"\nstyle=\"width:400px;float:right\">\\\r\n\\\r\n\n1.
        \ In Design Mode Click on the white\n    square where it says \"CODE\". Change
        it to show a secret code of your choice\\\r\n2.  2.\n    Drag the picture
        down to cover the secret code\\\r\n    \\\r\n    ![](<>)"
      Room Escape Workshop - 4: "# Setting Up the Safe\\\r\n\n\\\r\nYou\nhave generated
        a secret code and made it so users can navigate to the second\nroom. Lets
        give the user the ability to enter the secret code when they click\non the
        safe\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add an `onEvent` block\\\r\n
        \   \\\\t\\* Pick the\n    ID for the safe\\\r\n-   Inside the `onEvent` block
        add a <img src=\"https://images.code.org/c0964a8543728d018d5d9583319e22b9-image-1491060910093.34.36\n
        \   AM.png\" style=\"width:300px\"> block\\\r\n    \\\\t\\* On the left side
        change the _x_\n    (the name of the variable) to be _guess_ \\\r\n    -   On
        the right side change\n        _\"Enter a value\"_ (the prompt to ask the
        user) to _\"Enter the code\"_"
      Room Escape Workshop - 5: "# Checking the Secret Code\\\r\n\n\\\r\nNow\nthat
        you have collected a guess of the secret code from the user you will\nneed
        to check if it is correct! We can do this using an `if` statement. An\nif
        statement checks if a condition is true, in this case it will check if\nthe
        number the user entered is equal to the secret code\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nInside
        the `onEvent` block for the safe below the prompt command add an <img\nsrc=\"https://images.code.org/5e9a434b1ad6b8f010db928b668127a5-image-1491061131564.37.01\nAM.png\"
        style=\"width:100px\"> statement \\\r\n\n-   Create the condition by pulling\n
        \   out the <img src=\"https://images.code.org/f0680979704c30975550211b03ed222e-image-1491061134985.37.08\n
        \   AM.png\" style=\"width:100px\"> block which will check if two things are
        equal\\\r\n-   \\*\n    On one side of <img src=\"https://images.code.org/f0680979704c30975550211b03ed222e-image-1491061134985.37.08\n
        \   AM.png\" style=\"width:100px\"> put _guess_ (the name of the value we
        used\n    to store the users guess)\\\r\n-   On the other side put the value
        for your secret\n    code"
      Room Escape Workshop - 6: "# Random Code\\\r\n\n\\\r\n<img src=\"https://images.code.org/dfa3a28d30b7a1d2879e3fc95b8f42dc-image-1489603534640.44.51\nPM.png\"
        style=\"width:200px;float:right\">\\\r\n\\\r\nOur secret room has a safe\nwith
        a combination lock. That combination will be hidden behind a picture\nwhere
        it says \"CODE\" right now in Room 1. To make this more fun we will\ngenerate
        a random 4 digit number to be the code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        a variable that will hold the secret code.\\\r\n\\\\t\\* Drag out the variable\nblock\\\r\n
        \   \\* In the space next to var pick a name for your variable such\nas safeCode\\\r\n\n-
        \  On the right side of the variable set your secret code to\n    be a random
        number\\\r\n    \\\\t\\* Add the random number block on the right side of\n
        \   the variable\\\r\n    -   Random number takes two inputs which set the
        range of\n        numbers it can randomly generate\\\r\n    -   You want it
        to generate numbers\n        between 1000 and 9999\\\r\n-   Set the text in
        the secret code element in room\n    1\\\r\n    \\\\t\\* Use the setText block
        to set the text of the secretCode element"
      Room Escape Workshop - 7: "# Showing inside the safe\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/71e74305187a46d0badeb29a9a69ac56-image-1490371014841.55.37\nAM.png\"
        style=\"width:200px;float:right\">\\\r\n\\\r\nOnce you have the program\nworking
        to check the secret code you are going to want to \"open\" the safe\nand show
        the key inside. First you will need to create these elements in design\nmode.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Go to Design Mode and add a gray square image\\\r\n
        \   \\\\t\\*\n    Click and Drag a Image Element <img src=\"https://images.code.org/8f4bc108415d83e5c528c9204502efc2-image-1491059181186.06.13\n
        \   AM.png\" style=\"width:75px\"> onto the screen\\\r\n    -   Give it a
        good ID\n        (maybe _insideSafe_)\\\r\n    -   Find an gray square to
        use as the picture\\\r\n    -   \\*\n        This will act as the inside of
        the safe as it will hide the front of the safe\n        when shown\\\r\n-
        \  Add a key image\\\r\n    \\\\t\\* Click and Drag a Image Element <img\n
        \   src=\"https://images.code.org/8f4bc108415d83e5c528c9204502efc2-image-1491059181186.06.13\n
        \   AM.png\" style=\"width:75px\"> onto the screen\\\r\n    -   Give it a
        good ID\n        (maybe _key_)\\\r\n    -   Find an key image to use \\\r\n-
        \  Click the hidden property\n    in Design Mode for the gray square and key.
        When they are hidden it will look\n    something like below in Design Mode\\\r\n
        \   \\\r\n    <img src=\"https://images.code.org/2c2c7e9996515f2b30d416b558fd1360-image-1489605526794.17.55\n
        \   PM.png\" style=\"width:200px\">"
      Room Escape Workshop - 8: "# Showing inside the safe\\\r\n\n\\\r\nNow\nset up
        the code to show the key and the gray square when the user inputs the\ncorrect
        code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Inside the `if` statement
        you created\n    in the `onEvent` command for the safe add:\\\r\n    -   The
        `showElement` block\n        to show the gray square\\\r\n    -   The `showElement`
        block to show the key"
      Room Escape Workshop - 9-2: "# Click Key\\\r\n\n\\\r\n<img src=\"https://images.code.org/1a736d2774860bebc5072b8ae8b38f34-image-1491066638078.10.00\nPM.png\"
        style=\"width:170px;float:right\">\\\r\n\\\r\nOnce a user clicks the\nkey
        you will want to show they are holding it. You can do this by moving the\nkey
        to the bottom corner of the room. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add an `onEvent`\n    block for when the user clicks the key. \\\r\n-   Inside
        the `onEvent` block:\\\r\n    \\\\t\\*\n    Use `setPosition` to move the
        key to the bottom corner of the screen"
      Room Escape Workshop - 9: "# Click Key\\\r\n\n\\\r\n<img src=\"https://images.code.org/349cff555af4337118791d84acf1a5b2-image-1490371172781.59.08\nAM.png\"
        style=\"width:200px;float:right\">\\\r\n\\\r\nOnce a user clicks the\nkey
        you will want to show they are holding it. You can do this by adding a\nkey
        at the bottom corner of the room. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a key\n    image at the bottom right corner of the room\\\r\n-   Set
        the key to hidden in\n    Design Mode"
      Room Escape Workshop - free play: "# You've done it!\\\r\n\n\\\r\nYou\nmade
        a room escape! Now its time to customize it. \\\r\n\\\r\nConsider:\\\r\n\\\r\n\\*\nAdding
        more rooms\\\r\n\n-   Adding more things users can interact with in the rooms\\\r\n-
        \  \\*\n    Add more style to the rooms"
      Ryan_Demo: |-
        Faisons danser cet orignal !

        Faites glisser le bloc <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> sur l'espace de travail. Connectez-le sous le bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Votre danseur devrait commencer un nouveau mouvement après la quatrième mesure.

        **Les mesures** sont utilisées pour compter le temps en musique. Dans ce tutoriel, une mesure dure quatre temps.
      SG Add Subgoals practice: "# Now you try adding subgoals!\\\r\n\n\\\r\nThis\ntime
        we have provided you with an empty workspace and new problem. To solve\nit
        this time you'll **start** by adding subgoals first, _then_ adding the\ncode.\\\r\n\\\r\nThe
        _benefit_ of using subgoals is that you can lay out a solution\nto your problem
        ahead of time before getting overwhelmed or stuck in the code.  Once\nyou've
        solved a subgoal, you can move on to the next one.\\\r\n\\\r\n\n# Do this\\\r\n\n<img\nsrc=\"https://images.code.org/4bc7896538039f1904699eba35bcd5e3-image-1508447681081.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\n**Goal**: make the turtle draw two steps (shown\nat right).\\\r\n\\\r\nAfter
        you have understood and thought about the problem\nyou should:\\\r\n\\\r\n\n1.
        \ **Start by dragging subgoals into the workspace** that\n    you think express
        a solution to the problem.\\\r\n2.  **Then** start filling\n    it in with
        turtle blocks\\\r\n3.  You should **test incrementally** as you go\n4.  add
        the commands to complete one goal, run the code, fix if it doesn't\n    work,
        then add commands to complete the next goal and so on.\\\r\n    \\\r\n    When
        you\n    think you're done click `Finish` and move on.\\\r\n    \\\r\n    **Stuck?**
        This animation\n    shows a programmer adding goals and then code.\\\r\n    \\\r\n
        \   ![expandable](https://images.code.org/1805d750cb4e653ebf505f4a8a2c7840-image-1508447936880.gif)"
      SG U3L01 Assessment1: "Consider the algorithm you designed\nfor today’s activity.
        Identify two instances where there may be multiple ways\nto interpret your
        instructions and suggest improvements that could be made\nto improve their
        clarity.\\\r"
      SG U3L01 Assessment3: "Describe the features of a programming\nlanguage that
        make it different from the language you typically use in everyday\nlife. Explain
        why a programming language must be created in this way.\\\r"
      SG U3L02 Assessment: "This lesson introduced the notion\nof \"efficiency\" in
        programming, and that it might mean different things\nat different times.
        \ Think of an example _outside_ of computer science in\nwhich you have heard
        the term “efficiency” and compare it to the ways we talked\nabout efficiency
        in programming.  \\\r\n\\\r\nIn what ways is the meaning of \"efficiency\"\nthe
        same? In what ways is it different?"
      SG U3L02 Free Response Getting Started: "In this lesson\nwe solved a series
        of problems with a limited set of commands (only 2). Give\nat least one reason
        why it's useful to learn how to solve and program solutions\nwith a limited
        set of commands.\\\r\n\\\r\nIn this lesson we solved a series of\nproblems
        using the `Move turtle` and `Orient turtle` subgoals. Give at least\none reason
        that breaking problems down into subgoals is a good approach to\nsolving problems."
      SG U3L02 Free Response Wrap Up: "Summarize your experiences\nwith this first
        App Lab lesson by answering the following questions:\\\r\n\\\r\n\\\r\n\\*\nWere
        you able to be creative with such a limited set of tools?\\\r\n\n-   What
        was\n    most frustrating about this activity? If you could add one additional
        block,\n    what would it be and why? What subgoal would that block achieve?"
      SG U3L03 - draw rect function: "This is your code from\nthe previous level.
        \ Did you know that you can write functions that call your\nother functions?\\\r\n\\\r\nTake
        the code that draws the rectangle and move it\ninto a new function called
        `drawRectangle()`. The first line of your program\nshould be a single call
        to `drawRectangle()`. The rest of the code should\njust be function definitions,
        including your definition for **right**.\\\r\n\\\r\nYou'll\nonly need one
        subgoal for this, `//Define function`.\\\r\n\\\r\nNOTE: your program\nwill
        still do the same thing.  We are just changing the way it is written\nto demonstrate
        that you can use functions you've already written as building\nblocks in new
        functions.\\\r\n\\\r\n![](https://images.code.org/fd6e8b4d2218a242bae19ac9c78b5d5f-image-1447799438050.gif)"
      SG U3L03 - draw step: "We are going to walk you through\na process that shows
        you the benefit of thinking about programming tasks in\nterms of writing functions.\\\r\n\\\r\n\n-
        \  Over the next 3 levels we are going to\n    write a program that draws
        the figure shown at right which sort of looks like\n    a jagged diamond shape.
        <img src=\"https://images.code.org/53679cc10ff90b6120184d93ad012797-image-1441770558200.png\"\n
        \   align='right'>\\\r\n    \\\r\n-   If you look at this image you might
        recognize elements\n    that repeat: this is a 4-sided figure, and each side
        is made up of some zig-zag\n    steps.\\\r\n    \\\r\n-   We're going to break
        the programming down into useable parts\n    and then use those parts as building
        blocks to make this more complex drawing.\\\r\n    \\\r\n-   \\*\n    First
        let's **define** a function that _draws just one of these zig-zag steps._
        \ We've\n    started you out with a definition of `right()` that you can use...\\\r\n
        \   \\\r\n    # \n    Do This:\\\r\n    \\\r\n    **Define** and call a function
        named `drawStep()` which makes\n    the turtle move forward and left as shown.
        \\\r\n    \\\r\n    **Note**: at the end the\n    turtle should be facing
        the same direction it started.\\\r\n    \\\r\n    \\\r\n    You'll\n    use
        four subgoals for this. First, you'll **define a function** (`//Define\n    function`),
        which will include **moving the turtle** (`//Move turtle`) and\n    **orienting
        the turtle** (`//Orient turtle`). Last, don't forget to **call\n    the function**
        (`//Call function`). If you get stuck, plan your solution with\n    subgoals.\\\r\n
        \   \\\r\n    ![](https://images.code.org/4fa605353695afa0cd01ec01a1e2c709-image-1441772033658.gif)"
      SG U3L03 Define and use turnAround: "# Do This:\\\r\n\n**Define**\na function
        called `turnAround()` which turns the turtle around. Once you've\ndefined
        the function **call** it to make sure it works as you expect and then\nmove
        the turtle forward, as shown below. \\\r\n\\\r\n![](https://images.code.org/4c31307ec14cc6dfd65589f2a813120e-image-1447884881189.gif)\\\r\n\\\r\n**Remember**\ntypically,
        you call a function in lines of code _above_ the function definition\n\n-
        \  this might make you  feel like you are working in reverse, since you first\n
        \   write the code to define the function and _then_ add a line to call it.
        \ Here\n    is the `moveTwice` example from the video. You should do something
        similar\n    for turnAround:\\\r\n    \\\r\n    ![](https://images.code.org/3faf16575757ffae616dffd761085ab5-image-1467818996127.gif)\\\r\n
        \   \\\r\n    You'll\n    use four subgoals to solve this problem (sort of).
        First you'll `//Define\n    function`, which will include `//Orient turtle`.
        As you will start to see,\n    even subgoals can be broken down into subgoals
        sometimes. This will be helpful\n    when you start creating more complex
        functions. \\\r\n    \\\r\n    Then you'll `//Call\n    function` and `//Move
        turtle`.\\\r\n    \\\r\n    Don't forget to name your functions."
      SG U3L03 Draw a T using turnAround: "# Do This:\\\r\n\nGet\nsome more practice
        **calling** a function by using `turnAround()` along with\nyour old friend
        the `moveForward()` function to create a plus sign that is\ncentered at the
        turtle's first position, as shown below. Even though you\njust wrote this
        function, we've already **defined** `turnAround()` for you.\n\\\r\n\\\r\nRemember,
        add lines of code that call the function _above_ the definition.\nThe function
        definition is after the function call to support **abstraction**.\nIf you
        don't need to know how the function works inside, you never have to\nlook
        at it, you can just call it.\\\r\n\\\r\n_NOTE: the turtle should end where\nit
        started, which is also the middle of the plus sign, as shown below. Each\nof
        the four segments of the plus sign are one `moveForward()` long._ \\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/9d6c2d7d69c2f1c68c5b273bdbae65c7-image-1441296690812.11.14>\nAM.png>)\\\r\n\\\r\n\\\r\nYou'll
        use three subgoals for this problem: `//call function`,\n`//orient turtle`,
        and `//move turtle`. Defining the function is already done\nfor you. We've
        put subgoals for the first few steps in already. Plan the\nrest of the code
        with subgoal blocks (in the **Goals** tab) to get the most\nefficient path
        before filling it in with blocks."
      SG U3L03 Free Response Wrap Up: "In your own words, explain\nat least one reason
        why programming languages have functions.  Include an\nexample of something
        you did in this lesson that demonstrates the reason you\ndescribe.\\\r"
      SG U3L03 Three Steps: "# Do This:\\\r\n\n<img src=\"https://images.code.org/5f20ab5fd8b95754e8cfc948a4b41522-image-1441772307480.png\"\nalign=right
        width=200>\\\r\nWe are going to continue to build up towards a diamond\nby
        **defining** a function that draws one side of the diamond.\\\r\nIf you look\nat
        the whole image we are trying to draw, you'll notice that each of the\n4 sides
        is comprised of 3 calls to `drawStep()`, plus a few extra moves (shown\nin
        orange).\\\r\n\\\r\nRight now we'll write the code for one of those sides.\nSo...\\\r\n\\\r\n**Define**
        a new function named `drawSide()` which makes three\ncalls in a row to `drawStep()`
        followed by a `moveForward()` and a `right()`.  \\\r\n\\\r\n**Replace**\nthe
        original function call to `drawStep()` with a call to your newly defined\n`drawSide()`
        function. \\\r\n\\\r\nThe diagrams below show the intended actions.\\\r\n\n<table>\r\n<tr>\r\n<td>![](https://images.code.org/480f6787e4d2daf34d67642e25b29de6-image-1441772552026.png)\n</td>\r\n<td>![](https://images.code.org/02f52d406854d6f86535adf2f593ccc9-image-1441772709549.gif)\n</td>\r\n</tr>\r\n</table>\r\n\r\nTo
        solve this puzzle, you’ll use three subgoals.\nYou’ll **Define the function**
        (`//Define function`), which will include **calling**\n2 different functions
        (`//Call function`) and **moving the turtle** (`//Move\nturtle`). Then you'll
        **call the function** (`//Call function`) that you\ndefined."
      SG U3L03 define turnRight and draw a rectangle: "# Draw\n\na rectangle with
        right\\\r\n\\\r\nAs you know, in order to turn right we have\nto call `turnLeft()`
        three times.  We've started you out with a stub that\n**defines** a function
        called `right()`.  Start by adding code inside the\nfunction definition that
        will turn the turtle to the right (by turning left\nthree times) when called.
        \\\r\n\\\r\nThen **use** this function in some code\nto draw a rectangle,
        as shown below.  Make sure the turtle ends facing the\nsame direction and
        in the same location it started. The rectangle below is\n2 `moveForward`s
        tall and 1 `moveForward` wide.\\\r\n\\\r\n![](https://images.code.org/fd6e8b4d2218a242bae19ac9c78b5d5f-image-1447799438050.gif)\\\r\n\\\r\n**Note**:\nYour
        program will still do the same thing. We are just changing the way it\nis
        written to demonstrate that you can use functions you've already written\nas
        building blocks in new functions.\\\r\n\\\r\nYou'll use three subgoals to\nsolve
        the problem: `//Orient turtle`, `//Move turtle`, and `//Call function`.\n`//Define
        function` is already done for you. Notice that we haven't filled\nthe subgoals
        in for you (for the right function or drawing the rectangle).\nIf you are
        having trouble finding the solution, plan your approach with subgoals\nbefore
        filling it in with blocks. If you're not having trouble, feel free\nto skip
        the subgoals."
      SG U3L03 draw diamond: "# Do This:\\\r\n\nWe're finally ready\nto make our diamond!
        **Define** a function named `function drawDiamond()`\nthat **calls** `drawSide()`
        multiple times in order to complete the drawing.\nYour final solution should
        be triggered by **a single call** to `drawDiamond()`.\n\\\r\n\\\r\n\n<table>\r\n<tr>\r\n<td><img
        src=\"https://s3.amazonaws.com/uploads.hipchat.com/65395/961892/NoxVhFlLf9HlybZ/upload.png\"\nwidth=200></td>\r\n<td><img
        src=\"https://images.code.org/dca51c5b17a8c0778787337c3609557c-image-1441802821237.gif\"\nwidth=200></td>\r\n</tr>\r\n</table>\r\n\r\n<hr>\r\n\r\n**Notes**:\r\n\r\nIn\nthe
        end you will have 4 functions defined:\r\n\r\n* drawDiamond()\r\n* drawSide()\r\n*\ndrawStep()\r\n*
        right()\r\n\r\nThese 4 functions work sort of like a hierarchy\nof top-down
        design.  At the top is `drawDiamond()` which makes calls to `drawSide()`,\nwhich
        makes calls to `drawStep()` and `right()`.\r\n\r\nFor most programming\nproblems
        that you face, the problem won't be broken down into pieces like\nit was for
        this series of puzzles. You'll have to figure out your own hierarchy\nof functions
        based on which patterns you want to use multiple times. This\nis why planning
        your solution ahead of time can make your code more efficient.\n\r\n\r\nSubgoals
        will help you do this. Once you recognize that the diamond\ncan be drawn using
        the same function repeated 4 times, you can note with a\nsubgoal comment that
        you'll need to define and call a function for `drawSide()`.\nThen you can
        figure out that one side can be drawn using the same function\n3 times plus
        a couple of steps, you can make note to define and call `drawStep()`.\nOnce
        you've planned the solution, you can fill in blocks to complete it."
      SG U3L04 - 3 by 3 with functions: "# Do This:\\\r\n\n\\\r\nWe're\ngoing to revisit
        a familiar problem, **drawing the 3x3 square as efficiently\nas possible**.
        The only difference is that this time you are armed with the\nability to create
        **layers of functions** to help you design more elegant\nand efficient solutions.
        Use the techniques you've learned for **breaking\ndown problems into layers
        of functions** in order to improve upon your previous\nsolution. Think about
        how to combine functions to use as few blocks as possible.\\\r\n\\\r\nYou'll\nneed
        4 subgoals for this task. Think about how you can `//Define function`\nand
        `//Call function` to draw most of the square, then fill in the rest using\n`//Move
        turtle` and `//Orient turtle`.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/121251ed82b4986848062abacdef6963-image-1441824892425.54.18>\nPM.png>)"
      SG U3L04 - snowflake: "# Do This:\\\r\n\n\\\r\nYou should have\nalready worked
        with a partner to break down the design below into its multiple\nlayers of
        functions. Now you'll have an opportunity to program your solution.\nHere
        are a few things to keep in mind:\\\r\n\\\r\n\n-   Identify useful patterns
        that\n    can be reused and give them **their own functions**.\\\r\n-   Remember:
        The functions\n    you design **can call one another**. This is how you create
        layers of abstraction.\\\r\n-   \\*\n    Functions should be given names that
        are **descriptive and meaningful**.\\\r\n-   \\*\n    Your program should
        be kicked off with a single call to a function that makes\n    calls to subsequent
        functions.\\\r\n    \\\r\n    You'll use four subgoals for this:\n    `//Define
        function` and `//Call function` and `//Move turtle` and `//Orient\n    turtle`.
        If you don't already have a plan somewhere else, plan out your program\n    with
        subgoals first.\\\r\n    \\\r\n    \\\r\n    \\!\\[](\\<<https://images.code.org/afed66de9dc3cdb10f627a176139c58f-image-1441822234028.09.33>\n
        \   PM.png>)"
      SG U3L04 Assessment1: "Consider the figure below.  Use\ntop-down thinking to
        design a solution to the problem.  In the space provided\nwrite a list of
        **just the names** of the functions that you would write in\na program that
        draws this figure.  (Assume that the long line segments are\n6 turtle moves
        long).\\\r\n\\\r\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\\\r"
      SG U3L06 - moveForwardwithParams: "# A New Way to Move\n\nthe Turtle\\\r\nThe
        `moveForward()` turtle command that we've used so far moves\nthe turtle the
        same amount every time (25 pixels in fact). Similarly, `turnLeft()`\nturns
        the turtle to the left exactly 90 degrees. Today we are going to see\nhow
        some functions can **accept input**, such as a number, to be used more\nflexibly.
        For example, you can write `moveForward(103)` to move the turtle\nforward
        exactly 103 pixels if you like.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n**How
        far\nis it to the top edge of the screen?**\\\r\n\\\r\nRun the program to
        see the new\nversion of `moveForward()` in action. Then **changing only the
        number supplied\nto `moveForward()`**, move the turtle to the top edge of
        the screen. Experiment\nto find out the distance in pixels between where the
        turtle starts and the\ntop edge of the screen.\\\r\n\\\r\nOnce you've found
        it, compare with a neighbor\nto see that you're seeing the same thing and
        click **Finish** to move on.\\\r\n\\\r\nYou'll\nonly use one subgoal - `//Move
        turtle` -but now you have more flexibility\nin how this subgoal is achieved.\\\r\n\\\r\n**Note:**
        There might be slight differences\ndepending on whether you get the turtle
        to just touch the edge, or go off\nthe screen entirely."
      SG U3L06 Assessment: "It is said that _functions with\nparameters generalize
        the behavior of a more specific command and allow programmers\nto use functions
        instead of duplicated code._ Explain what this means to you\nusing the difference
        between turnLeft() and turnLeft(angle) as an example.\\\r"
      SG U3L06 Challenge 1 triangle: "# Terminology: _Parameter_\\\r\n\n\\\r\nWhen\nyou
        have a command like: `moveForward(100)` we say that the `moveForward()`\ncommand
        \\*accepts a **parameter\\***.  And 100 is the value _given_ or _supplied_\nto
        `moveForward()`'s **parameter**.  Since this value can change, you will\noften
        see a written description for the command that looks something like\n**`moveForward(pixels)`**
        to indicate that the value supplied to `moveForward()`'s\n**parameter** should
        be the number of pixels you want it move.\\\r\n\\\r\nThe\ngood old `moveForward()`
        command still exists.  In fact it's the **same command**\nas `moveForward(pixels)`.
        The \"parameter-less\" version of `moveForward()`\nsimply supplies a **default
        value** to the parameter.  We might also say that\nthe `moveForward()` command
        has an **optional parameter** since you could\ncall either `moveForward()`
        or `moveForward(50)` and it doesn't cause an\nerror when you run the program.\\\r\n\\\r\n\\\r\n\n#
        New Commands!\\\r\n\n\\\r\nCheck it\nout.  The turtle toolbox now contains
        the _parameterized_ versions of the\nturtle commands including `turnLeft(angle)`
        and `turnRight(angle)`.  \\\r\n\\\r\n\n# \n\nDo This:\\\r\n\\\r\nUse the parameterized
        versions of the commands to draw a triangle\nwith sides that are 100 pixels
        long. Don't forget that you can define and\ncall functions to make the code
        more efficient.\\\r\n\\\r\nAt a minimum, you'll\nuse `//Move turtle` and `//Orient
        turtle` to do this. You can also solve the\nproblem by using `//Define function`
        and `//Call function`.\\\r\n\\\r\n<img src=\"https://images.code.org/0207568ff82b0571fa6757081330749d-image-1441901783815.png\"\nwidth=150>"
      SG U3L06 Challenge 2 purple square: "# Do This:\\\r\n\n\\\r\n**Draw\nthe square:**
        Use pen color and width functions to draw the thick blue square\nshown below.
        \ The size of the square doesn't matter.\\\r\n\\\r\nIn addition to\nthe usual
        `//Move turtle` and `//Orient turtle` (and `//Define function` and\n`//Call
        function` if you want to be extra efficient), you'll also need to\nuse the
        new subgoal `//Set pen properties`.\\\r\n\\\r\n<img src=\"https://images.code.org/6ed36a408e568a0410f10d017550843f-image-1441904430698.png\"\nstyle=\"height:
        250px\">\\\r\n\\\r\n**Remember:** If you get stuck on what a specific\nblock
        does, you can read through the documentation by **hovering over** `penColor()`\nand
        `penWidth()` which let you set the color and size of the pen your turtle\nuses
        to draw. \\\r\n\\\r"
      SG U3L06 Challenge 3 fill pink: "# Drawing with Dots\\\r\n\n\\\r\nWe've\nadded
        a new command called `dot()`.  \\\r\n\\\r\n**Read the documentation** for\nthe
        `dot()` command.\\\r\n\\\r\n**Make a \"snowman\"**\\\r\n\\\r\n\n1.  Set the
        pen color\n    to some new color (we made ours pink)\\\r\n    \\\\t\\* Note:
        even if you just want the\n    default dot color - black - explicitly set
        the color to black here.\\\r\n    \\\r\n2.  2.\n    Using that color, make
        a dot so big that it fills the screen.\\\r\n    \\\r\n3.  In\n    a different
        color, make 3 dots in a row, each one smaller than the next. (We\n    made
        our dots white to look like a snowman)\\\r\n    \\\r\n    You might want to
        go back\n    to the documentation for `penColor()` to look up other colors
        to use.\\\r\n    \\\r\n    ![](https://images.code.org/e63f3cf801abf22c01c475031c46ff66-image-1441992129690.gif)\\\r\n
        \   \\\r\n    You'll\n    need two subgoals for this: `//Set pen properties`
        and `//Move Turtle`. Because\n    you need to make two dots at the beginning
        without moving the turtle, you're\n    really doing `//Set pen properties`
        twice in a row. Because this problem will\n    take a little bit of experimentation
        to get the dots the right size, we've\n    already outlined the problem solution
        with subgoals."
      SG U3L06 Challenge 4 bullseye: "# Hexadecimal Colors\\\r\n\n\\\r\nIn\nreading
        the documentation, you may have noticed that `penColor()` can accept\ncolors
        in the **hexadecimal format (e.g. \"#AC9100\")**. Colors on websites\nwill
        often be represented in this format. It's useful to know how to interpret\nand
        use this format when trying  to duplicate colors in your own images.\\\r\n\\\r\n**Read\nthe
        documentation:** Review the documentation for `penColor()` and pay particular\nattention
        to how to define colors in hexadecimal.\\\r\n\\\r\n\n# Do This:\\\r\n\n**Draw\nthe
        bullseye: \\*\\* Draw the bullseye below using a combination of `penColor()`\nand
        `dot()`.\\\r\n\\\r\n\\***Hint:**\\* _The sample image was created using three\nof
        the following hexadecimal colors: #00ABDC, #CC4400, #1188CC, #006699, #11CC00.\nCan
        you recall how hexadecimal color works to select the correct colors on\nyour
        first try?_\\\r\n\\\r\nFor each circle in the bullseye, you'll complete\nthe
        same subgoal: `//Set pen properties`.\\\r\n\\\r\n<img src=\"https://images.code.org/d53ae656d6eeae3611449b65db669242-image-1441981098736.png\"\nstyle=\"height:
        250px\">\\\r\n\\\r\n\\*\\*Remember:** The hex colors must have quotes\naround
        them so penColor(“#FF0099”)  not penColor(#FF0099)."
      SG U3L06 Challenge 5 overlapping circles: "# Transparency\n\n-   Red, Green,
        Blue, Alpha\\\r\n    \\\r\n    There is another command that lets you set\n
        \   the pen color called `penRGB(r,g,b,a)`.\\\r\n    \\\r\n-   The first 3
        parameters represent\n    values (in the range 0-255) for the red, green,
        and blue channels. \\\r\n-   The\n    4th parameter `a` stands for \"alpha\".
        \ The \"alpha channel\" for color lets\n    you set the level of **opacity**
        as a decimal value between 0 and 1. It is\n    interpreted as a percentage,
        so 0.5 equates to 50% opaque.  For example: `penRGB(113,\n    102, 160, 0.5)`.\\\r\n
        \   \\\r\n    So far, we've always moved the turtle with the pen\n    tracing
        the path. In the original robotic turtle used 50 years ago,this meant\n    that
        the pen was down so that it would draw on the paper. The turtle can also\n
        \   move with the pen up, or not tracing its path. The commands to switch
        between\n    these two are `penUp()` and `penDown()`. The pen by default is
        set to down\n    position, so to stop drawing with the pen use `penUp()`.
        When you want to\n    start drawing again, use `penDown()`.\\\r\n    \\\r\n
        \   # Do This:\\\r\n    \\\r\n    **Read the\n    Documentation:** To figure
        out how to use `penRGB()` go read the documentation,\n    paying special attention
        to the syntax used to give a command **multiple values**.\\\r\n    \\\r\n
        \   <img\n    src=\"https://images.code.org/3247af8d88da11a042d0bd9a76b49f12-image-1441982501960.png\"\n
        \   style=\"height: 250px; float: left; margin: 10px\">\\\r\n    \\\r\n    \\*\\*Draw
        the circles:\n    \\*\\* \\\r\n    \\\r\n    Use `penRGB()`,`penUp()` and
        `dot()` to draw two overlapping circles\n    as shown in the image.\\\r\n
        \   \\\r\n    All of these new blocks give you new ways to\n    achieve the
        subgoal `//Set pen properties`. You use this subgoal multiple\n    times to
        complete this problem as well as the `//Move turtle` subgoal."
      SG U3L06 Challenge 6 squiggles: "# Multiple Parameters\n\n-   Making Arcs\\\r\n
        \   \\\r\n    Many commands need more than one parameter to make sense.\n
        \   When a command needs more than one parameter, the parameters are separated\n
        \   by commas. **The order of the parameters matters**.\\\r\n    \\\r\n    Two
        new commands\n    have been added to the block palette, `arcLeft()` and `arcRight()`
        which both\n    accept two parameters. These two blocks are another way to
        accomplish the\n    `//Move turtle` subgoal.\\\r\n    \\\r\n    Read the documentation
        for `arcLeft()` and\n    `arcRight()`. Notice that in the documentation you
        can see what the order\n    of parameters is: first angle, then radius.\\\r\n
        \   \\\r\n    \\\r\n    # Do This:\\\r\n    <img\n    src=\"https://images.code.org/320a5e54abb95b267738d5e15946b51c-image-1441985535028.png\"\n
        \   style=\"height: 250px; float: left; margin: 10px\">\\\r\n    \\\r\n    **Draw
        a squiggly\n    line: \\*\\* \\\r\n    \\\r\n    Using `arcLeft` and `arcRight`
        along with the functions you\n    have already learned to draw a \\*\\*purple
        squiggle on a blue background**. Feel\n    free to use any of the methods
        for choosing colors.\\\r\n    \\\r\n    \\\r\n    \\\r\n    Hints:\\\r\n-
        \  \\*\n    To make the figure exactly, you need to `//Orient turtle` before
        calling `arcLeft()`\n    or `arcRight()` by turning the turtle first.\\\r\n-
        \  The parameters to `arcLeft()`\n    and `arcRight()` are the same.\\\r\n-
        \  The colors are \"PowderBlue\" and \"Purple\"\n-   though you can use other
        colors if you like.\\\r\n    \\\r\n    The subgoals for this\n    problem
        are already in the workspace to help you get started. The first `//Set\n    pen
        properties` is for drawing the background. Then you will draw the squiggle.\n
        \   Notice that you'll achieve `//Move turtle` using the new arc blocks. As
        we\n    learn more features of App Lab, you'll have more options for how to
        complete\n    subgoals. "
      SG U3L06 Challenge 7 smiley face: "# Moving Relative to\n\nthe Screen\\\r\n\\\r\nThe
        turtle commands we've seen so far move the turtle **relative\nto the turtle's
        location and direction**. If you want to get the turtle to\na specific position
        on the screen using only `moveForward()` or `turnLeft()`,\nyou need to know
        the turtle's location beforehand.\\\r\n\\\r\nTwo new commands\nin the toolbox
        help resolve this issue. `moveTo()` moves the turtle to a location\non the
        screen based on its X and Y coordinates. `turnTo()` turns the turtle\nin a
        specific direction. Together these commands can make many drawings easier\nto
        complete.\\\r\n\\\r\nJust like `moveForward()`, `moveTo()` achieves the subgoal\n`//Move
        turtle`. And just like `turnLeft()`, `turnTo()` achieves the subgoal\n`//Orient
        turtle`.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\\*\\*Read the documentation:
        \\*\\* Read\nthe documentation for `moveTo()` and `turnTo()`. Pay specific
        attention to\nhow the coordinate system is arranged in App Lab as it is different
        from what\nyou might have seen in a math class.\\\r\n\\\r\n\\*\\*Draw the
        smiley: \\*\\* Use these\nnew commands to help you draw the smiley face pictured
        below.\\\r\n\\\r\n\\*\\*HINT:\n\\*\\* Don't forget to use `penUp()` and `penDown()`.\\\r\n\\\r\nMake
        sure that you\nplan your program with subgoals before you start filling in
        the blocks. Especially\nbecause you'll have to do some trial and error with
        the parameters, planning\nwith subgoals will help keep you organized.\\\r\n\\\r\n![](https://images.code.org/20cab2a0b3a4fdfd53d7a1876963fa10-image-1441990625064.png)"
      SG U3L06 Challenge 8 make your own: "# The Full Turtle\n\nAPI\\\r\n\\\r\nWe've
        added a few more commands to the toolbox. At this point\nyou have access to
        every turtle command provided by App Lab. As we've already\nseen with our
        exploration of functions you can combine these commands to create\nmore complex
        functionality, but at the lowest level all of your code will\nbe making use
        of the set of commands provided by App Lab.\\\r\n\\\r\n<img src=\"https://images.code.org/7648c5293d04a57e4f715b5c08899ff9-image-1441996324573.png\"\nstyle=\"height:
        250px; float: left; margin: 10px\">\\\r\n\\\r\nCode you write\nwill always
        be based upon the commands that are provided by the programming\nlanguage
        you are using. When several commands are provided in a logical chunk,\nlike
        the set of turtle commands, we refer to them collectively as a **library**\nof
        functions. The total set of commands that a language provides access to\nis
        called the **application program interface**, or simply an **API**. \\\r\n\\\r\nAs\nyou
        gain more experience you will gain familiarity with the API for the language\nyou
        are using, but you will still want to return to the **API documentation**\nfrom
        time to time to remind yourself what functionality a language offers.\\\r\n\\\r\nCongratulations,\nyou've
        really come a long way as a turtle artist! \\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n**Draw\nwhatever
        you like!**  The only requirements are:\\\r\n\\\r\n\n-   use at least 3 different\n
        \   colors\\\r\n-   use moveTo\\\r\n    \\\r\n    Explore the documentation
        for any new commands\n    you see and use your skills as both an artist and
        user of **API documentation**\n    to **draw something of your own choosing.**
        Don't forget to plan it out using\n    subgoal labels.\\\r\n    \\\r\n    If
        in doubt: try to re-create \"I [heart] CS\" drawing\n    shown here."
      SG U3L07 - allSeaGrass: "# Add Seagrass\\\r\n\n<img src=\"https://images.code.org/a67f893ea9187b253ec4f6abcb16b7cf-image-1443048301130.30.42\nPM.png\"
        style=\"width: 200px; float: right\">\\\r\nOur new version of `drawSeagrass`\nnow
        draws a single piece of seagrass with a random height.  Now let's use\na loop
        in `drawAllSeagrass` to fill the sea floor with it.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\\*\n**Add
        a `for` loop** to `drawAllSeagrass` that draws about **50 pieces** of\nseagrass
        using your updated `drawSeagrass` function."
      SG U3L07 - createTriangleParam: "# Defining Functions\n\nwith Parameters\\\r\n\\\r\nThis
        time you're going to write your own function\nwith parameters to complete
        an image. Two function calls to `drawTriangle()`\nhave been placed at the
        top of the program but the function itself needs to\nbe defined.  The program
        should draw this:\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/4a96eff03ba79b881b98137048140953-image-1442523578705.59.20>\nPM.png>)\\\r\n\\\r\n\n#
        Do This:\\\r\n\n**Complete** the function definition for `drawTriangle(sideLength)`\n.
        Notice that you have already been given a **descriptive and meaningful parameter\nname**,
        `sideLength`, but you can change it if you wish.\\\r\n\\\r\n**Hint:**\nyou
        should put the pen down and pick it up as part of the definition of `drawTriangle()`\n\n-
        \  that way you guarantee that a call to drawTriangle will always actually\n
        \   draw. Picking the pen up as the last act of the function is a nice thing
        to\n    do for any other code that might not be expecting drawTriangle to
        have a side\n    effect of putting the pen down.\\\r\n    \\\r\n    As a reminder
        of how to use a parameter\n    within the function here is a correct version
        of `drawSquare(size)` for reference.\\\r\n    \\\r\n    ![](https://images.code.org/ead2720df19b117cae753c4397dd832d-image-1442868072299.png)\\\r\n
        \   \\\r\n    When\n    we used the subgoal `//Define function` before, we
        only gave the function\n    a name and then filled it in with blocks. In this
        problem the subgoal `//Define\n    function` includes giving the function
        a name, defining the parameters, and\n    filling it in with blocks. For this
        puzzle, we've done the first two steps\n    for you, but you'll be doing it
        all in the coming puzzles.\\\r\n    \\\r"
      SG U3L07 - fish: "# Add Fish\\\r\n\n\\\r\nThe next high-level\nfunction you
        will write is `drawAllFish`. A version of `drawFish` with parameters\nhas
        been provided for you to use.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   **Read**
        the\n    `drawFish` function to know how it works and what **parameters**
        it accepts.\\\r\n    \\\r\n-   \\*\n    **Add a loop** to `drawAllFish`.\\\r\n
        \   \\\r\n-   **Place the commands already inside\n    the function in your
        loop.** This way your code will **move the turtle randomly**\n    around the
        **top 360 pixels** of the image and draw **15 fish** of random\n    size between
        **5 and 20** using `drawFish`.\\\r\n    \\\r\n-   Once you have your loop\n
        \   working try calling `drawFish` with random values for its `red`, `green`,\n
        \   and `blue` parameters to get differently colored fish.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/cbbb8e02c14cbc2d199ede4531090513-image-1443046439253.12.35>\n
        \   PM.png>)"
      SG U3L07 - introSquare: "# Getting Started with Loops\\\r\n\n\\\r\nA\n**loop**
        is a block of code that is repeated or \"looped through\" in a program.\nYou
        will be creating a loop using the `for` loop block.\\\r\n\\\r\nWe'll start\nby
        experimenting with a program similar to what you saw in the video.\\\r\n\\\r\n\n#
        \n\nDo This:\\\r\n\n-   **Drag** out a `for` loop block. This serves the subgoal
        `//Write\n    a loop`. Much like the subgoal `//Define function`, you will
        then fill in\n    the loop, which might involve achieving more subgoals, like
        `//Move turtle`\n    and `//Orient turtle`.\\\r\n    \\\r\n-   **Inside the
        loop:**\\\r\n    \\\\t\\* **Add** a call\n    to `moveForward()`.\\\r\n    -
        \  **Add** a call `turnLeft()`. (HINT: try turning\n        by 137 degrees
        to start. You can change after that.)\\\r\n        \\\r\n        ![](https://images.code.org/4da4a0c8a10a3c9637df96507fece183-image-1443038466204.gif)\\\r\n
        \       \\\r\n-   \\*\n    **Run** the program to see the loop in action.\\\r\n-
        \  **Experiment:**\\\r\n-   \\*\n    **Change** the number of times the loop
        runs.\\\r\n-   **Increase** the run speed\n    to see how fast loops can execute.\\\r\n-
        \  **How many times** can the loop run\n    before you can no longer tell
        the difference in the image?\\\r\n    \\\r\n    **Move\n    on** once you
        feel like you have a decent grasp of using a `for` loop: setting\n    the
        number of times to repeat, running the program, and setting the run speed.\\\r"
      SG U3L07 - loopsWithRandom: "# Using Multiple Loops\\\r\n\n\\\r\nSome\nrepeated
        tasks can't easily be solved with a single loop. Instead, you'll\nneed to
        use **one loop after another**, each one solving a part of the problem.\n\\\r\n\\\r\n\n#
        Do This:\\\r\n\n\\\r\nAdd a loop to fill the screen with semi-transparent\nwhite
        dots until the original dots are \"erased\".\\\r\n\\\r\n<img src=\"https://images.code.org/329912b3c61cc62acbd36035ff4b823a-image-1443109101866.gif\"\nstyle=\"float:
        right; width: 100px\">\\\r\n\n-   \\*\\*Drag \\*\\* a second loop into your\n
        \   code that will run after the first loop.\\\r\n-   **Add** commands to
        draw dots\n    in random locations that are white with opacity set to 0.5.\\\r\n-
        \  **Increase\n    the iterations** so that the colored dots are totally erased.
        How many does\n    it take?\\\r\n    \\\r\n    HINT: you can copy/paste the
        original loop and just change\n    the color of the dots and number of iterations."
      SG U3L07 - randomDots1: "# Looping with Random Values\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/520e45a90988b04bb0ff3baa184f080a-image-1443108426597.png\"\nstyle=\"width:
        100px; float: right;\">\\\r\n\\\r\nIf you add some randomness to\nturtle behavior
        inside a loop, the program will run a little differently every\ntime which
        can make for some cool effects.\\\r\n\\\r\nYou're about to see a program\nin
        which the turtle **moves to a random location** each iteration of the loop,\nand
        **draws a randomly-sized dot** that also has a **random color**.  We've\nalso
        made the dot semi-transparent by setting the alpha value to 0.5 (50%\ntransparency).\\\r\n\\\r\n\n#
        Do This:\\\r\n\n\\\r\n**Figure out how many iterations**\n(number of times
        the loop runs) you need to consistently fill the screen entirely\nwith dots
        so none of the background is showing.  It will be a little different\nevery
        time so you'll need to experiment.\\\r\n\\\r\n**Compare what you found**\nwith
        a neighbor to see how close your results are.  Then **move on**."
      SG U3L07 - randomSquare: "# Practice Using Loops - Part\n\n2\\\r\n\\\r\nLet's
        look at the second example from the video. \\\r\n\\\r\nUse a `for`\nloop to
        call a function that you wrote.  We've provided the code for the\n`drawSquare()`
        function for you. \\\r\n\\\r\n**Drag out** a `for` loop.\\\r\n\\\r\n**Inside\nthe
        loop** add a call to `drawSquare()`, and a call to `turnRight()`.\\\r\n\\\r\n**Run\nthe
        program** to see what's happening.\\\r\n\\\r\n\n# Do This:\\\r\n\nChange the
        number\nof loop iterations to draw a lot of squares.  Try to create the figure
        shown\nbelow (or something similar).  HINT: the image below has 72 squares
        in it.\\\r\n\\\r\n![](https://images.code.org/e4d3f180b2f1e421a96d40ecacce029a-image-1443104869913.gif)\\\r\n\\\r\nOnce\nyou've
        played enough to get the hang of calling a function from inside a\nloop then
        **move on**.\\\r\n\\\r\nTo solve the problem, you'll achieve the subgoal\n`//Write
        a loop` and within your loop, you'll use `//Call function` and `//Orient\nturtle`."
      SG U3L07 - seaGrass: "# Controlling Loops with Parameters\\\r\n\n<img\nsrc=\"https://images.code.org/37d6dbcab707f67485ab3b0cc2a1cae9-image-1443114033511.png\"\nstyle=\"width:
        200px; float: right\">\\\r\nThis time you will modify one of\nthe lower-level
        functions - `drawSeagrass`. Notice that the current version\nof `drawSeagrass`
        actually uses a loop. We want to modify this function so\nthat we control
        the number of times it loops with **a parameter**.\\\r\n\\\r\n\n# \n\nDo This:\\\r\n\\\r\n\n-
        \  **Look at** the `drawSeagrass` function to see how it currently\n    works.\\\r\n
        \   \\\r\n-   \\*\\*Add a parameter \\*\\* that will be used to indicate how
        many\n    waves the seagrass makes.\\\r\n    \\\r\n    <img src=\"https://images.code.org/1f2f0c5e1fc17e541760c4f0fd24b13b-image-1447887194713.7.10\n
        \   drawSeagrass add param.gif\" style=\"width:350px;padding-left:22px;\">\\\r\n
        \   \\\r\n-   \\*\n    **Modify the `'for` loop** so that it uses that **parameter**
        as the number\n    of times to repeat.\\\r\n    \\\r\n    ![](https://images.code.org/23e8e43ec4853c0bdbbbd50b9651300a-image-1443113032135.gif)\\\r\n\n\\\r\n\n-
        \  Finally, **modify `drawAllSeagrass`** to call this new two-param version\n
        \   of `drawSeagrass` supplying a reasonable random value for the second parameter\n
        \   as well.\\\r\n    \\\r\n    <img src=\"https://images.code.org/4f15021cd9cebb62562665d3ddc82c51-image-1447885963677.PNG\"\n
        \   style=\"width:400px;padding-left:22px;\">"
      SG U3L07 - seaStar: "# Add Sea Stars\\\r\n\n\\\r\nWe're now\nready to add sea
        stars to our image by writing `drawAllSeaStars`. Recall that\nwe've already
        written loops to draw much more complex stars. \\\r\n\\\r\n\n# Do\n\nThis:\\\r\n\\\r\n\n-
        \  **Read** the `drawSeaStar` function to know how it works and\n    what
        **parameters** it accepts.\\\r\n    \\\r\n-   **First: Update** `drawSeaStar`
        to\n    use a `for` loop \\\r\n    \\\r\n    \\\\t\\* `drawSeaStar` has a
        portion of code that uses\n    a longer sequence of repetitious single commands.
        \ \\\r\n    -   Find the pattern\n        and \"wrap a loop\" around it so
        that the repetition is done with a loop rather\n        than many lines of
        declarative function calls.\\\r\n        \\\r\n-   **Second: Add a loop**\n
        \   to `drawAllSeaStars`.\\\r\n    \\\r\n    \\\\t\\* **Place the commands
        already inside the\n    function in your loop.** This way your code will **move
        the turtle randomly**\n    around the **bottom pixels (y values between 360
        and 450)** of the image.\\\r\n    \\\r\n-   \\*\n    **Draw 5 sea stars**
        of random size between **10 and 30** using `drawSeaStar`.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/1aadf83bcecaf5ca6c505e46d43e5f45-image-1443046811335.20.04>\n
        \   PM.png>)"
      SG U3L07 - sunBeams: "# Add Sunbeams\\\r\n\n<img src=\"https://images.code.org/9e08dae8486f66422d492b8d8a6777eb-image-1443048962131.55.54\nPM.png\"
        style=\"width: 200px; float: right\">\\\r\nFinally, we'll add some\nvisual
        flourish by writing `drawAllSunbeams`. Note: The `turnTo` command makes\nthe
        turtle face a random direction prior to drawing each sun beam.  \\\r\n\\\r\n\n#
        \n\nDo This:\\\r\n\\\r\n\n-   **Read** the `drawSunbeam` function to know
        how it works\n    and what **parameters** it accepts.\\\r\n    \\\r\n-   **Add
        a loop** to `drawAllSunbeams`\n    to draw about 100 sunbeams. Inside your
        loop:\\\r\n    \\\r\n-   **Place the commands\n    already inside the function
        in your loop.** This way your code will move the\n    turtle to a random x
        location at the top of the image (y is 0), `turnTo` a\n    random angle between
        **165 and 175 degrees**, and call `drawSunbeam`."
      SG U3L07 Free Response Reflection: "When breaking a problem\ndown, you often
        encounter elements that you want to use repeatedly in your\ncode. Sometimes
        it's appropriate to write a new function; at other times\nit's appropriate
        to write a loop.  \\\r\n\\\r\nThere is no hard-and-fast rule\nas to which
        is better, but what do you think?  What kinds of circumstances\nwould lead
        you to writing a function versus using a loop?\\\r\n\\\r"
      SG U3L07 More Subgoals: "# More New Commands: Pen Properties\\\r\n\n\\\r\nTwo\npowerful
        new commands have been added to the toolbox, `penColor()` and `penWidth()`.\nThese
        both serve the new subgoal `//Set pen properties`. By changing the properties\nof
        the pen, you are no longer limited to just a thin black line. \\\r\n\\\r\n\n#
        \n\nDocumentation\\\r\nAs we move forward you are going to see more and more
        (and\nmore!) commands added to the toolbox.  What happens if you see a command
        and\ndon't understand it, or you forget how it works?  Don't worry, this happens\nto
        professional programmers all the time! No one actually memorizes long lists\nof
        commands.  Most programming environments have ways to quickly look up documentation\nabout
        the commands of the language you're using.  **Good news: App Lab has\ndocumentation
        too!**\\\r\n\\\r\n![](https://images.code.org/3fe10e1b65edb37306099098161be001-image-1441990727053.gif)\\\r\n\\\r\nWhen\nyou
        **hover your mouse over a non-subgoal command** in the block palette a\nbubble
        pops up with a quick reminder of what a function does, and what its\nparameters
        are. If you click \"See examples\", you will be taken to more detailed\ndocumentation
        of the command which includes **code examples** that you can\neven copy and
        paste.\\\r\n\\\r\n**Read the documentation:** Read through the documentation\nby
        **hovering over** `penColor()` and `penWidth()` which let you set the color\nand
        size of the pen your turtle uses to draw. The documentation for `penColor()`\nhas
        a lot in it!  For now just look at the **named colors**, things like \"red\",\n\"green\",
        etc.  Don't worry, you'll get a lot of opportunities to practice\nwith colors
        in a variety of ways.  We're just getting started!\\\r\n\\\r\n\n# Do\n\nThis\\\r\nYou
        should explore some of the documentation. Then Run the code and\nclick Finish."
      SG U3L08 - createTwoParamTriangle: "# Defining Functions\n\nwith Multiple Parameters\\\r\n\\\r\nNow
        it's your turn to define a function that\naccepts multiple parameters. Just
        like in the previous example make sure you\n**separate your parameters with
        commas** and give them **descriptive and meaningful**\nnames.\\\r\n\\\r\n\n#
        Do This:\\\r\n\n-   **Drag out \\*\\* the function block, and \\*\\*name**\n
        \   your function `drawTriangle()`. \\\r\n-   **Define `drawTriangle()` to
        have two\n    parameters \\*\\* within the parentheses making sure to give
        them \\*\\*descriptive\n    and meaningful** names separated by commas, such
        as `(size,width)`. \\\r\n    \\*\n    This animation shows you how (without
        subgoals in the code) ![expandable](https://images.code.org/b1f5eead2ccb60e5ae607feff590bd3c-image-1442850344677.gif)\\\r\n
        \   \\\r\n-   \\*\n    Then \\*\\*write \\*\\* the code inside `drawTriangle(size,
        width)` that will make\n    it work as described.\\\r\n-   If you get stuck,
        come up with a top-down plan\n    and the subgoals you need for creating a
        function that draws a triangle.\\\r\n-   \\*\n    Test it out!  \\*\\*Run
        \\*\\* the code and experiment to create an image similar\n    to the one
        below.\\\r\n    \\\r\n    Remember that to achieve the subgoal `//Define function`,\n
        \   you need to give it a name, identify the parameters, and fill it in with
        blocks.\\\r\n    \\\r\n    \\!\\[](\\<<https://images.code.org/a389c07c259c8877989b6920328a4c78-image-1442529590755.39.38>\n
        \   PM.png>)"
      SG U3L08 - drawSquareWithParam: "# Defining and Using\n\na Function with a Parameter\\\r\nFrom
        the video, you learned that defining multiple\nfunctions to draw different
        sized squares results in lots of repetitive functions\n\n-   they are essentially
        the same, with a few numbers changed - and this is\n    not desirable.\\\r\n
        \   Any time you find yourself effectively copy and pasting\n    large sections
        of code, it's usually a sign that there is a better way.\\\r\n    \\\r\n    #
        \n    Do This:\\\r\n    Uh oh! Something's wrong! We've set up a program that
        runs,\n    but doesn't do what it's supposed to do. The program is supposed
        to make\n    a drawing with two squares that looks like this:\\\r\n    \\\r\n
        \   <img src=\"https://images.code.org/3eae30651dabc2f83a8bbbbbf8bea7ad-image-1442420537113.26.34\n
        \   AM.png\" style=\"width: 150px;\"> \\\r\n    \\\r\n    We've given you
        the `drawSquare(size)`function\n    that was created in the video, but it's
        not quite right. **Fix the code inside\n    the `drawSquare()` function so
        that the program creates the drawing correctly.**\\\r\n    \\\r\n    **HINT:**\n
        \   You should only need to change one thing about an existing line of code.
        You\n    don't need to add or remove any lines of code. Remember: The parameter
        `size`\n    acts like a placeholder for a value that gets plugged into each
        call to `moveForward()`."
      SG U3L08 - fish: "# Adding parameters to functions: _drawFish_\\\r\n\n\\\r\nLet's\nupdate
        our `drawFish()` function to accept a parameter. Currently `drawFish()`\ncan
        only draw a fish of size 30.\\\r\n\\\r\n**Add a parameter** to the function\ndefinition
        for `drawFish()` that allows you to control its size (Note: the\npen width
        is important here.) Make sure your parameter has a **descriptive\nand meaningful**
        name.\\\r\n\\\r\n**Update your function calls** to use your new\nversion of
        `drawFish()` and change the size of the fish in your image.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/35f9a55244004dad62781f4ae0ce7eb2-image-1442608034411.26.55>\nPM.png>)"
      SG U3L08 - introUnderTheSea - recovery: "# Under the Sea!\\\r\n\n\\\r\nIn\nthe
        next several challenges you will be working to improve **one program**\nthat
        draws an underwater scene.  Each time you  finish a puzzle and move on\nto
        the next one, your code will be pulled forward and you'll get new instructions\ntelling
        you what to add.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   \\*\\*Read through
        \\*\\* the\n    program provided to get a basic understanding of what it does.\\\r\n-
        \  **Add\n    function calls \\*\\* to the top of the program so that \\*\\*two
        fish, two starfish,\n    and two pieces of seagrass** appear somewhere in
        the scene.You don't need\n    to provide values for the parameters at this
        stage.\\\r\n-   **Hint:** you need\n    to call `moveTo` before drawing a
        second fish, starfish or seagrass, otherwise\n    you won't see the second
        one because it will draw exactly over the first\n    one -- those functions
        draw based on where the turtle is just before the call.\\\r\n-   \\*\n    Test
        out your code. If something doesn't work like you expect, consider whether\n
        \   you can add anything to the functions' definitions to make them better.\\\r\n-
        \  \\*\n    **Continue \\*\\* to the next level, \\*\\*where your code will
        be waiting for you.**\\\r\n    \\\r\n    \\!\\[](\\<<https://images.code.org/a53accb7edf7ed4e09d56bab903e1af9-image-1442604192660.22.35>\n
        \   PM.png>)"
      SG U3L08 - introUnderTheSea: "# Under the Sea!\\\r\n\n\\\r\nIn\nthe next several
        challenges you will be working to improve **one program**\nthat draws an underwater
        scene.  Each time you  finish a puzzle and move on\nto the next one, your
        code will be pulled forward and you'll get new instructions\ntelling you what
        to add.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   \\*\\*Read through \\*\\*
        the\n    program provided to get a basic understanding of what it does.\\\r\n-
        \  **Add\n    function calls \\*\\* to the top of the program so that \\*\\*two
        fish, two starfish,\n    and two pieces of seagrass** appear somewhere in
        the scene.You don't need\n    to provide values for the parameters at this
        stage.\\\r\n-   **Hint:** you need\n    to call `moveTo` before drawing a
        second fish, starfish or seagrass, otherwise\n    you won't see the second
        one because it will draw exactly over the first\n    one -- those functions
        draw based on where the turtle is just before the call.\\\r\n-   \\*\n    Test
        out your code. If something doesn't work like you expect, consider whether\n
        \   you can add anything to the functions' definitions to make them better.\\\r\n-
        \  \\*\n    **Continue \\*\\* to the next level, \\*\\*where your code will
        be waiting for you.**\\\r\n    \\\r\n    \\!\\[](\\<<https://images.code.org/a53accb7edf7ed4e09d56bab903e1af9-image-1442604192660.22.35>\n
        \   PM.png>)"
      SG U3L08 - multiParamFish: "# Multiple Parameters\\\r\n\n\\\r\nLet's\nmake our
        drawings even more interesting by adding some variety to the color.\\\r\n\\\r\n**Add**\nthree
        more parameters called `red` , `green` , and `blue` to your function\ndefinition
        for `drawFish` which allow you to set the color of the fish when\nyou call
        the function. Remember to separate them with commas!\\\r\n\\\r\n**Note:**\nthis
        means that drawFish will now have 4 parameters total: size, red, green,\nand
        blue. Remember that identifying these parameters are all part of the subgoal\n`//Define
        function`.\\\r\n\\\r\n**HINT:** inside drawFish just replace the numbers\nof
        the penRGB values with the parameters of your function.\\\r\n\\\r\n**Change**\nthe
        function calls at the top your code to draw different colored fish.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/14b52d152c818903b0fc87061126f0f8-image-1442608501173.34.30>\nPM.png>)"
      SG U3L08 - paramsToStarfish: "# Adding Parameters to Functions:\n\n_drawStarfish_\\\r\n\\\r\nWe
        want to make our picture more interesting by adding\nsome variety. Currently
        the `drawStarfish()` function can only draw a starfish\nof size 60.\\\r\n\\\r\n**Add
        a parameter** to the function definition for `drawStarfish()`\nthat allows
        you to control its size - like `drawStarfish(size)`. Make sure\nyour parameter
        has a **descriptive and meaningful** name. Also make sure to\nchange the blocks
        within the function to use the parameter name that you chose.\\\r\n\\\r\n**Update\nyour
        function calls** to use your new version of `drawStarfish()` and change\nthe
        size of your starfish.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/320485cb05b50bcdb8aa8d13c0164502-image-1442606362191.59.12>\nPM.png>)"
      SG U3L08 - randomInput: "# Random Input\\\r\n\n\\\r\nYou have\na new block that
        allows you to generate a random number. You can use this\ninstead of hard-coding
        in values every time you call a function.\\\r\n\\\r\n![](https://images.code.org/5ff13bfdf582692f009b787570d467d0-image-1470145136252.png)\\\r\n\\\r\n**Read\nthe
        documentation** for the randomNumber block.\\\r\n\\\r\n\n# Do This\\\r\n\n**Use\nrandomNumber
        to provide random input** to _all three_ of your drawing functions.  Just\ninsert
        the call to randomNumber where you would otherwise put numbers.  \\\r\n\\\r\nLike\nthis:\\\r\n![](https://images.code.org/ad87d7d122ac585a6de9e46a49736228-image-1470146652402.png)\\\r\n\\\r\nUse\nrandomNumber
        in calls to all three of your drawing functions:\\\r\n\\\r\n\n-   drawStarfish\\\r\n-
        \  \\*\n    drawSeagrass\\\r\n-   drawFish\\\r\n    \\\r\n    This is a great
        way to **test** out functions\n    and also get some **interesting looking
        images**. Every time you run the program\n    you can get slightly different
        looking scenes like the ones below.\\\r\n    \\\r\n    ![](https://images.code.org/d2031f555ed23bcfa4a6a6165074b559-image-1442852053630.png)"
      SG U3L08 - seaGrass: "# Adding Parameters to Functions:\n\n_drawSeagrass_\\\r\n\\\r\nTo
        keep adding variety to our image let's keep adding\nparameters to our functions.
        Currently the `drawSeagrass()` function can only\ndraw a piece of seagrass
        with arcs of radius 100.\\\r\n\\\r\n**Add a parameter**\nto the function definition
        for `drawSeagrass()` that allows you to control\nits size. (You'll only need
        to change the radius of each arc.) Make sure\nyour parameter has a **descriptive
        and meaningful** name.\\\r\n\\\r\n**Update\nyour function calls** to use your
        new version of `drawSeagrass()` and change\nthe size of the seagrass in your
        image.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/0b7d1750101a4c81ef8d77d8668f94f2-image-1442606862829.07.30>\nPM.png>)"
      SG U3L08 - squareTwoParams: "# Calling Functions with\n\nMultiple Parameters\\\r\n\\\r\nHere
        is a new definition for `drawSquare()` that\nhas two parameters: `drawSquare(size,
        borderWidth)` Notice how **multiple\nparameters are separated by commas**.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/c9766f914d59531614c753e9147d29dd-image-1447801298794.01.15>\nPM.png>)\\\r\n\\\r\n\n#
        Do This:\\\r\n\nAdd to the code to **make two calls** to the\nnew two-parameter
        version of `drawSquare()` to make an image similar to this\none.\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/ddd85deb33ff82f3c257d25cdc9e6384-image-1442526350229.45.38>\nPM.png>)\\\r\n\\\r\nJust
        like for the subgoal `//Define function`, the subgoal\n`//Call function` used
        to involve only identifying the function's name. Now\nwhen you call a function,
        you need to identify the function's name and the\nvalue of the parameters
        for the function."
      SG U3L08 Assessment2: "“Abstraction” is often used to\nfocus on a general case
        and ignore a specific instance of a problem. \\\r\n\\\r\nGiven\nthis meaning
        of the word, how are functions with parameters an example of\nabstraction?"
      SG U3L08 comments: "# Commenting code for yourself and\n\nfor collaboration\\\r\n\\\r\nProgrammers
        write comments into their code for two\nmain reasons: (1) sharing code with
        other programmers (2) remembering their\nown thoughts or plans for code they
        write.  \\\r\n\\\r\nFor both cases a programmers\n**write comments into their
        code to explain their thinking to the reader.**\\\r\n\\\r\nThe\nsubgoal comments
        you've seen are a specific type of commenting meant to help\nyou learn.  As
        you get more experience  programming, comments you write can\nbe in addition
        to, or simply replace your subgoal comments.\\\r\n\\\r\n\n<details><summary\n><b>More:
        Why write comments?</b></summary>\r\n<div style=\"background-color:\n#e9f7f7;
        margin-left: 20px; padding: 10px\">\r\n<p>\r\nWhen sharing code with\nothers,
        comments are useful to point out sections of code you might want help\nwith,
        or to explain a complicated section of code that's hard to reason about.  It's\nuseful
        for example to write a comment like: <code>//This function assumes\nthat the
        fish have already been drawn</code> because it helps the reader understand\nwhen,
        where, why that section of code might be executed.\r\n</p>\r\n<p></p>\r\n<p>\r\nWhen\nwriting
        comments for yourself, it might be a note about how you plan to solve\na problem,
        or jotting down the reason you did something to remind yourself\nlater when
        you come back to it.  For example you might write a comment like:\n<code>//to
        do: make a function to handle this code below</code>\r\n  </p>\r\n  <p>\r\n
        \ Many\nprogrammers, when starting from scratch, like to write out a high
        level plan\nfor the code they want to write in comments, and then go in starting
        writing\ncode to fill in the plan. This is particularly useful if you're facing
        a\nlarge problem that needs to be broken down into parts.  You can think about\nthe
        big picture to start and write out a strategy in comments so you don't\nforget
        it later -- which happens -- because once you start writing code you'll\nrun
        into lots of micro-hurdles that might take time to solve or work out the\nbugs
        and you need your brain space to work on those.  A plan for drawing an\nunder
        the sea scene might look like this:\r\n<pre>\r\n    // setup for drawing\r\n
        \   //\ndraw background with color and bubbles\r\n    // draw all the fish\r\n
        \   //\ndraw all the seagrass\r\n    // draw bubbles again\r\n </pre>\r\n</p>\r\n</div>\r\n</details>\r\n\r\n#\nDo
        This\r\n\r\n**Add your own comments** to the code that you've been working\non.
        Imagine that you are describing the purpose of the code to one of your\nclassmates.
        \ Or find the most complicated part and try to explain it.\r\n\r\nThe\nway
        that you add comments is with the `// Comment` block, which is in the\n**Functions**
        tab of the toolbox.\r\n\r\n**See how:** ![expandable](https://images.code.org/fc29157949ee10369cb8a8db280b886f-image-1508515330684.gif)"
      SG U3L08 how to add comments: "# Now you try it - Add\n\na comment\\\r\n\\\r\nThe
        starting code provided has some comments already in it.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nInsert a comment that says `// Draw a starfish at specific\nlocation`
        just above the section of code that will draw the starfish. \\\r\n\\\r\nThe\nway
        that you add comments is with the `// Comment` block, which is in the\n**Functions**
        tab of the toolbox ([Show me](#triggercallout=show_comment)).\\\r\n\\\r\n**See\nhow:**
        ![expandable](https://images.code.org/fc29157949ee10369cb8a8db280b886f-image-1508515330684.gif)\\\r\n\\\r\n**Add\nmore
        comments** to the code that explain what each section of code is for.\nImagine
        that you are describing the purpose of the code to one of your classmates.
        \ Or\nfind the most complicated part and try to explain it.\\\r\n\\\r\n**Click
        finish**\nonce you've added the comment.  And keep adding comments as you
        go!!!"
      SG U3L2 Using Simple Commands part 1: "# Welcome to App\n\nLab - Let's get started\\\r\n<img
        src=\"htt\r\nps://images.code.org/f93dfb56ab00f689dcd5867eb4398fa8-image-1508424086651.png\"\nalign=right>\\\r\n\\\r\nWe're
        going to start learning how to program with turtle\ncommands. Given only 2
        turtle commands, write code to complete the drawings\nin each of the following
        challenges. \\\r\n\\\r\n<img src=\"https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif\"\nalign=right>\\\r\n\n#
        Do This: \\\r\n\nAdd code to draw a 1 x 1 square to the front\nand left of
        the turtle as efficiently as possible. The program should stop\nwith turtle
        in its original position, facing its original direction.\\\r\n\\\r\nOnce\nyou
        think you have a solution, click the `Finish` button - it will appear\nafter
        you run the program once.\\\r"
      SG U3L2 Using Simple Commands: "# Now you try it!\\\r\n\n\\\r\nWe'll\nbe learning
        how to code with subgoals throughout this unit.\\\r\n\\\r\nTypically,\nyou'll
        solve problems by dragging blocks from the toolbox to the workspace.\nSometimes
        we'll put subgoals that solve the problem into the workspace, and\nsometimes
        you'll have to identify the subgoals yourself.\\\r\n\\\r\nHere we've\nadded
        a series of `// Move turtle` and `// Orient turtle` subgoals into the\nworkspace
        that describe how to solve the 1x1 square problem...but it's incomplete.\\\r\n\\\r\n\n#
        \n\nDo This: \\\r\n\\\r\n\n-   Complete the code for the the 1x1 square solution
        we've\n    started below.\\\r\n-   Drag each turtle block beneath the proper
        subgoal in the\n    code. \\\r\n    \\\r\n    **Click here to see how** ![expandable](https://images.code.org/5818d0b6080e3a30dc081a166cfbffcb-image-1508437404576.gif)\\\r\n
        \   \\\r\n    <img\n    src=\"https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif\"\n
        \   align=right>\\\r\n    \\\r\n-   Reminder: the turtle should end up in
        its original position,\n    facing its original direction.\\\r\n    \\\r\n
        \   Once you think you have a solution,\n    click the `Finish` button."
      SG U3L2_Add-subgoals: "# New challenge \\<img src=\"<https://images.code.org/c15fee1f27c817a352a521c7ddcb5006-image-1436282127747.png>\"\n\nstyle=\"float:
        right\">\\\r\n\\\r\nDraw a 3x3 grid to the _front_ and _right_\nof the turtle
        _as efficiently_ as possible.\\\r\n\\\r\nWhat does “efficient” mean?\nIn computer
        science it can actually mean several different things depending\non the situation.
        For this problem let's say that efficient means: **using\nthe fewest turtle
        commands possible**\\\r\n\\\r\n\n# Do this\\\r\n\n\\\r\n\n1.  This problem\n
        \   presents some subtle challenges. Before you start creating the program,
        you\n    might want to test your ideas on paper for faster brainstorming.
        Work with\n    your partner to discuss possible solutions or strategies. Try
        more than one.\\\r\n    \\\r\n2.  2.\n    Once you have a solution, **start**
        by identifying the subgoals and drag them\n    from the **Goals** tab into
        the workspace. \\\r\n    \\\r\n3.  Then start filling it\n    in with turtle
        blocks, and **testing** it out as you go by adding a few commands,\n    then
        running the program, adding a few more, run again, and so on.\\\r\n    \\\r\n
        \   When\n    you think you're done click `Finish` and move on.\\\r"
      SG U3L2_Turtle3by3Grid: "# New challenge \\<img src=\"<https://images.code.org/c15fee1f27c817a352a521c7ddcb5006-image-1436282127747.png>\"\n\nstyle=\"float:
        right\">\\\r\n\\\r\nDraw a 3x3 grid to the _front_ and _right_\nof the turtle
        _as efficiently_ as possible.\\\r\n\\\r\nWhat does “efficient” mean?\nIn computer
        science it can actually mean several different things depending\non the situation.
        For this problem let's say that efficient means: **using\nthe fewest turtle
        commands possible**\\\r\n\\\r\n**note:** From now on, the 4\nturtle commands
        mentioned in the video will always be in toolbox.  You don't\nnecessarily
        need `penUp()` and `penDown()` for this challenge, but in the\nfuture you
        might want to use them. ([Show me where](#triggercallout=show_penup))\\\r\n\\\r\n\n#
        \n\nDo this\\\r\n\\\r\n\n1.  This problem presents some subtle challenges.
        Before you\n    start creating the program, you might want to test your ideas
        on paper for\n    faster brainstorming. Work with your partner to discuss
        possible solutions\n    or strategies. Try more than one.\\\r\n    \\\r\n2.
        \ Once you have a solution, **start**\n    by identifying the subgoals and
        drag them from the **Goals** tab into the\n    workspace. ([Show me where](#triggercallout=show_goals))\\\r\n
        \   \\\r\n3.  Then start\n    filling it in with turtle blocks, and **testing**
        it out as you go by adding\n    a few commands, then running the program,
        adding a few more, run again, and\n    so on.\\\r\n    \\\r\n    When you
        think you're done click `Finish` and move on."
      SG U3L2_TurtleSquare_right: "# New problem \\<img src=\"<https://images.code.org/ad48e7224312a6c41f4fc5727af53cc0-image-1436287265071.png>\"\n\nalign=right>
        \\\r\n\\\r\nThis time, draw a 1 x 1 square, so the square is above\nand to
        the right of the turtle.  This means you need to draw it by moving\nand _turning
        right_.  **But there there is no command to turn right!** \\\r\n\\\r\nHow\ndo
        you turn right when the only command you have is `turnLeft()`?  You need\nto
        figure it out.\\\r\n\\\r\n\n## One Subgoal - multiple lines of code \\<img
        src=\"<https://images.code.org/ae8ac9b14b7c016437455d07fdbb6a7c-image-1508440383741.png>\"\n\nstyle=\"float:
        right\">\\\r\nSometimes a single subgoal like `// Orient Turtle`\nmight require
        several lines of code to accomplish. \\\r\n\\\r\nFor example in\nthis problem
        the _goal_ of orienting the turtle for each right turn means\nturning left
        a few times.  So you would add multiple `turnLeft()` commands\nunder a single
        `//Orient Turtle` subgoal. (shown at right).\\\r\n\\\r\n\n<div style=\"clear:\nboth\">
        </div>\r\n\r\n# Do this\r\n\r\n\r\n* We've again added subgoals to\nsolve
        this problem into the workspace.  Notice that we still only use `Move\nturtle`
        and `Orient turtle`.\r\n* Add code beneath each subgoal, to draw a\n1 x 1
        square by moving and *turning right*.\r\n* Reminder: The program should\nstop
        with turtle in its original position, facing its original direction.\r\n\r\nWhen\nyou're
        done click the `Finish` button to move onto the next problem.\r\n\r"
      SG csp_U3_plan_code_FR: "<img src=\"https://images.code.org/01d3b0664443216b4363ec31914e592a-image-1506460763004.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\n<br>\\\r\n\\\r\nIn this lesson we talked about\ntop-down
        design for building up solutions to larger programming problems.  Plan\nthe
        code that you would use to draw this image (shown at right). Describe\neach
        of the functions that you would create. You should not write all the\ncode,
        only the names of the functions that you would create with a brief description\nof
        what each function would do. \\\r\n\\\r\nWrite your plan following the format:\\\r\n\\\r\n\n<div\nstyle=\"clear:
        both\"> </div>\r\n\r\n    Name of function - description of\nwhat it does\r\n\r\n
        \   Name of function 2 - description of what it does\r\n    ..."
      SG csp_U3_square_v_rect_FR: "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\nIn this lesson you wrote code to make the turtle\ndraw
        squares. Briefly describe how the code for drawing a rectangle would\nbe different
        than drawing a square.  (Example rectangle at right)"
      SG subgoals_U3_turtle_prediction_FR: "## Code Trace\\\r\n\n\\\r\nIn\n1-2 sentences,
        explain what you think the following code does.\\\r\n\\\r\n![](https://images.code.org/5bc66acc4712cf1c835daac0c45422a8-image-1506532056958.png)"
      SG subgoals_u3_top_down_FR: "# Design a program\\\r\n\n\\\r\nDescribe,\nusing
        a top-down approach, how you would create a program to draw a white\nsnowflake
        on a blue background that uses random numbers, so the snowflake\nwill be unique
        every time you run the code. \\\r\n\\\r\nYou don’t need to write\nthe exact
        code or blocks that you would use, but you should describe what\nfunctions
        you would need to create, where you would or would not use loops,\nand where
        you would or would not use random numbers."
      SGU3L07 - randomDots1: "# Looping with Random Values\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/520e45a90988b04bb0ff3baa184f080a-image-1443108426597.png\"\nstyle=\"width:
        100px; float: right;\">\\\r\n\\\r\nIf you add some randomness to\nturtle behavior
        inside a loop, the program will run a little differently every\ntime which
        can make for some cool effects.\\\r\n\\\r\nYou're about to see a program\nin
        which the turtle **moves to a random location** each iteration of the loop,\nand
        **draws a randomly-sized dot** that also has a **random color**.  We've\nalso
        made the dot semi-transparent by setting the alpha value to 0.5 (50%\ntransparency).\\\r\n\\\r\n\n#
        Do This:\\\r\n\n\\\r\n**Figure out how many iterations**\n(number of times
        the loop runs) you need to consistently fill the screen entirely\nwith dots
        so none of the background is showing.  It will be a little different\nevery
        time so you'll need to experiment.\\\r\n\\\r\n**Compare what you found**\nwith
        a neighbor to see how close your results are.  Then **move on**."
      SGU3L2A Introducing Subgoals: "# Introducing Subgoals\\\r\n\nWriting\ncode is
        fun, but as you write longer programs that solve more complex problems\nit's
        useful to think at a higher level about the **series of subgoals** that\nbuild
        toward the solution.\\\r\n\\\r\nIn App Lab we have provided special blocks\ncalled
        [`Goals`](#triggercallout=goals_palette) to help you think about the\n**subgoals**
        of the problems you're solving. ([Show me](#triggercallout=goals_palette))\\\r\n\\\r\nThese\nsubgoal
        blocks are known as \"comments\" which programmers use to make notes\nto themselves
        or other people who might view the code. You can drag these\nblocks into your
        code to help label things and stay organized, but they won't\ndo anything
        when you run the program.  Try it out.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\\*\nDon't
        add any code, just click `Run` and notice the following:\\\r\n\n-   In the\n
        \   workspace we've added the subgoals `//Move turtle` and `//Orient turtle`\n
        \   a few places in the code. ([Show me](#triggercallout=show_code)) \\\r\n-
        \  Underneath\n    each subgoal, we've added the blocks to complete the subgoal.\\\r\n-
        \  The point\n    is to simply notice that the subgoals don't change the drawing
        or what the\n    turtle does.\\\r\n-   The turtle is still only controlled
        by the blue turtle command\n    blocks\\\r\n    \\\r\n    After running the
        program, click `Finish` to move on to try\n    it yourself.\\\r\n    \\\r\n
        \   \\\r\n    <!--\r\n    \r\n    This is how we'll be using App Lab throughout\n
        \   this unit. You'll get several puzzles to solve by dragging blocks from
        the\n    toolbox to the workspace. Sometimes the workspace will tell you the
        subgoals\n    of the puzzle, and sometimes you'll have to identify the subgoals
        yourself.\r\n    \r\n    The\n    first step of every puzzle will be to put
        the subgoals of the problem in the\n    workspace (if they aren't already
        there). Then you'll put the blocks that\n    solve the subgoals underneath.\r\n
        \   \r\n    In the workspace below, we've added\n    two subgoals, Move turtle
        and Orient turtle. Underneath each subgoal, we've\n    added the blocks to
        complete the subgoal.\r\n    \r\n    The subgoals are described\n    in comment
        blocks. This means that the subgoal comment will be visible in\n    your code,
        but they won't do anything when you run the code. Comments are\n    purely
        to make notes to yourself or other people who might view the code.\r\n    \r\n
        \   Do\n    This:\r\n    \r\n    Press the Run button to `run` the code. Notice
        that the subgoals\n    don't show up in the drawing. Only the blocks will
        make the turtle do something.\r\n    \r\n    -->"
      Standalone_Artist_2: "Draw this diamond with 120 and 60\ndegree angles and 150
        pixel long sides.\\\r\n\\\r"
      Standalone_Artist_3: "Pouvez-vous dessiner cet hexagone avec des côtés de 100\npixels
        et des angles de 60 degrés ?\\\r\n\\\r"
      Standalone_Artist_4: "Now you've got a new block to play\nwith, the loop. This
        will repeat a set of commands. What happens if you loop\nthese commands 6
        times?\\\r\n\\\r"
      Standalone_Artist_5.5: "Notice how we simplified the diamond\ncode by turning
        it into a loop. You can loop that whole sequence 12 times\nto draw the flower.
        Hint: You'll need to turn 30 degrees after your diamond\nloop so you don't
        keep drawing over the same diamond.\\\r\n\\\r"
      Standalone_Artist_5: "How many times do you need to loop\nthis diamond to draw
        the flower?\\\r\n\\\r"
      Standalone_Artist_6: "Loop this hexagon code 6 times to\ncreate the design.
        How many degrees will you need to turn each time? Hint:\ndivide the number
        of degrees in a circle by the number of times you are looping.\\\r\n\\\r"
      Standalone_Artist_7: "A function is another programming\ntool to help you avoid
        repeating yourself. This function draws a flower, so\nyou can use it any time
        you want to draw a flower. Use this and the new jump\nblock to draw these
        flowers. Hint: The flowers are 150 pixels apart\\\r\n\\\r"
      Standalone_Artist_8: "Voici une fonction appelée « Dessiner\nune forme » que
        nous avons programmée pour dessiner des hexagones. Exécutez le code pour voir
        ce qu'il fait et puis faites des essais avec la fonction pour voir ce qui
        se passe. Pouvez-vous la faire dessiner un motif de carrés, triangles ou octogones
        ?\\\r\n\\\r"
      Standalone_Artist_9: "Now go ahead and make whatever picture\nyou'd like! You've
        even got an empty function that you can make do whatever\nyou want!\\\r\n\\\r"
      Test of comment block: "## instructions\\\r\n\n\\\r\nDrag out\nthe subgoal label
        block you want."
      Testing Quantum Farmer: 'Wow, j''ai trouvé un trou vraiment profond ! Je ne
        sais pas combien de pelletées de terre il faudra pour le remplir.  Peux-tu
        écrire un programme qui le remplira jusqu’à ce que le sol soit nivelé ?  Indice
        :  essaie d''utiliser la boucle «Tant que» cette fois.'
      U3 - Simple Drawing - Personal Drawing: "# Your Own Drawing\\\r\n\n\\\r\nIt
        is\nyour turn to create your own drawing. You should have drawn out your plan\non
        paper first.\\\r\n\\\r\n\n# Do This\\\r\n\nAs a reminder make sure you hit
        the objectives:\\\r\n\\\r\n\\*\nCreates an identifiable and named object or
        design (i.e. no random splatters\nof shapes)\\\r\n\n-   Uses at least 10 shapes
        or text items (rect, ellipse, regularPolygon,\n    text)\\\r\n-   Uses at
        least 4 different color fills\\\r\n-   Uses at least 2 different\n    color
        outlines\\\r\n-   Contains at least 3 different logical blocks of code with\n
        \   comments\\\r"
      U3-AP-Practice-Choose-The-Abstraction: "# AP Practice\n\n-   Identify the Abstraction\\\r\n
        \   \\\r\n    One component of the **AP Create Performance\n    Task** is
        selecting an abstraction that you developed.\\\r\n    \\\r\n    <div style=\"width:\n
        \   80%; margin: auto; background-color: #EEEEEE; padding: 10px; font-family:\n
        \   serif; font-size: 12pt\">\r\n    \r\n    <b>3. Program Code</b>\r\n    <ul>\r\n
        \   <li>Mark\n    with a <b>rectangle</b> the segment of program code that
        represents an abstraction\n    you developed.</li>\r\n    </ul>\r\n    </div>\r\n
        \   <br>\r\n    \r\n    Here's the scoring\n    guide for this question\r\n
        \   \r\n    <div style=\"magin:auto\">\r\n    \\t<img src=\"https://images.code.org/341764b27f16965cf27680e20c893a23-image-1508190677805.50.59\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    # Choose the Student-Created Abstraction\r\n
        \   \r\n    The\n    program code below is from a program a student developed.
        \r\n    \r\n    ![](https://images.code.org/86d48cfc2c9c81551aa059281e9c62f3-image-1508189804595.34.48\n
        \   PM.png)\r\n    \r\n    **Write which of the rectangles (A, B, C, or D)
        is placed around\n    a student-developed abstraction.**\r\n    \r\n    **Then
        explain your answer using\n    the criteria in the scoring guide.**"
      U3-AP-Practice-Choose-The-Abstraction_2018: "# AP Practice\n\n-   Identify the
        Abstraction\\\r\n    \\\r\n    One component of the **AP Create Performance\n
        \   Task** is selecting an abstraction that you developed.\\\r\n    \\\r\n
        \   <div style=\"width:\n    80%; margin: auto; background-color: #EEEEEE;
        padding: 10px; font-family:\n    serif; font-size: 12pt\">\r\n    \r\n    <b>3.
        Program Code</b>\r\n    <ul>\r\n    <li>Mark\n    with a <b>rectangle</b>
        the segment of program code that represents an abstraction\n    you developed.</li>\r\n
        \   </ul>\r\n    </div>\r\n    <br>\r\n    \r\n    Here's the scoring\n    guide
        for this question\r\n    \r\n    <div style=\"magin:auto\">\r\n    \\t<img
        src=\"https://images.code.org/341764b27f16965cf27680e20c893a23-image-1508190677805.50.59\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    # Choose the Student-Created Abstraction\r\n
        \   \r\n    The\n    program code below is from a program a student developed.
        \r\n    \r\n    ![](https://images.code.org/86d48cfc2c9c81551aa059281e9c62f3-image-1508189804595.34.48\n
        \   PM.png)\r\n    \r\n    **Write which of the rectangles (A, B, C, or D)
        is placed around\n    a student-developed abstraction.**\r\n    \r\n    **Then
        explain your answer using\n    the criteria in the scoring guide.**"
      U3-AP-Practice-Choose-The-Abstraction_2019: "# AP Practice\n\n-   Identify the
        Abstraction\\\r\n    \\\r\n    One component of the **AP Create Performance\n
        \   Task** is selecting an abstraction that you developed.\\\r\n    \\\r\n
        \   <div style=\"width:\n    80%; margin: auto; background-color: #EEEEEE;
        padding: 10px; font-family:\n    serif; font-size: 12pt\">\r\n    \r\n    <b>3.
        Program Code</b>\r\n    <ul>\r\n    <li>Mark\n    with a <b>rectangle</b>
        the segment of program code that represents an abstraction\n    you developed.</li>\r\n
        \   </ul>\r\n    </div>\r\n    <br>\r\n    \r\n    Here's the scoring\n    guide
        for this question\r\n    \r\n    <div style=\"magin:auto\">\r\n    \\t<img
        src=\"https://images.code.org/341764b27f16965cf27680e20c893a23-image-1508190677805.50.59\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    # Choose the Student-Created Abstraction\r\n
        \   \r\n    The\n    program code below is from a program a student developed.
        \r\n    \r\n    ![](https://images.code.org/86d48cfc2c9c81551aa059281e9c62f3-image-1508189804595.34.48\n
        \   PM.png)\r\n    \r\n    **Write which of the rectangles (A, B, C, or D)
        is placed around\n    a student-developed abstraction.**\r\n    \r\n    **Then
        explain your answer using\n    the criteria in the scoring guide.**"
      U3-AP-Practice-FR-design-process: "# AP Practice - Performance\n\nTask Response\\\r\n\\\r\nTop-down
        design is design process and strategy for breaking\ndown complex things.  The
        AP Create Peformance task asks you to write about\nyour development process
        when writing code.  \\\r\n\\\r\nLet's take a minute\nto understand this writing
        prompt and how it is scored. Here is the actual\nwriting prompt **2b** from
        the AP Create Task guidelines:\\\r\n\\\r\n\n<div style=\"width:\n70%; margin:
        auto; font-family: serif; font-size: 12pt; line-height: 1.3;\nbackground-color:
        #EEEEEE; padding: 10px\">\r\n\r\n<b>2b.</b> Describe the\nincremental and
        iterative development process of your program, focusing on\ntwo distinct points
        in that process. Describe the difficulties and/or opportunities\nyou encountered
        and how they were resolved or incorporated. In your description\nclearly indicate
        whether the development described was collaborative or independent.\nAt least
        one of these points must refer to independent program development.\n<i>(Must
        not exceed 200 words)</i>\r\n</div>\r\n<br>\r\nYour response to this\nprompt
        can get up to 2 points, and is scored looking at two major things:\r\n\r\n1.\n(1
        point) Do you describe a real *iterative* process for writing the *whole*\nprogram
        - \"Incremental and iterative\" means that you continuously improved\nyour
        program based on testing, reflection, or feedback from a partner.\r\n\r\n2.\n(1
        point) Do you actually describe *two* points in time while writing your\ncode,
        what the specific issue was, and how you got past it by *reflecting*\nor *incorporating
        feedback* from a collaborative partner.\r\n\r\nHere are\nthe actual scoring
        guidelines:\r\n\r\n![](https://images.code.org/1cb4a1840d281a9c5c5096becc8c9054-image-1507827422107.png)\r\n\r\n##\nNow
        you try it\r\n\r\nTry to write a response to this AP Prompt thinking about\neither
        how you developed the idea for the snowflake drawing program, or how\nyou
        resolved to make the 3x3 grid program.  You might have to use a little\nbit
        of imagination to assume that it's part of a larger program you created\nyourself.
        \ The point is to *practice writing* about your development process.\r\n\r\nNOTE:\nWriting
        a response like this will take some time to think about and compose."
      U3-AP-Practice-FR-design-process_2018: "# AP Practice - Performance\n\nTask
        Response\\\r\n\\\r\nTop-down design is design process and strategy for breaking\ndown
        complex things.  The AP Create Peformance task asks you to write about\nyour
        development process when writing code.  \\\r\n\\\r\nLet's take a minute\nto
        understand this writing prompt and how it is scored. Here is the actual\nwriting
        prompt **2b** from the AP Create Task guidelines:\\\r\n\\\r\n\n<div style=\"width:\n70%;
        margin: auto; font-family: serif; font-size: 12pt; line-height: 1.3;\nbackground-color:
        #EEEEEE; padding: 10px\">\r\n\r\n<b>2b.</b> Describe the\nincremental and
        iterative development process of your program, focusing on\ntwo distinct points
        in that process. Describe the difficulties and/or opportunities\nyou encountered
        and how they were resolved or incorporated. In your description\nclearly indicate
        whether the development described was collaborative or independent.\nAt least
        one of these points must refer to independent program development.\n<i>(Must
        not exceed 200 words)</i>\r\n</div>\r\n<br>\r\nYour response to this\nprompt
        can get up to 2 points, and is scored looking at two major things:\r\n\r\n1.\n(1
        point) Do you describe a real *iterative* process for writing the *whole*\nprogram
        - \"Incremental and iterative\" means that you continuously improved\nyour
        program based on testing, reflection, or feedback from a partner.\r\n\r\n2.\n(1
        point) Do you actually describe *two* points in time while writing your\ncode,
        what the specific issue was, and how you got past it by *reflecting*\nor *incorporating
        feedback* from a collaborative partner.\r\n\r\nHere are\nthe actual scoring
        guidelines:\r\n\r\n![](https://images.code.org/1cb4a1840d281a9c5c5096becc8c9054-image-1507827422107.png)\r\n\r\n##\nNow
        you try it\r\n\r\nTry to write a response to this AP Prompt thinking about\neither
        how you developed the idea for the snowflake drawing program, or how\nyou
        resolved to make the 3x3 grid program.  You might have to use a little\nbit
        of imagination to assume that it's part of a larger program you created\nyourself.
        \ The point is to *practice writing* about your development process.\r\n\r\nNOTE:\nWriting
        a response like this will take some time to think about and compose."
      U3-AP-Practice-FR-design-process_2019: "# AP Practice - Performance\n\nTask
        Response\\\r\n\\\r\nTop-down design is design process and strategy for breaking\ndown
        complex things.  The AP Create Peformance task asks you to write about\nyour
        development process when writing code.  \\\r\n\\\r\nLet's take a minute\nto
        understand this writing prompt and how it is scored. Here is the actual\nwriting
        prompt **2b** from the AP Create Task guidelines:\\\r\n\\\r\n\n<div style=\"width:\n70%;
        margin: auto; font-family: serif; font-size: 12pt; line-height: 1.3;\nbackground-color:
        #EEEEEE; padding: 10px\">\r\n\r\n<b>2b.</b> Describe the\nincremental and
        iterative development process of your program, focusing on\ntwo distinct points
        in that process. Describe the difficulties and/or opportunities\nyou encountered
        and how they were resolved or incorporated. In your description\nclearly indicate
        whether the development described was collaborative or independent.\nAt least
        one of these points must refer to independent program development.\n<i>(Must
        not exceed 200 words)</i>\r\n</div>\r\n<br>\r\nYour response to this\nprompt
        can get up to 2 points, and is scored looking at two major things:\r\n\r\n1.\n(1
        point) Do you describe a real *iterative* process for writing the *whole*\nprogram
        - \"Incremental and iterative\" means that you continuously improved\nyour
        program based on testing, reflection, or feedback from a partner.\r\n\r\n2.\n(1
        point) Do you actually describe *two* points in time while writing your\ncode,
        what the specific issue was, and how you got past it by *reflecting*\nor *incorporating
        feedback* from a collaborative partner.\r\n\r\nHere are\nthe actual scoring
        guidelines:\r\n\r\n![](https://images.code.org/1cb4a1840d281a9c5c5096becc8c9054-image-1507827422107.png)\r\n\r\n##\nNow
        you try it\r\n\r\nTry to write a response to this AP Prompt thinking about\neither
        how you developed the idea for the snowflake drawing program, or how\nyou
        resolved to make the 3x3 grid program.  You might have to use a little\nbit
        of imagination to assume that it's part of a larger program you created\nyourself.
        \ The point is to *practice writing* about your development process.\r\n\r\nNOTE:\nWriting
        a response like this will take some time to think about and compose."
      U3-AP-Practice-FR-manage-complexity: "# AP Practice -\n\nPerformance Task Response\\\r\n\\\r\nThe
        AP Create Performance task asks you to\nwrite about an abstraction that you
        developed and wrote into your code. Most\nof the time that means identifying
        a function or procedure you wrote to help\n\"manage complexity\" in your program.\\\r\n\\\r\nHere
        is the actual prompt from\nthe Create Performance Task:\\\r\n\\\r\n\n<div
        style=\"width: 70%; margin: auto;\nbackground-color: #EEEEEE; padding: 10px;
        font-family: serif; font-size: 12pt\">\\\r\n\\\r\n<b>2d.</b>\nCapture and
        paste a program code segment that contains an abstraction you\ndeveloped individually
        on your own (marked with a <b>rectangle</b>). This\nabstraction must integrate
        mathematical and logical concepts. Explain how\nyour abstraction helped manage
        the complexity of your program.\\\r\n<br>\\\r\n<i>(Must\nnot exceed 200 words)</i>\\\r\n\\\r\n</div>\\\r\n\\\r\n<br>\\\r\n\\\r\nBelow
        is a segment\nof code from an \"under the sea\" program with a rectangle drawn
        around a\nportion of the code identifying an abstraction. Imagine that you
        wrote this\nand are composing an AP response about how this abstraction manages
        complexity.  (Note:\nignore the requirement that the abstraction integrate
        \"mathematical and logical\nconcepts\" for this practice response.  Just write
        about managing complexity).\\\r\n\\\r\n![](https://images.code.org/d98fa58fce78eff86fd734f32e2960e4-image-1507913593511.png)\\\r\n\\\r\nExplain\nhow
        the abstraction marked with the rectangle in the code above helps manage\ncomplexity
        of this program."
      U3-AP-Practice-FR-manage-complexity_2018: "# AP Practice -\n\nPerformance Task
        Response\\\r\n\\\r\nThe AP Create Performance task asks you to\nwrite about
        an abstraction that you developed and wrote into your code. Most\nof the time
        that means identifying a function or procedure you wrote to help\n\"manage
        complexity\" in your program.\\\r\n\\\r\nHere is the actual prompt from\nthe
        Create Performance Task:\\\r\n\\\r\n\n<div style=\"width: 70%; margin: auto;\nbackground-color:
        #EEEEEE; padding: 10px; font-family: serif; font-size: 12pt\">\\\r\n\\\r\n<b>2d.</b>\nCapture
        and paste a program code segment that contains an abstraction you\ndeveloped
        individually on your own (marked with a <b>rectangle</b>). This\nabstraction
        must integrate mathematical and logical concepts. Explain how\nyour abstraction
        helped manage the complexity of your program.\\\r\n<br>\\\r\n<i>(Must\nnot
        exceed 200 words)</i>\\\r\n\\\r\n</div>\\\r\n\\\r\n<br>\\\r\n\\\r\nBelow is
        a segment\nof code from an \"under the sea\" program with a rectangle drawn
        around a\nportion of the code identifying an abstraction. Imagine that you
        wrote this\nand are composing an AP response about how this abstraction manages
        complexity.  (Note:\nignore the requirement that the abstraction integrate
        \"mathematical and logical\nconcepts\" for this practice response.  Just write
        about managing complexity).\\\r\n\\\r\n![](https://images.code.org/d98fa58fce78eff86fd734f32e2960e4-image-1507913593511.png)\\\r\n\\\r\nExplain\nhow
        the abstraction marked with the rectangle in the code above helps manage\ncomplexity
        of this program."
      U3-AP-Practice-FR-manage-complexity_2019: "# AP Practice -\n\nPerformance Task
        Response\\\r\n\\\r\nThe AP Create Performance task asks you to\nwrite about
        an abstraction that you developed and wrote into your code. Most\nof the time
        that means identifying a function or procedure you wrote to help\n\"manage
        complexity\" in your program.\\\r\n\\\r\nHere is the actual prompt from\nthe
        Create Performance Task:\\\r\n\\\r\n\n<div style=\"width: 70%; margin: auto;\nbackground-color:
        #EEEEEE; padding: 10px; font-family: serif; font-size: 12pt\">\\\r\n\\\r\n<b>2d.</b>\nCapture
        and paste a program code segment that contains an abstraction you\ndeveloped
        individually on your own (marked with a <b>rectangle</b>). This\nabstraction
        must integrate mathematical and logical concepts. Explain how\nyour abstraction
        helped manage the complexity of your program.\\\r\n<br>\\\r\n<i>(Must\nnot
        exceed 200 words)</i>\\\r\n\\\r\n</div>\\\r\n\\\r\n<br>\\\r\n\\\r\nBelow is
        a segment\nof code from an \"under the sea\" program with a rectangle drawn
        around a\nportion of the code identifying an abstraction. Imagine that you
        wrote this\nand are composing an AP response about how this abstraction manages
        complexity.  (Note:\nignore the requirement that the abstraction integrate
        \"mathematical and logical\nconcepts\" for this practice response.  Just write
        about managing complexity).\\\r\n\\\r\n![](https://images.code.org/d98fa58fce78eff86fd734f32e2960e4-image-1507913593511.png)\\\r\n\\\r\nExplain\nhow
        the abstraction marked with the rectangle in the code above helps manage\ncomplexity
        of this program."
      U3-AP-Practice-FR-score-abstraction-response: "# AP Practice\n\n-   Scoring
        a PT Response\\\r\n    \\\r\n    In this scenario imagine that **you are scoring\n
        \   an AP Performance Task response.**  Below we show the student's submitted\n
        \   code as well as their written response for writing prompt **2d**.\\\r\n
        \   \\\r\n    As\n    a reminder, here is that prompt:\\\r\n    \\\r\n    <div
        style=\"width: 80%; margin: auto;\n    background-color: #EEEEEE; padding:
        10px; font-family: serif; font-size: 12pt\">\r\n    \r\n    <b>2d.</b>\n    Capture
        and paste a program code segment that contains an abstraction you\n    developed
        individually on your own (marked with a <b>rectangle</b>). The abstraction\n
        \   must integrate mathematical and logical concepts. Explain how your abstraction\n
        \   helped manage the complexity of your program. \r\n    <br>\r\n    <i>(Must
        not exceed\n    200 words)</i>\r\n    </div>\r\n    <br>\r\n    \r\n    And
        here is the student written response\n    that goes with the code shown at
        right:\r\n    \r\n    <div style=\"width: 80%; margin:\n    auto; background-color:
        #d9eff7; padding: 10px; font-family: monospace; font-size:\n    12pt; line-height:
        18pt; display: inline-block\">\r\n    \r\n    <img src=\"https://images.code.org/732ea3633d67312724382facaa281955-image-1507928836621.png\"\n
        \   style=\"float: right; margin-right: 40px\">\r\n    <strong>Student response:</strong><br>\r\n
        \   2d).\r\n    The\n    abstraction I have identified draws a heart in the
        program.  The whole program\n    draws a picture with turtle graphics that
        says \"I [heart] CS\" where the\n    [heart] is actually a drawing of a heart
        shape. Because I am using the parameterized\n    versions of these turtle
        functions it helps manage the complexity of the code.\n    Without the parameters
        the drawing is achieve-able but would require many\n    many more lines of
        code.  For example: the command to <code>arcRight(220,\n    30)</code>  -
        which moves the turtle in a 220-degree arc with a 30-pixel radius\n-   is
        possible to do with a long series of repeated <code>moveForward</code>,\n
        \   and <code>turnRight</code> commands, possibly hundreds. By using the <code>arcRight</code>\n
        \   command I encapsulate in one line what the code should be doing rather
        than\n    having to reason about hundreds of lines of code.\\\r\n    </div>\r\n
        \   <div style=\"clear:\n    both\"></div>\r\n    <br>\r\n    Use the scoring
        guide (shown below) to determine\n    if the student should be awarded the
        point for each of the two criteria about\n    abstractions (row 7 and 8)\r\n
        \   \r\n    ![](https://images.code.org/478c762d2ac876b8b830caabd62c1571-image-1507929333152.png)\r\n
        \   \r\n    #\n    You score it\r\n    Each row of the scoring guide one is
        worth one point, so response\n    2d is worth up to 2 points total.  Should
        the student get 0, 1 or 2 points\n    total?\r\n    \r\n    Below explain
        how you would score it, and why you would or wouldn't\n    award the point
        for each row. Cite the specific criteria in the scoring guide\n    to justify
        your response."
      U3-AP-Practice-FR-score-abstraction-response_2018: "# AP Practice\n\n-   Scoring
        a PT Response\\\r\n    \\\r\n    In this scenario imagine that **you are scoring\n
        \   an AP Performance Task response.**  Below we show the student's submitted\n
        \   code as well as their written response for writing prompt **2d**.\\\r\n
        \   \\\r\n    As\n    a reminder, here is that prompt:\\\r\n    \\\r\n    <div
        style=\"width: 80%; margin: auto;\n    background-color: #EEEEEE; padding:
        10px; font-family: serif; font-size: 12pt\">\r\n    \r\n    <b>2d.</b>\n    Capture
        and paste a program code segment that contains an abstraction you\n    developed
        individually on your own (marked with a <b>rectangle</b>). The abstraction\n
        \   must integrate mathematical and logical concepts. Explain how your abstraction\n
        \   helped manage the complexity of your program. \r\n    <br>\r\n    <i>(Must
        not exceed\n    200 words)</i>\r\n    </div>\r\n    <br>\r\n    \r\n    And
        here is the student written response\n    that goes with the code shown at
        right:\r\n    \r\n    <div style=\"width: 80%; margin:\n    auto; background-color:
        #d9eff7; padding: 10px; font-family: monospace; font-size:\n    12pt; line-height:
        18pt; display: inline-block\">\r\n    \r\n    <img src=\"https://images.code.org/732ea3633d67312724382facaa281955-image-1507928836621.png\"\n
        \   style=\"float: right; margin-right: 40px\">\r\n    <strong>Student response:</strong><br>\r\n
        \   2d).\r\n    The\n    abstraction I have identified draws a heart in the
        program.  The whole program\n    draws a picture with turtle graphics that
        says \"I [heart] CS\" where the\n    [heart] is actually a drawing of a heart
        shape. Because I am using the parameterized\n    versions of these turtle
        functions it helps manage the complexity of the code.\n    Without the parameters
        the drawing is achieve-able but would require many\n    many more lines of
        code.  For example: the command to <code>arcRight(220,\n    30)</code>  -
        which moves the turtle in a 220-degree arc with a 30-pixel radius\n-   is
        possible to do with a long series of repeated <code>moveForward</code>,\n
        \   and <code>turnRight</code> commands, possibly hundreds. By using the <code>arcRight</code>\n
        \   command I encapsulate in one line what the code should be doing rather
        than\n    having to reason about hundreds of lines of code.\\\r\n    </div>\r\n
        \   <div style=\"clear:\n    both\"></div>\r\n    <br>\r\n    Use the scoring
        guide (shown below) to determine\n    if the student should be awarded the
        point for each of the two criteria about\n    abstractions (row 7 and 8)\r\n
        \   \r\n    ![](https://images.code.org/478c762d2ac876b8b830caabd62c1571-image-1507929333152.png)\r\n
        \   \r\n    #\n    You score it\r\n    Each row of the scoring guide one is
        worth one point, so response\n    2d is worth up to 2 points total.  Should
        the student get 0, 1 or 2 points\n    total?\r\n    \r\n    Below explain
        how you would score it, and why you would or wouldn't\n    award the point
        for each row. Cite the specific criteria in the scoring guide\n    to justify
        your response."
      U3-AP-Practice-FR-score-abstraction-response_2019: "# AP Practice\n\n-   Scoring
        a PT Response\\\r\n    \\\r\n    In this scenario imagine that **you are scoring\n
        \   an AP Performance Task response.**  Below we show the student's submitted\n
        \   code as well as their written response for writing prompt **2d**.\\\r\n
        \   \\\r\n    As\n    a reminder, here is that prompt:\\\r\n    \\\r\n    <div
        style=\"width: 80%; margin: auto;\n    background-color: #EEEEEE; padding:
        10px; font-family: serif; font-size: 12pt\">\r\n    \r\n    <b>2d.</b>\n    Capture
        and paste a program code segment that contains an abstraction you\n    developed
        individually on your own (marked with a <b>rectangle</b>). The abstraction\n
        \   must integrate mathematical and logical concepts. Explain how your abstraction\n
        \   helped manage the complexity of your program. \r\n    <br>\r\n    <i>(Must
        not exceed\n    200 words)</i>\r\n    </div>\r\n    <br>\r\n    \r\n    And
        here is the student written response\n    that goes with the code shown at
        right:\r\n    \r\n    <div style=\"width: 80%; margin:\n    auto; background-color:
        #d9eff7; padding: 10px; font-family: monospace; font-size:\n    12pt; line-height:
        18pt; display: inline-block\">\r\n    \r\n    <img src=\"https://images.code.org/732ea3633d67312724382facaa281955-image-1507928836621.png\"\n
        \   style=\"float: right; margin-right: 40px\">\r\n    <strong>Student response:</strong><br>\r\n
        \   2d).\r\n    The\n    abstraction I have identified draws a heart in the
        program.  The whole program\n    draws a picture with turtle graphics that
        says \"I [heart] CS\" where the\n    [heart] is actually a drawing of a heart
        shape. Because I am using the parameterized\n    versions of these turtle
        functions it helps manage the complexity of the code.\n    Without the parameters
        the drawing is achieve-able but would require many\n    many more lines of
        code.  For example: the command to <code>arcRight(220,\n    30)</code>  -
        which moves the turtle in a 220-degree arc with a 30-pixel radius\n-   is
        possible to do with a long series of repeated <code>moveForward</code>,\n
        \   and <code>turnRight</code> commands, possibly hundreds. By using the <code>arcRight</code>\n
        \   command I encapsulate in one line what the code should be doing rather
        than\n    having to reason about hundreds of lines of code.\\\r\n    </div>\r\n
        \   <div style=\"clear:\n    both\"></div>\r\n    <br>\r\n    Use the scoring
        guide (shown below) to determine\n    if the student should be awarded the
        point for each of the two criteria about\n    abstractions (row 7 and 8)\r\n
        \   \r\n    ![](https://images.code.org/478c762d2ac876b8b830caabd62c1571-image-1507929333152.png)\r\n
        \   \r\n    #\n    You score it\r\n    Each row of the scoring guide one is
        worth one point, so response\n    2d is worth up to 2 points total.  Should
        the student get 0, 1 or 2 points\n    total?\r\n    \r\n    Below explain
        how you would score it, and why you would or wouldn't\n    award the point
        for each row. Cite the specific criteria in the scoring guide\n    to justify
        your response."
      U3L01 Assessment1: "Consider the algorithm you designed\nfor today’s activity.
        Identify two instances where there may be multiple ways\nto interpret your
        instructions and suggest improvements that could be made\nto improve their
        clarity.\\\r"
      U3L01 Assessment1_2018: "Consider the algorithm you designed\nfor today’s activity.
        Identify two instances where there may be multiple ways\nto interpret your
        instructions and suggest improvements that could be made\nto improve their
        clarity.\\\r"
      U3L01 Assessment1_2019: "Consider the algorithm you designed\nfor today’s activity.
        Identify two instances where there may be multiple ways\nto interpret your
        instructions and suggest improvements that could be made\nto improve their
        clarity.\\\r"
      U3L01 Assessment3: "Describe the features of a programming\nlanguage that make
        it different from the language you typically use in everyday\nlife. Explain
        why a programming language must be created in this way.\\\r"
      U3L01 Assessment3_2018: "Describe the features of a programming\nlanguage that
        make it different from the language you typically use in everyday\nlife. Explain
        why a programming language must be created in this way.\\\r"
      U3L01 Assessment3_2019: "Describe the features of a programming\nlanguage that
        make it different from the language you typically use in everyday\nlife. Explain
        why a programming language must be created in this way.\\\r"
      U3L02 Assessment: "This lesson introduced the notion\nof \"efficiency\" in programming,
        and that it might mean different things\nat different times.  Think of an
        example _outside_ of computer science in\nwhich you have heard the term “efficiency”
        and compare it to the ways we talked\nabout efficiency in programming.  \\\r\n\\\r\nIn
        what ways is the meaning of \"efficiency\"\nthe same? In what ways is it different?"
      U3L02 Assessment_2018: "This lesson introduced the notion\nof \"efficiency\"
        in programming, and that it might mean different things\nat different times.
        \ Think of an example _outside_ of computer science in\nwhich you have heard
        the term “efficiency” and compare it to the ways we talked\nabout efficiency
        in programming.  \\\r\n\\\r\nIn what ways is the meaning of \"efficiency\"\nthe
        same? In what ways is it different?"
      U3L02 Assessment_2019: "This lesson introduced the notion\nof \"efficiency\"
        in programming, and that it might mean different things\nat different times.
        \ Think of an example _outside_ of computer science in\nwhich you have heard
        the term “efficiency” and compare it to the ways we talked\nabout efficiency
        in programming.  \\\r\n\\\r\nIn what ways is the meaning of \"efficiency\"\nthe
        same? In what ways is it different?"
      U3L03 Free Response Wrap Up: "In your own words, explain\nat least one reason
        why programming languages have functions.  Include an\nexample of something
        you did in this lesson that demonstrates the reason you\ndescribe.\\\r"
      U3L03 Free Response Wrap Up_2018: "In your own words, explain\nat least one
        reason why programming languages have functions.  Include an\nexample of something
        you did in this lesson that demonstrates the reason you\ndescribe.\\\r"
      U3L03 Free Response Wrap Up_2019: "In your own words, explain\nat least one
        reason why programming languages have functions.  Include an\nexample of something
        you did in this lesson that demonstrates the reason you\ndescribe.\\\r"
      U3L04 Assessment1: "Consider the figure below.  Use\ntop-down thinking to design
        a solution to the problem.  In the space provided\nwrite a list of **just
        the names** of the functions that you would write in\na program that draws
        this figure.  (Assume that the long line segments are\n6 turtle moves long).\\\r\n\\\r\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\\\r"
      U3L04 Assessment1_2018: "Consider the figure below.  Use\ntop-down thinking
        to design a solution to the problem.  In the space provided\nwrite a list
        of **just the names** of the functions that you would write in\na program
        that draws this figure.  (Assume that the long line segments are\n6 turtle
        moves long).\\\r\n\\\r\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\\\r"
      U3L04 Assessment1_2019: "Consider the figure below.  Use\ntop-down thinking
        to design a solution to the problem.  In the space provided\nwrite a list
        of **just the names** of the functions that you would write in\na program
        that draws this figure.  (Assume that the long line segments are\n6 turtle
        moves long).\\\r\n\\\r\n![](https://images.code.org/43895f8ceccb12f72e7f5ba03152a6e6-image-1441914144956.png)\\\r"
      U3L06 Assessment: "It is said that _functions with\nparameters generalize the
        behavior of a more specific command and allow programmers\nto use functions
        instead of duplicated code._ Explain what this means to you\nusing the difference
        between turnLeft() and turnLeft(angle) as an example.\\\r"
      U3L06 Assessment_2018: "It is said that _functions with\nparameters generalize
        the behavior of a more specific command and allow programmers\nto use functions
        instead of duplicated code._ Explain what this means to you\nusing the difference
        between turnLeft() and turnLeft(angle) as an example.\\\r"
      U3L06 Assessment_2019: "It is said that _functions with\nparameters generalize
        the behavior of a more specific command and allow programmers\nto use functions
        instead of duplicated code._ Explain what this means to you\nusing the difference
        between turnLeft() and turnLeft(angle) as an example.\\\r"
      U3L07 - allSeaGrass: "# Add Seagrass\\\r\n\n<img src=\"https://images.code.org/a67f893ea9187b253ec4f6abcb16b7cf-image-1443048301130.30.42\nPM.png\"
        style=\"width: 200px; float: right\">\\\r\nOur new version of `drawSeagrass`\nnow
        draws a single piece of seagrass with a random height.  Now let's use\na loop
        in `drawAllSeagrass` to fill the sea floor with it.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\\*\n**Add
        a `for` loop** to `drawAllSeagrass` that draws about **50 pieces** of\nseagrass
        using your updated `drawSeagrass` function."
      U3L07 - allSeaGrass_2018: "# Add Seagrass\\\r\n\n<img src=\"https://images.code.org/a67f893ea9187b253ec4f6abcb16b7cf-image-1443048301130.30.42\nPM.png\"
        style=\"width: 200px; float: right\">\\\r\nOur new version of `drawSeagrass`\nnow
        draws a single piece of seagrass with a random height.  Now let's use\na loop
        in `drawAllSeagrass` to fill the sea floor with it.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\\*\n**Add
        a `for` loop** to `drawAllSeagrass` that draws about **50 pieces** of\nseagrass
        using your updated `drawSeagrass` function."
      U3L07 - allSeaGrass_2019: "# Add Seagrass\\\r\n\n<img src=\"https://images.code.org/a67f893ea9187b253ec4f6abcb16b7cf-image-1443048301130.30.42\nPM.png\"
        style=\"width: 200px; float: right\">\\\r\nOur new version of `drawSeagrass`\nnow
        draws a single piece of seagrass with a random height.  Now let's use\na loop
        in `drawAllSeagrass` to fill the sea floor with it.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\\*\n**Add
        a `for` loop** to `drawAllSeagrass` that draws about **50 pieces** of\nseagrass
        using your updated `drawSeagrass` function."
      U3L07 - fish: "# Add Fish\\\r\n\n\\\r\nThe next high-level\nfunction you will
        write is `drawAllFish`. A version of `drawFish` with parameters\nhas been
        provided for you to use.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   **Read**
        the\n    `drawFish` function to know how it works and what **parameters**
        it accepts.\\\r\n    \\\r\n-   \\*\n    **Add a loop** to `drawAllFish`.\\\r\n
        \   \\\r\n-   **Place the commands already inside\n    the function in your
        loop.** This way your code will **move the turtle randomly**\n    around the
        **top 360 pixels** of the image and draw **15 fish** of random\n    size between
        **5 and 20** using `drawFish`.\\\r\n    \\\r\n-   Once you have your loop\n
        \   working try calling `drawFish` with random values for its `red`, `green`,\n
        \   and `blue` parameters to get differently colored fish.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/cbbb8e02c14cbc2d199ede4531090513-image-1443046439253.12.35>\n
        \   PM.png>)"
      U3L07 - fish_2018: "# Add Fish\\\r\n\n\\\r\nThe next high-level\nfunction you
        will write is `drawAllFish`. A version of `drawFish` with parameters\nhas
        been provided for you to use.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   **Read**
        the\n    `drawFish` function to know how it works and what **parameters**
        it accepts.\\\r\n    \\\r\n-   \\*\n    **Add a loop** to `drawAllFish`.\\\r\n
        \   \\\r\n-   **Place the commands already inside\n    the function in your
        loop.** This way your code will **move the turtle randomly**\n    around the
        **top 360 pixels** of the image and draw **15 fish** of random\n    size between
        **5 and 20** using `drawFish`.\\\r\n    \\\r\n-   Once you have your loop\n
        \   working try calling `drawFish` with random values for its `red`, `green`,\n
        \   and `blue` parameters to get differently colored fish.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/cbbb8e02c14cbc2d199ede4531090513-image-1443046439253.12.35>\n
        \   PM.png>)"
      U3L07 - fish_2019: "# Add Fish\\\r\n\n\\\r\nThe next high-level\nfunction you
        will write is `drawAllFish`. A version of `drawFish` with parameters\nhas
        been provided for you to use.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   **Read**
        the\n    `drawFish` function to know how it works and what **parameters**
        it accepts.\\\r\n    \\\r\n-   \\*\n    **Add a loop** to `drawAllFish`.\\\r\n
        \   \\\r\n-   **Place the commands already inside\n    the function in your
        loop.** This way your code will **move the turtle randomly**\n    around the
        **top 360 pixels** of the image and draw **15 fish** of random\n    size between
        **5 and 20** using `drawFish`.\\\r\n    \\\r\n-   Once you have your loop\n
        \   working try calling `drawFish` with random values for its `red`, `green`,\n
        \   and `blue` parameters to get differently colored fish.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/cbbb8e02c14cbc2d199ede4531090513-image-1443046439253.12.35>\n
        \   PM.png>)"
      U3L07 - loopsWithRandom_2018: "# Using Multiple Loops\\\r\n\n\\\r\nSome\nrepeated
        tasks can't easily be solved with a single loop. Instead, you'll\nneed to
        use **one loop after another**, each one solving a part of the problem.\n\\\r\n\\\r\n\n#
        Do This:\\\r\n\n\\\r\nAdd a loop to fill the screen with semi-transparent\nwhite
        dots until the original dots are \"erased\".\\\r\n\\\r\n<img src=\"https://images.code.org/329912b3c61cc62acbd36035ff4b823a-image-1443109101866.gif\"\nstyle=\"float:
        right; width: 100px\">\\\r\n\n-   \\*\\*Drag \\*\\* a second loop into your\n
        \   code that will run after the first loop.\\\r\n-   **Add** commands to
        draw dots\n    in random locations that are white with opacity set to 0.5.\\\r\n-
        \  **Increase\n    the iterations** so that the colored dots are totally erased.
        How many does\n    it take?\\\r\n    \\\r\n    HINT: you can copy/paste the
        original loop and just change\n    the color of the dots and number of iterations."
      U3L07 - loopsWithRandom_2019: "# Using Multiple Loops\\\r\n\n\\\r\nSome\nrepeated
        tasks can't easily be solved with a single loop. Instead, you'll\nneed to
        use **one loop after another**, each one solving a part of the problem.\n\\\r\n\\\r\n\n#
        Do This:\\\r\n\n\\\r\nAdd a loop to fill the screen with semi-transparent\nwhite
        dots until the original dots are \"erased\".\\\r\n\\\r\n<img src=\"https://images.code.org/329912b3c61cc62acbd36035ff4b823a-image-1443109101866.gif\"\nstyle=\"float:
        right; width: 100px\">\\\r\n\n-   \\*\\*Drag \\*\\* a second loop into your\n
        \   code that will run after the first loop.\\\r\n-   **Add** commands to
        draw dots\n    in random locations that are white with opacity set to 0.5.\\\r\n-
        \  **Increase\n    the iterations** so that the colored dots are totally erased.
        How many does\n    it take?\\\r\n    \\\r\n    HINT: you can copy/paste the
        original loop and just change\n    the color of the dots and number of iterations."
      U3L07 - seaGrass: "# Controlling Loops with Parameters\\\r\n\n<img\nsrc=\"https://images.code.org/37d6dbcab707f67485ab3b0cc2a1cae9-image-1443114033511.png\"\nstyle=\"width:
        200px; float: right\">\\\r\nThis time you will modify one of\nthe lower-level
        functions - `drawSeagrass`. Notice that the current version\nof `drawSeagrass`
        actually uses a loop. We want to modify this function so\nthat we control
        the number of times it loops with **a parameter**.\\\r\n\\\r\n\n# \n\nDo This:\\\r\n\\\r\n\n-
        \  **Look at** the `drawSeagrass` function to see how it currently\n    works.\\\r\n
        \   \\\r\n-   \\*\\*Add a parameter \\*\\* that will be used to indicate how
        many\n    waves the seagrass makes.\\\r\n    \\\r\n    <img src=\"https://images.code.org/1f2f0c5e1fc17e541760c4f0fd24b13b-image-1447887194713.7.10\n
        \   drawSeagrass add param.gif\" style=\"width:350px;padding-left:22px;\">\\\r\n
        \   \\\r\n-   \\*\n    **Modify the `'for` loop** so that it uses that **parameter**
        as the number\n    of times to repeat.\\\r\n    \\\r\n    ![](https://images.code.org/23e8e43ec4853c0bdbbbd50b9651300a-image-1443113032135.gif)\\\r\n\n\\\r\n\n-
        \  Finally, **modify `drawAllSeagrass`** to call this new two-param version\n
        \   of `drawSeagrass` supplying a reasonable random value for the second parameter\n
        \   as well.\\\r\n    \\\r\n    <img src=\"https://images.code.org/4f15021cd9cebb62562665d3ddc82c51-image-1447885963677.PNG\"\n
        \   style=\"width:400px;padding-left:22px;\">"
      U3L07 - seaGrass_2018: "# Controlling Loops with Parameters\\\r\n\n<img\nsrc=\"https://images.code.org/37d6dbcab707f67485ab3b0cc2a1cae9-image-1443114033511.png\"\nstyle=\"width:
        200px; float: right\">\\\r\nThis time you will modify one of\nthe lower-level
        functions - `drawSeagrass`. Notice that the current version\nof `drawSeagrass`
        actually uses a loop. We want to modify this function so\nthat we control
        the number of times it loops with **a parameter**.\\\r\n\\\r\n\n# \n\nDo This:\\\r\n\\\r\n\n-
        \  **Look at** the `drawSeagrass` function to see how it currently\n    works.\\\r\n
        \   \\\r\n-   \\*\\*Add a parameter \\*\\* that will be used to indicate how
        many\n    waves the seagrass makes.\\\r\n    \\\r\n    <img src=\"https://images.code.org/1f2f0c5e1fc17e541760c4f0fd24b13b-image-1447887194713.7.10\n
        \   drawSeagrass add param.gif\" style=\"width:350px;padding-left:22px;\">\\\r\n
        \   \\\r\n-   \\*\n    **Modify the `'for` loop** so that it uses that **parameter**
        as the number\n    of times to repeat.\\\r\n    \\\r\n    ![](https://images.code.org/23e8e43ec4853c0bdbbbd50b9651300a-image-1443113032135.gif)\\\r\n\n\\\r\n\n-
        \  Finally, **modify `drawAllSeagrass`** to call this new two-param version\n
        \   of `drawSeagrass` supplying a reasonable random value for the second parameter\n
        \   as well.\\\r\n    \\\r\n    <img src=\"https://images.code.org/4f15021cd9cebb62562665d3ddc82c51-image-1447885963677.PNG\"\n
        \   style=\"width:400px;padding-left:22px;\">"
      U3L07 - seaGrass_2019: "# Controlling Loops with Parameters\\\r\n\n<img\nsrc=\"https://images.code.org/37d6dbcab707f67485ab3b0cc2a1cae9-image-1443114033511.png\"\nstyle=\"width:
        200px; float: right\">\\\r\nThis time you will modify one of\nthe lower-level
        functions - `drawSeagrass`. Notice that the current version\nof `drawSeagrass`
        actually uses a loop. We want to modify this function so\nthat we control
        the number of times it loops with **a parameter**.\\\r\n\\\r\n\n# \n\nDo This:\\\r\n\\\r\n\n-
        \  **Look at** the `drawSeagrass` function to see how it currently\n    works.\\\r\n
        \   \\\r\n-   \\*\\*Add a parameter \\*\\* that will be used to indicate how
        many\n    waves the seagrass makes.\\\r\n    \\\r\n    <img src=\"https://images.code.org/1f2f0c5e1fc17e541760c4f0fd24b13b-image-1447887194713.7.10\n
        \   drawSeagrass add param.gif\" style=\"width:350px;padding-left:22px;\">\\\r\n
        \   \\\r\n-   \\*\n    **Modify the `'for` loop** so that it uses that **parameter**
        as the number\n    of times to repeat.\\\r\n    \\\r\n    ![](https://images.code.org/23e8e43ec4853c0bdbbbd50b9651300a-image-1443113032135.gif)\\\r\n\n\\\r\n\n-
        \  Finally, **modify `drawAllSeagrass`** to call this new two-param version\n
        \   of `drawSeagrass` supplying a reasonable random value for the second parameter\n
        \   as well.\\\r\n    \\\r\n    <img src=\"https://images.code.org/4f15021cd9cebb62562665d3ddc82c51-image-1447885963677.PNG\"\n
        \   style=\"width:400px;padding-left:22px;\">"
      U3L07 - seaStar: "# Add Sea Stars\\\r\n\n\\\r\nWe're now\nready to add sea stars
        to our image by writing `drawAllSeaStars`. Recall that\nwe've already written
        loops to draw much more complex stars. \\\r\n\\\r\n\n# Do\n\nThis:\\\r\n\\\r\n\n-
        \  **Read** the `drawSeaStar` function to know how it works and\n    what
        **parameters** it accepts.\\\r\n    \\\r\n-   **First: Update** `drawSeaStar`
        to\n    use a `for` loop \\\r\n    \\\r\n    \\\\t\\* `drawSeaStar` has a
        portion of code that uses\n    a longer sequence of repetitious single commands.
        \ \\\r\n    -   Find the pattern\n        and \"wrap a loop\" around it so
        that the repetition is done with a loop rather\n        than many lines of
        declarative function calls.\\\r\n        \\\r\n-   **Second: Add a loop**\n
        \   to `drawAllSeaStars`.\\\r\n    \\\r\n    \\\\t\\* **Place the commands
        already inside the\n    function in your loop.** This way your code will **move
        the turtle randomly**\n    around the **bottom pixels (y values between 360
        and 450)** of the image.\\\r\n    \\\r\n-   \\*\n    **Draw 5 sea stars**
        of random size between **10 and 30** using `drawSeaStar`.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/1aadf83bcecaf5ca6c505e46d43e5f45-image-1443046811335.20.04>\n
        \   PM.png>)"
      U3L07 - seaStar_2018: "# Add Sea Stars\\\r\n\n\\\r\nWe're now\nready to add
        sea stars to our image by writing `drawAllSeaStars`. Recall that\nwe've already
        written loops to draw much more complex stars. \\\r\n\\\r\n\n# Do\n\nThis:\\\r\n\\\r\n\n-
        \  **Read** the `drawSeaStar` function to know how it works and\n    what
        **parameters** it accepts.\\\r\n    \\\r\n-   **First: Update** `drawSeaStar`
        to\n    use a `for` loop \\\r\n    \\\r\n    \\\\t\\* `drawSeaStar` has a
        portion of code that uses\n    a longer sequence of repetitious single commands.
        \ \\\r\n    -   Find the pattern\n        and \"wrap a loop\" around it so
        that the repetition is done with a loop rather\n        than many lines of
        declarative function calls.\\\r\n        \\\r\n-   **Second: Add a loop**\n
        \   to `drawAllSeaStars`.\\\r\n    \\\r\n    \\\\t\\* **Place the commands
        already inside the\n    function in your loop.** This way your code will **move
        the turtle randomly**\n    around the **bottom pixels (y values between 360
        and 450)** of the image.\\\r\n    \\\r\n-   \\*\n    **Draw 5 sea stars**
        of random size between **10 and 30** using `drawSeaStar`.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/1aadf83bcecaf5ca6c505e46d43e5f45-image-1443046811335.20.04>\n
        \   PM.png>)"
      U3L07 - seaStar_2019: "# Add Sea Stars\\\r\n\n\\\r\nWe're now\nready to add
        sea stars to our image by writing `drawAllSeaStars`. Recall that\nwe've already
        written loops to draw much more complex stars. \\\r\n\\\r\n\n# Do\n\nThis:\\\r\n\\\r\n\n-
        \  **Read** the `drawSeaStar` function to know how it works and\n    what
        **parameters** it accepts.\\\r\n    \\\r\n-   **First: Update** `drawSeaStar`
        to\n    use a `for` loop \\\r\n    \\\r\n    \\\\t\\* `drawSeaStar` has a
        portion of code that uses\n    a longer sequence of repetitious single commands.
        \ \\\r\n    -   Find the pattern\n        and \"wrap a loop\" around it so
        that the repetition is done with a loop rather\n        than many lines of
        declarative function calls.\\\r\n        \\\r\n-   **Second: Add a loop**\n
        \   to `drawAllSeaStars`.\\\r\n    \\\r\n    \\\\t\\* **Place the commands
        already inside the\n    function in your loop.** This way your code will **move
        the turtle randomly**\n    around the **bottom pixels (y values between 360
        and 450)** of the image.\\\r\n    \\\r\n-   \\*\n    **Draw 5 sea stars**
        of random size between **10 and 30** using `drawSeaStar`.\\\r\n    \\\r\n
        \   \\!\\[](\\<<https://images.code.org/1aadf83bcecaf5ca6c505e46d43e5f45-image-1443046811335.20.04>\n
        \   PM.png>)"
      U3L07 Free Response Reflection: "When breaking a problem\ndown, you often encounter
        elements that you want to use repeatedly in your\ncode. Sometimes it's appropriate
        to write a new function; at other times\nit's appropriate to write a loop.
        \ \\\r\n\\\r\nThere is no hard-and-fast rule\nas to which is better, but what
        do you think?  What kinds of circumstances\nwould lead you to writing a function
        versus using a loop?\\\r\n\\\r"
      U3L07 Free Response Reflection_2018: "When breaking a problem\ndown, you often
        encounter elements that you want to use repeatedly in your\ncode. Sometimes
        it's appropriate to write a new function; at other times\nit's appropriate
        to write a loop.  \\\r\n\\\r\nThere is no hard-and-fast rule\nas to which
        is better, but what do you think?  What kinds of circumstances\nwould lead
        you to writing a function versus using a loop?\\\r\n\\\r"
      U3L07 Free Response Reflection_2019: "When breaking a problem\ndown, you often
        encounter elements that you want to use repeatedly in your\ncode. Sometimes
        it's appropriate to write a new function; at other times\nit's appropriate
        to write a loop.  \\\r\n\\\r\nThere is no hard-and-fast rule\nas to which
        is better, but what do you think?  What kinds of circumstances\nwould lead
        you to writing a function versus using a loop?\\\r\n\\\r"
      U3L08 - introUnderTheSea - clone for recovery: "# Recover\n\nyour Under the
        Sea project code!\\\r\n\\\r\nBelow you should see your code for\nthe Under
        the Sea project from CSP Unit 3 - Lesson 8 in the state it was in\naround
        3pm ET, Monday Oct. 30, 2017.\\\r\n\\\r\n**Students:** To get the code\nbelow
        back into Unit 3 - Lesson 8...\\\r\n\n-   Select all your code from the workspace\n
        \   below (Highlight with mouse, or ctrl+A)\\\r\n-   Copy it (Edit -> Copy,
        or ctrl+C)\\\r\n-   \\*\n    Paste it (Edit -> Paste, or ctrl+V) into the
        project in Unit 3\\\r\n    -   Here\n        is a link to the project that
        will open in a new window: <a href=\"https://studio.code.org/s/csp3/stage/8/puzzle/17\"\n
        \       target=_blank>https\\://studio.code.org/s/csp3/stage/8/puzzle/17</a>\\\r\n
        \       \\\r\n        **Teachers:**\n        You can view your students' work
        here using the blue teacher tray.  Alternatively,\n        you can ask students
        to use the process above.\\\r\n        \\\r\n        **Details:**\\\r\n-   The\n
        \   Under the Sea code is a \"project\" that sat behind eight levels (\"bubbles\")\n
        \   10-17 in Unit 3, Lesson 8.  \\\r\n-   On Oct. 30, 2017 we updated that
        project\n    in a way that caused code to appear missing for those who had
        done work prior\n    to the change.\\\r\n-   Your code still exists! It's
        just associated with the\n    old project, which is what we have provided
        below.\\\r\n-   You can copy and paste\n    your code from below into any
        of the current Unit 3, Lesson 8, levels 10-17\n    and it will work for all.
        (In other words, the code for level 17 is actually\n    referring to the same
        project as levels 10-17)\\\r\n    \\\r\n    We're sorry about this\n    mistake
        and for the inconvenience and disappointment it may have caused. Hopefully,\n
        \   you were able to recover the code you worked so hard on.\\\r\n    \\\r\n
        \   If you have\n    further questions please submit a bug report (option
        in the top-right menu)\n    or send email to support@code.org\\\r\n    \\\r\n
        \   Thanks,\\\r\n    \\\r\n    CSP Team"
      U3L08 - introUnderTheSea with comments: "# Under the Sea!\\\r\n\n\\\r\nIn\nthe
        next several challenges you will be working to improve **one program**\nthat
        draws an underwater scene.  Each time you  finish a puzzle and move on\nto
        the next one, your code will be pulled forward and you'll get new instructions\ntelling
        you what to add. \\*\\*Read through \\*\\* the program provided to get a basic\nunderstanding
        of what it does.\\\r\n\\\r\n\n# Do This:\\\r\n\n\\\r\n\n-   **Add function
        calls\n    \\*\\* to the top of the program so that \\*\\*two fish, two starfish,
        and two pieces\n    of seagrass** appear somewhere in the scene. You don't
        need to provide values\n    for the parameters at this stage.\\\r\n    \\\r\n-
        \  **Hint:** you need to call `moveTo`\n    before drawing a second fish,
        starfish or seagrass, otherwise you won't see\n    the second one because
        it will draw exactly over the first one -- those functions\n    draw based
        on where the turtle is just before the call.\\\r\n    \\\r\n-   **Test out\n
        \   your code**. If something doesn’t work like you expect, consider whether
        you\n    can add anything to the functions’ definitions to make them better.\\\r\n
        \   \\\r\n-   \\*\n    **Continue \\*\\* to the next level, \\*\\*where your
        code will be waiting for you.**\\\r\n    \\\r\n    \\!\\[](\\<<https://images.code.org/a53accb7edf7ed4e09d56bab903e1af9-image-1442604192660.22.35>\n
        \   PM.png>)"
      U3L08 - randomInput: "# Random Input\\\r\n\n\\\r\nYou have\na new block that
        allows you to generate a random number. You can use this\ninstead of hard-coding
        in values every time you call a function.\\\r\n\\\r\n![](https://images.code.org/5ff13bfdf582692f009b787570d467d0-image-1470145136252.png)\\\r\n\\\r\n**Read\nthe
        documentation** for the randomNumber block.\\\r\n\\\r\n\n# Do This\\\r\n\n**Use\nrandomNumber
        to provide random input** to _all three_ of your drawing functions.  Just\ninsert
        the call to randomNumber where you would otherwise put numbers.  \\\r\n\\\r\nLike\nthis:\\\r\n![](https://images.code.org/ad87d7d122ac585a6de9e46a49736228-image-1470146652402.png)\\\r\n\\\r\nUse\nrandomNumber
        in calls to all three of your drawing functions:\\\r\n\\\r\n\n-   drawStarfish\\\r\n-
        \  \\*\n    drawSeagrass\\\r\n-   drawFish\\\r\n    \\\r\n    This is a great
        way to **test** out functions\n    and also get some **interesting looking
        images**. Every time you run the program\n    you can get slightly different
        looking scenes like the ones below.\\\r\n    \\\r\n    ![](https://images.code.org/d2031f555ed23bcfa4a6a6165074b559-image-1442852053630.png)"
      U3L08 - randomInput_2018: "# Random Input\\\r\n\n\\\r\nYou have\na new block
        that allows you to generate a random number. You can use this\ninstead of
        hard-coding in values every time you call a function.\\\r\n\\\r\n![](https://images.code.org/5ff13bfdf582692f009b787570d467d0-image-1470145136252.png)\\\r\n\\\r\n**Read\nthe
        documentation** for the randomNumber block.\\\r\n\\\r\n\n# Do This\\\r\n\n**Use\nrandomNumber
        to provide random input** to _all three_ of your drawing functions.  Just\ninsert
        the call to randomNumber where you would otherwise put numbers.  \\\r\n\\\r\nLike\nthis:\\\r\n![](https://images.code.org/ad87d7d122ac585a6de9e46a49736228-image-1470146652402.png)\\\r\n\\\r\nUse\nrandomNumber
        in calls to all three of your drawing functions:\\\r\n\\\r\n\n-   drawStarfish\\\r\n-
        \  \\*\n    drawSeagrass\\\r\n-   drawFish\\\r\n    \\\r\n    This is a great
        way to **test** out functions\n    and also get some **interesting looking
        images**. Every time you run the program\n    you can get slightly different
        looking scenes like the ones below.\\\r\n    \\\r\n    ![](https://images.code.org/d2031f555ed23bcfa4a6a6165074b559-image-1442852053630.png)"
      U3L08 - randomInput_2019: "# Random Input\\\r\n\n\\\r\nYou have\na new block
        that allows you to generate a random number. You can use this\ninstead of
        hard-coding in values every time you call a function.\\\r\n\\\r\n![](https://images.code.org/5ff13bfdf582692f009b787570d467d0-image-1470145136252.png)\\\r\n\\\r\n**Read\nthe
        documentation** for the randomNumber block.\\\r\n\\\r\n\n# Do This\\\r\n\n**Use\nrandomNumber
        to provide random input** to _all three_ of your drawing functions.  Just\ninsert
        the call to randomNumber where you would otherwise put numbers.  \\\r\n\\\r\nLike\nthis:\\\r\n![](https://images.code.org/ad87d7d122ac585a6de9e46a49736228-image-1470146652402.png)\\\r\n\\\r\nUse\nrandomNumber
        in calls to all three of your drawing functions:\\\r\n\\\r\n\n-   drawStarfish\\\r\n-
        \  \\*\n    drawSeagrass\\\r\n-   drawFish\\\r\n    \\\r\n    This is a great
        way to **test** out functions\n    and also get some **interesting looking
        images**. Every time you run the program\n    you can get slightly different
        looking scenes like the ones below.\\\r\n    \\\r\n    ![](https://images.code.org/d2031f555ed23bcfa4a6a6165074b559-image-1442852053630.png)"
      U3L08 Assessment2: "“Abstraction” is often used to\nfocus on a general case
        and ignore a specific instance of a problem. \\\r\n\\\r\nGiven\nthis meaning
        of the word, how are functions with parameters an example of\nabstraction?"
      U3L08 Assessment2_2018: "“Abstraction” is often used to\nfocus on a general
        case and ignore a specific instance of a problem. \\\r\n\\\r\nGiven\nthis
        meaning of the word, how are functions with parameters an example of\nabstraction?"
      U3L08 Assessment2_2019: "“Abstraction” is often used to\nfocus on a general
        case and ignore a specific instance of a problem. \\\r\n\\\r\nGiven\nthis
        meaning of the word, how are functions with parameters an example of\nabstraction?"
      U3L08 how to add comments: "# Now you try it - Add a comment\\\r\n\n\\\r\nThe\nstarting
        code provided has some comments already in it.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInsert\na
        comment that says `// Draw all the starfish` just above the first call to\n`drawStarfish()`.
        \\\r\n\\\r\n\n-   The `// Comment` block is in the Functions toolbox\n    ([Show
        me](#triggercallout=show_comment))\\\r\n-   **See how:**\\\r\n    ![expandable](https://images.code.org/1f97df1d6fc1ca2d5bd371ad7b0f76a3-image-1508960669302.gif)\\\r\n
        \   \\\r\n    **Click\n    finish** once you've added the comment.  And keep
        adding comments as you\n    go!!!"
      U3L08 how to add comments_2018: "# Now you try it - Add a comment\\\r\n\n\\\r\nThe\nstarting
        code provided has some comments already in it.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInsert\na
        comment that says `// Draw all the starfish` just above the first call to\n`drawStarfish()`.
        \\\r\n\\\r\n\n-   The `// Comment` block is in the Functions toolbox\n    ([Show
        me](#triggercallout=show_comment))\\\r\n-   **See how:**\\\r\n    ![expandable](https://images.code.org/1f97df1d6fc1ca2d5bd371ad7b0f76a3-image-1508960669302.gif)\\\r\n
        \   \\\r\n    **Click\n    finish** once you've added the comment.  And keep
        adding comments as you\n    go!!!"
      U3L08 how to add comments_2019: "# Now you try it - Add a comment\\\r\n\n\\\r\nThe\nstarting
        code provided has some comments already in it.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInsert\na
        comment that says `// Draw all the starfish` just above the first call to\n`drawStarfish()`.
        \\\r\n\\\r\n\n-   The `// Comment` block is in the Functions toolbox\n    ([Show
        me](#triggercallout=show_comment))\\\r\n-   **See how:**\\\r\n    ![expandable](https://images.code.org/1f97df1d6fc1ca2d5bd371ad7b0f76a3-image-1508960669302.gif)\\\r\n
        \   \\\r\n    **Click\n    finish** once you've added the comment.  And keep
        adding comments as you\n    go!!!"
      U4 - Objects - Template Contacts: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 Model Design 1: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Creating a digital prototype\\\r\n\\\r\nUsing\nthe
        prototype to the right (click the image to enlarge it) you're going to\ncreate
        a digital prototype of the example app \"Recycling Finder\". We've\nalready
        added a few of the elements for you, including the title, but it doesn't\nlook
        quite right yet. We'll go over each element of this as we go, but for\nnow
        let's **just focus on the title**.\\\r\n\\\r\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\"\nstyle=\"width:
        300px; float: right; clear: both;\">-->\\\r\n\\\r\n# Do This\\\r\n\\\r\n*\n**Make
        sure you are in Design Mode,** the switch appears above your app window\non
        the left.\\\r\n* **Click on the title text** to view its properties.\\\r\n*\n**Change
        the property \"text\"** to \"Recycling Finder\".\\\r\n* **Change the\n\"font
        size\"** to make the title larger.\\\r\n* **Change the \"text alignment\"**\nso
        the title is centered on the screen.\\\r\n\\\r\n_Note: Make sure you click\n**\"Run\"**
        before moving on to save your progress._"
      U4 Model Design 1_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Creating a digital prototype\\\r\n\\\r\nUsing\nthe
        prototype to the right (click the image to enlarge it) you're going to\ncreate
        a digital prototype of the example app \"Recycling Finder\". We've\nalready
        added a few of the elements for you, including the title, but it doesn't\nlook
        quite right yet. We'll go over each element of this as we go, but for\nnow
        let's **just focus on the title**.\\\r\n\\\r\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\"\nstyle=\"width:
        300px; float: right; clear: both;\">-->\\\r\n\\\r\n# Do This\\\r\n\\\r\n*\n**Make
        sure you are in Design Mode,** the switch appears above your app window\non
        the left.\\\r\n* **Click on the title text** to view its properties.\\\r\n*\n**Change
        the property \"text\"** to \"Recycling Finder\".\\\r\n* **Change the\n\"font
        size\"** to make the title larger.\\\r\n* **Change the \"text alignment\"**\nso
        the title is centered on the screen.\\\r\n\\\r\n_Note: Make sure you click\n**\"Run\"**
        before moving on to save your progress._"
      U4 Model Design 1_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Creating a digital prototype\\\r\n\\\r\nUsing\nthe
        prototype to the right (click the image to enlarge it) you're going to\ncreate
        a digital prototype of the example app \"Recycling Finder\". We've\nalready
        added a few of the elements for you, including the title, but it doesn't\nlook
        quite right yet. We'll go over each element of this as we go, but for\nnow
        let's **just focus on the title**.\\\r\n\\\r\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\"\nstyle=\"width:
        300px; float: right; clear: both;\">-->\\\r\n\\\r\n# Do This\\\r\n\\\r\n*\n**Make
        sure you are in Design Mode,** the switch appears above your app window\non
        the left.\\\r\n* **Click on the title text** to view its properties.\\\r\n*\n**Change
        the property \"text\"** to \"Recycling Finder\".\\\r\n* **Change the\n\"font
        size\"** to make the title larger.\\\r\n* **Change the \"text alignment\"**\nso
        the title is centered on the screen.\\\r\n\\\r\n_Note: Make sure you click\n**\"Run\"**
        before moving on to save your progress._"
      U4 Model Design 2: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/c0a6e147bc1cb940893f87ffd25b5015-image-1505758331506.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding more text\\\r\n\\\r\nEach screen
        of your\napp is composed of multiple design _elements_. You can drag out elements
        from\nthe \"Design Toolbox\" on the left side of the workspace. To add more
        blocks\nof text, just drag out additional \"label\" elements.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"label\" element** and place it where
        the \"home_description\"\ntext should be.\\\r\n* **Change the id** to match
        the prototype (home_description)\\\r\n*\n**Change the field \"text\"** to
        match the prototype.\\\r\n* **Resize** the\ntext area by clicking and dragging
        the bottom right corner.\\\r\n* **Change\nany other properties** to make the
        text look like you want it to."
      U4 Model Design 2_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/c0a6e147bc1cb940893f87ffd25b5015-image-1505758331506.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding more text\\\r\n\\\r\nEach screen
        of your\napp is composed of multiple design _elements_. You can drag out elements
        from\nthe \"Design Toolbox\" on the left side of the workspace. To add more
        blocks\nof text, just drag out additional \"label\" elements.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"label\" element** and place it where
        the \"home_description\"\ntext should be.\\\r\n* **Change the id** to match
        the prototype (home_description)\\\r\n*\n**Change the field \"text\"** to
        match the prototype.\\\r\n* **Resize** the\ntext area by clicking and dragging
        the bottom right corner.\\\r\n* **Change\nany other properties** to make the
        text look like you want it to."
      U4 Model Design 2_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/c0a6e147bc1cb940893f87ffd25b5015-image-1505758331506.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding more text\\\r\n\\\r\nEach screen
        of your\napp is composed of multiple design _elements_. You can drag out elements
        from\nthe \"Design Toolbox\" on the left side of the workspace. To add more
        blocks\nof text, just drag out additional \"label\" elements.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"label\" element** and place it where
        the \"home_description\"\ntext should be.\\\r\n* **Change the id** to match
        the prototype (home_description)\\\r\n*\n**Change the field \"text\"** to
        match the prototype.\\\r\n* **Resize** the\ntext area by clicking and dragging
        the bottom right corner.\\\r\n* **Change\nany other properties** to make the
        text look like you want it to."
      U4 Model Design 3: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/cad5b0e54f67976fee68ecf29c2a603b-image-1505758463551.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding images\\\r\n\\\r\nThe prototype
        just has\na plain black square where the logo should be - let's add an image
        to spice\nit up. The \"image\" element allows you to either upload an image
        from your\ncomputer or select from a library of graphic icons.\\\r\n\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"image\" element** and place between
        the description and\nthe title.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Click the\n\"Choose...\" link** next to the \"image\" field.\\\r\n* **Select
        the \"Icons\"\ntab** and choose an icon for your logo.\\\r\n* **Change the
        color** of the icon\nusing the \"icon color\" field."
      U4 Model Design 3_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/cad5b0e54f67976fee68ecf29c2a603b-image-1505758463551.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding images\\\r\n\\\r\nThe prototype
        just has\na plain black square where the logo should be - let's add an image
        to spice\nit up. The \"image\" element allows you to either upload an image
        from your\ncomputer or select from a library of graphic icons.\\\r\n\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"image\" element** and place between
        the description and\nthe title.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Click the\n\"Choose...\" link** next to the \"image\" field.\\\r\n* **Select
        the \"Icons\"\ntab** and choose an icon for your logo.\\\r\n* **Change the
        color** of the icon\nusing the \"icon color\" field."
      U4 Model Design 3_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/cad5b0e54f67976fee68ecf29c2a603b-image-1505758463551.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding images\\\r\n\\\r\nThe prototype
        just has\na plain black square where the logo should be - let's add an image
        to spice\nit up. The \"image\" element allows you to either upload an image
        from your\ncomputer or select from a library of graphic icons.\\\r\n\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"image\" element** and place between
        the description and\nthe title.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Click the\n\"Choose...\" link** next to the \"image\" field.\\\r\n* **Select
        the \"Icons\"\ntab** and choose an icon for your logo.\\\r\n* **Change the
        color** of the icon\nusing the \"icon color\" field."
      U4 Model Design 4: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/17b565cb2f5da12babc16fbd22685732-image-1505758655682.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding buttons\\\r\n\\\r\nButtons allow
        your\nuser to interact with your app. This prototype screen will need three
        buttons\n(each shaded gray on the prototype.) We've already added the Search
        button,\nso you just need to add Contact and About.\\\r\n\\\r\n# Do This\\\r\n\\\r\n*
        **Drag\nout a new \"button\" element** for each of the two remaining buttons.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Change the text** to match\nthe
        prototype.\\\r\n* **Modify other properties** to make the screen look like\nyou'd
        like.\\\r\n\\\r\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"\nstyle=\"width:
        500px;\">"
      U4 Model Design 4_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/17b565cb2f5da12babc16fbd22685732-image-1505758655682.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding buttons\\\r\n\\\r\nButtons allow
        your\nuser to interact with your app. This prototype screen will need three
        buttons\n(each shaded gray on the prototype.) We've already added the Search
        button,\nso you just need to add Contact and About.\\\r\n\\\r\n# Do This\\\r\n\\\r\n*
        **Drag\nout a new \"button\" element** for each of the two remaining buttons.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Change the text** to match\nthe
        prototype.\\\r\n* **Modify other properties** to make the screen look like\nyou'd
        like.\\\r\n\\\r\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"\nstyle=\"width:
        500px;\">"
      U4 Model Design 4_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/17b565cb2f5da12babc16fbd22685732-image-1505758655682.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding buttons\\\r\n\\\r\nButtons allow
        your\nuser to interact with your app. This prototype screen will need three
        buttons\n(each shaded gray on the prototype.) We've already added the Search
        button,\nso you just need to add Contact and About.\\\r\n\\\r\n# Do This\\\r\n\\\r\n*
        **Drag\nout a new \"button\" element** for each of the two remaining buttons.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Change the text** to match\nthe
        prototype.\\\r\n* **Modify other properties** to make the screen look like\nyou'd
        like.\\\r\n\\\r\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"\nstyle=\"width:
        500px;\">"
      U4 Model Design 5: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/d257d0b06a24195a40adc60e4c96c0e1-image-1505759167176.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Making a Search Box\\\r\n\\\r\nThe search
        box\nin our prototype can be created using a \"Text Input\" element. This
        is a\nbox that your user can type into, and later your software can read what
        was\nentered and do something with it.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Add
        a Text Input**\nelement.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Add a Label**\nwith the text \"Location\" next to your text input."
      U4 Model Design 5_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/d257d0b06a24195a40adc60e4c96c0e1-image-1505759167176.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Making a Search Box\\\r\n\\\r\nThe search
        box\nin our prototype can be created using a \"Text Input\" element. This
        is a\nbox that your user can type into, and later your software can read what
        was\nentered and do something with it.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Add
        a Text Input**\nelement.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Add a Label**\nwith the text \"Location\" next to your text input."
      U4 Model Design 5_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/d257d0b06a24195a40adc60e4c96c0e1-image-1505759167176.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Making a Search Box\\\r\n\\\r\nThe search
        box\nin our prototype can be created using a \"Text Input\" element. This
        is a\nbox that your user can type into, and later your software can read what
        was\nentered and do something with it.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Add
        a Text Input**\nelement.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Add a Label**\nwith the text \"Location\" next to your text input."
      U4 Model Design 6: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/7c8f4893c0b1f4bcd2280c950e389c95-image-1505759396699.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Checkboxes\\\r\n\\\r\nThe type of recyclables\nyou're
        searching for can be set using \"Checkbox\" elements. We already added\na
        checkbox and label for glass, so you just need to add ones for paper and\nplastic.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n* **Add a Checkbox** for each of the options.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Add labels** to describe\neach
        checkbox."
      U4 Model Design 6_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/7c8f4893c0b1f4bcd2280c950e389c95-image-1505759396699.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Checkboxes\\\r\n\\\r\nThe type of recyclables\nyou're
        searching for can be set using \"Checkbox\" elements. We already added\na
        checkbox and label for glass, so you just need to add ones for paper and\nplastic.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n* **Add a Checkbox** for each of the options.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Add labels** to describe\neach
        checkbox."
      U4 Model Design 6_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/7c8f4893c0b1f4bcd2280c950e389c95-image-1505759396699.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Checkboxes\\\r\n\\\r\nThe type of recyclables\nyou're
        searching for can be set using \"Checkbox\" elements. We already added\na
        checkbox and label for glass, so you just need to add ones for paper and\nplastic.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n* **Add a Checkbox** for each of the options.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Add labels** to describe\neach
        checkbox."
      U4 Model Design 7: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Finishing Touches\\\r\n\\\r\nBy now
        you should\nhave a fairly complete (though non-functional) digital version
        of the paper\nprototype we started with. All that's left to do is check back
        over your\npaper prototype and add any final touches you might have missed.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* **Check over the prototype** to make sure you've included\neverything.\\\r\n*
        **Read through your IDs** and fix any that aren't descriptive.\\\r\n*\n**Clean
        up** any rough edges by resizing or moving around elements."
      U4 Model Design 7_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Finishing Touches\\\r\n\\\r\nBy now
        you should\nhave a fairly complete (though non-functional) digital version
        of the paper\nprototype we started with. All that's left to do is check back
        over your\npaper prototype and add any final touches you might have missed.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* **Check over the prototype** to make sure you've included\neverything.\\\r\n*
        **Read through your IDs** and fix any that aren't descriptive.\\\r\n*\n**Clean
        up** any rough edges by resizing or moving around elements."
      U4 Model Design 7_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Finishing Touches\\\r\n\\\r\nBy now
        you should\nhave a fairly complete (though non-functional) digital version
        of the paper\nprototype we started with. All that's left to do is check back
        over your\npaper prototype and add any final touches you might have missed.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* **Check over the prototype** to make sure you've included\neverything.\\\r\n*
        **Read through your IDs** and fix any that aren't descriptive.\\\r\n*\n**Clean
        up** any rough edges by resizing or moving around elements."
      U4 Model Program 1.5: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model_about.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Design the About Screen\\\r\n\\\r\nTo
        add elements\nto your new About screen, you'll need to first select it from
        the screens\ndropdown.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Complete the About
        screen** using the\nprototype to the right.\\\r\n* **Use the screens dropdown**
        to switch between\nyour Home and About screens."
      U4 Model Program 1.5_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model_about.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Design the About Screen\\\r\n\\\r\nTo
        add elements\nto your new About screen, you'll need to first select it from
        the screens\ndropdown.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Complete the About
        screen** using the\nprototype to the right.\\\r\n* **Use the screens dropdown**
        to switch between\nyour Home and About screens."
      U4 Model Program 1.5_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model_about.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Design the About Screen\\\r\n\\\r\nTo
        add elements\nto your new About screen, you'll need to first select it from
        the screens\ndropdown.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Complete the About
        screen** using the\nprototype to the right.\\\r\n* **Use the screens dropdown**
        to switch between\nyour Home and About screens."
      U4 Model Program 1: "# Adding a New Screen\\\r\n\n\\\r\nTo complete\nyour app,
        you're going to need more than than just a home screen. Each card\nthat you
        created in your paper prototype is represented by a \"screen\" in\nApp Lab.
        To create more screens, just click the dropdown at the top of the\napp display
        and select \"New Screen...\"\\\r\n\\\r\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\"\nstyle=\"width:
        200px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Create a New Screen**\n
        \   and give it the ID \"about\"."
      U4 Model Program 1_2018: "# Adding a New Screen\\\r\n\n\\\r\nTo complete\nyour
        app, you're going to need more than than just a home screen. Each card\nthat
        you created in your paper prototype is represented by a \"screen\" in\nApp
        Lab. To create more screens, just click the dropdown at the top of the\napp
        display and select \"New Screen...\"\\\r\n\\\r\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\"\nstyle=\"width:
        200px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Create a New Screen**\n
        \   and give it the ID \"about\"."
      U4 Model Program 1_2019: "# Adding a New Screen\\\r\n\n\\\r\nTo complete\nyour
        app, you're going to need more than than just a home screen. Each card\nthat
        you created in your paper prototype is represented by a \"screen\" in\nApp
        Lab. To create more screens, just click the dropdown at the top of the\napp
        display and select \"New Screen...\"\\\r\n\\\r\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\"\nstyle=\"width:
        200px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Create a New Screen**\n
        \   and give it the ID \"about\"."
      U4 Model Program 2.5: "# Contact Screen Import\\\r\n\n\\\r\nYet\nanother student
        created a Contact screen that you can import into your app.\nTheir share link
        is **<a href =\"https://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/\"\ntarget=\"_blank\">https\\://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/</a>**\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   **Select \"Import Screen...** from the screens
        dropdown.\\\r\n-   \\*\n    **Copy and paste the above url** into the import
        screens dialog.\\\r\n-   **Select\n    the screen** you wish to import.\\\r\n-
        \  **Click Import** to import the screen.\\\r\n-   \\*\n    **Use the screens
        dropdown** to make sure your app has Home, About, Contact,\n    and Search
        screens."
      U4 Model Program 2.5_2018: "# Contact Screen Import\\\r\n\n\\\r\nYet\nanother
        student created a Contact screen that you can import into your app.\nTheir
        share link is **<a href =\"https://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/\"\ntarget=\"_blank\">https\\://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/</a>**\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   **Select \"Import Screen...** from the screens
        dropdown.\\\r\n-   \\*\n    **Copy and paste the above url** into the import
        screens dialog.\\\r\n-   **Select\n    the screen** you wish to import.\\\r\n-
        \  **Click Import** to import the screen.\\\r\n-   \\*\n    **Use the screens
        dropdown** to make sure your app has Home, About, Contact,\n    and Search
        screens."
      U4 Model Program 2.5_2019: "# Contact Screen Import\\\r\n\n\\\r\nYet\nanother
        student created a Contact screen that you can import into your app.\nTheir
        share link is **<a href =\"https://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/\"\ntarget=\"_blank\">https\\://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/</a>**\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   **Select \"Import Screen...** from the screens
        dropdown.\\\r\n-   \\*\n    **Copy and paste the above url** into the import
        screens dialog.\\\r\n-   **Select\n    the screen** you wish to import.\\\r\n-
        \  **Click Import** to import the screen.\\\r\n-   \\*\n    **Use the screens
        dropdown** to make sure your app has Home, About, Contact,\n    and Search
        screens."
      U4 Model Program 2: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/9ca7398a9b7403dc39ec6a6b2d2b8a5e-image-1477346132059.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Screen Import\\\r\n\\\r\nIn addition
        to adding\nnew blank screens, you can import screens from \"Import Screen...\"
        To import\na screen from someone else, you'll need them to give you the sharing
        URL.\\\r\n\\\r\n**Note:**\nScreens you import _must not_ share any IDs with
        elements already in your\napp!\\\r\n\\\r\n# Do This\\\r\n\\\r\nAnother student
        has created a search results\nscreen that you can import into your app. Their
        app's share link is **<a\nhref=\"https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/\"
        target=\"_blank\">https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/</a>**\\\r\n\\\r\n*\n**Select
        \"Import Screen...** from the screens dropdown.\\\r\n* **Copy and paste\nthe
        above url** into the import screens dialog.\\\r\n* **Select the screen**\nyou
        wish to import.\\\r\n* **Click Import** to import the screen.\\\r\n* **Use\nthe
        screens dropdown** to switch between your Home, About, and Search screens."
      U4 Model Program 2_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/9ca7398a9b7403dc39ec6a6b2d2b8a5e-image-1477346132059.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Screen Import\\\r\n\\\r\nIn addition
        to adding\nnew blank screens, you can import screens from \"Import Screen...\"
        To import\na screen from someone else, you'll need them to give you the sharing
        URL.\\\r\n\\\r\n**Note:**\nScreens you import _must not_ share any IDs with
        elements already in your\napp!\\\r\n\\\r\n# Do This\\\r\n\\\r\nAnother student
        has created a search results\nscreen that you can import into your app. Their
        app's share link is **<a\nhref=\"https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/\"
        target=\"_blank\">https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/</a>**\\\r\n\\\r\n*\n**Select
        \"Import Screen...** from the screens dropdown.\\\r\n* **Copy and paste\nthe
        above url** into the import screens dialog.\\\r\n* **Select the screen**\nyou
        wish to import.\\\r\n* **Click Import** to import the screen.\\\r\n* **Use\nthe
        screens dropdown** to switch between your Home, About, and Search screens."
      U4 Model Program 2_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/9ca7398a9b7403dc39ec6a6b2d2b8a5e-image-1477346132059.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Screen Import\\\r\n\\\r\nIn addition
        to adding\nnew blank screens, you can import screens from \"Import Screen...\"
        To import\na screen from someone else, you'll need them to give you the sharing
        URL.\\\r\n\\\r\n**Note:**\nScreens you import _must not_ share any IDs with
        elements already in your\napp!\\\r\n\\\r\n# Do This\\\r\n\\\r\nAnother student
        has created a search results\nscreen that you can import into your app. Their
        app's share link is **<a\nhref=\"https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/\"
        target=\"_blank\">https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/</a>**\\\r\n\\\r\n*\n**Select
        \"Import Screen...** from the screens dropdown.\\\r\n* **Copy and paste\nthe
        above url** into the import screens dialog.\\\r\n* **Select the screen**\nyou
        wish to import.\\\r\n* **Click Import** to import the screen.\\\r\n* **Use\nthe
        screens dropdown** to switch between your Home, About, and Search screens."
      U4 Model Program 3: "# Button Events\\\r\n\n\\\r\nWith our screens\nin place,
        it's time to start actually _programming_ the app so that it responds\nto
        button clicks. For each button on each screen, you'll want to add an `onEvent`\nblock
        that watches for that button to be clicked and responds appropriately.\nTo
        start off with we'll just watch the \"home_search_btn\" button and print\nsomething
        to the console when it's clicked\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nYou're\nnow
        in Code Mode (you can use the buttons above your app to switch between\nCode
        Mode and Design Mode). This is where you can write the code that will\nrespond
        to users interacting with your app.\\\r\n\\\r\n![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)\\\r\n\\\r\n\\*\n**Drag
        out an `onEvent` block** from the code toolbox.\\\r\n\n-   **Select \"home_search_btn\"**\n
        \   from the \"id\" dropdown.\\\r\n-   **Drag out a `console.log` block**
        from the\n    variables drawer.\\\r\n-   **Run your app**.\\\r\n-   **Click
        the Search button**\n    and look for messages in the console."
      U4 Model Program 3_2018: "# Button Events\\\r\n\n\\\r\nWith our screens\nin
        place, it's time to start actually _programming_ the app so that it responds\nto
        button clicks. For each button on each screen, you'll want to add an `onEvent`\nblock
        that watches for that button to be clicked and responds appropriately.\nTo
        start off with we'll just watch the \"home_search_btn\" button and print\nsomething
        to the console when it's clicked\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nYou're\nnow
        in Code Mode (you can use the buttons above your app to switch between\nCode
        Mode and Design Mode). This is where you can write the code that will\nrespond
        to users interacting with your app.\\\r\n\\\r\n![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)\\\r\n\\\r\n\\*\n**Drag
        out an `onEvent` block** from the code toolbox.\\\r\n\n-   **Select \"home_search_btn\"**\n
        \   from the \"id\" dropdown.\\\r\n-   **Drag out a `console.log` block**
        from the\n    variables drawer.\\\r\n-   **Run your app**.\\\r\n-   **Click
        the Search button**\n    and look for messages in the console."
      U4 Model Program 3_2019: "# Button Events\\\r\n\n\\\r\nWith our screens\nin
        place, it's time to start actually _programming_ the app so that it responds\nto
        button clicks. For each button on each screen, you'll want to add an `onEvent`\nblock
        that watches for that button to be clicked and responds appropriately.\nTo
        start off with we'll just watch the \"home_search_btn\" button and print\nsomething
        to the console when it's clicked\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nYou're\nnow
        in Code Mode (you can use the buttons above your app to switch between\nCode
        Mode and Design Mode). This is where you can write the code that will\nrespond
        to users interacting with your app.\\\r\n\\\r\n![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)\\\r\n\\\r\n\\*\n**Drag
        out an `onEvent` block** from the code toolbox.\\\r\n\n-   **Select \"home_search_btn\"**\n
        \   from the \"id\" dropdown.\\\r\n-   **Drag out a `console.log` block**
        from the\n    variables drawer.\\\r\n-   **Run your app**.\\\r\n-   **Click
        the Search button**\n    and look for messages in the console."
      U4 Model Program 4: "# Changing Screens On Click\\\r\n\n\\\r\nThe\n`setScreen`
        block will change your app to whichever screen you specify. If\nyou place
        a `setScreen` block _inside_ an `onEvent` block, you can program\nyour buttons
        to change to the correct screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing\nthe
        `onEvent` block that you've created, make your program change to the\n\"search\"
        screen when the \"home_search_btn\" is clicked.\\\r\n\\\r\n\n-   **Drag\n
        \   out a `setScreen` block** an put it inside the `onEvent` block.\\\r\n-
        \  **Select\n    \"search\"** from the `setScreen` dropdown.\\\r\n-   **Run
        your app** and test\n    the \"home_search_btn\" button."
      U4 Model Program 4_2018: "# Changing Screens On Click\\\r\n\n\\\r\nThe\n`setScreen`
        block will change your app to whichever screen you specify. If\nyou place
        a `setScreen` block _inside_ an `onEvent` block, you can program\nyour buttons
        to change to the correct screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing\nthe
        `onEvent` block that you've created, make your program change to the\n\"search\"
        screen when the \"home_search_btn\" is clicked.\\\r\n\\\r\n\n-   **Drag\n
        \   out a `setScreen` block** an put it inside the `onEvent` block.\\\r\n-
        \  **Select\n    \"search\"** from the `setScreen` dropdown.\\\r\n-   **Run
        your app** and test\n    the \"home_search_btn\" button."
      U4 Model Program 4_2019: "# Changing Screens On Click\\\r\n\n\\\r\nThe\n`setScreen`
        block will change your app to whichever screen you specify. If\nyou place
        a `setScreen` block _inside_ an `onEvent` block, you can program\nyour buttons
        to change to the correct screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing\nthe
        `onEvent` block that you've created, make your program change to the\n\"search\"
        screen when the \"home_search_btn\" is clicked.\\\r\n\\\r\n\n-   **Drag\n
        \   out a `setScreen` block** an put it inside the `onEvent` block.\\\r\n-
        \  **Select\n    \"search\"** from the `setScreen` dropdown.\\\r\n-   **Run
        your app** and test\n    the \"home_search_btn\" button."
      U4 Model Program 5: "# Wire Up the Other Buttons\\\r\n\n\\\r\nNow\nthat you've
        made one button work, just follow the same pattern for all of\nyour others.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   **Add an `onEvent` block** for each\n    button.\\\r\n-
        \  **Select the button ID** from the \"id\" dropdown.\\\r\n-   **Add\n    a
        `setScreen` block** inside each `onEvent` block.\\\r\n-   **Select the screen\n
        \   ID** from each `setScreen` dropdown.\\\r\n-   **Run your app** and test
        that all\n    of the buttons work."
      U4 Model Program 5_2018: "# Wire Up the Other Buttons\\\r\n\n\\\r\nNow\nthat
        you've made one button work, just follow the same pattern for all of\nyour
        others.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Add an `onEvent` block**
        for each\n    button.\\\r\n-   **Select the button ID** from the \"id\" dropdown.\\\r\n-
        \  **Add\n    a `setScreen` block** inside each `onEvent` block.\\\r\n-   **Select
        the screen\n    ID** from each `setScreen` dropdown.\\\r\n-   **Run your app**
        and test that all\n    of the buttons work."
      U4 Model Program 5_2019: "# Wire Up the Other Buttons\\\r\n\n\\\r\nNow\nthat
        you've made one button work, just follow the same pattern for all of\nyour
        others.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Add an `onEvent` block**
        for each\n    button.\\\r\n-   **Select the button ID** from the \"id\" dropdown.\\\r\n-
        \  **Add\n    a `setScreen` block** inside each `onEvent` block.\\\r\n-   **Select
        the screen\n    ID** from each `setScreen` dropdown.\\\r\n-   **Run your app**
        and test that all\n    of the buttons work."
      U4-AP-Practice-Choose-The-Data-Concern: "# AP Practice\n\n-   Identify the Data
        Concern\\\r\n    \\\r\n    One component of the **AP Explore Performance\n
        \   Task** is describing a data concern related to a computing innovation.\\\r\n
        \   \\\r\n    <div\n    style=\"width: 80%; margin: auto; background-color:
        #EEEEEE; padding: 10px;\n    font-family: serif; font-size: 12pt\">\r\n    \r\n
        \   <b>Computing Innovation</b>\r\n    <br>\r\n    <br>\r\n    2d.  Using\n
        \   specific details, describe\r\n    <br>\r\n    <br>\r\n    <ul>\r\n    <li>at
        least one data\n    storage concern, data privacy concern, or data security
        concern directly related\n    to the computing innovation.</li>\r\n    </ul>\r\n
        \   </div>\r\n    <br>\r\n    \r\n    Here's\n    the scoring guide for this
        part of the question\r\n    \r\n    <div style=\"magin:auto\">\r\n    \\t<img\n
        \   src=\"https://images.code.org/6ff69107762c5afb27661625600d2bfb-image-1510609916491.51.42\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    <br>\r\n    \r\n    # Sample Responses\r\n
        \   \r\n    The responses\n    below are 4 sample responses to this component
        of the question.\r\n    \r\n    **Response\n    A:** \"Facial recognition
        technology stores data mapping a user's face. A\n    privacy concern for this
        technology is that it could be used by businesses\n    and governments to
        identify people as they walk around in their daily lives.\"\r\n    \r\n    **Response\n
        \   B:** \"Software that tracks soccer player movements on the field can be
        used\n    to generate new statistics that help value contributions of individual
        players.\n    A data concern is that this information may be used to justify
        firing less\n    productive players.\"\r\n    \r\n    **Response C:** \"Social
        networks allow users\n    to share vast amounts of private information about
        their lives. A security\n    concern of this technology is that this publicly
        available data may enable\n    stalkers or other criminals to identify potential
        targets.\"\r\n    \r\n    **Response\n    D:** \"Self-driving cars store vast
        amounts of information about their location\n    and the world around them.
        A data concern is that this information would be\n    overwhelming for a single
        human to focus on as they drive.\"\r\n    \r\n    # Choose\n    the 2 Data
        Concerns\r\n    \r\n    **Two of these responses would likely earn the\n    point
        for this row. Two likely would not.**\r\n    \r\n    **Choose the two responses\n
        \   (A, B, C, or D) that would earn the point. Then justify why you chose
        them.**"
      U4-AP-Practice-Choose-The-Data-Concern_2018: "# AP Practice\n\n-   Identify
        the Data Concern\\\r\n    \\\r\n    One component of the **AP Explore Performance\n
        \   Task** is describing a data concern related to a computing innovation.\\\r\n
        \   \\\r\n    <div\n    style=\"width: 80%; margin: auto; background-color:
        #EEEEEE; padding: 10px;\n    font-family: serif; font-size: 12pt\">\r\n    \r\n
        \   <b>Computing Innovation</b>\r\n    <br>\r\n    <br>\r\n    2d.  Using\n
        \   specific details, describe\r\n    <br>\r\n    <br>\r\n    <ul>\r\n    <li>at
        least one data\n    storage concern, data privacy concern, or data security
        concern directly related\n    to the computing innovation.</li>\r\n    </ul>\r\n
        \   </div>\r\n    <br>\r\n    \r\n    Here's\n    the scoring guide for this
        part of the question\r\n    \r\n    <div style=\"magin:auto\">\r\n    \\t<img\n
        \   src=\"https://images.code.org/6ff69107762c5afb27661625600d2bfb-image-1510609916491.51.42\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    <br>\r\n    \r\n    # Sample Responses\r\n
        \   \r\n    The responses\n    below are 4 sample responses to this component
        of the question.\r\n    \r\n    **Response\n    A:** \"Facial recognition
        technology stores data mapping a user's face. A\n    privacy concern for this
        technology is that it could be used by businesses\n    and governments to
        identify people as they walk around in their daily lives.\"\r\n    \r\n    **Response\n
        \   B:** \"Software that tracks soccer player movements on the field can be
        used\n    to generate new statistics that help value contributions of individual
        players.\n    A data concern is that this information may be used to justify
        firing less\n    productive players.\"\r\n    \r\n    **Response C:** \"Social
        networks allow users\n    to share vast amounts of private information about
        their lives. A security\n    concern of this technology is that this publicly
        available data may enable\n    stalkers or other criminals to identify potential
        targets.\"\r\n    \r\n    **Response\n    D:** \"Self-driving cars store vast
        amounts of information about their location\n    and the world around them.
        A data concern is that this information would be\n    overwhelming for a single
        human to focus on as they drive.\"\r\n    \r\n    # Choose\n    the 2 Data
        Concerns\r\n    \r\n    **Two of these responses would likely earn the\n    point
        for this row. Two likely would not.**\r\n    \r\n    **Choose the two responses\n
        \   (A, B, C, or D) that would earn the point. Then justify why you chose
        them.**"
      U4-AP-Practice-Choose-The-Data-Concern_2019: "# AP Practice\n\n-   Identify
        the Data Concern\\\r\n    \\\r\n    One component of the **AP Explore Performance\n
        \   Task** is describing a data concern related to a computing innovation.\\\r\n
        \   \\\r\n    <div\n    style=\"width: 80%; margin: auto; background-color:
        #EEEEEE; padding: 10px;\n    font-family: serif; font-size: 12pt\">\r\n    \r\n
        \   <b>Computing Innovation</b>\r\n    <br>\r\n    <br>\r\n    2d.  Using\n
        \   specific details, describe\r\n    <br>\r\n    <br>\r\n    <ul>\r\n    <li>at
        least one data\n    storage concern, data privacy concern, or data security
        concern directly related\n    to the computing innovation.</li>\r\n    </ul>\r\n
        \   </div>\r\n    <br>\r\n    \r\n    Here's\n    the scoring guide for this
        part of the question\r\n    \r\n    <div style=\"magin:auto\">\r\n    \\t<img\n
        \   src=\"https://images.code.org/6ff69107762c5afb27661625600d2bfb-image-1510609916491.51.42\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    <br>\r\n    \r\n    # Sample Responses\r\n
        \   \r\n    The responses\n    below are 4 sample responses to this component
        of the question.\r\n    \r\n    **Response\n    A:** \"Facial recognition
        technology stores data mapping a user's face. A\n    privacy concern for this
        technology is that it could be used by businesses\n    and governments to
        identify people as they walk around in their daily lives.\"\r\n    \r\n    **Response\n
        \   B:** \"Software that tracks soccer player movements on the field can be
        used\n    to generate new statistics that help value contributions of individual
        players.\n    A data concern is that this information may be used to justify
        firing less\n    productive players.\"\r\n    \r\n    **Response C:** \"Social
        networks allow users\n    to share vast amounts of private information about
        their lives. A security\n    concern of this technology is that this publicly
        available data may enable\n    stalkers or other criminals to identify potential
        targets.\"\r\n    \r\n    **Response\n    D:** \"Self-driving cars store vast
        amounts of information about their location\n    and the world around them.
        A data concern is that this information would be\n    overwhelming for a single
        human to focus on as they drive.\"\r\n    \r\n    # Choose\n    the 2 Data
        Concerns\r\n    \r\n    **Two of these responses would likely earn the\n    point
        for this row. Two likely would not.**\r\n    \r\n    **Choose the two responses\n
        \   (A, B, C, or D) that would earn the point. Then justify why you chose
        them.**"
      U4-AP-Practice-Choose-The-Harmful-Effect: "# AP Practice\n\n-   Choose the Harmful
        Effect\\\r\n    One component of the **AP Explore Performance\n    Task**
        is describing a data concern related to a computing innovation.\\\r\n    \\\r\n
        \   <div\n    style=\"width: 80%; margin: auto; background-color: #EEEEEE;
        padding: 10px;\n    font-family: serif; font-size: 12pt\">\r\n    \r\n    <b>Computing
        Innovation</b>\r\n    <br>\r\n    <br>\r\n    2d.  Using\n    specific details,
        describe\r\n    <br>\r\n    <br>\r\n    <ul>\r\n    <li>at least one data\n
        \   storage concern, data privacy concern, or data security concern directly
        related\n    to the computing innovation.</li>\r\n    </ul>\r\n    </div>\r\n
        \   <br>\r\n    \r\n    Here's\n    the scoring guide for this part of the
        question\r\n    \r\n    <div style=\"magin:auto\">\r\n    \\t<img\n    src=\"https://images.code.org/6ff69107762c5afb27661625600d2bfb-image-1510609916491.51.42\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    <br>\r\n    \r\n    # Choose the
        Harmful Effect"
      U5 ColorSleuth implement end game: "# Challenge - Pick a\n\nway for the game
        to end and implement it\\\r\n\\\r\nYour challenge now is to add\nsome code
        completely on your own.  Use what you've learned so far, and Alexis\nand Michael's
        discussion to help you.\\\r\n\\\r\n**This is the last programming\nlevel**\\\r\n\\\r\n\n-
        \  Make all changes and additions to the program that you want\n    here\\\r\n-
        \  When you're done hit **Submit**\\\r\n    \\\r\n    **Goal:** Add code that\n
        \   provides a way for the game to end which:\\\r\n-   Switches to the `gameOver_screen`\\\r\n-
        \  \\*\n    Shows which player won the game by showing `player1Win_label`
        or `player2Win_label`\\\r\n    \\\r\n    *We've\n    provided `gameOver_screen`
        as part of the template for this project -- Switch\n    to Design Mode to
        take a look at what's there*\\\r\n    \\\r\n    **Suggestions**\\\r\n-   \\*\n
        \   If you're stuck for ideas, try to implement the end game condition of
        \"first\n    to 10\" - first player to reach a score of 10 wins.\\\r\n-   You
        should use the\n    suggestion from the discussion to add a function like
        `checkGameOver()` and\n    call it from `checkCorrect`\\\r\n    \\\r\n    <details><summary><strong>Above
        and Beyond:\n    optional extra options for your project [Click to expand]</strong></summary>\r\n
        \   \r\n    <p>\r\n    Here\n    are a bunch of ways you can add to or extend
        the project:\r\n    \r\n    </p>\r\n    <ul>\r\n    \r\n    \r\n    <li>Add\n
        \   \"start over\" button on the last screen, which should reset everything,
        and\n    go back to the game play screen\r\n    </li>\r\n    <li>Add a welcome
        screen that\n    explains the rules and invites the player to start the game
        (make it the default\n    screen)\r\n    </li>\r\n    <li>Make the game more
        difficult:</li>\r\n    <uL>\r\n    <li>Make\n    the colors more similar (we
        added 20 to every RGB value, try 15 or 10).</li>\r\n    <li>Or\n    make the
        difficulty variable - you can generate a random number between 5\n    and
        20 and add that to the RGB values. </li>\r\n    <li>Or make it get progressively\n
        \   more difficult - use a variable to keep track of how much to add to each
        RGB\n    value and decrease it over time.</li>\r\n    \\t<li>Or on a welcome
        screen ask\n    if the player wants to play easy, medium, or hard.</li>\r\n
        \   </uL>\r\n    \r\n    <li>Add\n    a timing element - lookup the documentation
        for setTimeout which calls a function\n    after a certain amount of time.
        (Note: you may need to remix the project in\n    as a free-play App Lab project
        to do this).\r\n    </li>\r\n    <li>You can also use\n    <code>getTime()</code>
        at the beginning and end of your code to figure out\n    how long it took
        for the game to end, which you could use to adjust the score.</li>\r\n    </ul>\r\n
        \   </details>\r"
      U5-AP-Practice-Choose-The-Algorithm: "# AP Practice\n\n-   Identify the Abstraction\\\r\n
        \   \\\r\n    One component of the **AP Create Performance\n    Task** is
        selecting an abstraction that you developed.\\\r\n    \\\r\n    <div style=\"width:\n
        \   80%; margin: auto; background-color: #EEEEEE; padding: 10px; font-family:\n
        \   serif; font-size: 12pt\">\r\n    \r\n    <b>3. Program Code</b>\r\n    <ul>\r\n
        \   <li>Mark\n    with a <b>rectangle</b> the segment of program code that
        represents an abstraction\n    you developed.</li>\r\n    </ul>\r\n    </div>\r\n
        \   <br>\r\n    \r\n    Here's the scoring\n    guide for this question\r\n
        \   \r\n    <div style=\"magin:auto\">\r\n    \\t<img src=\"https://images.code.org/341764b27f16965cf27680e20c893a23-image-1508190677805.50.59\n
        \   PM.png\">\r\n    </div>\r\n    \r\n    # Choose the Student-Created Abstraction\r\n
        \   \r\n    The\n    program code below is from a program a student developed.
        \r\n    \r\n    ![](https://images.code.org/86d48cfc2c9c81551aa059281e9c62f3-image-1508189804595.34.48\n
        \   PM.png)\r\n    \r\n    **Write which of the rectangles (A, B, C, or D)
        is placed around\n    a student-developed abstraction.**\r\n    \r\n    **Then
        explain your answer using\n    the criteria in the scoring guide.**"
      U5-AP-Practice-FR-manage-complexity: "# AP Practice -\n\nPerformance Task Response\\\r\n\\\r\nThe
        AP Create Performance task asks you to\nwrite about an abstraction that you
        developed and wrote into your code. Most\nof the time that means identifying
        a function or procedure you wrote to help\n\"manage complexity\" in your program.\\\r\n\\\r\nHere
        is the actual prompt from\nthe Create Performance Task:\\\r\n\\\r\n\n<div
        style=\"width: 70%; margin: auto;\nbackground-color: #EEEEEE; padding: 10px;
        font-family: serif; font-size: 12pt\">\\\r\n\\\r\n<b>2d.</b>\nCapture and
        paste a program code segment that contains an abstraction you\ndeveloped individually
        on your own (marked with a <b>rectangle</b>). This\nabstraction must integrate
        mathematical and logical concepts. Explain how\nyour abstraction helped manage
        the complexity of your program.\\\r\n<br>\\\r\n<i>(Must\nnot exceed 200 words)</i>\\\r\n\\\r\n</div>\\\r\n\\\r\n<br>\\\r\n\\\r\nBelow
        is a segment\nof code from an \"under the sea\" program with a rectangle drawn
        around a\nportion of the code identifying an abstraction. Imagine that you
        wrote this\nand are composing an AP response about how this abstraction manages
        complexity.  (Note:\nignore the requirement that the abstraction integrate
        \"mathematical and logical\nconcepts\" for this practice response.  Just write
        about managing complexity).\\\r\n\\\r\n![](https://images.code.org/d98fa58fce78eff86fd734f32e2960e4-image-1507913593511.png)\\\r\n\\\r\nExplain\nhow
        the abstraction marked with the rectangle in the code above helps manage\ncomplexity
        of this program."
      What is the difference between formative and summative assessment?: |-
        Le
        lien suivant est une ressource qui fournit des définitions et exemples d’évaluations formatives et sommatives :
      aE1: "<img src=\"https://images.code.org/fa3c416b74ff9071455535955bc4df35-image-1465507662295.gif\"\nstyle=\"float:left;
        width:100px; margin: 0 20px 80px 100px;\"/>\\\r\n\\\r\n\n<div\nstyle=\"color:
        #7665a0; font-size: 1.6em; line-height: 1.4em;\">\\\r\nFirst,\nwe need napkins!\\\r\n\\\r\nChoose
        your favorite shape:\\\r\n - Square (Easy)\\\r\n\n-   Triangle (Medium)\\\r\n-
        \  Pentagon (Hard)\\\r\n    \\\r\n    </div>\\\r\n    <br/>\\\r\n    \\\r"
      aE2: "<img src=\"https://images.code.org/2a67ea28a0fb9f674fd764b350b297da-image-1465514320176.gif\"\nstyle=\"width:400px;
        margin: 0 20px 20px 10px;\"/>\\\r\n\\\r\n\n<div style=\"color:\n#7665a0; font-size:
        1.6em; line-height: 1.4em;\" >Now we need enough for everyone!\r\n<br/><br/>\r\n\r\nLet's\ntake
        the shape we just made and line up a row of 14 napkins.  \r\n<br/>\r\nIf\nyou
        place one loop inside another loop, we call that a nested loop. \r\n\r\nHow\ncan
        you loop all of the code from your last stage to make sure all 14 napkins\nline
        up next to each other?</div>\r"
      aE3: "<img src=\"https://images.code.org/e9fe83556eec68be9ebd7de9a16267b1-image-1465516277348.gif\"\nstyle=\"width:400px;
        margin: 0 20px 20px 100px;\" loop=\"infinite\"/>\\\r\n\\\r\n\n<div\nstyle=\"color:
        #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\\\r\nWe've\ngot to have
        a tablecloth!  <br/></br>\\\r\n\\\r\nTake your row of 14 napkins and\nsew
        14 of those together with another **outer loop** to make a cover for our\ntable.\\\r\n</div>\\\r\n\\\r"
      aE3alternate: "\\\r\n\n<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nThis alternate shows what the image would\nlook like if the
        user chose pentagon napkins and modified line weight/color.\\\r\n</div>\\\r\n\\\r"
      aE3alternateB: "\\\r\n\n<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nThis alternate shows what the image would\nlook like if the
        user chose triangle napkins and got bold with the code.\\\r\n</div>\\\r\n\\\r"
      aE4: "\\\r\n\n<div style=\"color: #7665a0; font-size: 1.6em;\nline-height: 1.4em;\"
        >\r\nOh No! Our napkins are too small! \r\n<br/><br/>\r\nWe\nneed to have
        the napkins twice as big and still keep the tablecloth the same\nsize. What
        numbers can you change to make that happen?\r\n<br/><br/>\r\n(as\nshown in
        triangles)\r\n</div>\r\n\r"
      aE5: "\\\r\n\n<div style=\"color: #7665a0; font-size: 1.6em;\nline-height: 1.4em;\"
        >\\\r\nLet's pull the look together with some window\ndecorations!\\\r\n<br/><br/>\\\r\nHere
        is your original code for drawing a line\nof napkins. Piece 4 lines together
        to make a pattern that goes around your\nwindow frame.\\\r\n</div>\\\r\n\\\r"
      aE6: "<div style=\"color: #7665a0; font-size: 1.6em; line-height:\n1.4em;\"
        >\\\r\nThe guests are going to need something to sit on!\\\r\n<br/><br/>\\\r\nThe\nartist
        has an idea to make some fun chairs. How many times do you need to\nloop this
        to draw half of a circle?\\\r\n</div>"
      aE7: "<div style=\"color: #7665a0; font-size: 1.6em; line-height:\n1.4em;\"
        >\r\nHow about some streamers?\r\n<br/><br/>\r\nIf you create another\nloop
        like this one, but turn left instead of right, what happens? \r\n\r\nCan\nyou
        repeat all of that to draw this wave?\r\n</div>"
      aE8: "<div style=\"color: #7665a0; font-size: 1.6em; line-height:\n1.4em;\"
        >\r\nThe artist wants to give picture frames as party favors!\r\n<br/><br/>\r\nLet's\nloop
        the code from our streamers four times to create this frame. \r\n<br/><br/>We've\nadded
        a special block called `curvy corner` to give you fancy round corners!\r\n</div>"
      aEfreeplay: "<div style=\"color: #7665a0; font-size: 1.6em;\nline-height: 1.4em;\"
        >\r\n<b>Free Play:</b>\r\nFor a final touch, we need\nsome ornaments to hang
        around the house.\r\n<br/><br/>\r\nCan you design a\ndecoration to spice up
        the party?\r\n</div>\r\n<br/>\r\n<h4>\r\n<details>\r\n<summary>Need\nIdeas?</summary>\r\n<br/>\r\n<br/>\r\nTry
        making a tablecloth full of diamond\nnapkins!  \r\n<img src=\"https://images.code.org/2c092ea5edbb33405c019110df3f5710-image-1466095499984.43.56.png\"\nwidth=\"200px\"/>
        \ \r\n<hr/>\r\n<br/>\r\nMake an ornament!   \r\n<img src=\"https://images.code.org/361d2ad667853418a040ec9383505169-image-1466096394561.56.12.png\"\nwidth=\"200px\"/>
        \ \r\n<hr/>\r\n\r\n<br/>Make something completely new!  \r\n<img\nsrc=\"https://images.code.org/6809a1bd2a364ae7e0ff42745ec1fe1b-image-1466097871045.23.44.png\"\nwidth=\"200px\"/>
        \ \r\n<hr/>\r\n\r\n\r\n</details>\r\n</h4>\r\n\r"
      allthethings_ttscsd: "<img src=\"https://images.code.org/a8ed6092389aedceceb38a83ac59fae1-image-1490832453029.07.10\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    code that makes an orange ellipse behind the green one.\\\r\n-
        \  Don't worry\n    about the exact size as long as the green ellipse is entirely
        inside the orange\n    one."
      allthethings_ttscsf contained: "Help the farmer walk the path\nto find all of
        the lettuce\\\r\n\\\r\nIn this puzzle, lettuce is growing at the\nend of every
        path.  If there is a path in front of her, the farmer can keep\nmoving forward.
        \ Otherwise, she needs to pick all of the lettuce, then turn\nto stay on the
        path. \\\r\n\\\r\n\\\r\n\\\r"
      artistLoopsK2: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nNow, use a `repeat` loop to draw this line\nfive times!<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img
        src=\"https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK2gradek_artist_loops3: "<div style=\"color: #7665a0; font-size:\n1.6em;
        line-height: 1.4em;\" >\\\r\nNow, use a `repeat` loop to draw this line\nfive
        times!<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK3: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nDraw a line eight steps long. This will\nbecome the land for
        our kingdom!<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/c00b930eb5fb13ae946847adc51c9bd3-image-1467935631246.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK4: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nNow we need a castle with a draw bridge.  Fix\nthe code so
        that the bridge lays straight instead of falling down.<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/84b93e1b9dad3ee52a46c767524d3558-image-1467935697224.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK5: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nNow we need to fix the top of the castle.\nCan you loop the
        code three times?<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/f418ccba20b7230baba1328143bd0092-image-1467935762464.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK6: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nSomeone is stuck in the tower!  Fix the\nstairs to set them
        free.<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/1efb95ca15f66b46145725769d3d279c-image-1467935856461.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK7: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nThis tower is lovely, what is downstairs?\nBuild another staircase
        to find out!<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/af040c27be11c3a639e18c440c8a047c-image-1467936046481.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK8: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nWow! There's a garden over there!  Help\nfix these stairs
        so I can get to it.<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/bf368872da36217b0d19261fc6b84bf6-image-1467936147116.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsK9: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\n**Challenge:**  Lovely! Let's take a walk\naround the garden.<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img
        src=\"https://images.code.org/cb5646ef57f68b47fa6c2762253a7044-image-1467936260174.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsKA: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nThese stones are in the wrong place.  Help\nme move them so
        I don't fall in!<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsKB: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\\\r\nLook!  It's a theater.  Help me set up\nthe chairs so we can
        all see the stage.<br/><br/>\\\r\n</div>\\\r\n\\\r\n<img src=\"https://images.code.org/c4263306ebb0ad1d99fe6f200a790d0c-image-1467936424533.gif\"\nwidth=\"300\"/>\\\r"
      artistLoopsKFP: "Picture time!  Use what you have learned\nto draw a picture
        of what you think the Artist saw on stage.\\\r\n\\\r\n\n<hr/>\\\r\n<h3>Ideas</h3>\\\r\n<table>\\\r\n<tr>\\\r\n<td>\\\r\n<img\nsrc=\"https://images.code.org/8f4f2a68dae2cf0aa82cc0a49ea4df04-image-1466787750475.gif\"\nwidth=\"150\"/><br/>\\\r\n<h4>A
        Singing Snail</h4><br/><br/>\\\r\n</td>\\\r\n\\\r\n<td>\\\r\n<img\nsrc=\"https://images.code.org/732ce5dd91c7f49f06e88da1a9f664f3-image-1466794904255.gif\"\nwidth=\"150\"/><br/>\\\r\n<h4>A
        Big City</h4><br/><br/>\\\r\n</td>\\\r\n\\\r\n<td>\\\r\n<img\nsrc=\"https://images.code.org/37fdd6fdd761df09fd4949d5e43f0a7f-image-1466795165642.gif\"\nwidth=\"150\"/><br/>\\\r\n<h4>A
        Concert</h4><br/><br/>\\\r\n</td>\\\r\n\\\r\n<td>\\\r\n<img\nsrc=\"https://images.code.org/f7bf86b0f86669d82ee2c1565738b9cb-image-1466794447737.gif\"\nwidth=\"150\"/><br/>\\\r\n<h4>A
        Birthday Cake</h4><br/><br/>\\\r\n</td>\\\r\n\\\r\n</tr>\\\r\n</table>\\\r"
      collector example: "Collect all the gold using the `collect`\nblock:\\\r\n\\\r\n<xml>\\\r\n
        \ <block type=\"collector_collect\"/></xml>"
      collectorDebugVideo2: "_\"Sequence matters!\"_\\\r\n\\\r\nThe\nblocks you need
        are already in the workspace, but not connected.  \\\r\n\\\r\nPut\nthese blocks
        in order to collect all of the gold and solve the puzzle."
      collectorSkinVideo1: "Move Laurel to the treasure, then\nuse `collect` to pick
        it up.\\\r\n\\\r\nCollect one pile of treasure to pass this\nlevel."
      collectorSkinVideo2: "Move Laurel to the treasure, then\nuse `collect` to pick
        it up.\\\r\n\\\r\nCollect one pile of treasure to pass this\nlevel."
      course1_artist_loops_challenge3: "**Tweet!**\\\r\n\\\r\n_\"Can\nyou help me
        make two bird houses?\"_"
      course1_playlab_events_challenge1: "_\"Where are my friends\nhiding? In this
        game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      course1_playlab_events_challenge2: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      course2_artist_nestedLoops_challenge1: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      course2_artist_nestedLoops_challenge2: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make an octagon.\\\r\n-
        \  The second inner loop should make a hexagon.\\\r\n-   The\n    third inner
        loop should make a square."
      course2_collector_loops_challenge2: "_\"Let's hunt for\ntreasure - using loops!\"_\\\r\n\\\r\nHelp
        the collector by debugging this code.\nGet all of the treasure!"
      course2_playlab_stage17_11: "Create your own story. When\nyou're done, click
        Finish to let friends try your story on their phones.\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>Need\nsome
        ideas?</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n        \\t<li><strong>Who's\nthere?</strong>
        - Make characters appear with random images, so no one knows\nwho's showing
        up next.</li>\r\n            <li><strong>Going on an Adventure</strong>\n-
        Change the background, then have the characters talk about where they are\nnow.
        </li>\r\n            <li><strong>Pinball</strong> - Make one character\nmove
        using the arrow keys (use `when up arrow`, `when down arrow` blocks),\nthen
        play random sounds when it collides with other characters on the screen.\n</li>\r\n
        \       </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      course3_artist_concept_challenge1: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time.\\\r\n\\\r\nThe repeated shape is almost identical\nto the one from the
        last puzzle, except that the length used in the first\nloop is a little smaller. "
      course3_artist_functions_challenge2: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      course3_farmer_condLoops_challenge1: "The pumpkins mark\nthe place where you
        should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      course3_farmer_condLoops_challenge2: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      course3_playLab_challenge1: "\\*The **squirrels** are terrified\nto see that
        a **dinosaur** has come to town! Can the brave **knight** keep\nthem all from
        panicking?\\*\\\r\n\\\r\nRules:\\\r\n\n1.  _Touching the squirrels scores\n
        \   you points._\\\r\n2.  _Touching the dinosaur takes many points away._\\\r\n
        \   \\\r\n    Here\n    is a different kind of game that has already been
        started for you! Play it\n    to see how it works. \\\r\n    \\\r\n    \\\r\n
        \   Something should happen when you get enough\n    points or when you run
        out of points. Add some code to the `win game` and\n    `lose game` functions
        to make the game work the way it should. \\\r\n    Click the\n    hints for
        ideas!"
      course3_playlab_challenge2: "Can you figure\nout how this \"Fortune Teller\"
        app works? Try adding some of the following\nfeatures to this game:\\\r\n\\\r\n\n-
        \  Change the \"yes\" and \"no\" answers to something\n    more interesting.\\\r\n-
        \  Let the player ask another question after the actor\n    says the fortune.\\\r\n-
        \  Give the witch two more things to say when she is in\n    an `angry` or
        `normal` mood.\\\r\n-   Give the wizard his own set of fortunes.\\\r\n-   \\*\n
        \   Make each actor change mood randomly.\\\r\n    \\\r\n    Check the hints
        if you need help\n    with these challenges!"
      course4_artist_binary_challenge2: "There are 256 bits\nrepresented on this grid
        - that means it's easy for a small change to cause\nbig problems. Are you
        persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      course4_artist_functions_challenge2: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      course4_artist_fwp_challenge1: Essayez d'exécuter ce programme, et apportez-y
        des modifications pour voir quels changements sont produits. Comprenez-vous
        comment cela fonctionne ? (Vous pouvez également tout supprimer et mettre
        quelque chose de totalement différent à la place.)
      course4_artist_variables_challenge2: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      course4_bee_fwp_challenge2: "Let's see if you can handle\nthis one final test!
        Give it everything you've got!\\\r\n\\\r\nUse one `for loop`\nin a function
        to collect all of the vegetables in the row. Make the `for loop`\ncount to
        different maximum values by using the `length` parameter. Make your\nprogram
        as short as possible by using a second `for loop` outside the function.\\\r\n\\\r\nGood\nluck!"
      course4_collector_nested_loops_challenge2: "_\"Let's\nhunt for treasure - using
        loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles of treasure
        using only the blocks in your toolbox. It is possible\nto collect all 4."
      course4_playlab_variables_challenge3: "Can you figure\nout how this \"Fortune
        Teller\" app works? Try adding some of the following\nfeatures to this game:\\\r\n\\\r\n\n-
        \  Change the \"yes\" and \"no\" answers to something\n    more interesting.\\\r\n-
        \  Let the player ask another question after the actor\n    says the fortune.\\\r\n-
        \  Give the witch two more things to say when she is in\n    an `angry` or
        `normal` mood.\\\r\n-   Give the wizard his own set of fortunes.\\\r\n-   \\*\n
        \   Make each actor change mood randomly.\\\r\n    \\\r\n    Check the hints
        if you need help\n    with these challenges!"
      courseA_artist_loops10: "## Time to head back to land.\n\nHelp me put down stones
        so I don't fall in!\\\r\n\\\r\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)"
      courseA_artist_loops10_2018: "## Time to head back to land.\n\nHelp me put down
        stones so I don't fall in!\\\r\n\\\r\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)"
      courseA_artist_loops10_2019: "## Time to head back to land.\n\nHelp me put down
        stones so I don't fall in!\\\r\n\\\r\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)"
      courseA_artist_loops11: "## Help me build steps to watch\n\nthe ship sail away.\\\r\n\\\r\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops11_2018: "## Help me build steps to watch\n\nthe ship sail
        away.\\\r\n\\\r\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops11_2019: "## Help me build steps to watch\n\nthe ship sail
        away.\\\r\n\\\r\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops12: "The artist saw something funny\nin the distance.  Draw
        what you think he saw.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n### Ideas\\\r\n\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops12_2018: "The artist saw something funny\nin the distance.
        \ Draw what you think he saw.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n### Ideas\\\r\n\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops12_2019: "The artist saw something funny\nin the distance.
        \ Draw what you think he saw.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n### Ideas\\\r\n\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops2: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      courseA_artist_loops2_2018: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      courseA_artist_loops2_2019: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      courseA_artist_loops3: "Our artist is trying to draw a\nline five times, but
        can't get it right. Can you help?\\\r\n\\\r\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)"
      courseA_artist_loops3_2018: "Our artist is trying to draw a\nline five times,
        but can't get it right. Can you help?\\\r\n\\\r\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)"
      courseA_artist_loops3_2019: "Our artist is trying to draw a\nline five times,
        but can't get it right. Can you help?\\\r\n\\\r\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)"
      courseA_artist_loops4: "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> loop to draw this line\nfive times!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops4_2018: "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> loop to draw this line\nfive times!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops4_2019: "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> loop to draw this line\nfive times!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops5: "## Draw a line seven steps long.\n\nThis will become
        our horizon.\\\r\n\\\r\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops5_2018: "## Draw a line seven steps long.\n\nThis will become
        our horizon.\\\r\n\\\r\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops5_2019: "## Draw a line seven steps long.\n\nThis will become
        our horizon.\\\r\n\\\r\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops6: "## Let's put a nice hill in the\n\nback.\\\r\n\\\r\n![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)"
      courseA_artist_loops6_2018: "## Let's put a nice hill in the\n\nback.\\\r\n\\\r\n![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)"
      courseA_artist_loops6_2019: "## Let's put a nice hill in the\n\nback.\\\r\n\\\r\n![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)"
      courseA_artist_loops7: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops7_2018: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops7_2019: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops7_forVideo: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops8: "## We need a ladder up to the\n\nboat.\\\r\n\\\r\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)"
      courseA_artist_loops8_2018: "## We need a ladder up to the\n\nboat.\\\r\n\\\r\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)"
      courseA_artist_loops8_2019: "## We need a ladder up to the\n\nboat.\\\r\n\\\r\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)"
      courseA_artist_loops9: "## **Challenge:** The stairs down\n\nto the dock are
        broken.  Help me fix them.\\\r\n\\\r\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops9_2018: "## **Challenge:** The stairs down\n\nto the dock
        are broken.  Help me fix them.\\\r\n\\\r\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops9_2019: "## **Challenge:** The stairs down\n\nto the dock
        are broken.  Help me fix them.\\\r\n\\\r\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops_challenge1: "You can use a loop to\ndraw many lines in
        a row.\\\r\n\\\r\nCan you draw a house? Make it look just the\nway you like
        it!  Try looking for patterns that repeat!\\\r\n\\\r\nHere are some\nideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge1_2018: "You can use a loop to\ndraw many lines
        in a row.\\\r\n\\\r\nCan you draw a house? Make it look just the\nway you
        like it!  Try looking for patterns that repeat!\\\r\n\\\r\nHere are some\nideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge1_2019: "You can use a loop to\ndraw many lines
        in a row.\\\r\n\\\r\nCan you draw a house? Make it look just the\nway you
        like it!  Try looking for patterns that repeat!\\\r\n\\\r\nHere are some\nideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge2: "**Tweet!**\\\r\n\\\r\n_\"Can\nyou help me
        make two bird houses?\"_"
      courseA_collector_loops1: "**Free Play:** This is Laurel\nthe Adventurer! Move
        her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks into
        the workspace and try to figure out how to get treasure.  Get\nat least one
        item to pass this level."
      courseA_collector_loops12: "Eureka!  Get as much treasure\nas you can!  \\\r\n(You
        do not have to get it all.)"
      courseA_collector_loops12_2018: "Eureka!  Get as much treasure\nas you can!
        \ \\\r\n(You do not have to get it all.)"
      courseA_collector_loops12_2019: "Eureka!  Get as much treasure\nas you can!
        \ \\\r\n(You do not have to get it all.)"
      courseA_collector_loops1_2018: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseA_collector_loops1_2019: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseA_collector_loops2: "Get all three piles! Move\nLaurel to each piece of
        treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_loops2_2018: "Get all three piles! Move\nLaurel to each piece
        of treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_loops2_2019: "Get all three piles! Move\nLaurel to each piece
        of treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_preLoops1: "This is Laurel the Adventurer!\n\\\r\n\\\r\nPress
        \"Run\" to see her walk up to the treasure and grab it."
      courseA_collector_preLoops2: "Great!  Now you get to add\ncode yourself!  \\\r\n\\\r\nSnap
        a ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)\nblock
        to the bottom of the program and click \"Run\"!"
      courseA_collector_preLoops3: Pour ramasser le trésor, connecte deux blocs ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
        et un bloc ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
        en bas du programme et clique sur « Exécuter » !
      courseA_collector_preLoops7: "Get all three piles! Move\nLaurel to each piece
        of treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_maze_ramp3_2018: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseA_maze_ramp4_2018: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseA_maze_ramp5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseA_maze_seq10: "**Challenge:** Go around the TNT\nto get the bird to the
        pig!\\\r\n\\\r\n![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)"
      courseA_maze_seq11: "Time for a shorter puzzle!  Move\none way, then another
        to get the bird to the pig.\\\r\n\\\r\n![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq11_2018: "Time for a shorter puzzle!  Move\none way, then another
        to get the bird to the pig.\\\r\n\\\r\n![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq11_2019: "Time for a shorter puzzle!  Move\none way, then another
        to get the bird to the pig.\\\r\n\\\r\n![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq12: "Get that pig!\\\r\n\\\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq12_2018: "Get that pig!\\\r\n\\\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq12_2019: "Get that pig!\\\r\n\\\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq3: "_\"Fix the code to get me to the pig!\"_\\\r\n\\\r\n![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)"
      courseA_maze_seq3_2018: "_\"Fix the code to get me to the pig!\"_\\\r\n\\\r\n![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)"
      courseA_maze_seq4: "_\"Something is not quite right.\"_\n\\\r\n\\\r\nREMOVE
        a block to get the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq4_2018: "_\"Something is not quite right.\"_\n\\\r\n\\\r\nREMOVE
        a block to get the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq5: "Try this one yourself from the beginning.\\\r\n\\\r\n![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)"
      courseA_maze_seq6: "Move one way, then another to get\nthe bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)"
      courseA_maze_seq7: "Figure out what is missing and then\nadd blocks to get the
        bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)"
      courseA_maze_seq7_2018: "Figure out what is missing and then\nadd blocks to
        get the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)"
      courseA_maze_seq8: "Solve this level and get the bird\nto the pig!\\\r\n\\\r\n![expandable](https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)"
      courseA_maze_seq9: "**Challenge:** Debug this level by\nadding blocks to get
        the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)"
      courseA_maze_seq9_2018: "**Challenge:** Debug this level by\nadding blocks to
        get the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)"
      courseA_playLab_events3: "Help Jorge the Dog get moving\nby connecting the <xml><block
        type=\"studio_move\">\\\r\n    <title name=\"SPRITE\">1</title>\\\r\n    <title\nname=\"DIR\">8</title>\\\r\n
        \ </block></xml> block to the <xml><block type=\"studio_whenArrow\">\\\r\n
        \   <title\nname=\"VALUE\">left</title>\\\r\n  </block></xml> event block
        that is already\nin the workspace.\\\r\n\\\r\nGet Jorge to the flag to finish
        this level!"
      courseA_playLab_events3_2018: "Help Jorge the Dog get moving\nby connecting
        the <xml><block type=\"studio_move\">\\\r\n    <title name=\"SPRITE\">1</title>\\\r\n
        \   <title\nname=\"DIR\">8</title>\\\r\n  </block></xml> block to the <xml><block
        type=\"studio_whenArrow\">\\\r\n    <title\nname=\"VALUE\">left</title>\\\r\n
        \ </block></xml> event block that is already\nin the workspace.\\\r\n\\\r\nGet
        Jorge to the flag to finish this level!"
      courseA_playLab_events3_2019: "Help Jorge the Dog get moving\nby connecting
        the <xml><block type=\"studio_move\">\\\r\n    <title name=\"SPRITE\">1</title>\\\r\n
        \   <title\nname=\"DIR\">8</title>\\\r\n  </block></xml> block to the <xml><block
        type=\"studio_whenArrow\">\\\r\n    <title\nname=\"VALUE\">left</title>\\\r\n
        \ </block></xml> event block that is already\nin the workspace.\\\r\n\\\r\nGet
        Jorge to the flag to finish this level!"
      courseA_playlab_events_challenge1: "_\"Where are my friends\nhiding? In this
        game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challenge1_2018: "_\"Where are my friends\nhiding? In
        this game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challenge1_2019: "_\"Where are my friends\nhiding? In
        this game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challenge1a: "Where are my friends\nhiding? In this game,
        clicking on me will show my friend Olive the cat! Clicking\nOlive will make
        Robin appear! Can you write code to show the rest of my friends\ntoo?\\\r\n\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will\nhelp you do this
        project step-by-step!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challenge2: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challenge2_2018: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challenge2_2019: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseA_playlab_events_challengeClone: "Where are my friends\nhiding? In this
        game, clicking on me will show my friend Olive the cat! Clicking\nOlive will
        make Robin appear! Can you write code to show the rest of my friends\ntoo?\\\r\n\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will\nhelp you do this
        project step-by-step!\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19>\nPM.png>)"
      courseB_artist_loops10: "Use what you have learned to\ndraw a picture of what
        you think the artist saw when he got home.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n###
        \n\nIdeas\\\r\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseB_artist_loops10_2018: "Use what you have learned to\ndraw a picture of
        what you think the artist saw when he got home.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n###
        \n\nIdeas\\\r\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseB_artist_loops10_2019: "Use what you have learned to\ndraw a picture of
        what you think the artist saw when he got home.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n###
        \n\nIdeas\\\r\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseB_collector_loops1: "**Free Play:** This is Laurel\nthe Adventurer! Move
        her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks into
        the workspace and try to figure out how to get treasure.  Get\nat least one
        item to pass this level."
      courseB_collector_loops1_2018: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseB_collector_loops1_2019: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseB_collector_loops2: "Move Laurel to the treasure,\nthen use the<xml><block
        type=\"collector_collect\"/></xml>block to pick it\nup.\\\r\n\\\r\n\\\r\nGet
        all four piles to pass this level."
      courseB_collector_loops2_2018: "Move Laurel to the treasure,\nthen use the<xml><block
        type=\"collector_collect\"/></xml>block to pick it\nup.\\\r\n\\\r\n\\\r\nGet
        all four piles to pass this level."
      courseB_collector_loops2_2019: "Move Laurel to the treasure,\nthen use the<xml><block
        type=\"collector_collect\"/></xml>block to pick it\nup.\\\r\n\\\r\n\\\r\nGet
        all four piles to pass this level."
      courseB_playLab_events1: "This game is called \"Play Lab\".  \\\r\n\\\r\nSee\nif
        you can figure out what each block does."
      courseB_playLab_events1_2018: "This game is called \"Play Lab\".  \\\r\n\\\r\nSee\nif
        you can figure out what each block does."
      courseB_playLab_events1_2019: "This game is called \"Play Lab\".  \\\r\n\\\r\nSee\nif
        you can figure out what each block does."
      courseB_playlab_events_challenge1: "It's time for the\nGreat Animal Race! Make
        the animals move down when you press `▼`. \\\r\n\\\r\nWho\nwill run the fastest?\\\r"
      courseB_playlab_events_challenge1_2018: "It's time for the\nGreat Animal Race!
        Make the animals move down when you press `▼`. \\\r\n\\\r\nWho\nwill run the
        fastest?\\\r"
      courseB_playlab_events_challenge1_2019: "It's time for the\nGreat Animal Race!
        Make the animals move down when you press `▼`. \\\r\n\\\r\nWho\nwill run the
        fastest?\\\r"
      courseB_playlab_events_challenge2: "Let's make the animals\ndisappear when you
        click on them! Try playing with the dog now, then help\nthe other animals
        join in the fun.\\\r\nYou can also add sounds and score points\nto create
        a game of Animal Tag!\\\r\n\\\r\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)"
      courseB_playlab_events_challenge2_2018: "Let's make the animals\ndisappear when
        you click on them! Try playing with the dog now, then help\nthe other animals
        join in the fun.\\\r\nYou can also add sounds and score points\nto create
        a game of Animal Tag!\\\r\n\\\r\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)"
      courseB_playlab_events_challenge2_2019: "Let's make the animals\ndisappear when
        you click on them! Try playing with the dog now, then help\nthe other animals
        join in the fun.\\\r\nYou can also add sounds and score points\nto create
        a game of Animal Tag!\\\r\n\\\r\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)"
      courseB_starWars_prog1: "[Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go\nget
        the scrap metal, BB-8\"_\\\r\n\\\r\nWatch out for walls and crates. Scrap\nmetal
        looks like this: [picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseB_starWars_prog1_2018: "[Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go\nget
        the scrap metal, BB-8\"_\\\r\n\\\r\nWatch out for walls and crates. Scrap\nmetal
        looks like this: [picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseB_starWars_prog1_2019: "[Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go\nget
        the scrap metal, BB-8\"_\\\r\n\\\r\nWatch out for walls and crates. Scrap\nmetal
        looks like this: [picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseB_starWars_prog8: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge**: Gather all the scrap metal."
      courseB_starWars_prog8_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge**: Gather all the scrap metal."
      courseB_starWars_prog8_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge**: Gather all the scrap metal."
      courseC_PlayLab_events_challenge1: "Use a new block to\nmake Waddles automatically
        move back to the start when he runs into the Dinosaur\nand when he scores
        a point. This will make your game more challenging and\nfun!\\\r\n\\\r\nPlay
        the game and move Waddles with the arrows until you score\nenough points.
        Waddles must be moved to the `middle left` position of the\nscreen to complete
        this challenge."
      courseC_PlayLab_events_challenge1_2018: "Use a new block to\nmake Waddles automatically
        move back to the start when he runs into the Dinosaur\nand when he scores
        a point. This will make your game more challenging and\nfun!\\\r\n\\\r\nPlay
        the game and move Waddles with the arrows until you score\nenough points.
        Waddles must be moved to the `middle left` position of the\nscreen to complete
        this challenge."
      courseC_PlayLab_events_challenge1_2019: "Use a new block to\nmake Waddles automatically
        move back to the start when he runs into the Dinosaur\nand when he scores
        a point. This will make your game more challenging and\nfun!\\\r\n\\\r\nPlay
        the game and move Waddles with the arrows until you score\nenough points.
        Waddles must be moved to the `middle left` position of the\nscreen to complete
        this challenge."
      courseC_artist_loop1: "Fantastic!  \\\r\n\\\r\nLet's add\nsome style by changing
        the brush using the `set pattern` block before our\nloop starts."
      courseC_artist_loop1_2018: "Fantastic!  \\\r\n\\\r\nLet's add\nsome style by
        changing the brush using the `set pattern` block before our\nloop starts."
      courseC_artist_loop1_2019: "Fantastic!  \\\r\n\\\r\nLet's add\nsome style by
        changing the brush using the `set pattern` block before our\nloop starts."
      courseC_artist_loops1a: "**Free Play:** Let's build something\nbigger, one step
        at a time!  \\\r\n\\\r\nUse the `jump to 200 over 200 down` to\nget the artist
        to the center of the play area, then use the `draw a sticker`\nblock to make
        a bird appear.  \\\r\n\\\r\n\\---\\\r\n\\\r\nPress \"Finish\" when you\nare
        happy with what you've made."
      courseC_artist_loops2: "Now that the zombie knows his\nway, help him dig **25
        pixel long** holes along the path to plant more flowers!\\\r\n\\-\nEach hole
        should be 25 pixels long\\\r\n\n-   Each hole has 25 pixels of space before\n
        \   the next hole"
      courseC_artist_loops3a: "So much fun!  \\\r\n\\\r\nNow, add\na bat sticker right
        after the bird to make an image like the one below.\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2018: "So much fun!  \\\r\n\\\r\nNow, add\na bat sticker
        right after the bird to make an image like the one below.\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2019: "So much fun!  \\\r\n\\\r\nNow, add\na bat sticker
        right after the bird to make an image like the one below.\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops4a: "Edit your code so that you jump\nforward by 75 pixels
        between stamping the bird and the bat. In this puzzle,\nmake sure you have
        `jump to 200 over 200 down` inside of your loop, so you\nstay in the center!\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)"
      courseC_artist_loops5: "Great!  Now it's time to make\na fence inside to keep
        the animals out.   \\\r\nMake any kind of fence that\nyou want!\\\r\n\\\r"
      courseC_artist_loops5a: "What happens when you replace\none or both of the stickers
        with a different creature?\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)"
      courseC_artist_loops5a_2018: "What happens when you replace\none or both of
        the stickers with a different creature?\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)"
      courseC_artist_loops5a_2019: "What happens when you replace\none or both of
        the stickers with a different creature?\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)"
      courseC_artist_loops5b: "What happens when you `move forward`\nthen `move backward`
        by 100, 200, or 400 pixels somewhere inside the loop?  \\\r\n\\-\nTry using
        the `set pattern` block before you start your loop to make a work\nof art!\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2018: "What happens when you `move forward`\nthen `move
        backward` by 100, 200, or 400 pixels somewhere inside the loop?  \\\r\n\\-\nTry
        using the `set pattern` block before you start your loop to make a work\nof
        art!\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2019: "What happens when you `move forward`\nthen `move
        backward` by 100, 200, or 400 pixels somewhere inside the loop?  \\\r\n\\-\nTry
        using the `set pattern` block before you start your loop to make a work\nof
        art!\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops6: "What should the zombie put inside\nof the garden?  \\\r\n\\\r\nDraw
        anything you'd like inside of the fence.  Would\nyou like some flowers or
        a few bugs? \\\r\n_(See hints for more suggestions.)_\\\r\n\\\r\n\\\r"
      courseC_artist_loops6a: "Add a third sticker anywhere\nin the loop that you
        want! What does it look like now?\\\r\n\n-   Change the pattern\n    on your
        brush for more variety!\\\r\n    \\\r\n    \\_\\_\\_\\\r\n    \\\r\n    ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)"
      courseC_artist_loops6a_2018: "Add a third sticker anywhere\nin the loop that
        you want! What does it look like now?\\\r\n\n-   Change the pattern\n    on
        your brush for more variety!\\\r\n    \\\r\n    \\_\\_\\_\\\r\n    \\\r\n
        \   ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)"
      courseC_artist_loops6a_2019: "Add a third sticker anywhere\nin the loop that
        you want! What does it look like now?\\\r\n\n-   Change the pattern\n    on
        your brush for more variety!\\\r\n    \\\r\n    \\_\\_\\_\\\r\n    \\\r\n
        \   ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)"
      courseC_artist_loops7a: "Try changing the `repeat` loop\nto run a different
        number of times.  How far do you have to turn to go around\nin a full circle?\\\r\n\n-
        \  Try changing how many times you spin\\\r\n    -   Try a 60\n        degree
        turn for 6 times around\\\r\n    -   Try a 20 degree turn for 18 times around\\\r\n
        \       \\_\\_\\_\\\r\n        This\n        image uses a pirate, a ninja,
        and a giraffe. They loop 18 times with a 20\n        degree turn.\\\r\n        \\\r\n
        \       ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)"
      courseC_artist_loops7a_2018: "Try changing the `repeat` loop\nto run a different
        number of times.  How far do you have to turn to go around\nin a full circle?\\\r\n\n-
        \  Try changing how many times you spin\\\r\n    -   Try a 60\n        degree
        turn for 6 times around\\\r\n    -   Try a 20 degree turn for 18 times around\\\r\n
        \       \\_\\_\\_\\\r\n        This\n        image uses a pirate, a ninja,
        and a giraffe. They loop 18 times with a 20\n        degree turn.\\\r\n        \\\r\n
        \       ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)"
      courseC_artist_loops7a_2019: "Try changing the `repeat` loop\nto run a different
        number of times.  How far do you have to turn to go around\nin a full circle?\\\r\n\n-
        \  Try changing how many times you spin\\\r\n    -   Try a 60\n        degree
        turn for 6 times around\\\r\n    -   Try a 20 degree turn for 18 times around\\\r\n
        \       \\_\\_\\_\\\r\n        This\n        image uses a pirate, a ninja,
        and a giraffe. They loop 18 times with a 20\n        degree turn.\\\r\n        \\\r\n
        \       ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)"
      courseC_artist_loops8a: "Now make something on your own.  What\nhappens when
        you make two separate circles of different stickers?\\\r\n\\_\\_\\_\\\r\nNeed\nan
        idea? Try making a design like this one.\\\r\n\\\r\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)"
      courseC_artist_loops8a_2018: "Now make something on your own.  What\nhappens
        when you make two separate circles of different stickers?\\\r\n\\_\\_\\_\\\r\nNeed\nan
        idea? Try making a design like this one.\\\r\n\\\r\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)"
      courseC_artist_loops8a_2019: "Now make something on your own.  What\nhappens
        when you make two separate circles of different stickers?\\\r\n\\_\\_\\_\\\r\nNeed\nan
        idea? Try making a design like this one.\\\r\n\\\r\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)"
      courseC_artist_loopsPre1a: "Now, put this code into  a\n`repeat` block and loop
        it **6** times.\\\r\n\n-   Notice that we have added a 60\n    degree turn
        at the end of each loop to get a full rotation."
      courseC_artist_loopsPre1a_2018: "Now, put this code into  a\n`repeat` block
        and loop it **6** times.\\\r\n\n-   Notice that we have added a 60\n    degree
        turn at the end of each loop to get a full rotation."
      courseC_artist_loopsPre1a_2019: "Now, put this code into  a\n`repeat` block
        and loop it **6** times.\\\r\n\n-   Notice that we have added a 60\n    degree
        turn at the end of each loop to get a full rotation."
      courseC_collector_loops_challenge2: "_\"Let's hunt for\ntreasure - using loops!\"_\\\r\n\\\r\nHelp
        the collector by debugging this code.\nGet all of the treasure!"
      courseC_collector_loops_challenge2_2018: "_\"Let's hunt for\ntreasure - using
        loops!\"_\\\r\n\\\r\nHelp the collector by debugging this code.\nGet all of
        the treasure!"
      courseC_collector_loops_challenge2_2019: "_\"Let's hunt for\ntreasure - using
        loops!\"_\\\r\n\\\r\nHelp the collector by debugging this code.\nGet all of
        the treasure!"
      courseC_flappy_events1: "Attach the `flap a normal amount`\nblock to the `when
        click` event, then press \"Run\".   \\\r\n\\\r\n\\---\\\r\n\\\r\nClick\nor
        tap on the play space to move Flappy to the target."
      courseC_flappy_events10: "Create your own Flappy game!\n\\\r\n\\\r\nYou can
        change the visuals and the rules...even the gravity! \\\r\nWhen\nyou're done,
        click \"Finish\" to share with friends on their phones."
      courseC_flappy_events10_2018: "Create your own Flappy game!\n\\\r\n\\\r\nYou
        can change the visuals and the rules...even the gravity! \\\r\nWhen\nyou're
        done, click \"Finish\" to share with friends on their phones."
      courseC_flappy_events10_2019: "Create your own Flappy game!\n\\\r\n\\\r\nYou
        can change the visuals and the rules...even the gravity! \\\r\nWhen\nyou're
        done, click \"Finish\" to share with friends on their phones."
      courseC_flappy_events1_2018: "Attach the `flap a normal amount`\nblock to the
        `when click` event, then press \"Run\".   \\\r\n\\\r\n\\---\\\r\n\\\r\nClick\nor
        tap on the play space to move Flappy to the target."
      courseC_flappy_events1_2019: "Attach the `flap a normal amount`\nblock to the
        `when click` event, then press \"Run\".   \\\r\n\\\r\n\\---\\\r\n\\\r\nClick\nor
        tap on the play space to move Flappy to the target."
      courseC_flappy_events2: "The `when run` event allows you\nto run code as soon
        as your game starts.  \\\r\n\\\r\nTry adding a block that\nsets the level
        speed when the \"Run\" button is pressed. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and flap to the target to continue."
      courseC_flappy_events2_2018: "The `when run` event allows you\nto run code as
        soon as your game starts.  \\\r\n\\\r\nTry adding a block that\nsets the level
        speed when the \"Run\" button is pressed. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and flap to the target to continue."
      courseC_flappy_events2_2019: "The `when run` event allows you\nto run code as
        soon as your game starts.  \\\r\n\\\r\nTry adding a block that\nsets the level
        speed when the \"Run\" button is pressed. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and flap to the target to continue."
      courseC_flappy_events3: "Now we've added the ground.\n\\\r\n\\\r\nAttach the
        `end game` block to the `when hit the ground` event. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and crash the bird into the ground to continue."
      courseC_flappy_events3_2018: "Now we've added the ground.\n\\\r\n\\\r\nAttach
        the `end game` block to the `when hit the ground` event. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and crash the bird into the ground to continue."
      courseC_flappy_events3_2019: "Now we've added the ground.\n\\\r\n\\\r\nAttach
        the `end game` block to the `when hit the ground` event. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and crash the bird into the ground to continue."
      courseC_flappy_events4: "Flappy will fly right through\nobstacles unless you
        write code to make him crash. \\\r\n\\\r\nAttach a block\nto the `when hit
        an obstacle` event so that the game ends when Flappy crashes\ninto the first
        set of pipes."
      courseC_flappy_events4_2018: "Flappy will fly right through\nobstacles unless
        you write code to make him crash. \\\r\n\\\r\nAttach a block\nto the `when
        hit an obstacle` event so that the game ends when Flappy crashes\ninto the
        first set of pipes."
      courseC_flappy_events4_2019: "Flappy will fly right through\nobstacles unless
        you write code to make him crash. \\\r\n\\\r\nAttach a block\nto the `when
        hit an obstacle` event so that the game ends when Flappy crashes\ninto the
        first set of pipes."
      courseC_flappy_events5: "We've added a scoreboard to\ncount points when Flappy
        passes obstacles.  \\\r\n\\\r\nAdd a block to the `when\npass an obstacle`
        event that scores a point, then press \"Run\" to fly Flappy\nthrough the first
        set of pipes."
      courseC_flappy_events5_2018: "We've added a scoreboard to\ncount points when
        Flappy passes obstacles.  \\\r\n\\\r\nAdd a block to the `when\npass an obstacle`
        event that scores a point, then press \"Run\" to fly Flappy\nthrough the first
        set of pipes."
      courseC_flappy_events5_2019: "We've added a scoreboard to\ncount points when
        Flappy passes obstacles.  \\\r\n\\\r\nAdd a block to the `when\npass an obstacle`
        event that scores a point, then press \"Run\" to fly Flappy\nthrough the first
        set of pipes."
      courseC_flappy_events6: "Click the down arrow inside of\nthe `flap a normal
        amount` block to pick a different flapping power.  \\\r\n\\\r\nSee\nif you
        can still score a point after making Flappy flap either a smaller or\nlarger
        amount each time you click."
      courseC_flappy_events6_2018: "Click the down arrow inside of\nthe `flap a normal
        amount` block to pick a different flapping power.  \\\r\n\\\r\nSee\nif you
        can still score a point after making Flappy flap either a smaller or\nlarger
        amount each time you click."
      courseC_flappy_events6_2019: "Click the down arrow inside of\nthe `flap a normal
        amount` block to pick a different flapping power.  \\\r\n\\\r\nSee\nif you
        can still score a point after making Flappy flap either a smaller or\nlarger
        amount each time you click."
      courseC_flappy_events7: Ensuite, essaie de changer l'arrière-plan en attachant
        un autre bloc à l'évènement `quand l'exécution commence`.
      courseC_flappy_events7_2018: Ensuite, essaie de changer l'arrière-plan en attachant
        un autre bloc à l'évènement `quand l'exécution commence`.
      courseC_flappy_events7_2019: Ensuite, essaie de changer l'arrière-plan en attachant
        un autre bloc à l'évènement `quand l'exécution commence`.
      courseC_flappy_events8: "You can set the background under\nany event, not just
        when the game starts. \\\r\n\\\r\nTry setting a **random**\nscene when other
        events happen...for example, when passing an obstacle."
      courseC_flappy_events8_2018: "You can set the background under\nany event, not
        just when the game starts. \\\r\n\\\r\nTry setting a **random**\nscene when
        other events happen...for example, when passing an obstacle."
      courseC_flappy_events8_2019: "You can set the background under\nany event, not
        just when the game starts. \\\r\n\\\r\nTry setting a **random**\nscene when
        other events happen...for example, when passing an obstacle."
      courseC_flappy_events9: Pour varier un peu, au lieu de terminer le jeu lorsque
        Flappy rencontre un obstacle, essaie de remettre le score à 0.
      courseC_flappy_events9_2018: Pour varier un peu, au lieu de terminer le jeu
        lorsque Flappy rencontre un obstacle, essaie de remettre le score à 0.
      courseC_flappy_events9_2019: Pour varier un peu, au lieu de terminer le jeu
        lorsque Flappy rencontre un obstacle, essaie de remettre le score à 0.
      courseC_maze_loops2_predict1: "Suddenly, a magical block\nappears!  \\\r\nWith
        the `repeat` block, you can loop code over and over.\\\r\n\\\r\nCan\nyou get
        the bird to the pig by creating a loop that uses only one `move forward`\nblock
        inside of a `repeat`?"
      courseC_maze_programming4: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming4_2018: "_\"Trace the path and lead me to\nthe silly
        pig.\"_ \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming4_2019: "_\"Trace the path and lead me to\nthe silly
        pig.\"_ \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_maze_programming5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_maze_programming5_2019: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_playLab_embedded: "Here's a game for you to play!\nTo win, get the penguin
        to run into the octopus. Use your arrow keys to move\nthe penguin around.\\\r\n\\\r\nOnce
        you are done, you will learn how to make this\ngame!"
      courseC_starWars_loops1: "[](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        get the scrap metal, BB-8\"_ \\\r\n\\\r\nUse five of the same blocks to\nget
        the scrap metal. Scrap metal glows like this: [](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops10: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\\\r\n\n_\"Go
        BB-8!\"_\\\r\n\\\r\nYou are doing great! Keep it up!"
      courseC_starWars_loops10_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\\\r\n\n_\"Go
        BB-8!\"_\\\r\n\\\r\nYou are doing great! Keep it up!"
      courseC_starWars_loops10_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\\\r\n\n_\"Go
        BB-8!\"_\\\r\n\\\r\nYou are doing great! Keep it up!"
      courseC_starWars_loops11: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going, BB-8!\"_\\\r\n\\\r\nYou are almost there! This time, choose any\npath
        you like!"
      courseC_starWars_loops11_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going, BB-8!\"_\\\r\n\\\r\nYou are almost there! This time, choose any\npath
        you like!"
      courseC_starWars_loops11_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going, BB-8!\"_\\\r\n\\\r\nYou are almost there! This time, choose any\npath
        you like!"
      courseC_starWars_loops1_2018: "[](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        get the scrap metal, BB-8\"_ \\\r\n\\\r\nUse five of the same blocks to\nget
        the scrap metal. Scrap metal glows like this: [](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops1_2019: "[](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        get the scrap metal, BB-8\"_ \\\r\n\\\r\nUse five of the same blocks to\nget
        the scrap metal. Scrap metal glows like this: [](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops2: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        BB-8!\"_\\\r\n\\\r\nTo get all the scrap metal, try creating a loop that\nuses
        only one block inside of a `repeat` block."
      courseC_starWars_loops2_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        BB-8!\"_\\\r\n\\\r\nTo get all the scrap metal, try creating a loop that\nuses
        only one block inside of a `repeat` block."
      courseC_starWars_loops2_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        BB-8!\"_\\\r\n\\\r\nTo get all the scrap metal, try creating a loop that\nuses
        only one block inside of a `repeat` block."
      courseC_starWars_loops4: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\nIn this puzzle, two `repeat` loops will help\nyou
        get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops4_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\nIn this puzzle, two `repeat` loops will help\nyou
        get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops4_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\nIn this puzzle, two `repeat` loops will help\nyou
        get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops6: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Can
        you get it all?\"_\\\r\n\\\r\nLoops even work with more than one block\ninside!
        \ Can you loop this sequence?"
      courseC_starWars_loops6_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Can
        you get it all?\"_\\\r\n\\\r\nLoops even work with more than one block\ninside!
        \ Can you loop this sequence?"
      courseC_starWars_loops6_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Can
        you get it all?\"_\\\r\n\\\r\nLoops even work with more than one block\ninside!
        \ Can you loop this sequence?"
      courseC_starWars_loops7: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"You
        can do it!\"_\\\r\n\\\r\nCan you try to get all the scrap metal using just\none
        loop? Try programming it all out then finding the repeating code to put\nin
        a loop."
      courseC_starWars_loops7_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"You
        can do it!\"_\\\r\n\\\r\nCan you try to get all the scrap metal using just\none
        loop? Try programming it all out then finding the repeating code to put\nin
        a loop."
      courseC_starWars_loops7_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"You
        can do it!\"_\\\r\n\\\r\nCan you try to get all the scrap metal using just\none
        loop? Try programming it all out then finding the repeating code to put\nin
        a loop."
      courseC_starWars_loops8: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge:** Combine ideas from the last\nfew
        puzzles to complete this level."
      courseC_starWars_loops8_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge:** Combine ideas from the last\nfew
        puzzles to complete this level."
      courseC_starWars_loops8_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge:** Combine ideas from the last\nfew
        puzzles to complete this level."
      courseC_starWars_loops9: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going!\"_\\\r\n\\\r\nUse what you have learned to pick up all of the scrap\nmetal!"
      courseC_starWars_loops9_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going!\"_\\\r\n\\\r\nUse what you have learned to pick up all of the scrap\nmetal!"
      courseC_starWars_loops9_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going!\"_\\\r\n\\\r\nUse what you have learned to pick up all of the scrap\nmetal!"
      courseD_Frozen_nested1: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\r\n\r\nYou\ncan
        try making a polygon, like one of these:  \r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \r\n\r\n  \r\n  \r\nOr\neven an abstract shape, like one of these:  \r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\r"
      courseD_Frozen_nested2: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\r\n    \r\n
        \   Your row might end up straight like with these:\r\n    \r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\r\n
        \   <br/>  <br/>\r\n    \r\n    \r\n    Or,\n    your shapes might move around
        like one of these: \r\n    \r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_Frozen_nested3: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\r\nTake a look at these examples\nwith
        polygons:  \r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\r\n\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_Frozen_nested4: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_Frozen_nested5: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_Frozen_nested6: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_Frozen_nested7: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Here\n    is an example
        of stairs that use a 76 degree turn:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_Frozen_nested8: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_Frozen_nested9: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_6_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_6_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_7_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Here\n    is an example
        of stairs that use a 76 degree turn:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_8_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_9_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_binary_challenge2: "There are 256 bits\nrepresented on this grid
        - that means it's easy for a small change to cause\nbig problems. Are you
        persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_binary_challenge2_2018: "There are 256 bits\nrepresented on this
        grid - that means it's easy for a small change to cause\nbig problems. Are
        you persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_binary_challenge2_2019: "There are 256 bits\nrepresented on this
        grid - that means it's easy for a small change to cause\nbig problems. Are
        you persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_binary_challenge3: "There are 256 bits\nrepresented on this grid
        - that means it's easy for a small change to cause\nbig problems. Are you
        persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_nestedLoops9_predict1: "**Challenge:**\nCan you figure out how
        to make a picture like this?\\\r\n\\\r\n\n-   Both shapes have\n    50 pixel
        sides"
      courseD_artist_nestedLoops9_predict1_2018: "**Challenge:**\nCan you figure out
        how to make a picture like this?\\\r\n\\\r\n\n-   Both shapes have\n    50
        pixel sides"
      courseD_artist_nestedLoops9_predict1_2019: "**Challenge:**\nCan you figure out
        how to make a picture like this?\\\r\n\\\r\n\n-   Both shapes have\n    50
        pixel sides"
      courseD_artist_nestedLoops_challenge1: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      courseD_artist_nestedLoops_challenge1_2018: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      courseD_artist_nestedLoops_challenge1_2019: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      courseD_artist_nestedLoops_challenge2: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make an octagon.\\\r\n-
        \  The second inner loop should make a hexagon.\\\r\n-   The\n    third inner
        loop should make a square."
      courseD_artist_nestedLoops_challenge2_2018: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make
        an octagon.\\\r\n-   The second inner loop should make a hexagon.\\\r\n-   The\n
        \   third inner loop should make a square."
      courseD_artist_nestedLoops_challenge2_2019: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make
        an octagon.\\\r\n-   The second inner loop should make a hexagon.\\\r\n-   The\n
        \   third inner loop should make a square."
      courseD_artist_project1: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\r\n\r\nYou\ncan
        try making a polygon, like one of these:  \r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \r\n\r\n  \r\n  \r\nOr\neven an abstract shape, like one of these:  \r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\r"
      courseD_artist_project1_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\r\n\r\nYou\ncan
        try making a polygon, like one of these:  \r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \r\n\r\n  \r\n  \r\nOr\neven an abstract shape, like one of these:  \r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\r"
      courseD_artist_project1_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\r\n\r\nYou\ncan
        try making a polygon, like one of these:  \r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \r\n\r\n  \r\n  \r\nOr\neven an abstract shape, like one of these:  \r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\r"
      courseD_artist_project1a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_project1a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_project1a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_project2: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\r\n    \r\n
        \   Your row might end up straight like with these:\r\n    \r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\r\n
        \   <br/>  <br/>\r\n    \r\n    \r\n    Or,\n    your shapes might move around
        like one of these: \r\n    \r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\r\n    \r\n
        \   Your row might end up straight like with these:\r\n    \r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\r\n
        \   <br/>  <br/>\r\n    \r\n    \r\n    Or,\n    your shapes might move around
        like one of these: \r\n    \r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\r\n    \r\n
        \   Your row might end up straight like with these:\r\n    \r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\r\n
        \   <br/>  <br/>\r\n    \r\n    \r\n    Or,\n    your shapes might move around
        like one of these: \r\n    \r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Here\n    is an example
        of stairs that use a 76 degree turn:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Here\n    is an example
        of stairs that use a 76 degree turn:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Here\n    is an example
        of stairs that use a 76 degree turn:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project3: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\r\nTake a look at these examples\nwith
        polygons:  \r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\r\n\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\r\nTake a look at these examples\nwith
        polygons:  \r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\r\n\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\r\nTake a look at these examples\nwith
        polygons:  \r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\r\n\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project3a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project3a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project4: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_artist_project4_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_artist_project4_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_artist_project4a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_project4a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_project4a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_project5: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_artist_project5_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_artist_project5_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_artist_ramp11: "Great!  Now let's make a square\nusing Artist!  The
        blocks are a little different, but the idea is the same.\\\r\n\\_\\_\\_\\\r\nEach\nside
        of the square has a length of 200 pixels, and you will need to turn 90\ndegrees
        to make each angle."
      courseD_artist_ramp12: "Use what you've learned to draw\nthis triangle inside
        of a square.\\\r\n\\_\\_\\_\\\r\n\n##### The sides are each 200 pixels\n\nlong.
        You will need to turn 90 degrees to make the square and 120 degrees\nto make
        the triangle."
      courseD_bee_conditionals1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1_2018: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1_2019: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals7_predict2: "Sometimes a cloud\ncovers a flower, sometimes
        it covers a honeycomb! \\\r\n\\\r\nUse the `if/else`\nblock to collect nectar
        at flowers and make honey at honeycomb. Remember:\nthere will only ever bee
        _one_ honeycomb or _one_ flower behind each cloud."
      courseD_bee_conditionals7_predict2_2018: "Sometimes a cloud\ncovers a flower,
        sometimes it covers a honeycomb! \\\r\n\\\r\nUse the `if/else`\nblock to collect
        nectar at flowers and make honey at honeycomb. Remember:\nthere will only
        ever bee _one_ honeycomb or _one_ flower behind each cloud."
      courseD_bee_conditionals7_predict2_2019: "Sometimes a cloud\ncovers a flower,
        sometimes it covers a honeycomb! \\\r\n\\\r\nUse the `if/else`\nblock to collect
        nectar at flowers and make honey at honeycomb. Remember:\nthere will only
        ever bee _one_ honeycomb or _one_ flower behind each cloud."
      courseD_bee_nestedLoops5: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bee_nestedLoops8: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bee_nestedLoops8_2018: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bee_nestedLoops8_2019: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bounce_events1: Rendez-vous au drapeau! Attachez un bloc au bloc "Quand
        la flèche gauche" et appuyez sur "Exécuter" pour déplacer le joueur au drapeau.
      courseD_bounce_events10s: "There is now a hoop at the\ntop.  \\\r\n\\\r\nAttach
        the `score point` block to the `when ball in goal` event\nand the `score opponent
        point` block to the `when ball misses hand` event\nto make a game. \\\r\n\\\r\n\\---\\\r\n\\\r\nSee
        how many points you can score before\nyour opponent scores twice."
      courseD_bounce_events10s_2018: "There is now a hoop at the\ntop.  \\\r\n\\\r\nAttach
        the `score point` block to the `when ball in goal` event\nand the `score opponent
        point` block to the `when ball misses hand` event\nto make a game. \\\r\n\\\r\n\\---\\\r\n\\\r\nSee
        how many points you can score before\nyour opponent scores twice."
      courseD_bounce_events10s_2019: "There is now a hoop at the\ntop.  \\\r\n\\\r\nAttach
        the `score point` block to the `when ball in goal` event\nand the `score opponent
        point` block to the `when ball misses hand` event\nto make a game. \\\r\n\\\r\n\\---\\\r\n\\\r\nSee
        how many points you can score before\nyour opponent scores twice."
      courseD_bounce_events11s: "Now, you are in control of\nthe ball!  Attach the
        `throw new ball` block in all of the places where the\ngame needs a new ball.\\\r\n\\\r\n\\---\\\r\n\\\r\nSee
        how many points you can score\nbefore your opponent scores twice!"
      courseD_bounce_events11s_2018: "Now, you are in control of\nthe ball!  Attach
        the `throw new ball` block in all of the places where the\ngame needs a new
        ball.\\\r\n\\\r\n\\---\\\r\n\\\r\nSee how many points you can score\nbefore
        your opponent scores twice!"
      courseD_bounce_events11s_2019: "Now, you are in control of\nthe ball!  Attach
        the `throw new ball` block in all of the places where the\ngame needs a new
        ball.\\\r\n\\\r\n\\---\\\r\n\\\r\nSee how many points you can score\nbefore
        your opponent scores twice!"
      courseD_bounce_events1s: "Get the ball to the hoop!   \\\r\nAttach\na block
        to the `when left arrow` event and press \"Run\" to move the player\nto the
        net."
      courseD_bounce_events1s_2018: "Get the ball to the hoop!   \\\r\nAttach\na block
        to the `when left arrow` event and press \"Run\" to move the player\nto the
        net."
      courseD_bounce_events1s_2019: "Get the ball to the hoop!   \\\r\nAttach\na block
        to the `when left arrow` event and press \"Run\" to move the player\nto the
        net."
      courseD_bounce_events6s: "Now the basket is at the top.  \\\r\n\\\r\nAttach\ncode
        to make the ball bounce when it hits the wall so you can solve this puzzle."
      courseD_bounce_events6s_2018: "Now the basket is at the top.  \\\r\n\\\r\nAttach\ncode
        to make the ball bounce when it hits the wall so you can solve this puzzle."
      courseD_bounce_events6s_2019: "Now the basket is at the top.  \\\r\n\\\r\nAttach\ncode
        to make the ball bounce when it hits the wall so you can solve this puzzle."
      courseD_bounce_events7s: "Attach sound blocks to make\nthe net swish when you
        hit the basket and have the whistle blow when the ball\nmisses your hand.
        \ \\\r\n\\\r\n\\---\\\r\n\\\r\nBounce the ball until it hits the finish\ntarget."
      courseD_bounce_events7s_2018: "Attach sound blocks to make\nthe net swish when
        you hit the basket and have the whistle blow when the ball\nmisses your hand.
        \ \\\r\n\\\r\n\\---\\\r\n\\\r\nBounce the ball until it hits the finish\ntarget."
      courseD_bounce_events7s_2019: "Attach sound blocks to make\nthe net swish when
        you hit the basket and have the whistle blow when the ball\nmisses your hand.
        \ \\\r\n\\\r\n\\---\\\r\n\\\r\nBounce the ball until it hits the finish\ntarget."
      courseD_collector_debugging1: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging10_predict1: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging10_predict1_2018: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging1_2018: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging1a: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging1a_2018: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging1a_2019: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging2: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe error(s)
        to collect all of the treasure."
      courseD_collector_debugging2_2018: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging2a: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe error(s)
        to collect all of the treasure."
      courseD_collector_debugging2a_2018: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging2a_2019: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging3: "_\"Be persistent and you\nwill figure this out.\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging3_2018: "_\"Be persistent and you\nwill figure this
        out.\"_\\\r\n\\\r\nFix the error(s) to collect all of the treasure."
      courseD_collector_debugging3a: "_\"Be persistent and you\nwill figure this out.\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging3a_2018: "_\"Be persistent and you\nwill figure this
        out.\"_\\\r\n\\\r\nFix the error(s) to collect all of the treasure."
      courseD_collector_debugging3a_2019: "_\"Be persistent and you\nwill figure this
        out.\"_\\\r\n\\\r\nFix the error(s) to collect all of the treasure."
      courseD_collector_debugging4: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging4_2018: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging4a: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging4a_2018: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging4a_2019: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging5: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging5_2018: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging5a: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging5a_2018: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging5a_2019: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging8: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging8_2018: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging8a: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging8a_2018: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging8a_2019: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9_2018: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9a: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9a_2018: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9a_2019: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_nested_loops_challenge2: "_\"Let's\nhunt for treasure - using
        loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles of treasure
        using only the blocks in your toolbox. It is possible\nto collect all 4."
      courseD_collector_nested_loops_challenge2_2018: "_\"Let's\nhunt for treasure
        - using loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles
        of treasure using only the blocks in your toolbox. It is possible\nto collect
        all 4."
      courseD_collector_nested_loops_challenge2_2019: "_\"Let's\nhunt for treasure
        - using loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles
        of treasure using only the blocks in your toolbox. It is possible\nto collect
        all 4."
      courseD_collector_nested_loops_challenge2a: "_\"Let's\nhunt for treasure - using
        loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles of treasure
        using only the blocks in your toolbox. It is possible\nto collect all 4."
      courseD_collector_ramp8: "This puzzle is a lot like the\nlast one, but now it
        stars Laurel the Adventurer!\\\r\n\\_\\_\\_\\\r\n\\\r\nTake the same\npath
        as before, but this time, use a repeat loop to collect treasure when\nyou
        get to it.\\\r"
      courseD_farmer_condLoops3: "_\"Corn, lettuce, AND pumpkins!\nHelp me harvest
        them all.\"_\\\r\n\\\r\nEach plant will have either one piece\nof corn, one
        head of lettuce, or one pumpkin."
      courseD_farmer_condLoops3_2018: "_\"Corn, lettuce, AND pumpkins!\nHelp me harvest
        them all.\"_\\\r\n\\\r\nEach plant will have either one piece\nof corn, one
        head of lettuce, or one pumpkin."
      courseD_farmer_condLoops3_2019: "_\"Corn, lettuce, AND pumpkins!\nHelp me harvest
        them all.\"_\\\r\n\\\r\nEach plant will have either one piece\nof corn, one
        head of lettuce, or one pumpkin."
      courseD_farmer_condLoops4a: "_\"Gosh! Now the crops are\ngrowing in clusters!\"_
        \ \\\r\n\\\r\nHelp the farmer pick all of the lettuce in\neach cluster before
        moving on to the next bunch. Keep it up until you get\nto the pumpkin!"
      courseD_farmer_condLoops_challenge1: "The pumpkins mark\nthe place where you
        should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      courseD_farmer_condLoops_challenge1_2018: "The pumpkins mark\nthe place where
        you should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      courseD_farmer_condLoops_challenge1_2019: "The pumpkins mark\nthe place where
        you should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      courseD_farmer_condLoops_challenge2: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      courseD_farmer_condLoops_challenge2_2018: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      courseD_farmer_condLoops_challenge2_2019: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      courseD_farmer_conditionals4: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_2018: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_2019: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_predict1: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_predict1_2018: "_\"I don't know how\nmuch dirt is in this
        pile!\"_\\\r\n\\\r\nHelp the farmer remove this entire pile\nusing a `while`
        loop."
      courseD_farmer_while4_predict1_2019: "_\"I don't know how\nmuch dirt is in this
        pile!\"_\\\r\n\\\r\nHelp the farmer remove this entire pile\nusing a `while`
        loop."
      courseD_maze_nestedLoops4: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      courseD_maze_nestedLoops4_2018: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      courseD_maze_nestedLoops4_2019: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      courseD_maze_ramp3: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseD_maze_ramp3_2018: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseD_maze_ramp3_2019: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseD_maze_ramp4: "_\"Trace the path and lead me to\nthe silly pig.\"_ \\\r\n\\\r\nAvoid
        TNT or feathers will fly!"
      courseD_maze_ramp4_2018: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseD_maze_ramp4_2019: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseD_maze_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp5_2019: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp6: "_\"Keep calm and help me find the\nbad pig. Otherwise I
        might get angry!\"_\\\r\n\\\r\nWhen you have several of the\nsame block in
        a row, try using a `repeat` loop, instead.  This will do the\nsame thing with
        less code!"
      courseD_maze_ramp6a: "_\"Keep calm and help me find the\nbad pig. Otherwise
        I might get angry!\"_\\\r\n\\\r\nWhen you have several of the\nsame blocks
        in a row, try using a `repeat` loop, instead.  This will do the\nsame thing
        with less code!"
      courseD_maze_ramp7: "_\"It's time to get angry!\"_  \\\r\n\\\r\n\\\r\nUse\nwhat
        you've learned to get the bird to the pig!"
      courseD_maze_until_challenge: "No hints,\njust challenge. Get the zombie to
        the sunflower.\\\r\nMarkdown instructions"
      courseD_maze_until_challenge1-delete-this-copy: "No hints,\njust challenge.
        Get the zombie to the sunflower.\\\r\nMarkdown instructions"
      courseD_maze_until_challenge2: "No hints,\njust challenge. Get the zombie to
        the sunflower.\\\r\nMarkdown instructions"
      courseD_pixelation: "# Make your own image of any size\\\r\n\n\\\r\n![](https://images.code.org/01c15fed4f1a2c6c3af531edc35e736e-image-1439596066108.png)\\\r\n![](https://images.code.org/24efcaa184d1fc852f37c32911b3b87c-image-1439596070178.png)\\\r\n![](https://images.code.org/c9a5d0fd5ba445b7f6b5744e08b50e49-image-1439596071878.png)\\\r\n![](https://images.code.org/f14e1b8dd722b0ca5bc54fa96b34f2eb-image-1439596074236.png)\\\r\n![](https://images.code.org/fe938c0c16453b9d461b4023098079df-image-1439596075744.png)\\\r\n![](https://images.code.org/02c88a7da51289b2f2d1f64bd8c97b28-image-1439596077514.png)\\\r\n![](https://images.code.org/309e3157dcfd91956181007f483f8e58-image-1439596079084.png)\\\r\n\\\r\n\\\r\n**Directions:**\\\r\n\\\r\n\\*\nEncode
        an image of anything you like using `binary`. Type 0s and 1s below\nto create
        an image.\\\r\n\n-   You might want to do some planning and sketching\n    with
        graph paper first.\\\r\n-   Get creative! What kind of drawing can you create?"
      courseD_playLab_cond3a: "It's time to use what we've\nlearned about conditionals
        to make this game amazing. \\\r\n\\\r\nAdd code so\nthat when Pegleg gets
        to the dragon, he gets two points _if_ the dragon is\nhappy. Otherwise, he
        should get only one point added to his score."
      courseD_playLab_cond3a_2018: "It's time to use what we've\nlearned about conditionals
        to make this game amazing. \\\r\n\\\r\nAdd code so\nthat when Pegleg gets
        to the dragon, he gets two points _if_ the dragon is\nhappy. Otherwise, he
        should get only one point added to his score."
      courseD_playLab_cond3a_2019: "It's time to use what we've\nlearned about conditionals
        to make this game amazing. \\\r\n\\\r\nAdd code so\nthat when Pegleg gets
        to the dragon, he gets two points _if_ the dragon is\nhappy. Otherwise, he
        should get only one point added to his score."
      courseD_playLab_cond6a: "We don't want the pirate to\nstay in the \"safe zone\"
        too long!  \\\r\n\\\r\nAdd code to the `if` statement\nbelow so that if the
        pirate is in the safe zone, the program will wait one\nsecond, then deduct
        a point as long as he stays beneath the octopus line."
      courseD_playLab_cond6a_2018: "We don't want the pirate to\nstay in the \"safe
        zone\" too long!  \\\r\n\\\r\nAdd code to the `if` statement\nbelow so that
        if the pirate is in the safe zone, the program will wait one\nsecond, then
        deduct a point as long as he stays beneath the octopus line."
      courseD_playLab_cond6a_2019: "We don't want the pirate to\nstay in the \"safe
        zone\" too long!  \\\r\n\\\r\nAdd code to the `if` statement\nbelow so that
        if the pirate is in the safe zone, the program will wait one\nsecond, then
        deduct a point as long as he stays beneath the octopus line."
      courseD_scrat_ramp3: "There is one extra block that is\ngoing to cause Scrat
        to crash.  \\\r\nThrow it away by disconnecting it from\nthe other blocks
        and dragging it back to the toolbox."
      courseD_scrat_ramp3_2018: "There is one extra block that is\ngoing to cause
        Scrat to crash.  \\\r\nThrow it away by disconnecting it from\nthe other blocks
        and dragging it back to the toolbox."
      courseE_artist_concept_challenge1: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time."
      courseE_artist_concept_challenge1_2018: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time."
      courseE_artist_concept_challenge1_2019: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time."
      courseE_artist_functions_challenge2: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      courseE_artist_functions_challenge2_2018: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      courseE_artist_functions_challenge2_2019: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      courseE_artist_ramp10: "Did you know you can put loops\ninside of other loops
        to make them more powerful?  That's called making a\n\"nested loop\".\\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nDrag
        the code for the last triangle into\na new loop to spin it around and make
        a snowflake!\\\r\n\\\r\n_(You will need\nto spin it 6 times, turning 60 degrees
        each time, to get this pattern.)_"
      courseE_artist_ramp11: "Great!  Now let's make a square\nusing Artist!  The
        blocks are a little different, but the idea is the same.\\\r\n\n<hr/>\\\r\nEach\nside
        of the square has a length of 200 pixels, and you will need to turn 90\ndegrees
        to make each angle."
      courseE_artist_ramp12: "Use what you've learned to draw\nthis triangle inside
        of a square.\\\r\n\n<hr/>\\\r\nThe sides are each 200 pixels\nlong. You will
        need to turn 90 degrees to make the square and 120 degrees\nto make the triangle."
      courseE_artist_ramp8: "Great!  Now let's use that `repeat`\nloop to make a square
        using Artist!  The blocks for artist are a little different\nthan other puzzles,
        but the idea is the same.\\\r\n\\_\\_\\_\\\r\n\n##### Each side of\n\nthe
        square has a length of 200 pixels, and you will need to turn 90 degrees\nto
        make each angle."
      courseE_artist_ramp8_2: "Great!  Now let's use that `repeat`\nloop to make a
        square using Artist!  The blocks for artist are a little different\nthan other
        puzzles, but the idea is the same.\\\r\n\\_\\_\\_\\\r\n\n##### Each side of\n\nthe
        square has a length of 200 pixels, and you will need to turn 90 degrees\nto
        make each angle."
      courseE_artist_ramp8_2018: "Great!  Now let's use that `repeat`\nloop to make
        a square using Artist!  The blocks for artist are a little different\nthan
        other puzzles, but the idea is the same.\\\r\n\\_\\_\\_\\\r\n\n##### Each
        side of\n\nthe square has a length of 200 pixels, and you will need to turn
        90 degrees\nto make each angle."
      courseE_artist_ramp8_2_2018: "Great!  Now let's use that `repeat`\nloop to make
        a square using Artist!  The blocks for artist are a little different\nthan
        other puzzles, but the idea is the same.\\\r\n\\_\\_\\_\\\r\n\n##### Each
        side of\n\nthe square has a length of 200 pixels, and you will need to turn
        90 degrees\nto make each angle."
      courseE_artist_ramp9: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp9_2: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp9_2018: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp9_2_2018: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_bee_concept2: "Help the bee make all of the honey.  \\\r\n\\\r\nYou\ncan
        only make honey at a honeycomb, but you can check any space to see if\nthere
        is a honeycomb."
      courseE_bee_concept2_2018: "Help the bee make all of the honey.  \\\r\n\\\r\nYou\ncan
        only make honey at a honeycomb, but you can check any space to see if\nthere
        is a honeycomb."
      courseE_bee_concept2_2019: "Help the bee make all of the honey.  \\\r\n\\\r\nYou\ncan
        only make honey at a honeycomb, but you can check any space to see if\nthere
        is a honeycomb."
      courseE_bee_functions2: "Functions are blocks of code that\nperform a task.
        \ \\\r\n\\\r\nUse the `get 2 nectar` function to collect the nectar\nfrom
        each flower."
      courseE_bee_functions2_2018: "Functions are blocks of code that\nperform a task.
        \ \\\r\n\\\r\nUse the `get 2 nectar` function to collect the nectar\nfrom
        each flower."
      courseE_bee_functions3: Les fonctions sont des blocs de code qui effectuent
        une tâche. Utilise la fonction « Obtenir 5 » pour obtenir 5 nectars à la fois.
        Veille également à utiliser une boucle pour obtenir un compte de bloc idéal.
      courseE_bee_functions3_2018: Les fonctions sont des blocs de code qui effectuent
        une tâche. Utilise la fonction « Obtenir 5 » pour obtenir 5 nectars à la fois.
        Veille également à utiliser une boucle pour obtenir un compte de bloc idéal.
      courseE_bee_functions9b: "_\"I can't BEE-lieve how full\nthis field is!\"_\\\r\n\\\r\nLook
        very carefully at this puzzle to see if you\ncan use what you learned to solve
        it."
      courseE_bee_ramp14: "The same technique works with nectar\nand honey!  \\\r\n\\\r\nLook
        at all of these clouds. Some of them will turn into\nhoney, and others into
        nectar.   \\\r\nHelp the bee follow the path and solve\nthis puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_bee_ramp14_2018: "The same technique works with nectar\nand honey!  \\\r\n\\\r\nLook
        at all of these clouds. Some of them will turn into\nhoney, and others into
        nectar.   \\\r\nHelp the bee follow the path and solve\nthis puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_collector_ramp10: "Take the same path as before,\nbut this time collect
        all of the treasure as you find it.\\\r"
      courseE_collector_ramp8: "This puzzle is a lot like the\nlast one, but now it
        stars Laurel the Adventurer!\\\r\n\n<hr/>\\\r\n\\\r\nTake the\nsame path as
        before, but this time, use a repeat loop to collect treasure\nwhen you get
        to it.\\\r"
      courseE_collector_ramp9: "Take the same path as before,\nbut this time collect
        all of the treasure as you find it.\\\r"
      courseE_farmer_concept4: Maintenant, passons à un niveau plus approfondi ! Nous
        avons imbriqué tout ce bloc de code dans une autre boucle, mais tu dois remettre
        l'artiste en place pour dessiner la ligne suivante. Lequel de ces blocs de
        code peux-tu placer à la fin de la boucle ultrapériphérique pour dessiner
        la grille entière ?
      courseE_farmer_functions2ba: "_\"I feel so functional!\"_\\\r\n\\\r\nDid\nyou
        notice that there was repeated code in the last puzzle?  It doesn't work\nto
        put it all inside of a loop, but we **can** use functions.  \\\r\n\\\r\nFor\nthis
        puzzle, we have moved the repeated code into a function called `corn\nand
        pumpkin`. Now, all you need to do is put the small `corn and pumpkin`\n**function
        call block** into the code where you need it.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        \n\nEach sprout will either grow _one_ corn or nothing."
      courseE_farmer_functions2ba_2018: "_\"I feel so functional!\"_\\\r\n\\\r\nDid\nyou
        notice that there was repeated code in the last puzzle?  It doesn't work\nto
        put it all inside of a loop, but we **can** use functions.  \\\r\n\\\r\nFor\nthis
        puzzle, we have moved the repeated code into a function called `corn\nand
        pumpkin`. Now, all you need to do is put the small `corn and pumpkin`\n**function
        call block** into the code where you need it.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        \n\nEach sprout will either grow _one_ corn or nothing."
      courseE_farmer_functions2ba_2019: "_\"I feel so functional!\"_\\\r\n\\\r\nDid\nyou
        notice that there was repeated code in the last puzzle?  It doesn't work\nto
        put it all inside of a loop, but we **can** use functions.  \\\r\n\\\r\nFor\nthis
        puzzle, we have moved the repeated code into a function called `corn\nand
        pumpkin`. Now, all you need to do is put the small `corn and pumpkin`\n**function
        call block** into the code where you need it.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        \n\nEach sprout will either grow _one_ corn or nothing."
      courseE_farmer_predict1: "Help the farmer walk the path\nto find all of the
        lettuce\\\r\n\\\r\nIn this puzzle, lettuce is growing at the\nend of every
        path.  If there is a path in front of her, the farmer can keep\nmoving forward.
        \ Otherwise, she needs to pick all of the lettuce, then turn\nto stay on the
        path. \\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_predict1_2018: "Help the farmer walk the path\nto find all of
        the lettuce\\\r\n\\\r\nIn this puzzle, lettuce is growing at the\nend of every
        path.  If there is a path in front of her, the farmer can keep\nmoving forward.
        \ Otherwise, she needs to pick all of the lettuce, then turn\nto stay on the
        path. \\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_ramp11a: "Oh my!  This pile is so big that\nit's hard to guess
        how much dirt is in it.  \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nWe've added\na new
        block to the toolbox called the `while there is a pile` block.  Use\nthis
        to remove dirt only while there is still some to scoop! "
      courseE_farmer_ramp11a_2018: "Oh my!  This pile is so big that\nit's hard to
        guess how much dirt is in it.  \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nWe've added\na
        new block to the toolbox called the `while there is a pile` block.  Use\nthis
        to remove dirt only while there is still some to scoop! "
      courseE_farmer_ramp11a_2019: "Oh my!  This pile is so big that\nit's hard to
        guess how much dirt is in it.  \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nWe've added\na
        new block to the toolbox called the `while there is a pile` block.  Use\nthis
        to remove dirt only while there is still some to scoop! "
      courseE_farmer_ramp12a: "Help the farmer walk the path\nto find all of the lettuce\\\r\n\\\r\nIn
        this puzzle, lettuce is growing at the\nend of every path.  If there is a
        path in front of her, the farmer can keep\nmoving forward.  Otherwise, she
        needs to pick all of the lettuce, then turn\nto stay on the path. "
      courseE_farmer_ramp12a_2018: "Help the farmer walk the path\nto find all of
        the lettuce\\\r\n\\\r\nIn this puzzle, lettuce is growing at the\nend of every
        path.  If there is a path in front of her, the farmer can keep\nmoving forward.
        \ Otherwise, she needs to pick all of the lettuce, then turn\nto stay on the
        path. \\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_ramp12c: "The lettuce is now only at the\nend of the path.  \\\r\nTravel
        down the path **until** you reach a head of lettuce,\nthen continue to pick
        it **while** there is still some left.  "
      courseE_farmer_ramp12c_2018: "The lettuce is now only at the\nend of the path.
        \ \\\r\nTravel down the path **until** you reach a head of lettuce,\nthen
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12c_2019: "The lettuce is now only at the\nend of the path.
        \ \\\r\nTravel down the path **until** you reach a head of lettuce,\nthen
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12d: "The lettuce is scattered all\nover the garden.  \\\r\nTravel
        down each path **until** you reach a head of\nlettuce, then continue to pick
        it **while** there is still some left.  "
      courseE_farmer_ramp12d_2018: "The lettuce is scattered all\nover the garden.
        \ \\\r\nTravel down each path **until** you reach a head of\nlettuce, then
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12d_2019: "The lettuce is scattered all\nover the garden.
        \ \\\r\nTravel down each path **until** you reach a head of\nlettuce, then
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12e: "The lettuce is scattered all\nover the garden.  \\\r\nTravel
        down each path **until** you reach a head of\nlettuce, then continue to pick
        it **while** there is still some left.  "
      courseE_farmer_ramp12e_2018: "The lettuce is scattered all\nover the garden.
        \ \\\r\nTravel down each path **until** you reach a head of\nlettuce, then
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12e_2019: "The lettuce is scattered all\nover the garden.
        \ \\\r\nTravel down each path **until** you reach a head of\nlettuce, then
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp13: "Goodness!  Look at all of these\nsprouts. Some of them
        will turn into corn, and others into lettuce.  \\\r\n\\\r\nTravel\nto the
        ends of the path to pick lettuce while there is lettuce, and pick corn\nwhile
        there is corn. \\\r\n\\\r"
      courseE_farmer_ramp13_2018: "Goodness!  Look at all of these\nsprouts. Some
        of them will turn into corn, and others into lettuce.  \\\r\n\\\r\nTravel\nto
        the ends of the path to pick lettuce while there is lettuce, and pick corn\nwhile
        there is corn. \\\r\n\\\r"
      courseE_farmer_ramp15: "Solve this puzzle using only the\nblocks available.\\\r\n\\\r\nThis
        level will help give you practice with the `repeat\nuntil` block.  Collect
        all of the corn and lettuce until you get to the pumpkin.\n(Don't forget to
        collect the pumpkin, too!)"
      courseE_farmer_ramp15_2018: "Solve this puzzle using only the\nblocks available.\\\r\n\\\r\nThis
        level will help give you practice with the `repeat\nuntil` block.  Collect
        all of the corn and lettuce until you get to the pumpkin.\n(Don't forget to
        collect the pumpkin, too!)"
      courseE_maze_ramp13: "Time for one last puzzle to pull\nit all together!\\\r\n\\\r\nUse
        nested loops to get the bird to the pig."
      courseE_maze_ramp3: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by dragging it back to the toolbox."
      courseE_maze_ramp3_2018: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by dragging it back to the toolbox."
      courseE_maze_ramp4: "_\"Trace the path and lead me to\nthe silly pig.\"_ \\\r\n\\\r\nAvoid
        TNT or feathers will fly!"
      courseE_maze_ramp4_2018: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseE_maze_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseE_maze_ramp5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseE_maze_ramp6: "_\"Keep calm and help me find the\nbad pig. Otherwise I
        might get angry!\"_\\\r\n\\\r\nWhen you have several blocks\nin a row, try
        moving them inside of a `repeat` loop.  This will do the same\nthing with
        less code!"
      courseE_maze_ramp6_2018: "_\"Keep calm and help me find the\nbad pig. Otherwise
        I might get angry!\"_\\\r\n\\\r\nWhen you have several blocks\nin a row, try
        moving them inside of a `repeat` loop.  This will do the same\nthing with
        less code!"
      courseE_maze_ramp7: "_\"It's time to get angry!\"_\\\r\n\\\r\n**Challenge:**\nUse
        what you've learned to get the bird to the pig!"
      courseE_maze_ramp7_2018: "_\"It's time to get angry!\"_\\\r\n\\\r\n**Challenge:**\nUse
        what you've learned to get the bird to the pig!"
      courseE_multi_maze_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseE_playLab_challenge1: "\\*The **squirrels** are terrified\nto see that
        a **dinosaur** has come to town! Can the brave **knight** keep\nthem all from
        panicking?\\*\\\r\n\\\r\nRules:\\\r\n\n1.  _Touching the squirrels scores\n
        \   you points._\\\r\n2.  _Touching the dinosaur takes many points away._\\\r\n
        \   \\\r\n    Here\n    is a different kind of game that has already been
        started for you! Play it\n    to see how it works. \\\r\n    \\\r\n    \\\r\n
        \   Something should happen when you get enough\n    points or when you run
        out of points. Add some code to the `win game` and\n    `lose game` functions
        to make the game work the way it should. \\\r\n    Click the\n    hints for
        ideas!"
      courseE_playLab_challenge1_2018: "\\*The **squirrels** are terrified\nto see
        that a **dinosaur** has come to town! Can the brave **knight** keep\nthem
        all from panicking?\\*\\\r\n\\\r\nRules:\\\r\n\n1.  _Touching the squirrels
        scores\n    you points._\\\r\n2.  _Touching the dinosaur takes many points
        away._\\\r\n    \\\r\n    Here\n    is a different kind of game that has already
        been started for you! Play it\n    to see how it works. \\\r\n    \\\r\n    \\\r\n
        \   Something should happen when you get enough\n    points or when you run
        out of points. Add some code to the `win game` and\n    `lose game` functions
        to make the game work the way it should. \\\r\n    Click the\n    hints for
        ideas!"
      courseE_playlab_challenge2: "Can you figure\nout how this \"Fortune Teller\"
        app works? Try adding some of the following\nfeatures to this game:\\\r\n\\\r\n\n-
        \  Change the \"yes\" and \"no\" answers to something\n    more interesting.\\\r\n-
        \  Let the player ask another question after the actor\n    says the fortune.\\\r\n-
        \  Give the witch two more things to say when she is in\n    an `angry` or
        `normal` mood.\\\r\n-   Give the wizard his own set of fortunes.\\\r\n-   \\*\n
        \   Make each actor change mood randomly.\\\r\n    \\\r\n    Check the hints
        if you need help\n    with these challenges!"
      courseE_playlab_variables_challenge2: "Can you figure\nout how this \"Fortune
        Teller\" app works? Try adding some of the following\nfeatures to this game:\\\r\n\\\r\n\n-
        \  Change the \"yes\" and \"no\" answers to something\n    more interesting.\\\r\n-
        \  Let the player ask another question after the actor\n    says the fortune.\\\r\n-
        \  Give the witch two more things to say when she is in\n    an `angry` or
        `normal` mood.\\\r\n-   Give the wizard his own set of fortunes.\\\r\n-   \\*\n
        \   Make each actor change mood randomly.\\\r\n    \\\r\n    Check the hints
        if you need help\n    with these challenges!"
      courseF_IceAge_1: "Sid (actor 1) wants to gather everyone\nfor a new adventure.
        Can you help him say \"Hello!\" by dragging the `actor\n1 say` block out and
        connecting it to the bottom of the `when run` event?   \\\r\n\\\r\nDon't\nforget
        to type \"Hello!\" inside!"
      courseF_IceAge_10: "Sid wants to let his grandmother,\nGranny, know that he
        loves her.   \\\r\n\\\r\nUse the `actor __ throw` command\nto have Sid (actor
        1) throw hearts at Granny (actor 2)! \\\r\nSet Granny's\nmood to happy when
        she gets hit with the hearts."
      courseF_IceAge_11: "Time to create your\nown game or story!  \\\r\n\\\r\nWhen
        you're done, click \"Finish\" to let friends\ntry your game on their phones,
        tablets, or computers!\\\r\nDon't know what\nto make? Click the hints for
        details."
      courseF_IceAge_6: "Can you help Sid call for his friends\nwhen you click on
        him?  \\\r\n\\\r\nOnce you're done, press \"Run\" to play.  Click\non Sid
        to see your code work!"
      courseF_IceAge_7: "Scrat is still looking for acorns!\n\\\r\nHelp him scamper
        around by attaching a `move actor 1` block to each of\nthe events and changing
        the direction to work for each arrow key. \\\r\nWhen\nyou’re done, click \"Run\"
        and try to collect all of the acorns."
      courseF_IceAge_8: "Here is your code from the last\npuzzle, as well as the code
        to move Granny left and right. \\\r\nCan you finish\nthe program to make it
        so that you both **play a sound** and **score a point**\nwhen Sid and Granny
        collide? \\\r\nPress \"Run\" to play the game."
      courseF_IceAge_9: "Everyone needs to move faster because\nan ice storm is coming!
        \\\r\nChange the scene to an icy background and set\nSid’s (actor 1) speed
        to fast.\\\r\nPress \"Run\" and move Sid to Diego to warn\nhim."
      courseF_IceAge_template: "Scrat is still looking for acorns!\n\\\r\nHelp him
        scamper around by attaching a `move actor 1` block to each of\nthe events
        and changing the direction to work for each arrow key. \\\r\nWhen\nyou’re
        done, click \"Run\" and try to collect all of the acorns."
      courseF_artist_for_Template: "If you turn a little bit\nmore or less than you
        normally would for a shape, it creates a neat effect.\\\r\n\\\r\nTry\nusing
        some of the code from the last level, but turning 89 degrees to create\nthis
        twisted square spiral."
      courseF_artist_for_Template_2018: "If you turn a little bit\nmore or less than
        you normally would for a shape, it creates a neat effect.\\\r\n\\\r\nTry\nusing
        some of the code from the last level, but turning 89 degrees to create\nthis
        twisted square spiral."
      courseF_artist_for_Template_2019: "If you turn a little bit\nmore or less than
        you normally would for a shape, it creates a neat effect.\\\r\n\\\r\nTry\nusing
        some of the code from the last level, but turning 89 degrees to create\nthis
        twisted square spiral."
      courseF_artist_for_challenge1: "Can you figure out how\nto re-create this drawing?
        \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge1_2018: "Can you figure out how\nto re-create this
        drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge1_2019: "Can you figure out how\nto re-create this
        drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge2: "Can you figure out how\nto re-create this drawing
        with a single loop? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge2_2018: "Can you figure out how\nto re-create this
        drawing with a single loop? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge2_2019: "Can you figure out how\nto re-create this
        drawing with a single loop? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      courseF_artist_fwp2: "Edit the function to accept a parameter\ncalled `length`.
        \ \\\r\n\\\r\nThe sides of each square should be 25 pixels larger\nthan the
        last.  The first square has 25 pixel sides."
      courseF_artist_fwp2_2018: "Edit the function to accept a parameter\ncalled `length`.
        \ \\\r\n\\\r\nThe sides of each square should be 25 pixels larger\nthan the
        last.  The first square has 25 pixel sides."
      courseF_artist_fwp2_predict1: "Edit the function to accept\na parameter called
        `length`.  \\\r\n\\\r\nThe sides of each square should be 25\npixels larger
        than the last.  The first square has 25 pixel sides. Replace\nthe '???' with
        the correct values to draw the picture."
      courseF_artist_fwp2_predict1_2018: "Edit the function to accept\na parameter
        called `length`.  \\\r\n\\\r\nThe sides of each square should be 25\npixels
        larger than the last.  The first square has 25 pixel sides. Replace\nthe '???'
        with the correct values to draw the picture."
      courseF_artist_fwp3: "Now try creating the function from\nscratch!  \\\r\n\\\r\nCreate
        a function called `draw a square` and use it to outline\nthese four boxes.
        \ \\\r\nMake sure to add a parameter for `length`!\\\r\n\\\r\n\\_\\_\\_\\\r\nStarting\nfrom
        the upper right, the box widths are 50, 100, 150, and 200."
      courseF_artist_fwp3_2018: "Now try creating the function from\nscratch!  \\\r\n\\\r\nCreate
        a function called `draw a square` and use it to outline\nthese four boxes.
        \ \\\r\nMake sure to add a parameter for `length`!\\\r\n\\\r\n\\_\\_\\_\\\r\nStarting\nfrom
        the upper right, the box widths are 50, 100, 150, and 200."
      courseF_artist_fwp4: "Great job!  Now edit this function\nto add a parameter
        for the number of sides in your polygon.\\\r\n\\\r\nThe sides\nof all the
        shapes are 100 pixels long."
      courseF_artist_fwp4_2018: "Great job!  Now edit this function\nto add a parameter
        for the number of sides in your polygon.\\\r\n\\\r\nThe sides\nof all the
        shapes are 100 pixels long."
      courseF_artist_fwp5: "Use the function from the last puzzle\nto draw this series
        of shapes.  \\\r\n\\\r\n\\\r\nThe triangle has 21 pixel sides,\nand the sides
        in each following shape are 7 pixels longer than the last.   \\\r\nUse\nthe
        `multiplication`block to make this all happen with just one function call.\\\r\n*\\_\\_\\\r\nThe\n`multipication`
        block looks like this <xml>\\<block type=\"math*arithmetic\"\ninline=\"true\">\\\r\n
        \     <title name=\"OP\">MULTIPLY</title>\\\r\n    </block></xml>"
      courseF_artist_fwp5_2018: "Use the function from the last puzzle\nto draw this
        series of shapes.  \\\r\n\\\r\n\\\r\nThe triangle has 21 pixel sides,\nand
        the sides in each following shape are 7 pixels longer than the last.   \\\r\nUse\nthe
        `multiplication`block to make this all happen with just one function call.\\\r\n*\\_\\_\\\r\nThe\n`multipication`
        block looks like this <xml>\\<block type=\"math*arithmetic\"\ninline=\"true\">\\\r\n
        \     <title name=\"OP\">MULTIPLY</title>\\\r\n    </block></xml>"
      courseF_artist_fwp6: "**Challenge:** Edit `draw a spiral\nedge` to use `length`
        and `sides` parameters, then recreate these shapes.\\\r\n\\\r\n\\-\nThe square
        goes from 3 pixels to 90 pixels.\\\r\n\n-   The hexagon goes from 3 pixels\n
        \   to 100 pixels.\\\r\n-   The triangle goes from 3 pixels to 95 pixels."
      courseF_artist_fwp6_2018: "**Challenge:** Edit `draw a spiral\nedge` to use
        `length` and `sides` parameters, then recreate these shapes.\\\r\n\\\r\n\\-\nThe
        square goes from 3 pixels to 90 pixels.\\\r\n\n-   The hexagon goes from 3
        pixels\n    to 100 pixels.\\\r\n-   The triangle goes from 3 pixels to 95
        pixels."
      courseF_artist_fwp7: "Finish off the `draw a spiral edge`\nfunction to also
        ask for a minimum length for the center of the spiral.\\\r\n\\\r\n\\-\nThe
        smallest side in the center of this square is 50 pixels long\\\r\n\n-   The\n
        \   longest side at the outside of this spiral is 200 pixels long"
      courseF_artist_fwp7_2018: "Finish off the `draw a spiral edge`\nfunction to
        also ask for a minimum length for the center of the spiral.\\\r\n\\\r\n\\-\nThe
        smallest side in the center of this square is 50 pixels long\\\r\n\n-   The\n
        \   longest side at the outside of this spiral is 200 pixels long"
      courseF_artist_fwp8: "Freeplay! Can you figure out how\nto make this drawing
        using the function that you just created?\\\r\n\\\r\n\n-   The\n    red spiral
        goes from 50 to 200 pixels\\\r\n-   The blue spiral goes from 25 to\n    150
        pixels\\\r\n-   The green spiral goes from 100 to 350 pixels"
      courseF_artist_fwp8_2018: "Freeplay! Can you figure out how\nto make this drawing
        using the function that you just created?\\\r\n\\\r\n\n-   The\n    red spiral
        goes from 50 to 200 pixels\\\r\n-   The blue spiral goes from 25 to\n    150
        pixels\\\r\n-   The green spiral goes from 100 to 350 pixels"
      courseF_artist_fwp_challenge2: "Use what you learned in\nthe previous level
        to draw an image like this.\\\r\n\\\r\n_Note: The code becomes\nmore simple
        if you incorporate parameters._\\\r\n\\\r\n<br/>\\\r\n<img src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ "
      courseF_artist_fwp_challenge2_2018: "Use what you learned in\nthe previous level
        to draw an image like this.\\\r\n\\\r\n_Note: The code becomes\nmore simple
        if you incorporate parameters._\\\r\n\\\r\n<br/>\\\r\n<img src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ "
      courseF_artist_ramp10: "Did you know you can put loops\ninside of other loops
        to make them more powerful?  That's called making a\n\"nested loop\".\\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nDrag
        the code for the last triangle into\na new loop to spin it around and make
        a snowflake!\\\r\n\\\r\n_(You will need\nto spin it 6 times at 60 degrees
        to get this pattern.)_"
      courseF_artist_ramp10_2018: "Did you know you can put loops\ninside of other
        loops to make them more powerful?  That's called making a\n\"nested loop\".\\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nDrag
        the code for the last triangle into\na new loop to spin it around and make
        a snowflake!\\\r\n\\\r\n_(You will need\nto spin it 6 times at 60 degrees
        to get this pattern.)_"
      courseF_artist_ramp8: "Great!  Now let's make a square\nusing Artist!  The blocks
        for artist are a little different than other puzzles,\nbut the idea is the
        same.\\\r\n\\_\\_\\_\\\r\nEach side of the square has a length of\n200 pixels,
        and you will need to turn 90 degrees to make each angle."
      courseF_artist_ramp8_2018: "Great!  Now let's make a square\nusing Artist!  The
        blocks for artist are a little different than other puzzles,\nbut the idea
        is the same.\\\r\n\\_\\_\\_\\\r\nEach side of the square has a length of\n200
        pixels, and you will need to turn 90 degrees to make each angle."
      courseF_artist_ramp9: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseF_artist_ramp9_2018: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseF_artist_variables_challenge1a: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2_2018: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2_2019: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_bee_conditionals1_predict1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseF_bee_conditionals1_predict1_2018: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseF_bee_conditionals2: "_\"It's too cloudy to see\nany flowers!\"_\\\r\n\\\r\nCheck
        underneath every cloud to see if it is hiding\na flower before you get nectar.
        If there is a flower underneath the cloud,\nthe bee will need to get nectar
        **once**.  \\\r\n\\\r\nRemember: Not all clouds\nhide the same thing!"
      courseF_bee_conditionals2_2018: "_\"It's too cloudy to see\nany flowers!\"_\\\r\n\\\r\nCheck
        underneath every cloud to see if it is hiding\na flower before you get nectar.
        If there is a flower underneath the cloud,\nthe bee will need to get nectar
        **once**.  \\\r\n\\\r\nRemember: Not all clouds\nhide the same thing!"
      courseF_bee_conditionals7_predict2: "Sometimes a cloud\ncovers a flower, sometimes
        it covers a honeycomb!\\\r\n\\\r\nUse the `if/else`\nblock to collect nectar
        at flowers and make honey at honeycomb."
      courseF_bee_conditionals7_predict2_2018: "Sometimes a cloud\ncovers a flower,
        sometimes it covers a honeycomb!\\\r\n\\\r\nUse the `if/else`\nblock to collect
        nectar at flowers and make honey at honeycomb."
      courseF_bee_conditionals8: "**Challenge:** There will\nbe either a flower or
        a honeycomb under each of those clouds!\\\r\n\\\r\nCollect\nnectar once if
        there is a flower. Otherwise, make honey once (because there\nis a honeycomb)."
      courseF_bee_conditionals8_2018: "**Challenge:** There will\nbe either a flower
        or a honeycomb under each of those clouds!\\\r\n\\\r\nCollect\nnectar once
        if there is a flower. Otherwise, make honey once (because there\nis a honeycomb)."
      courseF_bee_for_challenge2: Résous ce puzzle avec le moins de blocs possible.
      courseF_bee_for_challenge2_2018: Résous ce puzzle avec le moins de blocs possible.
      courseF_bee_for_challenge2_2019: Résous ce puzzle avec le moins de blocs possible.
      courseF_bee_functions2: "To make things easier, it's\ntime to learn about functions!\\\r\n\\\r\nFrom
        here on out, you will be using\na new _function editor_.  This editor is a
        separate window that will appear\nwhen you go to edit a function.  You won't
        see all of the code from your\nfunction while you're coding in the workspace,
        but don't worry...it's still\nthere!  \\\r\n\\_\\_\\_\\\r\n\\\r\nLet's practice
        with this function that gets nectar\nonly if the bee is at a flower.  To see
        the code inside, click the blue \"edit\"\nbutton!\\\r\n\\\r\nUse the `get
        only nectar` function to collect the nectar from\neach flower."
      courseF_bee_functions2_2018: "To make things easier, it's\ntime to learn about
        functions!\\\r\n\\\r\nFrom here on out, you will be using\na new _function
        editor_.  This editor is a separate window that will appear\nwhen you go to
        edit a function.  You won't see all of the code from your\nfunction while
        you're coding in the workspace, but don't worry...it's still\nthere!  \\\r\n\\_\\_\\_\\\r\n\\\r\nLet's
        practice with this function that gets nectar\nonly if the bee is at a flower.
        \ To see the code inside, click the blue \"edit\"\nbutton!\\\r\n\\\r\nUse
        the `get only nectar` function to collect the nectar from\neach flower."
      courseF_bee_functions3a: "Each cloud could be hiding either\none flower or one
        honeycomb!  Write a function that gets nectar if the bee\nis at a flower,
        otherwise it gets honey.\\\r\n\\\r\nUse your function to solve\nthe puzzle!"
      courseF_bee_functions3a_2018: "Each cloud could be hiding either\none flower
        or one honeycomb!  Write a function that gets nectar if the bee\nis at a flower,
        otherwise it gets honey.\\\r\n\\\r\nUse your function to solve\nthe puzzle!"
      courseF_bee_functions4: "Did you know that you can call\na function from _inside_
        another function?  \\\r\n\\\r\nUse your `check nectar\nor honey` function
        inside the new `move and check` function to help the bee\nturn, go get what's
        under the cloud, then back-up and turn back around!"
      courseF_bee_functions4_2018: "Did you know that you can call\na function from
        _inside_ another function?  \\\r\n\\\r\nUse your `check nectar\nor honey`
        function inside the new `move and check` function to help the bee\nturn, go
        get what's under the cloud, then back-up and turn back around!"
      courseF_bee_functions6: "_\"This field is a-MAZE-ing!\"_\\\r\n\\\r\nBuild\nyour
        own function to help the bee through the maze by turning left at flowers\nand
        right at honeycomb.  Don't forget to collect nectar and make honey along\nthe
        way!"
      courseF_bee_functions6_2018: "_\"This field is a-MAZE-ing!\"_\\\r\n\\\r\nBuild\nyour
        own function to help the bee through the maze by turning left at flowers\nand
        right at honeycomb.  Don't forget to collect nectar and make honey along\nthe
        way!"
      courseF_bee_functions7: "Rebuild your function from the\nlast puzzle to solve
        this maze.\\\r\n\\\r\nTurn left at the honeycomb and right\nat the flowers.
        \ \\\r\n**Note:** Some corners are unmarked!"
      courseF_bee_functions7_2018: "Rebuild your function from the\nlast puzzle to
        solve this maze.\\\r\n\\\r\nTurn left at the honeycomb and right\nat the flowers.
        \ \\\r\n**Note:** Some corners are unmarked!"
      courseF_bee_functions8a: "Underneath\nthis cloud, there might be a flower with
        an unknown amount of nectar, or a\nhoneycomb with an unknown amount of honey.
        \ \\\r\n\\\r\nCan you write a program\nthat can handle either?"
      courseF_bee_functions8a_2018: "Underneath\nthis cloud, there might be a flower
        with an unknown amount of nectar, or a\nhoneycomb with an unknown amount of
        honey.  \\\r\n\\\r\nCan you write a program\nthat can handle either?"
      courseF_bee_functionsPre7: "Now try building a function\nto solve this maze.
        \ How is it different from last time?  \\\r\n\\\r\nTurn left\nat the honeycomb
        and right at the flowers.  \\\r\n**Note:** Some corners are\nunmarked!"
      courseF_bee_functionsPre7_2018: "Now try building a function\nto solve this
        maze.  How is it different from last time?  \\\r\n\\\r\nTurn left\nat the
        honeycomb and right at the flowers.  \\\r\n**Note:** Some corners are\nunmarked!"
      courseF_bee_functions_challenge2_recursion: "Underneath\nthis cloud, there might
        be a flower with an unknown amount of nectar, or a\nhoneycomb with an unknown
        amount of honey.  \\\r\n\\\r\nCan you write a program\nthat can handle either?"
      courseF_bee_fwp1: "Check beneath the clouds to see if\nthe flowers have any
        nectar.  \\\r\n\\\r\nFor this whole stage, each flower will\nhave exactly
        **one** unit of nectar, and each honeycomb will need exactly\n**one** unit
        of honey. \\\r\n\\\r\n\\\r"
      courseF_bee_fwp1_2018: "Check beneath the clouds to see if\nthe flowers have
        any nectar.  \\\r\n\\\r\nFor this whole stage, each flower will\nhave exactly
        **one** unit of nectar, and each honeycomb will need exactly\n**one** unit
        of honey. \\\r\n\\\r\n\\\r"
      courseF_bee_fwp2: "Here's some code that solves the last\npuzzle.  \\\r\nLet's
        pull it into a function, then call the function to check\nthis row for nectar.
        \ \\\r\n\\_\\_\\_\\\r\nThis may seem like a strange step now, but\nit will
        be really helpful soon!"
      courseF_bee_fwp2_2018: "Here's some code that solves the last\npuzzle.  \\\r\nLet's
        pull it into a function, then call the function to check\nthis row for nectar.
        \ \\\r\n\\_\\_\\_\\\r\nThis may seem like a strange step now, but\nit will
        be really helpful soon!"
      courseF_bee_fwp3: "Time to put the function to the test!\n\\\r\n\\\r\nLet's
        see if it makes collecting these three rows of nectar any easier."
      courseF_bee_fwp3_2018: "Time to put the function to the test!\n\\\r\n\\\r\nLet's
        see if it makes collecting these three rows of nectar any easier."
      courseF_bee_fwp4: "_\"How is your function holding up?\"_   \\\r\n\\\r\nWe\nneed
        to make some adjustments here. Click \"edit\" to add a `length` parameter\nto
        the function so that it will still work when the row is a different length."
      courseF_bee_fwp4_2018: "_\"How is your function holding up?\"_   \\\r\n\\\r\nWe\nneed
        to make some adjustments here. Click \"edit\" to add a `length` parameter\nto
        the function so that it will still work when the row is a different length."
      courseF_bee_fwp5: "_\"You're doing great so far!\"_\\\r\n\\\r\nLet's\nuse this
        function to collect the nectar."
      courseF_bee_fwp5_2018: "_\"You're doing great so far!\"_\\\r\n\\\r\nLet's\nuse
        this function to collect the nectar."
      courseF_bee_fwp6: "You can make code shorter and more\nefficient when you combine
        functions with other programming elements.  \\\r\n\\_\\_\\_\\\r\nWhat\nblocks
        can you use with your function to build a short and sweet solution\nto this
        puzzle?"
      courseF_bee_fwp6_2018: "You can make code shorter and more\nefficient when you
        combine functions with other programming elements.  \\\r\n\\_\\_\\_\\\r\nWhat\nblocks
        can you use with your function to build a short and sweet solution\nto this
        puzzle?"
      courseF_bee_fwp_challenge2: "Let's see if you can handle\nthis one final test!
        Give it everything you've got!\\\r\n\\\r\nUse one `for loop`\nin a function
        to collect all of the vegetables in the row. Make the `for loop`\ncount to
        different maximum values by using the `length` parameter. Make your\nprogram
        as short as possible by using a second `for loop` outside the function.\\\r\n\\\r\nGood\nluck!"
      courseF_bee_fwp_challenge2_2018: "Let's see if you can handle\nthis one final
        test! Give it everything you've got!\\\r\n\\\r\nUse one `for loop`\nin a function
        to collect all of the vegetables in the row. Make the `for loop`\ncount to
        different maximum values by using the `length` parameter. Make your\nprogram
        as short as possible by using a second `for loop` outside the function.\\\r\n\\\r\nGood\nluck!"
      courseF_maze_ramp13: "Time for another Angry Birds puzzle\nto pull it all together!\\\r\n\\\r\nUse
        nested loops to get the bird to the pig."
      courseF_maze_ramp15: "_\"It's time to get angry!\"_\\\r\n\\\r\n**Challenge:**\nUse
        what you've learned to get the bird to the pig!"
      courseF_maze_ramp2: "Drag a <xml><block type=\"controls_repeat\"><title\nname=\"TIMES\">7</title></block></xml>
        block out of the toolbox and attach\nit to the <xml><block type=\"when_run\"/></xml>
        event.\\\r\n\\\r\nPlace the <xml><block\ntype=\"maze_moveForward\"/></xml>
        block inside the loop to finish your code."
      courseF_maze_ramp2_2018: "Drag a <xml><block type=\"controls_repeat\"><title\nname=\"TIMES\">7</title></block></xml>
        block out of the toolbox and attach\nit to the <xml><block type=\"when_run\"/></xml>
        event.\\\r\n\\\r\nPlace the <xml><block\ntype=\"maze_moveForward\"/></xml>
        block inside the loop to finish your code."
      courseF_maze_ramp4: "_\"Trace the path and lead me to\nthe silly pig.\"_ \\\r\n\\\r\nAvoid
        TNT or feathers will fly!"
      courseF_maze_ramp4_2018: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseF_maze_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseF_maze_ramp5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseF_maze_ramp6: "_\"Keep calm and help me find the\nbad pig. Otherwise I
        might get angry!\"_\\\r\n\\\r\nWhen you have several blocks\nin a row, try
        moving them inside of a <xml><block type=\"controls_repeat\"><title\nname=\"TIMES\">???</title></block></xml>
        loop.  This will do the same thing\nwith less code!"
      courseF_maze_ramp6_2018: "_\"Keep calm and help me find the\nbad pig. Otherwise
        I might get angry!\"_\\\r\n\\\r\nWhen you have several blocks\nin a row, try
        moving them inside of a <xml><block type=\"controls_repeat\"><title\nname=\"TIMES\">???</title></block></xml>
        loop.  This will do the same thing\nwith less code!"
      courseF_maze_ramp7: "_\"It's time to get angry!\"_\\\r\n\\\r\n**Challenge:**\nUse
        what you've learned to get the bird to the pig!"
      courseF_playlab_brokenText: "In the rest of this stage,\nwe will use multiple
        `ask` blocks and multiple `if/else` statements to create\na game that **you**
        control!\\\r\n\\\r\nStart by setting the \"codename\" variable\nto a word
        that you can remember.  Then, use an `ask` block to get a codename\nfrom the
        users.  You will need an `if/else` block to see if the codename entered\nmatches
        the codename that you have set."
      courseF_playlab_variables0: "This is Pirate Pegleg.  He's\nawfully hard to understand
        these days!  \\\r\n\\\r\nDecode his speech by changing\nthese pieces of text
        in the code:\\\r\n\n-   \"arrrg\" should be \"a\" \\\r\n-   \"ye\"\n    should
        be \"e\"\\\r\n    \\\r"
      courseF_playlab_variables1: "This is Pirate Pegleg.  He's\nawfully hard to understand
        these days!  \\\r\n\\\r\nDecode his speech by changing\nthese pieces of text
        in the code:\\\r\n\n-   \"arrrg\" should be \"a\" \\\r\n-   \"ye\"\n    should
        be \"e\"\\\r\n    \\\r"
      courseF_playlab_variables2: "Now, decode Pirate Pegleg's\nspeech by changing
        the value of the variables in just two places!   \\\r\n\\-\n\"arrrg\" should
        be \"a\" \\\r\n\n-   \"ye\" should be \"e\"\\\r\n    \\\r"
      courseF_playlab_variables2a: "Now, decode Pirate Pegleg's\nspeech by changing
        the value of the variables in just two places!   \\\r\n\\-\n\"arrrg\" should
        be \"a\" \\\r\n\n-   \"ye\" should be \"e\"\\\r\n    \\\r"
      courseF_playlab_variables2b RYAN CLONE: "We can make sentences\nmore interesting
        by mixing pieces of text with variables.\\\r\n\\\r\nInsert the\nvariable `color`
        into the middle of a sentence by putting it into the empty\nslot in the `join`
        block."
      courseF_playlab_variables2b: "We can make sentences\nmore interesting by mixing
        pieces of text with variables.\\\r\n\\\r\nInsert the\nvariable `color` into
        the middle of a sentence by putting it into the empty\nslot in the `join`
        block."
      courseF_playlab_variables2b_2018: "We can make sentences\nmore interesting by
        mixing pieces of text with variables.\\\r\n\\\r\nInsert the\nvariable `color`
        into the middle of a sentence by putting it into the empty\nslot in the `join`
        block."
      courseF_playlab_variables5c RYAN Copy: "Let's combine\nthe `ask` block with
        an `if/else` statement to make a game!\\\r\n\\\r\nPirate\nPegleg is going
        to ask you a question.  Drag a copy of the `answer` variable\ninto the conditional
        for the `if` statement to check whether or not you entered\nthe correct color."
      courseF_playlab_variables5c: "Let's combine the `ask`\nblock with an `if/else`
        statement to have some fun!\\\r\n\\\r\nPirate Pegleg is\ngoing to ask you
        a question.  Drag a copy of the `answer` variable into the\nconditional for
        the `if` statement to check whether or not you entered the\ncorrect color."
      courseF_playlab_variables5c_2018: "Let's combine the `ask`\nblock with an `if/else`
        statement to have some fun!\\\r\n\\\r\nPirate Pegleg is\ngoing to ask you
        a question.  Drag a copy of the `answer` variable into the\nconditional for
        the `if` statement to check whether or not you entered the\ncorrect color."
      courseF_playlab_variables6c: "In the rest of this stage,\nwe will use multiple
        `ask` blocks and multiple `if/else` statements to create\na game that **you**
        control!\\\r\n\\\r\nStart by setting the \"codename\" variable\nto a word
        that you can remember.  Then, use an `ask` block to get a codename\nfrom the
        users.  You will need an `if/else` block to see if the codename entered\nmatches
        the codename that you have set."
      courseF_playlab_variables6c_2018: "In the rest of this stage,\nwe will use multiple
        `ask` blocks and multiple `if/else` statements to create\na game that **you**
        control!\\\r\n\\\r\nStart by setting the \"codename\" variable\nto a word
        that you can remember.  Then, use an `ask` block to get a codename\nfrom the
        users.  You will need an `if/else` block to see if the codename entered\nmatches
        the codename that you have set."
      courseF_playlab_variables7c: "Add another `ask` block\nto ask the user to guess
        a color.  \\\r\n\\\r\nKeep your `if/else` statement such\nthat your codename
        always wins the game, but every other codename always loses."
      courseF_playlab_variables7c_2018: "Add another `ask` block\nto ask the user
        to guess a color.  \\\r\n\\\r\nKeep your `if/else` statement such\nthat your
        codename always wins the game, but every other codename always loses."
      courseF_playlab_variables_challenge2: "Now for a game\nof tag!  Tag Cat to get
        2 points. Tag Penguin to get 3 points.  Get exactly\n10 points to win!\\\r\nBut
        be careful, when Cat and Penguin tag each other,\nthey take points away.\\\r\n\\\r\n<strong>\\\r\nAdd
        the blocks necessary to make\nthis game work the way it's been explained.
        \\\r\n\n-   How will you get Dog to\n    move in all directions using the
        arrow keys?  \\\r\n-   How will you add points\n    when Dog tags Cat or Penguin?
        \ \\\r\n-   How will you subtract points when Cat\n    and Penguin touch?\\\r\n
        \   </strong>\\\r\n    \\\r\n    <hr/>\r"
      courseF_playlab_variables_challenge2_2018: "Now for a game\nof tag!  Tag Cat
        to get 2 points. Tag Penguin to get 3 points.  Get exactly\n10 points to win!\\\r\nBut
        be careful, when Cat and Penguin tag each other,\nthey take points away.\\\r\n\\\r\n<strong>\\\r\nAdd
        the blocks necessary to make\nthis game work the way it's been explained.
        \\\r\n\n-   How will you get Dog to\n    move in all directions using the
        arrow keys?  \\\r\n-   How will you add points\n    when Dog tags Cat or Penguin?
        \ \\\r\n-   How will you subtract points when Cat\n    and Penguin touch?\\\r\n
        \   </strong>\\\r\n    \\\r\n    <hr/>\r"
      courseF_playlab_variables_challenge3: "Can you figure\nout how this \"Fortune
        Teller\" app works? Try adding some of the following\nfeatures to this game:\\\r\n\\\r\n\n-
        \  Change the \"yes\" and \"no\" answers to something\n    more interesting.\\\r\n-
        \  Let the player ask another question after the actor\n    says the fortune.\\\r\n-
        \  Give the witch two more things to say when she is in\n    an `angry` or
        `normal` mood.\\\r\n-   Give the wizard his own set of fortunes.\\\r\n-   \\*\n
        \   Make each actor change mood randomly.\\\r\n    \\\r\n    Check the hints
        if you need help\n    with these challenges!"
      course_playlab_variables1: "This is Pirate Pegleg.  He's\nawfully hard to understand
        these days!  \\\r\n\\\r\nDecode his speech by changing\nthese pieces of text
        in the code:\\\r\n\n-   \"arrrg\" should be \"a\" \\\r\n-   \"ye\"\n    should
        be \"e\"\\\r\n    \\\r"
      course_playlab_variables2: "Now, decode Pirate Pegleg's\nspeech by changing
        the value of the variables in just two places!   \\\r\n\\-\n\"arrrg\" should
        be \"a\" \\\r\n\n-   \"ye\" should be \"e\"\\\r\n    \\\r"
      course_playlab_variables3: "Now, decode Pirate Pegleg's\nspeech by changing
        the value of the variables in just two places!   \\\r\n\\-\n\"arrrg\" should
        be \"a\" \\\r\n\n-   \"ye\" should be \"e\"\\\r\n    \\\r"
      coursef_maze_ramp3: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by dragging it back to the toolbox."
      coursef_maze_ramp3_2018: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by dragging it back to the toolbox."
      csd-post-survey-2017-FR: As-tu quelque chose à ajouter à propos de ton expérience
        du cours ?
      csd-post-survey-2017-FR_2019: As-tu quelque chose à ajouter à propos de ton
        expérience du cours ?
      csd-post-survey-2018-topics-want-FR: Quels autres sujets souhaites-tu apprendre
        à l'avenir ?
      csd-pulse-check-survey-1-free-response U1Ch2: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U1Ch2_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U2Ch1: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U2Ch2: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U3Ch1: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U3Ch2: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U4Ch1: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U4Ch1_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U4Ch2: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U4Ch2_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U5Ch1: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U5Ch1_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U5Ch2: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U5Ch2_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U6Ch1: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U6Ch1_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U6Ch2: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response U6Ch2_2018: Autre chose que tu aimerais
        faire savoir à ton enseignant ?
      csd-pulse-check-survey-1-free-response: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csd-thursday-facilitation: "# Thursday Facilitation Reflection\\\r\n\n\\\r\n\n##
        \n\nDiscussion-Based Sessions\\\r\n\\\r\nYou have now seen a couple discussion
        heavy\nsessions. Some specific examples include the Community (Wednesday),
        and Recruitment/Student\nNeeds (Thursday) sessions. What common facilitator
        strategies were used in\nthese sessions?\\\r\n\\\r\n\n-   What are facilitators
        doing?\\\r\n-   What are teachers\n    doing?"
      csd-thursday-pedagogy: "# Thursday Pedagogy Reflection\n\nPart 1\\\r\n\\\r\n\n##
        Differentiating Instruction\\\r\n\n\\\r\nWhat strategies have you\nlearned
        about for differentiating instruction to meet diverse learning needs\nof students
        in CS Discoveries? List at least two ideas. "
      csd-thursday-pedagogy2: "# Thursday Pedagogy Reflection\n\nPart 2\\\r\n\\\r\n\n##
        Recruiting and Student Needs\\\r\n\n\\\r\nIn the community session\nthis morning
        you talked about recruiting students and meeting students needs\nin the region
        where you work. (If you were not with your region think about\nwhat you experienced
        in this sessions that might apply to your region.)\\\r\n\\\r\n\\*\nWhat were
        common recruiting pain points teachers in your region shared?\\\r\n\\*\nWhat
        were common student support needs teachers in your region shared?\\\r\n\\*\nWhat
        things did you see today that you want to check in on throughout the\nyear?\\\r\n\n-
        \  What recruiting goals do you hope to help accomplish in your region\n    by
        the end of the year?\\\r"
      csd-thursday-unit: "# Thursday Unit Reflection Part 1\n\n\\\r\n\\\r\n\n## Game
        Lab\\\r\n\n\\\r\nHow would you explain programming in Game Lab to\na new teacher
        who is interested in using it? \\\r\n\\\r\n\n-   In what ways is Game\n    Lab
        an educational rather than professional tool? \\\r\n-   What kind of supports\n
        \   exist for students using Game Lab?\\\r"
      csd-thursday-unit2: "# Thursday Unit Reflection Part 2\\\r\n\n\\\r\n\n## \n\nTeachers
        in Plugged Unit\\\r\n\\\r\nWhat’s the role of the teacher in this unit,\nwhere
        much of the computer science content is embedded in the levels?"
      csd-tuesday-facilitation: "# Facilitation Reflection\\\r\n\n\\\r\n\n## \n\nTLOs\\\r\n\\\r\nYou
        have seen 3 Model TLOs (taught by facilitators) and 2 Participant\nTLOs (taught
        by teachers). What patterns do you notice about what facilitators\ndo during
        these sessions (consider the lessons themselves and the debriefs)?\\\r\n\\\r\n\\*\nWhat
        are facilitators doing during lessons?\\\r\n\n-   What are facilitators doing\n
        \   during debriefs?\\\r\n-   How much time is split between time when facilitators\n
        \   are talking and time when teachers are doing? \\\r"
      csd-tuesday-pedagogy: "# Tuesday Pedagogy Reflection\\\r\n\n\\\r\n\n## \n\nClassroom
        Practices\\\r\n\\\r\nName two <a href=\"https://docs.google.com/document/d/1FhHPqlC6dU_z9retuBYb-duUwyKpnjwuEgjF4zfdhvI/edit#heading=h.xbvgs2732c34\">\nClassroom
        Practices</a> you saw modeled in the 5 TLOs you’ve seen in the past\ncouple
        of days? \\\r\n\\\r\n\n-   When were they successful?\\\r\n-   What were characteristics\n
        \   of situations where was their room for improvement?"
      csd-tuesday-unit: "# Tuesday Unit Reflection Part 1\\\r\n\n\\\r\n\n## \n\nUnit
        1 Unplugged\\\r\n\\\r\nHow would you respond to a teacher who asks why the\nfirst
        unit does not use computers?"
      csd-tuesday-unit2: "# Tuesday Unit Reflection Part 2\\\r\n\n\\\r\n\n## \n\nPositive
        Classroom Community\\\r\n\\\r\nIn what ways does the curriculum support\nbuilding
        a positive classroom community?"
      csd-wednesday-facilitation: "# Wednesday Facilitation\n\nReflection\\\r\n\\\r\n\n##
        Facilitator Presentations\\\r\n\n\\\r\nYou have now seen 3\nmorning kick off
        sessions and 3 afternoon wrap up sessions. What common facilitator\nstrategies
        were used in these sessions?\\\r\n\\\r\n\n-   What are facilitators doing?\\\r\n-
        \  \\*\n    What are teachers doing?\\\r\n-   What strategies did you see
        facilitators use\n    to keep teachers engaged?\\\r"
      csd-wednesday-pedagogy: "# Wednesday Pedagogy Reflection\\\r\n\n\\\r\n\n## \n\nBuilding
        Community & Dealing with Barriers\\\r\n\\\r\nIn the community session\nthis
        morning you talked about building community and dealing with barriers\nto
        growing your CS education community locally. (If you were not with your\nregion
        think about what you experienced in this sessions that might apply\nto your
        region.)\\\r\n\\\r\n\n-   What were common barriers teachers in your region\n
        \   shared?\\\r\n-   What barriers do you personally experience that were
        shared by\n    teachers? \\\r\n-   What can you do to help in your local community?\\\r\n-
        \  What\n    things did you see today that you want to check in on throughout
        the year?\\\r\n-   \\*\n    What community development goals do you hope to
        help accomplish in your region\n    by the end of the year?\\\r"
      csd-wednesday-unit: "# Wednesday Unit Reflection Part\n\n1\\\r\n\\\r\n\n## Unit
        1 and Unit 2 Connections\\\r\n\n\\\r\nWhat connections or hooks\ninto Unit
        1 can be used to motivate early lessons in Unit 2?"
      csd-wednesday-unit2: "# Wednesday Unit Reflection Part\n\n2\\\r\n\\\r\n\n##
        Web Lab\\\r\n\n\\\r\nHow would you explain Web Lab to a new teacher\nwho is
        interested in using it?\\\r\n\\\r\n\n-   In what ways is Web Lab an educational\n
        \   rather than professional tool? \\\r\n-   What kind of supports exist for
        students\n    working Web Lab?\\\r"
      csd1dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 1,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 1\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 1. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What summative\n    and formative assessment opportunities are built into
        the unit? \\\r\n    \\\\t\\* What’s\n    the role of the project(s) in the
        unit? \\\r\n    \\\\t\\* How does the project(s) apply\n    content and skills
        that were developed during the unit? \\\r\n2.  Which student\n    practices
        (PPCCC) are honed the most in this unit through the activities and\n    projects?
        \\\r\n3.  What are the core 2017 CSTA standards or threads of the K-12\n    framework
        in this unit?\\\r\n    \\\r\n    \\\r\n    > ## Getting Credit for Completing
        this\n    >\n    > Reflection \\\r\n    > \\\r\n    >\n    > -   Once you
        submit your reflection, your response to the\n    >     prompt above will
        be shared anonymously and reviewed by your peers, and you\n    >     will
        review the work done by other facilitators. Reviewers will be looking\n    >
        \    for thoughtful and thorough answers that demonstrate that you have spent
        time\n    >     considering the reflection questions listed above. Reviewers
        will have an\n    >     opportunity to give feedback on your submission, and
        you can respond to that\n    >     feedback and resubmit.\\\r\n4.  In order
        to get credit for completing this prompt,\n    two reviewers need to agree
        that you have responded to the prompts fully.\n    If reviewers don’t feel
        comfortable making a decision about your task submission,\n    they can elevate
        to an instructor for review. You will always have a chance\n    to address
        feedback from your reviewers and resubmit your reflections! Reviewer\n    feedback
        will show up at the bottom of this page, once it’s available. \\\r\n\n\\\r\n\\\r"
      csd1dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: Before you\n> start this reflection,
        make sure you’ve reviewed the lessons in Unit 1 and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 1 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 1. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  What does
        a typical lesson\n    in this unit look like? \\\r\n    \\\r\n2.  What is
        the connection between early lessons\n    and later lessons?\\\r\n    \\\r\n3.
        \ Where do you see the Curriculum Values and philosophy\n    emphasized in
        this unit?\\\r\n    \\\\t- In what ways does the curriculum support building\n
        \   a positive classroom community?\\\r\n    \\\r\n4.  How does the Input-Output-Store-Process\n
        \   model help prepare a student to think more deeply about the way computers\n
        \   help us to solve problems?\\\r\n    \\\r\n    \\\r\n    > ## Getting Credit
        for Completing this\n    >\n    > Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your reflection, your response to the\n    >     prompt
        above will be shared anonymously and reviewed by your peers, and you\n    >
        \    will review the work done by other facilitators. Reviewers will be looking\n
        \   >     for thoughtful and thorough answers that demonstrate that you have
        spent time\n    >     considering the reflection questions listed above. Reviewers
        will have an\n    >     opportunity to give feedback on your submission, and
        you can respond to that\n    >     feedback and resubmit.\\\r\n5.  In order
        to get credit for completing this prompt,\n    two reviewers need to agree
        that you have responded to the prompts fully.\n    If reviewers don’t feel
        comfortable making a decision about your task submission,\n    they can elevate
        to an instructor for review. You will always have a chance\n    to address
        feedback from your reviewers and resubmit your reflections! Reviewer\n    feedback
        will show up at the bottom of this page, once it’s available. \\\r\n\n\\\r\n\\\r"
      csd1dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 1,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 1 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 1. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n-   How would you respond\n
        \   to a teacher who asks why is the first unit does not use computers?\\\r\n
        \   \\\r\n    \\\r\n    > ## \n    >\n    > Getting Credit for Completing
        this Reflection \\\r\n    > \\\r\n    >\n    > -   Once you submit your\n
        \   >     reflection, your response to the prompt above will be shared anonymously
        and\n    >     reviewed by your peers, and you will review the work done by
        other facilitators.\n    >     Reviewers will be looking for thoughtful and
        thorough answers that demonstrate\n    >     that you have spent time considering
        the reflection questions listed above.\n    >     Reviewers will have an opportunity
        to give feedback on your submission, and\n    >     you can respond to that
        feedback and resubmit.\\\r\n-   In order to get credit\n    for completing
        this prompt, two reviewers need to agree that you have responded\n    to the
        prompts fully. If reviewers don’t feel comfortable making a decision\n    about
        your task submission, they can elevate to an instructor for review.\n    You
        will always have a chance to address feedback from your reviewers and\n    resubmit
        your reflections! Reviewer feedback will show up at the bottom of\n    this
        page, once it’s available. \\\r\n    \\\r\n    \\\r\n    \\\r"
      csd2dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 2,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 2\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 2. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What summative\n    and formative assessment opportunities are built into
        the unit? \\\r\n    \\\\t\\* What’s\n    the role of the project(s) in the
        unit? \\\r\n    \\\\t\\* How does the project(s) apply\n    content and skills
        that were developed during the unit? \\\r\n    \\\\t\\* What kinds\n    of
        special considerations come with the unit long project in this unit?\\\r\n2.
        \ 2.\n    What skills and knowledge should students leave the unit with?\\\r\n3.
        \ What\n    are the core 2017 CSTA standards or threads of the K-12 framework
        in this\n    unit?\\\r\n    \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit
        for Completing this Reflection \\\r\n    >\n    > ## \\\r\n    >\n    > Once
        you submit your reflection, your response to the prompt above will be\n    >
        shared anonymously and reviewed by your peers, and you will review the work\n
        \   > done by other facilitators. Reviewers will be looking for thoughtful
        and thorough\n    > answers that demonstrate that you have spent time considering
        the reflection\n    > questions listed above. Reviewers will have an opportunity
        to give feedback\n    > on your submission, and you can respond to that feedback
        and resubmit.\\\r\n4.  \\-\n    In order to get credit for completing this
        prompt, two reviewers need to agree\n    that you have responded to the prompts
        fully. If reviewers don’t feel comfortable\n    making a decision about your
        task submission, they can elevate to an instructor\n    for review. You will
        always have a chance to address feedback from your reviewers\n    and resubmit
        your reflections! Reviewer feedback will show up at the bottom\n    of this
        page, once it’s available. \\\r\n    \\\r\n    \\\r"
      csd2dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 2, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 2 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 2. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  Which lessons
        are particularly\n    tricky to teach in this unit and why? \\\r\n2.  How
        is the content spiraled or\n    scaffolded within the unit? \\\r\n3.  What
        connections or hooks into Unit 1 can\n    be used to motivate early lessons
        in unit 2?\\\r\n4.  Why teach HTML and CSS\n    before starting with JavaScript
        in Game Lab? \\\r\n5.  What two Classroom Practices\n    do you feel are most
        important in this unit? Why?\\\r\n    \\\r\n    > ## Getting Credit\n    >\n
        \   > for Completing this Reflection \\\r\n    > \\\r\n    >\n    > -   Once
        you submit your reflection,\n    >     your response to the prompt above will
        be shared anonymously and reviewed\n    >     by your peers, and you will
        review the work done by other facilitators. Reviewers\n    >     will be looking
        for thoughtful and thorough answers that demonstrate that\n    >     you have
        spent time considering the reflection questions listed above. Reviewers\n
        \   >     will have an opportunity to give feedback on your submission, and
        you can\n    >     respond to that feedback and resubmit.\\\r\n6.  In order
        to get credit for completing\n    this prompt, two reviewers need to agree
        that you have responded to the prompts\n    fully. If reviewers don’t feel
        comfortable making a decision about your task\n    submission, they can elevate
        to an instructor for review. You will always\n    have a chance to address
        feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r\n
        \   \\\r\n    \\\r\n    \\\r"
      csd2dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 2,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 2 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 2. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n1.  How would you respond\n
        \   to a teacher who says they are just going to put students on the computer\n
        \   and let them go at their own pace?\\\r\n2.  What’s the philosophy of using
        Web\n    Lab in this unit? \\\r\n    \\\\t\\* In what ways is Web Lab educational
        rather than\n    professional? \\\r\n    \\\\t\\* What kind of supports exist
        for students working Web\n    Lab?\\\r\n    \\\r\n    \\\r\n    \\\r\n    >
        ## Getting Credit for Completing this Reflection \\\r\n    >\n    > ## \\\r\n
        \   >\n    > Once you submit your reflection, your response to the prompt
        above will be\n    > shared anonymously and reviewed by your peers, and you
        will review the work\n    > done by other facilitators. Reviewers will be
        looking for thoughtful and thorough\n    > answers that demonstrate that you
        have spent time considering the reflection\n    > questions listed above.
        Reviewers will have an opportunity to give feedback\n    > on your submission,
        and you can respond to that feedback and resubmit.\\\r\n3.  \\-\n    In order
        to get credit for completing this prompt, two reviewers need to agree\n    that
        you have responded to the prompts fully. If reviewers don’t feel comfortable\n
        \   making a decision about your task submission, they can elevate to an instructor\n
        \   for review. You will always have a chance to address feedback from your
        reviewers\n    and resubmit your reflections! Reviewer feedback will show
        up at the bottom\n    of this page, once it’s available. \\\r\n    \\\r\n
        \   \\\r\n    \\\r"
      csd3dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 3,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 3\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 3. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What summative\n    and formative assessment opportunities are built into
        the unit? \\\r\n    \\\\t\\* What’s\n    the role of the project(s) in the
        unit? \\\r\n    \\\\t\\* How does the project(s) apply\n    content and skills
        that were developed during the unit? \\\r\n2.  Which student\n    practices
        (PPCCC) are honed the most in this unit through the activities and\n    projects?
        \\\r\n3.  What are the core 2017 CSTA standards concepts (algorithms\n    &
        programming, computing systems, data analysis, impacts of computing, and\n
        \   networks & the internet), and practices (Fostering an Inclusive Computing\n
        \   Culture, Collaborating Around Computing, Recognizing and Defining Computational\n
        \   Problems, Developing and Using Abstractions, Creating Computational Artifacts,\n
        \   Testing and Refining Computational Artifacts, and Communicating About
        Computing)\n    emphasized in this unit? How are they emphasized?\\\r\n    \\\r\n
        \   > ## Getting Credit\n    >\n    > for Completing this Reflection \\\r\n
        \   > \\\r\n    >\n    > -   Once you submit your reflection,\n    >     your
        response to the prompt above will be shared anonymously and reviewed\n    >
        \    by your peers, and you will review the work done by other facilitators.
        Reviewers\n    >     will be looking for thoughtful and thorough answers that
        demonstrate that\n    >     you have spent time considering the reflection
        questions listed above. Reviewers\n    >     will have an opportunity to give
        feedback on your submission, and you can\n    >     respond to that feedback
        and resubmit.\\\r\n4.  In order to get credit for completing\n    this prompt,
        two reviewers need to agree that you have responded to the prompts\n    fully.
        If reviewers don’t feel comfortable making a decision about your task\n    submission,
        they can elevate to an instructor for review. You will always\n    have a
        chance to address feedback from your reviewers and resubmit your reflections!\n
        \   Reviewer feedback will show up at the bottom of this page, once it’s available.\n
        \   \\\r\n    \\\r"
      csd3dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 3, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 3 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 3. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  Which lessons
        are particularly\n    tricky to teach in this unit and why?\\\r\n2.  Which
        lessons are particularly\n    foundational in the unit and why?\\\r\n3.  How
        is the content spiraled or scaffolded\n    within the unit? \\\r\n4.  How
        would you recommend a teacher differentiate instruction\n    in this unit
        if their students had a wide range of background with programming?\\\r\n    \\\r\n
        \   > ## \n    >\n    > Getting Credit for Completing this Reflection \\\r\n
        \   > \\\r\n    >\n    > -   Once you submit your\n    >     reflection, your
        response to the prompt above will be shared anonymously and\n    >     reviewed
        by your peers, and you will review the work done by other facilitators.\n
        \   >     Reviewers will be looking for thoughtful and thorough answers that
        demonstrate\n    >     that you have spent time considering the reflection
        questions listed above.\n    >     Reviewers will have an opportunity to give
        feedback on your submission, and\n    >     you can respond to that feedback
        and resubmit.\\\r\n5.  In order to get credit\n    for completing this prompt,
        two reviewers need to agree that you have responded\n    to the prompts fully.
        If reviewers don’t feel comfortable making a decision\n    about your task
        submission, they can elevate to an instructor for review.\n    You will always
        have a chance to address feedback from your reviewers and\n    resubmit your
        reflections! Reviewer feedback will show up at the bottom of\n    this page,
        once it’s available. \\\r\n    \\\r\n    \\\r\n    \\\r"
      csd3dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 3,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 3 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 3. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n1.  What’s the role\n
        \   of the teacher in this unit, where much of the computer science content
        is\n    embedded in the levels?\\\r\n    \\\\t\\* What’s the philosophy of
        programming in Game\n    Lab? \\\r\n    \\\\t\\* In what ways is Game Lab
        educational rather than professional?\n    \\\r\n    \\\\t\\* What kind of
        supports exist for students using Game Lab?\\\r\n2.  What\n    does a teacher
        need to keep in mind to help their students transition from\n    Web Lab to
        Game Lab?\\\r\n    \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit for Completing
        this\n    >\n    > Reflection \\\r\n    > \\\r\n    >\n    > -   Once you
        submit your reflection, your response to the\n    >     prompt above will
        be shared anonymously and reviewed by your peers, and you\n    >     will
        review the work done by other facilitators. Reviewers will be looking\n    >
        \    for thoughtful and thorough answers that demonstrate that you have spent
        time\n    >     considering the reflection questions listed above. Reviewers
        will have an\n    >     opportunity to give feedback on your submission, and
        you can respond to that\n    >     feedback and resubmit.\\\r\n3.  In order
        to get credit for completing this prompt,\n    two reviewers need to agree
        that you have responded to the prompts fully.\n    If reviewers don’t feel
        comfortable making a decision about your task submission,\n    they can elevate
        to an instructor for review. You will always have a chance\n    to address
        feedback from your reviewers and resubmit your reflections! Reviewer\n    feedback
        will show up at the bottom of this page, once it’s available. \\\r\n\n\\\r\n\\\r\n\\\r"
      csd4dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 4,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 4\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 4. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What skills and\n    knowledge should students leave the unit with? What
        summative and formative\n    assessment opportunities are built into the unit
        to assess those skills and\n    knowledge?\\\r\n2.  What kinds of special
        considerations come with the group\n    project in this unit?\\\r\n3.  What
        are the core 2017 CSTA standards concepts\n    (algorithms & programming,
        computing systems, data analysis, impacts of computing,\n    and networks
        & the internet), and practices (Fostering an Inclusive Computing\n    Culture,
        Collaborating Around Computing, Recognizing and Defining Computational\n    Problems,
        Developing and Using Abstractions, Creating Computational Artifacts,\n    Testing
        and Refining Computational Artifacts, and Communicating About Computing)\n
        \   emphasized in this unit? How are they emphasized?\\\r\n    \\\r\n    >
        ## Getting Credit\n    >\n    > for Completing this Reflection \\\r\n    >
        \\\r\n    >\n    > -   Once you submit your reflection,\n    >     your response
        to the prompt above will be shared anonymously and reviewed\n    >     by
        your peers, and you will review the work done by other facilitators. Reviewers\n
        \   >     will be looking for thoughtful and thorough answers that demonstrate
        that\n    >     you have spent time considering the reflection questions listed
        above. Reviewers\n    >     will have an opportunity to give feedback on your
        submission, and you can\n    >     respond to that feedback and resubmit.\\\r\n4.
        \ In order to get credit for completing\n    this prompt, two reviewers need
        to agree that you have responded to the prompts\n    fully. If reviewers don’t
        feel comfortable making a decision about your task\n    submission, they can
        elevate to an instructor for review. You will always\n    have a chance to
        address feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r"
      csd4dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 4, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 4 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 4. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  CS Discoveries
        is set\n    up to allow for the class to be taught as two separate semesters
        where Unit\n    4 may be the first unit of a new course. What is the role
        of this unit in\n    kicking off semester 2 of the curriculum?\\\r\n2.  How
        is the problem solving\n    process used in this unit? How it is connected
        to how they used the problem\n    solving process in Units 1 to 3?\\\r\n3.
        \ Where do you see the Curriculum Values\n    and philosophy emphasized in
        this unit?\\\r\n    \\\r\n    > ## Getting Credit for Completing\n    >\n
        \   > this Reflection \\\r\n    > \\\r\n    >\n    > -   Once you submit your
        reflection, your response\n    >     to the prompt above will be shared anonymously
        and reviewed by your peers,\n    >     and you will review the work done by
        other facilitators. Reviewers will be\n    >     looking for thoughtful and
        thorough answers that demonstrate that you have\n    >     spent time considering
        the reflection questions listed above. Reviewers will\n    >     have an opportunity
        to give feedback on your submission, and you can respond\n    >     to that
        feedback and resubmit.\\\r\n4.  In order to get credit for completing\n    this
        prompt, two reviewers need to agree that you have responded to the prompts\n
        \   fully. If reviewers don’t feel comfortable making a decision about your
        task\n    submission, they can elevate to an instructor for review. You will
        always\n    have a chance to address feedback from your reviewers and resubmit
        your reflections!\n    Reviewer feedback will show up at the bottom of this
        page, once it’s available.\n    \\\r\n    \\\r\n    \\\r"
      csd4dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 4,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 4 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 4. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n1.  App Lab is used\n
        \   in later lessons in this unit. What is the role of App Lab in this unit?
        How\n    is it different from other times in the curriculum a tool is present?\\\r\n
        \   \\\r\n    \\\r\n    > ## \n    >\n    > Getting Credit for Completing
        this Reflection \\\r\n    > \\\r\n    >\n    > -   Once you submit your\n
        \   >     reflection, your response to the prompt above will be shared anonymously
        and\n    >     reviewed by your peers, and you will review the work done by
        other facilitators.\n    >     Reviewers will be looking for thoughtful and
        thorough answers that demonstrate\n    >     that you have spent time considering
        the reflection questions listed above.\n    >     Reviewers will have an opportunity
        to give feedback on your submission, and\n    >     you can respond to that
        feedback and resubmit.\\\r\n2.  In order to get credit\n    for completing
        this prompt, two reviewers need to agree that you have responded\n    to the
        prompts fully. If reviewers don’t feel comfortable making a decision\n    about
        your task submission, they can elevate to an instructor for review.\n    You
        will always have a chance to address feedback from your reviewers and\n    resubmit
        your reflections! Reviewer feedback will show up at the bottom of\n    this
        page, once it’s available. \\\r\n    \\\r\n    \\\r\n    \\\r"
      csd5dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 5,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 5\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 5. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What skills and\n    knowledge should students leave the unit with? What
        summative and formative\n    assessment opportunities are built into the unit
        to assess those skills and\n    knowledge?\\\r\n2.  What are the core 2017
        CSTA standards concepts (algorithms\n    & programming, computing systems,
        data analysis, impacts of computing, and\n    networks & the internet), and
        practices (Fostering an Inclusive Computing\n    Culture, Collaborating Around
        Computing, Recognizing and Defining Computational\n    Problems, Developing
        and Using Abstractions, Creating Computational Artifacts,\n    Testing and
        Refining Computational Artifacts, and Communicating About Computing)\n    emphasized
        in this unit? How are they emphasized?\\\r\n    \\\r\n    > ## Getting Credit\n
        \   >\n    > for Completing this Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your reflection,\n    >     your response to the prompt
        above will be shared anonymously and reviewed\n    >     by your peers, and
        you will review the work done by other facilitators. Reviewers\n    >     will
        be looking for thoughtful and thorough answers that demonstrate that\n    >
        \    you have spent time considering the reflection questions listed above.
        Reviewers\n    >     will have an opportunity to give feedback on your submission,
        and you can\n    >     respond to that feedback and resubmit.\\\r\n3.  In
        order to get credit for completing\n    this prompt, two reviewers need to
        agree that you have responded to the prompts\n    fully. If reviewers don’t
        feel comfortable making a decision about your task\n    submission, they can
        elevate to an instructor for review. You will always\n    have a chance to
        address feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r"
      csd5dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 5, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 5 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 5. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  Which lessons
        are particularly\n    tricky to teach in this unit and why? \\\r\n2.  What
        is the connection between\n    the first chapter and second chapter of this
        unit?\\\r\n3.  To what depth are\n    students expected to understand binary
        representation systems? How does the\n    order and structure of the lessons
        support this understanding?\\\r\n    \\\r\n    \\\r\n    > ## \n    >\n    >
        Getting Credit for Completing this Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your\n    >     reflection, your response to the prompt
        above will be shared anonymously and\n    >     reviewed by your peers, and
        you will review the work done by other facilitators.\n    >     Reviewers
        will be looking for thoughtful and thorough answers that demonstrate\n    >
        \    that you have spent time considering the reflection questions listed
        above.\n    >     Reviewers will have an opportunity to give feedback on your
        submission, and\n    >     you can respond to that feedback and resubmit.\\\r\n4.
        \ In order to get credit\n    for completing this prompt, two reviewers need
        to agree that you have responded\n    to the prompts fully. If reviewers don’t
        feel comfortable making a decision\n    about your task submission, they can
        elevate to an instructor for review.\n    You will always have a chance to
        address feedback from your reviewers and\n    resubmit your reflections! Reviewer
        feedback will show up at the bottom of\n    this page, once it’s available.
        \\\r\n    \\\r\n    \\\r"
      csd5dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 5,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 5 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 5. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n1.  This unit makes\n
        \   use of a tool optional (teachers can use a spreadsheet tool if they want).\n
        \   If a teacher asked about whether to use a tool or not what kind of things\n
        \   would say/ask in response to support them?\\\r\n    \\\r\n    > ## Getting
        Credit for Completing\n    >\n    > this Reflection \\\r\n    > \\\r\n    >\n
        \   > -   Once you submit your reflection, your response\n    >     to the
        prompt above will be shared anonymously and reviewed by your peers,\n    >
        \    and you will review the work done by other facilitators. Reviewers will
        be\n    >     looking for thoughtful and thorough answers that demonstrate
        that you have\n    >     spent time considering the reflection questions listed
        above. Reviewers will\n    >     have an opportunity to give feedback on your
        submission, and you can respond\n    >     to that feedback and resubmit.\\\r\n2.
        \ In order to get credit for completing\n    this prompt, two reviewers need
        to agree that you have responded to the prompts\n    fully. If reviewers don’t
        feel comfortable making a decision about your task\n    submission, they can
        elevate to an instructor for review. You will always\n    have a chance to
        address feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r\n
        \   \\\r\n    \\\r"
      csd6dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 6,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 6\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 6. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What skills and\n    knowledge should students leave this unit with? What
        summative and formative\n    assessment opportunities are built into the unit
        to assess those skills and\n    knowledge?\\\r\n2.  What are the core 2017
        CSTA standards concepts (algorithms\n    & programming, computing systems,
        data analysis, impacts of computing, and\n    networks & the internet), and
        practices (Fostering an Inclusive Computing\n    Culture, Collaborating Around
        Computing, Recognizing and Defining Computational\n    Problems, Developing
        and Using Abstractions, Creating Computational Artifacts,\n    Testing and
        Refining Computational Artifacts, and Communicating About Computing)\n    emphasized
        in this unit? How are they emphasized?\\\r\n    \\\r\n    > ## Getting Credit\n
        \   >\n    > for Completing this Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your reflection,\n    >     your response to the prompt
        above will be shared anonymously and reviewed\n    >     by your peers, and
        you will review the work done by other facilitators. Reviewers\n    >     will
        be looking for thoughtful and thorough answers that demonstrate that\n    >
        \    you have spent time considering the reflection questions listed above.
        Reviewers\n    >     will have an opportunity to give feedback on your submission,
        and you can\n    >     respond to that feedback and resubmit.\\\r\n3.  In
        order to get credit for completing\n    this prompt, two reviewers need to
        agree that you have responded to the prompts\n    fully. If reviewers don’t
        feel comfortable making a decision about your task\n    submission, they can
        elevate to an instructor for review. You will always\n    have a chance to
        address feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r"
      csd6dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 6, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 6 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 6. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  Which lessons
        are particularly\n    tricky to teach in this unit and why?\\\r\n2.  Which
        lessons are particularly\n    foundational in the unit?\\\r\n3.  Which programming
        skills from Unit 3 does\n    this unit rely upon? What new skills are introduced?\\\r\n4.
        \ How does the way\n    students program with the Circuit Playground connect
        back to the Input-Output-Store-Process\n    model from Unit 1?\\\r\n    \\\r\n
        \   > ## Getting Credit for Completing this Reflection\n    >\n    > \\\r\n
        \   > \\\r\n    >\n    > -   Once you submit your reflection, your response
        to the prompt above\n    >     will be shared anonymously and reviewed by
        your peers, and you will review\n    >     the work done by other facilitators.
        Reviewers will be looking for thoughtful\n    >     and thorough answers that
        demonstrate that you have spent time considering\n    >     the reflection
        questions listed above. Reviewers will have an opportunity\n    >     to give
        feedback on your submission, and you can respond to that feedback\n    >     and
        resubmit.\\\r\n5.  In order to get credit for completing this prompt, two\n
        \   reviewers need to agree that you have responded to the prompts fully.
        If reviewers\n    don’t feel comfortable making a decision about your task
        submission, they\n    can elevate to an instructor for review. You will always
        have a chance to\n    address feedback from your reviewers and resubmit your
        reflections! Reviewer\n    feedback will show up at the bottom of this page,
        once it’s available. \\\r\n\n\\\r\n\\\r"
      csd6dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 6,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 6 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 6. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n1.  What advice do\n
        \   you have for teachers about how to handle the transition from programming\n
        \   in Game Lab to programming in App Lab? \\\r\n    \\\\t\\* What’s the philosophy
        of programming\n    in App Lab with Maker Toolkit? \\\r\n2.  In what ways
        are the tools in the unit\n    educational rather than professional? \\\r\n
        \   \\\r\n    > ## Getting Credit for Completing\n    >\n    > this Reflection
        \\\r\n    > \\\r\n    >\n    > -   Once you submit your reflection, your response\n
        \   >     to the prompt above will be shared anonymously and reviewed by your
        peers,\n    >     and you will review the work done by other facilitators.
        Reviewers will be\n    >     looking for thoughtful and thorough answers that
        demonstrate that you have\n    >     spent time considering the reflection
        questions listed above. Reviewers will\n    >     have an opportunity to give
        feedback on your submission, and you can respond\n    >     to that feedback
        and resubmit.\\\r\n3.  In order to get credit for completing\n    this prompt,
        two reviewers need to agree that you have responded to the prompts\n    fully.
        If reviewers don’t feel comfortable making a decision about your task\n    submission,
        they can elevate to an instructor for review. You will always\n    have a
        chance to address feedback from your reviewers and resubmit your reflections!\n
        \   Reviewer feedback will show up at the bottom of this page, once it’s available.\n
        \   \\\r\n    \\\r\n    \\\r"
      csp-post-survey-2017-FR: As-tu quelque chose à ajouter à propos de ton expérience
        du cours ?
      csp-post-survey-2017-FR_2018: Réflexions finales sur le cours ou ton expérience.
      csp-post-survey-2017-q36-e: 'Je suis inquiet pour une autre raison :'
      csp-post-survey-2017-q36-e_2018: 'Je suis inquiet pour une autre raison :'
      csp-post-survey-2018-topics-want-FR: Quels autres sujets souhaites-tu apprendre
        à l'avenir ?
      csp-pre-survey-2017-q36-e: 'Je suis inquiet pour une autre raison :'
      csp-pre-survey-2017-q36-e_2018: 'Je suis inquiet pour une autre raison :'
      csp-pre-survey-2017-q36-e_2019: 'Je suis inquiet pour une autre raison :'
      csp-pre-survey-2017-q38: Si oui, quel(s) cours d’informatique as-tu suivi avant
        ton cours d’informatique actuel ?
      csp-pre-survey-2017-q38_2018: Si oui, quel(s) cours d’informatique as-tu suivi
        avant ton cours d’informatique actuel ?
      csp-pre-survey-2017-q38_2019: Si oui, quel(s) cours d’informatique as-tu suivi
        avant ton cours d’informatique actuel ?
      csp-pulse-check-survey-1-q6-FR-U1Ch2: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-1-q6-FR-U1Ch2_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-1-q6-FR-U1Ch2_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-2-q6-FR-U2Ch1: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-2-q6-FR-U2Ch1_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-2-q6-FR-U2Ch1_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-3-q6-FR-U2Ch2: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-3-q6-FR-U2Ch2_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-3-q6-FR-U2Ch2_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-4-q6-FR-U3Ch1: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-4-q6-FR-U3Ch1_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-4-q6-FR-U3Ch1_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-5-q6-FR-U4Ch1: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-5-q6-FR-U4Ch1_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-5-q6-FR-U4Ch1_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-6-q6-FR-U4Ch2: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-6-q6-FR-U5Ch1: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-6-q6-FR-U5Ch1_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-6-q6-FR-U5Ch1_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-7-q6-FR-U5Ch1: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-7-q6-FR-U5Ch2: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-pulse-check-survey-7-q6-FR-U5Ch2_2018: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-7-q6-FR-U5Ch2_2019: Autre chose que tu aimerais faire
        savoir à ton enseignant ?
      csp-pulse-check-survey-8-q6-FR-U5Ch2: Autre chose que tu aimerais faire savoir
        à ton enseignant ?
      csp-thursday-facilitation: "# Thursday Facilitation Reflection\\\r\n\n\\\r\n\n##
        \n\nDiscussion-Based Sessions\\\r\n\\\r\nYou have now seen a couple discussion
        heavy\nsessions. Some specific examples include the Community (Wednesday),
        and Recruitment/Student\nNeeds (Thursday) sessions. What common facilitator
        strategies were used in\nthese sessions?\\\r\n\\\r\n\n-   What are facilitators
        doing?\\\r\n-   What are teachers\n    doing?"
      csp-thursday-pedagogy: "# Thursday Pedagogy Reflection\\\r\n\n\\\r\n\n## \n\nDifferentiation\\\r\n\\\r\nWhat
        strategies have you learned about for differentiating\ninstruction to meet
        diverse learning needs of students in CS Principles? List\nat least two ideas."
      csp-thursday-pedagogy2: "# Tuesday Pedagogy Reflection\n\nPart 1\\\r\n\\\r\n\n##
        Recruiting and Student Needs\\\r\n\n\\\r\nIn the community session\nthis morning
        you talked about recruiting students and meeting students needs\nin the region
        where you work. (If you were not with your region think about\nwhat you experienced
        in this sessions that might apply to your region.)\\\r\n\\\r\n\\*\nWhat were
        common recruiting pain points teachers in your region shared?\\\r\n\\*\nWhat
        were common student support needs teachers in your region shared?\\\r\n\\*\nWhat
        things did you see today that you want to check in on throughout the\nyear?\\\r\n\n-
        \  What recruiting goals do you hope to help accomplish in your region\n    by
        the end of the year?\\\r"
      csp-thursday-unit: "# Thursday Unit Reflection\\\r\n\n\\\r\n\n## \n\nUnit 1
        and Unit 2 Connections\\\r\n\\\r\nWhat connections or hooks into unit 1\nthat
        can be used to motivate early lessons in unit 2?\\\r"
      csp-thursday-unit2: "# Thursday Unit Reflection Part 2\\\r\n\n\\\r\n\n## \n\nPlugged
        Unit\\\r\n\\\r\nWhat’s the role of the teacher in this unit, where much\nof
        the computer science content is embedded in the levels?\\\r"
      csp-tuesday-facilitation: "# Tuesday Facilitation Practice\\\r\n\n\\\r\n\n##
        \n\nTLO\\\r\n\\\r\nYou have seen 2 Model TLOs (taught by facilitators) and
        2 Participant\nTLOs (taught by teachers). What patterns do you notice about
        what facilitators\ndo during these sessions (consider the delivery of the
        lessons and the debriefs\nseparately)?\\\r\n\\\r\n\n-   What are facilitators
        doing during lessons?\\\r\n-   What\n    are facilitators doing during debriefs?
        What are teachers doing?\\\r\n-   In model\n    lessons, how much time is
        split between time when facilitators are talking\n    and time when teachers
        are doing during the lesson? "
      csp-tuesday-pedagogy: "# Tuesday Pedagogy Reflection\\\r\n\n\\\r\n\n## \n\nClassroom
        Practices\\\r\n\\\r\nName two <a href=\"https://docs.google.com/document/d/1trq3FeCBaq2G-CFugZP4ElkJapAqAtoBfl4zf7DbW48/edit#heading=h.f8m5xr9s44e2\">\npedagogical
        approaches</a> you saw modeled in the 5 TLOs you’ve seen in the\npast couple
        of days? \\\r\n\\\r\n\n-   When were they successful?\\\r\n-   What were characteristics\n
        \   of situations where was their room for improvement?"
      csp-tuesday-unit: "# Tuesday Unit Reflection Part 1\\\r\n\n\\\r\n\n## \n\nLesson
        4\\\r\n\\\r\nHow would you respond to a teacher who says ‘what’s the point’\nof
        lesson 4?\\\r"
      csp-tuesday-unit2: "# Tuesday Unit Reflection\\\r\n\n\\\r\n\n## \n\nTechnology
        Issues\\\r\n\\\r\nMany classes have technology issues at the start\nof the
        year (computers are not ready yet, etc). How would you recommend a\nteacher
        approaches the first unit if they are having issues with technology\naccess?\\\r"
      csp-wednesday-facilitation: "# Wednesday Facilitation\n\nReflection\\\r\n\\\r\n\n##
        Facilitator Presentations\\\r\n\n\\\r\nYou have now seen 3\nmorning kick off
        sessions and 3 afternoon wrap up sessions. What common facilitator\nstrategies
        were used in these sessions?\\\r\n\\\r\n\n-   What are facilitators doing?\\\r\n-
        \  \\*\n    What are teachers doing?\\\r\n-   What strategies did you see
        facilitators use\n    to keep teachers engaged?\\\r"
      csp-wednesday-pedagogy: "# Wednesday Pedagogy Reflection\\\r\n\n\\\r\n\n## \n\nBuilding
        Community & Dealing with Barriers\\\r\n\\\r\nIn the community session\nthis
        morning you talked about building community and dealing with barriers\nto
        growing your CS education community locally.(If you were not with your\nregion
        think about what you experienced in this sessions that might apply\nto your
        region.)\\\r\n\\\r\n\n-   What were common barriers teachers in your region\n
        \   shared?\\\r\n-   What barriers do you personally experience that were
        shared by\n    teachers?\\\r\n-   What can you do to help in your local community?\\\r\n-
        \  What\n    things did you see today that you want to check in on throughout
        the year?\\\r\n-   \\*\n    What community development goals do you hope to
        help accomplish in your region\n    by the end of the year?\\\r"
      csp-wednesday-unit: "# Wednesday Unit Reflection\\\r\n\n\\\r\n\n## \n\nInternet
        Simulator Fatigue\\\r\n\\\r\nThis is a very Internet Simulator heavy\nunit.
        What are strategies for dealing with students who are getting fatigued\nby
        the end of the unit?\\\r\n\\\r"
      csp-wednesday-unit2: "# Wednesday Unit Reflection Part\n\n2\\\r\n\\\r\n\n##
        Explaining Internet Simulator\\\r\n\n\\\r\nHow would you explain the\nInternet
        Simulator to a new teacher who is interested in using it?\\\r\n\\\r\n\\*\nIn
        what ways is Internet Simulator an educational rather than professional\ntool?
        \\\r\n\n-   What teaching philosophy seems most effective with the Internet\n
        \   Simulator? \\\r"
      csp1dlp-assessment: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE:\n> before you
        start this reflection, make sure you’ve reviewed the lesson in\n> Unit 1,
        and have a good sense of the the role of assessment across the unit.\n> If
        you haven’t already reviewed the materials, do that now and come back to\n>
        this reflection later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 1\\\r\n\n\\\r\nFor
        this\nreflection, you’re going to consider each of the prompts below and craft
        a\nwritten response that demonstrates your understanding of the lessons in
        Unit\n\n1.  Your response should clearly address each of the items below:
        \\\r\n    \\\r\n2.  1.\n    What’s the role of the practice Performance Task(s),
        or PTs, in the unit?\n    \\\r\n3.  Which PTs are being practiced?\\\r\n4.
        \ How does the practice PT build\n    on what content and skills were developed
        during the unit? \\\r\n5.  What summative\n    and formative assessment opportunities
        are built into the unit? \\\r\n    \\\r\n    \\\r\n    > ## \n    >\n    >
        Getting Credit for Completing this Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your\n    >     reflection, your response to the prompt
        above will be shared anonymously and\n    >     reviewed by your peers, and
        you will review the work done by other facilitators.\n    >     Reviewers
        will be looking for thoughtful and thorough answers that demonstrate\n    >
        \    that you have spent time considering the reflection questions listed
        above.\n    >     Reviewers will have an opportunity to give feedback on your
        submission, and\n    >     you can respond to that feedback and resubmit.\\\r\n6.
        \ In order to get credit\n    for completing this prompt, two reviewers need
        to agree that you have responded\n    to the prompts fully. If reviewers don’t
        feel comfortable making a decision\n    about your task submission, they can
        elevate to an instructor for review.\n    You will always have a chance to
        address feedback from your reviewers and\n    resubmit your reflections! Reviewer
        feedback will show up at the bottom of\n    this page, once it’s available.
        \\\r\n    \\\r\n    \\\r\n    \\\r"
      csp1dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 1, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 1 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 1. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  What skills
        and knowledge\n    should students leave the unit with?\\\r\n\n2.  Which Big
        Idea(s) are students\n    learning the most about? Where and how are those
        BI(s) addressed? \\\r\n\n3.  Which\n    skills or Computational Practices
        are honed through the activities and projects?\n    \\\r\n    \\\r\n\n4.  What
        is the connection between early lessons and later lessons?\\\r\n\n5.  How
        is the content spiraled or scaffolded within the unit? \\\r\n\n6.  What foundation\n
        \   is being laid early on and how is it leveraged throughout the unit? Why?
        \\\r\n\n7.  How would you respond to a teacher who says ‘what’s the point’
        of lesson\n    4? \\\r\n    \\\r\n\n8.  Which lessons are particularly tricky
        to teach in this unit\n    and why? \\\r\n    \\\r\n    > ## Getting Credit
        for Completing this Reflection \\\r\n    >\n    > ## \\\r\n    >\n    > Once
        you submit your reflection, your response to the prompt above will be\n    >
        shared anonymously and reviewed by your peers, and you will review the work\n
        \   > done by other facilitators. Reviewers will be looking for thoughtful
        and thorough\n    > answers that demonstrate that you have spent time considering
        the reflection\n    > questions listed above. Reviewers will have an opportunity
        to give feedback\n    > on your submission, and you can respond to that feedback
        and resubmit.\\\r\n\n9.  \\-\n    In order to get credit for completing this
        prompt, two reviewers need to agree\n    that you have responded to the prompts
        fully. If reviewers don’t feel comfortable\n    making a decision about your
        task submission, they can elevate to an instructor\n    for review. You will
        always have a chance to address feedback from your reviewers\n    and resubmit
        your reflections! Reviewer feedback will show up at the bottom\n    of this
        page, once it’s available. \\\r\n    \\\r\n    \\\r\n    \\\r"
      csp1dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 1,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 1 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 1. Your response\nshould
        clearly address each of the items below: \\\r\n\\\r\n\n-   Why are we using\n
        \   the Internet Simulator rather than teaching without it? \\\r\n-   In what
        ways\n    is the Internet Simulator educational rather than professional?
        \\\r\n-   What’s\n    the philosophy of teaching with the Internet Simulator?
        \\\r\n-   This is a very\n    Internet Simulator heavy unit. What are strategies
        for dealing with students\n    who are getting fatigued by the end of the
        unit? \\\r\n-   Many classes have technology\n    issues at the start of the
        year (computers are not ready yet, etc). How would\n    you recommend a teacher
        approaches the first unit if she’s having issues with\n    technology access?\\\r\n
        \   \\\r\n    \\\r\n    > ## Getting Credit for Completing this Reflection\n
        \   >\n    > \\\r\n    > \\\r\n    >\n    > -   Once you submit your reflection,
        your response to the prompt above\n    >     will be shared anonymously and
        reviewed by your peers, and you will review\n    >     the work done by other
        facilitators. Reviewers will be looking for thoughtful\n    >     and thorough
        answers that demonstrate that you have spent time considering\n    >     the
        reflection questions listed above. Reviewers will have an opportunity\n    >
        \    to give feedback on your submission, and you can respond to that feedback\n
        \   >     and resubmit.\\\r\n-   In order to get credit for completing this
        prompt, two\n    reviewers need to agree that you have responded to the prompts
        fully. If reviewers\n    don’t feel comfortable making a decision about your
        task submission, they\n    can elevate to an instructor for review. You will
        always have a chance to\n    address feedback from your reviewers and resubmit
        your reflections! Reviewer\n    feedback will show up at the bottom of this
        page, once it’s available. \\\r\n\n\\\r\n\\\r\n\\\r"
      csp2dlp-assessment: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE:\n> before you
        start this reflection, make sure you’ve reviewed the lesson in\n> Unit 2,
        and have a good sense of the the role of assessment across the unit.\n> If
        you haven’t already reviewed the materials, do that now and come back to\n>
        this reflection later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 2 \\\r\n\n\\\r\nFor
        this\nreflection, you’re going to consider each of the prompts below and craft
        a\nwritten response that demonstrates your understanding of the lessons in
        Unit\n\n2.  Your response should clearly address each of the items below:
        \\\r\n    \\\r\n3.  1.\n    What’s the role of the practice Performance Task(s),
        or PTs, in the unit?\n    \\\r\n4.  How does the practice Explore PT build
        on what content and skills were\n    developed during the unit? \\\r\n5.  What
        summative and formative assessment\n    opportunities are built into the unit?
        \\\r\n    \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit\n    >\n    >
        for Completing this Reflection \\\r\n    > \\\r\n    >\n    > -   Once you
        submit your reflection,\n    >     your response to the prompt above will
        be shared anonymously and reviewed\n    >     by your peers, and you will
        review the work done by other facilitators. Reviewers\n    >     will be looking
        for thoughtful and thorough answers that demonstrate that\n    >     you have
        spent time considering the reflection questions listed above. Reviewers\n
        \   >     will have an opportunity to give feedback on your submission, and
        you can\n    >     respond to that feedback and resubmit.\\\r\n6.  In order
        to get credit for completing\n    this prompt, two reviewers need to agree
        that you have responded to the prompts\n    fully. If reviewers don’t feel
        comfortable making a decision about your task\n    submission, they can elevate
        to an instructor for review. You will always\n    have a chance to address
        feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r\n
        \   \\\r\n    \\\r\n    \\\r"
      csp2dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 2, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 2 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 2. Your response
        should\nclearly address each of the items below:\\\r\n\\\r\n\n1.  What skills
        and knowledge\n    should students leave the unit with?\\\r\n\n2.  Which Learning
        Objectives (LOs)\n    under the Big Idea of data are explored in the second
        chapter of unit 2? These\n    data-related LOs are in the interest of preparing
        for the Explore Task. How\n    would you explain the lens used to look at
        data in chapter 2 and the connection\n    to the Explore Task?\\\r\n\n3.  Which
        skills or Computational Practices are honed\n    through the activities and
        projects? \\\r\n\n4.  What is the connection between\n    early lessons and
        later lessons?\\\r\n\n5.  What connections or hooks into unit\n    1 that
        can be used to motivate early lessons in unit 2? \\\r\n\n6.  How would you\n
        \   described the connection between chapter 1 and chapter 2 to a teacher?
        \\\r\n\n7.  What foundation is being laid early on and how is it leveraged
        throughout\n    the unit? Why? \\\r\n\n8.  Which lessons are particularly
        tricky to teach in this\n    unit and why? \\\r\n    \\\r\n    \\\r\n    >
        ## Getting Credit for Completing this Reflection\n    >\n    > \\\r\n    >
        \\\r\n    >\n    > -   Once you submit your reflection, your response to the
        prompt above\n    >     will be shared anonymously and reviewed by your peers,
        and you will review\n    >     the work done by other facilitators. Reviewers
        will be looking for thoughtful\n    >     and thorough answers that demonstrate
        that you have spent time considering\n    >     the reflection questions listed
        above. Reviewers will have an opportunity\n    >     to give feedback on your
        submission, and you can respond to that feedback\n    >     and resubmit.\\\r\n\n9.
        \ In order to get credit for completing this prompt, two\n    reviewers need
        to agree that you have responded to the prompts fully. If reviewers\n    don’t
        feel comfortable making a decision about your task submission, they\n    can
        elevate to an instructor for review. You will always have a chance to\n    address
        feedback from your reviewers and resubmit your reflections! Reviewer\n    feedback
        will show up at the bottom of this page, once it’s available. \\\r\n\n\\\r\n\\\r\n\\\r\n\\\r"
      csp2dlp-tools: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you start\n> this reflection,
        make sure you’ve reviewed the lesson in Unit 2, and have\n> a good sense of
        the the role of tools in the lessons. If you haven’t already\n> reviewed the
        materials, do that now and come back to this reflection later.**\\\r\n> \\\r\n>
        \\\r\n\n# \n\nUnit 2 Tool Philosophy and Use\\\r\n\\\r\nFor this reflection,
        you’re going to\nconsider each of the prompts below and craft a written response
        that demonstrates\nyour understanding of the lessons in Unit 2. Your response
        should clearly\naddress each of the items below: \\\r\n\\\r\n\n-   Why are
        we using whatever tools\n    are present in the unit rather than teaching
        without them? \\\r\n-   In what ways\n    are the tools in the unit educational
        rather than professional? \\\r\n-   What’s\n    the philosophy of teaching
        with these tools? \\\r\n    \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit\n
        \   >\n    > for Completing this Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your reflection,\n    >     your response to the prompt
        above will be shared anonymously and reviewed\n    >     by your peers, and
        you will review the work done by other facilitators. Reviewers\n    >     will
        be looking for thoughtful and thorough answers that demonstrate that\n    >
        \    you have spent time considering the reflection questions listed above.
        Reviewers\n    >     will have an opportunity to give feedback on your submission,
        and you can\n    >     respond to that feedback and resubmit.\\\r\n-   In
        order to get credit for completing\n    this prompt, two reviewers need to
        agree that you have responded to the prompts\n    fully. If reviewers don’t
        feel comfortable making a decision about your task\n    submission, they can
        elevate to an instructor for review. You will always\n    have a chance to
        address feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r\n
        \   \\\r"
      csp3dlp-assessment: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE:\n> before you
        start this reflection, make sure you’ve reviewed the lesson in\n> Unit 3,
        and have a good sense of the the role of assessment across the unit.\n> If
        you haven’t already reviewed the materials, do that now and come back to\n>
        this reflection later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 3 \\\r\n\n\\\r\nFor
        this\nreflection, you’re going to consider each of the prompts below and craft
        a\nwritten response that demonstrates your understanding of the lessons in
        Unit\n\n3.  Your response should clearly address each of the items below:
        \\\r\n    \\\r\n4.  1.\n    What’s the role of the practice Performance Task(s),
        or PTs, in the unit?\n    \\\r\n5.  How does the practice Create PT build
        on what content and skills were\n    developed during the unit? \\\r\n6.  What
        summative and formative assessment\n    opportunities are built into the unit?
        \\\r\n    \\\r\n    \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit\n    >\n
        \   > for Completing this Reflection \\\r\n    > \\\r\n    >\n    > -   Once
        you submit your reflection,\n    >     your response to the prompt above will
        be shared anonymously and reviewed\n    >     by your peers, and you will
        review the work done by other facilitators. Reviewers\n    >     will be looking
        for thoughtful and thorough answers that demonstrate that\n    >     you have
        spent time considering the reflection questions listed above. Reviewers\n
        \   >     will have an opportunity to give feedback on your submission, and
        you can\n    >     respond to that feedback and resubmit.\\\r\n7.  In order
        to get credit for completing\n    this prompt, two reviewers need to agree
        that you have responded to the prompts\n    fully. If reviewers don’t feel
        comfortable making a decision about your task\n    submission, they can elevate
        to an instructor for review. You will always\n    have a chance to address
        feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r\n
        \   \\\r\n    \\\r\n    \\\r"
      csp3dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 3, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 3 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 3. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  What skills
        and knowledge\n    should students leave the unit with?\\\r\n\n2.  Which Big
        Idea(s) are students\n    learning the most about? Where and how are those
        BI(s) addressed? \\\r\n\n3.  Which\n    skills or Computational Practices
        are honed through the activities and projects?\n    \\\r\n\n4.  What is the
        connection between early lessons and later lessons?\\\r\n\n5.  How is the
        content spiraled or scaffolded within the unit? \\\r\n\n6.  How would\n    you
        respond to a teacher who says ‘what’s the point’ of lessons 1 - 3? \\\r\n\n7.
        \ Unit 3 starts with sequencing, functions, and functions with parameters,\n
        \   which is not a typical way of starting a unit on programming (many lead
        with\n    variables, for example). What are some of the potential reasons
        and benefits\n    of doing it this way?\\\r\n\n8.  What foundation is being
        laid early on and how\n    is it leveraged throughout the unit? Why? \\\r\n\n9.
        \ Which lessons are particularly\n    tricky to teach in this unit and why?
        \\\r\n\n10. How would you recommend a teacher\n    differentiate instruction
        in this unit if her students had a wide range of\n    background with programming?\\\r\n
        \   \\\r\n    \\\r\n    > ## Getting Credit for Completing\n    >\n    > this
        Reflection \\\r\n    > \\\r\n    >\n    > -   Once you submit your reflection,
        your response\n    >     to the prompt above will be shared anonymously and
        reviewed by your peers,\n    >     and you will review the work done by other
        facilitators. Reviewers will be\n    >     looking for thoughtful and thorough
        answers that demonstrate that you have\n    >     spent time considering the
        reflection questions listed above. Reviewers will\n    >     have an opportunity
        to give feedback on your submission, and you can respond\n    >     to that
        feedback and resubmit.\\\r\n\n11. In order to get credit for completing\n
        \   this prompt, two reviewers need to agree that you have responded to the
        prompts\n    fully. If reviewers don’t feel comfortable making a decision
        about your task\n    submission, they can elevate to an instructor for review.
        You will always\n    have a chance to address feedback from your reviewers
        and resubmit your reflections!\n    Reviewer feedback will show up at the
        bottom of this page, once it’s available.\n    \\\r\n    \\\r\n    \\\r\n
        \   \\\r"
      csp3dlp-tools: "\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this
        reflection, make sure you’ve reviewed the lesson in Unit 3, and\n> have a
        good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 3 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 3. Your response\nshould
        clearly address each of the items below:\\\r\n\\\r\n\n-   Why are we using\n
        \   Applab in Code Studio rather than teaching with another tool? \\\r\n-
        \  In what\n    ways is Applab educational rather than professional? \\\r\n-
        \  What’s the role\n    of the teacher in this unit, where much of the cs
        content is embedded in the\n    levels?\\\r\n    \\\r\n    \\\r\n    > ##
        Getting Credit for Completing this Reflection \\\r\n    >\n    > ## \\\r\n
        \   >\n    > Once you submit your reflection, your response to the prompt
        above will be\n    > shared anonymously and reviewed by your peers, and you
        will review the work\n    > done by other facilitators. Reviewers will be
        looking for thoughtful and thorough\n    > answers that demonstrate that you
        have spent time considering the reflection\n    > questions listed above.
        Reviewers will have an opportunity to give feedback\n    > on your submission,
        and you can respond to that feedback and resubmit.\\\r\n-   \\-\n    In order
        to get credit for completing this prompt, two reviewers need to agree\n    that
        you have responded to the prompts fully. If reviewers don’t feel comfortable\n
        \   making a decision about your task submission, they can elevate to an instructor\n
        \   for review. You will always have a chance to address feedback from your
        reviewers\n    and resubmit your reflections! Reviewer feedback will show
        up at the bottom\n    of this page, once it’s available. \\\r\n    \\\r"
      csp4dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 4,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 4 \\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 4. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What’s the role\n    of the practice Performance Task(s), or PTs, in the
        unit? \\\r\n2.  What summative\n    and formative assessment opportunities
        are built into the unit? \\\r\n    \\\r\n    \\\r\n    \\\r\n    > ## \n    >\n
        \   > Getting Credit for Completing this Reflection \\\r\n    > \\\r\n    >\n
        \   > -   Once you submit your\n    >     reflection, your response to the
        prompt above will be shared anonymously and\n    >     reviewed by your peers,
        and you will review the work done by other facilitators.\n    >     Reviewers
        will be looking for thoughtful and thorough answers that demonstrate\n    >
        \    that you have spent time considering the reflection questions listed
        above.\n    >     Reviewers will have an opportunity to give feedback on your
        submission, and\n    >     you can respond to that feedback and resubmit.\\\r\n3.
        \ In order to get credit\n    for completing this prompt, two reviewers need
        to agree that you have responded\n    to the prompts fully. If reviewers don’t
        feel comfortable making a decision\n    about your task submission, they can
        elevate to an instructor for review.\n    You will always have a chance to
        address feedback from your reviewers and\n    resubmit your reflections! Reviewer
        feedback will show up at the bottom of\n    this page, once it’s available.
        \\\r\n    \\\r\n    \\\r"
      csp4dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 4, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 4 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 4. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  Which Big
        Idea(s) are\n    students learning the most about? Where and how are those
        BI(s) addressed?\n    \\\r\n2.  Which skills or Computational Practices are
        honed through the activities\n    and projects? \\\r\n3.  What recommendations
        do you have about the optional lessons\n    in this unit? (when and why would
        a teacher choose to use them?)\\\r\n4.  How\n    can the material covered
        in the earlier units be connected to Unit 4 topics?\n    (specifically the
        internet and data) \\\r\n5.  Which lessons are particularly\n    tricky to
        teach in this unit and why? \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit
        for\n    >\n    > Completing this Reflection \\\r\n    > \\\r\n    >\n    >
        -   Once you submit your reflection, your\n    >     response to the prompt
        above will be shared anonymously and reviewed by your\n    >     peers, and
        you will review the work done by other facilitators. Reviewers\n    >     will
        be looking for thoughtful and thorough answers that demonstrate that\n    >
        \    you have spent time considering the reflection questions listed above.
        Reviewers\n    >     will have an opportunity to give feedback on your submission,
        and you can\n    >     respond to that feedback and resubmit.\\\r\n6.  In
        order to get credit for completing\n    this prompt, two reviewers need to
        agree that you have responded to the prompts\n    fully. If reviewers don’t
        feel comfortable making a decision about your task\n    submission, they can
        elevate to an instructor for review. You will always\n    have a chance to
        address feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r"
      csp4dlp-tools: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you start\n> this reflection,
        make sure you’ve reviewed the lesson in Unit 4, and have\n> a good sense of
        the the role of tools in the lessons. If you haven’t already\n> reviewed the
        materials, do that now and come back to this reflection later.**\\\r\n> \\\r\n>
        \\\r\n\n# \n\nUnit 4 Tool Philosophy and Use\\\r\n\\\r\nFor this reflection,
        you’re going to\nconsider each of the prompts below and craft a written response
        that demonstrates\nyour understanding of the lessons in Unit 4. Your response
        should clearly\naddress each of the items below:\\\r\n\\\r\n\n-   Why are
        we using whatever tools\n    are present in the unit rather than teaching
        without them? \\\r\n-   What’s the\n    philosophy of teaching with these
        tools? \\\r\n    \\\r\n    \\\r\n    > ## Getting Credit for\n    >\n    >
        Completing this Reflection \\\r\n    > \\\r\n    >\n    > -   Once you submit
        your reflection, your\n    >     response to the prompt above will be shared
        anonymously and reviewed by your\n    >     peers, and you will review the
        work done by other facilitators. Reviewers\n    >     will be looking for
        thoughtful and thorough answers that demonstrate that\n    >     you have
        spent time considering the reflection questions listed above. Reviewers\n
        \   >     will have an opportunity to give feedback on your submission, and
        you can\n    >     respond to that feedback and resubmit.\\\r\n-   In order
        to get credit for completing\n    this prompt, two reviewers need to agree
        that you have responded to the prompts\n    fully. If reviewers don’t feel
        comfortable making a decision about your task\n    submission, they can elevate
        to an instructor for review. You will always\n    have a chance to address
        feedback from your reviewers and resubmit your reflections!\n    Reviewer
        feedback will show up at the bottom of this page, once it’s available.\n    \\\r"
      csp5dlp-assessment: "<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start this
        reflection, make sure you’ve reviewed the lesson in Unit 5,\n> and have a
        good sense of the the role of assessment across the unit. If you\n> haven’t
        already reviewed the materials, do that now and come back to this\n> reflection
        later.**\\\r\n> \\\r\n> \\\r\n\n# Assessment in Unit 5\\\r\n\n\\\r\nFor this
        reflection,\nyou’re going to consider each of the prompts below and craft
        a written response\nthat demonstrates your understanding of the lessons in
        Unit 5. Your response\nshould clearly address each of the items below: \\\r\n\\\r\n\n1.
        \ What content that’s\n    covered in unit 5 is required for the create PT?
        What content is going to\n    be on the fixed-response exam (as shown in the
        exam reference guide in the\n    course and exam description) but isn’t required
        for the performance task?\n    \\\r\n2.  What summative and formative assessment
        opportunities are built into\n    the unit? \\\r\n    \\\r\n    \\\r\n    \\\r\n
        \   \\\r\n    > ## Getting Credit for Completing this Reflection\n    >\n
        \   > \\\r\n    > \\\r\n    >\n    > -   Once you submit your reflection,
        your response to the prompt above\n    >     will be shared anonymously and
        reviewed by your peers, and you will review\n    >     the work done by other
        facilitators. Reviewers will be looking for thoughtful\n    >     and thorough
        answers that demonstrate that you have spent time considering\n    >     the
        reflection questions listed above. Reviewers will have an opportunity\n    >
        \    to give feedback on your submission, and you can respond to that feedback\n
        \   >     and resubmit.\\\r\n3.  In order to get credit for completing this
        prompt, two\n    reviewers need to agree that you have responded to the prompts
        fully. If reviewers\n    don’t feel comfortable making a decision about your
        task submission, they\n    can elevate to an instructor for review. You will
        always have a chance to\n    address feedback from your reviewers and resubmit
        your reflections! Reviewer\n    feedback will show up at the bottom of this
        page, once it’s available. \\\r\n\n\\\r\n\\\r\n\\\r"
      csp5dlp-lessons: "<br><br>\\\r\n\\\r\n\n> **NOTE: before you\n> start this reflection,
        make sure you’ve reviewed the lesson in Unit 5, and\n> have a good sense of
        the connections between lessons. If you haven’t already\n> reviewed the materials,
        do that now and come back to this reflection later.**\\\r\n> \\\r\n> \\\r\n\n#
        \n\nUnit 5 Lesson Connections and Philosophy\\\r\n\\\r\nFor this reflection,
        you’re\ngoing to consider each of the prompts below and craft a written response
        that\ndemonstrates your understanding of the lessons in Unit 5. Your response
        should\nclearly address each of the items below: \\\r\n\\\r\n\n1.  Which Big
        Idea(s) are\n    students learning the most about? Where and how are those
        BI(s) addressed?\n    \\\r\n2.  Which skills or Computational Practices are
        honed through the activities\n    and projects? \\\r\n3.  What advice do you
        have for teachers about how to handle\n    the transition from turtle (back
        in unit 3)  to event-driven programming (here\n    in unit 5)?  \\\r\n4.  What
        lessons are foundational to this unit? How are they\n    important to success
        in later lessons?\\\r\n5.  Which lessons are particularly\n    tricky to teach
        in this unit and why? \\\r\n    \\\r\n    > ## Getting Credit for Completing\n
        \   >\n    > this Reflection \\\r\n    > \\\r\n    >\n    > -   Once you submit
        your reflection, your response\n    >     to the prompt above will be shared
        anonymously and reviewed by your peers,\n    >     and you will review the
        work done by other facilitators. Reviewers will be\n    >     looking for
        thoughtful and thorough answers that demonstrate that you have\n    >     spent
        time considering the reflection questions listed above. Reviewers will\n    >
        \    have an opportunity to give feedback on your submission, and you can
        respond\n    >     to that feedback and resubmit.\\\r\n6.  In order to get
        credit for completing\n    this prompt, two reviewers need to agree that you
        have responded to the prompts\n    fully. If reviewers don’t feel comfortable
        making a decision about your task\n    submission, they can elevate to an
        instructor for review. You will always\n    have a chance to address feedback
        from your reviewers and resubmit your reflections!\n    Reviewer feedback
        will show up at the bottom of this page, once it’s available.\n    \\\r\n
        \   \\\r"
      csp5dlp-tools: "\\\r\n\\\r\n<br><br>\\\r\n\\\r\n\n> **NOTE: before\n> you start
        this reflection, make sure you’ve reviewed the lesson in Unit 5,\n> and have
        a good sense of the the role of tools in the lessons. If you haven’t\n> already
        reviewed the materials, do that now and come back to this reflection\n> later.**\\\r\n>
        \\\r\n> \\\r\n\n# Unit 5 Tool Philosophy and Use\\\r\n\n\\\r\nFor this reflection,\nyou’re
        going to consider each of the prompts below and craft a written response\nthat
        demonstrates your understanding of the lessons in Unit 5. Your response\nshould
        clearly address each of the items below:\\\r\n\\\r\n\n1.  What’s the philosophy\n
        \   of teaching with Applab? \\\r\n2.  What’s the general cadence and structure
        of\n    a lesson in unit 5? _(how are the levels in a typical lesson paced
        out, and\n    what’s the general progression)_\\\r\n    \\\r\n    \\\r\n    \\\r\n
        \   > ## Getting Credit for Completing\n    >\n    > this Reflection \\\r\n
        \   > \\\r\n    >\n    > -   Once you submit your reflection, your response\n
        \   >     to the prompt above will be shared anonymously and reviewed by your
        peers,\n    >     and you will review the work done by other facilitators.
        Reviewers will be\n    >     looking for thoughtful and thorough answers that
        demonstrate that you have\n    >     spent time considering the reflection
        questions listed above. Reviewers will\n    >     have an opportunity to give
        feedback on your submission, and you can respond\n    >     to that feedback
        and resubmit.\\\r\n3.  In order to get credit for completing\n    this prompt,
        two reviewers need to agree that you have responded to the prompts\n    fully.
        If reviewers don’t feel comfortable making a decision about your task\n    submission,
        they can elevate to an instructor for review. You will always\n    have a
        chance to address feedback from your reviewers and resubmit your reflections!\n
        \   Reviewer feedback will show up at the bottom of this page, once it’s available."
      csp_U3_plan_code_FR: "<img src=\"https://images.code.org/01d3b0664443216b4363ec31914e592a-image-1506460763004.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\n<br>\\\r\n\\\r\nIn this lesson we talked about\nhow to
        build up solutions to larger programming problems with functions.  Plan\nthe
        code that you would use to draw this image (shown at right). Describe\neach
        of the functions that you would create. You should not write all the\ncode,
        only the names of the functions that you would create with a brief description\nof
        what each function would do. \\\r\n\\\r\nWrite your plan following the format:\\\r\n\\\r\n\n<div\nstyle=\"clear:
        both\"> </div>\r\n\r\n    Name of function - description of\nwhat it does\r\n\r\n
        \   Name of function 2 - description of what it does\r\n    ..."
      csp_U3_plan_code_FR_2018: "<img src=\"https://images.code.org/01d3b0664443216b4363ec31914e592a-image-1506460763004.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\n<br>\\\r\n\\\r\nIn this lesson we talked about\nhow to
        build up solutions to larger programming problems with functions.  Plan\nthe
        code that you would use to draw this image (shown at right). Describe\neach
        of the functions that you would create. You should not write all the\ncode,
        only the names of the functions that you would create with a brief description\nof
        what each function would do. \\\r\n\\\r\nWrite your plan following the format:\\\r\n\\\r\n\n<div\nstyle=\"clear:
        both\"> </div>\r\n\r\n    Name of function - description of\nwhat it does\r\n\r\n
        \   Name of function 2 - description of what it does\r\n    ..."
      csp_U3_plan_code_FR_2019: "<img src=\"https://images.code.org/01d3b0664443216b4363ec31914e592a-image-1506460763004.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\n<br>\\\r\n\\\r\nIn this lesson we talked about\nhow to
        build up solutions to larger programming problems with functions.  Plan\nthe
        code that you would use to draw this image (shown at right). Describe\neach
        of the functions that you would create. You should not write all the\ncode,
        only the names of the functions that you would create with a brief description\nof
        what each function would do. \\\r\n\\\r\nWrite your plan following the format:\\\r\n\\\r\n\n<div\nstyle=\"clear:
        both\"> </div>\r\n\r\n    Name of function - description of\nwhat it does\r\n\r\n
        \   Name of function 2 - description of what it does\r\n    ..."
      csp_U3_square_v_rect_FR: "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\nIn this lesson you wrote code to make the turtle\ndraw
        squares. Briefly describe how the code for drawing a rectangle would\nbe different
        than drawing a square.  (Example rectangle at right)"
      csp_U3_square_v_rect_FR_2018: "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\nIn this lesson you wrote code to make the turtle\ndraw
        squares. Briefly describe how the code for drawing a rectangle would\nbe different
        than drawing a square.  (Example rectangle at right)"
      csp_U3_square_v_rect_FR_2019: "<img src=\"https://images.code.org/2f9b8b6a1c42b7c6c881f89867352907-image-1506460228029.png\"\nstyle=\"float:
        right\">\\\r\n\\\r\nIn this lesson you wrote code to make the turtle\ndraw
        squares. Briefly describe how the code for drawing a rectangle would\nbe different
        than drawing a square.  (Example rectangle at right)"
      csp_affirmation_control: "This brief activity allows\nyou to reflect about what
        you have learned in this course so far. It is provided\nto you by your teacher,
        but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics in the course
        may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_2: "This brief activity allows\nyou to reflect about
        what you have learned in this course so far. It is provided\nto you by your
        teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics in
        the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_2018: "This brief activity allows\nyou to reflect about
        what you have learned in this course so far. It is provided\nto you by your
        teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics in
        the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_2_2018: "This brief activity allows\nyou to reflect
        about what you have learned in this course so far. It is provided\nto you
        by your teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics
        in the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_2_2019: "This brief activity allows\nyou to reflect
        about what you have learned in this course so far. It is provided\nto you
        by your teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics
        in the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_3: "This brief activity allows\nyou to reflect about
        what you have learned in this course so far. It is provided\nto you by your
        teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics in
        the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_3_2018: "This brief activity allows\nyou to reflect
        about what you have learned in this course so far. It is provided\nto you
        by your teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics
        in the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_4: "This brief activity allows\nyou to reflect about
        what you have learned in this course so far. It is provided\nto you by your
        teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics in
        the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_4_2018: "This brief activity allows\nyou to reflect
        about what you have learned in this course so far. It is provided\nto you
        by your teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics
        in the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_5: "This brief activity allows\nyou to reflect about
        what you have learned in this course so far. It is provided\nto you by your
        teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics in
        the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_control_5_2018: "This brief activity allows\nyou to reflect
        about what you have learned in this course so far. It is provided\nto you
        by your teacher, but _you will not be graded on this._\\\r\n\\\r\nSome\ntopics
        in the course may be interesting to you, others may be less interesting.\\\r\n\\\r\n<strong>\\\r\n1\\.\nWrite
        down 1 or 2 topics that are most interesting to you:\\\r\n\\\r\n</strong>\\\r\n\\\r\n<input\ntype=text><br>\\\r\n<input
        type=text>\\\r\n<br><br>\\\r\n\\\r\n<strong>\\\r\n2\\.\nHow did you prepare
        for taking this test? Do you feel more or less prepared\nto answer questions
        about the topics that interest you?\\\r\n</strong>\\\r\n\\\r\n_Write\na few
        sentences, focusing on your thoughts and feelings, don't worry about\nhow
        well written it is._"
      csp_affirmation_intervention: "This brief activity allows\nyou to reflect about
        what’s most important to you. It is provided to you by\nyour teacher, but
        _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values and
        qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_2: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_2018: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_2_2018: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_2_2019: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_3: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_3_2018: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_4: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_4_2018: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_5: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_affirmation_intervention_5_2018: "This brief activity allows\nyou to reflect
        about what’s most important to you. It is provided to you by\nyour teacher,
        but _you will not be graded on this._\\\r\n\\\r\nBelow is a list\nof values
        and qualities. Some of them may be important to you, others may\nbe unimportant.
        \\\r\n\\\r\n<strong>\\\r\n\n1.  What's most important to you?</strong>\n    (select
        one or more)\\\r\n    \\\r\n    \\\r\n\n<table bordercolor=\"#FFFFFF\" width=75%
        cellpadding=5\ncellspacing=10 style=\"background-color: #d9eff7; border-width:
        10px; border-color:\n#FFFFFF\">\r\n  <tr style=\"border: 5px solid white\">\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white;\">\r\n    <label><input
        type=\"checkbox\">\nRelationships with friends and family\r\n    </label></td>\r\n
        \   <td width=25%\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nSports and athletics\r\n    </label></td>\r\n    <td width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Relationships with\nfriends or family\r\n    </label></td>\r\n    <td  width=25%
        style=\"border:\n5px solid white\">\r\n    <label><input type=\"checkbox\">
        Creativity\r\n    </label></td>\r\n  </tr>\r\n  <tr>\r\n    <td\nstyle=\"border:
        5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpirituality or
        religion\r\n    </label></td>\r\n    <td style=\"border: 5px\nsolid white\">\r\n
        \   <label><input type=\"checkbox\"> Sense of humor\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nHealth
        and fitness\r\n    </label></td>\r\n    <td style=\"border: 5px solid\nwhite\">\r\n
        \   <label><input type=\"checkbox\"> Physical attractiveness\r\n    </label></td>\r\n
        \ </tr>\r\n  <tr>\r\n    <td\nstyle=\"border: 5px solid white\">\r\n    <label><input
        type=\"checkbox\">\nRomantic values\r\n    </label></td>\r\n    <td style=\"border:
        5px solid\nwhite\">\r\n    <label><input type=\"checkbox\"> Kindness\r\n    </label></td>\r\n
        \   <td\nstyle=\"border: 5px solid white\">\r\n    <label><input type=\"checkbox\">\nSpontaneity,
        living life in the moment\r\n    </label></td>\r\n    <td style=\"border:\n5px
        solid white\">\r\n    <label><input type=\"checkbox\"> Independence\r\n    </label></td>\r\n
        \ </tr>\r\n</table>\r\n<br>\r\n<br>\r\n\r\n<strong>\r\n&#50;.\nWhy are these
        values important to you? Describe a time in your life when they\nwere really
        important.\r\n</strong>\r\n\r\n*Write a few sentences. Focus on\nyour thoughts
        and feelings, don't worry about how well written it is.*"
      csp_socialBelonging_control: "\\\r\n\n## Starting out in Computer\n\nScience\\\r\n\\\r\nComputer
        science has changed the way we communicate with each\nother, make art and
        movies, grow food, and even treat illnesses. Everyone\ncan learn computer
        science and make a difference.\\\r\n\\\r\n\\*\\*\\*\\\r\n\\\r\n\n## Quotes\n\nfrom
        students\\\r\n\\\r\nStill, we understand that taking a computer science course\ncan
        be difficult at first. Here are a few student quotes describing their\nstrategies
        and tips for taking this course. **Please read the quotes carefully\nand respond
        to the prompt below**. \\\r\n\\\r\n\n<div style=\"background-color:\n#d9eff7;
        border-radius: 40px 40px 40px 5px; color: #000000; width: 80%; padding:\n0.5px
        20px 1px 20px;\">\r\n\r\n<p style=\"font-size: 70px; margin-bottom:\n-10px;
        margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p style=\"line-height:\n1.5;
        margin-left: 10px; margin-right: 30px; \">\r\nIn the first week of this\nclass
        I was falling behind quickly. There was a lot of new information to\nlearn.
        To keep up, I had to find a better way to study. I tried to find connections\nbetween
        the material and what I already know. That really helped me remember\nthings.
        I also tried to not overdo it. I started taking small breaks in-between\nlessons
        and when I came back I checked if I still remembered what I was studying\nbefore.
        It helped a lot\r\n </p>\r\n<p style=\"font-size: 70px; text-align:\nright;
        margin-right: 5%; margin-top: -10px; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%; font-style: italic; margin-right:\n70px; margin-top:
        -20px; \">\r\nSofia P. (age 16)\r\n</p>\r\n\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 5px 40px; color:\n#000000; width: 80%; margin-left:
        10%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n\r\n<p\nstyle=\"font-size: 70px;
        margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px;\">Some days
        I felt tired and would drift away in my thoughts. It was\na real problem because
        I would miss so much of what we were learning. So I\nstarted going to bed
        a bit earlier and I tried my best to pay attention. At\nthe end of every class
        our teacher summarized\r\n what we learned that day\nand that was really helpful.
        I started taking more notes because that also\nkept my mind from wandering.
        These little tricks got me through the class\nand I learned more.</p>\r\n<p
        style=\"font-size: 70px; text-align: right;\nopacity: 0.5\">&rdquo;</p>\r\n<p
        style=\"text-align: right; font-size: 125%;  font-style:\nitalic; margin-right:
        30px; margin-top: -20px\">\r\nJasmin D. (age 17)\r\n</p>\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 40px 5px; color:\n#000000; width: 80%; padding:
        0.5px 20px 1px 20px;\">\r\n\r\n<p style=\"font-size:\n70px; margin-bottom:
        -10px; margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p\nstyle=\"line-height:
        1.5; margin-left: 10px; margin-right: 30px; \">I\r\n\ncan be pretty forgetful
        sometimes and it was a problem in this class. I think\nit's because we did
        so much on the computer. For my other classes I take\nnotes on paper and read
        through them again at home. So the trick that I found\nhelpful in this class
        was to take notes on paper anyway and to test myself\nabout the concepts.
        I wasn't sure if it would work at first, but I think\nit ended up being a
        big help.</p>\\\r\n\\\r\n\n<p style=\"font-size: 70px; text-align:\nright;
        opacity: 0.5\">&rdquo;</p>\r\n<p style=\"text-align: right; font-size:\n125%;
        \ font-style: italic; margin-right: 30px; margin-top: -20px\">\r\nSam\nJ.
        (age 17)\r\n</p>\r\n</div>\r\n\r\n***\r\n<p style=\"font-size: 125%\">Now\nconsider
        the strategies and insights for how to learn best that you just read.\n</p>\r\n\r\n##
        Reflect and Summarize: \r\n\r\n<p style=\"font-size: 150%;\ncolor: black;
        font-weight: bolder; line-height: 1.5\">What are your own strategies\nand
        insights about how to learn best? And, how are they similar or different\nto
        the ones that you just heard about from other students? </p>\r\n\r\n*Please\nwrite
        a short paragraph. Don't worry about spelling, grammar, or how well\nwritten
        it is.*"
      csp_socialBelonging_control_2018: "\\\r\n\n## Starting out in Computer\n\nScience\\\r\n\\\r\nComputer
        science has changed the way we communicate with each\nother, make art and
        movies, grow food, and even treat illnesses. Everyone\ncan learn computer
        science and make a difference.\\\r\n\\\r\n\\*\\*\\*\\\r\n\\\r\n\n## Quotes\n\nfrom
        students\\\r\n\\\r\nStill, we understand that taking a computer science course\ncan
        be difficult at first. Here are a few student quotes describing their\nstrategies
        and tips for taking this course. **Please read the quotes carefully\nand respond
        to the prompt below**. \\\r\n\\\r\n\n<div style=\"background-color:\n#d9eff7;
        border-radius: 40px 40px 40px 5px; color: #000000; width: 80%; padding:\n0.5px
        20px 1px 20px;\">\r\n\r\n<p style=\"font-size: 70px; margin-bottom:\n-10px;
        margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p style=\"line-height:\n1.5;
        margin-left: 10px; margin-right: 30px; \">\r\nIn the first week of this\nclass
        I was falling behind quickly. There was a lot of new information to\nlearn.
        To keep up, I had to find a better way to study. I tried to find connections\nbetween
        the material and what I already know. That really helped me remember\nthings.
        I also tried to not overdo it. I started taking small breaks in-between\nlessons
        and when I came back I checked if I still remembered what I was studying\nbefore.
        It helped a lot\r\n </p>\r\n<p style=\"font-size: 70px; text-align:\nright;
        margin-right: 5%; margin-top: -10px; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%; font-style: italic; margin-right:\n70px; margin-top:
        -20px; \">\r\nSofia P. (age 16)\r\n</p>\r\n\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 5px 40px; color:\n#000000; width: 80%; margin-left:
        10%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n\r\n<p\nstyle=\"font-size: 70px;
        margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px;\">Some days
        I felt tired and would drift away in my thoughts. It was\na real problem because
        I would miss so much of what we were learning. So I\nstarted going to bed
        a bit earlier and I tried my best to pay attention. At\nthe end of every class
        our teacher summarized\r\n what we learned that day\nand that was really helpful.
        I started taking more notes because that also\nkept my mind from wandering.
        These little tricks got me through the class\nand I learned more.</p>\r\n<p
        style=\"font-size: 70px; text-align: right;\nopacity: 0.5\">&rdquo;</p>\r\n<p
        style=\"text-align: right; font-size: 125%;  font-style:\nitalic; margin-right:
        30px; margin-top: -20px\">\r\nJasmin D. (age 17)\r\n</p>\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 40px 5px; color:\n#000000; width: 80%; padding:
        0.5px 20px 1px 20px;\">\r\n\r\n<p style=\"font-size:\n70px; margin-bottom:
        -10px; margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p\nstyle=\"line-height:
        1.5; margin-left: 10px; margin-right: 30px; \">I\r\n\ncan be pretty forgetful
        sometimes and it was a problem in this class. I think\nit's because we did
        so much on the computer. For my other classes I take\nnotes on paper and read
        through them again at home. So the trick that I found\nhelpful in this class
        was to take notes on paper anyway and to test myself\nabout the concepts.
        I wasn't sure if it would work at first, but I think\nit ended up being a
        big help.</p>\\\r\n\\\r\n\n<p style=\"font-size: 70px; text-align:\nright;
        opacity: 0.5\">&rdquo;</p>\r\n<p style=\"text-align: right; font-size:\n125%;
        \ font-style: italic; margin-right: 30px; margin-top: -20px\">\r\nSam\nJ.
        (age 17)\r\n</p>\r\n</div>\r\n\r\n***\r\n<p style=\"font-size: 125%\">Now\nconsider
        the strategies and insights for how to learn best that you just read.\n</p>\r\n\r\n##
        Reflect and Summarize: \r\n\r\n<p style=\"font-size: 150%;\ncolor: black;
        font-weight: bolder; line-height: 1.5\">What are your own strategies\nand
        insights about how to learn best? And, how are they similar or different\nto
        the ones that you just heard about from other students? </p>\r\n\r\n*Please\nwrite
        a short paragraph. Don't worry about spelling, grammar, or how well\nwritten
        it is.*"
      csp_socialBelonging_control_2019: "\\\r\n\n## Starting out in Computer\n\nScience\\\r\n\\\r\nComputer
        science has changed the way we communicate with each\nother, make art and
        movies, grow food, and even treat illnesses. Everyone\ncan learn computer
        science and make a difference.\\\r\n\\\r\n\\*\\*\\*\\\r\n\\\r\n\n## Quotes\n\nfrom
        students\\\r\n\\\r\nStill, we understand that taking a computer science course\ncan
        be difficult at first. Here are a few student quotes describing their\nstrategies
        and tips for taking this course. **Please read the quotes carefully\nand respond
        to the prompt below**. \\\r\n\\\r\n\n<div style=\"background-color:\n#d9eff7;
        border-radius: 40px 40px 40px 5px; color: #000000; width: 80%; padding:\n0.5px
        20px 1px 20px;\">\r\n\r\n<p style=\"font-size: 70px; margin-bottom:\n-10px;
        margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p style=\"line-height:\n1.5;
        margin-left: 10px; margin-right: 30px; \">\r\nIn the first week of this\nclass
        I was falling behind quickly. There was a lot of new information to\nlearn.
        To keep up, I had to find a better way to study. I tried to find connections\nbetween
        the material and what I already know. That really helped me remember\nthings.
        I also tried to not overdo it. I started taking small breaks in-between\nlessons
        and when I came back I checked if I still remembered what I was studying\nbefore.
        It helped a lot\r\n </p>\r\n<p style=\"font-size: 70px; text-align:\nright;
        margin-right: 5%; margin-top: -10px; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%; font-style: italic; margin-right:\n70px; margin-top:
        -20px; \">\r\nSofia P. (age 16)\r\n</p>\r\n\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 5px 40px; color:\n#000000; width: 80%; margin-left:
        10%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n\r\n<p\nstyle=\"font-size: 70px;
        margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px;\">Some days
        I felt tired and would drift away in my thoughts. It was\na real problem because
        I would miss so much of what we were learning. So I\nstarted going to bed
        a bit earlier and I tried my best to pay attention. At\nthe end of every class
        our teacher summarized\r\n what we learned that day\nand that was really helpful.
        I started taking more notes because that also\nkept my mind from wandering.
        These little tricks got me through the class\nand I learned more.</p>\r\n<p
        style=\"font-size: 70px; text-align: right;\nopacity: 0.5\">&rdquo;</p>\r\n<p
        style=\"text-align: right; font-size: 125%;  font-style:\nitalic; margin-right:
        30px; margin-top: -20px\">\r\nJasmin D. (age 17)\r\n</p>\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 40px 5px; color:\n#000000; width: 80%; padding:
        0.5px 20px 1px 20px;\">\r\n\r\n<p style=\"font-size:\n70px; margin-bottom:
        -10px; margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p\nstyle=\"line-height:
        1.5; margin-left: 10px; margin-right: 30px; \">I\r\n\ncan be pretty forgetful
        sometimes and it was a problem in this class. I think\nit's because we did
        so much on the computer. For my other classes I take\nnotes on paper and read
        through them again at home. So the trick that I found\nhelpful in this class
        was to take notes on paper anyway and to test myself\nabout the concepts.
        I wasn't sure if it would work at first, but I think\nit ended up being a
        big help.</p>\\\r\n\\\r\n\n<p style=\"font-size: 70px; text-align:\nright;
        opacity: 0.5\">&rdquo;</p>\r\n<p style=\"text-align: right; font-size:\n125%;
        \ font-style: italic; margin-right: 30px; margin-top: -20px\">\r\nSam\nJ.
        (age 17)\r\n</p>\r\n</div>\r\n\r\n***\r\n<p style=\"font-size: 125%\">Now\nconsider
        the strategies and insights for how to learn best that you just read.\n</p>\r\n\r\n##
        Reflect and Summarize: \r\n\r\n<p style=\"font-size: 150%;\ncolor: black;
        font-weight: bolder; line-height: 1.5\">What are your own strategies\nand
        insights about how to learn best? And, how are they similar or different\nto
        the ones that you just heard about from other students? </p>\r\n\r\n*Please\nwrite
        a short paragraph. Don't worry about spelling, grammar, or how well\nwritten
        it is.*"
      csp_socialBelonging_intervention: "## Starting out in\n\nComputer Science\\\r\n\\\r\nComputer
        science has changed the way we communicate\nwith each other, make art and
        movies, grow food, and even treat illnesses.\n**Everyone can learn computer
        science and make a difference:** It really does\nnot matter how much or little
        experience you have with computer science already,\nor what age, gender, or
        skin color you have.\\\r\n\\\r\n\\*\\*\\*\\\r\n\\\r\n\n## Quotes from\n\nstudents\\\r\n\\\r\nStill,
        we understand that it can be daunting at first to take\na computer science
        course. So here are a few student quotes describing their\nexperiences. **Please
        read the quotes carefully and respond to the prompt\nbelow**. \\\r\n\\\r\n\\\r\n\n<div
        style=\"background-color: #d9eff7; border-radius:\n40px 40px 40px 5px; color:
        #000000; width: 80%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n<p\nstyle=\"font-size:
        70px; margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px; \">\r\nAt
        the start of the class I worried that I was different from\nthe other students.
        I wasn't sure I fit in – I \\tworried that I couldn’t\ndo it and that the
        teacher and other students would look down on me. A few\ndays after I started,
        I realized that almost everyone who takes the class\nisn’t sure if they fit
        in at first. It's something everyone goes through.\nNow it seems ironic –
        everybody feels different at first, when really we're\nall going through the
        same thing.</p>\r\n<p style=\"font-size: 70px; text-align:\nright; margin-right:
        5%; margin-top: -10px; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%; font-style: italic; margin-right:\n70px; margin-top:
        -20px; \">\r\nSofia P. (age 16)\r\n</p>\r\n\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 5px 40px; color:\n#000000; width: 80%; margin-left:
        10%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n\r\n<p\nstyle=\"font-size: 70px;
        margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px;\">I loved
        this computer science class! I've met some cool people and\nlearned a lot.
        But it was a difficult transition. The first few days I was\nintimidated and
        not sure why I should learn computer science. Why would I\nneed it? But then
        we talked in class about things I’m interested in, like\nmusic and design,
        and I realized that I can learn how to do cool new things.\nI had the wrong
        picture in my head about CS, it’s actually very creative!\nI just had to be
        patient and find ways to connect the class to what I really\ncare about.</p>\r\n<p
        style=\"font-size: 70px; text-align: right; opacity:\n0.5\">&rdquo;</p>\r\n<p
        style=\"text-align: right; font-size: 125%;  font-style:\nitalic; margin-right:
        30px; margin-top: -20px\">\r\nJasmin D. (age 17)\r\n</p>\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 40px 5px; color:\n#000000; width: 80%; padding:
        0.5px 20px 1px 20px;\">\r\n\r\n<p style=\"font-size:\n70px; margin-bottom:
        -10px; margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p\nstyle=\"line-height:
        1.5; margin-left: 10px; margin-right: 30px; \">I didn’t\nhave any experience
        with code, and I worried that I was not prepared for this\nclass. Other students
        did some programming at home or in summer camps. On\nmy first day, I was so
        nervous about getting bad grades and looking stupid.\nBut then, I started
        to feel better – I talked with other students and enjoyed\nthe class more.
        I became more comfortable asking for help when I had a problem.\nIt turned
        out that the students with CS experience had the same issues as\nme! Hah,
        it took some time, but now I really feel like I belong in CS class.</p>\r\n\r\n<p\nstyle=\"font-size:
        70px; text-align: right; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%;  font-style: italic; margin-right:\n30px; margin-top:
        -20px\">\r\nSam J. (age 17)\r\n</p>\r\n</div>\r\n\r\n***\r\n<p\nstyle=\"font-size:
        125%\"> Each of these students had similar experiences\nand realizations.
        </p>\r\n\r\n## Reflect and Summarize: \r\n\r\n\r\n<p style=\"font-size:\n150%;
        color: black; font-weight: bolder; line-height: 1.5\">Why do you think\nthe
        students worry at first about whether they belong in the class? How did\nthey
        become comfortable with it over time?</p>\r\n\r\n*Please write a short\nparagraph.
        Don't worry about spelling, grammar, or how well written it is.*"
      csp_socialBelonging_intervention_2018: "## Starting out in\n\nComputer Science\\\r\n\\\r\nComputer
        science has changed the way we communicate\nwith each other, make art and
        movies, grow food, and even treat illnesses.\n**Everyone can learn computer
        science and make a difference:** It really does\nnot matter how much or little
        experience you have with computer science already,\nor what age, gender, or
        skin color you have.\\\r\n\\\r\n\\*\\*\\*\\\r\n\\\r\n\n## Quotes from\n\nstudents\\\r\n\\\r\nStill,
        we understand that it can be daunting at first to take\na computer science
        course. So here are a few student quotes describing their\nexperiences. **Please
        read the quotes carefully and respond to the prompt\nbelow**. \\\r\n\\\r\n\\\r\n\n<div
        style=\"background-color: #d9eff7; border-radius:\n40px 40px 40px 5px; color:
        #000000; width: 80%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n<p\nstyle=\"font-size:
        70px; margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px; \">\r\nAt
        the start of the class I worried that I was different from\nthe other students.
        I wasn't sure I fit in – I \\tworried that I couldn’t\ndo it and that the
        teacher and other students would look down on me. A few\ndays after I started,
        I realized that almost everyone who takes the class\nisn’t sure if they fit
        in at first. It's something everyone goes through.\nNow it seems ironic –
        everybody feels different at first, when really we're\nall going through the
        same thing.</p>\r\n<p style=\"font-size: 70px; text-align:\nright; margin-right:
        5%; margin-top: -10px; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%; font-style: italic; margin-right:\n70px; margin-top:
        -20px; \">\r\nSofia P. (age 16)\r\n</p>\r\n\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 5px 40px; color:\n#000000; width: 80%; margin-left:
        10%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n\r\n<p\nstyle=\"font-size: 70px;
        margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px;\">I loved
        this computer science class! I've met some cool people and\nlearned a lot.
        But it was a difficult transition. The first few days I was\nintimidated and
        not sure why I should learn computer science. Why would I\nneed it? But then
        we talked in class about things I’m interested in, like\nmusic and design,
        and I realized that I can learn how to do cool new things.\nI had the wrong
        picture in my head about CS, it’s actually very creative!\nI just had to be
        patient and find ways to connect the class to what I really\ncare about.</p>\r\n<p
        style=\"font-size: 70px; text-align: right; opacity:\n0.5\">&rdquo;</p>\r\n<p
        style=\"text-align: right; font-size: 125%;  font-style:\nitalic; margin-right:
        30px; margin-top: -20px\">\r\nJasmin D. (age 17)\r\n</p>\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 40px 5px; color:\n#000000; width: 80%; padding:
        0.5px 20px 1px 20px;\">\r\n\r\n<p style=\"font-size:\n70px; margin-bottom:
        -10px; margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p\nstyle=\"line-height:
        1.5; margin-left: 10px; margin-right: 30px; \">I didn’t\nhave any experience
        with code, and I worried that I was not prepared for this\nclass. Other students
        did some programming at home or in summer camps. On\nmy first day, I was so
        nervous about getting bad grades and looking stupid.\nBut then, I started
        to feel better – I talked with other students and enjoyed\nthe class more.
        I became more comfortable asking for help when I had a problem.\nIt turned
        out that the students with CS experience had the same issues as\nme! Hah,
        it took some time, but now I really feel like I belong in CS class.</p>\r\n\r\n<p\nstyle=\"font-size:
        70px; text-align: right; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%;  font-style: italic; margin-right:\n30px; margin-top:
        -20px\">\r\nSam J. (age 17)\r\n</p>\r\n</div>\r\n\r\n***\r\n<p\nstyle=\"font-size:
        125%\"> Each of these students had similar experiences\nand realizations.
        </p>\r\n\r\n## Reflect and Summarize: \r\n\r\n\r\n<p style=\"font-size:\n150%;
        color: black; font-weight: bolder; line-height: 1.5\">Why do you think\nthe
        students worry at first about whether they belong in the class? How did\nthey
        become comfortable with it over time?</p>\r\n\r\n*Please write a short\nparagraph.
        Don't worry about spelling, grammar, or how well written it is.*"
      csp_socialBelonging_intervention_2019: "## Starting out in\n\nComputer Science\\\r\n\\\r\nComputer
        science has changed the way we communicate\nwith each other, make art and
        movies, grow food, and even treat illnesses.\n**Everyone can learn computer
        science and make a difference:** It really does\nnot matter how much or little
        experience you have with computer science already,\nor what age, gender, or
        skin color you have.\\\r\n\\\r\n\\*\\*\\*\\\r\n\\\r\n\n## Quotes from\n\nstudents\\\r\n\\\r\nStill,
        we understand that it can be daunting at first to take\na computer science
        course. So here are a few student quotes describing their\nexperiences. **Please
        read the quotes carefully and respond to the prompt\nbelow**. \\\r\n\\\r\n\\\r\n\n<div
        style=\"background-color: #d9eff7; border-radius:\n40px 40px 40px 5px; color:
        #000000; width: 80%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n<p\nstyle=\"font-size:
        70px; margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px; \">\r\nAt
        the start of the class I worried that I was different from\nthe other students.
        I wasn't sure I fit in – I \\tworried that I couldn’t\ndo it and that the
        teacher and other students would look down on me. A few\ndays after I started,
        I realized that almost everyone who takes the class\nisn’t sure if they fit
        in at first. It's something everyone goes through.\nNow it seems ironic –
        everybody feels different at first, when really we're\nall going through the
        same thing.</p>\r\n<p style=\"font-size: 70px; text-align:\nright; margin-right:
        5%; margin-top: -10px; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%; font-style: italic; margin-right:\n70px; margin-top:
        -20px; \">\r\nSofia P. (age 16)\r\n</p>\r\n\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 5px 40px; color:\n#000000; width: 80%; margin-left:
        10%; padding: 0.5px 20px 1px 20px;\">\r\n\r\n\r\n<p\nstyle=\"font-size: 70px;
        margin-bottom: -10px; margin-top: 30px; opacity:\n0.5\">&ldquo;</p>\r\n<p
        style=\"line-height: 1.5; margin-left: 10px; margin-right:\n30px;\">I loved
        this computer science class! I've met some cool people and\nlearned a lot.
        But it was a difficult transition. The first few days I was\nintimidated and
        not sure why I should learn computer science. Why would I\nneed it? But then
        we talked in class about things I’m interested in, like\nmusic and design,
        and I realized that I can learn how to do cool new things.\nI had the wrong
        picture in my head about CS, it’s actually very creative!\nI just had to be
        patient and find ways to connect the class to what I really\ncare about.</p>\r\n<p
        style=\"font-size: 70px; text-align: right; opacity:\n0.5\">&rdquo;</p>\r\n<p
        style=\"text-align: right; font-size: 125%;  font-style:\nitalic; margin-right:
        30px; margin-top: -20px\">\r\nJasmin D. (age 17)\r\n</p>\r\n</div>\r\n<br>\r\n\r\n<div\nstyle=\"background-color:
        #d9eff7; border-radius: 40px 40px 40px 5px; color:\n#000000; width: 80%; padding:
        0.5px 20px 1px 20px;\">\r\n\r\n<p style=\"font-size:\n70px; margin-bottom:
        -10px; margin-top: 30px; opacity: 0.5\">&ldquo;</p>\r\n<p\nstyle=\"line-height:
        1.5; margin-left: 10px; margin-right: 30px; \">I didn’t\nhave any experience
        with code, and I worried that I was not prepared for this\nclass. Other students
        did some programming at home or in summer camps. On\nmy first day, I was so
        nervous about getting bad grades and looking stupid.\nBut then, I started
        to feel better – I talked with other students and enjoyed\nthe class more.
        I became more comfortable asking for help when I had a problem.\nIt turned
        out that the students with CS experience had the same issues as\nme! Hah,
        it took some time, but now I really feel like I belong in CS class.</p>\r\n\r\n<p\nstyle=\"font-size:
        70px; text-align: right; opacity: 0.5\">&rdquo;</p>\r\n<p\nstyle=\"text-align:
        right; font-size: 125%;  font-style: italic; margin-right:\n30px; margin-top:
        -20px\">\r\nSam J. (age 17)\r\n</p>\r\n</div>\r\n\r\n***\r\n<p\nstyle=\"font-size:
        125%\"> Each of these students had similar experiences\nand realizations.
        </p>\r\n\r\n## Reflect and Summarize: \r\n\r\n\r\n<p style=\"font-size:\n150%;
        color: black; font-weight: bolder; line-height: 1.5\">Why do you think\nthe
        students worry at first about whether they belong in the class? How did\nthey
        become comfortable with it over time?</p>\r\n\r\n*Please write a short\nparagraph.
        Don't worry about spelling, grammar, or how well written it is.*"
      frozen circle function in circle: Maintenant, nous allons créer 20 cercles superposés,
        en tournant de 18 degrés entre chaque cercle.
      frozen circle function with parameter: Voici un bloc «Créer un cercle» qui peut
        faire des cercles de différentes tailles. Peux-tu utiliser ce bloc pour créer
        un petit cercle de 5 pixels et un plus grand cercle de 10 pixels ?
      frozen circle function: Utilise le nouveau bloc «Créer un cercle» pour créer
        10 cercles superposés. N'oublie pas de «Sauter» en avant, entre les cercles.
      frozen circle: Un cercle est une forme spéciale. Peux-tu trouver par quel chiffre
        remplacer les points d'interrogation pour «Dessiner un cercle»?
      frozen cross rotate dense: 'Répétons-le 90 fois ! Combien de fois 90 rentre
        dans 360 ? Indice : c''est un très petit nombre.'
      frozen cross rotate: Maintenant, essaie de le répéter 10 fois. De combien de
        degrés dois-tu tourner entre chaque ligne ?
      frozen cross: Enveloppe un bloc «Répéter» autour de ces commandes pour créer
        un signe plus. As-tu remarqué qu'Elsa peut se déplacer vers l'avant et vers
        l'arrière ?
      frozen diamond mini snowflake: Savais-tu que chaque flocon de neige est d’une
        forme différente ? Maintenant, créons un nouveau flocon de neige en utilisant
        le bloc «Répéter» pour répéter un parallélogramme 4 fois, en tournant à droite
        de 90 degrés entre chaque parallélogramme.
      frozen diamond snowflake: Maintenant, créons un nouveau flocon de neige en utilisant
        le bloc « Répéter » pour répéter un parallélogramme 10 fois, en tournant à
        droite de 36 degrés entre chacun d’entre eux.
      frozen diamond: Utilise un bloc « Répéter » autour de ces blocs pour créer un
        parallélogramme. C'est comme un rectangle, mais avec des angles différents.
        Celui-ci a des angles de 60 degrés et 120 degrés au lieu de tous les angles
        à 90 degrés.
      frozen freeplay: Tu es officiellement devenu un artiste maître ! Crée un merveilleux
        paysage hivernal.
      frozen perpendicular: Maintenant, voyons si nous pouvons créer deux lignes qui
        soient à un angle de 90 degrés l’une de l’autre. Tu devras utiliser le bloc
        «Tourner» ainsi que le bloc «Déplacer».
      frozen snowflake branch: Essaie d'utiliser le bloc «Créer une branche de flocon
        de neige» pour créer trois branches, qui commencent à ressembler à un flocon
        de neige.
      frozen snowflake full: Maintenant, répétons-le 8 fois pour faire un beau flocon
        de neige !
      frozen snowflower: Des motifs neigeux complexes peuvent être créés avec des
        formes très simples. Peux-tu faire un motif en répétant 5 cercles de 5 pixels
        et 5 cercles de 10 pixels ?
      frozen square iterative: Il semble que nous sommes à mi-chemin vers la création
        d’un carré. Mettons 4 lignes ensemble pour créer un carré.
      frozen square loop 3x: Créons trois carrés, en tournant après chaque carré.
        Assure-toi de tourner de 120 degrés avant chaque nouveau carré.
      frozen square loop: Salut, je suis Anna de Arendelle ! Faisons un carré avec
        le bloc «Répéter», qui utilise moins de blocs. Combien de fois (???) le bloc
        «Répéter» doit boucler les blocs à l'intérieur pour en faire un carré ?
      frozen square snowflake: Peux-tu créer un flocon de neige en utilisant le bloc
        «Répéter» pour faire 10 fois un carré, et le bloc «Tourner» pour tourner de
        36 degrés entre chaque carré ?
      grade2_CaringForNewPet_2: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by dragging it back to the toolbox."
      grade2_CaringForNewPet_2courseC_maze_programming3: "_\"This pig is ruffling
        my feathers.\"_\\\r\n\\\r\nThere\nis one extra block that is going to cause
        the bird to crash.  \\\r\nThrow it\naway by dragging it back to the toolbox."
      grade2_MakeDogTag_8: Maintenant connectons ensemble plusieurs « V » en les dessinant
        dans une boucle.
      grade2_MakeDogTag_9: "Time to make something snazzy!\n\\\r\n\\\r\nRebuild the
        code from the last puzzle, but this time, add a left turn\nof 30 degrees inside
        the loop. Now, repeat it 24 times instead of 8."
      grade2_PuppyLoops_10: Mon moulinet n'est pas fini. Combien de fois dois-je le
        répéter pour le terminer ?
      grade2_PuppyLoops_2: "Suddenly, a magical block appears!  With\nthe `repeat`
        block, you can loop code over and over.\\\r\n\\\r\nCan you get to\nthe pig
        by creating a loop that uses only one `move forward` block inside\nof a `repeat`?"
      grade2_PuppyLoops_4: Utilise deux boucles « Répéter » pour aller au cochon avec
        le plus petit nombre de blocs possible.
      grade2_PuppyLoops_8: 'Le code pour les trois moustaches que tu vois est faux.
        Indice : chaque moustache fait 75 pixels de long. Corrige ce code pour dessiner
        les moustaches.'
      grade2_PuppyLoops_9: On dirait que «C» dans le code est dessiné à l’envers.
        Peux-tu le faire ressembler à un vrai «C» ?
      grade2_puppy_loops2: "Suddenly, a magical block appears!  With\nthe `repeat`
        block, you can loop code over and over.\\\r\n\\\r\nCan you get to\nthe pig
        by creating a loop that uses only one `move forward` block inside\nof a `repeat`?"
      grade2_puppy_loops4: Utilise deux boucles « Répéter » pour aller au cochon avec
        le plus petit nombre de blocs possible.
      grade3_ConditionalsElse_1: "This cloud is blocking my view!\n\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud, and only get nectar\nif there's
        a flower.   \\\r\nBe careful, it can change!"
      grade3_ConditionalsElse_2: L'abeille veut seulement du nectar maintenant. Tous
        les objets ne sont pas des fleurs, alors vérifie sous CHAQUE NUAGE pour voir
        s’il s’y cache une fleur. Si c'est le cas, alors tu peux recueillir du nectar.
      grade3_ConditionalsElse_4: "Sometimes this cloud covers a\nflower, and sometimes
        it covers a honeycomb! \\\r\n\\\r\nUse the `if/else` block\nto collect nectar
        only if it is a flower.  \\\r\nElse, make honey (because it\nis a honeycomb)."
      grade3_ConditionalsElse_5: Il pourrait y avoir une fleur ou un gâteau de miel
        sous ces nuages. Utilise le bloc « Si/Sinon » pour récupérer le nectar si
        c'est une fleur, et le bloc « Sinon » pour fabriquer du miel (parce que c'est
        un gâteau de miel).
      grade3_ConditionalsElse_6: Cette fleur pourpre peut avoir 3, 2 ou 1 nectar(s).
        Ici un bloc «Si-Sinon» est associé à un autre bloc « Si-Sinon » pour créer
        un bloc « Si », « Si-Sinon », « Sinon ». Complète la solution pour recueillir
        la quantité inconnue de nectar.
      grade3_ConditionalsElse_7: N'oublie pas que les fleurs pourpres peuvent avoir
        3, 2 ou 1 nectar(s). Termine la fonction «Vérifier la fleur pourpre» et utilise-la
        pour recueillir tout le nectar des fleurs.
      grade3_ConditionalsElse_8: Écris à l'intérieur de la fonction «Vérifier la fleur
        et fabriquer du miel». Ta fonction doit vérifier si la fleur pourpre a 1,
        2 ou 3 nectars et recueillir l'ensemble du nectar. Ensuite, avance et fabrique
        du miel.
      grade3_ConditionalsElse_9: "**Assessment:** This\ncloud is either hiding a flower
        with one nectar or a honeycomb that needs\none honey.  \\\r\n\\\r\nComplete
        the `get nectar or make honey` function, then\ncall it to collect the nectar
        or honey. \\\r"
      grade3_ConditionalsElse_TeacherIDo: Il pourrait y avoir une fleur ou un gâteau
        de miel sous ces nuages. Utilise le bloc « Si/Sinon » pour récupérer le nectar
        si c'est une fleur, et le bloc « Sinon » pour fabriquer du miel (parce que
        c'est un gâteau de miel).
      grade3_Conditionals_1: "I'm a hungry bee! \\\r\n\\\r\n\\\r\nHelp\nme collect
        all of the nectar from the flowers using the fewest number of blocks."
      grade3_Conditionals_10: 'Recueille le nectar et fabrique du miel. Indice : que
        se passe-t-il si tu utilises l’instruction conditionnelle «Si nectar» sur
        une fleur rouge ? Peux-tu terminer ceci avec une boucle ?'
      grade3_Conditionals_11 BAD: "**Évaluation :** Utilise une boucle `tant que`
        pour recueillir tout le nectar de ces fleurs."
      grade3_Conditionals_11: "Let's put everything together!\\\r\n\\\r\nUse\nwhat
        you've learned to help me collect nectar only from flowers that have\nit,
        using as few blocks as possible.  \\\r\n\\\r\nDon't forget to make honey\nat
        the end."
      grade3_Conditionals_12: Recueille le nectar des quatre fleurs.
      grade3_Conditionals_13: "**Assessment:** Collect\nall of the nectar.  \\\r\nBe
        careful not to try to collect nectar from a purple\nflower if it doesn't have
        any."
      grade3_Conditionals_2: Aide-moi à recueillir tout le nectar des fleurs et à
        fabriquer du miel. Utilise une boucle.
      grade3_Conditionals_3: "These magic purple flowers change!\\\r\n\\\r\nEach\ntime
        you try the puzzle, purple flowers can have either 1 nectar or none at\nall...but
        you won't know the number until you run the code! \\\r\n\\\r\nBe careful\nnot
        to collect nectar from a purple flower if it doesn't have any. \\\r\nYou\nmust
        first check if the nectar is equal to 1 using the `if nectar` block."
      grade3_Conditionals_8: Butine les fleurs qui ont du nectar.
      grade3_Debugging_1: "These blocks are really bugging\nme!\\\r\n\\\r\nFix the
        error(s) to collect all of the nectar."
      grade3_Debugging_5: "That flower looks tasty! \\\r\n\\\r\nFix\nthe error(s)
        to collect all of the nectar.  \\\r\nYou can now use both run and\nstep."
      grade3_Debugging_6: Ces blocs-là me gênent vraiment. Corrige l’erreur ou les
        erreurs afin de récolter tout le nectar.
      grade3_Debugging_9: Ces blocs-là me gênent vraiment. Corrige l’erreur ou les
        erreurs afin de récolter tout le nectar et fabriquer tout le miel.
      grade3_Loops_10: "Such a busy bee!\\\r\n\\\r\nHelp Bee collect\nall of the nectar
        and make all of the honey with the fewest blocks possible."
      grade3_Loops_11: "The shape of this path is different\nfrom the others. \\\r\n\\\r\nCan
        you collect all of the nectar using as few blocks\nas possible?"
      grade3_Loops_3: Peux-tu utiliser une boucle pour recueillir tout ce nectar ?
      grade3_Loops_4: Maintenant, utilise le nouveau bloc «Répéter» pour recueillir
        tout le nectar et fabriquer tout le miel.
      grade3_Loops_6: Que se passe-t-il si tu mets cette séquence en boucle 3 fois
        ? N'oublie pas de faire le miel à la fin !
      grade3_Loops_7: 'Chaque fleur contient une unité de nectar. Récolte le nectar
        de chacune des fleurs. '
      grade3_Loops_TeacherIDo: 'Chaque fleur contient une unité de nectar. Récolte
        le nectar de chacune des fleurs. '
      grade3_bee_conditionals_quantum1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      grade3_bee_conditionals_quantum2: L'abeille veut seulement du nectar maintenant.
        Tous les objets ne sont pas des fleurs, alors vérifie sous CHAQUE NUAGE pour
        voir s’il s’y cache une fleur. Si c'est le cas, alors tu peux recueillir du
        nectar.
      grade3_maze_Loop1: "**Évaluation :** Amène-moi au tournesol en n’utilisant que
        5 blocs ! "
      grade3_maze_loops2: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      grade3_maze_nestedLoops2: "Suddenly, a magical block appears!  With\nthe `repeat`
        block, you can loop code over and over.\\\r\n\\\r\nCan you get to\nthe pig
        by creating a loop that uses only one `move forward` block inside\nof a `repeat`?"
      grade3_maze_nestedLoops3: Amène-moi au cochon ! Tu ne peux utiliser qu’un seul
        bloc ˋavancer plus\` cette fois-ci
      grade3_maze_nestedLoops4: Utilise deux boucles « Répéter » pour aller au cochon
        avec le plus petit nombre de blocs possible.
      grade4_arist_nested_loop_circles1: "**Évaluation :** Utilise une boucle imbriquée
        pour terminer le dessin."
      grade4_arist_nested_loop_flags1: Insère le code fourni dans une boucle pour
        créer un moulin à vent.
      grade4_arist_nested_loop_polygons1: 'Boucle ce dessin 10 fois. De combien dois-tu
        tourner chaque fois que tu fais une boucle ? (Indice : combien fait 360 divisé
        par 10?)'
      grade4_arist_nested_loop_polygons2: 'Boucle ce dessin 6 fois. De combien dois-tu
        tourner chaque fois que tu fais une boucle ? (Indice : combien fait 360 divisé
        par 6?)'
      grade4_arist_nested_loop_squares1: "Can you draw these 10 squares of\nthis sidewalk
        using a nested loop? \\\r\n\\\r\nEach square is 30 pixels."
      grade4_arist_nested_loop_triangles2: "Now nest this loop inside another\nloop
        to draw 10 triangles.  \\\r\nThis is called a \"nested\" loop.  "
      grade4_arist_nested_loop_triangles3: Peux-tu dessiner un hexagone en bouclant
        le code du triangle ?
      grade4_arist_nested_loop_triangles4: Dessine les dents dans la bouche de l'alligator
        !
      grade4_arist_nested_loop_triangles5: Crée un soleil en insérant le code de démarrage
        dans une autre boucle. C'est ce qu'on appelle une boucle imbriquée.
      grade4_arist_nested_loop_triangles6: Peux-tu dessiner ces 36 triangles en utilisant
        une boucle imbriquée?
      grade4_artist_functions2: Les fonctions te permettent de définir de nouveaux
        blocs ! Nous avons déplacé les blocs pour dessiner un carré dans une fonction
        appelée «Dessiner un carré». Peut-tu utiliser la fonction «Dessiner un carré»
        pour créer les lunettes ? Les carrés sont à 75 pixels les uns des autres.
      grade4_artist_nestedLoops_challenge: "<img src=\"https://images.code.org/c876143212d195192013582f57c6df04-image-1445625392518.36.18.png\"\nwidth=\"150px;\"
        style=\"mix-blend-mode: multiply;\" />\\\r\n\\\r\n**Play time:**  Here\nis
        the code for an interesting shape.   \\\r\n\\\r\nWhat happens when you repeat\nit
        multiple times, turning between each iteration?   \\\r\n\\\r\nNotice that
        the\nturns in this shape add up to _420 degrees_, which means that when your
        artist\nis done drawing, it will be facing a different direction than when
        you started.  That\nnew direction is exactly _60 degrees_ to the _right_ of
        where you began.\\\r\n\\\r\n\n<hr/>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>Repeat\n4</b></summary>\r\n<br/>\r\nIf
        you want to come full circle in just 4 repetitions,\nyou need the artist to
        turn a total of **360 degrees/4 = 90 degrees** each\ntime.  You can do that
        by adding an extra `turn right by 30 degrees` block\nto the outer loop (since
        **60+30 = 90**.)  \r\n<br/>\r\n<img src=\"https://images.code.org/9da67a628ed72e87520a02a0d917e2af-image-1440132370113.44.12.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n<br/><br/>\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>Repeat\n6</b></summary>\r\n<br/>\r\nWhen
        you repeat the shape as-is 6 times, you get\na total rotation of **6x60 degrees**
        which is a full **360 degree** cycle.  \r\n<img\nsrc=\"https://images.code.org/b79f96b87097ce3afe8a6a5608d04e36-image-1440132287456.44.27.png\"
        \ width=\"500px;\"  style=\"mix-blend-mode:\nmultiply;\" />\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>Repeat\n12</b></summary>\r\n<br/>\r\nIf
        you want to repeat the image 12 times, you\nneed the artist to turn a total
        of **360 degrees/12 = 30 degrees** each iteration.  That\nmeans you will need
        to adjust the artist back a bit with `turn left by 30\ndegrees` before you
        repeat the shape again.   <br/><br/>\r\n<img src=\"https://images.code.org/ad254952522674496918561096817c66-image-1440132424792.44.01.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n</details>\r\n</h4>\r\n\r\nNow\nit's
        your turn!  Can you recreate each image by repeating the starting shape?  "
      grade4_artist_nestedLoops_challenge2: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time.\\\r\n\\\r\nThe repeated shape is almost identical\nto the one from the
        last puzzle, except that the length used in the first\nloop is a little smaller. "
      grade4_artist_nested_loop_circles1: "**Évaluation :** Utilise une boucle imbriquée
        pour terminer le dessin."
      grade4_artist_nested_loop_flags1: Insère le code fourni dans une boucle pour
        créer un moulin à vent.
      grade4_artist_nested_loop_polygons1: 'Boucle ce dessin 10 fois. De combien dois-tu
        tourner chaque fois que tu fais une boucle ? (Indice : combien fait 360 divisé
        par 10?)'
      grade4_artist_nested_loop_squares1: "Can you draw these 10 squares of\nthis
        sidewalk using a nested loop? \\\r\n\\\r\nEach square is 30 pixels."
      grade4_artist_nested_loop_triangles1: "Complete the code to draw these triangles.
        \ The\nfirst one is done for you.  Hint:  3 triangles in a 360 degree rotation.\\\r\n\\\r"
      grade4_artist_nested_loop_triangles5: Crée un soleil en insérant le code de
        démarrage dans une autre boucle. C'est ce qu'on appelle une boucle imbriquée.
      grade4_artist_nested_loop_triangles6: Peux-tu dessiner ces 36 triangles en utilisant
        une boucle imbriquée?
      grade4_artist_parameters_squares1: "Click \"edit\" to fill\nin the function
        definition of `draw a square` and add a parameter.  \\\r\nIt\nshould take
        a length parameter just like the triangle. \\\r\n\\\r\n**This time,\ndraw
        3 squares:** 25, 50 and 75 pixels in length. The lefthand corners are\neach
        100 pixels away from the last."
      grade4_artist_parameters_triangles2: As-tu remarqué quelque chose de différent
        dans ces blocs «Fonction» ? Clique sur « Exécuter » pour voir ce qui se passe.
      grade4_artist_parameters_triangles2b: "Can you complete this drawing?\n\\\r\n\\\r\nThe
        sides of each triangle are 25 pixels larger than the last.  \\\r\nThe\nfirst
        triangle has 25 pixel sides."
      grade4_artist_parameters_triangles3: "Can you complete this drawing?\n\\\r\n\\\r\nThe
        sides of each triangle are 25 pixels larger than the last.  \\\r\nThe\nfirst
        triangle has 25 pixel sides."
      grade4_artist_parameters_triangles4: "The code for this triangle\nfunction is
        broken. \\\r\n\\\r\nCan you edit the function to fix it, and then\nmake triangles
        of length 25, 50, and 75?"
      grade4_artist_parameters_trianglesx: "Can you complete this drawing?\n\\\r\n\\\r\nThe
        sides of each triangle are 25 pixels larger than the last.  \\\r\nThe\nfirst
        triangle has 25 pixel sides."
      grade4_bee_conditionals_nested_loops: "**Assessment:** Collect\nall of the nectar.
        \ \\\r\nBe careful not to try to collect nectar from a purple\nflower if it
        doesn't have any."
      grade4_bee_conditionals_new1: "**Assessment:** Collect\nall of the nectar.  \\\r\nBe
        careful not to try to collect nectar from a purple\nflower if it doesn't have
        any."
      grade4_bee_conditionals_quantum1: "This cloud is blocking my view!\n\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud, and only get nectar\nif there's
        a flower.   \\\r\nBe careful, it can change!"
      grade4_bee_conditionals_quantum2: L'abeille veut seulement du nectar maintenant.
        Tous les objets ne sont pas des fleurs, alors vérifie sous CHAQUE NUAGE pour
        voir s’il s’y cache une fleur. Si c'est le cas, alors tu peux recueillir du
        nectar.
      grade4_bee_conditionals_quantum4: "Sometimes this cloud covers a\nflower, and
        sometimes it covers a honeycomb! \\\r\n\\\r\nUse the `if/else` block\nto collect
        nectar only if it is a flower.  \\\r\nElse, make honey (because it\nis a honeycomb)."
      grade4_bee_conditionals_quantum5: Il pourrait y avoir une fleur ou un gâteau
        de miel sous ces nuages. Utilise le bloc « Si/Sinon » pour récupérer le nectar
        si c'est une fleur, et le bloc « Sinon » pour fabriquer du miel (parce que
        c'est un gâteau de miel).
      grade4_bee_functions2: "Functions are blocks of code that\nperform a task.  \\\r\n\\\r\nUse
        the `get 2 nectar` function to collect the nectar\nfrom each flower."
      grade4_bee_functions3: Les fonctions sont des blocs de code qui effectuent une
        tâche. Utilise la fonction « Obtenir 5 » pour obtenir 5 nectars à la fois.
        Veille également à utiliser une boucle pour obtenir un compte de bloc idéal.
      grade4_bee_nestedLoops4: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      grade4_bee_nestedLoops_assess: |-
        **Évaluation :** Recueille tout le nectar et fabrique tout le miel en utilisant des boucles.

        **Indice :** _Il y a plusieurs solutions possibles !_
      grade4_frozen_freeplay: Tu es officiellement devenu un artiste maître ! Crée
        un merveilleux paysage hivernal.
      grade4_frozen_functions0: Un cercle est une forme spéciale. Peux-tu trouver
        par quel chiffre remplacer les points d'interrogation pour «Dessiner un cercle»?
      grade4_frozen_functions1a: Utilise le nouveau bloc «Créer un cercle» pour créer
        10 cercles superposés. N'oublie pas de «Sauter» en avant, entre les cercles.
      grade4_frozen_functions2: Maintenant, nous allons créer 20 cercles superposés,
        en tournant de 18 degrés entre chaque cercle.
      grade4_frozen_functions3: Voici un bloc «Créer un cercle» qui peut faire des
        cercles de différentes tailles. Peux-tu utiliser ce bloc pour créer un petit
        cercle de 5 pixels et un plus grand cercle de 10 pixels ?
      grade4_frozen_functions4: Des motifs neigeux complexes peuvent être créés avec
        des formes très simples. Peux-tu faire un motif en répétant 5 cercles de 5
        pixels et 5 cercles de 10 pixels ?
      grade4_frozen_nested_loop_diamonds2: Savais-tu que chaque flocon de neige est
        d’une forme différente ? Maintenant, créons un nouveau flocon de neige en
        utilisant le bloc «Répéter» pour répéter un parallélogramme 4 fois, en tournant
        à droite de 90 degrés entre chaque parallélogramme.
      grade4_frozen_nested_loop_diamonds3: Maintenant, créons un nouveau flocon de
        neige en utilisant le bloc « Répéter » pour répéter un parallélogramme 10
        fois, en tournant à droite de 36 degrés entre chacun d’entre eux.
      grade4_frozen_square: Salut, je suis Anna de Arendelle ! Faisons un carré avec
        le bloc «Répéter», qui utilise moins de blocs. Combien de fois (???) le bloc
        «Répéter» doit boucler les blocs à l'intérieur pour en faire un carré ?
      grade4_frozen_square_loop1: Salut, je suis Anna de Arendelle ! Faisons un carré
        avec le bloc «Répéter», qui utilise moins de blocs. Combien de fois (???)
        le bloc «Répéter» doit boucler les blocs à l'intérieur pour en faire un carré
        ?
      grade4_frozen_square_loop2: Créons trois carrés, en tournant après chaque carré.
        Assure-toi de tourner de 120 degrés avant chaque nouveau carré.
      grade4_frozen_square_loop3: Peux-tu créer un flocon de neige en utilisant le
        bloc «Répéter» pour faire 10 fois un carré, et le bloc «Tourner» pour tourner
        de 36 degrés entre chaque carré ?
      grade4_playlab_freeplay: "It's free play time!\nHave fun with all the blocks
        in your tool box.  \\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>Need\nsome
        ideas?</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n        \\t<li><strong>Tag</strong>\n-
        Have character 2 patrol and use your arrow keys to make character 1 chase\nuntil
        they collide. </li>\r\n            <li><strong>Whack-a-Sprite</strong>\n-
        Have a character constantly pop up at a random location. Award points for\nclicking
        the sprite before it disappears. </li>\r\n            <li><strong>Best\nGuess</strong>
        - Make both characters disappear, change location to a random\nspot, then
        reappear as a random character.  Click on the first one and get\na point...but
        if you click on the second one you LOSE a point! </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      grade4_playlab_test: "<h5><b>\r\nIn our game, how\nshould we score points? \r\n</b></h5>
        \r\n<br/>\r\n\r\n1. Add 1 to your `points`\nvariable each time Dog hits Cat
        with a piece of pie.  <br/>    <br/> \r\n2.\nUse the `when actor 2 touches
        anything` event to trigger an update to your\nscore. You can increment your
        variable by setting `points = points + 1.`  <br/>   <br/>\n\r\n3. Get your
        score up to 10 to pass the level.\r\n\r\n<br/><br/>\r\n<h4>\r\n**Note:**\nUse
        the right arrow to throw pie!\r\n</h4>"
      grade4_playlab_test2: "Here's a function called\n`jump` that causes your main
        character to jump up 100 pixels. \\\r\n\\\r\nRun\nthe program and use the
        jump function to collect all of the flags by moving\nthe dog with the arrow
        keys."
      grade4_review_artist2: "This house needs a roof! Draw the triangle.  \\\r\n\\\r\nHint:\nall
        three sides are the same length.\\\r\n\\\r\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      grade4_review_artist3: Le bloc de saut déplace l'artiste sans rien dessiner.
        Dessine la ligne pointillée en utilisant les blocs de saut et de dessin.
      grade4_review_bee1: Maintenant, utilise le nouveau bloc «Répéter» pour recueillir
        tout le nectar et fabriquer tout le miel.
      grade4_review_bee3: "Such a busy bee!\\\r\n\\\r\nHelp Bee collect\nall of the
        nectar and make all of the honey with the fewest blocks possible."
      grade5_artist_binary10: "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\n\\\r\n<br/>"
      grade5_artist_binary2: "Here's a function that takes\na binary string of 1's
        and 0's and instructs the artist to follow them from\nleft to right, top to
        bottom.  \\\r\n\\\r\nThe artist will fill-in the squares\nwhen it sees a 1
        and ignore the square when it sees a 0. \\\r\n\\\r\n**Run this\ncode to see
        how the artist uses binary to draw this pattern.**"
      grade5_artist_for_loops1: 'Dessine ce triangle qui mesure 50 pixels de large.
        Indice: utilise un bloc «Répéter».'
      grade5_artist_for_loops10: |-
        **Défi:** Utilise toutes les choses que tu as apprises pour créer cette image constituée de polygones, tous de côtés 40 pixels ?

        Besoin d'un indice ? Clique ici.
      grade5_artist_for_loops5: |-
        Un seul petit changement au code de la dernière image pourrait créer ce dessin. Peux-tu trouver quel est ce changement ?

        Indice :  tu dois enlever quelque chose !
      grade5_artist_for_loops6: "If you turn a little bit\nmore or less than you normally
        would for a shape, it creates a neat effect.\\\r\n\\\r\nTry\nusing some of
        the code from the last level, but turning 89 degrees to create\nthis twisted
        square spiral."
      grade5_artist_for_loops8: "Remember back in a previous\nstage when we used a
        variable to control the number of sides in a shape? We\nare going to do the
        same thing with the `counter` variable now.  \\\r\n\\\r\nThis\npattern starts
        with a triangle and adds one side at a time until it draws\na decagon (10
        sides). Each side should be 100 pixels long. \\\r\n\\\r\nHow will\nyou use
        the `counter` variable from the `for` loop to recreate this drawing?"
      grade5_artist_for_loops9: "Let's put it all together!   \\\r\n\\\r\nUsing\nyour
        knowledge of `for` loops and the `counter` variable, create this drawing\nwhere
        each shape has two more sides than the last.  Make sure that each side\nis
        10 times as long as the number of sides in the polygon.\\\r\n\\\r\nVery little\nof
        the code has been provided for you."
      grade5_artist_for_loopsfreeplay11: "<br/><br/>\\\r\n<img\nsrc=\"https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png\"\nwidth=\"250px\"/>
        \ \\\r\n<br/><br/>\\\r\n**Free-Play Inspiration:** You've now\nlearned everything
        you need to know to make a pattern like this! If this picture\ninspires you,
        try to make something similar. Otherwise, create something all\nyour own."
      grade5_artist_functionparameters10: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make something
        similar. Otherwise, create something all your own.\\\r\n\\\r\nNotice:\nWe've
        used the `set alpha` block to make the \"petals\" fade toward the outside."
      grade5_artist_functionparameters9a: "Finish off the `draw a spiral edge`\nfunction
        to also ask for a minimum length for the center of the spiral.\\\r\n\\\r\n\\-\nThe
        smallest side in the center of this square is 50 pixels long\\\r\n\n-   The\n
        \   longest side at the outside of this spiral is 200 pixels long"
      grade5_artist_functionparameters_6: "Great job!  Now edit this function\nto
        add a parameter for the number of sides in your polygon.\\\r\n\\\r\nThe sides\nof
        all the shapes are 100 pixels long."
      grade5_artist_parameters_squares1: "Click \"edit\" to fill\nin the function
        definition of `draw a square` and add a parameter.  \\\r\nIt\nshould take
        a length parameter just like the triangle. \\\r\n\\\r\n**This time,\ndraw
        3 squares:** 25, 50 and 75 pixels in length. The lefthand corners are\neach
        100 pixels away from the last."
      grade5_artist_parameters_squares2a: "Edit the function to accept\na parameter
        called `length`.  \\\r\n\\\r\nThe sides of each square should be 25\npixels
        larger than the last.  The first square has 25 pixel sides. Replace\nthe '???'
        with the correct values to draw the picture."
      grade5_artist_parameters_triangles2: "Can you complete this drawing?\n\\\r\n\\\r\nThe
        sides of each triangle are 25 pixels larger than the last.  \\\r\nThe\nfirst
        triangle has 25 pixel sides."
      grade5_artist_parameters_triangles2a: As-tu remarqué quelque chose de différent
        dans ces blocs «Fonction» ? Clique sur « Exécuter » pour voir ce qui se passe.
      grade5_artist_parameters_triangles4: "The code for this triangle\nfunction is
        broken. \\\r\n\\\r\nCan you edit the function to fix it, and then\nmake triangles
        of length 25, 50, and 75?"
      grade5_artist_variables_freeplay14: "**Free Play**: Check it out!\nNow your
        algorithm is nested within one more loop. Experiment with changing\nthe values
        of your two variables to draw cool patterns.\\\r\n\\\r\nFor even more\neffect,
        try playing with color!  Use random colors inside loops to see how\nit changes
        your design."
      grade5_artist_variables_freeplay15: "<img src=\"https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**Free-Play
        Inspiration:** You've now learned everything\nyou need to know to make a pattern
        like this! If this picture inspires you,\ntry to make something similar. Otherwise,
        create something all your own. "
      grade5_artist_variables_hexagons1: 'Réessayons. Peux-tu définir la variable
        de longueur pour faire ce super dessin avec des hexagones ? Indice : C''est
        un multiple de 10.'
      grade5_artist_variables_letterT11: "Here’s some more complicated\ncode using
        the same concepts from the last puzzle - what should you set the\n`sides`
        variable to in order to draw this picture made of squares?\\\r\n\\\r\n\n<p\nstyle=\"font-size:small;
        padding: 15px 15px 15px 40px; background-color:#dcf3f3;\nborder-radius:10px;\">\r\n\\tJust
        for fun: Try using a few different numbers\nto see what happens to the pattern!\r\n</p>"
      grade5_artist_variables_octagons13: "When a shape has lots of sides,\neach side
        needs to be shorter if you want the whole pattern to fit on the\nscreen. \\\r\n\\\r\nLet's
        recreate the algorithm for this amazing pattern, but\ninstead of manually
        setting the `length` variable, let's use a math block\nwith the `sides` variable
        inside to make sure that each shape fits correctly.  \\\r\n\\\r\nThe\nperimeter
        of each polygon is 300 pixels."
      grade5_artist_variables_pentagon8: "Use what you learned in the last\npuzzle
        to create this hexagon using the `sides` variable.\\\r\n\\\r\nSee how you\ncould
        change just one value to draw a triangle,  square, pentagon, or octagon?"
      grade5_artist_variables_pentagon9: Maintenant, recrée l'algorithme du dernier
        niveau et crée un pentagone avec des côtés de 150 pixels.
      grade5_artist_variables_pentagons1: |-
        Dessine ce modèle en supprimant la variable « Longueur » aux bons endroits et puis en définissant la valeur correcte pour la longueur. (Indice : c'est un multiple de 10).

        Tu vois comment tu définis la valeur « Longueur » une seule fois, et le code utilise la bonne valeur partout ?
      grade5_artist_variables_pentagons12: "Let's set the `sides` variable\nto 5.
        The more sides we add to this algorithm, the bigger this whole pattern\ngets!
        \\\r\n\\\r\n<br/>\\\r\nNotice that there is another variable called `length`.\n\\\r\nWe
        can now use that variable wherever we have a `move forward` block.\n\\\r\n\\\r\nSet
        the `length` variable to 75 for this shape."
      grade5_artist_variables_square7: "Here’s some code that can draw\nany regular
        polygon. \\\r\n\\\r\nThere’s a new variable called `sides` that is\nset to
        4. \\\r\n\\\r\nCan you use the `sides` variable (along with the math block)\nto
        turn the right amount regardless of how many sides are in the polygon?"
      grade5_bee_parameters_new3: "Time to put the function to the test!\n\\\r\n\\\r\nLet's
        see if it makes collecting these three rows of nectar any easier."
      grade5_bee_parameters_new4: "_\"How is your function holding up?\"_   \\\r\n\\\r\nWe\nneed
        to make some adjustments here. Click \"edit\" to add a `length` parameter\nto
        the function so that it will still work when the row is a different length."
      grade5_playlab_freeplay: "It's free play time!\nHave fun with all the blocks
        in your tool box.  \\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>Need\nsome
        ideas?</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n        \\t<li><strong>Tag</strong>\n-
        Have character 2 patrol and use your arrow keys to make character 1 chase\nuntil
        they collide. </li>\r\n            <li><strong>Whack-a-Sprite</strong>\n-
        Have a character constantly pop up at a random location. Award points for\nclicking
        the sprite before it disappears. </li>\r\n            <li><strong>Best\nGuess</strong>
        - Make both characters disappear, change location to a random\nspot, then
        reappear as a random character.  Click on the first one and get\na point...but
        if you click on the second one you LOSE a point! </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      grade5_playlab_variables1: "This time you don't have to\nwrite any code, just
        hit `Run` to play the game! \\\r\n\\\r\n<br/>\\\r\nIn this\ngame, you're the
        dog who is trying to collect more flags than the cat. Use\nthe down arrow
        to control the dog. Press `Finish` when you're done playing."
      grade5_playlab_variables12: "Let's have some fun! Look\nat the code provided
        to see if you can figure out what each block does.  \\\r\n\\\r\nWhen\nyou're
        done, use the arrow keys to control Dog and collect all of the flags.\\\r\n\\\r\n**NOTE:**\nYou
        don't need to make any changes to the program"
      grade5_playlab_variables13: Utilise un bloc « Quand acteur touche » pour renvoyer
        le Chien en haut à gauche UNIQUEMENT s'il touche un des autres acteurs.
      grade5_playlab_variables14: "It's free play time!\nHave fun with all the blocks
        in your tool box.  \\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>Need\nsome
        ideas?</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n        \\t<li><strong>Tag</strong>\n-
        Have character 2 patrol and use your arrow keys to make character 1 chase\nuntil
        they collide. </li>\r\n            <li><strong>Whack-a-Sprite</strong>\n-
        Have a character constantly pop up at a random location. Award points for\nclicking
        the sprite before it disappears. </li>\r\n            <li><strong>Best\nGuess</strong>
        - Make both characters disappear, change location to a random\nspot, then
        reappear as a random character.  Click on the first one and get\na point...but
        if you click on the second one you LOSE a point! </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      grade5_playlab_variables2: La course dans ce dernier puzzle n'était pas très
        équitable ! Change la variable «Vitesse du chien» pour t'assurer que tu peux
        obtenir plus de drapeaux que le chat. Le premier à obtenir 10 drapeaux gagne
        !
      grade5_playlab_variables3: "Here's a new kind of game!\n\\\r\n\\\r\nYou don't
        need to change anything on this level.\\\r\n\\\r\n**Directions:**\nUse the
        left and right arrows to move, and the up arrow to jump. See if you\ncan collect
        all of the flags."
      grade5_playlab_variables4: "Now we're using a variable\ncalled `height` to control
        how high the dog can jump. Update the `height`\nvariable so that the dog can
        jump high enough to reach all the flags. \\\r"
      grade5_playlab_variables71: "Here's our game from an\nearlier stage but most
        of the code is hidden. We've added a new function\ncalled `score_points.`\\\r\n<br/>\\\r\n\n<hr>\r\n<br/>\r\n<h4>\r\nEdit
        the function\nso that a new parameter called `points` is added to `player_score`.
        \ \r\n<br/>\r\nThe\nvariable `player_score` should increase each time Dog
        tags Cat with pie, and\ndecrease each time that Cat tags Dog with a sandwich.\r\n</h4>\r\n<br/>\r\n<hr>\r\n*Note:\nWhen
        you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove
        on to the next puzzle.*"
      grade5_playlab_variables81: "We've added one last function\nfor you.\\\r\n\n<hr/>\\\r\n\\\r\n<h4>\\\r\nUse
        an `if` statement to program your game\nto call the `level_up` function only
        when `player_score` becomes greater than\na certain number.<br/><br/>\\\r\n</h4>\\\r\n<i>For
        example: `player_score` > 6</i>\\\r\n\\\r\n\\\r\n<hr/>\\\r\n<i>Play\nthe game,
        and make it to level 3 to move to the next puzzle.</i>"
      grade5_playlab_variables9: Voici une fonction appelée «Patrouille». Modifie-la
        pour déplacer le Chat vers le haut de 400 pixels, puis vers le bas de 400
        pixels.
      grade5_playlab_variables_freeplay: "Free Play time! Here are all\nof the variables
        we've played with so far in this stage, as well as a few\nmore in case you
        want them. \\\r\n\\\r\nNotice that there are now so many blocks\nin our toolbox
        that they need to be organized!  Here, we've put each piece\ninto an appropriate
        category.  Take some time to explore everything that is\navailable. When you're
        done browsing, make a game or story using repeats,\nvariables, and events.
        \ \\\r\n\\\r\n_Hint: scroll down to see all the commands\nin the workspace._"
      gradek_artist_loops1: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      harvey_snowflake_artist1: "_It's time to get your snowflake\nready for 3d printing!_\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/ba50acd509bd25e07e7d4622a86ba158-image-1503785370113.08.08>\nPM.png>)In
        order for your image to print correctly, follow these rules:\\\r\n\\\r\n\\*\nMake
        sure your image is all **one piece**! Separate pieces will print separately.\\\r\n\\*\nMake
        sure your image **fits** entirely on the canvas\\\r\n\n-   Use just **black\n
        \   lines** on a white background.\\\r\n-   Jump the artist off the top left
        corner\n    (-10 over, -10 down) at the end of your program:\\\r\n    <xml>
        \   <block type=\"jump_to_xy\"><title\n    name=\"XPOS\">-10</title><title
        name=\"YPOS\">-10</title>\\\r\n    </block>\\\r\n    <block\n    type=\"jump_to\"><title
        name=\"VALUE\">7</title>\\\r\n    </block></xml>\\\r\n    When\n    you are
        finished, right-click to save the image, then send it to me on <a\n    href=\"https://classroom.google.com\">Google
        Classroom</a>."
      harvey_snowflake_artist2: "_It's time to get your snowflake\nready for 3d printing!_\\\r\n\\\r\n\\!\\[](\\<<https://images.code.org/ba50acd509bd25e07e7d4622a86ba158-image-1503785370113.08.08>\nPM.png>)In
        order for your image to print correctly, follow these rules:\\\r\n\\\r\n\\*\nMake
        sure your image is all **one piece**! Separate pieces will print separately.\\\r\n\\*\nMake
        sure your image **fits** entirely on the canvas\\\r\n\n-   Use just **black\n
        \   lines** on a white background.\\\r\n-   Jump the artist off the top left
        corner\n    (-10 over, -10 down) at the end of your program:\\\r\n    <xml>
        \   <block type=\"jump_to_xy\"><title\n    name=\"XPOS\">-10</title><title
        name=\"YPOS\">-10</title>\\\r\n    </block>\\\r\n    <block\n    type=\"jump_to\"><title
        name=\"VALUE\">7</title>\\\r\n    </block></xml>\\\r\n    When\n    you are
        finished, right-click to save the image, then send it to me on <a\n    href=\"https://classroom.google.com\">Google
        Classroom</a>."
      iceage_click_hello: "Can you help Sid call for his friends\nwhen you click on
        him? \\\r\nOnce you're done, press \"Run\" to play.  Click\non Sid to see
        your code work!"
      iceage_click_hello_2018: "Can you help Sid call for his friends\nwhen you click
        on him? \\\r\nOnce you're done, press \"Run\" to play.  Click\non Sid to see
        your code work!"
      iceage_free_play: "Time to create your\nown game or story!  \\\r\n\\\r\nWhen
        you're done, click \"Finish\" to let friends\ntry your game on their phones,
        tablets, or computers!\\\r\nDon't know what\nto make? Click the hints for
        details."
      iceage_free_play_2018: "Time to create your\nown game or story!  \\\r\n\\\r\nWhen
        you're done, click \"Finish\" to let friends\ntry your game on their phones,
        tablets, or computers!\\\r\nDon't know what\nto make? Click the hints for
        details."
      iceage_free_playcourseF_IceAge_11: "Time to create your\nown game or story!
        \ \\\r\n\\\r\nWhen you're done, click \"Finish\" to let friends\ntry your
        game on their phones, tablets, or computers!\\\r\nDon't know what\nto make?
        Click the hints for details."
      iceage_hello1: "Sid (actor 1) wants to gather everyone\nfor a new adventure.
        Can you help him say \"Hello!\" by dragging the `say`\nblock out and connecting
        it to the bottom of the `when run` event?   \\\r\n\\\r\nDon't\nforget to type
        \"Hello!\" inside!"
      iceage_hello1_2018: "Sid (actor 1) wants to gather everyone\nfor a new adventure.
        Can you help him say \"Hello!\" by dragging the `say`\nblock out and connecting
        it to the bottom of the `when run` event?   \\\r\n\\\r\nDon't\nforget to type
        \"Hello!\" inside!"
      iceage_move_events: "Scrat is still looking for acorns!\n\\\r\nHelp him scamper
        around by attaching a `move actor 1` block to each of\nthe events and changing
        the direction to work for each arrow key. \\\r\nWhen\nyou’re done, click \"Run\"
        and try to collect all of the acorns."
      iceage_move_events_2018: "Scrat is still looking for acorns!\n\\\r\nHelp him
        scamper around by attaching a `move actor 1` block to each of\nthe events
        and changing the direction to work for each arrow key. \\\r\nWhen\nyou’re
        done, click \"Run\" and try to collect all of the acorns."
      iceage_sound_and_points: "Here is your code from the last\npuzzle, as well as
        the code to move Granny left and right. \\\r\nCan you finish\nthe program
        to make it so that you both **play a sound** and **score a point**\nwhen Sid
        and Granny collide? \\\r\nPress \"Run\" to play the game."
      iceage_sound_and_points_2018: "Here is your code from the last\npuzzle, as well
        as the code to move Granny left and right. \\\r\nCan you finish\nthe program
        to make it so that you both **play a sound** and **score a point**\nwhen Sid
        and Granny collide? \\\r\nPress \"Run\" to play the game."
      iceage_throw_hearts: "Sid wants to let his grandmother,\nGranny, know that he
        loves her.   \\\r\n\\\r\nUse the `actor __ throw` command\nto have Sid (actor
        1) throw hearts at Granny (actor 2)! \\\r\nSet Granny's\nmood to happy when
        she gets hit with the hearts."
      iceage_throw_hearts_2018: "Sid wants to let his grandmother,\nGranny, know that
        he loves her.   \\\r\n\\\r\nUse the `actor __ throw` command\nto have Sid
        (actor 1) throw hearts at Granny (actor 2)! \\\r\nSet Granny's\nmood to happy
        when she gets hit with the hearts."
      iceage_warn_ice_age: "Everyone needs to move faster because\nan ice storm is
        coming! \\\r\nChange the scene to an icy background and set\nSid’s (actor
        1) speed to fast.\\\r\nPress \"Run\" and move Sid to Diego to warn\nhim."
      iceage_warn_ice_age_2018: "Everyone needs to move faster because\nan ice storm
        is coming! \\\r\nChange the scene to an icy background and set\nSid’s (actor
        1) speed to fast.\\\r\nPress \"Run\" and move Sid to Diego to warn\nhim."
      level 'grade3_Loops_10: "Such a busy bee!\\\r\n\\\r\nHelp Bee collect\nall of
        the nectar and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_11: "The shape of this path is different\nfrom the others.
        \\\r\n\\\r\nCan you collect all of the nectar using as few blocks\nas possible?"
      level 'grade3_Loops_3: Peux-tu utiliser une boucle pour recueillir tout ce nectar
        ?
      level 'grade3_Loops_4: Maintenant, utilise le nouveau bloc «Répéter» pour recueillir
        tout le nectar et fabriquer tout le miel.
      level 'grade3_Loops_5: "What a beautiful field of flowers!   \\\r\n\\\r\nHelp\nthe
        bee visit each one.\\\r\n\\\r\nCan you find a way to do it with fewer than\n7
        blocks?"
      level 'grade3_Loops_6: Que se passe-t-il si tu mets cette séquence en boucle
        3 fois ? N'oublie pas de faire le miel à la fin !
      level 'grade3_Loops_7: 'Chaque fleur contient une unité de nectar. Récolte le
        nectar de chacune des fleurs. '
      maker workshop final: "# Challenge: Explore!\\\r\n\n\\\r\nNow\nthat you've tested
        the waters a bit, go explore the full extent of this tool.\nOn this level
        you'll see lots of new blocks and even some completely new\nareas of functionality
        (like a database backend!). Feel free to go back to\nprevious levels for inspiration,
        or go off and building something completely\nyour own."
      name 'CSD U3 Keypress Boolean Predict': "# Make a Prediction:\n\nkeyDown()\\\r\nThe
        `keyDown()` block is the first of a new set of blocks that\nwill let us get
        input from the user. This is the first step on our road to\nactually making
        games! See if you can figure out how the `keyDown()` block\nworks.\\\r\n\\\r\nWhat
        do you think will happen when you run the program and press\nthe \"up\" arrow?
        Write your prediction below and then run the program to\nsee if your prediction
        was accurate."
      playEventsK1: "This game is called \"Play Lab\".\\\r\n\\\r\nSee\nif you can
        figure out what each block does."
      playEventsK2: "Jorge wants to say \"Hi there.\"\\\r\n\\\r\nCan\nyou help?\\\r\n\\\r\n![](https://images.code.org/f32d285fa6f45e1f8d042c04c55f32c8-image-1467988839292.gif)"
      playEventsK3: "Jorge wants to be scratched behind the\nears!\\\r\n\\\r\nCan
        you make it so that when you click Jorge he is happy?\\\r\n\\\r\n![](https://images.code.org/04fb37990455b215e0f20884363092d0-image-1467988943134.gif)"
      playEventsK4: "Can you make it so that Jorge the dog chases\nRobin the bird
        when you click the up arrow?\\\r\n\\\r\n![](https://images.code.org/2fbf6c793bb77a961fa7a52f27e4c59d-image-1467989013878.gif)"
      playEventsK5: "Now add code so that Robin flies away when\nyou click the forward
        arrow.\\\r\n\\\r\n![](https://images.code.org/a7e224c5f13e39e5342011f8a76d3b6b-image-1467989101328.gif)"
      playEventsK6: "Have Robin talk back to Jorge when you\nclick on her.\\\r\n\\\r\n![](https://images.code.org/fc80b1febbb7a472026b6bf2c535b2f4-image-1467989171517.gif)"
      playEventsK7: "What else can you do in this fun scene?\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>Need\nsome
        ideas?</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n        \\t<li><strong>Conversation</strong>\n-
        Have the sprites talk to eachother when you click on them.</li>\r\n            <li><strong>Pinball</strong>\n-
        Make one sprite play a noise when the other runs into it.</li>\r\n            <li><strong>Arrows</strong>\n-
        Write a program so when each arrow key is pressed, the sprite moves in that\ndirection!</li>\r\n
        \       </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>"
      post-assessment survey q32: "(Facultatif) : Explique pourquoi tu recommanderais
        ou non ce cours d’informatique à quelqu’un d’autre."
      post-assessment survey q37: "(Facultatif) Si tu n’as pas passé l'examen avancé,
        y aurait-il quelque chose qui t’aurais fait changer d’avis ?"
      pre-assessment survey q24A: 'Quelles connaissances en informatique utilises-tu
        dans la vie de tous les jours ? '
      pre-assessment survey q25A: 'Si oui, quel(s) cours d’informatique as-tu suivi
        avant ton cours d’informatique actuel ? '
      ramp_artist_loops1: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops1_2018: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops1_2019: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops5: "Loops sure make writing code easier!\\\r\n\\\r\nUse\nloops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50 pixels long and 50\n
        \   pixels tall\\\r\n-   You will need to turn 90 degrees in each direction"
      ramp_artist_loops5_2018: "Loops sure make writing code easier!\\\r\n\\\r\nUse\nloops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50 pixels long and 50\n
        \   pixels tall\\\r\n-   You will need to turn 90 degrees in each direction"
      ramp_artist_loops5_2019: "Loops sure make writing code easier!\\\r\n\\\r\nUse\nloops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50 pixels long and 50\n
        \   pixels tall\\\r\n-   You will need to turn 90 degrees in each direction"
      ramp_artist_loops6: "This staircase is much bigger, but\nit takes the same amount
        of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the puzzle."
      ramp_artist_loops6_2018: "This staircase is much bigger, but\nit takes the same
        amount of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the
        puzzle."
      ramp_artist_loops6_2019: "This staircase is much bigger, but\nit takes the same
        amount of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the
        puzzle."
      subgoal-test-clone: "### use goal labels to structure\n\nyour solution.\\\r\n\\\r\nThe
        turtle should draw a square moving clockwise.\\\r\n\\\r\nDrag\nout \"move
        turtle\" subgoal label into the workspace."
      subgoal-test: "### use goal labels to structure your solution.\\\r\n\n\\\r\nThe\nturtle
        should draw a square moving clockwise.\\\r\n\\\r\nDrag out [\"move turtle\"\nsubgoal
        label](#triggercallout=trigger_move_subgoal) into the workspace."
      subgoalU3L2_TurtleSquare_right: "<img src=\"https://images.code.org/ad48e7224312a6c41f4fc5727af53cc0-image-1436287265071.png\"\nalign=right>
        \\\r\n\n# Do This:\\\r\n\nThis time, draw a 1 x 1 square to the _front\nand
        right_ of the turtle as efficiently as possible.  Notice that there is\nno
        command to turn right! You need to figure out how to draw this by only\nturning
        left and moving forward.  The program should stop with turtle in its\noriginal
        position, facing its original direction.\\\r\n\\\r\nWhen you're done\nclick
        the Finish button to move onto the next problem.\\\r"
      subgoals_U3_turtle_prediction_FR: "## Code Trace\\\r\n\n\\\r\nIn\n1-2 sentences,
        explain what you think the following code does.\\\r\n\\\r\n![](https://images.code.org/5bc66acc4712cf1c835daac0c45422a8-image-1506532056958.png)"
      subgoals_U3_turtle_prediction_FR_2018: "## Code Trace\\\r\n\n\\\r\nIn\n1-2 sentences,
        explain what you think the following code does.\\\r\n\\\r\n![](https://images.code.org/5bc66acc4712cf1c835daac0c45422a8-image-1506532056958.png)"
      subgoals_U3_turtle_prediction_FR_2019: "## Code Trace\\\r\n\n\\\r\nIn\n1-2 sentences,
        explain what you think the following code does.\\\r\n\\\r\n![](https://images.code.org/5bc66acc4712cf1c835daac0c45422a8-image-1506532056958.png)"
      subgoals_u3_top_down_FR: "# Design a program\\\r\n\n\\\r\nDescribe,\nusing a
        top-down approach, how you would create a program to draw a white\nsnowflake
        on a blue background that uses random numbers, so the snowflake\nwill be unique
        every time you run the code. \\\r\n\\\r\nYou don’t need to write\nthe exact
        code or blocks that you would use, but you should describe what\nfunctions
        you would need to create, where you would or would not use loops,\nand where
        you would or would not use random numbers."
      subgoals_u3_top_down_FR_2018: "# Design a program\\\r\n\n\\\r\nDescribe,\nusing
        a top-down approach, how you would create a program to draw a white\nsnowflake
        on a blue background that uses random numbers, so the snowflake\nwill be unique
        every time you run the code. \\\r\n\\\r\nYou don’t need to write\nthe exact
        code or blocks that you would use, but you should describe what\nfunctions
        you would need to create, where you would or would not use loops,\nand where
        you would or would not use random numbers."
      subgoals_u3_top_down_FR_2019: "# Design a program\\\r\n\n\\\r\nDescribe,\nusing
        a top-down approach, how you would create a program to draw a white\nsnowflake
        on a blue background that uses random numbers, so the snowflake\nwill be unique
        every time you run the code. \\\r\n\\\r\nYou don’t need to write\nthe exact
        code or blocks that you would use, but you should describe what\nfunctions
        you would need to create, where you would or would not use loops,\nand where
        you would or would not use random numbers."
      test_anonymous_student_survey_next_class: Que feras-tu après ce cours ?
      test_anonymous_student_survey_why_class: Pourquoi suis-tu ce cours ? Donne au
        moins deux raisons.
      u3-old-drawing-view: "# Your Own Drawing\\\r\n\n\\\r\nIt is\nyour turn to create
        your own drawing. You should have drawn out your plan\non paper first.\\\r\n\\\r\n\n#
        Do This\\\r\n\nAs a reminder make sure you hit the objectives:\\\r\n\\\r\n\\*\nCreates
        an identifiable and named object or design (i.e. no random splatters\nof shapes)\\\r\n\n-
        \  Uses at least 10 shapes or text items (rect, ellipse, regularPolygon,\n
        \   text)\\\r\n-   Uses at least 4 different color fills\\\r\n-   Uses at
        least 2 different\n    color outlines\\\r\n-   Contains at least 3 different
        logical blocks of code with\n    comments\\\r"
