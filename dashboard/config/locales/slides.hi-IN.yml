---
hi:
  slides:
    maze_intro:
      1:
        text: कोड के अपने पहले घंटे के लिए आपका स्वागत है! चलो, सही में हमारी पहली
          प्रोग्रामिंग शुरू करते हैं.
      2:
        text: हम Blockly का प्रयोग करेंगे, जो की एक विज़ुअल प्रोग्रामिंग भाषा है जिसमे
          हम ब्लॉक को खींच कर और छोडकर कोडिंग करते हैं ।
      3:
        text: अधिकतर कोड टाइप किया हुआ है, लेकिन Blockly दृश्यात्मक है। प्रत्येक ब्लॉक
          "वास्तविक" कोड की लाइन के अनुरूप है।
      4:
        text: आप कंप्यूटर साइंस के मूल सिद्धांत सीखेंगे, वे अवधारणाएं, जिन्हें ऐप्स
          बनाने से लेकर मंगल ग्रह के रोवर को नियंत्रित करने तक कहीं भी उपयोग किया
          जा सकता है।
      5:
        text: प्रोग्राम आपके कंप्यूटर द्वारा अनुसरण करने के लिए निर्देशों का सेट है।
      6:
        text: आपके पहले प्रोग्राम का लक्ष्य हरे सूअर को हिट करने के लिए भूलभुलैया
          के माध्यम से एंग्री बर्ड को पाना है।
      7:
        text: बाईं ओर भूलभुलैया है, जहां आपका प्रोग्राम चलता है। प्रत्येक पहेली के
          लिए निर्देश भूलभुलैया के नीचे हैं।
      8:
        text: मध्य के टूलबॉक्स में एंग्री बर्ड के लिए कमांड्स हैं। आप अपना कोड बनाने
          के लिए इनका उपयोग करेंगे।
      9:
        text: दाईं ओर आपका वर्कस्पेस है, जहां आप अपना प्रोग्राम बनाने के लिए टूलबॉक्स
          में से ब्लॉक्स खींचेंगे। ब्लॉक मिटाने के लिए, इसे खींचकर कोने में ट्रैश
          में ले जाएं।
      10:
        text: प्रत्येक ब्लॉक एक निर्देश है। यदि आप "आगे की ओर मूव करें" ब्लॉक को अपने
          वर्कस्पेस में खींचते हैं और फिर "प्रोग्राम चलाएं” को दबाते हैं, तो पक्षी
          भूलभुलैया पर एक स्पेस मूव करता है।
      11:
        text: एक से अधिक क्रियाएं करने के लिए, आप अपने वर्कस्पेस में कई ब्लॉक्स खींचकर
          उन्हें एक साथ जोड़ सकते हैं। पक्षी ऊपर से नीचे तक कमांड्स करेगा।
      12:
        text: यदि आप प्रोग्राम चलाते हैं और इसे ठीक करके दुबारा प्रयास करना चाहते
          हैं, तो "पुनः सेट करें" बटन को दबाएं।
      13:
        text: आइए उन सूअरों को प्राप्त करें!
    artist_intro:
      1:
        text: नमस्कार, मैं JR हूं! प्रत्येक रेस कार टीम को जीतने के लिए कंप्यूटर वैज्ञानिकों
          की जरूरत है। वे कार को तेज़ चलने के लिए सक्रिय करने हेतु इससे डेटा का विश्लेषण
          करते हैं।
      2:
        text: इन पहेलियों में, आप एक कलाकार होंगे, जो जहां भी जाता है, अपने पीछे एक
          लाइन खींचता है।
      3:
        text: इस ब्लॉक कहता है "100 पिक्सल तक आगे की ओर मूव करें।" पिक्सल्स आपकी स्क्रीन
          पर बहुत ही छोटी-छोटी बिंदियां हैं।
      4:
        text: यह ब्लॉक कहता है "90 डिग्री तक दाएं मुड़ें।" यह आपके कलाकार को उतनी
          दूरी तक ही मोड़ देगा, जैसे भूलभुलैया पहेलियों में "मोड़ें" ब्लॉक्स मोड़ते
          हैं।
      5:
        text: कलाकार द्वारा आगे की ओर मूव करने या मुड़ने की मात्रा को बदलने के लिए
          इन ब्लॉक्स में से किसी एक में तीर पर क्लिक करें। इन नए ब्लॉक्स से परिचित
          होने के लिए इनमें दिलचस्पी लें।
    farmer_intro:
      1:
        text: नमस्कार, मैं पाओला (Paola) हूं! इन पहेलियों में, आप किसान हैं, जिसे
          फसलें रोपने के लिए अपने खेत को पूरी तरह से समतल करना होगा।
      2:
        text: आपको सभी मिट्टी के ढेर हटाने और सभी सुराखों को भरने में उसकी मदद करनी
          होगी।
      3:
        text: नए ब्लॉक्स ढेर से मिट्टी का 1 भरा बेलचा हटाते हैं और सुराख में मिट्टी
          का 1 भरा बेलचा भरते हैं।
      4:
        text: ढेरों और सुराखों का आकार अलग-अलग है, इसलिए आपको किसान को बताना होगा
          कि कितने भरे बेलचों का उपयोग करना है।
    flappy_intro:
      1:
        text: नमस्कार, मैं कैटी (Katie) हूं! कंप्यूटर साइंस के बारे में सबसे रोमांचक
          बात यह है कि कंप्यूटर प्रोग्राम संवादात्मक हो सकता है।
      2:
        text: किसी भी समय जब कोई व्यक्ति कंप्यूटर या फोन पर क्लिक करता है, टैप करता
          है या टाइप करता है, तो वह एक इवेंट (EVENT) उत्पन्न करता है, और कुछ कोड होता
          है, जो निर्धारित करता है कि जब इवेंट (EVENT) घटित हो तो क्या करना है।
      3:
        text: 'उदाहरण के लिए, आपके पास इवेंट- हैंडलर (EVENT-HANDLER) हो सकता है, जो
          कहता है, "जब माउस क्लिक किया जाता है, तो ध्वनि प्ले करें" '
      4:
        text: क्या आपने कभी FlappyBird गेम का नाम सुना है? इवेंट हैंडलर्स का उपयोग
          करके, हम FlappyBird के हमारे खुद के अनुकूलित संस्करण को प्रोग्राम करना सीखेंगे!
      5:
        text: जो कोड आप लिखेंगे, उसमें खींचने और छोड़ने वाले ब्लॉक्स होंगे, जो कंप्यूटर
          के लिए कमांड्स प्रदर्शित करते हैं। हुड के नीचे, इनमें से प्रत्येक ब्लॉक
          को वास्तविक कोड द्वारा प्रदर्शित किया जाता है।
      6:
        text: 'यदि आप वर्कस्पेस पर नज़र डालें, तो वहां कुछ हरे ब्लॉक्स हैं, जो आपके
          लिए भरे गए हैं - ये "इवेंट हैंडलर” हैं। '
      7:
        text: यदि आप पक्षी को फड़फड़ाना चाहते हैं, जब आप माउस को क्लिक करें, तो आप
          उपयुक्त इवेंट हैंडलर में "फड़फड़ाएं" ब्लॉक जोड़कर ऐसा कर सकते हैं और अब
          आपकी गेम में जब भी माउस को क्लिक करेंगे, तो पक्षी फड़फड़ाएगा।
      8:
        text: इस गतिविधि की प्रत्येक पहेली में, हम वर्कस्पेस पर हरे ब्लॉक्स के तौर
          पर इवेंट्स के नए प्रकारों का परिचय देंगे, और आप उन इवेंट्स की प्रतिक्रिया
          में जोड़ने के लिए उपयुक्त ब्लॉक्स निर्धारित कर सकते हैं।
      9:
        text: जब आप इस तरह का ड्रॉप डाउन तीर देखते हैं, तो उसका मतलब होता है कि आप
          सेटिंग्स बदल सकते हैं - जैसे जब फ्लैपी ज़मीन से टकराए तो कौन-सी ध्वनि प्ले
          करनी है।
      10:
        text: अंतिम पहेली में, आप अपनी खुद की गेम बनाकर अपने दोस्तों के साथ साझा करने
          में सक्षम हो जाएंगे। आनंद लें!
    loop_times:
      1:
        text: नमस्कार, मैं मार्क (Mark) हूं! आइए लूप्स के बारे में सीखें। लूप्स का
          उपयोग करने से, आप कंप्यूटर को बार-बार, हज़ारों, यहां तक कि अरबों बार क्रियाओं
          के किसी भी सेट को दोहराने के लिए कह सकते हैं।
      2:
        text: इस पहेली में, हम पक्षी को सूअर तक जाने के लिए 5 स्थान आगे की ओर मूव
          करने के लिए सक्रिय करना चाहते हैं।
      3:
        text: हम अपनी मदद के लिए नए "दोहराएं" ब्लॉक का उपयोग कर सकते हैं।
      4:
        text: 5 "आगे की ओर मूव करें” ब्लॉक्स को बाहर खींचने की बजाए...
      5:
        text: हम "आगे की ओर मूव करें" ब्लॉक को "दोहराएं" ब्लॉक के अंदर रख सकते हैं
          और इसे यह बताने के लिए ब्लॉक में एक संख्या लिख सकते हैं कि कितनी बार दोहराना
          है।
      6:
        text: 'यह महत्वपूर्ण है: आप "दोहराएं" ब्लॉक के अंदर एक से अधिक कमांड रख सकते
          हैं।'
      7:
        text: अपना नया "दोहराएं" ब्लॉक उपयोग करने का आनंद लें!
    loop_until:
      1:
        text: नमस्कार, मैं क्रिस (Chris) हूं। Miami Heat से जुड़ने से पहले, मैं कंप्यूटर
          साइंस पढ़ने के लिए Georgia Tech में गया था। आइए हमारा नया ब्लॉक "तक दोहराएं"
          ब्लॉक आजमाएं।
      2:
        text: यदि आपको पता न हो कि पक्षी को सूअर के पास जाने के लिए कितनी दूरी तक
          मुड़ना होगा तो क्या होगा?
      3:
        text: यदि हम "आगे की ओर मूव करें" ब्लॉक को "तक दोहराएं" ब्लॉक के अंदर मूव
          करते हैं, तो पक्षी तब तक आगे की ओर मूव करेगा, जब तक कि यह सूअर तक नहीं पहुंच
          जाता (या दीवार से नहीं टकरा जाता)।
      4:
        text: 'यह महत्वपूर्ण है: बिल्कुल पहले की तरह, हम "तक दोहराएं" ब्लॉक के अंदर
          बहुत-से ब्लॉक रख सकते हैं, और उन सभी को दोहराया जाएगा।'
    if:
      1:
        text: 'नमस्कार, मैं बिल (Bill) हूं! आइए नई बुनियादी अवधारणा: "इफ" स्टेटमेंट्स
          सीखें। यह इस बारे में है कि कंप्यूटर कैसे निर्णय लेते हैं।'
      2:
        text: आप खुद रोज़ाना "इफ" स्टेटमेंट्स का उपयोग करते हैं। हर सुबह बाहर जाने
          से पहले, आप कहते हैं, यदि बाहर बारिश हो रही है, तो मुझे अपनी जैकेट पहननी
          पड़ेगी।
      3:
        text: हम ज़ोम्बी को बता सकते हैं कि यदि बाईं ओर रास्ता हो, और यदि वह बाईं
          ओर रास्ता ढूंढ लेता है, तो हम उसे उस दिशा में मोड़ सकते हैं।
      4:
        text: इसके लिए कोड लिखने के लिए, आइए हमारे "इफ" ब्लॉक को बाहर खींचें और इसके
          अंदर "बाएं मुड़ें" ब्लॉक रखें।
      5:
        text: अब, यदि हम "आगे की ओर मूव करें" ब्लॉक को इसके ऊपर रखते हैं और "दोहराएं"
          ब्लॉक को हर चीज़ के चारों ओर रखते हैं, तो हर बार जब ज़ोम्बी मूव करेगा, तो
          वह देखेगा कि क्या बाईं ओर कोई रास्ता और मोड़ है। "दोहराएं” कमांड हर कदम
          पर मोड़ देखने के लिए महत्वपूर्ण है।
      6:
        text: इफ स्टेटमेंट्स कंप्यूटर साइंस के लिए बहुत महत्वपूर्ण हैं। पहले प्रोग्रामों
          में से एक टिक-टैक-टो गेम थी, जो मैंने लिखे थे, और एक इफ स्टेटमेंट थी, जिसमें
          बताया गया था कि यदि दूसरा व्यक्ति जीतने वाला हो, तो उस स्थान को अवरोधित
          कर दें, जो उनके जीतने देता है।
      7:
        text: '"इफ" ब्लॉक उपयोग करने का आनंद लें!'
    if_else:
      1:
        text: नमस्कार, मेरा नाम सलोनी (Saloni) है। मैं स्वास्थ्य और औषधि में सवाल
          हल करने में मदद के लिए कंप्यूटर साइंस का उपयोग करती हूं। आइए "इफ एल्स" ब्लॉक
          के बारे में सीखें। यह "इफ" ब्लॉक जैसा लगता है, लेकिन इसमें अंत में एक अतिरिक्त
          भाग है, जो "एल्स” का वर्णन करता है।
      2:
        text: यदि मैं उस स्थान पर "आगे की ओर मूव करें" ब्लॉक रखूं, जहां यह कहता है
          "करें" और "बाएं मुड़ें" ब्लॉक रखूं, जहां यह कहता है, "एल्स", जिसका मतलब
          है कि ज़ोम्बी 2 विकल्पों के बीच चुनेगा। यदि आगे रास्ता हो, तो ज़ोम्बी आगे
          की ओर मूव करेगा, और अन्यथा (आगे रास्ता नहीं है), तो ज़ोम्बी बाएं मुड़ेगा।
      3:
        text: बिल्कुल "इफ" ब्लॉक की तरह, हम "इफ एल्स" ब्लॉक्स को "दोहराएं” ब्लॉक्स
          के अंदर रख सकते हैं ताकि ज़ोम्बी मूव करता रहे और "इफ एल्स" ब्लॉक यह देखता
          रहे कि मुड़ने के लिए कोई स्थान है या नहीं।
      4:
        text: अब, उन ज़ोम्बीज को वहां ले जाएं, जहां के वे हैं!
    if_else_scrat:
      1:
        text: इफ-एल्स स्टेटमेंट दो चीज़ों के बीच निर्णय है। आइए देखें कि हम अपने दोस्त
          स्क्रैट द गिलहरी के साथ इफ-एल्स स्टेटमेंट का उपयोग कैसे कर सकते हैं।
      2:
        text: यह ब्लॉक बिल्कुल "इफ" ब्लॉक जैसा लगता है, लेकिन नीचे एक अतिरिक्त भाग
          है, जो कहता है "एल्स"। यदि मैं उस स्थान पर "आगे की ओर मूव करें" ब्लॉक रखूं,
          जहां यह कहता है "करें" और "बाएं मुड़ें" ब्लॉक रखूं, जहां यह कहता है, "एल्स",
          जिसका मतलब है कि यदि आगे रास्ता हो, तो स्क्रैट द गिलहरी आगे की ओर मूव करेगा।
          यदि आगे रास्ता नहीं है, तो स्क्रैट द गिलहरी बाएं मुड़ेगा।
      3:
        text: यह निर्णय लेना और उस निर्णय के आधार पर दो क्रियाओं में से किसी एक को
          करना है। बिल्कुल "इफ" ब्लॉक्स की तरह, आप "इफ-एल्स" ब्लॉक्स को "दोहराएं"
          ब्लॉक्स के अंदर रख सकते हैं।
      4:
        text: अब आइए शाहबलूत प्राप्त करने में स्क्रैट द गिलहरी की मदद करें!
    function:
      1:
        text: नमस्कार, मैं Instagram में इंजीनियर ब्रिना (Brina) हूं। फंक्शन में कोड
          की कुछ लाइनें हैं, जिन्हें आप बार-बार उपयोग करना चाहते हैं, इसलिए हर बार
          उस कोड को लिखने की बजाय, आप केवल एक ब्लॉक का उपयोग कर सकते हैं।
      2:
        text: हम यह सीखने वाले हैं कि फंक्शनों को परिभाषित कैसे किया जाए। फंक्शन की
          परिभाषाओं में कोने में तारा है। फंक्शन का नाम ऊपर की लाइन पर लिखा गया है।
      3:
        text: जो ब्लॉक्स परिभाषा के अंदर जाते हैं, वे हमें बताते हैं कि यह क्या करते
          हैं। इसलिए इस फंक्शन परिभाषा को "5 भरें" कहा जाता है और यह "दोहराएं" ब्लॉक
          और "भरें" ब्लॉक से मिलकर बनी है।
      4:
        text: परिभाषा वर्कस्पेस में स्थित है, लेकिन हमारा किसान तब तक फंक्शन नहीं
          चलाएगा, जब तक हम फंक्शन्स श्रेणी में से "5 भरें" फंक्शन ब्लॉक को बाहर नहीं
          खींचते।
      5:
        text: 'आइए "फंक्शन” में फिर से "फन" डालें!” '
    loop_while:
      1:
        text: 'नमस्कार, मैं मैकिंडे (Makinde) हूं! आइए "व्हाइल ब्लॉक” के बारे में
          जानें। '
      2:
        text: '"व्हाइल ब्लॉक" तब तक वह सब करेगा, जो आप इसके अंदर रखेंगे, जब तक ऊपर
          दी गई स्टेटमेंट सही हो।'
      3:
        text: उदाहरण के लिए, यदि किसान ढेर पर खड़ी है, तो वह लगातार एक भरा बेलचा हटाएगी,
          जबकि इसके नीचे अभी भी ढेर हो।
    loop_for:
      1:
        text: नमस्कार, मैं ट्रिना (Trina) हूं, और मैं Pixar के लिए काम करती हूं। मैंने
          Shrek सहित कुछ फिल्मों में काम किया है।
      2:
        text: यह हमारी नई "काउंटर" लूप है। यह बार-बार क्रियाएं करेगी और आप हर बार
          क्रियाओं में थोड़ा बदलाव कर सकते हैं।
      3:
        text: इस उदाहरण में, हमारी "काउंटर" लूप कहती है "10 के साथ 50 से 90 काउंटर
          के साथ गिनें" और इसके अंदर, हमारे पास हमारा "वर्ग खींचें" ब्लॉक है। "वेरिएबल्स"
          अनुभाग से "काउंटर" ब्लॉक को खींचकर "लंबाई" स्थान में लाएं।
      4:
        text: इसका मतलब है कि हमारा कलाकार ऐसा वर्ग खींचने वाला है, जिसकी 50 पिक्सल
          लंबाई की भुजाएं हैं, फिर यह उसमें 10 जोड़ेगा और 60 पिक्सल लंबाई की भुजाओं
          वाला वर्ग खींचेगा। फिर यह 10 जोड़ता और वर्ग खींचता रहेगा, जब तक कि यह 90
          तक नहीं पहुंच जाता। तो हमारे पास 50, 60, 70, 80, और 90 वर्ग होंगे।
    parameters:
      1:
        text: नमस्कार, मैं जैनेट (Janete) हूं और मैं Zynga में इंजीनियर हूं।
      2:
        text: यदि हम कुछ त्रिकोण खींचना चाहें और उनकी लंबाईयां अलग-अलग आकार की हों
          तो क्या करेंगे?
      3:
        text: हम वह पूरा कोड हाथ से लिख सकते हैं या हम मापदंडों वाला फंक्शन उपयोग
          कर सकते हैं।
      4:
        text: ऐसा करने के लिए, "त्रिकोण खींचें" फंक्शन परिभाषा पर दिए नीले तारे पर
          क्लिक करें। फिर "इनपुट" ब्लॉक में "नाम डालें" ब्लॉक को खींचें।
      5:
        text: उसके बाद यदि आप उस स्थान पर "लंबाई" लिखते हैं, जहां यह कहता है "x" और
          "दर्ज करें" को दबाते हैं तो आप अपने फंक्शन के लिए लंबाई इनपुट बना लेंगे।
      6:
        text: फिर तारे पर क्लिक करें। अब, आप वेरिएबल्स श्रेणी पर क्लिक करके "लंबाई"
          ब्लॉक को अपनी फंक्शन परिभाषा के "आगे की ओर मूव करें" ब्लॉक में खींचना चाहते
          हैं। पुराने संख्या ब्लॉक को बाहर खींचें।
      7:
        text: मापदंडों वाले अपने फंक्शन का उपयोग करने के लिए, फंक्शन्स श्रेणी पर क्लिक
          करें और अपना "लंबाई के साथ त्रिकोण खींचें" फंक्शन को बाहर खींचें।
      8:
        text: अब आप अलग-अलग आकार के त्रिकोण खींचने के लिए अलग संख्याएं डालने के लिए
          गणित ब्लॉक का उपयोग कर सकते हैं।
    hoc_wrapup:
      1:
        text: बधाई हो! जो पिछली पहेली आपने हल की थी, उसके साथ आपने कोड लिखा था, जो
          किसी भी रोबोट को बता सकता है कि किसी बिना शाखाओं वाले भूलभुलैया या किसी
          भी लंबाई की सुरंग में से रास्ता कैसे ढूंढना है, चाहे वह ज़ोम्बी हो, पक्षी
          हो, मंगल ग्रह का रोवर हो या स्व-चलने वाली कार क्यों न हो।
      2:
        text: आपके द्वारा उपयोग की गई बुनियादी अवधारणाएं प्रत्येक प्रोग्राम या ऐप
          के लिए बेहद महत्वपूर्ण हैं, जिसका आप कभी भी प्रयास करेंगे।  हमने दोहराएं
          लूप्स, तक दोहराएं स्टेटमेंट्स, इफ स्टेटमेंट्स और इफ एल्स स्टेटमेंट्स के
          बारे में सीखा है।
      3:
        text: यदि आपको अपना पहला आवर ऑफ़ कोड पसंद आया, तो कंप्यूटर साइंस में अपनी
          शिक्षा को जारी रखने के लिए code.org पर जाएं! जब आप हमारा 20 घंटे का कोर्स
          पूरा कर लें, तो आप प्रोग्रामिंग के मूल सिद्धांतों में निपुण हो जाएंगे और
          आप यह सीखना शुरू कर सकते हैं कि फोन ऐप्स, रोबोट निर्देश, गेम्स, या जो भी
          आप सोचें, उसे कैसे लिख सकते हैं।
      4:
        text: 'प्रौद्योगिकी हमारे द्वारा किए जाने वाले हर कार्य को बदल रही है और इससे
          कोई फर्क नहीं पड़ता कि आप युवा हैं या बुजुर्ग: प्रोग्रामिंग मज़ेदार है,
          यह रचनात्मक है, और कोई भी सीख सकता है!'
    20_wrapup:
      1:
        text: नोट्स दिखाएं जल्द आ रहा है!
    frozen_intro:
      1:
        text: नमस्कार, मेरा नाम लिंड्से (Lyndsey) है। मैं अपने मॉडलिंग, अभिनय करती
          हूं और अपने खुद के ऐप्स लिखती हूं। आइए ऐना और एल्सा से जुड़ने के लिए कोड
          का उपयोग करें, जब वे बर्फ के जादू और सुंदरता की पड़ताल करती हैं।
      2:
        text: जब आप बर्फ पर स्केटिंग करेंगे तो आप हिम-पक्षी और पैटर्न बनाएंगे और सर्दी
          का परीलोक बनाएंगे, जिसे आप बाद में अपने दोस्तों के साथ साझा कर सकते हैं।
      3:
        text: अगले घंटे में, आप इस बारे में मूल सिद्धांत सीखने वाले है कि कोड कैसे
          करना है। पारंपरिक प्रोग्रामिंग आमतौर पर टेक्सट में होती है, लेकिन हम Blockly
          का उपयोग करेंगे, जो दृश्यात्मक ब्लॉक्स का उपयोग करता है, जिन्हें आप प्रोग्राम
          लिखने के लिए खींच और छोड़ सकते हैं। यहां तक कि यूनिवर्सिटी क छात्र भी इसी
          तरह से मूल सिद्धांतों को सीखते हैं। हुड के नीचे, आप अभी भी कोड बना रहे हैं।
      4:
        text: प्रोग्राम ऐसे निर्देशों का सेट है, जो कंप्यूटर को बताता है कि क्या करना
          है। आइए कोड, या प्रोग्राम बनाएं, जो एक साधारण लाइन बनाने में एल्सा की मदद
          करेगा। हम बाद में अधिक जटिल पैटर्न बनाने के लिए इसका उपयोग करेंगे।
      5:
        text: आपकी स्क्रीन तीन मुख्य भागों में बंटी हुई है। बाईं ओर, बर्फ की सतह है,
          जहां आप अपना प्रोग्राम चलाएंगे। प्रत्येक स्तर के लिए निर्देश सतह के बिल्कुल
          नीचे लिखे गए हैं।
      6:
        text: यह मध्य का क्षेत्र टूलबॉक्स है, और इनमें से प्रत्येक ब्लॉक एक क्रिया
          है, जिसे एल्सा और ऐना कर सकते हैं।
      7:
        text: दाईं ओर सफेद स्थान को वर्कस्पेस कहा जाता है, और यहीं पर हम अपना प्रोग्राम
          बनाएंगे। बर्फ की सतह के चारों ओर मूव करने के लिए, आप "आगे की ओर मूव करें”
          ब्लॉक का उपयोग करेंगे।
      8:
        text: यहां, "आगे की ओर मूव करें" ब्लॉक कहता है, "100 पिक्सल तक आगे की ओर मूव
          करें।" जब हम "चलाएं” को दबाते हैं, तो क्या होता है? एल्सा थोड़ी दूर तक स्क्रीन
          पर आगे की ओर मूव करती है, असल में 100 पिक्सल तक! पिक्सल मूलतः आपकी स्क्रीन
          पर बहुत ही छोटे-छोटे वर्ग हैं।
      9:
        text: इस पहेली में हमारे पास जो अन्य ब्लॉक है, वह कहता है "90 डिग्री तक दाएं
          मुड़ें।" और तब हम इस "दाएं मुड़ें" ब्लॉक का उपयोग करते हैं, जो एल्सा को
          थोड़ी दूरी तक मुड़ने के लिए सक्रिय करता है। कोण का माप एल्सा के आगे के रास्ते
          से लिया गया है। इसलिए, यह 90 डिग्री का मोड़ है। और यह 120 डिग्री का मोड़
          है।
      10:
        text: याद रखें, आप पिक्सल्स और डिग्री की संख्या को उसके साथ मौजूद तीरों पर
          क्लिक करके बदल सकते हैं।
    frozen_loops:
      1:
        text: नमस्कार, मैं पाओला (Paola) हूं! कंप्यूटर दोहराने की क्रियाओं में बहुत
          ही निपुण है। आप 10, 20, या 100 तक गिन सकते हैं। लेकिन कंप्यूटर अरबों या
          खरबों तक गिनती कर सकता है। यह ऊबेगा नहीं और यह केवल कुछ सेकंड का समय लगाएगा।
          चाहे गिनती हो, या ड्राइंग या कुछ और हो--कंप्यूटर सैंकड़ों या अरबों बार चीज़ों
          को दोहरा सकते हैं।
      2:
        text: प्रोग्रामिंग में, हम इसे लूप कहते हैं। लूप वह है, जिससे आप बार-बार अपना
          कोड दोहराते हैं। अगली पहेली के लिए, आपका लक्ष्य "दोहराएं" ब्लॉक के साथ वर्ग
          बनाने में ऐना की मदद करने का है।
      3:
        text: कोड के कोई भी वे ब्लॉक्स, जिन्हें आप "दोहराएं" ब्लॉक के अंदर रखते हैं,
          वे क्रम में दोहराएं जाएंगे, जितनी बार आप चाहें।
      4:
        text: वर्ग खींचने के लिए, आप "आगे की ओर मूव करें" और "दाएं मुड़ें" ब्लॉक 4
          बार उपयोग कर सकते हैं। लेकिन अधिक आसान तरीका कंप्यूटर को एक बार यह बताना
          है कि "आगे की ओर मूव करें" और "90 डिग्री तक दाएं मुड़ें” और फिर इसे 4 बार
          क्रियाओं की इस जोड़ी को दोहराने के लिए कहना है। ऐसा करने के लिए, आपको "आगे
          की ओर मूव करें" और "दाएं मुड़ें" ब्लॉक को "दोहराएं" ब्लॉक के अंदर रखने की
          जरूरत है।
      5:
        text: याद रखें, आप किसी भी चीज़ से "दोहराएं" ब्लॉक में संख्या बदल सकते हैं,
          और यह उसी को उतनी बार दोहराएगा, जितनी बार ब्लॉक के अंदर दिया है।
    frozen_functions:
      1:
        text: नमस्कार, मैं क्रिस बोश (Chris Bosh) हूं। मैं पेशेवर बास्केटबॉल खिलाड़ी
          हूं, और मैंने कॉलेज में कोड बनाया था।
      2:
        text: कंप्यूटर साइंस में सबसे महत्वपूर्ण अवधाराणाओं में से एक यह है कि नई
          कमांड्स को कैसे परिभाषित करना है। अधिकतर कंप्यूटर भाषाओं में लगभग 100 शब्द
          या कमांड्स ही होती हैं। असल में, इन बिल्डिंग ब्लॉक्स में से आपके अपने शब्दों
          को परिभाषित करने में कला और जादू है।
      3:
        text: जब आपने किसी कंप्यूटर को यह सिखा दिया कि कमांड्स के इस क्रम का उपयोग
          करते हुए क्रिया एक बार क्रिया कैसे करनी है, तो आप उस क्रिया के लिए अपना
          खुद का नाम बना सकते हैं ताकि इसे बाद में दोहराना आसान हो। जब अपनी खुद की
          कमांड को परिभाषित करते हैं और इसे नाम देते हैं, तो उसे फंक्शन कहा जाता है।
      4:
        text: नमस्कार, मैं जेस (Jess) हूं। ब्लॉक्स से साथ प्रोग्रामिंग करते समय, आप
          फंक्शनों का उपयोग करेंगे, यदि वहां उन क्रियाओं का सेट हो, जिसे आप कई बार
          उपयोग करना चाहते हैं। उदाहरण के लिए, आपने वर्ग बनाने के लिए कोड लिखा है।
      5:
        text: 'आप इसे "वर्ग बनाएं” नामक फंक्शन के तौर पर परिभाषित कर सकते हैं। '
      6:
        text: अब आपके पास नया ब्लॉक है, जिसका उपयोग आप कई वर्ग बनाने के लिए कई बार
          कर सकते हैं।
      7:
        text: अधिक जटिल पैटर्न बनाने के लिए बहुत-सी साधारण आकृतियों का उपयोग किया
          जा सकता है। अगली पहेली में, चक्कर बनाने के लिए जो कोड आपने अभी लिखा था,
          वह नए फंक्शन के तौर पर आपके लिए उपलब्ध है, जो अलग-अलग आकार के चक्कर बना
          सकता है। क्या आप बर्फ में जटिल और सुंदर पैटर्न बनाने में एल्सा की मदद के
          लिए इसका उपयोग कर सकते हैं?
    playlab_intro:
      1:
        text: हम प्ले लैब का उपयोग करते हुए गेम्स बनाने वाले हैं। अच्छी गेम्स की एक
          कहानी होती है, और प्रत्येक कहानी में अभिनेता होते हैं। हम सीखेंगे कि विच,
          एलियन और जानवरों जैसे हमारे अभिनेताओं तो एक-दूसरे से बात करने, मूव करने
          और संवाद करने के लिए कैसे सक्रिय किया जाए। इस ट्यूटोरियल के अंत तक, आप शुरू
          से गेम बना सकते हैं और इसे अपने दोस्तों के साथ साझा कर सकते हैं।
      2:
        text: आपकी स्क्रीन 3 मुख्य भागों में बंटी हुई है। बाईं ओर, गेम स्पेस है, जहां
          आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश नीचे लिखे गए हैं।
      3:
        text: मध्य का भाग टूलबॉक्स है, और इन ब्लॉक्स में से प्रत्येक कोड का भाग है।
          दाईं ओर सफेद स्थान को वर्कस्पेस कहा जाता है और यहीं पर हम अपना प्रोग्राम
          बनाएंगे।
      4:
        text: शुरुआत करने के लिए, आपको अपने ब्लॉक्स को संतरी "जब चलाया जाए" ब्लॉक
          से जोड़ने की जरूरत होगी। आप कई ब्लॉक्स को तब तक बाहर खींचकर साथ जोड़ सकते
          हैं, जब तक कि आप पीली लाइन न देख लें और फिर वे एक साथ जुड़ जाएंगे।
      5:
        text: इस पहली पहेली में, हमारा अभिनेता पेंगुइन है और हम बोलें ब्लॉक को बाहर
          खींचकर, इसे जब चलाया जाए ब्लॉक से जोड़कर, और "हेलो" टाइप करके इसे "हेलो!”
          कहने के लिए सक्रिय करेंगे। हम दाईं ओर मूव करें और बाईं ओर मूव करें ब्लॉक्स
          का उपयोग करके भी पेंगुइन को मूव करने के लिए सक्रिय कर सकते हैं। जब आपके
          ब्लॉक्स स्थापित हो जाएं, तो यह देखने के लिए चलाएं बटन पर हिट करें कि आपके
          क्या प्रोग्राम किया है।
      6:
        text: शुरुआत करें और अंत तक, आप हर प्रकार के ऐसे खिलाड़ियों के साथ अपनी खुद
          की गेम बनाने में सक्षम होंगे, जिनके साथ आप संवाद कर सकते हैं, उन्हें खुश
          या उदास कर सकते हैं, अंक हासिल कर सकते हैं, या आग के गोले फेंक सकते हैं,
          यहां तक कि एक-दूसरे को गायब कर सकते हैं। यह आप पर है कि आप कौन-सी गेम बनाना
          चाहते हैं।
    playlab_events:
      1:
        text: अब, हम कुछ ऐसी चीज़ों के बारे में सीखने वाले हैं, जिनका उपयोग सभी गेम
          प्रोग्रामर रोजाना करते हैं। इन्हें इवेंट्स कहा जाता है। इवेंट आपके प्रोग्राम
          को सुनने के लिए कहती है कि कोई चीज़ कब घटित होनी है। जब वह चीज़ घटित होती
          है, तो यह एक क्रिया का प्रदर्शन करती है।
      2:
        text: इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, तीर के बटन या स्क्रीन पर थपथपाने
          को सुनना।
      3:
        text: यहां, हम स्पेस बोट को पृथ्वीवासियों का अभिवादन करने के लिए सक्रिय करने
          वाले हैं, जब खिलाड़ी उस पर क्लिक करता है। हम "जब क्लिक किया गया हो" ब्लॉक
          का उपयोग करेंगे और इसमें "बोलें” ब्लॉक जोड़ेंगे। जब खिलाड़ी स्पेस बोट पर
          क्लिक करता है, तो इस "जब क्लिक किया गया हो" इवेंट ब्लॉक से जुड़ी हर चीज़
          का प्रदर्शन होगा। आपका एलियन क्या कहता है?
      4:
        text: '"जब तीर” ब्लॉक्स भी मौजूद हैं। यदि आप इनके साथ "मूव करें" ब्लॉक को
          जोड़ते हैं, तो आप अपने अभिनेताओं को ऊपर, नीचे, बाएं या दाएं मूव करना शुरू
          कर सकते हैं। कदम दर कदम, आपकी गेम और संवादात्मक होती जाती है।'
    playlab_repeat_forever:
      1:
        text: यह "हमेशा दोहराएं" ब्लॉक है। इस ब्लॉक के अंदर कोई भी चीज़ गेम में हमेशा
          घटित होगी।
      2:
        text: यदि आप खिलाड़ी द्वारा बिना कुछ किए ही, अभिनेता को कोई चीज़ बार-बार करने
          के लिए सक्रिय करना चाहते हैं, तो हम उन ब्लॉक्स को "हमेशा दोहराएं" ब्लॉक
          के अंदर डाल देंगे।
      3:
        text: इस अगली पहेली में, हमारा लक्ष्य राजधानी की सीमाओं पर, लगातार बाएं व
          दाएं गश्त लगाने में जादूगर की मदद करना है। यह सीखने से कि दोहराएं कमांड्स
          कैसे काम करती हैं, बाद में आपका बहुत-से समय की बचत होगी, जब आप अपनी खुद
          की गेम बनाएंगे।
    C1_artist_intro:
      1:
        text: ये आपके खींचें ब्लॉक्स हैं। कलाकार को वहां मूव करने के लिए सही ब्लॉक
          का उपयोग करें, जहां उसे स्लेटी लाइनें भरने के लिए जाने की जरूरत है।
      2:
        text: ये कूदें ब्लॉक्स हैं। जब आप इनका उपयोग करते हैं, तो आपका कलाकार मूव
          करता है लेकिन खींचता नहीं है, इसलिए इनका उपयोग अगली स्लेटी लाइन पर कूदने
          के लिए करें।
    C1_bee_level_intro:
      1:
        text: क्या मधुमक्खियां बहुत शांत नहीं हैं? पहेलियों के इस अगले सेट में, आपका
          लक्ष्य फूलों के पास जाने और फूलों से मधुरस प्राप्त करने व शहद बनाने के लिए
          मधु के छत्ते के ऊपर मंडराने में मधुमक्खी की मदद करना है। आपको इस अभ्यास
          के लिए "मधुरस प्राप्त करें" और "शहद बनाएं” ब्लॉक्स की जरूरत होगी।
      2:
        text: 'हर फूल में मधुरस की अलग संख्या है: 1, 2, 3, या अधिक। कोने में छोटी
          संख्या के मुताबिक, हम जानते हैं कि लाल फूलों में कितना मधुरस है। इसलिए आगे
          बढ़ने से पहले फूल से सारा मधुरस प्राप्त करना सुनिश्चित करें। साथ ही, प्रत्येक
          मधु के छत्ते के पास बहुत-सा शहद हो सकता है: 1, 2, 3, या अधिक। मधु के छत्ते
          से अधिक से अधिक शहद बनाना सुनिश्चित करें।'
      3:
        text: यदि आप पूरा मधुरस प्राप्त करने और सारा शहद में सक्षम हैं, तो आप सफल
          हैं और अगले स्तर पर जा सकते हैं। अन्यथा, आपको इस पहेली को दुबारा हल करने
          का प्रयास करने की जरूरत है। कुछ देर खेलें और देखें कि "मधुमक्खी” के लिए
          प्रोग्रामर होना कैसा लगता है!
    C1_bee_loops:
      1:
        text: लूप गतिविधि की दोहराई है। इसलिए जांचने के लिए छत्ते में जाना, मैं फ्रेम
          देखता हूं और फिर इसे वापस रखता हूं, इसलिए मैं उस एक ही गतिविधि को कई बार
          दोहराता हूं। यह लूपिंग है, जो एक ही गतिविधि को कई बार कर रही है।
      2:
        text: इस स्तर में, हम चाहते हैं कि मधुमक्खी फूल से तीन मधुरस एकत्र करे। तीन
          "मधुरस प्राप्त करें" ब्लॉक्स का उपयोग करने की बजाय, आप तीन बार मधुरस प्राप्त
          करने के लिए दोहराएं ब्लॉक का उपयोग करेंगे। "चलाएं” को हिट करें और देखें
          कि आपने इसे सही कर लिया है। बढ़िया!
    C1_bigevent_unplugged:
      1:
        text: इस पाठ को विशाल इवेंट कहा जाता है। यह इस बारे में है कि हम अपने प्रोग्रामों
          को कैसे नियंत्रित कर सकते हैं और वास्तव में इवेंट्स का उपयोग करते हुए प्रोग्राम
          के चलते हुए ही इसके चलने के तरीके को बदल सकते हैं, जैसे बटन दबाना या माउस
          को क्लिक करना।
      2:
        text: इस पाठ के लिए, आपको कागज के रिमोट कंट्रोल से नियंत्रित किया जाएगा। यह
          बिल्कुल रियल-लाइव वीडियो गेम की तरह है।
      3:
        text: इवेंट एक क्रिया है, जो किसी चीज़ के घटित होने का कारण बनती है। यह वैसे
          ही है, जैसे आप माउस पर बटन क्लिक करते हैं और वेबपेज लोड हो जाता है। वह एक
          इवेंट है। जब आप स्क्रॉल करने के लिए टैब्लेट पर अपनी स्क्रीन को छूते हैं,
          तो वह भी एक इवेंट है। इवेंट्स उपयोगकर्ता को आपके प्रोग्राम को संचालित करने
          का बहुत बढ़िया तरीका हैं, जब भी उन्हें जरूरत हो या वे ऐसा करना चाहें।
      4:
        text: चीज़ें घटित होती हैं, जिन पर हम सभी प्रतिक्रिया करते हैं। हमें भूख लगती
          है और हम फ्रिज के पास जाते हैं। हम डाकिये की आवाज़ सुनते हैं और हम अपनी
          डाक को डाक बॉक्स में डालते हैं और फिर अपनी डाक लेने जाते हैं। वो बिल्कुल
          इवेंट्स की तरह हैं, जैसे बटन दबाना या जॉयस्टिक घुमाना। वे ऐसी चीज़ें हैं,
          जो घटित होती हैं और हमें कुछ करने के लिए सक्रिय करती हैं।
      5:
        text: वीडियो गेम्स में, "अद्यतन करें” नामक एक इवेंट होती है और यह एक सेकंड
          में 30 या 60 बार होती है। वीडियोगेम प्रोग्रामरों के लिए, वह बटनों या जॉयस्टिक
          से अधिक इवेंट के तौर पर अधिक महत्वपूर्ण है।
      6:
        text: जिस मुख्य इवेंट पर हम विचार कर रहे हैं, वह "अद्यतन करें" टिक होना है।
          फिर हम टिक में जॉयस्टिक देखते हैं। इसलिए हम कहते हैं, "ओह, किसी ने इस फ्रेम
          का बटन दबाया है क्या? हां या नहीं?” इवेंट्स के बिना, खिलाड़ी मूव नहीं कर
          सकता, आप कूद नहीं सकते, आप किसी भी हो रहे काम पर नियंत्रण पाने में सक्षम
          नहीं होंगे। वीडियोगेम कुछ भी एनिमेट नहीं कर पाएगी।
    C1_building_foundation:
      1:
        text: रेत की मूर्ति में आपने जाना है कि असफलता प्रोग्राम का हिस्सा है। लेकिन
          यदि आप डटे रहते हैं, तो भले ही आप कुछ न हासिल करें, लेकिन यह आपके लिए बेहतर
          और अधिक रोमांचक होगी।दृढ़ता गेम का नाम है। इसके साथ बने रहें, यह आपको पसंद
          आएगी।
      2:
        text: इस पाठ को नींव का निर्माण करना कहा जाता है। इस पाठ में, हम ऐसे कार्य
          पर काम करेंगे, जिसे वास्तव में कठिन बनाया गया है। आप पता लगाएंगे कि कम से
          कम इन कपों में से एक जितना लंबा ढांचा कैसे बनाना है और यह किताब का वज़न
          सहन करने जितना मजबूत हो।
      3:
        text: हो सकता है, कभी-कभार हमारी रचना काम न करे। ऐसा भी समय आ सकता है, जब
          हम निराश हो जाएं और हार मान लें। ऐसे बहुत-से पल हो सकते हैं। लेकिन यदि हम
          प्रयास करते रहेंगे, बार-बार अच्छा करेंगे, तो सुनिश्चित रूप से हम जल्द ही
          इसे पा लेंगे।
      4:
        text: दृढ़ता इस बारे में ही है कि जब आप सचमुच हार मान जाएं तो कैसे डटे रहना
          है। यदि आप कुछ नया और अलग बनाना चाहते हैं, तो रास्ते में बहुत बार असफलता
          मिलेगी।
      5:
        text: दृढ़ता की तरकीब यह है कि आप लगातार काम करते रहने और अपनी निराशा की वजह
          से उसे छोड़ने की बजाय अपनी असफलताओं से सीखने का चयन करें। असल में निराशा
          का मतलब ही यही है कि जल्द ही कुछ शानदार होने वाला है। इसलिए जब तक आप इस
          तक पहुंच न जाएं, हार न मानें। वाह!
    C1_getting_loopy:
      1:
        text: नमस्कार, मेरा नाम मिराल कोटब (Miral Kotb) है और मैं Iluminate की रचयिता
          हूं। मेरे काम में, कुछ ऐसा है, जो हम नृत्यों में और लाइटसूटों को प्रोग्राम
          करने, दोनों में उपयोग करते हैं। और वे हैं लूप्स! लूप्स बार-बार दोहराई जाने
          वाली क्रियाएं हैं।
      2:
        text: जब आप कई बार कुछ दोहराते हैं, जैसे हुला हूप को घूमता रखने के लिए मेरी
          क्रियाएं, तो मैं उस क्रिया की लूप कर रही होती हूं। यह लूप है। यह लूप है।
          और यह लूप है।
      3:
        text: आज हम डांस पार्टी करने वाले हैं। हम नई डांस पार्टी वाली लूप्स पर क्रिया
          करेंगे। पुनरावृत्ति। हम डांस का उपयोग करते हुए लूप्स के बारे में सीखने वाले
          हैं। आप कुछ आसान स्टेप्स सीखेंगे और डांस को पूरा करने के लिए उन्हें बार-बार
          दोहराएंगे।
      4:
        text: यहां कुछ स्टेप्स दिए गए हैं, जिन्हें आपको सीखने की जरूरत है। अपने हाथों
          से ताली बजाएं। अपने हाथों को अपने सिर के पीछे रखें। अपने हाथों को अपनी कमर
          पर रखें। अपना बायां हाथ ऊपर उठाएं। अपना दायां हाथ ऊपर उठाएं। कितना आसान
          है, है न? आप पाएंगे कि आप कुछ डांस स्टेप्स को लूप्स में डालकर निर्देशों
          को छोटा कर सकते हैं।
      5:
        text: हम वास्तव में अपनी डांसिंग में लूप्स का उपयोग करते हैं। डांसर कंप्यूटर
          पहने हुए हैं, सभी समान नेटवर्क में। मैं बार-बार समान डांसरों के लिए लाइटों
          को लूप कर सकती हूं। लूप में, मेरी पुनरावृत्ति हो सकती है, जहां मैं कहूंगी
          कि आप बार-बार इन छह डांसरों के माध्यम से लूप का उपयोग करना चाहते हैं और
          फिर लूप के अंदर, आप लाइट की गति को बढ़ाना चाहते हैं। और यह सब लूप्स के द्वारा
          बनाया गया है। लूप्स कंप्यूटर साइंस में महत्वपूर्ण हैं क्योंकि वे हमारे काम
          को अधिक छोटा और अधिक आसान बनाती हैं।
    C1_happy_maps_unplugged:
      1:
        text: इस पाठ को हैप्पी मैप्स कहा जाता है। आज, हम अपनी मुलायम बालों वाली दोस्त
          फ्लर्ब को उसके फल तक पहुंचने में मदद करेंगे।
      2:
        text: अपने फ्लर्ब को अपने फल तक जाने के लिए सक्रिय बनाएं। ऐसा करने के लिए,
          आपको यह पता लगाने की जरूरत होगी कि फ्लर्ब को किस रास्ते जाने की जरूरत है
          और तीरों के साथ उसे निर्देश दें। फ्लर्ब को सेब तक जाने के लिए, फ्लर्ब को
          किस दिशा में जाना होगा? इसे जाने के लिए सक्रिय करने के लिए लाइन बनाएं।
      3:
        text: इसे वहां पहुंचाने के लिए, आप उस दिशा में चक्कर बनाएं, जहां इसे जाना
          होगा।
      4:
        text: जिस नक्शे को आप हल करने का प्रयास कर रहे हैं, उसके साथ तीरों को चिपकाकर
          अपनी कलन विधि बनाएं। दूसरा इसके समान ही है पर यह नीचे जा रहा है।
      5:
        text: यह कागज़ के साथ प्रोग्रामिंग है। बस और कुछ नहीं!
    C1_maze_debugging:
      1:
        text: डीबगिंग, पता लगाना और सवाल हल करना है। सवालों को डीबग करने के बहुत से
          तरीके हैं। सबसे आसान तरीकों में से एक है, तब तक कदम दर कदम मूव करना, जब
          तक कि आप यह पता न लगा लें कि कहां कुछ गलत हो रहा है। यहां मैं बीम पर बैक
          हैंडस्प्रिंग करने का प्रयास कर रही हूं लेकिन बार-बार गिर रही हूं।
      2:
        text: मैंने कदम दर कदम प्रत्येक भाग का विस्तृत वर्णन किया और मुझे अहसास हुआ
          कि मेरी गलती कहां थी। मैं अपने हाथों को बीम पर सही ढंग से नहीं रख रही थी।
          इसलिए मैंने अपने हाथ की नई पोजीशन के साथ बीम दूसरे बैक हैंडस्प्रिंग का प्रयास
          किया और इसे पा लिया। सचमुच मैं बहुत खुश थी कि मैंने आप बैक हैंडस्प्रिंग
          को डीबग किया।
      3:
        text: डीबगिंग के बारे में सीखने के लिए, हम पहले से ही मंच पर मौजूद ब्लॉक्स
          के सेट के साथ शुरुआत करते हैं। आप देखेंगे कि ये ब्लॉक्स आपको लक्ष्य तक नहीं
          पहुंचाएंगे। हमें समाधान को डीबग करके इसे ठीक करने की जरूरत है। क्या गलत
          हुआ? आप देखेंगे कि आपको एक और ब्लॉक पश्चिम की तरफ जाते रहने की जरूरत है।
      4:
        text: आइए यह देखने के लिए दूसरा पश्चिम ब्लॉक जोड़कर और चलाएं को हिट करके इसे
          ठीक करें कि यह ठीक हुआ है या नहीं। वाह, हमने इसे ठीक कर लिया!
    C1_maze_intro_sequencing:
      1:
        text: इस पहेली के लिए, आपको पक्षी को सूअर के पास ले जाने की जरूरत है। पहेली
          को देखें और देखें कि इसे कौन-सी दिशा लेने की जरूरत है।
      2:
        text: आपको टूलबॉक्स में से वर्कस्पेस में ब्लॉक खींचने की जरूरत है। सुनिश्चित
          करें कि यह "जब चलाया जाए" ब्लॉक के अधीन हो और जब आपको लगे कि आपने सही समाधान
          प्राप्त कर लिया है, तो आप "चलाएं” पर क्लिक कर सकते हैं और पक्षी को सूअर
          के पास जाते देख सकते हैं।
    C1_maze_loops:
      1:
        text: एक चीज़, जिसमें कंप्यूटर बेहद निपुण हैं, वह है, कमांड्स को दोहराना।
          व्यक्ति के तौर पर, यदि आपको एक ही चीज़ लगातार बार-बार करनी पड़े तो आप बहुत
          ऊब जाएंगे। लेकिन कंप्यूटर अरबों, यहां तक कि खरबों बार एक ही चीज़ कर सकता
          है और यह ऊबेगा नहीं व उसे भी बहुत अच्छे तरीके से करेगा।
      2:
        text: उदाहरण के लिए, यदि मैं Facebook पर सबको ईमेल भेजकर जन्मदिन की शुभकामनाएं
          देना चाहती, तो मुझे वास्तव में हर किसी को वो सब ईमेल लिखने में सदियां लग
          जातीं। लेकिन कोड की केवल कुछ लाइनों के साथ, मेरे पास ऐसा सिस्टम हो सकता
          है, जिससे मैं Facebook पर सबको ईमेल भेजकर जन्मदिन की शुभकामनाएं दे सकती
          हूं।
      3:
        text: इस स्तर में पक्षी को सूअर के पास ले जाने के लिए... वर्कस्पेस पर तीन
          उत्तर ब्लॉक्स खींचने की बजाय, आप "दोहराएं” ब्लॉक का उपयोग करेंगे। वर्कस्पेस
          पर "दोहराएं" ब्लॉक खींचें और संख्या 3 दर्ज करें। फिर "उत्तर की ओर मूव करें"
          ब्लॉक को "दोहराएं” ब्लॉक में खींचें और यह देखने के लिए "चलाएं" को हिट करें
          कि यह सही हो गया है। बधाई हो, आपके यह कर लिया है!
    C1_moveitmoveit_unplugged:
      1:
        text: इस पाठ को इसे मूव करें, इसे मूव करें, कहा जाता है। साथ में, हम स्माइली
          चेहरे के लक्ष्य के लिए कम्पास रोज़ के साथ शुरू से हमारे दोस्तों को साथ मिलाने
          कि लिए प्रोग्राम लिखेंगे।
      2:
        text: लेकिन स्माइली का चेहरा नीचे की तरफ है और केवल एक व्यक्ति को पता है कि
          वहां कैसे पहुंचना है। आइए इस प्रोग्राम की शुरुआत करें।
      3:
        text: प्रोग्राम एक कलन विधि है, जिसे किसी चीज़ में कोड किया गया है, जो मशीन
          द्वारा चलाई जा सकती हो। हम में से अधिकतर प्रोग्राम को ऐसी चीज़ के तौर पर
          समझते हैं, जो हम कंप्यूटर के लिए लिखते हैं। प्रोग्राम उसके लिए काफी सही
          हैं लेकिन वे अन्य स्थानों में भी लाभकारी हैं। आप अपनी खुद की गेम बना सकते
          हैं, यहां तक कि आपके लिए काम करने हेतु रोबोट को भी प्रोग्राम कर सकते हैं।
    C1_going_places_safely:
      1:
        text: मेरा नाम जेरेमियाल (Jeremiah) है। नमस्कार! मैं सात साल का हूं। मुझे
          अपने मम्मी के कंप्यूटर पर खेलना बेहद पसंद है लेकिन मैं हमेशा पहले अनुमति
          लेता हूं। "मम्मी, क्या मैं कंप्यूटर पर जा सकता हूं? जरूर बच्चे!"
      2:
        text: मुझे अपनी मम्मी का कंप्यूटर पसंद है क्योंकि मैं इंटरनेट पर जा सकता हूं।
          इंटरनेट आपके पड़ोस की तरह होता है। आप अच्छे स्थानों पर जा सकते हैं, आप परिवार
          और दोस्तों से बात कर सकते हैं और आप बहुत-सी नई चीजें सीख सकते हैं।
      3:
        text: कल, मैं अपने घर के पास के चिड़ियाघर में गया। मैंने वहां ज़ेबरा का बच्चा
          देखा। मैंने उसकी तस्वीर खींची और उसकी धारियों का रंग बदल दिया, फिर एक टोप
          जोड़ा और इसे हास्यास्पद जानवरों के अपने संग्रह में शामिल कर दिया। बहुत बढ़िया!
          बाद में, मैं बहुत दूर के एक स्थान पर गया। मैं केन्या गया। वह अफ्रीका में
          एक देश है। वहां बहुत-से ज़ेबरा रहते हैं।
      4:
        text: कभी-कभार इंटरनेट पर, मैं अपनी जान-पहचान के लोगों से बात करता हूं, जैसे
          मेरी दादी, जो दूसरे राज्य में रहती हैं। नमस्कार, दादी! वे मेरे लिए बिस्कुट
          बना रही हैं, जो वे मुझे मेरे जन्मदिन पर भेजेंगी। "बहुत ही स्वादिष्ट, काश,
          इंटरनेट पर सुगंध भी ले सकता!" मैं इंटरनेट पर अलग-अलग लोगों से बात कर सकता
          हूं, जैसे मेरी कज़िन लेकिन मैं केवल जान-पहचान के लोगों से ही बात करता हूं।
      5:
        text: इंटरनेट पर मुझे यह सबसे पसंद है कि मैं मज़ेदार गेम्स खेल सकता हूं। स्कोर!
          मैं नई चीज़ें चित्रित करना और बनाना भी चाहता हूं और इसे अपने दोस्तों के
          साथ साझा करना चाहता हूं। बहुत बढ़िया! कभी-कभार मैं ऐसी वेबसाइट्स पर जाता
          हूं, जहां मैं नई चीज़ें सीखता हूं लेकिन मैं हमेशा उन वेबसाइटों पर ही जाता
          हूं, जो मेरे लिए सही हैं। वाह, डायनासोर!
      6:
        text: 'इंटरनेट बेहद मज़ेदार स्थान है। लेकिन जिस तरह आप अपने पड़ोस में गली
          पार करते समय सावधान रहते हैं, उसी तरह आपको ऑनलाइन जाते समय भी सचेत रहना
          होगा। यहां याद रखने के लिए तीन नियम दिए गए हैं। नियम नंबर 1: हमेशा पहले
          अपने माता-पिता को पूछें। नियम नंबर 2: केवल अपनी जान-पहचान के लोगों से ही
          बात करें। नियम नंबर 3: केवल उन्हीं स्थानों पर जाएं, जो आपके लिए सही हैं।'
      7:
        text: वाह, बहुत मज़ा आया! डिनर का समय हो गया। अब मैं इसे बंद कर रहा हूं। मैं
          यह देखने के लिए दुबारा लॉग ऑन करने के लिए बहुत उत्साहित हूं कि मैं अगली
          बार कहां जा सकता हूं।
    C1_pair_programming:
      1:
        text: आज युग्मक प्रोग्रामिंग के बारे में सीखने वाले हैं। युग्मक प्रोग्रामिंग
          में, आप टीम के तौर पर काम करते हैं। दो लोग एक कंप्यूटर का उपयोग क्यों करते
          हैं? क्योंकि दो दिमाग, एक से बेहतर हैं। युग्मक प्रोग्रामिंग में, आप और आपका
          साझेदार एक ही कंप्यूटर पर साथ में बैठेंगे और आप दोनों एक ही प्रोजेक्ट पर
          काम करेंगे।
      2:
        text: युग्मक प्रोग्रामिंग में, एक व्यक्ति ड्राइवर होता है और दूसरा व्यक्ति
          नेविगेटर होता है, बिल्कुल कार चलाने की तरह। ड्राइवर कंप्यूटर पर बैठता है
          और कीबोर्ड और माउस या टचस्क्रीन का उपयोग करता है और कंप्यूटर की मुख्य क्रियाओं
          को नियंत्रित करता है। दूसरा व्यक्ति नेविगेटर होता है। नेविगेटर ड्राइवर के
          सवालों के जवाब देकर और संभावी समस्याओं या गलतियों का संकेत देकर ड्राइवर
          की मदद करता है।
      3:
        text: सफल युग्मक प्रोग्रामिंग के लिए बातचीत बहुत जरूरी है। अपमान न करें, सम्मान
          से पेश आएं, धौंस देने वाले नेविगेटर न बनें, क्योंकि बैकसीट ड्राइवर होना
          किसी को पसंद नहीं। आपको और आपके साझेदार तो हमेशा बातचीत करते रहना चाहिए।
          ड्राइवर विस्तार से बता सकता है कि वह क्या कर रहा या रही है। और नेविगेटर
          यह सुझाव देने में मदद कर सकता है कि आगे क्या करना है।
      4:
        text: नेविगेटर को हर दृष्टिकोण से सोचना चाहिए और ड्राइवर को विवरणों पर ध्यान
          केंद्रित करना चाहिए। दोनों नियम महत्वपूर्ण हैं। युग्मक प्रोग्रामिंग टीम
          के रूप में साथ में काम करना है।
    C1_planting_seed:
      1:
        text: इस पाठ को बीज रोपण करना कहा जाता है और यह कलन विधियों को समझने में हमारी
          मदद करेगा। कलन विधियां वे विशेष निर्देश हैं, जो उस क्रम को स्पष्ट करती हैं,
          जिसमें कुछ किया जाना है। यहां तक कि रोजमर्रा की चीज़ें, जैसे नाश्ता करना
          या अपने दांतों को ब्रुश करना भी कलन विधियां हैं, जिनको पूरा करने के लिए
          छोटे-छोटे कदमों की जरूरत होती है।
      2:
        text: कंप्यूटर बहुत ही चुस्त हो सकते हैं लेकिन वे आपको केवल तभी समझ सकते हैं,
          यदि आप उन्हें कदम दर कदम सही ढंग से बताएं कि आप क्या चाहते हैं। कलन विधियों
          के बारे में सबसे अच्छी बात यह है कि यदि आप क्रमानुसार निर्देशों का पालन
          करते हैं, तो आप वह काम भी कर सकते हैं, जिसके बारे में आपको पहले पता नहीं
          होता कि कैसे करना है। यह बिल्कुल वैसा है, जैसे व्यंजन विधि का अनुसरण करना।
      3:
        text: आज हम कलन विधि का उपयोग करते हुए अपने खुद के बीज रोपने वाले हैं। तस्वीरों
          को अलग-अलग काटकर अपनी खुद की कलन विधि बनाएं। वे तस्वीरें चुनें, जो बीज रोपने
          में स्टेप्स दिखाती हैं और उन तस्वीरों को सही क्रम में रखती हैं।
      4:
        text: अब, आपको यह देखना होगा कि आपकी कलन विधि काम कर रही है। कलन विधि में
          स्टेप्स का बहुत ही सावधानी से अनुसरण करें। क्या वे सही क्रम में हैं? क्या
          आप कलन विधि का अनुसरण करके बीज रोपने में सफल रहे? यह तस्वीरों के साथ प्रोग्राम
          करने जैसा है!
      5:
        text: जब हम चॉकलेट बनाना चाहते हैं, तो उस प्रक्रिया को करने के लिए बहुत-से
          बड़े स्टेप्स होते हैं और उन बड़े स्टेप्स में से प्रत्येक में छोटे स्टेप्स
          का सेट होता है और इस आधार पर विभिन्न व्यंजन विधियां या कलन विधियां होती
          हैं कि हम अपनी चॉकलेट का स्वाद कैसा चाहते हैं। प्रत्येक स्टेप महत्वपूर्ण
          है, यहां तक कि छोटे से छोटा भी, इसलिए एक भी स्टेप के बिना, उनमें से बाकी
          पूरे नहीं हो सकते। ऐसे कलन विधियां बनाना बहुत ही महत्वपूर्ण है, जिन्हें
          अन्य लोग समझ पाएं। इसी कारण प्रत्येक स्टेप को लिखना जरूरी है ताकि चाहे इस
          कोई भी करे, परिणाम एक ही आए।
    C1_playlab_storytelling:
      1:
        text: अब रचनात्मक होने और कहानी सुनाने के लिए आपके कोडिंग कौशलों का उपयोग
          करने का समय है। आपकी कहानी में अभिनेता होंगे और आप इन अभिनेताओं को एक-दूसरे
          से बात और संवाद करने के लिए सक्रिय करने में सक्षम होंगे। इस बारे में सोचने
          से शुरुआत करें कि आप किस तरह की कहानी सुनाना चाहते हैं।
      2:
        text: बिल्ली हमेशा कुत्ते से डरती आई है और तब क्या होगा, यदि बिल्ली को पता
          चले कि कुत्ता अच्छा बनने का प्रयास कर रहा है? "जब चलाया जाए" ब्लॉक हर चीज़
          की शुरुआत करता है। "मूव करें" ब्लॉक आपके पात्र को मूव करेगा और "बोलें" ब्लॉक
          आपके पात्र को वह बोलने के लिए सक्रिय करेगा, आप जो भी टाइप करेंगे।
      3:
        text: यह "जब अभिनेता टकराते हैं" ब्लॉक है, जिसे आप अन्य ब्लॉक्स के साथ जोड़
          सकते हैं।
      4:
        text: मैं कुत्ते को पास आने और "हेलो” कहने के लिए सक्रिय कर रहा था लेकिन फिर
          बिल्ली डर गई, इसलिए वह भाग गई। "आह" यदि और समय होता, तो यह सुखद अंत होता।
          समाप्त!
    C1_spelling_bee_intro:
      1:
        text: यह शब्द-विन्यास मधुमक्खी स्तर है। मधुमक्खी को मूव करने के लिए पहेली
          के भागों का उपयोग करें। जैसे ही यह मूव करती है, यह शब्दों का उच्चारण करने
          के लिए अक्षर एकत्र करती है।
      2:
        text: देखें कि क्या आप उस शब्द का उच्चारण कर सकते हैं, जो वे आपको स्टेज के
          नीचे बॉक्स में देते हैं। लेकिन मधुमक्खी सावधान रहें! गलत दिशा में मूव करने
          से ऐसे अक्षर जुड़ जाएंगे, जो आप नहीं चाहते।
    C1_zuck_repeat_loop:
      1:
        text: एक चीज़, जिसमें कंप्यूटर बेहद निपुण हैं, वह है, कमांड्स को दोहराना।
          व्यक्ति के तौर पर, यदि आपको एक ही चीज़ लगातार बार-बार करनी पड़े तो आप बहुत
          ऊब जाएंगे। लेकिन कंप्यूटर अरबों, यहां तक कि खरबों बार एक ही चीज़ कर सकता
          है और यह ऊबेगा नहीं व उसे भी बहुत अच्छे तरीके से करेगा।
      2:
        text: उदाहरण के लिए, यदि मैं Facebook पर सबको ईमेल भेजकर जन्मदिन की शुभकामनाएं
          देना चाहती, तो मुझे वास्तव में हर किसी को वो सब ईमेल लिखने में सदियां लग
          जातीं। लेकिन कोड की केवल कुछ लाइनों के साथ, मेरे पास ऐसा सिस्टम हो सकता
          है, जिससे मैं Facebook पर सबको ईमेल भेजकर जन्मदिन की शुभकामनाएं दे सकती
          हूं।
      3:
        text: इस उदाहरण में, आपका लक्ष्य सूअर को पाने के लिए पक्षी को मूव करना होगा।
          अब, हम इसे बहुत ही आसानी से करने के योग्य होने के लिए दोहराएं ब्लॉक का उपयोग
          करने में सक्षम होंगे। आप हर बार पक्षी को सूअर की तरफ एक कदम आगे जाने के
          लिए कंप्यूटर को पांच बार आगे की ओर मूव करें कमांड देकर ऐसा कर सकते हैं या
          आप कंप्यूटर को केवल एक बार आगे की ओर मूव करने के लिए कह सकते हैं, और फिर
          इसे उसे पांच बार दोहराने के लिए कह सकते हैं और यह वही कार्य करेगा।
      4:
        text: ऐसा करने के लिए, आप अपनी आगे की ओर मूव करें कमांड को खींचें और फिर इसे
          दोहराएं ब्लॉक के अंदर रख दें। आप इस पर क्लिक कर सकते हैं और इसे बता सकते
          हैं कि इसे यह बताने के लिए कितनी बार ब्लॉक दोहराने के लिए कहेंगे कि आप इसे
          कितने स्टेप्स आगे की ओर ले जाना चाहते हैं।
      5:
        text: एक और बात, आप दोहराएं ब्लॉक के अंदर कितनी भी कमांड्स डाल सकते हैं। इसलिए
          इस उदाहरण में, आप इसे आगे की ओर मूव करने और दाएं मुड़ने के लिए कह रहे हैं,
          जिसे यह पांच बार करेगा। इसका आनंद लें!
    C2_artist_intro:
      1:
        text: यदि आपके पास ऐसे लोग नहीं हैं, जो कंप्यूटर साइंस में निपुण हैं, तो आप
          कारों द्वारा एकत्र किए जाने वाले डेटे और ऐसे लोगों के होने की जरूरत के कारण
          रेस के लिए योग्य भी नहीं होंगे, जो यह पता लगाने के लिए प्रोग्राम लिख सकें
          कि आप यह पता लगाना कैसे जारी रखेंगे कि प्रदर्शन को कैसे बढ़ाना है।
      2:
        text: इन पहेलियों में, आप एक कलाकार होंगे, जो अलग-अलग आकृतियां खींचने के लिए
          पेंसिल का उपयोग करता है। जहां भी आपका कलाकार जाता है, यह आपके पीछे एक लाइन
          खींचेगा।
      3:
        text: कैनवास के चारों ओर मूव करने के लिए, आप आगे की ओर मूव करें ब्लॉक का उपयोग
          करेंगे। यहां आगे की ओर मूव करें ब्लॉक कहता है, 100 पिक्सल आगे की ओर मूव
          करें। जब चलाएं को हिट करते हैं, तो क्या होता है? कलाकार कुछ दूरी तक आगे
          की ओर मूव करता है और वह दूरी 100 पिक्सल होती है। पिक्सल मूलतः आपकी स्क्रीन
          पर बहुत ही छोटे-छोटे वर्ग हैं।
      4:
        text: इस पहेली में हमारे पास जो अन्य ब्लॉक वह कहता है, 90 डिग्री तक दाएं मुड़ें।
          और जब हम उसे बाहर खींचते हैं, तो वह हमारे कलाकार को कुछ दूरी तक मोड़ देता
          है। इसलिए आप अपने कलाकार को जितना मोड़ना चाहते हैं, उसके लिए इस आजमा सकते
          हैं। यह 90 डिग्री का मोड़ है।
      5:
        text: और यह 120 डिग्री का मोड़ है। और याद रखें, आप पिक्सल्स और डिग्री के लिए
          संख्याओं के साथ लगे तीरों पर क्लिक करके इन मूल्यों को बदल सकते हैं। अपने
          कलाकार के साथ ड्राइंग का आनंद लें!
    C2_bee_conditionals:
      1:
        text: यह कंडिशनल ब्लॉक है। यह कहता है, यदि मधुरस या शहद है, जो किसी संख्या
          से कम, उसके बराबर या उससे अधिक है, तो कुछ करें।
      2:
        text: यह तब उपयोगी होता है, जब हमें पता नहीं होता कि प्राप्त करने के लिए कितना
          मधुरस या शहद है, क्योंकि हम यहां इस प्रश्न चिन्ह के साथ देखते हैं।
      3:
        text: इस उदाहरण में, हम यह कहेंगे कि यदि बैंगनी फूल में 0 से अधिक मधुरस है,
          तो मधुरस प्राप्त करें। यह हमारी मधुमक्खी को बताएगा कि वह तब तक मधुरस प्राप्त
          करती रहे, जब तक मधुरस वहां हो। वाह!
    C2_binary_bracelets:
      1:
        text: यह युग्मक ब्रेसलेट्स पाठ है। हम ऐसे ब्रेसलेट पर अपने आद्याक्षर कोड करेंगे,
          जिसे हम पहन सकते हैं और अपने दोस्तों को दिखा सकते हैं!
      2:
        text: युग्मक केवल दो विकल्पों का उपयोग करते हुए जानकारी प्रदर्शित करने का
          तरीका है। कभी-कभार लोग इसे केवल इकाईयों और शून्य की तरह समझते हैं। लेकिन
          आप चालू या बंद, ऊपर और नीचे, अंदर और बाहर या विलोम के किसी भी सेट के मेल
          के साथ युग्मक प्रदर्शित कर सकते हैं।
      3:
        text: नमस्कार, मैं ओरियन (Orion) हूं और मैं यहां Play-im में रोबोट्स को प्रोग्राम
          करता हूं। अपने सबसे बुनियादी स्तरों पर सभी कंप्यूटर और रोबोट के दिमाग छोटे
          इलेक्ट्रोनिक दरवाजे हैं। जब दरवाजा खोला जाता है, तो इसके माध्यम से बिजली
          प्रवाहित होती है और जब इसे बंद किया जाता है, तो बिजली प्रवाहित नहीं होती।
      4:
        text: रोबोट पर युग्मक का एक उदाहरण रोबोट की आंखें हैं। रोबोट की आंखें LEDs
          हैं और वो ऐसी लाइटें हैं, जो चालू या बंद होती हैं। यह युग्मक प्रणाली है,
          एक या दूसरा। हम युग्मक संख्याओं को प्रदर्शित करने के लिए लाइटों का उपयोग
          कर सकते हैं। यदि हमारे पास रोबोट्स का सेट है, तो हम कह सकते हैं कि पहला
          रोबोट पहला स्थान है और दूसरा रोबोट दूसरा स्थान है, तीसरा रोबोट चौथा स्थान
          है आदि। इस प्रकार से आप युग्मक संख्या को प्रदर्शित करते हैं। रोबोट्स अपनी
          युग्मक आंखों से ऐसा करेंगे और इसे आपके लिए गिनते हैं।
    C2_conditionals_with_cards:
      1:
        text: इस पाठ को कार्डों के साथ कंडिशनल कहा जाता है। आप जो देखते और सुनते हैं,
          रोज़ाना उसके आधार पर निर्णय लेते हैं।
      2:
        text: मैं पार्क में सैर करना चाहता हूं लेकिन पहले मुझे यह निर्णय करना होगा
          कि मुझे अपने साथ छाता ले जाना चाहिए या नहीं। इसलिए मैं खिड़की में से बाहर
          देखता हूं। यदि बादल हैं, तो मैं अपना छाता लेकर जाऊंगा। अन्यथा, मैं धूप का
          चश्मा लूंगा। मेरे ख्याल से छाता ले जाना सही रहेगा। मैं जो भी देखता और सुनता
          हूं, वह निर्धारित करता है कि मैं पार्क में क्या लेकर जाऊं।
      3:
        text: कंडिशनल गेम्स में भी उपयोग किए जाते हैं। आज हम ताश की गेम के साथ कंडिशनलों
          का उपयोग करते हुए अभ्यास करेंगे। इस गेम में, जो पत्ता मैं चित्रित करता हूं,
          वह निर्धारित करता है कि मेरे दोस्त क्या करने वाले हैं। यदि मैं सात चित्रित
          करता हूं, तो हर कोई ताली बजाता है। अन्यथा, हर कोई कहता है, "आहा।" आइए इसे
          आजमाएं! "आहा" "चीयर्स"
      4:
        text: मैं शर्त लगाता हूं कि आप ऐसी गेम्स बना सकते हैं, जो कंडिशनलों के साथ
          और भी मज़ेदार होती हैं। इसे आजमाएं! कंडिशनल ही कंप्यूटरों को चुस्त बनाते
          हैं। जिस कंप्यूटर प्रोग्राम में कंडिशनल शामिल होते हैं, वह उपयोगकर्ता के
          लिए प्रतिक्रिया कर सकता है और इसकी कार्यावधि को बदल सकता है।
      5:
        text: अपनी पसंदीदा वीडियो गेम के बारे में सोचें। क्या आप अन्य लोगों के लिए
          करने से अधिक कुछ क्रियाओं के लिए अधिक अंक हासिल करते हैं? ऐसा होता है क्योंकि
          कंप्यूटर कंडिशनलों का इस्तेमाल कर रहा है। इसी तरीके से कंप्यूटर निर्णय लेता
          है। यदि आप निशाना लगा लें, तो आप दस अंक हासिल कर सकते हैं। अन्यथा, आप तीन
          गंवा सकते हैं। जब आप जानते हैं कि कंडिशनल कैसे काम करते हैं, तो आप हर तरह
          की रोमांचक गेम बना सकते हैं।
    C2_artist_debugging:
      1:
        text: यहां हमारे वर्कस्पेस में हमारे पास पहले से ही कुछ ब्लॉक्स हैं। लेकिन
          कुछ गलत है।
      2:
        text: आइए गति को कम करके और इसे कदम दर कदम जाते हुए देखकर इस कोड को डीबग करें।
      3:
        text: ओह, एक समस्या है! बिल्ली की मूंछें 75 पिक्सल लंबी हैं, 25 नहीं।
    C2_bee_debugging:
      1:
        text: क्या आपने कभी प्रोग्राम को डीबग करने के बारे में सुना है? यह वही तरीका
          है, जिससे आप पता लगाते हैं कि क्या काम नहीं कर रहा है। जब आप कोड को डीबग
          करते हैं, तो आप त्रुटियों को पहचान कर उन्हें दूर करते हैं।
      2:
        text: यहां हमें हमारे वर्कस्पेस में पहले से ही कुछ ब्लॉक्स दिए गए हैं। हम
          यह देखने के लिए कदम दर कदम, ब्लॉक्स का विस्तृत वर्णन करने के लिए स्टेप बटन
          का उपयोग करेंगे कि यह सही समाधान है और हमें इसे कहां ठीक करने की जरूरत हो
          सकती है।
      3:
        text: ऐसा लगता है कि यह हमारी समस्या है! हमें एक और आगे की ओर मूव करें ब्लॉक
          की जरूरत है। स्टेप बटन यह पहचान करके हमारी समस्या को डीबग करने में हमारी
          मदद करता है कि त्रुटि कहां है, ताकि हम इसे ठीक कर सकें।
    C2_digital_footprint:
      1:
        text: आप अपने सिर पर अपना हैट रखते हैं और आपकी तीव्र बुद्धि आपको बताती है
          कि आप कहां हैं और चिड़ियाघर के बारे में सोचने, और आपको और आपको हेलो में
          सिर हिलाने के लिए बताते हैं! आपके दिमाग में जो भी आता है, उसे जारी रखने
          के लिए और यह जानने के लिए सुरक्षित कैसे रहना है, अपनी ज़िंदगी को कुछ निजी
          स्थान कैसे देना है, जब आप ऑनलाइन हों तो अपने दिमाग का उपयोग करें! अपने सिर
          से अपने पैरों के अंगूठों तक, रुकें, इसके बारे में सोचें। अपने पैरों से लेकर
          अपनी नाक तक, रुकें और ऑनलाइन सोचें!
      2:
        text: आगे, और आगे बढ़ने के लिए, और खुद को स्वस्थ चमक देने के लिए और वेलेंटाइन
          बनाने के लिए, किसी को यह बताने के लिए कि आप मेरे होंगे, अपने दिल का उपयोग
          करें! जब आप ऑनलाइन हों तो अपने दिल का उपयोग करें, महसूस करें कि क्या सही
          है और हमेशा उदार रहें, और अपने दोस्तों को सम्मान दें, इंटरनेट पर निष्पक्ष
          और अच्छे बने रहें। अपने सिर से अपने पैरों के अंगूठों तक, रुकें, इसके बारे
          में सोचें। अपने पैरों से लेकर अपनी नाक तक, रुकें और ऑनलाइन सोचें!
      3:
        text: अपने पालतू जानवर को गोद में लेने के लिए, अपने कपड़ों को भीगने से बचाने
          के लिए, और अपने पसंदीदा बाजू वाले कपड़े पहनने के लिए और आपको उड़ने और आपको
          भरोसा दिलाने के लिए अपनी बाजुओं का उपयोग करें। जब आप ऑनलाइन हों, तो ब्रेक
          लेने के लिए और अपनी तकनीक को पीछे छोड़ने के लिए और खुद को पेड़ पर चढ़ते
          हुए देखने के लिए अपनी बाजुओं का उपयोग करें। अपने सिर से अपने पैरों के अंगूठों
          तक, रुकें, इसके बारे में सोचें। अपने पैरों से लेकर अपनी नाक तक, रुकें और
          ऑनलाइन सोचें!
      4:
        text: अपने भोजन को स्टोर करने के लिए, इसके गुर्राहट वाले मूड को सुनने के लिए,
          अपने पेट को पसारने के लिए और सोडा पॉप में गैस को महसूस करने के लिए अपनी
          आंतों का उपयोग करें। जब आप ऑनलाइन हों, तो कुछ संकेतों को देखने के लिए, इसे
          मार्गदर्शन करने देने और जब यह ठीक न हो तो आपको बताने के लिए अपनी आंतों का
          उपयोग करें। अपने सिर से अपने पैरों के अंगूठों तक, रुकें, इसके बारे में सोचें।
          अपने पैरों से लेकर अपनी नाक तक, रुकें और ऑनलाइन सोचें!
      5:
        text: तो ऑनलाइन अपने दिमाग से सोचें, अपने दिल से महसूस करें, अपनी बाजुओं से
          संतुलन बिठाएं, अपनी आंतों की सुनें। दौड़ने और ठोकर मारने के लिए, कूदने के
          लिए पोगो स्टिक पर उछाल मारने के लिए, ब्लॉक के चारों ओर डांस करने के लिए,
          अपनी बदबूदार जुराबों को उतारने के लिए अपनी टांगों का उपयोग करें। जब आप ऑनलाइन
          हों, तो लाइन पार करने वाले बदमाशों के लिए खड़े रहने, और सीधे खड़े रहना याद
          रखने के लिए, बड़े और छोटे प्राणियों के साथ अच्छे बने रहने के लिए अपनी टांगों
          का उपयोग करें।
      6:
        text: अपने सिर से अपने पैरों के अंगूठों तक, रुकें, इसके बारे में सोचें। अपने
          पैरों से लेकर अपनी नाक तक, रुकें और ऑनलाइन सोचें! तो अपने दिमाग से सोचें,
          अपने दिल से महसूस करें, अपनी बाजुओं से संतुलन बिठाएं, अपनी आंतों की सुनें,
          अपनी टांगों से साथ खड़े हों। अपने सिर से अपने पैरों के अंगूठों तक, रुकें,
          इसके बारे में सोचें। अपने पैरों से लेकर अपनी नाक तक, रुकें और ऑनलाइन सोचें!
    C2_digital_footprint_v2:
      1:
        text: हर बार जब आप ऑनलाइन जाते हैं, तो आप एक फुटप्रिंट छोड़ते हैं, जिसे खोजा,
          नकल किया, साझा किया, प्रसारित किया जा सकता है और यह स्थायी होता है। आप किस
          प्रकार के डिजीटल फुटप्रिंट छोड़ रहे हैं? आप किस प्रकार के डिजीटल फुटप्रिंट
          छोड़ना चाहते हैं।
    C2_graph_paper:
      1:
        text: इस पाठ को "ग्राफ पेपर प्रोग्रामिंग” कहा जाता है और यह कलन विधियों के
          बारे में है। आद हम यह सीखेंगे कि ऐसे प्रोग्राम कैसे लिखे जाएं, जो एक-दूसरे
          को दिखाते हों कि केवल हाथ से खींचे गए तीरों का उपयोग करते हुए, साधारण काले
          व सफेद चित्र कैसे पुनः बनाने हैं।
      2:
        text: कलन विधि कार्य को पूरा करन के लिए निर्देशों की सूची है। हम कटोरा बनाने
          के लिए निर्देशों के इस सेट का अनुसरण करेंगे। जब आप किसी और को यह समझाना
          हो कि कुछ कैसे किया जाता है तो कलन विधियां बहुत ही उपयोगी होती हैं।
      3:
        text: यदि आप कंप्यूटर के लिए कलन विधि लिख रहे हैं, तो आपको इसे छोटे-छोटे स्टेप्स
          में बांटना होगा। इसलिए इस पंक्ति को समाप्त करें और अगली पर जाएं, फिर उससे
          अगली पर जाएं, और आप इसे पूरा कर लेंगे।
      4:
        text: मैं अपने काम में कलन विधियों का उपयोग करता हूं। यदि मैं सभी स्टेप्स
          लिख लेता हूं तो मैं उसी चीज़ तो दुबारा बना सकता हूं, या मैं किसी और इसे
          करना सिखा सकता हूं। गिलास को भट्ठी में डालें, इसे एक साथ पिघलाएं, कटोरा
          बनाने के लिए बाकी निर्देशों का अनुसरण करें। कलन विधियां आपको कोई भी चीज़
          करने के लिए विस्तृत योजना देती हैं।
    C2_artist_loops:
      1:
        text: यहां हम उन स्टेप्स को सुरक्षित करने में मदद के लिए दोहराएं ब्ल़क का
          उपयोग करेंगे, जब हम अपने कलाकार को प्रोग्राम करेंगे। हमारे पास अपनी स्टेज
          पर पहले ही कुछ ब्लॉक्स हैं लेकिन वे केवल हमारी शुरुआत करवाने के लिए हैं।
      2:
        text: पूरा वर्ग खींचने के लिए उन ब्लॉक्स को चार बार लूप करने के लिए, हम केवल
          दोहराएं ब्लॉक को बाहर खींचेंगे और आगे की ओर मूव करें व दाएं मुड़ें ब्लॉक्स
          को दोहराएं ब्लॉक के अंदर रखेंगे। जब हम चलाएं को हिट करते हैं, तो कलाकार
          वर्ग को पूरा करने के लिए उन स्टेप्स को चार बार दोहराएगा।
    C2_bee_loops:
      1:
        text: लूप गतिविधि की दोहराई है। जांचने के लिए छत्ते में जाना, मैं फ्रेम देखता
          हूं और फिर इसे वापस रखता हूं। मैं उस एक ही गतिविधि को कई बार दोहराता हूं।
          यह लूपिंग है, जो एक ही गतिविधि को कई बार कर रही है।
      2:
        text: यह दोहराएं ब्लॉक है। आप दोहराएं ब्लॉक के अंदर जो भी रखते हैं, वह उतनी
          बार उन क्रियाओं को दोहराता है, जितनी बार आप इसे दोहराने के लिए कहते हैं।
          उदाहरण के लिए, इस स्तर में, आगे की ओर मूव करें और तीन बार मधुरस प्राप्त
          करें को बाहर खींचने की बजाए, हम केवल उन्हें एक बाहर खींचेंगे और क्रिया को
          तीन बार दोहराएंगे। इसने इसे आसान बना दिया!
    C2_maze_intro:
      1:
        text: आम तौर पर पूरी प्रोग्रामिंग टेक्सट में होती है लेकिन हम Blockly का उपयोग
          करेंगे, जो दृश्यात्मक ब्लॉक्स का उपयोग करता है, जिन्हें आप प्रोग्राम लिखने
          के लिए खींचते व छोड़ते हैं। हुड के नीचे, आप अभी भी कोड बना रहे हैं। शुरुआत
          करने के लिए, हम एक प्रोग्राम के लिए कोड बनाएंगे, जो इस एंग्री बर्ड को उन
          दुष्ट सूअरों के पास जाने के लिए भूलभुलैया में से मूव करने में मदद करेगा,
          जिन्होंने इसके अंडे चुरा लिए।
      2:
        text: Blockly को तीन भागों में बांटा गया है। बाईं ओर पक्षी का भूलभुलैया है,
          जहां आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश भूलभुलैया के नीचे
          लिखे जाते हैं। यह मध्य क्षेत्र टूलबॉक्स है और इन ब्लॉक्स में से प्रत्येक
          एक कमांड है, जिसे पक्षी समझ सकता है। दाईं ओर सफेद स्थान को वर्कस्पेस कहा
          जाता है और यहीं पर हम अपना प्रोग्राम बनाएंगे।
      3:
        text: यदि मैं हमारे वर्क स्पेस में मूव ब्लॉक को खींचूं और "चलाएं” को दबाऊं
          तो क्या होता है? पक्षी ग्रिड पर एक बॉक्स आगे की ओर मूव करता है। और यदि मैं
          पक्षी से इसके द्वारा एक बॉक्स आगे की ओर मूव करने के बाद कुछ करवाना चाहूं
          तो क्या होगा? मैं हमारे प्रोग्राम में दूसरा ब्लॉक जोड़ सकता हूं।
      4:
        text: मैं "दाएं मुड़ें" ब्लॉक का उपयोग करूंगा और इसे तब तक मेरे मूव करें ब्लॉक
          के नीचे खींचूंगा, जब तक कि पीला तीर प्रकट नहीं होता। फिर मैं इसे छोड़ दूंगा
          और दो ब्लॉक्स एक साथ जुड़ जाएंगे। जब मैं दुबारा "चलाएं" दबाऊंगा, तो पक्षी
          वे कमांड्स परफॉर्म करेगा, जो हमारे वर्क स्पेस में ऊपर से नीचे तक क्रमबद्ध
          ढेर हैं।
      5:
        text: यदि आप कभी भी किसी ब्लॉक को मिटाना चाहें, तो बस इसे ढेर से हटाकर ट्रैश
          कैन तक खींचें। जब चलाएं हिट कर लें, तो आप पक्षी को वापस शुरू से प्राप्त
          करने के लिए कभी भी पुनः सेट करें बटन हिट कर सकते हैं। अब आइए उन सूअरों को
          प्राप्त करें!
    C2_paper_airplanes:
      1:
        text: इस पाठ को वास्तविक जीवन की कलन विधियां कहा जाता है। कलन विधियां उन चीज़ों
          का वर्णन करती हैं, जो लोग रोज़ाना करते हैं। बिस्कुट की व्यंजन विधि और पक्षी
          का घर बनाने के लिए निर्देश, दोनों ही रोज़ाना की कलन विधियां हैं।
      2:
        text: आज हम कागज़ के हवाई जहाज के लिए कलन विधि बनाने, तैयार करने और जांच करने
          वाले हैं। लेकिन सबसे पहले, हमें इस बड़े प्रोजेक्ट को विभाजित करना होगा ताकि
          छोटे स्टेप्स का आसानी से अनुसरण किया जा सके। कागज़ का हवाई जहाज बनाने के
          लिए, हमें यह निर्णय लेने की जरूरत है कि कौन-से कदम उठाने हैं और उन्हें किस
          क्रम में लेना है।
      3:
        text: आप सबसे पहले तस्वीरों को काट के अलग करके अपनी कलन विधि बनाएंगे। इसके
          बाद, आप 6 तस्वीरें चुनेंगे, जो कागज़ का हवाई जहाज बनाने के लिए आवश्यक स्टेप्स
          दिखाती हैं और उन तस्वीरों को सही क्रम में लगाएंगे। जब आपने सब कुछ क्रम में
          लगा दिया हो, तो आप यह देखने के लिए कलन विधि काम कर रही है, कलन विधि को परखने
          के लिए दूसरी छात्र टीम से कलन विधियों की अदला-बदली करेंगे। अच्छा कागज़ का
          हवाई जहाज बनाने के लिए अच्छी तरह से डिज़ाइन की गई कलन विधि बेहद महत्वपूर्ण
          है।
      4:
        text: जब हम चॉकलेट बनाना चाहते हैं, तो उस प्रक्रिया को करने के लिए बहुत-से
          बड़े स्टेप्स होते हैं और उन बड़े स्टेप्स में से प्रत्येक में असका अपना छोटे
          स्टेप्स का सेट होता है और इस आधार पर विभिन्न व्यंजन विधियां या कलन विधियां
          होती हैं कि हम अपनी चॉकलेट का स्वाद कैसा चाहते हैं। प्रत्येक स्टेप महत्वपूर्ण
          है, यहां तक कि छोटे से छोटा भी, इसलिए एक भी स्टेप के बिना, उनमें से बाकी
          पूरे नहीं हो सकते। ऐसे कलन विधियां बनाना बहुत ही महत्वपूर्ण है, जिन्हें
          अन्य लोग समझ पाएं। इसी कारण प्रत्येक स्टेप को लिखना जरूरी है ताकि चाहे इस
          कोई भी करे, परिणाम एक ही आए।
    C2_playlab_createstory:
      1:
        text: अब तक आप ऐनिमेशन या कहानी तैयार करते रहे हैं, जो हर बार आपके द्वारा
          इसे चलाने पर एक ही चीज़ करती है। अब आप संवादात्मक गेम बना सकते हैं, जिसे
          आप वास्तव में खेल सकते हैं।
      2:
        text: आजमाने के लिए कुछ ब्लॉक्स हैं। "जब तीर" ब्लॉक और "अभिनेता को मूव करें"
          ब्लॉक है। आप तीर वाली कुंजियों के साथ अभिनेताओं को चारों ओर मूव करने के
          लिए इन ब्लॉक्स को एक साथ जोड़ सकते हैं। कुछ ब्लॉक्स ऐसे भी हैं, जो तब काम
          करते हैं, जब अभिनेता टकराते हैं या उन पर क्लिक किया गया हो। उन्हें देखें
          और मज़ा लें!
    C2_relay_programming:
      1:
        text: आज हम रिले प्रोग्रामिंग करेंगे। यह दबाव में प्रोग्रामिंग करने और उन
          गलतियों को डीबग करने के बारे में है, जो कभी-कभार तब होती हैं, जब आप बहुत
          ही जल्दी में या टीमों में काम करते हैं। हम कोडिंग का अनुकरण करने के लिए
          ग्राफ पेपर प्रोग्रामिंग का उपयोग करेंगे, और अंतिम तारीख लेते हुए अनुकरण
          करने के लिए रिले दौड़ प्रतियोगिता का उपयोग करेंगे।
      2:
        text: रिले प्रोग्रामिंग में, टीमें ग्राफ पेपर प्रोग्राम पूरा करने के लिए स्पर्धा
          करेंगी। आपको अपने सहपाठी के काम को देखना होगा, या इसे डीबग करना होगा, और
          यदि कोई गलती हो तो उसे ठीक करना होगा, अपना तीर जोड़ें और वापस भागें और अपने
          टीम के साथी को टैग करें।
      3:
        text: प्रोग्राम अपनी कलन विधियों या कोड में समस्याओं का पता लगाने और उन्हें
          ठीक करने के लिए डीबगिंग का बहुत उपयोग करते हैं। समस्याओं को डीबग करने के
          बहुत-से तरीके हैं। सबसे आसान तरीका है, तब तक कदम दर कदम आगे बढ़ना, जब तक
          कि आप पता न लगा लें कि यह कहां गलत हो जाता है, फिर इसे ठीक करें।
      4:
        text: यहां मैं बैक हैंडस्प्रिंग करने का प्रयास कर रही हूं, लेकिन मैं बार-बार
          गिर रही हूं। मैंने कदम दर कदम प्रत्येक भाग का विस्तृत वर्णन किया और मुझे
          अहसास हुआ कि मेरी गलती कहां थी। मेरे कोच ने मुझे बताया कि मैं अपने हाथों
          को बीम पर सही ढंग से नहीं रख रही थी। इसलिए मैंने अपने हाथ की नई पोजीशन के
          साथ बीम दूसरे बैक हैंडस्प्रिंग का प्रयास किया और इसमें अटक गई! सचमुच मैं
          बहुत खुश थी कि मैंने आप बैक हैंडस्प्रिंग को डीबग किया। हमने इसका पता लगा
          लिया! डीबगिंग समस्याओं को ढूंढना और फिर ठीक करना है। अच्छा है, बहुत बढ़िया!
    C2_zuck_repeat_loop:
      1:
        text: एक चीज़, जिसमें कंप्यूटर बेहद निपुण हैं, वह है, कमांड्स को दोहराना।
          व्यक्ति के तौर पर, यदि आपको एक ही चीज़ लगातार बार-बार करनी पड़े तो आप बहुत
          ऊब जाएंगे। लेकिन कंप्यूटर अरबों, यहां तक कि खरबों बार एक ही चीज़ कर सकता
          है और यह ऊबेगा नहीं व उसे भी बहुत अच्छे तरीके से करेगा।
      2:
        text: तो उदाहरण के लिए, यदि मैं Facebook पर सबको ईमेल भेजकर जन्मदिन की शुभकामनाएं
          देना चाहती, तो मुझे वास्तव में हर किसी को वो सब ईमेल लिखने में सदियां लग
          जातीं। लेकिन कोड की केवल कुछ लाइनों के साथ, मेरे पास ऐसा सिस्टम हो सकता
          है, जिससे मैं Facebook पर सबको ईमेल भेजकर जन्मदिन की शुभकामनाएं दे सकती
          हूं। तो लूप्स यही हैं, और इसीलिए वे बहुमूल्य हैं, और कुछ ऐसा, जो कंप्यूटर
          बहुत अच्छी तरह से कर सकते हैं।
      3:
        text: इस उदाहरण में, आपका लक्ष्य सूअर को पाने के लिए पक्षी को मूव करना होगा।
          अब, हम इसे बहुत ही आसानी से करने के योग्य होने के लिए दोहराएं ब्लॉक का उपयोग
          करने में सक्षम होंगे। आप कं हर बार पक्षी को सूअर की तरफ एक कदम आगे जाने
          के लिए कंप्यूटर को पांच बार आगे की ओर मूव करें कमांड देकर ऐसा कर सकते हैं
          ।
      4:
        text: या आप कंप्यूटर को केवल एक बार "आगे की ओर मूव करें” कह सकते हैं और फिर
          इसे 5 बार इसे "दोहराएं" कह सकते हैं और यह एक ही चीज़ करेगा। इसलिए ऐसा करने
          के लिए, आप अपनी "आगे की ओर मूव करें" कमांड को खींचें और फिर इसे "दोहराएं"
          ब्लॉक के अंदर रख दें। आप इस पर क्लिक कर सकते हैं और इसे बता सकते हैं कि
          इसे यह बताने के लिए कितनी बार ब्लॉक दोहराने के लिए कहेंगे कि आप इसे कितने
          स्टेप्स आगे की ओर ले जाना चाहते हैं।
      5:
        text: अब एक और बात, आप "दोहराएं" ब्लॉक के अंदर कितनी भी कमांड्स डाल सकते हैं।
          इसलिए इस उदाहरण में, आप इसे आगे की ओर मूव करने और दाएं मुड़ने के लिए कह
          रहे हैं, जिसे यह पांच बार करेगा। ठीक है, बहुत बढ़िया, इसका आनंद लें!
    C3_artist_functions:
      1:
        text: कंप्यूटर प्रोग्रामिंग में सबसे अच्छी बात यह है कि जब आपने कंप्यूटर को
          सिखा दिया कि क्रिया कैसे करनी है, तो आप उस फंक्शन को दुबारा बोल सकते हैं।
          आप इसे नाम दे सकते हैं और फिर इसे बोल सकते हैं। यह भाषा का विस्तार करने
          जैसा ही है।
      2:
        text: जो प्रोग्राम हमने बनाया है, उसमें हमने सीखा है कि चार बार मूव करके और
          मुड़कर वर्ग कैसे खींचना है। हम उस फंक्शन को लेकर उसे नाम दे सकते हैं, वर्ग
          खींचें, ताकि जब भी आप उसे करना चाहें, आप बस बोलें, वर्ग खींचें और यह वापस
          जाएगा और उस फंक्शन, उस कोड का उपयोग करेगा। यह हमारे लिए इसे पूरा करेगा।
          हमने अपनी प्रोग्रामिंग भाषा में उस अवधारणा को जोड़ दिया है।
    C3_artist_intro:
      1:
        text: यदि आपके पास ऐसे लोग नहीं हैं, जो कंप्यूटर साइंस में निपुण हैं, तो आप
          कारों द्वारा एकत्र किए जाने वाले डेटे और ऐसे लोगों के होने की जरूरत के कारण
          रेस के लिए योग्य भी नहीं होंगे, जो यह पता लगाने के लिए प्रोग्राम लिख सकें
          कि आप यह पता लगाना कैसे जारी रखेंगे कि प्रदर्शन को कैसे बढ़ाना है।
      2:
        text: इन पहेलियों में, आप एक कलाकार होंगे, जो अलग-अलग आकृतियां खींचने के लिए
          पेंसिल का उपयोग करता है। जहां भी आपका कलाकार जाता है, यह आपके पीछे एक लाइन
          खींचेगा।
      3:
        text: कैनवास के चारों ओर मूव करने के लिए, आप आगे की ओर मूव करें ब्लॉक का उपयोग
          करेंगे। यहां आगे की ओर मूव करें ब्लॉक कहता है, 100 पिक्सल आगे की ओर मूव
          करें। जब चलाएं को हिट करते हैं, तो क्या होता है? कलाकार कुछ दूरी तक आगे
          की ओर मूव करता है और वह दूरी 100 पिक्सल होती है। पिक्सल मूलतः आपकी स्क्रीन
          पर बहुत ही छोटे-छोटे वर्ग हैं।
      4:
        text: इस पहेली में हमारे पास जो अन्य ब्लॉक वह कहता है, 90 डिग्री तक दाएं मुड़ें।
          और जब हम उसे बाहर खींचते हैं, तो वह हमारे कलाकार को कुछ दूरी तक मोड़ देता
          है। इसलिए आप अपने कलाकार को जितना मोड़ना चाहते हैं, उसके लिए इस आजमा सकते
          हैं। यह 90 डिग्री का मोड़ है।
      5:
        text: और यह 120 डिग्री का मोड़ है। और याद रखें, आप पिक्सल्स और डिग्री के लिए
          संख्याओं के साथ लगे तीरों पर क्लिक करके इन मूल्यों को बदल सकते हैं। अपने
          कलाकार के साथ ड्राइंग का आनंद लें!
    C3_artist_nested_loops:
      1:
        text: जब आप एक लूप को दूसरी लूप के अंदर रखते हैं, तो हम उसे नेस्टड लूप कहते
          हैं। उदाहरण के लिए, यहां हमें त्रिकोण की प्रत्येक भुजा के लिए एक बार, तीन
          से सेट किया हुआ बार दोहराएं ब्लॉक का उपयोग करते हुए 100 पिक्सल लंबाई की
          भुजाओं वाला एक त्रिकोण खींचने के लिए पहले से ही कोड दिया गया है।
      2:
        text: लेकिन हम छह त्रिकोण खींचना चाहते हैं। ऐसा करने के लिए, हम उस लूप को
          लेंगे और उसे दूसरे बार दोहराएं ब्लॉक के अंदर रखेंगे। बहुत बढ़िया!
    C3_bee_conditionals:
      1:
        text: यह कंडिशनल ब्लॉक है। यह कहता है, यदि मधुरस या शहद है, जो किसी संख्या
          से कम, उसके बराबर या उससे अधिक है, तो कुछ करें।
      2:
        text: यह तब उपयोगी होता है, जब हमें पता नहीं होता कि प्राप्त करने के लिए कितना
          मधुरस या शहद है, क्योंकि हम यहां इस प्रश्न चिन्ह के साथ देखते हैं।
      3:
        text: इस उदाहरण में, हम यह कहेंगे कि यदि बैंगनी फूल में 0 से अधिक मधुरस है,
          तो मधुरस प्राप्त करें। यह हमारी मधुमक्खी को बताएगा कि वह तब तक मधुरस प्राप्त
          करती रहे, जब तक मधुरस वहां हो। वाह!
    C3_bee_debugging:
      1:
        text: क्या आपने कभी प्रोग्राम को डीबग करने के बारे में सुना है? यह वही तरीका
          है, जिससे आप पता लगाते हैं कि क्या काम नहीं कर रहा है। जब आप कोड को डीबग
          करते हैं, तो आप त्रुटियों को पहचान कर उन्हें दूर करते हैं।
      2:
        text: यहां हमें हमारे वर्कस्पेस में पहले से ही कुछ ब्लॉक्स दिए गए हैं। हम
          यह देखने के लिए कदम दर कदम, ब्लॉक्स का विस्तृत वर्णन करने के लिए स्टेप बटन
          का उपयोग करेंगे कि यह सही समाधान है और हमें इसे कहां ठीक करने की जरूरत हो
          सकती है।
      3:
        text: ऐसा लगता है कि यह हमारी समस्या है! हमें एक और आगे की ओर मूव करें ब्लॉक
          की जरूरत है। स्टेप बटन यह पहचान करके हमारी समस्या को डीबग करने में हमारी
          मदद करता है कि त्रुटि कहां है, ताकि हम इसे ठीक कर सकें।
    C3_bee_functions:
      1:
        text: कंप्यूटर साइंस में सबसे महत्वपूर्ण अवधाराणाओं में से एक यह है कि नई
          कमांड्स को कैसे परिभाषित करना है, कंप्यूटर की भाषा में आपके अपने शब्द कैसे
          जोड़ने हैं। अधिकतर कंप्यूटर भाषाओं में लगभग एक सौ शब्द या कमांड्स ही होती
          हैं। इन बिल्डिंग ब्लॉक्स में से आपके अपने शब्दों को परिभाषित करने में कला
          और जादू है।
      2:
        text: हम ऐसा हमेशा खेलों में करते हैं। उदाहरण के लिए, बास्केटबॉल में, आप यह
          सीखकर शुरुआत करते हैं कि गेंद को आगे की तरफ कैसे ले जाना है, बास्केट के
          नजदीक वन-हैंडिड शॉट कैसे लगाना है, रीबाउंड कैसे करना है। ये बुनियादी मूव्स
          सीखने के बाद आप नए मूव और इन बिल्डिंग ब्लॉक्स को जोड़ना सीख लेते हैं, जैसे
          पिक एंड रोल या गिव एंड गो। फिर आप वहां से अधिक जटिल खेलों पर जा सकते हैं।
          जब आप वह खेल सीख लेते हैं और इसे नाम दे देते हैं, तो टीम में हर कोई जान
          जाता है कि यह कैसे करना है।
      3:
        text: इसी तरह जब आपने किसी कंप्यूटर को यह सिखा दिया कि कमांड्स के इन क्रमों
          का उपयोग करते हुए क्रिया एक बार क्रिया कैसे करनी है, तो आप उस क्रिया के
          लिए अपना खुद का नाम बना सकते हैं ताकि इसे बाद में दोहराना आसान हो। जब अपनी
          खुद की कमांड को परिभाषित करते हैं और इसे नाम देते हैं, तो उसे फंक्शन कहा
          जाता है। अब हम मधुमक्खी की मदद के लिए फंक्शन्स का उपयोग करेंगे।
      4:
        text: इस उदाहरण में, हमारे फंक्शन को 2 मधुरस प्राप्त करें कहा जाता है, जो
          यहां पर हरा ब्लॉक है। हम जानते हैं कि इस स्लेटी बॉक्स की तरफ देखकर 2 मधुरस
          प्राप्त करें क्या करता है, जो फंक्शन की परिभाषा है। यदि हम वहां अंदर देखें,
          तो 2 मधुरस प्राप्त करें, मधुरस प्राप्त करने के लिए जाना और फिर दुबारा मधुरस
          प्राप्त करना है। हमेशा देखें कि स्लेटी बॉक्स के अंदर क्या है ताकि आप जान
          लें कि ये हरे फंक्शन ब्लॉक क्या कर सकते हैं।
    C3_bee_nested_loops:
      1:
        text: अब हम मधुमक्खी के साथ नेस्टड लूप्स का उपयोग करेंगे। हमें थोड़ा शुरुआती
          कोड दिया गया है, जो मधुमक्खी को आगे की ओर मूव करने और तीन बार मधुरस प्राप्त
          करने व फिर दाएं मुड़ने के लिए कहता है। आइए उस पूरे कोड को लें और इसे दूसरे
          दोहराएं ब्लॉक के अंदर नेस्ट करें व तीन बार दोहराने पर सेट करें। हो गया!
    C3_bounce:
      1:
        text: आप अपनी खुद की उछाल गेम बनाने वाले हैं, जिसे आप अपने दोस्तों के साथ
          साझा कर पाएंगे।! कितना अच्छा है!
      2:
        text: शुरुआत करने के लिए, हमें हमारे कीबोर्ड पर तीर की कुंजियों पर पैडल नियंत्रण
          को जोड़ना होगा।
      3:
        text: हम जब बायां तीर ब्लॉक को बाईं ओर मूव करें ब्लॉक से और जब दायां तीर ब्लॉक
          को दाईं ओर मूव करें ब्लॉक से जोड़कर ऐसा कर सकते हैं। अब इसे आजमाएं और आप
          तुरंत अपनी खुद की उछाल गेम प्रोग्राम कर लेंगे!
    C3_computational_thinking:
      1:
        text: यह पाठ अभिकलनात्मक चिंतन है। कभी-कभार नई गेम सीखना कठिन हो सकता है,
          है न? सबसे पहले ऐसा प्रतीत होता है कि यह बहुत ही पेचीदा है और कभी-कभी आपको
          नियम सिखाने के लिए कोई नहीं होता, इसलिए आपको खुद ही इसे समझना होगा।
      2:
        text: अच्छी खबर यह है कि आप खुद चीज़ों को समझने पर ज्यादा जानकारी पा सकते
          हैं और विचार करने की तरकीबें जान सकते हैं। ये तरकीबें समस्याओं का पता लगाने
          और उन्हें हल करने के अद्भुत तरीके हैं। इस पाठ में, आप चार तरकीबों को बारे
          में सीखेंगे और गेम के नियमों को समझने के लिए अपने दोस्तों के साथ उनका अभ्यास
          करेंगे।
      3:
        text: जब आप बड़ी समस्या को छोटे-छोटे भागों में बांटते हैं, तो आप बड़ी समस्या
          का विश्लेषण करने के लिए अपने दिमाग का उपयोग कर रहे होते हैं। जब आप बड़ी
          समस्या को कई छोटी समस्याओं में बांट लेते हैं, तो हम अपनी अगली तरकीब पर जा
          सकते हैं, जिसे पैटर्न मिलान कहा जाता है।
      4:
        text: ऐसा तब होता है, जब हम चीज़ों के बीच समानताओं पर विचार करते हैं। अगर
          मैं उन चीज़ों को ढूंढ लूं, जो एक जैसी हैं, तो मैं पता लगा सकता हूं कि कौन-सी
          चीजें अलग हैं। जब मैं उन अंतरों को दूर कर लूं, तो उसे पृथक्करण कहा जाता
          है।
      5:
        text: समस्या को हल करने के लिए स्टेप्स का पता लगाने के बाद, मैं उन स्टेप्स
          को उन्हें कलन विधि नामक विशेष क्रम में रख सकता हूं ताकि कोई भी उस समस्या
          को हल करने के लिए मेरे निर्देशों का उपयोग कर सके। हम यह पता लगाने के लिए
          उन चार स्टेप्स का उपयोग करेंगे कि बिना नियमों के गेम कैसे खेलनी है। गेम
          के अंत में, आप कुछ ऐसी प्रतीत होने वाली गेम खेल पाएंगे!
    C3_crowdsourcing:
      1:
        text: इस पाठ को क्राउडसोर्सिंग कहा जाता है। इस पाठ में, हम यह जानने के लिए
          ताश के पत्तों का उपयोग करेंगे कि कुछ चीज़ों को बिल्कुल अकेले करने की बजाय
          समूहों में करना कितना आसान होता है। इसलिए कुछ दोस्तों को एकत्र करें और कुछ
          शानदार बनाएं। क्राउडसोर्सिंग किसी काम को तेज़ी से पूरा करने के लिए लोगों
          के बड़े समूह से मदद प्राप्त करना है।
      2:
        text: कंप्यूटर साइंस में, हम पूरा समय क्राउडसोर्सिंग का उपयोग करते हैं। हज़ारों
          अनुभवहीन और पेशेवर, जानकारी के अरबों भागों के माध्यम से खोज करने के लिए
          अपने कंप्यूटरों को साथ में जोड़ते हैं। अगला मर्सेन अभाज्य अंक या संभावी
          एलियन संचार जैसी चीज़ें खोजना।
      3:
        text: जब आप कोई फिल्म देखते हैं, फिल्म का प्रत्येक सेकंड 24 अलग-अलग तस्वीरें
          होती हैं, हम उन्हें फ्रेम कहते हैं। इसलिए उन तस्वीरों में से प्रत्येक को
          बनाने, रूपांतरित करने और एक साथ जोड़ने की जरूरत होती है। मेरी टीम और मैं,
          हम सभी सॉफ्टवेयर विकासकार हैं। हम सभी सॉफ्टवेयर का ऐसा पीस बनाने के लिए
          साथ मिलकर काम करते हैं, जो असल में चित्र बनाता है, फाइनल चित्र बनाता है,
          जो आप स्क्रीन पर देखते हैं। वह एक टूल होता है, कलाकार और अन्य विकासकार जिसका
          उपयोग अपने टीमवर्क और अपनी प्रक्रिया के भाग के तौर पर कर सकते हैं ताकि वे
          ऐसे चित्र बनाने में सक्षम हों, जो वे स्क्रीन पर चाहते हैं।
      4:
        text: उदाहरण के लिए, Finding Nemo में, जब क्रश और स्क्विर्ट और उनके सभी दोस्त
          East Australian Current के द्वारा उड़ रहे होते हैं। आप पानी बहने के चित्र
          देख रहे हैं, आप कछुए की पीठ पर रंग देख रहे हैं, आप मछली की साइड्स देख रहे
          हैं। वो सभी चीज़ें गणित और कंप्यूटर प्रोग्रामों के जरिए बनाई गई हैं, जो
          हम लिखते हैं, जो हम बाद में कलाकार को देते हैं और वे उस फाइनल चित्र को बनाने
          के लिए उसे लेते हैं और उसे ठीक करते हैं व इसे सुंदर व मज़ेदार बनाते हैं।
    C3_dice_race:
      1:
        text: इस पाठ को डाइस रेस कहा जाता है। लगभग हर किसी को कंप्यूटर पर गेम्स खेलना
          पसंद है। क्या आपने कभी सोचा है कि कंप्यूटर प्रोग्रामर किस प्रकार प्रोग्राम
          में गेम के स्टेप्स बदलते हैं? कंप्यूटर गेम्स बनाने और किसी भी समस्या को
          हल करने में पहला स्टेप सोचना और योजना बनाने की जरूरत होता है।
      2:
        text: समस्या को हल करने का स्टेप सोचना कलन विधि तैयार करता है, जो समस्या को
          हल करने या कार्य को पूरा करने के लिए कदम दर कदम योजना है। इस पाठ में, आप
          डाइस रेस गेम के लिए कलन विधि बनाएंगे। फिर आप यह देखने के लिए अपने दोस्तों
          को अपनी योजना आजमाने के लिए कहेंगे कि क्या वे गेम खेलने के लिए स्टेप्स का
          अनुसरण कर सकते हैं। जब प्रोग्रामर सुनिश्चित हो कि स्टेप्स सही हैं, तो फिर
          कलन विधि को उस भाषा के साथ प्रोग्राम में अनुवाद करना होता है, जिसे कंप्यूटर
          समझ सके।
      3:
        text: हम रोज़ाना जो भी करते हैं, लगभग उस सबके लिए कलन विधि आवश्यक होती है,
          ऐसे स्टेप्स की सूची, कार्य पूरा करने के लिए आप जिसका अनुसरण कर सकें। स्कूल
          के लिए तैयार होने या अपने दोस्तों के साथ मज़ेदार दिन बिताने की योजना बनाने
          या स्नैक फिक्स करने के बारे में सोचें। उनमें से किसी भी कार्य को पूरा करने
          के लिए, आपको इसे छोटे-छोटे स्टेप्स में बांटने की जरूरत होगी और कभी-कभार
          स्टेप्स विशेष क्रम में होने आवश्यक होते हैं।
      4:
        text: सैंडविच बनाने के बारे में सोचें। इससे कोई फर्क नहीं पड़ता कि आप कैबिनेट
          में से सबसे पहले कौन सी सामग्री निकालते हैं। लेकिन आप तब तक पीनट बटर नहीं
          लगा सकते, जब तक कि आप जार नहीं खोलते। कंप्यूटर को उन्हें यह दिखाने के लिए
          कलन विधियों और प्रोग्रामों की जरूरत होती है कि सरल चीज़ों को कैसे करें,
          जिन्हें हम इसके बारे में सोचे बिना ही कर सकते हैं।
      5:
        text: कलन विधि इसके पीछे की सोच है कि जब प्रोग्राम खुद को चलाने के लिए कंप्यूटर
          को वास्तविक निर्देश देता है तो क्या घटित होना चाहिए। इससे पहले कि कंप्यूटर
          इसे चला पाए, कलन विधि को प्रोग्राम में स्थानांतर करना होगा। कार्य को स्टेप्स
          में बांटने को कलन विधि कहा जाता है, जो कभी-कभार मुश्किल होती है। लेकिन किसी
          भी नए कौशल की तरह, अभ्यास के साथ काफी आसान होती जाती है।
    C3_farmer_while:
      1:
        text: व्हाइल लूप्स उससे काफी मिलती-जुलती हैं, जो आप रोजमर्रा की ज़िंदगी में
          करते हैं। मान लें कि आप अपनी कार धो रहे हैं, आप तब तक इसे रगड़ते रहेंगे,
          जब तक कि यह साफ न हो जाए। अगर यह साफ न हो, तो रगड़ना जारी रखें। आप पूरा
          समय इन चीजों का मूल्यांकन कर रहे होते हैं।
      2:
        text: हमने आपके किसान की मदद करने के लिए नया रूप प्राप्त किया है। व्हाइल-ब्लॉक
          कहा जाता है। जब ऊपर की स्टेटमेंट सही होती है, तो कुछ करें। उदाहरण के लिए,
          जब वहां ढेर हो तो एक हेफुल मूव करें। आगे बढ़ें और अपने किसान के साथ इसे
          आजमाएं।
    C3_functional_suncatchers:
      1:
        text: यह पाठ फंक्शनल सनकैचर्स है। आप फंक्शन्स का उपयोग करते हुए ये सुंदर सनकैचर्स
          बनाएंगे। इनमें से एक सनकैचर बनाने में कई स्टेप्स हैं। उनमें से कुछ स्टेप्स
          को आपको कई बार दोहराना पड़ेगा।
      2:
        text: सनकैचर बनाने की प्रक्रिया को सरल बनाने का पहला स्टेप यह पता लगाना है
          कि हमें बार-बार क्या दोहराना होगा। हम इन स्टेप्स को उनमें वर्गीकृत कर सकते
          हैं, जिसे हम फंक्शन कहते हैं।
      3:
        text: लेकिन छोटे स्टेप्स का अनुसरण करने से ज्यादा सुंदर सनकैचर बनाने के लिए
          और भी बहुत कुछ है। कभी-कभार हम रचनात्मक होकर उन मनकों का रंग बदलना चाह सकते
          हैं, जो हम उपयोग कर रहे हैं। यदि हम अलग-अलग रंगों के मनकों का उपयोग करते
          हैं तो हम प्रत्येक सनकैचर को और भी अच्छा बना सकते हैं।
      4:
        text: आपका सनकैचर पूरी तरह से आपका होगा, जब आप मनकों के वेरिएबल्स के तौर पर
          सोचना सीख जाएंगे, जो एक शब्द होता है, जिसका मतलब है जानकारी के लिए प्लेसहोल्डर,
          जिसे बदला जा सकता है। फंक्शन्स और वेरिएबल्स का उपयोग करते हुए सुंदर सनकैचर
          बनाने का मज़ा लें!
    C3_internet:
      1:
        text: यह पूरा पाठ इंटरनेट के बारे में है। इंटरनेट बहुत ही व्यस्त स्थान है
          और व्यस्त सड़क के समान है। संदेश उन कारों के समान होते हैं, जो अपने ठिकानों
          पर जाने के लिए तेज़ी से आगे बढ़ती हैं। संदेश भी बहुत तेज़ी से इंटरनेट के
          माध्यम से मूव करते हैं।
      2:
        text: इस पर काम करने से कि इंटरनेट कैसे काम करता है, आपको यह समझने में मदद
          मिलेगी कि जब आप इंटरनेट का उपयोग करते हैं तो क्या होता है। आप सीखेंगे कि
          किस प्रकार से संदेश आपके कंप्यूटर से पसंदीदा वेबसाइट तक या किसी दोस्त से
          ईमेल इनबॉक्स तक जाते हैं। जिस प्रकार से व्यस्त सड़कों पर जाना उस समय अधिक
          आसान होता है, जब आपको सड़कों के बारे में पता हो और संकेत पढ़ सकते हों, उस
          प्रकार इंटरनेट पर जाना भी उतना जटिल नहीं होता, जब आपको पता हो कि पर्दे के
          पीछे क्या चल रहा है।
      3:
        text: इंटरनेट पर संदेश भेजना, थोड़ा-बहुत डाक में संदेश भेजने जैसा है लेकिन
          कुछ अंतरों के साथ। मैं यहां Google.com पर हूं। इस वेबसाइट का IP पता यह नंबर
          है। आप IP पते को डाक में अपना वापसी पता मान सकते हैं। आइए मान लें कि मैं
          वहां नीचे ऑफिस में किसी को मेल में संदेश भेजना चाहता हूं। क्या आप उस दरवाजे
          पर URL और IP पता देख रहे हैं? मैंने यह संदेश लिखा और भेजें को हिट किया।
      4:
        text: डाक सेवा के विपरीत, पहली चीज़ जो घटित होती है, वह यह है कि इंटरनेट संदेश
          को छोटे-छोटे भागों में बांटता है ताकि इसे अधिक आसानी से भेजा जा सके। इन
          छोटे-छोटे भागों को पैकेट कहा जाता है। संदेश के प्रत्येक पैकेट को एक बार
          में एक स्थान पर भेजा जाता है। इन सभी पैकेटों को सही क्रम में एक साथ जोड़ा
          जाता है ताकि प्राप्तकर्ता संदेश को सही ढंग से पढ़ सके। निस्संदेह, इस बारे
          में कई बहुत सी और चीज़ें हैं कि इंटरनेट कैसे काम करता है लेकिन यह अच्छी
          शुरुआत है। आप व्यावहारिक ज्ञान रखने वाले उपयोगकर्ता बनने के अपने रास्ते
          पर हैं! अपने परिवार और दोस्तों को जरूर बताएं कि आपने क्या सीखा है!
      5:
        text: मेरा नाम अमांडा कैंप (Amanda Camp) है और मैं Google में सॉफ्टवेयर इंजीनियर
          हूं। मैं उस टीम पर काम करती हूं, जो उस बैक्नड सर्वर पर काम करती है, जो प्रोफाइलें
          व संपर्क स्टोर करता है। मेरी नौकरी में, हम इस बारे में बहुत सोचते हैं कि
          संपर्क अन्य डिवाइसों पर कैसे भेजे जाते हैं, जैसे कि आपका फोन। अधिकतर लोगों
          के बहुत-से संपर्क होते हैं, आप कह सकते हैं, 1000 संपर्क और हम आपके फोन पर
          एक बार में वो सारे संपर्क नहीं भेजना चाहते क्योंकि संदेश के लिए बहुत ज्यादा
          बड़ा है। इसी प्रकार से इंटरनेट बड़े संदेशों को पैकेटों में बांटता है, हम
          पृष्ठांकित करना नामक अवधारणा का उपयोग करते हैं, जहां हम एक बार में आपके
          फोन पर केवल 100 संपर्क भेज सकते हैं और आपके फोन को हमें जवाब देने और अगले
          100 की मांग करने देते हैं।
      6:
        text: सॉफ्टवेयर के बारे में सबसे रोमांचक चीज़ यह तथ्य है कि यह पूरी दुनिया
          को प्रभावित कर सकता है। सबसे पहले मैंने लगभग उन्नीस साल की उम्र में प्रोग्राम
          करना सीखा। मेरे ख्याल में मैं पहले से ही कॉलेज में दूसरे वर्ष की छात्रा
          या जूनियर थी। मुझे याद है कि पहला प्रोग्राम लिखना कुछ ऐसा था, जिसने सेल्सियस
          या फारेनहीट को परिवर्तित किया। मुझे प्रोग्रामिंग करना पसंद है क्योंकि मुझे
          लोगों की मदद करना अच्छा लगता है। मैं Google पर ऐसे प्रोग्राम लिख सकती हूं,
          जो पूरी दुनिया में लोगों की मदद करें और जो बहुत ही विलक्षण व रोमांचक हों।
    C3_maze_conditionals:
      1:
        text: लोग रोज़ाना निर्णय लेते हैं। उदाहरण के लिए, बाहर जाने से पहले, आपके
          पास एक इफ स्टेटमेंट होती है, जो कहती हैं कि यदि बारिश हो रही है, तो मुझे
          अपनी जैकेट लेनी पड़ेगी। कंप्यूटर्स अद्भुत हैं, जब आप उस प्रकार की स्टेटमेंट्स
          निर्धारित करते हैं, तो वे विश्वसनीयता ढंग से और अविश्वसनीय गति से उन चीज़ों
          को कार्यान्वित करते हैं। कंप्यूटर प्रोग्राम वास्तव में थोड़ा-बहुत गणित जैसा
          है और कछ इफ स्टेटमेंट्स, जहां निर्णय लिए जाते हैं।
      2:
        text: इफ ब्लॉक ज़ोम्बी को निर्णय लेने में मदद करता है। यह कुछ जांचें करता
          है। उदाहरण के लिए, आइए उस ब्लॉक का उपयोग करें, जो कहता है, यदि बाईं ओर रास्ता
          है, और इसके अंदर बाएं मुड़ें कमांड रखता है। हम ज़ोम्बी को इसके आसपास के
          परिवेश पर नज़र डालने को कहते हैं, देखें कि क्या बाईं ओर रास्ता है और यदि
          है, तो उधर मुड़ें।
      3:
        text: फिर इस दोहराएं के अंदर आगे की ओर मूव करें ब्लॉक का उपयोग करते हैं, ताकि
          यह जब तक सीधा जाना चाहे, आगे की ओर मूव करता रहे। फिर जब मोड़ होता है, तो
          इफ ब्लॉक इसे बाईं ओर मुड़ने को कहता है। आप देख सकते हैं कि यदि हम ऐसा करते
          हैं, यदि हम बाईं ओर मुड़ते हैं और अन्यथा आगे की ओर मूव करते रहते हैं, तो
          हम अपना लक्ष्य हासिल कर लेंगे।
      4:
        text: यह इफ स्टेटमेंट उपयोग करने का उदाहरण है, जो वास्तव में कंप्यूटर प्रोग्रामिंग
          में बुनियादी अवधारणा है। पहली चीज़ों में से एक बात जो मैंने सीखी, वह यह
          थी कि ऐसा प्रोग्राम कैसे लिखा जाए, जिसमें टिक-टैक-टो खेला गया हो। मेरे पास
          यह कहने के लिए इफ स्टेटमेंट्स थीं, ठीक है, यदि अन्य व्यक्ति जीतने वाला है,
          तो आगे बढ़ें और उस स्थान को ब्लॉक कर दें। मज़ेदार ढंग से यह सीखें कि इफ
          स्टेटमेंट्स का उपयोग कैसे करना है, यह मुख्य अवधारणा है।
    C3_maze_level_4:
      1:
        text: इस उदाहरण में, आपका लक्ष्य ज़ोम्बी को सूर्यमुखी के फूल के पास ले जाना
          है। हम पांच आगे की ओर मूव करें ब्लॉक्स का उपयोग कर सकते हैं या हम कंप्यूटर
          को आगे की ओर मूव करें कह सकते हैं और एक दोहराएं ब्लॉक का उपयोग करते हुए
          पांच बार दोहराने के लिए कह सकते हैं।
      2:
        text: यह समय बचाता है और इसे काफी आसान बनाता है। इसका उपयोग करने के लिए, आगे
          की ओर मूव करें ब्लॉक को दोहराएं ब्लॉक के अंदर रकें। चलाएं को हिट करें और
          ज़ोम्बी मज़ेदार सूर्यमुखी के फूल की ओर पांच बार आगे की ओर मूव करेगा।
    C3_playlab_create_game:
      1:
        text: अब तक आप ऐनिमेशन या कहानी तैयार करते रहे हैं, जो हर बार आपके द्वारा
          इसे चलाने पर एक ही चीज़ करती है। अब आप संवादात्मक गेम बना सकते हैं, जिसे
          आप वास्तव में खेल सकते हैं।
      2:
        text: आजमाने के लिए कुछ ब्लॉक्स हैं। "जब तीर" ब्लॉक और "अभिनेता को मूव करें"
          ब्लॉक है। आप तीर वाली कुंजियों के साथ अभिनेताओं को चारों ओर मूव करने के
          लिए इन ब्लॉक्स को एक साथ जोड़ सकते हैं। कुछ ब्लॉक्स ऐसे भी हैं, जो तब काम
          करते हैं, जब अभिनेता टकराते हैं या उन पर क्लिक किया गया हो। उन्हें देखें
          और मज़ा लें!
    C3_songwriting_with_parameters:
      1:
        text: यह गीत लेखन पाठ है। संगीत काफी हद तक कंप्यूटर प्रोग्राम जैसा है। लिखित
          नोट्स और शब्द गायक को सही रूप में बताते हैं कि क्या करना है। संगीत के कुछ
          भागों को बार-बार उपयोग किया जाता है।
      2:
        text: हम इसे कोरस कहते हैं। कंप्यूटर प्रोग्राम में, प्रोग्राम के वे भाग, जो
          बार-बार उपयोग किए जाते हैं, फंक्शन्स कहलाते हैं। जब आप गीत के बोल पढ़ते
          हैं और यह शब्द कोरस कहता है, तो क्या आप शब्द कोरस को गाते हैं? नहीं, आप
          यह देखने के लिए पृष्ठ के सबसे ऊपर देखते हैं कि कौन-से शब्द कोरस बनाते हैं।
      3:
        text: इस पाठ में, आप लिटल बन्नी फू फू नामक छोटा-सा गीत सीखेंगे। गीत का कोरस
          है, जो आप कई बार, बार-बार गाएंगे। फंक्शन कोड का हिस्सा है, जिसे आप बोल सकते
          हैं और बार-बार उपयोग कर सकते हैं। यह प्रोग्रामिंग को आसान व और कुशल बनाता
          है ताकि आपको अपने फंक्शन के स्टेप्स को बार-बार न लिखना पड़े। आप इसे केवल
          एक बार लिख सकते हैं!
    C4_bee_conditional:
      1:
        text: यह कंडिशनल ब्लॉक है। यह कहता है, यदि आप फूल या मधु के छत्ते पर हैं,
          तो कुछ करें। यह तब उपयोगी होता है, जब हम नहीं जानकारी प्राप्त करने के लिए
          कितना शहद या मधुरस है क्योंकि हम यहां यह प्रश्नचिन्ह देखते हैं।
      2:
        text: इस उदाहरण में, हम यह कहेंगे, यदि यह फूल है, तो सारा मधुरस प्राप्त करें
          और फिर यह कहने के लिए दूसरे का उपयोग करें, यदि यह मधु का छत्ता है, तो शहद
          बनाएं। वाह!
    C4_conditionals:
      1:
        text: हमारे पास एक नया ब्लॉक है, जिसे इफ/एल्स ब्लॉक कहा जाता है। यह नियमबद्ध
          स्टेटमेंट है, बिल्कुल इफ ब्लॉक की तरह, जिसका उपयोग हमने पहले पहेलियों में
          किया है। लेकिन अब नीचे नया भाग है, जो एल्स कहता है। इफ/एल्स ब्लॉक मधुमक्खी
          को क्रियाओं के दो सेट्स के बीच निर्णय लेने देता है। यदि मधुमक्खी फूल पर
          है, तो मधुमक्खी क्रियाओं का वह सेट करेगी, जिसे आप पहले भाग में रखते हैं,
          जो कहता है, करें। यदि मधुमक्खी फूल पर नहीं है, तो मधुमक्खी क्रियाओं का वह
          सेट करेगी, जिसे आप उस स्लॉट में रखते हैं, यहां यह एल्स कहता है।
      2:
        text: इफ स्टेटमेंट्स से ही कंप्यूटर निर्णय लेने में सक्षम होते हैं। मनु्ष्य
          कंप्यूटर के लिए शर्तें स्थापित करते हैं, जो कहती है, यदि कंप्यूटर इसे करने
          के लिए निश्चित स्थिति पेश करता है। एल्स, जिसका मतलब है अन्यथा, वह करें।
          हमारे इफ/एल्स ब्लॉक का ऊपरी भाग कहता है, यदि फूल पर है। लेकिन हमारे ब्लॉक
          का ऊपरी भाग अन्य चीज़ें भी कह सकता है, जैसे यदि मधुरस 2 के बराबर है या यदि
          आगे रास्ता है, हमारा ब्लॉक उसी प्रकार से व्यवहार करेगा। यदि ऊपर के भाग पर
          स्टेटमेंट सही है, तो यह क्रियाओं का पहला सेट करेगी। लेकिन यदि ऊपरी भाग पर
          स्टेटमेंट गलत है, तो यह क्रियाओं का दूसरा सेट करेगी।
    C4_for_loops:
      1:
        text: जब आप अपने कोड को लूप करने के लिए दोहराएं ब्लॉक का उपयोग करते हैं, तो
          कंप्यूटर को कैसे पता चलता है कि इसने पर्याप्त बार दोहराया है? दोहराएं ब्लॉक
          वास्तव में फॉर लूप नामक कोड के अधिक जटिल भाग को छिपाना है, जो विशेष वृद्धि
          के द्वारा शुरुआती मूल्य से समाप्ति मूल्य तक गिनती है।
      2:
        text: उदाहरण के लिए, तीन बार दोहराएं ब्लॉक 1 से 3 गुणा 1 तक गिनता है। हर बार
          जब यह गिनता है, तो यह लूप के अंदर कोड को चलाता है। फॉर लूप जानती है कि काउंटर
          वेरिएबल का उपयोग करके कितनी बार इसे चलाया गया है, जो लूप के शुरू में शुरुआती
          मूल्य पर सेट है और हर बार लूप को चलाने पर इसमें वृद्धि शामिल की गई है। जितनी
          जल्दी काउंटर वेरिएबल, समाप्ति मूल्य से अधिक होगी, लूप उतनी ही जल्दी चलना
          बंद कर देगी।
      3:
        text: दोहराएं ब्लॉक की बजाय असली फॉर लूप का उपयोग करने का लाभ यह है कि आप
          वास्तव में काउंटर वेरिएबल देख सकते हैं और इसे अपनी लूप में उपयोग कर सकते
          हैं। उदाहरण के लिए, यदि मेरे पास फूलों की श्रृंखला हो, और पहले में एक मधुरस
          हो, दूसरे में दो मधुरस हों और तीसरे में तीन हों, तो मैं मधुमक्खी को हर बार
          'काउंटर’ मधुरस एकत्र करने के लिए बताने हेतु फॉर लूप का उपयोग कर सकती हं,
          जो पहले फूल पर एक, दूसरे पर दो और तीसरे पर तीन होगा।
      4:
        text: इसके अलावा फॉर लूप में, आप हर बार एक के मुकाबले एक संख्या से काउंटर
          में वृद्धि कर सकते हैं। आप संभवतया 2s, 4s तक गिन सकते हैं और यहां तक कि
          उस संख्या तक गिन सकते हैं, जो हर बार बदलती है।
    C4_for_loops_bee:
      1:
        text: जब आप अपने कोड को लूप करने के लिए दोहराएं ब्लॉक का उपयोग करते हैं, तो
          कंप्यूटर को कैसे पता चलता है कि इसने पर्याप्त बार दोहराया है? दोहराएं ब्लॉक
          वास्तव में फॉर लूप नामक कोड के अधिक जटिल भाग को छिपाना है, जो विशेष वृद्धि
          के द्वारा शुरुआती मूल्य से समाप्ति मूल्य तक गिनती है।
      2:
        text: उदाहरण के लिए, तीन बार दोहराएं ब्लॉक 1 से 3 गुणा 1 तक गिनता है। हर बार
          जब यह गिनता है, तो यह लूप के अंदर कोड को चलाता है। फॉर लूप जानती है कि काउंटर
          वेरिएबल का उपयोग करके कितनी बार इसे चलाया गया है, जो लूप के शुरू में शुरुआती
          मूल्य पर सेट है और हर बार लूप को चलाने पर इसमें वृद्धि शामिल की गई है। जितनी
          जल्दी काउंटर वेरिएबल, समाप्ति मूल्य से अधिक होगी, लूप उतनी ही जल्दी चलना
          बंद कर देगी।
      3:
        text: दोहराएं ब्लॉक की बजाय असली फॉर लूप का उपयोग करने का लाभ यह है कि आप
          वास्तव में काउंटर वेरिएबल देख सकते हैं और इसे अपनी लूप में उपयोग कर सकते
          हैं। उदाहरण के लिए, यदि मेरे पास फूलों की श्रृंखला हो, और पहले में एक मधुरस
          हो, दूसरे में दो मधुरस हों और तीसरे में तीन हों, तो मैं मधुमक्खी को हर बार
          'काउंटर’ मधुरस एकत्र करने के लिए बताने हेतु फॉर लूप का उपयोग कर सकती हं,
          जो पहले फूल पर एक, दूसरे पर दो और तीसरे पर तीन होगा।
      4:
        text: इसके अलावा फॉर लूप में, आप हर बार एक के मुकाबले एक संख्या से काउंटर
          में वृद्धि कर सकते हैं। आप संभवतया 2s, 4s तक गिन सकते हैं और यहां तक कि
          उस संख्या तक गिन सकते हैं, जो हर बार बदलती है।
    C4_for_loops_no_bee:
      1:
        text: जब आप अपने कोड को लूप करने के लिए दोहराएं ब्लॉक का उपयोग करते हैं, तो
          कंप्यूटर को कैसे पता चलता है कि इसने पर्याप्त बार दोहराया है? दोहराएं ब्लॉक
          वास्तव में फॉर लूप नामक कोड के अधिक जटिल भाग को छिपाना है, जो विशेष वृद्धि
          के द्वारा शुरुआती मूल्य से समाप्ति मूल्य तक गिनती है।
      2:
        text: उदाहरण के लिए, तीन बार दोहराएं ब्लॉक 1 से 3 गुणा 1 तक गिनता है। हर बार
          जब यह गिनता है, तो यह लूप के अंदर कोड को चलाता है। फॉर लूप जानती है कि काउंटर
          वेरिएबल का उपयोग करके कितनी बार इसे चलाया गया है, जो लूप के शुरू में शुरुआती
          मूल्य पर सेट है और हर बार लूप को चलाने पर इसमें वृद्धि शामिल की गई है। जितनी
          जल्दी काउंटर वेरिएबल, समाप्ति मूल्य से अधिक होगी, लूप उतनी ही जल्दी चलना
          बंद कर देगी। दोहराएं ब्लॉक की बजाय असली फॉर लूप का उपयोग करने का लाभ यह
          है कि आप वास्तव में काउंटर वेरिएबल देख सकते हैं और इसे अपनी लूप में उपयोग
          कर सकते हैं।
    C4_function_create:
      1:
        text: अब जबकि आपके पास संशोधित फंक्शन ब्लॉक्स हैं, अब शुरू से नया फंक्शन ब्लॉक
          बनाने का समय है। यह बहुत ही आसान है। आप देखेंगे कि टूलबॉक्स की फंक्शन्स
          नामक श्रेणी है। यदि आप इस पर क्लिक करते हैं, तो आप फंक्शन बनाएं नामक संतरी
          बटन देखेंगे। इस पर क्लिक करने से यह फंक्शन संपादक लाता है, जिसे आप पहले
          ही मौजूदा फंक्शन ब्लॉक्स को संपादित करने के लिए उपयोग कर चुके हैं।
      2:
        text: बिल्कुल पहले की तरह, आपने अपने फंक्शन को नाम देकर, वर्णन लिखकर शुरुआत
          की है, जिसके लिए फंक्शन बनाया जा रहा है। उदाहरण के लिए, यह वर्ग खींचने या
          त्रिकोण खींचने के लिए है और फिर ब्लॉक्स को टूलबॉक्स में से नीचे सफेद वर्क
          स्पेस में खींचने के लिए है। इन ब्लॉक्स को फंक्शन के लिए हरे आवरण ब्लॉक के
          अंदर खींचना याद रखें।
      3:
        text: जब आप इसे कर लें, तो सुरक्षित करें और बाहर आएं पर क्लिक करें। यह आपको
          वापस मुख्य पहेली वर्क स्पेस में ले जाएगा। जो नया फंक्शन आपने बनाया है, वह
          आपके टूलबॉक्स में फंक्शन श्रेणी में हरे ब्लॉक के रूप में दिखाई देगा। इसे
          खींचें और मुख्य वर्क स्पेस में छोड़ें और पहेली हल करने के लिए इसे किसी भी
          दूसरे ब्लॉक की तरह उपयोग करें।
    C4_function_edit:
      1:
        text: कंप्यूटर प्रोग्रामिंग में सबसे अच्छी बात यह है कि जब आपने कंप्यूटर को
          सिखा दिया कि क्रिया कैसे करनी है, तो आप उस फंक्शन को दुबारा बोल सकते हैं।
          आप इसे नाम दे सकते हैं और फिर इसे बोल सकते हैं। यह भाषा का विस्तार करने
          जैसा ही है।
      2:
        text: जो प्रोग्राम हमने बनाया है, उसमें हमने सीखा है कि चार बार मूव करके और
          मुड़कर वर्ग कैसे खींचना है। हम उस फंक्शन को लेकर उसे नाम दे सकते हैं, वर्ग
          खींचें, ताकि जब भी आप उसे करना चाहें, आप बस बोलें, वर्ग खींचें और यह वापस
          जाएगा और उस फंक्शन, उस कोड का उपयोग करेगा और यह हमारे लिए इसे पूरा करेगा।
          हमने अपनी प्रोग्रामिंग भाषा में उस अवधारणा को जोड़ दिया है।
      3:
        text: इस पहेली में, हम पहले ही आपके लिए वर्ग खींचें फंक्शन बना चुके हैं। आप
          इसे टूलबॉक्स में हरे ब्लॉक के रूप में देखेंगे। आपको बस वही कोड लिखने की
          जरूरत है, जो आपने पहले वर्ग खींचने के लिए लिखा था और इसे उसे फंक्शन में
          रखें। ऐसा करने के लिए, हरे वर्ग खींचें ब्लॉक में संपादित करें विकल्प पर
          क्लिक करें। यह फंक्शन संपादक को खोल देगा। फंक्शन संपादक के तीन भाग हैं।
          ऐसा स्थान, जहां आप अपने फंक्शन को नाम देते हैं। यह उस फंक्शन से पहले हरे
          ब्लॉक पर प्रकट होगा। फिर इस बारे में संक्षिप्त विवरण लिखें कि आपका फंक्शन
          क्या करने के लिए है।
      4:
        text: इस स्थिति में, यह वर्ग खींचने के लिए है। नीचे सफेद स्थान वर्क स्पेस
          है और यह बिल्कुल उस वर्क स्पेस की तरह काम करता है, जिसे आप पहले से ही उपयोग
          कर रहे हैं। टूल्बॉक्स में से ब्लॉक्स खींचें और इस वर्क स्पेस में छोड़ें।
          वे ब्लॉक्स रखना याद रखें, जो फंक्शन के लिए हरे आवरण ब्लॉक के अंदर वर्ग बनाते
          हैं। यह आपको वापस मुख्य पहेली वर्क स्पेस में ले जाएगा। अब आप पहेली हल करने
          के लिए वर्ग खींचें फंक्शन ब्लॉक को किसी भी दूसरे ब्लॉक की तरह उपयोग कर सकते
          हैं।
    C4_function_parameters:
      1:
        text: यह वह फंक्शन है, जो 50 पिक्सल भुजाओं वाला वर्ग खींचता है। बहुत बढ़िया
          लेकिन यदि मैं एक 50 पिक्सल भुजाओं वाला वर्ग और दूसरा 100 पिक्सल भुजाओं वाला
          वर्ग खींचना चाहूं तो क्या होगा? हमें दो अलग-अलग फंक्शन नहीं बनाने चाहिएं,
          जो लगभग एक ही काम करते हैं। इसकी बजाय, हम मापदंड वाले एक फंक्शन का उपयोग
          कर सकते हैं।
      2:
        text: मापदंड हमें उस फंक्शन में मूल्य पास करने देते हैं, जो फंक्शन के अंदर
          वेरिएबल्स के तौर पर उपयोग किया जाता है। आइए इस फंक्शन की तरह कहलाने वाला
          मापदंड जोड़ने का प्रयास करें ताकि हम अलग-अलग आकार के वर्ग बनाने के लिए इसका
          उपयोग कर सकें। फंक्शन संपादक में, आप पहले की तरह नाम और वर्णन संपादित कर
          सकते हैं लेकिन अब आप मापदंड भी जोड़ सकते हैं। स्थान में अपने मापदंड का नाम
          लिखें और मापदंड जोड़ें पर क्लिक करें। यह उस मापदंड के नाम वाला लाल ब्लॉक
          बनाएगा, जो आपने अभी बनाया है। अब हम मापदंड लंबाई के साथ 100 ब्लॉक तक आगे
          की ओर मूव करेंगे की बदली करेंगे इसलिए यह लंबाई तक आगे की ओर मूव करेगा।
      3:
        text: सुरक्षित करें व बंद करें पर क्लिक करें और टूलबॉक्स में फंक्शन्स श्रेणी
          से अपना नया वर्ग बनाएं ब्लॉक बाहर खींचें। आप देखेंगे कि लंबाई के साथ खाली
          स्थान है क्योंकि फंक्शन यह जानना चाहता है कि मापदंड लंबाई का मूल्य कितना
          होना चाहिए। गणित श्रेणी से संख्या ब्लॉक खींचें और इसे इस स्थान में रख दें।
          देखें कि आप विभिन्न आकार के वर्ग बनाने के लिए विभिन्न लंबाईयों के साथ बार-बार
          फंक्शन कैसे उपयोग कर सकते हैं? इसे खुद के लिए आजमाएं!
    C4_intro:
      1:
        text: आम तौर पर पूरी प्रोग्रामिंग टेक्सट में होती है लेकिन हम Blockly का उपयोग
          करेंगे, जो दृश्यात्मक ब्लॉक्स का उपयोग करता है, जिन्हें आप प्रोग्राम लिखने
          के लिए खींचते व छोड़ते हैं। हुड के नीचे, आप अभी भी कोड बना रहे हैं। शुरुआत
          करने के लिए, हम एक प्रोग्राम के लिए कोड बनाएंगे, जो इस एंग्री बर्ड को उन
          दुष्ट सूअरों के पास जाने के लिए भूलभुलैया में से मूव करने में मदद करेगा,
          जिन्होंने इसके अंडे चुरा लिए।
      2:
        text: Blockly को तीन भागों में बांटा गया है। बाईं ओर पक्षी का भूलभुलैया है,
          जहां आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश भूलभुलैया के नीचे
          लिखे जाते हैं। यह मध्य क्षेत्र टूलबॉक्स है और इन ब्लॉक्स में से प्रत्येक
          एक कमांड है, जिसे पक्षी समझ सकता है। दाईं ओर सफेद स्थान को वर्कस्पेस कहा
          जाता है और यहीं पर हम अपना प्रोग्राम बनाएंगे।
      3:
        text: यदि मैं हमारे वर्क स्पेस में मूव ब्लॉक को खींचूं और "चलाएं” को दबाऊं
          तो क्या होता है? पक्षी ग्रिड पर एक बॉक्स आगे की ओर मूव करता है। और यदि मैं
          पक्षी से इसके द्वारा एक बॉक्स आगे की ओर मूव करने के बाद कुछ करवाना चाहूं
          तो क्या होगा? मैं हमारे प्रोग्राम में दूसरा ब्लॉक जोड़ सकता हूं।
      4:
        text: मैं "दाएं मुड़ें" ब्लॉक का उपयोग करूंगा और इसे तब तक मेरे मूव करें ब्लॉक
          के नीचे खींचूंगा, जब तक कि पीला तीर प्रकट नहीं होता। फिर मैं इसे छोड़ दूंगा
          और दो ब्लॉक्स एक साथ जुड़ जाएंगे। जब मैं दुबारा "चलाएं" दबाऊंगा, तो पक्षी
          वे कमांड्स परफॉर्म करेगा, जो हमारे वर्क स्पेस में ऊपर से नीचे तक क्रमबद्ध
          ढेर हैं।
      5:
        text: यदि आप कभी भी किसी ब्लॉक को मिटाना चाहें, तो बस इसे ढेर से हटाकर ट्रैश
          कैन तक खींचें। जब चलाएं हिट कर लें, तो आप पक्षी को वापस शुरू से प्राप्त
          करने के लिए कभी भी पुनः सेट करें बटन हिट कर सकते हैं। अब आइए उन सूअरों को
          प्राप्त करें!
    C4_math_artist:
      1:
        text: यदि मैं 50 पिक्सल लंबा समकोण खींचना चाहूं और यह अपनी लंबाई से दो गुणा
          चौड़ा हो, तो मैं ऐसा करने के लिए कंप्यूटर को कैसे प्रोग्राम करूं? वैसे,
          मैं कलाकार को पचास तक ऊपर जाने, दाएं मुड़ने और फिर 100 तक जाने और दुबारा
          मूव करने को कह सकती हूं। लेकिन तब मैं कंप्यूटर के लिए गणित कर रही होती हूं।
      2:
        text: अपने दिमाग में पचास को दो से गुणा करना उतना कठिन नहीं होता लेकिन कंप्यूटर
          गणित करने में बहुत ही निपुण हैं इसलिए जब भी संभव हो, हमें इसे उन पर छोड़
          देना चाहिए। यदि मैंने इसकी बजाय केवल ऊंचाई नामक वेरिएबल का उपयोग किया होता,
          तो मैं आसानी से ऊंचाई को पचास तक बदल सकती थी और फिर कलाकार को उस ऊंचाई तक
          जाने, दाएं मुड़ने और फिर दो बाहर ऊंचाई तक जाने के लिए कहने हेतु अपनी कलन
          विधि को बदल सकती थी, जो हमें वह समकोण देता है, जो इसकी लंबाई से दो गुणा
          चौड़ा होता है।
    C4_unplugged_algorithms:
      1:
        text: यह पाठ टैन्ग्राम कलन विधियां कहा जाता है। टैन्ग्राम सात भागों वाली पहेली
          होती है, जिसे अन्य आकृतियां बनाने के लिए साथ में जोड़ा जा सकता है। आप अपने
          पार्टनर को यह समझाने के लिए कलन विधि का उपयोग करेंगे कि पहेली को एक साथ
          कैसे जोड़ना है।
      2:
        text: कलन विधि उन स्टेप्स की सूची होती है, जो आप कार्य को पूरा करने के लिए
          लेते हैं। हम उन्हें रोजमर्रा की चीज़ों में उपयोग करते हैं, जैसे खरीदारी
          सूचियां और व्यंजन विधियां। यदि आप कलन विधि को सरल रखते हैं, तो इसकी व्याख्या
          करने के बहुत-से तरीके हैं और जो भी उस कलन विधि को परफॉर्म करता है, हो सकता
          है सही ढंग से वह प्राप्त न हो, जो आप चाहते थे। यदि आप यह सुनिश्चित करना
          चाहते हैं कि हर कोई बिल्कुल एक जैसी चीज़ के साथ समाप्त करे, तो आपकी कलन
          विधि विस्तृत और बहुत ही विशिष्ट होनी चाहिए।
      3:
        text: मैं एक पेंटिंग पूरी करने के लिए आज कलन विधि का उपयोग कर रही हूं। मैं
          कुछ वृक की पेंटिंग बनाने में हाथ आजमाना चाहती थी लेकिन मैं ज्यादा अच्छी
          पेंटर नहीं हूं। सौभाग्यवश मेरे जैसे लोगों के लिए, संख्याओं द्वारा पेंट है।
          चालीस रंग मौजूद हैं और इसमें छोटे-छोटे अक्षर और संख्याएं हैं, जो आपको बताते
          हैं कि प्रत्येक भाग में कौन-सा रंग पेंट करना है। संख्याओं द्वारा पेंट मुझे
          बताता है कि सही ढंग से कौन-सा रंग, कहां उपयोग करना है।
      4:
        text: यह बहुत ही विशिष्ट है इसलिए मैं निर्देशों का अनुसरण कर सकती हूं और पेटिंग
          बहुत ही बढ़िया बनेगी। यह बहुत बढ़िया कलन विधि है। यदि निर्देश इतने विशिष्ट
          नहीं होते, तो मेरे वृक इतने अच्छे दिखाई नहीं देते। जब आप वास्तव में अपनी
          योजना के मुताबिक परिणाम चाहते हैं, तो बेहद सटीक रहना बेहतर है।
    C4_unplugged_binary:
      1:
        text: प्रत्येक टीम, जो व्यक्ति निर्देश दे रहा है, वह वो व्यक्ति है, जिसने
          कागज़ पकड़ा हुआ है, यह पता लगाना होगा कि उनका ऑफ चिन्ह क्या करेगा और उनका
          ऑन चिन्ह क्या करेगा। युग्मक में, यह दो अक्षरों वाली वर्णमाला जैसा है। जैसे
          A और B होना, आपकी संपूर्ण वर्णमाला होगी, लेकिन आपने एक 0 और एक 1 प्राप्त
          किया है।
      2:
        text: आप युग्मक का सबसे अधिक उपयोग इफ स्टेटमेंट में करते हैं। यह प्रोग्रामिंग
          की क्लासिक चीज़ है। प्रोग्राम चलता है और यह कहता है यदि कुछ सही है, तो इसे
          करें। या यदि यह सही नहीं है और आप कुछ और करें। तब क्या होगा, यदि आप जो करना
          चाहते हैं, वह थोड़ा और जटिल हो। इफ स्टेटमेंट की बजाय, आप कंप्यूटर में किसी
          चित्र या ध्वनि जैसी किसी चीज़ के साथ काम करना चाहते हैं।
      3:
        text: 'कंप्यूटर को केवल युग्मक के बारे में पता है, लेकिन एक चित्र, यह युग्मक
          नहीं है, यह इकाईयां या शून्य नहीं है, तो आप इसे कैसे करेंगे? यहां एक उदाहरण
          दिया गया है: आपके पास यह सुंदर तस्वीर है। अब एक तस्वीर मूल रूप से जानकारी
          का रूप है। पूरी जानकारी का एक या दूसरे तरीके से युग्मक में कूटलेखन किया
          जाता है, आपको बस यह पता लगाना है कि इसे कैसे करना है।'
      4:
        text: आप कल्पना करें कि हम इस पांडा भालू पर एक ग्रिड रखने वाले हैं और प्रत्येक
          वर्ग के लिए, हम यह निर्णय लेने वाले हैं कि वह वर्ग अधिक काला या अधिक सफेद
          है। और फिर हम इसे उस तरीके से रंग देने वाले हैं। अब ग्रिड पर प्रत्येक सेल
          या तो काला है या सफेद और फिर काले वर्ग, हम मान लें कि जो शून्य हैं (युग्मक
          अंक) और सफेद वर्ग इकाईयां हैं, अन्य युग्मक अंक। अंत में, आपने हमारे लिए
          केवल कुछ इकाईयां और शून्य छोड़े हैं। इस प्रकार से आप युग्मक में यह चित्र
          प्रदर्शित करते हैं।
    C4_unplugged_forloops:
      1:
        text: इस पाठ को फॉर लूप फन कहा जाता है। इस पाठ में, हम डाइस गेम खेलने के लिए
          नंबर लाइन का उपयोग करेंगे। प्रत्येक खिलाड़ी शुरुआती मूल्य, रुकने के मूल्य,
          और हमारा अंतराल असाइन करने के लिए तीन बार रोल करेगा। प्रत्येक बारी के दौरान,
          हम अपने शुरुआती मूल्य पर चक्कर लगाएंगे, और प्रत्येक मूल्य, जिसके हमारे अंतराल
          मूल्य के समान ही आगे की ओर के कदमों का एक ही नंबर है। हम चक्कर लगाना छोड़
          देंगे, जब हम अपना रुकने का मूल्य प्राप्त करेगें। सबसे अधिक स्कोर वाला व्यक्ति
          जीतता है!
      2:
        text: फॉर लूप्स कई स्थानों पर उपयोगी हो सकती हैं और यदि आपको मौसमविज्ञानी
          बनना होता, तो आप हमेशा फॉर लूप्स का उपयोग करते। नमस्कार, मैं बेकी (Becky)
          हूं। मैं EverPower Renewables में वायु मौसमविज्ञानी के तौर पर काम करता हूं।
          मैं Columbia River Gorge क्षेत्र के लिए वायु की गति का पूर्वानुमान लगाता
          हूं, जहां कंपनी के वायु फार्म हैं।
      3:
        text: हम यह समझने का प्रयास कर रहे हैं कि वहां कितनी वायु होगी ताकि हम जान
          सकें कि कितनी पावर आउटपुट होने वाली है। हम वह जानकारी असल समय में ऊर्जा
          व्यापारियों को देते हैं। हम यह सुनिश्चित करने के लिए कि पावर ग्रिड संतुलित
          है, आपकी लाइटें जलती रहें, और यह कि हम ऊर्जा की मात्रा को अधिकतम करते हैं,
          जो हम अपने फार्मों से प्राप्त करते हैं, उन्हें बताते हैं कि वहां कितनी पावर
          होगी, वे इस आधार पर पावर खरीदते व बेचते हैं।
      4:
        text: हम यहां पोर्टलैंड (Portland) में EverPower Renewables के लिए राष्ट्रीय
          नियंत्रण केंद्र हैं और यह वही स्थान है, जहां हमारे पास पूरे देश के हमारे
          सभी फार्मों से जानकारी आती है। यहां तक कि आज उच्चतम पावर के कंप्यूटर कहीं
          भी वातावरण का अनुकरण कर सकते हैं। कंप्यूटर के पूर्वानुमान मॉडलों में, हमारे
          पास ग्रिड होता है। प्रत्येक ग्रिड बिंदु एक अक्षांश, देशांतर रेखा है। हमें
          भौतिकी की गणना करनी होती है और वायु की गति, तापमान, दाब आदि का पता लगाना
          होता है।
      5:
        text: चूंकि ये काफी बड़े ग्रिड हैं और हम इसे बहुत-से बिंदुओं में करते हैं,
          हम इन चीज़ों को लाखों बार लूप कर रहे होते हैं। मैं जो कुछ भी करता हूं, उसमें
          फॉर लूप्स का उपयोग करूंगा। यहां फॉर लूप का उदाहरण है। जब आप वायु का पू्र्वानुमान
          लगाते हैं, तो कई विभिन्न मापदंड होते हैं, जो इसके अंदर जाते हैं, मनुष्य
          के लिए बैठकर वे सभी गणनाएं करना असंभव है। वायु के साथ जो होने वाला है, उसे
          जो प्रभावित करने वाला है, उसके बहुत-से अलग-अलग पहलू हैं, जिसके लिए हमें
          इसका पूर्वानुमान करने के लिए कंप्यूटर मॉडल की जरूरत होगी।
    C4_unplugged_madlibs:
      1:
        text: इस पाठ में, हम कुछ खाली स्थान भरने की कहानियों के साथ खेलेंगे। आपके
          पास एक टेम्प्लेट है, जिसे आप समान कहानियों को तैयार करने के लिए भर सकते
          हैं, जिनके बहुत ही दिलचस्प अंतर हैं।
      2:
        text: इस पाठ में, हमने यह भी सीखा है कि दो कहानियों से पृथक टेम्प्लेट कैसे
          बनाएं, जो पहले ही बनाया गया है। पृथक्करण अंतर और विवरण दूर करने की कला है
          ताकि आप देख पाएं कि कैसे एक समाधान कई अलग-अलग समस्याओं के लिए काम कर सकता
          है। कंप्यूटर साइंस में यह बहुत उपयोगी है क्योंकि यह हमें ऐसे फंक्शन्स बनाने
          की अनुमति देता है, जो कई अलग-अलग स्थितियों में उपयोगी हो सकते हैं।
    C4_unplugged_parameters:
      1:
        text: इस पाठ को मापदंडों के साथ गीत लेखन कहा जाता है। हम यहां कुछ गीत लिखने
          वाले हैं। कभी-कभार जब हर बार आप गाते हैं, तो कोरस थोड़ा अलग हो जाता है।
          क्या आपको Old Macdonald Had a Farm याद है? इसमें प्रत्येक जानवर के लिए कोरस
          थोड़ा अलग है। और उस फार्म में, हमारे पास गाय, e-i-e-i-o थी। प्रत्येक कोरस
          में छोटे-से बदलाव को चीज़ का उपयोग करते हुए दिखाया जा सकता है, जिसे हम मापदंड
          कहते हैं।
      2:
        text: कभी-कभार फंक्शन के लिए मापदंड की जरूरत होती है। मापदंड, जानकारी का अतिरिक्त
          भाग है, जिसे आप विशेष जरूरत के लिए अनुकूलित करने के लिए फंक्शन में भेज सकते
          हैं। जब आप अपने दोस्तों के साथ आइसक्रीम संडेज बनाते हैं, तो आप कंप्यूटर
          प्रोग्राम में मौजूद मापदंडों के समान प्रक्रिया का उपयोग कर रहे होते हैं।
      3:
        text: वनीला आइसक्रीम की डिस्क प्रत्येक संडे आइसक्रीम के लिए एक जैसी हो सकती
          है लेकिन जब आप अपने दोस्तों को पूछते हैं कि वे कौन-सी दो टॉपिंग्स पसंद करेंगे,
          तो आप बहुत-से अलग-अलग संयोजन प्राप्त कर सकते हैं। टॉपिंग फंक्शन नाम है लेकिन
          टॉपिंग का प्रत्येक प्रकार एक मापदंड है। फंक्शन और मापदंड अच्छे कंप्यूटर
          प्रोग्राम बनाने और अच्छी संडेज बनाने के लिए भी एक साथ काम करते हैं।
    C4_unplugged_variables:
      1:
        text: इस पाठ को एन्वलोप्स में वेरिएबल्स कहा जाता है। हम यह सीखेंगे कि जब हम
          हमारी जानकारी के कुछ भाग लुप्त हों तो हम वाक्य कैसे बना सकते हैं। हम में
          से अधिकतर पहले से ही खाली स्थान भरने की योजना से परिचित हैं। हम इसे तब करते
          हैं, जब हम अपने होमवर्क में अपना नाम डालते हैं। कभी-कभार एक शब्द से ज्यादा
          भरने की जरूरत होती है और उस स्थिति में, हम उस खाली स्थान को लेबल देते हैं
          ताकि हम जान पाएं कि वहां कौन-सी जानकारी दी जानी है।
      2:
        text: वेरिएबल्स जानकारी के भागों के प्लेसहोल्डर हैं, जो बदल सकते हैं। लुप्त
          जानकारी के लिए वेरिएबल का उपयोग करके, हम जो कर रहे ते, उस पर काम करना जारी
          रख सकते हैं और किसी और को बाद में लुप्त जानकारी भरने दे सकते हैं। सॉफ्टवेयर
          में, हम वेरिएबल्स काफी उपयोग करते हैं। हम नाम, ईमेल पते, और यहां तक कि उपयोगकर्ता
          नाम के लिए भी प्लेसहोल्डरों के तौर पर वेरिएबल्स का उपयोग करते हैं। उस प्रकार
          से हम प्रोग्राम को बता सकते हैं कि उपयोगकर्ता द्वारा उन्हें भरने के बाद
          वे विवरण कहां प्रकट होंगे। हम अपने काम में पूरा समय वेरिएबल्स का उपयोग करते
          हैं।
      3:
        text: जब भी आपको बाद के लिए जानकारी के भाग को स्टोर करने की आवश्यकता होती
          है, हम वेरिएबल का उपयोग करते हैं। मान लें कि हमें गिनना है कि उपयोगकर्ता
          ने कितनी बार ट्वीट किया। हर बार जब उपयोगकर्ता ट्वीट करता है, तो हम उस संख्या
          में एक जोड़ देंगे और हर बार जब उपयोगकर्ता ट्वीट को मिटाता है, तो हम उस संख्या
          में से एक कम कर देंगे। जब भी हमें यह जानना हो कि उस उपयोगकर्ता ने कितनी
          बार ट्वीट किया है, तो हम बस उस वेरिएबल को देख लेंगे।
    C4_variables_artist:
      1:
        text: वेरिएबल एक कंटेनर होता है, जिसमें आप मूल्य स्टोर कर सकते हैं। जब आप
          कलन विधि में उस वेरिएबल का उपयोग करते हैं, तो यह कंटेनर खोलता है और अंदर
          के मूल्य को देखता है। इससे आप अधिक चुस्त कलन विधियां लिख सकते हैं, जो वेरिएबल
          में स्टोर किए गए मूल्य के आधार पर अलग तरह से व्यवहार करती हैं।
      2:
        text: उदाहरण के लिए, यदि आप, मेरे छोटे भाई को हैप्पी बर्थडे, तुम 10 साल के
          हो गए हो! कहने के लिए कलन विधि लिखना चाहते को यह इस समय ठीक है लेकिन जब
          मैं इसे अगले साल चलाऊंगा, तो मैं यह कहना चाहूंगा, हैप्पी बर्थडे, तुम 11
          साल के हो गए हो!, तो मैं अपने भाई की आयु को स्टोर करने के लिए आयु नामक वेरिएबल
          बना सकता हूं और इसकी बजाय यह कहने के लिए अपनी कलन विधि बना सकता हूं, हैप्पी
          बर्थडे, तुम 'आयु’ साल के हो गए हो। चूंकि वेरिएबल बदल सकती है, प्रत्येक वर्ष
          मैं वेरिएबल 'आयु’ को 'आयु’ जोड़ 1 के बराबर अद्यतन कर सकता हूं।
      3:
        text: इस पहेली में, हम ऐसी वेरिएबल का उपयोग करने वाले हैं, जो हमारे कलाकार
          द्वारा खींची लाइन की लंबाई सेट करेगा। बाद में हमारे कोड में, आगे की ओर मूव
          करें ब्लॉक यह देखने के लिए उस लंबाई वेरिएबल को देखेगा, जिस मूल्य पर इसे
          आपने सेट किया है।
    C4_variables_playlab:
      1:
        text: वेरिएबल एक कंटेनर होता है, जिसमें आप मूल्य स्टोर कर सकते हैं। जब आप
          कलन विधि में उस वेरिएबल का उपयोग करते हैं, तो यह कंटेनर खोलता है और अंदर
          के मूल्य को देखता है। इससे आप अधिक चुस्त कलन विधियां लिख सकते हैं, जो वेरिएबल
          में स्टोर किए गए मूल्य के आधार पर अलग तरह से व्यवहार करती हैं।
      2:
        text: अब आप प्लेलैब को आजमाने वाले हैं, जहां आपको विभिन्न गेम्स दी गई हैं
          और आप गेम को बदलने के लिए गति, ऊंचाई, स्कोर जैसी वेरिएबल्स के मूल्यों को
          बदल सकते हैं। आपके इसके खेलने के तरीके को बदलने के लिए गेम की कलन विधि नहीं,
          केवल वेरिएबल बदलनी होगी।
      3:
        text: Kindle के लिए मेरे काम में और पुस्तकों के लिए एक्स-रे पर, हम कई अलग-अलग
          तरीकों में वेरिएबल्स लागू करते हैं। एक तरीका यह है कि आप पुस्तक के पृष्ठ
          नंबरों को स्टोर करने के लिए वेरिएबल का उपयोग कर सकते हैं। उपयोगकर्ता पृष्ठ
          पर फोंट का आकार बढ़ा या घटा सकता है। फोंट आकार के आधार पर, पुस्तक में पृष्ठों
          की संख्या बदल सकती है। हम वेरिएबल में पृष्ठों की संख्या स्टोर करके इसे समायोजित
          कर सकते हैं।
    infinity_playlab_events:
      1:
        text: अब हम कुछ ऐसी चीज़ के बारे में सीखने वाले हैं, जिसे सभी गेम प्रोग्रामर
          रोज़ाना उपयोग करते हैं। उन्हें इवेंट्स कहा जाता है। इवेंट आपके प्रोग्राम
          को बताती है कि जब कुछ घटित होता है तो वह उसे सुने। और फिर जब यह सुनता है,
          तो यह क्रिया परफॉर्म करता है। इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, तीर
          वाले बटन या स्क्रीन पर टैप करने को सुनना।
      2:
        text: यहां, हम बेमैक्स को हिरो को छूने तक ऊपर मूव करेंगे और रुपेनज़ेल को छूने
          के लिए नीचे मूव करेंगे, जब खिलाड़ी ऊपर/नीचे के तीर वाली कुंजियां या ऊपर/नीचे
          के बटनों का उपयोग करता है। हम जब ऊपर तीर ब्लॉक का उपयोग करेंगे और इसमें
          अभिनेता को ऊपर मूव करें ब्लॉक जोड़ेंगे, तो जब खिलाड़ी ऊपर के तीर वाली कुंजी
          दबाता है, तो "जब ऊपर का तीर” ब्लॉक से जुड़ी हर चीज़ चलती है। हम बेमैक्स
          को नीचे मूव करने के लिए भी यही सब करेंगे। कदम दर कदम आपकी गेम और संवादात्मक
          होती जा रही है।
    infinity_playlab_intro:
      1:
        text: तो आप किस ग्रेड में हैं? दूसरा। दसवां ग्रेड। पहला ग्रेड। मैं आठवें ग्रेड
          में था, जब मैंने प्रोग्राम करना सीखा था। मुझे अपना पहला कंप्यूटर तब मिला
          था, जब मैं छठे ग्रेड में था। मुझे सबसे अधिक रोमांचक लगता है, लोगों की समस्याएं
          सुलझाने में सक्षम होना। आप खुद के बारे में व्यक्त कर सकते हैं, आप किसी युक्ति
          से चीज़ें बना सकते हैं।
      2:
        text: कंप्यूटर साइंस ऐसी बहुत-सी चीज़ों के लिए आधार है, जिसे कॉलेज के छात्र
          व पेशेवर अगले बीस या तीस वर्षों तक करेंगे। मुझे प्रोग्रामिंग पसंद है क्योंकि
          मुझे लोगों की मदद करना पसंद है। मुझे कुछ ऐसा बनाने का मौका मिलता है, जो
          लोगों की ज़िंदगियों का आसान बनाता है। मुझे लगता है कि यह हमारे पास सुपरपावर
          होने जैसा है। शुरुआत करना सबसे महत्वपूर्ण भाग है। मैं खुद नौसिखिया हूं और
          मैं चाहता हूं कि आप मेरे साथ सीखें।
      3:
        text: मैं जॉन वेची (John Vechey) हूं, मैं PopCap Games के सह-संस्थापकों में
          से एक हूं। हम Plants वर्सेज Zombies, Bejeweled, और Peggle जैसी गेम्स बनाते
          हैं। गेम्स इस बारे में नहीं हैं कि आपका कोड कितना सही है, यह इस बारे में
          भी नहीं हैं कि आपकी कला कितनी अच्छी है, यह इस बारे में है कि आप इसे कैसे
          महसूस करते हैं और यह कितनी मज़ेदार हैं। आप केवल इसे आजमा कर, इसे करके, सीखकर,
          ग्रहण करके और गेम्स बनाने के लिए अपने खुद के कौशलों की पुनरावृत्ति करके
          यह अनुभूति पा सकते हैं।
      4:
        text: क्या आपके पास पसंदीदा वीडियो गेम है? तो, हम प्ले लैब का उपयोग करते हुए
          उसी तरह से गेम्स बनने के प्रति पहला कदम उठाने वाले हैं। अच्छी गेम्स की कोई
          कहानी होती है और प्रत्येक कहानी के अभिनेता होते हैं। अभिनेता बोलने, मूव
          करने और एक-दूसरे से संवाद करने जैसी चीज़ें करते हैं। हो सकता है, गेम के
          नियमों के आधार पर वे अंक भी हासिल करें। आज, हम यह सीखेंगे कि ये सारी चीज़ें
          कैसे करनी हैं, एक के बाद एक, ऐना, एल्सा, हिरो, बेमैक्स और रुपेन्ज़ेल जैसे
          डिज़्नी के पात्रों के साथ। हम शुरू से गेम बनाएंगे, जिसे फोन पर साझा किया
          और खेला जा सकता है।
      5:
        text: आपकी स्क्रीन को तीन मुख्य भागों में बांटा गया है। बाईं ओर गेमस्पेस है,
          जहां आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश नीचे लिखे जाते हैं।
          यह मध्य क्षेत्र टूलबॉक्स है और इन ब्लॉक्स में से प्रत्येक कोड का भाग। दाईं
          ओर सफेद स्थान को वर्कस्पेस कहा जाता है और यहीं पर हम अपना प्रोग्राम बनाएंगे।
      6:
        text: शुरुआत करने के लिए, आपको अपने ब्लॉक्स को संतरी "जब चलाया जाए" ब्लॉक
          से जोड़ने की जरूरत होगी। आप कई ब्लॉक्स को बाहर खींचकर उन्हें साथ में जोड़
          सकते हैं, जब तक कि आप पीली आउटलाइन न देख लें और फिर वे एक साथ जुड़ जाएंगे।
          इस पहली पहेली में, हिरो अभिनेता 1 और बेमैक्स अभिनेता 2 है। हमें "दाएं मूव
          करें" ब्लॉक को खींचकर और इसे "जब चलाया जाए" ब्लॉक से जोड़कर हिरो को बेमैक्स
          के पास मूव करने की जरूरत है। जब आपके सारे ब्लॉक्स स्थापित हो जाएं, तो यह
          देखने के लिए "चलाएं" बटन को हिट करें कि आपने क्या प्रोग्राम किया है।
      7:
        text: शुरुआत करें और अंत तक, आप इन मज़ेदार अभिनेताओं के साथ अपनी खुद की गेम
          बनाने में सक्षम हो जाएंगे, जो संवाद कर सकते हैं, अंक हासिल कर सकते हैं,
          माइक्रोबोट्स, चैरीज, सॉसपैन, स्पार्क्ल्स और बर्फ फेंक सकते हैं.. और एक-दूसरे
          को गायब कर सकते हैं। यह सब आप पर निर्भर है!
    infinity_playlab_repeat_forever:
      1:
        text: क्या आप सोच सकते हैं कि अगर आपको किसी चीज़ को हमेशा और कभी दोहराना पड़ता
          तो? आशापूर्वक आपको कभी ऐसा नहीं करना पड़ेगा क्योंकि कंप्यूटर चीज़ें दोहराने
          में बहुत ही निपुण हैं। यह हमेशा दोहराएं ब्लॉक है। इसके अंदर की कोई भी चीज़
          गेम में हमेशा होगी।
      2:
        text: तो यदि हम खिलाड़ी द्वारा बिना कुछ किए किसी अभिनेता से बार-बार कुछ करवाना
          चाहें, तो हम उन ब्लॉक्स को हमेशा दोहराएं ब्लॉक के अंदर रखेंगे। इस अगली पहेली
          में, हमारा लक्ष्य लगातार ऊपर और नीचे चलने में ऐना की मदद करना है। दोहराएं
          कमांड्स कैसे काम करती हैं, यह सीखने से बाद में जब आप अपनी खुद की गेम बनाएंगे
          तो आपका बहुत-सा समय बचेगा।
    tutorial_puzzle_challenge:
      1:
        text: ओलिविया बड़ी होकर आप क्या बनना चाहती हो? अंतरिक्ष यात्री। क्या आपने
          कभी जाना कि कंप्यूटर प्रोग्रामर क्या होता है? हां, ऊं नहीं। ऊं, रुकिए, क्या?
          मैं निश्चित नहीं हूं कि इसे कैसे स्पष्ट किया जाए कि कंप्यूटर प्रोग्रामिंग
          काफी आसान है। यह किसी व्यंजन विधि की तरह निर्देशों का सेट है, जिनका आपको
          मनचाहा परिणाम प्राप्त करने के लिए कदम-दर-कदम अनुसरण करना होगा।
      2:
        text: मैं इस ड्रॉपडाउन का उपयोग करते हुए, पिक्सल्स की संख्या, लाइन की लंबाई
          बदल सकता हूं। यह दुबारा कितनी लंबी थी? आप चलाएं बटन के नीचे देखकर दुबारा
          निर्देश देख सकते हैं। यहां मैंने आगे की ओर मूव करें ब्लॉक का उपयोग किया
          है और मैं 100 पिक्सल्स चुनने वाला हूं। मैं किसी ब्लॉक को टूलबॉक्स में या
          ट्रैश कैन में खींचकर इसे मिटा सकता हूं। आइए इसे दुबारा वापस रखें।
      3:
        text: चलाएं दबाकर कोड चलाएं। खैर, यह नहीं हुआ! मैं पुनः सेट करें को दबाऊंगा
          और पता लगाऊंगा कि क्या गलत है। आप जितनी बार चाहें पहेली को आजमा सकते हैं
          और पहेलियों को छोड़ सकते हैं और वापस उन पर आ सकते हैं। बस अधिक से अधिक देने
          का प्रयास करना और हार न मानना सुनिश्चित करें। आइए दूसरा आगे की ओर मूव करें,
          जोड़ें। यह अभी भी नहीं हुआ। मैं अन्य ब्लॉक्स के बीच ब्लॉक रख सकता हूं।
      4:
        text: आइए मुड़ें ब्लॉक लें और इसे आगे की ओर मूव करें के बीच रखें। 45 डिग्री
          बाएं मुड़ें। आइए इसे दुबारा चलाएं। पुनः सेट करें, चलाएं, बहुत बढ़िया! दूसरी
          पहेली है। कभी-कभार आपको पूरा करने के लिए शुरुआती कोड दिया जाता है। यहां
          मुझे उपयुक्त लंबाईयां और डिग्रियां जोड़ने की जरूरत है।
      5:
        text: कभी-कभी आप गलती से शुरुआती कोड को ट्रैश में डाल देते हैं। तब आप क्या
          करते हैं? आप पहेली साफ करें को दबा सकते है और सब कुछ दुबारा शुरू कर सकते
          हैं। मैं इस नंबर ब्लॉक को विभिन्न पिक्सल क्षेत्रों मे खींचूंगा। पिक्सल्स
          के लिए 100, डिग्रियों के लिए 45 और फिर से पिक्सल्स के लिए 100 चुनें। वाह!
          यह कोड स्टूडियो मधुमक्खी है। मुझे मधुमक्खी को प्रत्येक फूल के पास मूव करने
          और मधुरस प्राप्त करने की जरूरत है।
      6:
        text: पहला फूल तीन ब्लॉक्स दूर है इसलिए मुझे तीन आगे की ओर मूव करें ब्लॉक्स
          की जरूरत है। 1, 2, 3. फिर मधुरस प्राप्त करें, फिर दूसरा मधुरस प्राप्त करें।
          यह नहीं हुआ! मैं मधुरस प्राप्त करें के बीच दूसरा आगे की ओर मूव करें रखूंगा
          और इसे दुबारा चलाऊंगा। वाह, यह हो गया! अभी आपने सीखा कि कोड स्टूडियो कलाकार
          और मधुमक्खी वाली पहेलियों का उपयोग कैसे करना है। कोड स्टूडियो पहेली चुनौती
          के लिए शुभकामनाएं।
    unplug1:
      1:
        text: ओलिविया बड़ी होकर आप क्या बनना चाहती हो? ऊं, अंतरिक्ष यात्री। क्या आपने
          कभी जाना कि कंप्यूटर प्रोग्रामर क्या होता है? हां, ऊं नहीं। ऊं, क्या, क्या?
          मैं निश्चित नहीं हूं कि इसे कैसे स्पष्ट किया जाए। कंप्यूटर प्रोग्रामिंग
          काफी आसान है। यह किसी व्यंजन विधि की तरह निर्देशों का सेट है। आपको मनचाहा
          परिणाम प्राप्त करने के लिए कदम-दर-कदम उनका अनुसरण करना होगा।
      2:
        text: कंप्यूटर साइंस दुनिया को प्रभावित करने का तरीका है। यह म्यूजिक वीडियो
          हो सकते हैं, यह गेम्स हो सकती हैं, यह पता लगाएं कि कोई व्यक्ति, किसी और
          व्यक्ति से संबंधित है या नहीं। अपने जानकार लोगों को, लोगों के दोस्तों को
          ढूंढें। आप हर प्रकार की उत्साहपूर्ण चीज़ें कर सकते हैं, जो वास्तव में ज़िंदगियां
          बचाती हैं। मेरे ख्याल से बस आपको एक ड्राइव की जरूरत होगी। मेरे लिए यह पेंटब्रश
          के समान ही है। मुझे लगता है कि अच्छी प्रोग्रामिंग वह नहीं होती, जो अच्छी
          कला से मेल न खाती हो।
      3:
        text: जब मैंने थोड़ी-सी प्रोग्रामिंग सीखी, तो उस खाली दीवार को कुछ दरवाजों
          में बांटा और आप उन्हें खोल सकते हैं और निस्संदेह उसके बाद आप उसके पीछे कुछ
          दरवाजों से भरा दूसरा गलियारा पाएंगे। प्रोग्रामिंग मज़ेदार और आसान है। आप
          कुछ भी कर सकते हैं, जो आपका दिमाग करना चाहता है। अंत में आप दरवाजे खोलना
          शुरू करते हैं, रोशनी अंदर आती है। मेरे लिए पूरा हुआ प्रोग्राम रोशनी से भरे
          ढांचे की तरह है। सभी कोने चमक रहे हैं। दुनिया ने पहले कभी इतने लोगों को
          नहीं देखा होगा, जिन्हें आप छू सकते हैं और जिनसे संवाद कर सकते हैं।
      4:
        text: इस श्रृंखला में हमारा पहला पाठ इस बारे में है कि कंप्यूटर साइंस क्या
          है, कंप्यूटर वैज्ञानिक क्या करता है और आप प्रौद्योगिकी के अपने उपयोग में
          और जिम्मेदार कैसे बन सकते हैं। यह बहुत ही महत्वपूर्ण पाठ है लेकिन इसमें
          थोड़ा टेक्सट अधिक है। अंत में, आप अपने आद्याक्षरों का उपयोग करते हुए अपनी
          बिल्कुल खुद की अनुकूलित एन्कोडिंग बना सकेंगे। यह मज़ेदार गतिविधि है और यह
          बहुत ही समर्थ है क्योंकि युग्मक उन चीज़ों में से एक है, जो बहुत ही तकनीकी
          लगती हैं लेकिन जब आप इसे समझ लेते हैं, तो यह बिल्कुल ऐसी होती है, जैसे आप
          कोई गोपनीय भाषा बोलते हैं।
    unplug2:
      1:
        text: अभिकलनात्मक चिंतन पर पाठ आपको यह सिखाने के लिए है कि बड़ी व मुश्किल
          समस्या को कैसे लेना है और उसे कई अधिक आसान समस्याओं में कैसे विभाजित करना
          है। इस पाठ का लक्ष्य ऐसे निर्देशों का सेट लिखना है, व्यक्ति पाठ योजना में
          शामिल दैत्यों में से एक को चित्रित करने के लिए जिनका अनुसरण कर सकता है।
      2:
        text: 'निर्देश लिखने के लिए छात्रों को समूहों में बांटा जाएगा और फिर वे दूसरे
          समूह के साथ उनकी अदला-बदली करेंगे, जिसे दैत्य को चित्रित करना होगा। समूह
          अभिकलनात्मक चिंतन के चार स्टेप्स का उपयोग करते हुए निर्देश लिखेंगे: विश्लेषण,
          पैटर्न स्थान, पृथक्करण और कलन विधियां।'
      3:
        text: पहले समूह कार्य का विश्लेषण करेंगे, जिसका मतलब है, गेम योजना बनाना।
          फिर वे सूची में सभी दैत्यों के बीच पैटर्न खोजेंदे। जब वे दैत्यों के बीच
          के अंतर पता लगा लेंगे, तो वे उन विवरणों को अलग करेंगे या हटाएंगे। उदाहरण
          के लिए, सूची में एक दैत्य की वेगिटास आंखें हैं और दूसरे की स्प्रिटेम आंखें
          हैं। लेकिन उन दोनों की आंखें हैं, इसलिए हम एक लाइन लिख सकते हैं, जो कहती
          हो कि दैत्य की खाली आंखें हैं।
      4:
        text: तो छात्र कलन विधि नामक, निर्देशों का सेट लिखने में सक्षम होंगे, जो दैत्यों
          के अंगों को खाली स्थानों में सूचीबद्ध करेगा, जिनके लिए शैलियां होंगी। यह
          निर्देशों का सेट है, जो वे अपने खुद के दैत्य को दुबारा बनाने के लिए अन्य
          छात्रों को देंगे।
    unplug3:
      1:
        text: ग्राफ पेपर प्रोग्रामिंग में, हम यह स्पष्ट करने में मदद करते हैं कि केवल
          तीरों और घसीटों का उपयोग करते हुए ड्राइंग दुबारा बनाने में लोगों की मदद
          करने का प्रयास करते हुए कोडिंग कैसे काम करती है। एक व्यक्ति को ग्राफ पेपर
          पर छोटी ड्राइंग दी जाती है और उन्हें केवल विशिष्ट तीरों का उपयोग करते हुए
          इसे पूरा करने और यह वर्णन करने की जरूरत होती है कि उस ड्राइंग को दुबारा
          कैसे बनाना है।
      2:
        text: 'इस गतिविधि में, जिन चिन्हों का आप उपयोग करते हैं, वो ये हैं: एक वर्ग
          आगे की ओर मूव करें, एक वर्ग पीछे की ओर मूव करें, एक वर्ग ऊपर की ओर मूव करें,
          एक वर्ग नीचे की ओर मूव करें। अगले रंग में बदलें, और अपने वर्ग में रंग भरें।
          जब आपने उसे कोड दे दिया हो, तो आप इसे दूसरे व्यक्ति को दे सकते हैं, जो कोड
          को पढ़कर और तस्वीर दुबारा बनाने का प्रयास कर सकता है।'
    unplug4:
      1:
        text: ग्राफ पेपर प्रोग्रामिंग में, हम यह स्पष्ट करने में मदद करते हैं कि केवल
          तीरों और घसीटों का उपयोग करते हुए ड्राइंग दुबारा बनाने में लोगों की मदद
          करने का प्रयास करते हुए कोडिंग कैसे काम करती है। एक व्यक्ति को ग्राफ पेपर
          पर छोटी ड्राइंग दी जाती है और उन्हें केवल विशिष्ट तीरों का उपयोग करते हुए
          इसे पूरा करने और यह वर्णन करने की जरूरत होती है कि उस ड्राइंग को दुबारा
          कैसे बनाना है।
      2:
        text: गतिविधि के दूसरे आधे भाग में, हम छात्रों से पूछते हैं कि वे सोलह पहचानने
          योग्य समकोण बनाने के लिए कितने अलग-अलग तरीकों से कागज़ को मोड़ सकते हैं।
          फिर आप इस पर विचार विमर्श करेंगे कि कितने समाधानों से वही अंतिम परिणाम आ
          सकता है और कुछ समाधान, कुछ स्थितियों में बेहतर क्यों होते हैं।
    unplug5:
      1:
        text: ग्राफ पेपर प्रोग्रामिंग में, हम यह स्पष्ट करने में मदद करते हैं कि केवल
          तीरों और घसीटों का उपयोग करते हुए ड्राइंग दुबारा बनाने में लोगों की मदद
          करने का प्रयास करते हुए कोडिंग कैसे काम करती है। एक व्यक्ति को ग्राफ पेपर
          पर छोटी ड्राइंग दी जाती है और उन्हें केवल विशिष्ट तीरों का उपयोग करते हुए
          इसे पूरा करने और यह वर्णन करने की जरूरत होती है कि उस ड्राइंग को दुबारा
          कैसे बनाना है।
      2:
        text: गतिविधि के दूसरे आधे भाग में, हम छात्रों से पूछते हैं कि वे सोलह पहचानने
          योग्य समकोण बनाने के लिए कितने अलग-अलग तरीकों से कागज़ को मोड़ सकते हैं।
          फिर आप इस पर विचार विमर्श करेंगे कि कितने समाधानों से वही अंतिम परिणाम आ
          सकता है और कुछ समाधान, कुछ स्थितियों में बेहतर क्यों होते हैं।
    unplug6:
      1:
        text: इस गतिविधि को ताश के पत्तों की कोडिंग करना कहा जाता है और यह किसी भी
          आयु वर्ग के लिए बढ़िया है। जैसे आपने पिछले पाठों में इफ स्टेटमेंट्स सीखीं,
          Blockly के दौरान, इफ स्टेटमेंट्स में उनके बारे में जानकारी होती है, जिसका
          आपको यह पता लगाने के लिए मूल्यांकन करना होता है कि यह सही है या गलत। यह
          कंडिशनल है और इसे बहुत-से अलग-अलग तरीकों से उपयोग किया जा सकता है।
      2:
        text: हम कागज़ पर प्रोग्राम बनाकर उनका लाभ ले सकते हैं, जिसे आप ताश खेलने
          के बेतरतीब चित्र का उपयोग करते हुए चलाते हैं। आपके पास ऐसी इफ स्टेटमेंट
          हो सकती है, जो कुछ ऐसे कहती है, कि आप जो ताश का पत्ता चित्रित करते हैं,
          यदि वह 8 से बड़ा हो, तो आप अंक हासिल करेंगे। अन्यथा, आपका विरोधी अंक हासिल
          करेगा। आप इसे जितना चाहें, आसान या जटिल बना सकते हैं, जैसा भी आप सहज महसूस
          करें।
    unplug7:
      1:
        text: आप जानते हैं कि जब आप गीत के बोल देखते हैं और वे बिल्कुल शुरू में ही
          कोरस को परिभाषित करते हैं और फिर बाकी गीत के लिए, तो वे आपको वापस कोरस पर
          ले जाते हैं? इस प्रकार से आप फंक्शन बोलते हैं।
      2:
        text: इस पाठ में, हम अपने गीत की शुरुआत में ही कोरस को परिभाषित करते हैं और
          फिर हम अपने गीत को गाते हैं और वापस जाते हैं और हम देखते हैं कि कक्षा शब्द
          कोरस नहीं गाती है, वे अपने आप ही सबसे ऊपर जाते हैं, जहां हम कोरस को परिभाषित
          करते हैं और उसे गाते हैं। हम उसे शानदार परिचय के रूप में उपयोग करते हैं
          कि यह कैसे समझा जाए कि एक प्रोग्राम तब क्या कर रहा होता है, जब यह फंक्शन
          को परिभाषित करता व बोलता है।
      3:
        text: हम इस बारे में चर्चा करने के लिए Old Macdonald गीत सहित परिचित गीतों
          का उपयोग करते हैं कि कोरस को बार-बार कैसे बोला जाता है और किस प्रकार कभी-कभार
          कोरस बदल सकता है। जब आपके पास Old Macdonald गीत होता है, जहां निश्चित शब्द
          बदलते हैं, तो यह मापदंडों की योजना से परिचय करने का सही स्थान है। कुछ शब्दों
          को आगे भेजना ताकि आप अपने फंक्शन को अतिरिक्त जानकारी भेज सकें। जब हम सुनिश्चित
          कर लें कि हर किसी ने इसे समझ लिया है, तो आप अपने खुद के परिचित गीत ले सकते
          हैं और खुद उनका विश्लेषण कर सकते हैं। देखें कि क्या आप साथ मिलकर इसे समझ
          सकते हैं
    unplug8:
      1:
        text: पृथक्करण के बारे में हमारा पाठ मैडलिब्स की परिचित अवधारणाओं का उपयोग
          करता है, जहां आप मूल रूप से कहानी में खाली स्थान दर्ज करते हैं, जिसे बहुत-से
          अलग-अलग शब्दों से भरा जा सकता है। हम उस युक्ति को लेते हैं, बच्चों को उनकी
          खुद की कहानियों के लिए उनके खुद के शब्द लेने की चुनौती देते हैं और पृथक्करण
          की अवधारणा को विस्तार से समझाते हैं।
      2:
        text: यह पूरी तरह से फंक्शन्स के बारे में है और आप फंक्शन कैसे प्राप्त कर
          सकते हैं, जैसे Old Macdonald गीत में, जहां आपके पास अपने कोरस के लिए एक
          संरचना है लेकिन आपके पास कुछ ऐसा भी है, जो बदल जाता है और आप उस बदलने वाली
          चीज़ को अलग कर देते हैं और आप इसमें हर बार अपने खुद के शब्द भर सकते हैं।
          लेकिन कभी-कभार आपके पास तीन शब्द होते हैं, जो बदलते हैं और उन्हें आप तीन
          मापदंडों के साथ भर देते हैं, यह तब भी काफी उपयोगी होता है।
      3:
        text: आप ऐसा फंक्शन प्राप्त कर सकते हैं, जो बहुत-सी अलग-अलग समस्याओं से निपटता
          है। बहुत बार लोग उन सभी समस्याओं के लिए अलग-अलग फंक्शन लिख लेते हैं, उन्हें
          अहसास ही नहीं होता कि केवल एक ही छोटा अंतर होता है। यदि वे उस छोटे अंतर
          से निपटने का तरीका ढूंढ लें, तो वे बजाय 14 अलग-अलग फंक्शन प्राप्त करने के,
          एक फंक्शन को बार-बार दुबारा उपयोग कर सकते हैं।
    unplug9:
      1:
        text: रिले प्रोग्रामिंग बेहद मज़ेदार पाठ है, जो कंप्यूटर साइंस से अधिक उपयोग
          होती है। कभी-कभार हर कोई थोड़ा परेशान हो जाता है और आप चाहते हैं कि वे अपने
          पैरों पर खड़े हों। यह कंप्यूटर साइंस में कुछ उत्साह शामिल करने का शानदार
          तरीका है।
      2:
        text: आप सबको दो समूहों में बांटते हैं, जहां वे एक लाइन में खड़े होते हैं
          और रिले स्टाइल में दौड़ते हैं। प्रत्येक समूह में पहला व्यक्ति कमरे की दूसरी
          ओर दौड़ता है, जहां आपके पास उनके लिए ग्राफ पेपर ड्राइंग और कागज़ का खाली
          टुकड़ा हो ता है। वे उस चित्र को बनाने के लिए पहला स्टेप लिखते हैं, वापस
          अपनी लाइन में दौड़ते हैं, अगले खिलाड़ी को टैग करते हैं, जो अगला स्टेप लिखने
          के लिए वापस जाता है।
      3:
        text: यह डीबगिंग की योजना, आपके खुद के काम को प्रूफरीड करने की जरूरत, और लोगों
          के आपसे पहले किए गए काम को देखने की जरूरत को समझने का शानदार तरीका है। आप
          जल्दी से समझ लेते हैं कि यह कितना महत्वपूर्ण है कि आप अपनी कोडिंग में सचेत
          रहें, जब संपूर्ण टीम आप पर निर्भर होती है।
    unplug10:
      1:
        text: यह गतिविधि समझने में आसान तरीके में स्पष्ट करती है कि इंटरनेट कैसे काम
          करता है। हम पूरी शब्दावली को आसान शब्दों में स्पष्ट करते हैं, जिसकी आपको
          जरूरत होगी ताकि छात्र संदेशों का प्रसारण शुरू कर सकें, जैसे ईमेल।
      2:
        text: छात्र तीन प्रसारण विधियों में से एक का उपयोग करते हुए संदेशों का प्रसारण
          करेंगे। ये विधियां हैं, वायरलेस इंटरनेट, DSL या फाइबर ऑप्टिक। जो छात्र वाई-फाई
          प्रदर्शित करेंगे, उन्हें उस संदेश को अपने सिर पर पहनना होगा, जिसका वे प्रसारण
          कर रहे हैं क्योंकि इसकी काफी संभावना है कि वाईफाई कुछ जानकारी छोड़े।
      3:
        text: DSL या केबल का उपयोग करने वाले छात्र संदेश को अपने हाथ के पीछे रखेंगे,
          जहां उनकी जानकारी छोड़ने की थोड़ी-बहुत संभावना है। और फाइबर ऑप्टिक प्रदर्शित
          करने वाले छात्र उन्हें दोनों हाथों पर रखेंगे। यह गतिविधि हम में से कईयों
          द्वारा रोज़ाना उपयोग की जाने वाली किसी चीज़ को समझने का शानदार तरीका है।
    unplug11:
      1:
        text: तो अब वापस जाने और इन पिछले उन्नीस पाठों में आपने जो किया है, उस सब
          पर नज़र डालने का समय है। यह सभी छात्रों को बुलाकर यह बताने का सही समय है
          कि जो उन्होंने किया है, वह बड़ी उपलब्धि है। उन्होंने इन पाठों से उससे कहीं
          अधिक सीख लिया है, जो ज्यादातर वयस्क कंप्यूटर साइंस के बारे में जानते हैं।
      2:
        text: कक्षा के रूप में या छोटे समूहों में उनके पसंदीदा पाठों के बारे में चर्चा
          करें। आपने जो सीखा है, जब आप उस सब पर वापस नज़र डालते हैं, तो यहीं पर आपके
          छात्रों की रचनात्मकता जगमगा सकती है। उन्हें समूहों में बांटें और उनसे खुद
          अनप्लग्ड पाठ तैयार करवाएं। प्रत्येक समूह को मुख्य अवधारणा असाइन करें, जैसे
          फंक्शन्स या कलन विधियां और उनके उपयोग के लिए शिल्प कला की बहुत-सी सामग्रियां
          अपने पास रखें। प्रत्येक समूह से उनकी नई अनप्लग्ड गतिविधि प्रदर्शित करवाएं
          या छात्रों द्वारा तैयार की गई कुछेक गतिविधियां करने के लिए दूसरा दिन नियत
          करें।
      3:
        text: यहां Code.org में प्रत्येक से, हम आशा करते हैं कि आपको इस कोर्स के दौरान
          बेहद मज़ा आया। चाहे आपका सपना सबसे अच्छा नया ऐप तैयार करने का हो, बीमारियों
          का इलाज करने में मदद के लिए प्रोग्रामिंग का उपयोग करने का हो या आप उत्कृष्ट
          समस्या-हल करने वाले बनना चाहते हैं, यह कोर्स उन सभी सपनों को पूरा करने में
          पहला कदम था।
    starwars_intro:
      1:
        text: 'नमस्कार, मैं कैथलीन कैनेडी (Kathleen Kennedy) हूं और मैं Star Wars:
          The Force Awakens की प्रोड्यूसर हूं। आज आप हमारे एक स्टार BB-8 के साथ काम
          करेंगे। BB-8 एक अंतरिक्ष-संबंधी ड्रॉयड है। वह जो भी करता है और उसकी हर गतिविधि
          को कंप्यूटर सॉफ्टवेयर द्वारा नियंत्रित किया जाता है। कंप्यूटर साइंस मार्केटिंग
          से लेकर स्वास्थ्य देखभाल से फिल्म तक, हर उद्योग को प्रभावित करती है। दरअसल,
          सैंकड़ों कंप्यूटर इंजीनियरों ने The Force Awakens जैसी फिल्म बनाने के लिए
          साथ मिलकर काम किया।'
      2:
        text: नमस्कार, मैं रेचल रोस (Rachel Rose) हूं, मैं ILM में सीनियरR&D इंजीनियर
          हूं और मैं ऐनिमेशन और क्रिएचर विकास टीम का नेतृत्व करती हूं। The Force Awakens
          में, मेरी जिम्मेदारी रिग्स विकसित करने में कलाकारों की मदद करने की थी, जो
          पात्र के अंग हैं, जो मूव करते हैं, जो दूर आकाशगंगा में पात्र को बहुत ही
          विश्वसनीय रूप देते हैं।
      3:
        text: अगले घंटे में, हम अपनी खुद की Star Wars गेम बनाएंगे। हम आपको प्रोग्रामिंग
          की बुनियादी अवधारणाओं के बारे में सिखाएंगे। आम तौर पर प्रोग्रामिंग पूरा
          टेक्सट है, लेकिन हम यहां ऐसे ब्लॉक्स का उपयोग करने वाले हैं, जिन्हें हम
          प्रोग्राम लिखने के लिए खींच और छोड़ सकते हैं। हुड के नीचे, आप अभी भी कोड
          तैयार कर रहे हैं। जब आप ब्लॉक्स के साथ बुनियादी चीज़ों को आजमा लें, तो हम
          आपको JavaScript पर भेजेंगे, जो वेब पर सबसे लोकप्रिय प्रोग्रामिंग भाषाओं
          में से एक है।
      4:
        text: शुरुआत करने के लिए, हम BB-8 को सभी स्क्रैप भागों को एकत्र करने के लिए
          चलने के लिए सक्रिय करने हेतु प्रोग्राम बनाने के लिए रे (Rey) के साथ काम
          करेंगे। आपकी स्क्रीन को तीन भागों में बांटा गया है। बाईं ओर Star Wars गेम
          स्पेस है, जहां कोड चलेगा। प्रत्येक स्तर के लिए निर्देश गेम स्पेस के नीचे
          लिखे हुए हैं।
      5:
        text: यह मध्य का क्षेत्र टूलबॉक्स है और इनमें से प्रत्येक ब्लॉक एक कमांड है,
          जिसे BB-8 समझ सकता है।
      6:
        text: दाईं ओर सफेद स्थान को वर्कस्पेस कहा जाता है और यह वही स्थान है, जहां
          हम अपना प्रोग्राम बनाएंगे।
      7:
        text: यदि मैं moveLeft(); ब्लॉक को अपने वर्कस्पेस में खींचकर चलाएं को दबाती
          हूं, तो क्या होता है? BB-8 ग्रिड पर एक ब्लॉक बाएं मूव करता है।
      8:
        text: और यदि मैं BB-8 को moveLeft(); ब्लॉक के बाद कुछ करने के लिए सक्रिय करना
          चाहूं तो क्या होगा? मैं अपने प्रोग्राम में दूसरा ब्लॉक जोड़ सकती हूं। मैं
          moveUp(); ब्लॉक का चयन करूंगी और मैं इसे तब तक अपने moveLeft(); ब्लॉक के
          नीचे खींचूंगी, जब तक कि हाइलाइट प्रकट न हो। फिर मैं इसे छोड़ दूंगी और दो
          ब्लॉक्स साथ में जुड़ जाएंगे।
      9:
        text: जब मैं दुबारा चलाएं दबाती हूं, तो BB-8 उन कमांड्स को प्रदर्शित करेगा,
          जो हमारे वर्कस्पेस में ऊपर से नीचे तक क्रमबद्ध ढेर हैं। यदि आप कभी भी कोई
          ब्लॉक मिटाना चाहें, तो इसे बस ढेर से हटाएं और इसे वापस टूल बॉक्स में खींच
          दें।
      10:
        text: जब आप चलाएं को हिट करें, तो आप हमेशा BB-8 को शुरू से वापस पाने के लिए
          पुनः सेट करें बटन को हिट कर सकते हैं। अब आइए रोलिंग करवाएं।
    starwars_typing:
      1:
        text: ब्लॉक्स के अंदर जो हम उपयोग करते रहे हैं, वे JavaScript कमांड्स हैं।
          JavaScript आज के पेशेवर विकासकारों के लिए सबसे लोकप्रिय प्रोग्रामिंग भाषा
          है। ब्लॉक्स, कोड सीखना शुरू करने का शानदार तरीका हैं और असल में, Harvard
          और Berkeley जैसी उच्च यूनिवर्सिटीज इस तरीके से ही पढ़ाना शुरू करती हैं।
          लेकिन जब हम मूल सिद्धांत सीख लेते हैं, तो इंजीनियर टाइप करके कोड लिखते हैं
          क्योंकि इससे हम तेज़ी से काम कर सकते हैं।
      2:
        text: हम टूलबॉक्स में ढूंढें या उन्हें बाहर खींचे बिना ही सैंकडों कमांड्स
          को टाइप कर सकते हैं। चूंकि आप टाइपिंग सीख रहे हैं, इसलिए शुरू में यह काफी
          धीमी हो सकती है, लेकिन हम चाहते हैं कि आप इसे आजमाएं।
      3:
        text: आपके वर्कस्पेस में ऊपर दाएं कोने में, आप कोड को टेक्सट की तरह टाइप करने
          के लिए ब्लॉक्स में से अदला बदली करने के लिए किसी भी पहेली पर टेक्सट दिखाएं
          बटन पर क्लिक कर सकते हैं।
      4:
        text: अगले पाठ में, हम आपकी शुरुआत टाइपिंग मोड में करवाएंगे। यहां आप अभी भी
          टूलबॉक्स में से ब्लॉक खींच सकते हैं या आप कमांड का नाम टाइप कर सकते हैं।
          जैसे ही आप टाइप करना शुरू करते हैं, तो जहां पर आप टाइप कर रहे हैं, वहां
          आप नीचे देखेंगे कि संभावी कमांड्स के नाम दर्शाए जा रहे हैं। पूरा कमांड नाम
          टाइप करने की बजाय, आप तेज़ी से आगे बढ़ने के लिए इनमें से एक का चयन कर सकते
          हैं। मेरे काम में, मैं कोड लिखते समय पूरा समय इस ऑटो-कम्प्लीट विशेषता का
          उपयोग करती हूं।
      5:
        text: जब आप कोड टाइप कर रहे होते हैं, तो कंप्यूटर चाहता है कि आप एकदम सही
          हों। आपको कमांड के नाम की एकदम सही स्पेलिंग लिखनी होंगी और कैपिटलाइज़ करना
          होगा, लघु कोष्ठकों और अर्धविराम चिन्हों सहित। यहां कि तक टाइपिंग की छोटी-सी
          गलती से भी, BB-8 कोड को नहीं समझ पाता और मूव करने में सक्षम नहीं होता।
      6:
        text: जब आप फाइल में कोई गलती करते हैं, तो संपादक आपके लिए इसे हाइलाइट कर
          देता है ताकि आप इसे ठीक करने के लिए अपने टेक्सट को बदलने का प्रयास कर सकें।
      7:
        text: यदि आप अटक जाते हैं, तो आप कभी भी शुरू करें बटन के साथ शुरुआत कर सकते
          हैं और कभी भी ऊपर के दाएं कोने में क्लिक करके वापस ब्लॉक मोड पर जा सकते
          हैं। ठीक है, आइए टाइपिंग आजमा कर देखें! यदि आपसे गलती हो जाती है, तो निराश
          न हों। इसे सही तरह से समझने में हर किसी को कई बार प्रयास करना पड़ता है।
    starwars_events:
      1:
        text: नमस्कार, मेरा नाम चैरिटा कार्टर (Charita Carter) है। मैं यहां Walt Disney
          Imagineering में सीनियर क्रिएटिव प्रोड्यूसर हूं। मेरी जिम्मेदारी उन टीमों
          का नेतृत्व करने की है, जो वास्तव में ऐसे आकर्षण निर्मित करती हैं, जिनका
          हमारे मेहमान अनुभव करते हैं। हम हमेशा ऐसे तरीकों की खोज करते हैं, जिनमें
          हम सुधार कर सकें और अपने मेहमानों को बेहतर अनुभव दे सकें और प्रौद्योगिकी
          इसके लिए सबसे महत्वपूर्ण है।
      2:
        text: बधाई हो, आपने इसे कर लिया है! आपने BB-8 को प्रोग्राम कर लिया है। अब
          मुझे लगता है कि हम थोड़े मुश्किल कार्य के लिए तैयार हैं। अब जबकि आप प्रोग्रामिंग
          के मूल सिद्धांत सीख चुके हैं, हम R2-D2 और C-3PO को स्टार भूमिका में लेते
          हुए, अपनी खुद की गेम बनाने के लिए वापस अतीत में जाएंगे।
      3:
        text: 'गेम बनाने के लिए, हमें कुछ ऐसी चीज़ों के बारे में सीखने की जरूरत है,
          जिनका उपयोग गेम प्रोग्रामर रोजाना करते हैं: इन्हें इवेंट्स कहा जाता है।
          इवेंट्स आपके प्रोग्राम को सुनने या प्रतीक्षा करने के लिए कहती है कि कोई
          चीज़ कब घटित होनी है और जब वह चीज़ घटित होती है, तो यह एक क्रिया का प्रदर्शन
          करती है।'
      4:
        text: इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, तीर के बटन या स्क्रीन पर थपथपाने
          को सुनना।
      5:
        text: यहां हम रेबेल पायलट को संदेश भेजने के लिए R2-D2 को ऊपर की ओर मूव करने
          के लिए सक्रिय करेंगे और फिर अन्य रेबेल पायलट तो नीचे की ओर मूव करेंगे। हम
          उसे मूव करने हेतु सक्रिय करने के लिए इवेंट्स का उपयोग करेंगे। जब खिलाड़ी
          ऊपर/नीचे तीर वाली कुंजियों या ऊपर/नीचे वाले बटनों का उपयोग करता है।
      6:
        text: हम whenUp() इवेंट ब्लॉक का उपयोग करेंगे और इसमें goUp() ब्लॉक जोड़ेंगे।
          जब खिलाड़ी ऊपर तीर वाली कुंजी दबाता है, तो whenUp() ब्लॉक से जुड़ा कोड चलता
          है। हम R2-D2 को नीचे मूव करने हेतु सक्रिय करने के लिए वही क्रिया करेंगे।
      7:
        text: ऐसा करने के लिए, हम whenUp() नामक कमांड का उपयोग करेंगे। जब आप कमांड
          को टूलबॉक्स में से बाहर खींचते हैं, तो आप देखेंगे कि यह अर्धविराम चिन्ह
          की जगह लहरियों वाली कोष्ठक के शुरू और समाप्त होती है। यह हमें मध्य में और
          कमांड्स रखने के लिए स्थान देती है। प्रत्येक कमांड, जो हम इन कोष्ठकों के
          अंदर रखते हैं, वह चलेगी, जब खिलाड़ी ऊपर तीर को दबाता है।
      8:
        text: हम R2-D2 को ऊपर जाने के लिए सक्रिय करना चाहते हैं इसलिए आइए goUp();
          ब्लॉक को कमांड के अंदर रखें। हम R2-D2 को नीचे जाने हेतु सक्रिय करने के लिए
          वही क्रिया करेंगे।
      9:
        text: अब हमारे ड्रॉयड को पहले से ही नियंत्रित करने के लिए पूरा कोड लिखने की
          बजाय, हम R2-D2 को बटन दबाने की इवेंट्स पर प्रतिक्रिया करने देंगे, जो उसे
          स्क्रीन के चारों ओर मूव करेंगी। कदम दर कदम, आपकी गेम और संवादात्मक होती
          जा रही है।
    starwars_congrats:
      1:
        text: नमस्कार, मेरा नाम एलाइस (Alice) है और मैं यहां Code.org में उत्पाद और
          इंजीनियरिंग टीमों का संचालन करती हूं और मैंने इस ट्यूटोरियल पर काम किया
          है, जिसे आप अभी प्ले कर रहे हैं।
      2:
        text: आप इसे अंतिम स्तर तक ले गए हैं। बधाई हो! आपने अभी वह सब सीखा, जिसकी
          आपको अपनी खुद की Star Wars बनाने के लिए जरूरत थी। अब और कोई निर्देश नहीं
          हैं, हल करने के लिए कोई पहेलियां नहीं हैं। आप अपनी खुद की गेम बना सकते हैं
          और यह चयन कर सकते हैं कि यह कैसे काम करे। एक बात और, आपने और भी अच्छा करने
          के लिए नई ध्वनियां और नई कमांडर्स अनलॉक कर दी हैं।
      3:
        text: "[छात्र बोल रहे हैं] तो हमने मूल रूप से ऐसी गेम बनाई है, जहां आप अंकल
          हासिल कर सकते हैं, जब आप पफर पिग्स प्राप्त करते हैं। मज़े की बात यह है कि
          जब भी आप पफर पिग प्राप्त करते हैं, स्टॉर्म ट्रूपर प्रकट होता है। असल में
          पूरी स्क्रीन पफर पिग्स से भरी हुई है और फिर जब आप उनमें से 10,000 को छू
          लेते हैं, तो आप जीत जाते हैं।"
      4:
        text: "[छात्र बोल रहे हैं] हमने ऐसी गेम बनाई है, जहां आप हार नहीं सकते और
          वह सब, जिसे आप मारते हैं, आपको अंक देता है। मेरे प्रोग्राम के लिए, मैंने
          कुंजियों को पलट दिया है ताकि जब भी आप ऊपर क्लिक करें, तो आपका पात्र नीचे
          जाए और जब आप दाएं जाएं, तो आपका पात्र बाएं जाए। यह बहुत ही मुश्किल है! यदि
          आप गेम के विकासकार हैं तो कभी-कभार आप बस फायदा उठाते हैं, अनुचित फायदा।
          क्या मैंने इसे समझ लिया है? आहा!"
      5:
        text: जब आप अपनी गेम बना लें, तो लिंक प्राप्त करने के लिए साझा करें का चयन
          करें, जिसे आप इसे दोस्तों के साझा कर सकते हैं या अपनी गेम को अपने फोन पर
          खेल सकते हैं। आनंद लें!
    starwars_blocks_intro:
      1:
        text: 'नमस्कार मैं कैथलीन कैनेडी (Kathleen Kennedy) हूं और मैं Star Wars:
          The Force Awakens की प्रोड्यूसर हूं। आज आप हमारे एक स्टार BB-8 के साथ काम
          करेंगे। BB-8 एक अंतरिक्ष-संबंधी ड्रॉयड है। वह जो भी करता है और उसकी हर गतिविधि
          को कंप्यूटर सॉफ्टवेयर द्वारा नियंत्रित किया जाता है। कंप्यूटर साइंस मार्केटिंग
          से लेकर स्वास्थ्य देखभाल से फिल्म तक, हर उद्योग को प्रभावित करती है। दरअसल,
          सैंकड़ों कंप्यूटर इंजीनियरों ने The Force Awakens जैसी फिल्म बनाने के लिए
          साथ मिलकर काम किया।'
      2:
        text: नमस्कार, मैं रेचल रोस (Rachel Rose) हूं, मैं ILM में सीनियरR&D इंजीनियर
          हूं और मैं ऐनिमेशन और क्रिएचर विकास टीम का नेतृत्व करती हूं। The Force Awakens
          में, मेरी जिम्मेदारी रिग्स विकसित करने में कलाकार की मदद करने की थी, जो
          पात्र के अंग हैं, जो मूव करते हैं, जो दूर आकाशगंगा में पात्र को बहुत ही
          विश्वसनीय रूप देते हैं।
      3:
        text: अगले घंटे में, हम अपनी खुद की Star Wars गेम बनाएंगे, जो आपको प्रोग्रामिंग
          की बुनियादी अवधारणाओं के बारे में सिखाएगी। आम तौर पर प्रोग्रामिंग पूरा टेक्सट
          है, लेकिन हम यहां ऐसे ब्लॉक्स का उपयोग करने वाले हैं, जिन्हें हम प्रोग्राम
          लिखने के लिए खींच और छोड़ सकते हैं। शुरुआत करने के लिए, हम BB-8 को सभी स्क्रैप
          भागों को एकत्र करने के लिए चलने के लिए सक्रिय करने हेतु प्रोग्राम बनाने
          के लिए रे (Rey) के साथ काम करेंगे।
      4:
        text: आपकी स्क्रीन तीन भागों में बंटी हुई है। बाईं ओर, Star Wars गेम स्पेस
          है, जहां आपका कोड चलेगा। प्रत्येक स्तर के लिए निर्देश गेम स्पेस के नीचे
          लिखे गए हैं।
      5:
        text: यह मध्य का क्षेत्र टूलबॉक्स है और इनमें से प्रत्येक ब्लॉक एक कमांड है,
          जिसे BB-8 समझ सकता है।
      6:
        text: दाईं ओर सफेद स्थान को वर्क स्पेस कहा जाता है और यह वही स्थान है, जहां
          हम अपना प्रोग्राम बनाएंगे।
      7:
        text: यदि मैं moveLeft(); ब्लॉक को अपने वर्कस्पेस में खींचती हूं, तो क्या
          होता है? BB-8 ग्रिड पर एक ब्लॉक बाएं मूव करता है।
      8:
        text: और यदि मैं BB-8 को moveLeft(); ब्लॉक के बाद कुछ करने के लिए सक्रिय करना
          चाहूं तो क्या होगा? मैं अपने प्रोग्राम में दूसरा ब्लॉक जोड़ सकती हूं। मैं
          moveUp(); ब्लॉक का चयन करूंगी और मैं इसे तब तक अपने moveLeft(); ब्लॉक के
          नीचे खींचूंगी, जब तक कि हाइलाइट प्रकट न हो। फिर मैं इसे छोड़ दूंगी और दो
          ब्लॉक्स साथ में जुड़ जाएंगे। BB-8 उन कमांड्स को प्रदर्शित करेगा, जो हमारे
          वर्कस्पेस में ऊपर से नीचे तक क्रमबद्ध ढेर हैं।
      9:
        text: यदि आप कभी भी कोई ब्लॉक मिटाना चाहें, तो इसे बस ढेर से हटाएं और इसे
          वापस टूल बॉक्स में खींच दें।
      10:
        text: जब आप चलाएं को हिट करें, तो आप हमेशा BB-8 को शुरू से वापस पाने के लिए
          पुनः सेट करें बटन को हिट कर सकते हैं। अब आइए रोलिंग करवाएं।
    starwars_blocks_events:
      1:
        text: नमस्कार, मेरा नाम चैरिटा कार्टर (Charita Carter) है। मैं यहां Walt Disney
          Imagineering में सीनियर क्रिएटिव प्रोड्यूसर हूं। मेरी जिम्मेदारी उन टीमों
          का नेतृत्व करने की है, जो वास्तव में ऐसे आकर्षण निर्मित करती हैं, जिनका
          हमारे मेहमान अनुभव करते हैं। हम हमेशा ऐसे तरीकों की खोज करते हैं, जिनमें
          हम सुधार कर सकें और अपने मेहमानों को बेहतर अनुभव दे सकें और प्रौद्योगिकी
          इसके लिए सबसे महत्वपूर्ण है।
      2:
        text: बधाई हो, आपने इसे कर लिया है! आपने BB-8 को प्रोग्राम कर लिया है। अब
          मुझे लगता है कि हम थोड़े मुश्किल कार्य के लिए तैयार हैं। अब जबकि आप प्रोग्रामिंग
          के मूल सिद्धांत सीख चुके हैं, हम R2-D2 और C-3PO को स्टार भूमिका में लेते
          हुए, अपनी खुद की गेम बनाने के लिए वापस अतीत में जाएंगे।
      3:
        text: 'गेम बनाने के लिए, हमें कुछ ऐसी चीज़ों के बारे में सीखने की जरूरत है,
          जिनका उपयोग गेम प्रोग्रामर रोजाना करते हैं: इन्हें इवेंट्स कहा जाता है।
          इवेंट्स आपके प्रोग्राम को सुनने या प्रतीक्षा करने के लिए कहती है कि कोई
          चीज़ कब घटित होनी है और जब वह चीज़ घटित होती है, तो यह एक क्रिया का प्रदर्शन
          करती है।'
      4:
        text: इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, तीर के बटन या स्क्रीन पर थपथपाने
          को सुनना।
      5:
        text: यहां हम रेबेल पायलट को संदेश भेजने के लिए R2-D2 को ऊपर की ओर मूव करने
          के लिए सक्रिय करेंगे और फिर अन्य रेबेल पायलट तो नीचे की ओर मूव करेंगे। हम
          उसे मूव करने हेतु सक्रिय करने के लिए इवेंट्स का उपयोग करेंगे। जब खिलाड़ी
          ऊपर/नीचे तीर वाली कुंजियों या ऊपर/नीचे वाले बटनों का उपयोग करता है।
      6:
        text: हम whenUp() इवेंट ब्लॉक का उपयोग करेंगे और इसमें goUp() ब्लॉक जोड़ेंगे।
          जब खिलाड़ी ऊपर तीर वाली कुंजी दबाता है, तो whenUp() ब्लॉक से जुड़ा कोड चलता
          है। हम R2-D2 को नीचे मूव करने हेतु सक्रिय करने के लिए वही क्रिया करेंगे।
          अब हमारे ड्रॉयड को पहले से ही नियंत्रित करने के लिए पूरा कोड लिखने की बजाय,
          हम R2-D2 को बटन दबाने की इवेंट्स पर प्रतिक्रिया करने देंगे, जो उसे स्क्रीन
          के चारों ओर मूव करेंगी। कदम दर कदम, आपकी गेम और संवादात्मक होती जा रही है।
      7:
        text: कदम दर कदम, आपकी गेम और संवादात्मक होती जा रही है।
    starwars_blocks_congrats:
      1:
        text: नमस्कार, मेरा नाम एलाइस (Alice) है और मैं यहां Code.org में उत्पाद और
          इंजीनियरिंग टीमों का संचालन करती हूं और मैंने इस ट्यूटोरियल पर काम किया
          है, जिसे आप अभी प्ले कर रहे हैं।
      2:
        text: आप इसे अंतिम स्तर तक ले गए हैं। बधाई हो! आपने अभी वह सब सीखा, जिसकी
          आपको अपनी खुद की Star Wars बनाने के लिए जरूरत थी। अब और कोई निर्देश नहीं
          हैं, हल करने के लिए कोई पहेलियां नहीं हैं। आप अपनी खुद की गेम बना सकते हैं
          और यह चयन कर सकते हैं कि यह कैसे काम करे। एक बात और, आपने और भी अच्छा करने
          के लिए नई ध्वनियां और नई कमांडर्स अनलॉक कर दी हैं।
      3:
        text: "[छात्र बोल रहे हैं] तो हमने मूल रूप से ऐसी गेम बनाई है, जहां आप अंकल
          हासिल कर सकते हैं, जब आप पफर पिग्स प्राप्त करते हैं। मज़े की बात यह है कि
          जब भी आप पफर पिग प्राप्त करते हैं, स्टॉर्म ट्रूपर प्रकट होता है। असल में
          पूरी स्क्रीन पफर पिग्स से भरी हुई है और फिर जब आप उनमें से 10,000 को छू
          लेते हैं, तो आप जीत जाते हैं।"
      4:
        text: "[छात्र बोल रहे हैं] हमने ऐसी गेम बनाई है, जहां आप हार नहीं सकते और
          वह सब, जिसे आप मारते हैं, आपको अंक देता है। मेरे प्रोग्राम के लिए, मैंने
          कुंजियों को पलट दिया है ताकि जब भी आप ऊपर क्लिक करें, तो आपका पात्र नीचे
          जाए और जब आप दाएं जाएं, तो आपका पात्र बाएं जाए। यह बहुत ही मुश्किल है! यदि
          आप गेम के विकासकार हैं तो कभी-कभार आप बस फायदा उठाते हैं, अनुचित फायदा।
          क्या मैंने इसे समझ लिया है? आहा!"
      5:
        text: जब आप अपनी गेम बना लें, तो लिंक प्राप्त करने के लिए साझा करें का चयन
          करें, जिसे आप इसे दोस्तों के साझा कर सकते हैं या अपनी गेम को अपने फोन पर
          खेल सकते हैं। आनंद लें!
    mc_intro:
      1:
        text: मेरा नाम जेन्स बर्जेन्स्टेन है लेकिन मैं जेब नाम से ज़्यादा जाना जाता
          हूँ। मैं यहाँ स्टॉकहोम के मोजैंग में स्थित Minecraft का लीड डेवलपर हूँ।
          मेरे ख़्याल से मेरी उम्र ग्यारह या शायद बारह की होगी जब मैंने प्रोग्रामिंग
          की शुरूआत की क्योंकि मैं गेम्स बनाना चाहता था। मेरे पिता के एक मित्र ने
          मुझसे कहा कि गेम्स तैयार करने के लिए, मुझे प्रोग्राम का तरीक़ा सीखना होगा।
          इस तरह मैंने शुरूआत की। मुझे गेम्स की डिज़ाइनिंग और उसकी निर्माण-कला के
          बारे में जानना पसंद है। दरअसल इसी वजह से मैं Minecraft को पसंद करता हूँ।
      2:
        text: अगले एक घंटे में, आप Minecraft की दुनिया के नमूने के माध्यम से गुज़रते
          हुए एलेक्स या स्टीव की प्रोग्रामिंग द्वारा कंप्यूटर विज्ञान की बुनियादी
          बातों को सीखेंगे।
      3:
        text: पारंपरिक प्रोग्रामिंग आम तौर पर टेक्स्ट में होता है लेकिन आज हम Blockly
          का उपयोग करेंगे, जो दृश्य खंडों का उपयोग करने वाली प्रणाली है जहाँ आप प्रोग्राम
          लिखने के लिए ड्रैग एंड ड्रॉप करते हैं। टोप के नीचे, आप जावास्क्रिप्ट कोड
          तैयार कर रहे हैं।
      4:
        text: जो अवधारणाएँ आप सीखने जा रहे हैं उनका कंप्यूटर प्रोग्रामर प्रति दिन
          उपयोग करते हैं और वे कंप्यूटर विज्ञान की नींव हैं। यहाँ मोजांग में, Minecraft
          को क्रियाशील बनाने के लिए हम इन्हीं अवधारणाओं का उपयोग करते हैं।
      5:
        text: आप शुरूआत करने से पहले, अपने किरदार को चुनेंगे। मैं एलेक्स को चुनने
          जा रहा हूँ।  आइए ऐसे प्रोग्राम के लिए कोड का निर्माण करें जो उसे स्क्रीन
          पर चारों ओर चलने-फिरने में मदद करेगा।
      6:
        text: आपका स्क्रीन तीन मुख्य भागों में विभाजित है। बाईं ओर माइनक्राफ़्ट प्लेस्पेस
          है जहाँ आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश नीचे लिखे गए
          हैं।
      7:
        text: यह बीच वाली जगह टूलबॉक्स है और इनमें से प्रत्येक ब्लॉक एक कमांड है जो
          एलेक्स की गतिविधियों को निर्देशित करता है।
      8:
        text: दाईं ओर सफ़ेद जगह वर्क स्पेस कहलाता है और यहीं हम अपना प्रोग्राम तैयार
          करेंगे।
      9:
        text: यदि हम moveForward(); ब्लॉक को हमारे वर्कस्पेस में खींचते हैं और फिर
          run पर क्लिक करते हैं, तो क्या होगा? एलेक्स ग्रिड पर एक स्पेस आगे बढ़ेगी।
      10:
        text: और अगर एक स्पेस आगे बढ़ने के बाद अगर हम कुछ और करना चाहें तो? हम अपने
          प्रोग्राम में एक और ब्लॉक जोड़ सकते हैं। मैं turnRight(); ब्लॉक को चुनने
          और फिर उसे मेरे moveForward(); ब्लॉक के नीचे ड्रैग करने जा रहा हूँ जब तक
          कि यह नारंगी लाइन न प्रकट हो जाए। फिर मैं उसे ड्रॉप करूँगा और दोनों ब्लॉक
          एक दूसरे से स्नैप हो जाएँगे। फिर जब हम दुबारा run दबाएँगे, तो एलेक्स उन
          कमांड को निष्पादित करेगी जो हमारे वर्कस्पेस में ऊपर से नीचे तक जमाए गए हैं।
      11:
        text: यदि आप कभी किसी ब्लॉक को हटाना चाहते हैं, तो बस उसे स्टैक से वापस टूलबॉक्स
          में ड्रैग करें।
      12:
        text: 'आपके परिवर्तनों को पहले जैसा करने के लिए और जैसे स्तर की शुरूआत हुई
          थी वहाँ पहुँचने के लिए, वर्कस्पेस के ऊपरी दाएँ कोने में Start Over बटन का
          उपयोग करें। एक और बात: क्या टर्न ब्लॉक पर आप छोटे त्रिकोण देख रहे हैं? जब
          भी आप इन त्रिकोणों को देखेंगे, तो उसका मतलब होगा कि आप अलग विकल्प चुन सकते
          हैं। आइए कोडिंग शुरू करते हैं!'
    mc_repeat:
      1:
        text: मैं लिडिया विंटर्स, मोजांग की ब्रांड डाइरेक्टर हूँ और हमने Minecraft
          नामक एक छोटा गेम तैयार किया है।
      2:
        text: Minecraft में मेरा पसंदीदा काम है छान-बीन करना। मुझे गुफ़ाओं में साहसिक
          यात्रा और वहाँ की चीजों का पता लगाना अच्छा लगता है। एक ऐसे व्यक्ति के रूप
          में जो प्रोग्रामर नहीं है, मैं वाक़ई Minecraft पाठ देखने और स्वयं कुछ कोडिंग
          सीखने के लिए बेहद उत्साहित हूँ।
      3:
        text: अंतिम स्तर के लिए बहुत सारे moveForward(); ब्लॉक की ज़रूरत है। आसान
          होगा यदि हम बस कंप्यूटर से moveForward(); कमांड को चार या पाँच बार निष्पादित
          करने के लिए कह सकें। सौभाग्य से हमारे लिए कंप्यूटर दोहराव वाले लूप्स के
          साथ अच्छी तरह काम करते हैं।
      4:
        text: Minecraft का निर्माण करते समय, हम नई दुनिया के निर्माण हेतु सभी प्रारंभिक
          सामग्रियों को रखने के लिए दोहराव (repeat) लूप्स का उपयोग करते हैं। वे हज़ारों
          और लाखों ब्लॉक्स हैं। हम छोटे कार्यों के लिए भी लूप्स का उपयोग करते हैं,
          उदाहरण के लिए एलेक्स के पैर चलते समय आगे पीछे सरकते हैं। दोहराव (Repeat)
          लूप्स प्रोग्रामिंग का शक्तिशाली हिस्सा हैं।
      5:
        text: रात होने वाली है इसलिए अगले कुछ स्तरों में, हम सुरक्षित रहने के लिए
          घर का निर्माण करेंगे। इसे आसानी से करने के लिए हम repeat ब्लॉक का उपयोग
          करेंगे।
      6:
        text: हमारे घर की दीवार बनाने के लिए, हम या तो एलेक्स को moveForward(); कह
          सकते हैं और चार बार तख्तियाँ रख सकते हैं या हम उसे moveForward(); कह सकते
          हैं और एक तख्ती रख सकते हैं, फिर उसके द्वारा कई बार यह काम करवाने के लिए
          हम इस कमांड को लेकर repeat ब्लॉक का उपयोग कर सकते हैं। अब हम repeat ब्लॉक
          पर क्लिक करेंगे और उसे बताएँगे कि कितनी बार हम चाहते हैं कि वह यह काम करें।
          अब आइए हम रात होने से पहले हमारा घर बनाएँ! मज़े लें।
    mc_if_statements:
      1:
        text: अब हम if स्टेटमेंट के बारे में जानेंगे। If स्टेटमेंट प्रोग्राम सीखने
          का मूलभूत हिस्सा है। वे निर्णय लेने में  कंप्यूटर की मदद करते हैं।
      2:
        text: मेरे फ़ोन सहित, सभी कंप्यूटर if स्टेटमेंट का उपयोग करते हैं। उदाहरण
          के लिए, जब मैं अपने फ़ोन को अनलॉक करती हूँ, तो वह कोई कोड चलाता है जो कहता
          है कि अगर मैं पासवर्ड सही तरह दर्ज करूँ, तो फिर फ़ोन खुल जाएगा। अन्यथा,
          वह त्रुटि संदेश दिखाता है।
      3:
        text: आप स्टीव और एलिस को उनके द्वारा दुनिया में देखी जा रही चीज़ों पर प्रतिक्रिया
          करने के लिए अपने कोड में if स्टेटमेंट का उपयोग कर सकते हैं। उदाहरण के लिए,
          यदि उनके सामने कोई चट्टान हो, तो वे बाएँ घूम सकते हैं। या सामने पेड़ आ जाए
          तो वे दाएँ मुड़ सकते हैं।
      4:
        text: इस मामले में, हम नहीं चाहते कि लावा में गिरें। लावा के लिए योजना बनाना
          आसान है। हम उसे स्क्रीन पर देख सकते हैं। लेकिन जो पत्थर के नीचे हमें नज़र
          न आए उस लावे का क्या होगा?
      5:
        text: पत्थर को खोदने के बाद, हमें आगे बढ़ने से पहले यह देखना होगा कि कहीं
          उस जगह पर कोई लावा तो नहीं है। यदि वहाँ लावा है, तो हम आगे बढ़ने से पहले
          अपने किरदार के सामने एक पत्थर रखना चाहेंगे। उस प्रकार हम सुरक्षित रूप से
          आगे बढ़ सकते हैं। अधिक खनन का समय हो चला है! और अपने क़दम सँभालने के लिए
          if स्टेटमेंट का उपयोग करना न भूलें।
    mc_congrats_share:
      1:
        text: बधाई! आपने अभी कंप्यूटर विज्ञान के कुछ बुनियादी निर्माण ब्लॉक्स के बारे
          में सीखा।
      2:
        text: अब आप स्वयं अपनी रचना के निर्माण के लिए इन ब्लॉक्स का उपयोग कर सकते
          हैं। कोई और निर्देश और हल करने के लिए पहेलियाँ बाक़ी नहीं हैं। आप मनपसंद
          कुछ भी तैयार कर सकते हैं।  आप चुन सकते हैं।
      3:
        text: "[students talking] अब असल में करने की बारी है। कतरन। मैंने टॉर्च से
          L तैयार किया है। मैंने भोज की तख्तियों से A बनाया है। यह कारगर रहा, इसने
          काम किया। हमने ऊन से एक घर बनाया!"
      4:
        text: जब आपकी रचना पूरी हो जाए, तो अपने दोस्तों के साथ साझा करने के लिए लिंक
          पाने हेतु share का चयन करें। मज़ा लें!
    mc_congrats_no_share:
      1:
        text: बधाई! आपने अभी कंप्यूटर विज्ञान के कुछ बुनियादी निर्माण ब्लॉक्स के बारे
          में सीखा।
      2:
        text: अब आप स्वयं अपनी रचना के निर्माण के लिए इन ब्लॉक्स का उपयोग कर सकते
          हैं। कोई और निर्देश और हल करने के लिए पहेलियाँ बाक़ी नहीं हैं। आप मनपसंद
          कुछ भी तैयार कर सकते हैं।  आप चुन सकते हैं।
      3:
        text: "[students talking] अब असल में करने की बारी है। कतरन। मैंने टॉर्च से
          L तैयार किया है। मैंने भोज की तख्तियों से A बनाया है। यह कारगर रहा, इसने
          काम किया। हमने ऊन से एक घर बनाया!"
      4:
        text: अब आप जो चाहे वह बना सकते हैं। मज़ा लें!
    gumball_intro:
      1:
        text: यदि आप अपनी खुद की गेम बनाना चाहते हैं, तो यह बहुत ही आसान है। आपको
          बस प्रोग्रामिंग के मूल सिद्धांतों को जरूरत है और आप उस गेम को खेलना शुरू
          कर सकते हैं, जो आपने बनाई है।
      2:
        text: क्या आपके पास पसंदीदा वीडियो गेम है? हम उसी तरह से गेम्स बनने के प्रति
          पहला कदम उठाने वाले हैं, जैसे प्ले लैब में किया जाता है। अच्छी गेम्स की
          कोई कहानी होती है और प्रत्येक कहानी के अभिनेता होते हैं। अभिनेता बोलने,
          मूव करने और एक-दूसरे से संवाद करने जैसी चीज़ें करते हैं। हो सकता है, गेम
          के नियमों के आधार पर वे अंक भी हासिल करें। आज, हम यह सीखेंगे कि ये सारी
          चीज़ें कैसे करनी हैं, एक के बाद एक, मज़ेदार अभिनेताओं के साथ। फिर हम शुरू
          से गेम बनाएंगे, जिसे फोन पर साझा किया और खेला जा सकता है।
      3:
        text: आज, हम यह सीखेंगे कि ये सारी चीज़ें कैसे करनी हैं, एक के बाद एक, मज़ेदार
          अभिनेताओं के साथ और फिर हम शुरू से गेम बनाएंगे, जिसे फोन पर साझा किया और
          खेला जा सकता है।
      4:
        text: आपकी स्क्रीन तीन मुख्य भागों में बंटी हुई है। बाईं ओर, गेमस्पेस है,
          जहां आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश नीचे लिखे गए हैं।
      5:
        text: यह मध्य का क्षेत्र टूल बॉक्स है और इनमें से प्रत्येक ब्लॉक कोड का भाग
          है।
      6:
        text: दाईं ओर सफ़ेद जगह वर्क स्पेस कहलाता है और यहीं हम अपना प्रोग्राम तैयार
          करेंगे।
      7:
        text: शुरुआत करने के लिए, आपको अपने ब्लॉक्स को संतरी जब चलाया जाए ब्लॉक से
          जोड़ने की जरूरत होगी। आप कई ब्लॉक्स को तब तक बाहर खींचकर साथ जोड़ सकते हैं,
          जब तक कि आप पीली लाइन न देख लें और फिर वे एक साथ जुड़ जाएंगे।
      8:
        text: इस पहली पहेली में, हम "बोलें” ब्लॉक को जब चलाया जाए ब्लॉक में जोड़कर
          और आपका संदेश टाइप करके अभिनेता को कुछ बोलने के लिए सक्रिय करेंगे। जब आप
          अपने ब्लॉक स्थापित कर लें, तो यह देखने के लिए चलाएं बटन को हिट करें कि आपने
          क्या प्रोग्राम किया है।
      9:
        text: शुरुआत करें और अंत तक, आप हर प्रकार के खिलाड़ियों के साथ अपनी खुद की
          गेम बनाने में सक्षम हो जाएंगे, जो संवाद कर सकते हैं, अंक हासिल कर सकते हैं
          और एक-दूसरे को गायब कर सकते हैं। यह सब आप पर निर्भर है!
    gumball_events:
      1:
        text: अब हम कुछ ऐसी चीज़ों के बारे में सीखने वाले हैं, जिनका उपयोग सभी गेम
          प्रोग्रामर रोजाना करते हैं। इन्हें इवेंट्स कहा जाता है। इवेंट आपके प्रोग्राम
          को सुनने के लिए कहती है कि कोई चीज़ कब घटित होनी है और फिर जब वह चीज़ घटित
          होती है, तो यह एक क्रिया का प्रदर्शन करती है।
      2:
        text: इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, या ऊपर या नीचे तीर वाली कुंजी
          या स्क्रीन पर थपथपाने को सुनना।
      3:
        text: यहां, हम अभिनेता को कुछ कहने के लिए सक्रिय करने वाले हैं, जब खिलाड़ी
          उस पर क्लिक करता है। हम जब क्लिक किया गया हो ब्लॉक का उपयोग करेंगे और इसमें
          "बोलें” ब्लॉक जोड़ेंगे। जब खिलाड़ी क्लिक करता है, तो इस ब्लॉक से जुड़ी हर
          चीज़ का प्रदर्शन होगा।
      4:
        text: जब तीर ब्लॉक्स भी मौजूद हैं। यदि आप इनके साथ मूव करें ब्लॉक्स को जोड़ते
          हैं, तो आप अपने अभिनेताओं को तीर वाली कुंजियों के साथ ऊपर, नीचे, बाएं या
          दाएं मूव करना शुरू कर सकते हैं। थोड़ी-थोड़ी करके, आपकी गेम और संवादात्मक
          होती जाती है।
    gumball_repeat:
      1:
        text: क्या आप सोच सकते हैं कि अगर आपको किसी चीज़ को हमेशा और कभी दोहराना पड़ता
          तो? आशापूर्वक आपको कभी ऐसा नहीं करना पड़ेगा क्योंकि कंप्यूटर चीज़ें दोहराने
          में बहुत ही निपुण हैं।
      2:
        text: यह हमेशा दोहराएं ब्लॉक है। इसके अंदर की कोई भी चीज़ गेम में हमेशा होगी।
          यदि हम खिलाड़ी द्वारा बिना कुछ किए किसी अभिनेता से बार-बार कुछ करवाना चाहें,
          तो हम उन ब्लॉक्स को हमेशा दोहराएं ब्लॉक के अंदर रखेंगे।
      3:
        text: इस अगली पहेली में, हमारा लक्ष्य लगातार काम करने में अभिनेता की मदद करना
          है। यह सीखने से कि दोहराएं कमांड्स कैसे काम करती हैं, बाद का आपका बहुत-सा
          समय बचेगा, जब आप अपनी खुद की गेम बनाएंगे।
    iceage_intro:
      1:
        text: यदि आप अपनी खुद की गेम बनाना चाहते हैं, तो यह बहुत ही आसान है। आपको
          बस प्रोग्रामिंग के मूल सिद्धांतों को जरूरत है और आप उस गेम को खेलना शुरू
          कर सकते हैं, जो आपने बनाई है।
      2:
        text: क्या आपके पास पसंदीदा वीडियो गेम है? हम उसी तरह से गेम्स बनने के प्रति
          पहला कदम उठाने वाले हैं, जैसे प्ले लैब में किया जाता है। अच्छी गेम्स की
          कोई कहानी होती है और प्रत्येक कहानी के अभिनेता होते हैं। अभिनेता बोलने,
          मूव करने और एक-दूसरे से संवाद करने जैसी चीज़ें करते हैं। हो सकता है, गेम
          के नियमों के आधार पर वे अंक भी हासिल करें। आज, हम यह सीखेंगे कि ये सारी
          चीज़ें कैसे करनी हैं, एक के बाद एक, मज़ेदार अभिनेताओं के साथ। फिर हम शुरू
          से गेम बनाएंगे, जिसे फोन पर साझा किया और खेला जा सकता है।
      3:
        text: आज, हम यह सीखेंगे कि ये सारी चीज़ें कैसे करनी हैं, एक के बाद एक, मज़ेदार
          अभिनेताओं के साथ और फिर हम शुरू से गेम बनाएंगे, जिसे फोन पर साझा किया और
          खेला जा सकता है।
      4:
        text: आपकी स्क्रीन तीन मुख्य भागों में बंटी हुई है। बाईं ओर, गेमस्पेस है,
          जहां आपका प्रोग्राम चलेगा। प्रत्येक स्तर के लिए निर्देश नीचे लिखे गए हैं।
      5:
        text: यह मध्य का क्षेत्र टूल बॉक्स है और इनमें से प्रत्येक ब्लॉक कोड का भाग
          है।
      6:
        text: दाईं ओर सफ़ेद जगह वर्क स्पेस कहलाता है और यहीं हम अपना प्रोग्राम तैयार
          करेंगे।
      7:
        text: शुरुआत करने के लिए, आपको अपने ब्लॉक्स को संतरी जब चलाया जाए ब्लॉक से
          जोड़ने की जरूरत होगी। आप कई ब्लॉक्स को तब तक बाहर खींचकर साथ जोड़ सकते हैं,
          जब तक कि आप पीली लाइन न देख लें और फिर वे एक साथ जुड़ जाएंगे।
      8:
        text: इस पहली पहेली में, हम "बोलें” ब्लॉक को जब चलाया जाए ब्लॉक में जोड़कर
          और आपका संदेश टाइप करके अभिनेता को कुछ बोलने के लिए सक्रिय करेंगे। जब आप
          अपने ब्लॉक स्थापित कर लें, तो यह देखने के लिए चलाएं बटन को हिट करें कि आपने
          क्या प्रोग्राम किया है।
      9:
        text: शुरुआत करें और अंत तक, आप हर प्रकार के खिलाड़ियों के साथ अपनी खुद की
          गेम बनाने में सक्षम हो जाएंगे, जो संवाद कर सकते हैं, अंक हासिल कर सकते हैं
          और एक-दूसरे को गायब कर सकते हैं। यह सब आप पर निर्भर है!
    iceage_events:
      1:
        text: अब हम कुछ ऐसी चीज़ों के बारे में सीखने वाले हैं, जिनका उपयोग सभी गेम
          प्रोग्रामर रोजाना करते हैं। इन्हें इवेंट्स कहा जाता है। इवेंट आपके प्रोग्राम
          को सुनने के लिए कहती है कि कोई चीज़ कब घटित होनी है और फिर जब वह चीज़ घटित
          होती है, तो यह एक क्रिया का प्रदर्शन करती है।
      2:
        text: इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, या ऊपर या नीचे तीर वाली कुंजी
          या स्क्रीन पर थपथपाने को सुनना।
      3:
        text: यहां, हम अभिनेता को कुछ कहने के लिए सक्रिय करने वाले हैं, जब खिलाड़ी
          उस पर क्लिक करता है। हम जब क्लिक किया गया हो ब्लॉक का उपयोग करेंगे और इसमें
          "बोलें” ब्लॉक जोड़ेंगे। जब खिलाड़ी क्लिक करता है, तो इस ब्लॉक से जुड़ी हर
          चीज़ का प्रदर्शन होगा।
      4:
        text: जब तीर ब्लॉक्स भी मौजूद हैं। यदि आप इनके साथ मूव करें ब्लॉक्स को जोड़ते
          हैं, तो आप अपने अभिनेताओं को तीर वाली कुंजियों के साथ ऊपर, नीचे, बाएं या
          दाएं मूव करना शुरू कर सकते हैं। थोड़ी-थोड़ी करके, आपकी गेम और संवादात्मक
          होती जाती है।
    iceage_repeat:
      1:
        text: क्या आप सोच सकते हैं कि अगर आपको किसी चीज़ को हमेशा और कभी दोहराना पड़ता
          तो? आशापूर्वक आपको कभी ऐसा नहीं करना पड़ेगा क्योंकि कंप्यूटर चीज़ें दोहराने
          में बहुत ही निपुण हैं।
      2:
        text: यह हमेशा दोहराएं ब्लॉक है। इसके अंदर की कोई भी चीज़ गेम में हमेशा होगी।
          यदि हम खिलाड़ी द्वारा बिना कुछ किए किसी अभिनेता से बार-बार कुछ करवाना चाहें,
          तो हम उन ब्लॉक्स को हमेशा दोहराएं ब्लॉक के अंदर रखेंगे।
      3:
        text: इस अगली पहेली में, हमारा लक्ष्य लगातार काम करने में अभिनेता की मदद करना
          है। यह सीखने से कि दोहराएं कमांड्स कैसे काम करती हैं, बाद का आपका बहुत-सा
          समय बचेगा, जब आप अपनी खुद की गेम बनाएंगे।
    mc_2016_intro:
      1:
        text: नमस्कार, मेरा नाम जेन्स (Jens) है और मैं Minecraft में प्रमुख क्रिएटिव
          डिज़ाइनर हूं। अगले घंटे में, आप अपनी खुद की Minecraft गेम बनाएंगे। यह Minecraft
          जैसी दिखाई देती है लेकिन दुनिया रुक गई है। भेड़ मूव नहीं कर रही है, चूज़े
          अंडे नहीं दे रहे हैं और ज़ोम्हीज स्थिर खड़े हैं। Minecraft दुनिया को सक्रिय
          करने के लिए कोड जोड़ना आप पर निर्भर है।
      2:
        text: 'मेरा नाम मेलिसा (Melissa) है और मैं Minecraft में उपयोगकर्ता अन्वेषक
          हूं। इसमें मुझे सबसे दिलचस्प यह लगता है कि लोग प्रौद्योगिकी के साथ कैसे
          सोचते और संवाद करते हैं और इसलिए मनोविज्ञान: जिस प्रकार से लोग सोचते और
          व्यवहार करते हैं, के साथ कंप्यूटर इंजीनियरिंग को साथ में जोड़ने का यह काम
          मेरे लिए सर्वोत्तम काम है।'
      3:
        text: आप देखेंगे कि आपकी स्क्रीन तीन मुख्य भागों में बंटी हुई है। 1) बाईं
          ओर Minecraft गेम है। इस समय दुनिया अवरुद्ध है लेकिन हम उसे कोड के साथ ठीक
          करने वाले हैं।
      4:
        text: 2) यह मध्य का क्षेत्र टूलबॉक्स है। इनमें से प्रत्येक ब्लॉक एक कमांड
          है, जिसे चूज़े, भेड़ और अन्य Minecraft जंतु समझ सकते हैं।
      5:
        text: 3) दाईं ओर सफेद स्थान को वर्कस्पेस कहा जाता है और यह वही स्थान है, जहां
          हम अपना प्रोग्राम बनाएंगे।
      6:
        text: यदि आप भूल जाते हैं कि क्या करना है, प्रत्येक स्तर के लिए निर्देश सबसे
          ऊपर दिए गए हैं।
      7:
        text: शुरुआत करने के लिए, हम चूज़े को प्रोग्राम करने वाले हैं। आइए "आगे की
          ओर मूव करें” कमांड को वर्कस्पेस में खींचें। जब मैं "चलाएं" को हिट करती हूं
          तो चूज़ा एक कदम आगे की ओर मूव करता है। आगे जाने के लिए, मैं पहले "आगे की
          ओर मूव करें” ब्लॉक के नीचे दूसरे "आगे की ओर मूव करें” ब्लॉक को तब तक खींचूंगी,
          जब तक कि हाइलाइट प्रकट नहीं होता। फिर में इसे छोड़ दूंगी और दो ब्लॉक्स साथ
          में जुड़ जाएंदे। यदि मैं दुबारा "चलाएं" को हिट करती हूं, तो चूज़ा दो कदम
          चलता है।
      8:
        text: यदि आप कभी भी कोई ब्लॉक मिटाना चाहें, तो इसे बस ढेर से हटाएं और इसे
          वापस टूल बॉक्स में खींच दें।
      9:
        text: जब आप "चलाएं” को हिट कर लें, तो आप कभी भी गेम को पुनः सेट करने और शुरू
          करने के लिए "पुनः सेट करें" बटन को हिट कर सकते हैं। अब, Minecraft का बिल्कुल
          अपना खुद का संस्करण बनाने की आपकी बारी है। आनंद लें!
    mc_2016_loops:
      1:
        text: नमस्कार, मैं लीज़ा (Lisa) हूं और मैं Minecraft में सॉफ्टवेयर विकासकार
          हूं और मैं गेम में कुछ जानवरों और शत्रुओं पर काम करती हूं। एक जानवर, जिस
          पर मैंने काम किया है, वो औसीलट है। मैंने उस भाग पर काम किया है, जहां आप
          औसीलट को अपनी खुद की बिल्ली के अनुकूल बनाने के लिए मछली का खाना खिलाते हैं।
      2:
        text: मनुष्य के तौर पर, यदि हमें एक ही चीज़ लगातार बार-बार करनी पड़े तो हम
          बहुत ऊब जाते हैं। लेकिन कंप्यूटर अरबों, यहां तक कि खरबों बार बिना ऊबे एक
          ही चीज़ कर सकते हैं। इस दोहराव को लूप कहा जाता है और Minecraft में प्रत्येक
          जंतु लूप्स का उपयोग करता है।
      3:
        text: पहले, हमने स्क्रीन के चारों ओर मूव करने के लिए चूज़ा लिया था लेकिन वह
          रुक गया था। Minecraft में, चूज़े हमेशा और कभी भी इधर-उधर घूमते रहते हैं।
          आइए हमारे चूज़ों को हमेशा इधर-उधर घूमना जारी रखने के लिए अपने टूलबॉक्स में
          से "हमेशा करें” लूप का उपयोग करें। लूप्स की क्षमता आपका बहुत-सा समय बचाती
          है और जब आप Minecraft का अपना खुद का संस्करण बनाते हैं तो हर प्रकार के स्पष्ट
          विकल्पों खोल देती है।
    mc_2016_events:
      1:
        text: इस अगले स्तर में, आप स्टीव (Steve) या अलेक्स (Alex) को चुन सकते हैं।
          ऊपर, नीचे, बाएं और दाएं मूव करने के लिए अपने कीबोर्ड पर तीर वाले बटनों को
          दबाएं। अब आप जिस भी स्तर पर चाहें, मूव कर सकते हैं। किसी जंतु का उपयोग करने
          के लिए, इसकी तरफ चलें, इसके चेहरे को मोड़ें, और स्पेसबार को दबाएं।
      2:
        text: यदि आप टच स्क्रीन का उपयोग कर रहे हैं, तो चारों ओर मूव करने के लिए ऊपर,
          नीचे, बाएं और स्वाइप करें। फिर अपने सामने वाली आइटम का उपयोग करने के लिए
          गेम को थपथपाएं।
      3:
        text: लेकिन जब आप इसका उपयोग करते हैं तो क्या होता है? Minecraft, भेड़ ऊन
          छोड़ती है, जब उसे कतरते हैं, गाय भागती है, जब उसे हिट करते हैं, और क्रीपर्स
          फटेंगे, जब आप उनके पास जाएंगे। ये प्रतिक्रियाएं इवेंट्स के कारण घटित होती
          हैं। इवेंट्स आपके प्रोग्राम को सुनने या प्रतीक्षा करने के लिए कहती है कि
          कोई चीज़ कब घटित होनी है। जब वह चीज़ घटित होती है, तो यह एक क्रिया का प्रदर्शन
          करती है।
      4:
        text: अब तक, आपने एक इवेंट का उपयोग किया है। "जब विस्तार किया गया हो" स्लॉट
          चलता है, जब आपका जंतु बनाया जाता है या जब गेम शुरू होती है। अगले कुछ स्तरों
          पर, आपके पास "जब छुआ गया हो", जो तब चलती है, जब आप जंतु को छूते हैं, या
          "जब उपयोग किया गया हो", जो तब चलती है, जब आप जंतु का उपयोग करते हैं, जैसी
          इवेंट्स के लिए नए स्लॉट होंगे। या, जब धूप आती है, तो आप अपने ज़ोम्बी को
          अदृश्य करना चाहते हैं, तो उसे "जब दिन हो” स्लॉट में रखें।
    mc_2016_spawn:
      1:
        text: गेम्स में, विस्तार करने का मतलब वही है, जैसे बनाना। इस स्तर में, आइए
          जब धूप चली जाती है तो ज़ोम्बीज को विस्तार करने के लिए सक्रिय करें। ऐसा करने
          के लिए हम "जब रात हो” ब्लॉक का उपयोग करेंगे।
      2:
        text: चूंकि हम चाहते हैं कि ज़ोम्बीज रात में विस्तार करें तो हम "जब रात हो”
          ब्लॉक के नीचे "ज़ोम्बी का विस्तार करें" ब्लॉक को जोड़ेंगे। जैसे ही उनका
          विस्चार होता है, प्रत्येक ज़ोम्बी कोड चलाएगा, जिसे आप उनके "जब विस्तार किया
          गया हो” स्लॉट में रखते हैं। ज़ोम्बीज का विस्तार करने का आनंद लें!
    mc_2016_congrats:
      1:
        text: बधाई हो! आपने Minecraft को जीवंत करने के लिए कंप्यूटर साइंस की कमांड्स
          सीख ली हैं। अब आप विकासकार हैं। आपने सभी कमांड्स और सभी जंतुओं को अनलॉक
          कर दिया है। आपने चयन कर लिया है कि आगे क्या होगा।
      2:
        text: जब आप अपनी गेम बना लें, तो लिंक प्राप्त करने के लिए साझा करें का चयन
          करें, जिसे इसे अपने दोस्तों के साझा कर सकते हैं या अपनी गेम को अपने फोन
          पर खेल सकते हैं। आनंद लें! मैं Minecraft के आपके संस्करण को खेलने की प्रतीक्षा
          में हूं।
    applab_intro_welcome:
      1:
        text: मेरा नाम मेलनी (Mei'lani) है। मैं code.org में इंटर्न हूं और मैं कंप्यूटर
          साइंस की छात्रा भी हूं। मुझे कंप्यूटर साइंस पसंद है क्योंकि यह बहुत ही रचनात्मक
          है। मैं समस्या हल करती हूं। मैं हर चीज़ का फंक्शन बनाती हूं, जैसे मैं इसे
          बनाना चाहती हूं। साथ ही, मैं डिज़ाइनर भी बनने वाली हूं। मैं कलाकार बनती
          हूं और हर चीज़ के रचनात्मक पक्ष का चयन करती हूं।
      2:
        text: ऐप लैब के साथ आपके अपने ऐप्स बनाना आसान है! चाहे आप कोडिंग में नए हैं
          या आपको थोड़ा अनुभ है। ऐप लैब नए ऐप्स बनाने और अपने दोस्तों के साथ साझा
          करने का शानदार टूल है।
      3:
        text: यह ऐप लैब है। बाईं ओर आपका ऐप है। दाईं ओर कोड है, जो इसे चलाएगा। आप
          टूलबॉक्स में ब्लॉक्स को खींचकर अपना प्रोग्राम बनाते हैं। शुरू करने के लिए,
          आपके पास 'setProperty’ नामक केवल एक ब्लॉक होगा।
      4:
        text: प्रॉपर्टी सेट करें ब्लॉक आपकी स्क्रीन पर मूल तत्वों के रूप को बदल देता
          है। जैसे बटन, लेबल या यहां तक कि खुद स्क्रीन को। सबसे पहले आपको यह निर्धारित
          करना होगा कि आप कौन-सा मूल तत्व बदलना चाहते हैं। यदि आप अपने ऐप में किसी
          मूल तत्व पर जाते हैं तो आप यहां नाम या ID देख सकते हैं। फिर पहले ड्रॉप डाउन
          से उस ID को चुनें।
      5:
        text: मूल तत्वों की बहुत-सी प्रॉपर्टीज होती हैं, जिन्हें आप बदल सकते हैं,
          जैसे उनके टेक्सट का रंग, पृष्ठभूमि का रंग या फोंट आकार। आप पूरी सूची देख
          सकते हैं और चुन सकते हैं कि आप दूसरे ड्रॉप डाउन में कौन-सी प्रॉपर्टी को
          बदलना चाहते हैं।
      6:
        text: अंतिम ड्रॉप डाउन वहां होता है, जहां आप वह मूल्य लिखेंगे, जो जिसे आप
          उपयोग करना चाहते हैं। ब्लॉक आपके लिए सुझाव देगा। लेकिन आप कभी भी खुद अलग-अलग
          रंगों या संख्याओं में टाइप कर सकते हैं।
      7:
        text: जब आप कर लें, तो ब्लॉक थोड़ा वाक्य:'बटन 1 की पृष्ठभूमि को हरे में सेट
          करें’ की तरह पढ़ता है। वे बदलाव देखने के लिए चलाएं को हिट करें, जो आप कोड
          में कर रहे हैं। यदि आप पुनः सेट करते हैं, तो आप अपने ऐप के बारे में अन्य
          चीज़ें बदलने के लिए और ब्लॉक्स खींच सकते हैं। जैसे टेक्सट!
      8:
        text: इस ट्यूटोरियल के लिए, हम ब्लॉक मोड में काम करेंगे लेकिन ऐप लैब टेक्सट
          में काम करने का भी समर्थन करता है।
      9:
        text: दोनों तरीकों में ही आप वेब की भाषा, JavaScript में प्रोग्रामिंग कर रहे
          होंगे। प्रत्येक स्तर का एक लक्ष्य, निर्देश और चित्र होता है कि आप क्या बनाना
          चाहते हैं।
      10:
        text: यदि आप अटक जाते हैं, तो इस तस्वीर पर क्लिक करें और यह आपको सही रूप में
          दिखाएगी कि स्तर कैसे पूरा करना है। लेकिन पहले देखें कि क्या आप खुद यह कर
          सकते हैं।
      11:
        text: जब आप इस स्तर के लिए लक्ष्य को पूरा कर लें, तो आगे बढ़ने के लिए समाप्त
          करें पर क्लिक करें। बस हो गया! अगले स्तर पर जाने के लिए संतरी "जारी रखें”
          बटन को हिट करें और ऐप लैप के साथ अपना एडवेंचर शुरू करें!
    applab_intro_events:
      1:
        text: ऐप्स बहुत ही बढ़िया होते हैं क्योंकि ये आपका अपना व्यवसाय शुरू करने
          जैसा है, मेरा मतलब है, आप ज़मीन पर मौजूद हर चीज़ को डिज़ाइन करने लगते हैं,
          आप सब कुछ व्यवस्थित कर लेते हैं, और आप इस कार्य के मालिक होते हैं, जो आपने
          कोड के साथ तैयार किया है।
      2:
        text: अब जबकि आप अपने ऐप का रूप बदल सकते हैं, तो आइए इवेंट्स के लिए प्रतिक्रिया
          करके इसे संवादात्मक बनाएं! इवेंट्स उपयोगकर्ता की क्रियाएं होती हैं, जैसे
          बटन क्लिक करना, मेन्यु के माध्यम से स्क्रॉल करना या तस्वीर पर होवर करना।
          संवादात्मक ऐप्स को इवेंट्स के लिए प्रतिक्रिया करने के तरीकों की जरूरत होती
          है, जैसे, जब में इस बटन को क्लिक करूं तो ध्वनि प्ले करना। ऐप लैब में ऐसा
          करने के लिए, आपको 'onEvent’ नामक नए ब्लॉक का उपयोग करने की जरूरत होगी।
      3:
        text: यह प्रोग्राम स्क्रीन को नीले में सेट करता है। जब मैं इस बटन पर क्लिक
          करूं तो मैं स्क्रीन को हरे में बदलना चाहती हूं। सबसे पहले मुझे onEvent ब्लॉक
          में खींचने की जरूरत होगी। होवर करके, मुझे पता है कि बटन की ID "bigButton"
          है इसलिए मैं पहले ड्रॉप-डाउन में उसे चुनूंगी।
      4:
        text: इसके बाद मैं इवेंट का प्रकार चुनूंगी। बहुत-से विकल्प हैं, जिनमें से
          आप चुन सकते हैं ल्किन इस समय मैं नियमित पुराने क्लिक के रूप में छोड़ दूंगी।
      5:
        text: 'अंत में मैं उस इवेंट के अंदर कोड जोड़ूंगी, जो स्क्रीन की पृष्ठभूमि
          का रंग बदल देगा। आप इस ब्लॉक को वाक्य: "उस इवेंट पर जो बटन क्लिक किया जाता
          है, वह इस पूरे कोड को चलाता है” की तरह पढ़ सकते हैं।'
      6:
        text: आइए इसका परीक्षण करें। onEvent के बाहर ब्लॉक्स अभी भी तुरंत चलते हैं,
          इसलिए स्क्रीन नीली शुरू होती है।
      7:
        text: जब मैं बिग बटन पर क्लिक करती हूं तो मेरी onEvent के अंदर वाला कोड चलता
          है और मेरी स्क्रीन हरी हो जाती है।
      8:
        text: यदि आप इवेंट के बाद और चीज़ें बदलना चाहते हैं, जैसे स्क्रीन पर टेक्सट
          तो onEvent में और कोड जोड़ें
      9:
        text: अपने प्रोग्राम और इवेंट्स के लिए प्रतिक्रिया करने हेतु सक्रिय करने के
          लिए, और onEvent जोड़ें। सुनिश्चित करें कि उन्हें एक-दूसरे के अंदर न रखें।
          अब खुद के लिए इसे आजमाने का समय आ गया है। आनंद लें!
    applab_intro_sounds:
      1:
        text: इसके बाद आप अपने ऐप में चित्र और ध्वनियां जोड़ना सीखेंगे। आइए ध्वनि
          विकल्पों को देखकर शुरुआत करें।
      2:
        text: टूल बॉक्स में, आप "playSound” नामक नया ब्लॉक पाएंगे। इसे वर्कस्पेस में
          खींचें। आप ड्रॉप-डाउन को क्लिक करके फिर "चुनें” पर क्लिक करके प्ले करने
          के लिए ध्वनि चुन सकते हैं।
      3:
        text: यहां से आप या तो अपने कंप्यूटर में से ध्वनि फाइल अपलोड कर सकते हैं,
          या ध्वनि लाइब्रेरी में से ध्वनि खोज सकते हैं। ध्वनि लाइब्रेरी में बहुत सी
          अलग-अलग श्रेणियां हैं, जैसे इंस्ट्रूमेंट्स, पृष्ठभूमि संगीत या जानवर।
      4:
        text: जब आपको मनचाही ध्वनि मिल जाए, तो "चुनें” पर क्लिक करें। जब यह ब्लॉक
          चलता है, तो यह आपके द्वारा चुनी ध्वनि प्ले करेगा।
      5:
        text: अपने मूल तत्वों में चित्र जोड़ने के लिए, आप setProperty का उपयोग कर
          सकते हैं। दूसरे ड्रॉप-डाउन में चित्र प्रॉपर्टी चुनें
      6:
        text: फिर तीसरे ड्रॉप-डाउन में से "चुनें" को चुनें।
      7:
        text: यहां से आप अपने कंप्यूटर में से चित्र अपलोड कर सकते हैं या आइकन लाइब्रेरी
          में आइकनों की विशाल लाइब्रेरी में खोज सकते हैं।
      8:
        text: कोड में वापस, आप अपने आइकन के आइकन रंग को बदलने के लिए "setProperty"
          ब्लॉक का उपयोग कर सकते हैं। जब आप अपने आइकन के उपयोग करने के लिए चित्र चुन
          लें तो यह देखने के लिए "चलाएं” पर क्लिक करें कि यह कैसा दिखता है।
      9:
        text: बस हो गया! अब आप अपने ऐप्स को और भी मज़ेदार और गतिशील बनाने के लिए चित्र
          और ध्वनियां जोड़ना शुरू कर सकते हैं।
    applab_intro_designmode:
      1:
        text: अपने खुद के ऐप्स बनाने के लिए, आपको शुरू से स्क्रीन और मूल तत्व डिज़ाइन
          करने की जरूरत है। ऐप लैब में डिज़ाइन मोड में इसे करना बहुत ही आसान है।
      2:
        text: डिज़ाइन मोड में जान के लिए अपने ऐप के ऊपर मौजूद स्विच का उपयोग करें।
      3:
        text: आप स्क्रीन पर खींचकर नए मूल तत्व जोड़ सकते हैं। आप उन्हें विभिन्न स्थानों
          पर चारों ओर मूव कर सकते हैं और नीचे दाएं कोने तक खींचकर उनका आकार बदल सकते
          हैं।
      4:
        text: किसी मूल तत्व की प्रॉपर्टीज को बदलने के लिए, दाएं दिए गए नियंत्रणों
          का उपयोग करें। उदाहरण के लिए, इस बटन के टेक्सट, रंग और फोंट आकार को बदलना
          बहुत ही आसान है।
      5:
        text: जब आप अपनी स्क्रीन में नया मूल तत्व जोड़ते हैं तो यह बटन1 जैसी जैनरिक
          ID प्राप्त करेगी। इस बटन की ID को "rightButton” जैसी किसी और अर्थपूर्ण चीज़
          में बदलना बढ़िया विचार है। ताकि जब आप प्रोग्राम पर जाएं तो आपको पता हो कि
          यह कौन-सी है।
      6:
        text: यदि आप गलती से अपने ऐप को कोई मूल तत्व जोड़ लेते हैं, तो इसे बाहर खींचें
          या मिटाएं को हिट करें।
      7:
        text: आप स्क्रीन के मूल तत्व में खींचकर अपने ऐप में पूरी तरह से नई स्क्रीनें
          जोड़ सकते हैं।
      8:
        text: ऊपर ड्रॉप-डाउन से आप तेज़ी से उन स्क्रीनों के बीच आगे-पीछे अदला बदली
          कर सकते हैं, जो आप बनाते हैं।
      9:
        text: आपके ऐप के अंदर, आपको इन सभी स्क्रीनों के बीच अदला बदली करने के लिए
          एक रास्ते की जरूरत होगी, इसलिए setScreen ब्लॉक को टूलबॉक्स में जोड़ा गया
          है। बटन के क्लिक पर स्क्रीनों को बदलने के लिए "onEvent” ब्लॉक के अंदर "setScreen”
          का उपयोग करें।
      10:
        text: अगले कुछेक स्तरों में, आप एकल प्रोजेक्ट पर काम करेंगे। सबसे पहले आप
          एक बटन जोड़ेंगे, फिर आप नई स्क्रीन जोड़ेंगे और अंत में आप कोड लिखेंगे ताकि
          बटन नई स्क्रीन की अदला बदली कर सके।
    applab_intro_share:
      1:
        text: अब जबकि आपने बटन, ध्वनियां, चित्र, टेक्सट और नई स्क्रीनें जोड़ना जैसे
          ऐप लेब की मूल सिद्धांतों में से कुछ को सीख लिया है, तो आप हर प्रकार के ऐप
          बना सकते हैं।
      2:
        text: अगले स्तर में आप वह ऐप पाएंगे, जिसे आपने अभी बनाना समाप्त किया है। थोड़ी-सी
          रचनात्मकता के साथ, आप इसे अपने दोस्तों के लिए व्यक्तित्व संबंधी प्रश्नोत्तरी
          में, एक ग्रीटिंग कार्ड में बदल सकते हैं, जिसे आप अपने परिवार के साथ साझा
          कर सकते हैं या अपनी-खुद की-एडवेंचर गेम-चुनें। ये सभी ऐप्स उन कौशलों का संयोजन
          हैं, जो आप पहले ही सीख चुके हैं और मुझे पूरा यकीन है कि आप और भी बनाएंगे।
      3:
        text: जब आप अपना ऐप बना लें तो आप यह देखने के लिए कि यह कैसा दिखता है, आसानी
          से इसे अपने फोन पर भेज सकते हैं। "साझा करें” पर क्लिक करें और यहां अपना
          फोन नंबर दर्ज करें।
      4:
        text: आपको एक टेक्सट संदेश मिलेगा, जो आपको बताएगा कि आप तुरंत अपने ऐप को खोलें।
      5:
        text: आप अन्य लोगों के खेलने और साझा करने के लिए सोशल मीडिया पर भी अपने ऐप
          का लिंक साझा कर सकते हैं या code.org की पब्लिक गैलरी में इसे पोस्ट कर सकते
          हैं।
      6:
        text: ऐप लैब क्या कर सकता है, आपने उसके ऊपरी भाग को समझ लिया है। पूरा ऐप लैब
          अधिक उन्नत उपयोगकर्ता संवाद, नए स्क्रीन मूल तत्व और निर्मित डेटाबेस पेश
          करता है ताकि आप जल्दी से पूरी विशेषताओं वाले ऐप बना सकें। यदि आप आगे जारी
          रखना चाहते हैं तो "code.org/applab" पर आप पूरा टूल और बहुत-सी युक्तियां
          पाएंगे।
      7:
        text: शामिल होने के लिए धन्यवाद। अब अपना पहला ऐप बनाएं औस साझा करें व ऐप लैब
          के साथ ऐप्स बनाते रहें!
    mc_2017_agent_intro:
      1:
        text: 'स्टेसी: स्टैम्पी, लिज़ी, प्रेस्टोन - मेरे साथ जुड़ने के लिए धन्यवाद।
          मैं आपको यह ढलुआ पठार दिखाना चाहती हूं। मेरे विचार में आप इसे पसंद करेंगे!'
      2:
        text: रुको - रास्ते में सुराख है! (चिल्ला रही है)
      3:
        text: 'सभी ठीक हैं न? स्टैम्पी: आह, मुझे समस्या दिख रही है। देखो! रास्ते में
          सुराख है। स्टेसी: सच में, स्टैम्पी? लिज़ी: शायद इसे ठीक करने के लिए हमें
          ब्लॉक्स एकत्र करने चाहिएं। प्रेस्टोन: आइए दौड़ लगाएं। ऊपर से वापस आने वाला
          पहला व्यक्ति जीतेगा। स्टेसी: ठीक है, अपनी-अपनी जगह खड़े हों, तैयार रहें,
          जाएं! ठीक है, मैं इसमें से कुछ टेराकोटा एकत्र करूंगी। दोस्तो, रुको, मैं
          खोद नहीं सकती! प्रेस्टोन: यही मेरी स्थिति है। लिज़ी: मैं भी नहीं कर सकती।
          स्टेसी: ठीक है, बड़ी अजीब सी बात है। स्टैम्पी, क्या तुम खोद सकती हो? स्टैम्पी:
          मैं खोद नहीं सकती! स्टेसी: ठीक है, सब शांत रहो। स्टैम्पी: क्या गेम टूट गई
          है? स्टेसी: अगर टूट गई है, तो इसे ठीक कैसे करना है? लिज़ी: मुझे पता नहीं।
          स्टैम्पी: क्या किसी को पता है कि Minecraft कोड कैसे लिखना है?'
      4:
        text: "(पूफ) प्रेस्टोन: वह क्या है? स्टैम्पी: मैंने इनमें में कोई पहले कभी
          नहीं देखा। लिज़ी: यह बहुत ही प्यारा है! स्टेसी: क्या यह...क्या यह अनुकूल
          बनाने योग्य है? प्रेस्टोन: तो क्या चल रहा है? किसी को असली दुनिया में जाकर
          इसे ठीक करना होगा।  सभी: इसे नहीं! स्टेसी: इ.. नहीं- (गहरी सांस लेती है।)
          ठीक है, मैं जाऊंगी।"
      5:
        text: ओह, ठीक है, हेलो, अब मैं असली दुनिया में हूं। मैं Minecraft के ऑफिस
          ढूंढने जा रही हूं।
      6:
        text: लेकिन मुझे तुम्हारी मदद की जरूरत पड़ेगी। ट्यूटोरियल करना शुरू करें,
          सीखना शुरू करें कि कोड कैसे करना है, और मैं कुछेक स्तरों के बाद तुम लोगों
          से मिलूंगी, ठीक है न? मुझे शुभकामनाएं दें! मुझे लगता है यह वह रास्ता है।
          ओह! कैकटस! मैं ठीक हूं!
      7:
        text: आवर ऑफ़ कोड चुनौती को पूरा करने के लिए, आपको एजेंट को प्रोग्राम करने
          के लिए कोड लिखना होगा। आप अपने रास्ते की किसी भी बाधाओं को दूर करने के लिए
          Agent के साथ मिलकर काम करेंगे, ताकि आप वे वस्तुएं चुन सकें, जिनकी आपको अपने
          सफर के लिए जरूरत है। केवल Agent ही ब्लॉक्स को रख व अलग कर सकता है, और केवल
          आप वस्तुएं एकत्र कर सकते हैं। आपकी स्क्रीन को तीन मुख्य भागों में बांटा
          गया है। बाईं ओर Minecraft है।
      8:
        text: मध्य का क्षेत्र कमांड्स वाला टूलबॉक्स है, जिन्हें Agent समझ सकता है।
      9:
        text: दाईं ओर, वर्कस्पेस है। यह वही स्थान है, जहां आप Agent को नियंत्रित करने
          के लिए अपना प्रोग्राम बनाने हेतु कमांड्स को क्रमबद्ध कर सकते हैं।
      10:
        text: Agent चल, मुड़ सकता है और दाब प्लेटों को सक्रिय कर सकता है। यह ब्लॉक्स
          को नष्ट और ब्लॉक्स रख भी सकता है। जब यह इन माइनक्राफ्ट रेल्स की तरह ब्लॉक्स
          रखता है, तो यह इसे खुद के नीचे रखता है।
      11:
        text: यदि आप भूल जाते हैं कि क्या करना है, प्रत्येक स्तर के लिए निर्देश सबसे
          ऊपर दिए गए हैं।
      12:
        text: यदि आप दुबारा प्रयास करना चाहते हैं, तो आप हर चीज़ को वहां से पुनः सेट
          करने के लिए नीले पुनः सेट करें बटन को हिट कर सकते हैं, जहां से यह शुरू हुआ
          था। यदि आपको कोड के किसी ब्लॉक को मिटाने की जरूरत है, तो इसे अपने वर्कस्पेस
          में से टूलबॉक्स में खींचें। Agent को मूव करते रहने के लिए चलाएं बटन को हिट
          करना याद रखें। ठीक है, आगे बढ़ें और पहले कुछ स्तर आजमाएं। शुभकामनाएं!
    mc_2017_repeat:
      1:
        text: 'स्टैम्पी: मैं जानने को उत्सुक हूं कि स्टेसी कहां तक पहुंची?'
      2:
        text: 'स्टेसी: वाह, मुझे लगता है कि मैं सही जगह पर हूं। यह मज़ेदार है!'
      3:
        text: मुझे लगता है कि मैं वापस Minecraft में आ गई हूं! हेलो, आप कैसे हैं?
          हेलो?
      4:
        text: 'ओह, वहां एक क्रीपर है। आपको कुछ नहीं करना है, है न? कैटी: स्टेसी? स्टेसी:
          नमस्कार, कैटी? कैटी: हां, Minecraft में तुम्हारा स्वागत है!'
      5:
        text: 'स्टेसी: यह मज़ेदार है। तो तुम यहां विकासकार के तौर पर रोज़ाना काम करती
          हो, है न? कैटी: हां, यह काफी मज़ेदार है। मैं Minecraft की मार्केटप्लेस टीम
          में विकासकार हूं। स्टेसी: तुम्हें कितनी कोडिंग भाषाएं आती हैं? कैटी: मेरे
          कैरियर में, मैंने संभवतया एक दर्जन पर काम किया है। स्टेसी: एक दर्जन? कैटी:
          हां। स्टेसी: तो अब, शायद तुम्हें इस छोटे से गोलेम लड़के के बारे में कुछ
          नहीं पता, जो खुद को Agent कहता है? कैटी: हम वे कार्य करने में Agent का उपयोग
          करते हैं, जिसे स्टीव या अलेक्स नहीं कर पाते, जैसे लावा में से गुजरना। स्टेसी:
          खैर, मैं सीखना चाहती हूं कि कोड कैसे किया जाता है, और वे सीखना चाहते हैं
          कि कोड कैसे किया जाता है, तो जब आप सीखते हैं तो सबसे पहले कौन-सी ऐसी चीज़
          है, जिससे जानने की आपको जरूरत होती है?'
      6:
        text: 'कैटी: आपको यह सीखने की जरूरत होती है कि लूप्स का उपयोग कैसे करना है।
          लूप्स वे चीज़ें हैं, जिन्हें विकासकार कंप्यूटर को कमांड्स देने के लिए लिखते
          हैं, जिन्हें बार-बार चलाया जा सकता है। स्टेसी: समझ गई, तो मेरे ख्याल से
          यही वो चीज़ है, जो आगे स्तरों में आएगी, तो आगे बढ़ो और लूप्स को आजमाओ।'
      7:
        text: अगले स्तर में, आप Agent को रास्ते पर मूव करने के लिए लूप का उपयोग कर
          सकते हैं। दोहराएं ब्लॉक को वर्कस्पेस में खींचें और आगे की ओर मूव करें ब्लॉक
          को दोहराएं ब्लॉक के अंदर रखें। यह कंप्यूटर को वर्कस्पेस में ब्लॉक्स के पूरे
          समूह को खींचे बिना लगातार कई बार एक ही चीज़ करने के लिए कहता है। आप दोहराएं
          ब्लॉक में संख्या डालकर चयन कर सकते हैं कि कितनी बार दोहराना है।
      8:
        text: आप दोहराएं ब्लॉक में मोड़ और कई कमांड्स भी रख सकते हैं, लेकिन अभी के
          लिए Agent को कुछ कदम आगे की ओर मूव करने के लिए एक दोहराव का उपयोग करने का
          प्रयास करें। याद रखें, यदि आप पहेली पर अटक जाएं तो आप कभी भी नीले पुनः सेट
          करें बटन को हिट करके दुबारा प्रयास कर सकते हैं।
      9:
        text: 'यदि आप कैटी की तरह मज़ेदार काम करने के बारे में सोच रहे हैं, तो आगे
          बढ़ें और जब आप प्रत्येक स्तर पूरा कर लें तो कोड दिखाएं बटन पर क्लिक करें।
          वह असल में आपको Javascript कोड दिखाने वाला है, जो कैटी जैसा कोई व्यक्ति
          तब उपयोग करता है, जब वह वास्तव में Minecraft को प्रोग्राम कर रही होती है।
          कैटी: हां, सभी को शुभकामनाएं!'
    mc_2017_functions:
      1:
        text: 'प्रेस्टोन: मैं डींगें हांकने की कोशिश नहीं कर रहा हूं, लेकिन मैं पार्कर
          में काफी निपुण हूं। लिज़ी: आइए अब सो जाएं, तो जब स्टेसी वापस आए तो दिन होगा।'
      2:
        text: 'स्टेसी: तो, साथियो, मैं Minecraft के ऑफिसिज से वापस आ गई हूं और मुझे
          लगता है कि मैं जानती हूं कि मेरी गेम में मुझे समस्या हो रही है, उसे कैसे
          हल करना है। मेरे ख्याल से हम फंक्शन का उपयोग कर सकते हैं। मैं इसे खोलती
          हूं।'
      3:
        text: तो फंक्शन किसी निश्चित कार्य को पूरा करने के लिए निर्देशों का विशिष्ट
          सेट है, जैसे कोई व्यंजन विधि। अगले कुछेक स्तरों में, आपकी फंक्शन्स तक पहुंच
          होगी, जिन्हें आप पहेलियां हल करने के लिए उपयोग कर सकते हैं।
      4:
        text: जब यह वर्कस्पेस में हो तो यह देखने के लिए कि यह क्या करता है, फंक्शन
          में कोड को देखें।
      5:
        text: उसके बाद, टूलबॉक्स में उस नाम का ब्लॉक ढूंढें और इसे टूल्बॉक्स में से
          जब चलाएं ब्लॉक में खींचें।
      6:
        text: याद रखें, आप हर बार एक ही फंक्शन का उपयोग कर सकते हैं, जिसकी आपको कुछ
          करने के लिए निर्देशों का वही सेट चलाने हेतु जरूरत हो, जैसे पुल बनाना। शुभकामनाएं,
          मुझे पता है, आप यह कर सकते हैं!
    mc_2017_congratulations:
      1:
        text: 'प्रेस्टोन: बधाई हो!'
      2:
        text: 'लिज़ी: बधाई हो!'
      3:
        text: 'स्टैम्पी: बधाई हो, तुमने यह पूरा कर लिया!'
      4:
        text: 'स्टेसी: बधाई हो, साथियो, तुम सबने बहुत अच्छा किया! अब जबकि आपने आवर
          ऑफ़ कोड पूरा कर लिया है, तो आप Minecraft में कोडिंग शुरू कर सकते हैं। तुमने
          लूप्स, फंक्शन्स के बारे में और यह सीखा कि सॉफ्टवेयर Agent क्या करता है।'
      5:
        text: अब, फ्री प्ले स्तर की बारी है, जहां आप विकासकार हैं। पड़ताल करने, खुदाई
          करने और निर्माण करने के लिए अपना खुद का फंक्शन लिखने के लिए किसी भी शेष
          समय का उपयोग करें।
      6:
        text: 'आप वह कोड ले सकते हैं, जो आप Minecraft: Education Edition में अपनी
          Minecraft दुनिया में इस स्तर में लिखते हैं। ''समाप्त करें’ पर क्लिक करें
          और अपनी दुनिया में उपयोग करने के लिए लिंक प्राप्त करने हेतु निर्देशों का
          अनुसरण करें। Agent के साथ कोडिंग करना जारी रखें। आनंद लें, बहुत बढ़िया!'
      7:
        text: 'स्टेसी: मैं वापस आ गई हूं! तो, साथियो, यह Agent है! मैं तुम्हें दिखाती
          हूं कि यह क्या कर सकता है। देखो, यह कर रहा है! मैंने इसे इन टेरा कोटा के
          ब्लॉक्स में से सीढ़ियां बनाने के लिए कहा है, अब हम यहां से बाहर निकलने में
          इसका उपयोग कर सकते हैं। साथियो, केवल सीढ़ी ही नहीं, मैं Agent को जो चाहे,
          करने के लिए कह सकती हूं, और यह मेरे लिए वैसा ही करेगा।'
      8:
        text: 'स्टैम्पी: तुमने वह कैसे किया? स्टेसी: यह बहुत ही आसान था। मैंने बस
          कोड का उपयोग किया!'
    csd_concept_how_computers_work:
      1:
        text: 'आप यहां भी देखें, कंप्यूटर दुनिया बदल रहे हैं। चाहे वे हमारे डेस्कटॉप
          पर हो, हमारे घरों में, हमारी जेबों में, या और कहीं भी हों। लेकिन जबकि हम
          में से अधिकतर इस परिवर्तनकारी प्रौद्योगिकी का रोज़ाना उपयोग करते हैं, फिर
          भी हम अकसर पूछते हैं: "कंप्यूटर कैसे काम करते हैं?” इस श्रृंखला में, कौन-सी
          चीज़ कंप्यूटर को कंप्यूटर बनाती है, से शुरुआत करते हुए आप इस बारे में सीखेंगे
          कि कंप्यूटर वास्तव में कैसे काम करते हैं। फिर, आप इस पर नज़र डालेंगे कि
          विलक्षण गति पर ऑन एंड ऑफ जाते हुए छोटे-छोटे बिजली के सिगनलों का उपयोग करते
          हुए कंप्यूटर के अंदर जानकारी कैसे प्रदर्शित की जाती है।'
      2:
        text: उसके बाद, आप सीखेंगे कि कंप्यूटर किस प्रकार पूरी आभासी दुनिया का अनुकरण
          करने के लिए साधारण गणित से सब कुछ करने हेतु सर्किटों का उपयोग करते हैं।
          इसके बाद, आप कंप्यूटर के अलग-अलग भागों को ज़ूम आउट करके देखेंगे, जो वास्तव
          में उस पूरी जानकारी को इनपुट, आउटपुट और स्टोर करते हैं। अंत में, आप इस पर
          नज़र डालेंगे कि कोड वास्तव में क्या है और सॉफ्टवेयर किस प्रकार हार्डवेयर
          को नियंत्रित करता है। तो चाहे आपको उन डिवाइसों के बारे में जानने की उत्सुक्ता
          हो, जो आप रोज़ाना उपयोग करते हैं या आप भविष्य के अन्वेषणों को डिज़ाइन करना
          चाहते हों, पहला स्टेप यह सीखना है कि कंप्यूटर कैसे काम करते हैं।
    csd_concept_computer:
      1:
        text: मेरा नाम मे-ली खो (May-Li Khoe) है और मैं डिज़ाइनर और अन्वेषक हूं। मैंने
          Apple में कुछ चीज़ें डिज़ाइन की हैं और अब मैं बच्चों के उपयोग के लिए उत्पाद
          डिज़ाइन करती हूं ताकि स्कूल में उनके लिए समय बिताना आसान हो जाए। मेरे अन्य
          कार्यों में डी. जे. और डांसिंग शामिल हैं।
      2:
        text: कंप्यूटर हर जगह हैं! वे लोगों की जेबों में हैं, वे लोगों की कारों में
          हैं, लोग इन्हें अपनी कलाईयों पर रखते हैं। वे इस समय आपके पीठ वाले थैले में
          हो सकते हैं। लेकिन कौन-सी चीज़ कंप्यूटर को कंप्यूटर बनाती है? कैसे भी कौन-सी
          चीज़ कंप्यूटर को कंप्यूटर बनाती है? और यह कैसे काम करता है?
      3:
        text: नमस्कार, मैं नैट (Nat) हूं! मैं Xbox के मूल डिज़ाइनरों में से एक थी।
          मैं तब से कंप्यूटरों के साथ काम कर रही हूं, जब मैं शायद सात साल की थी और
          अब मैं कल्पित वास्तविकता पर काम कर रही हूं। मनुष्य होने के नाते, हमने हमेशा
          समस्याओं को हल करने में हमारी मदद के लिए टूल्स बनाए हैं। टूल्स जैसे एक पहिए
          की ठेला गाड़ी, हथौड़ा, या प्रिंटिंग प्रेस या ट्रैक्टर-ट्राली।
      4:
        text: इन सभी आविष्कारों ने हाथ के काम में हमारी मदद की। समय बीतने पर, लोगों
          ने यह सोचना शुरू किया कि क्या हमारे द्वारा किए जाने वाले दिमागी काम में
          हमारी मदद के लिए मशीन को डिज़ाइन किया और बनाया जा सकता है, जैसे समीकरणों
          को हल करना या आकाश में तारों का पता लगाना। मिट्टी और पत्थर जैसी भौतिक चीज़ें
          इधर-उधर करने या उन्हें कुशलतापूर्वक उपयोग करने से ज्यादा, इन मशीनों की जरूरत
          जानकारी का कुशलतापूर्वक उपयोग करने के लिए होगी। जब कंप्यूटर साइंस के प्रथम
          अन्वेषकों ने पड़ताल की कि चिंतनशील मशीन कैसे डिज़ाइन की जाए, तो उन्हें अहसास
          हुआ कि इसे चार अलग-अलग कार्य करने की जरूरत थी।
      5:
        text: इसे इनपुट लेने, इसे संसाधित करने के लिए जानकारी स्टोर करने और फिर परिणामों
          के आउटपुट की जरूरत होगी। अब यह बहुत ही आसान लगता है, लेकिन ये चार चीज़ें
          सभी कंप्यूटरों के लिए समान हैं। यही चीज़ है, जो कंप्यूटर को कंप्यूटर बनाती
          है।
      6:
        text: कंप्यूटरों की शुरुआत बुनियादी कैल्कुलेटरों के तौर पर हुई थी, जो उस समय
          पहले से ही काफी मज़ेदार था, और वे केवल संख्याओं का ही कुशलतापूर्वक उपयोग
          करते थे। लेकिन अब हम एक-दूसरे से बात करने के लिए उनका उपयोग कर सकते हैं,
          हम गेम्स खेलने, रोबोट्स को नियंत्रित करने और कई मज़ेदार चीज़ें करने के लिए
          उनका उपयोग कर सकते हैं, जिसकी आपने शायद ही कल्पना की हो। आधुनिक कंप्यूटर
          उन टेढ़ी-मेढ़ी पुरानी चीज़ों की तरह दिखाई नहीं देते लेकिन वे अभी भी वही
          चार चीज़ें करते हैं।
      7:
        text: सबसे पहले, हम इनपुट के बारे में बात करेंगे। आप कंप्यूटरों को बता सकते
          हैं कि कीबोर्ड के साथ क्या करना है, आप उन्हें बता सकते हैं कि माउस, माइक्रोफोन,
          कैमरे के साथ क्या करना है। ये सभी अलग-अलग इनपुट कंप्यूटर को जानकारी देते
          हैं, जो बाद में मेमरी में स्टोर की जाती है।
      8:
        text: कंप्यूटर का प्रोसेसर मेमरी से जानकारी लेता है। यह इसका कुशलतापूर्वक
          उपयोग करता है या इसे कलन विधि का उपयोग करते हुए बदल देता है, जो कमांड्स
          की एक श्रृंखला है। और फिर यह संसाधित जानकारी को दुबारा मेमरी में स्टोर करने
          के लिए वापस भेज देता है। यह तब तक ऐसा करता रहता है, जब तक कि संसाधित जानकारी
          आउटपुट के लिए तैयार न हो जाए।
      9:
        text: कंप्यूटर जानकारी को किस प्रकार आउटपुट करता है, यह इस पर निर्भर करता
          है कि कंप्यूटर किसलिए डिज़ाइन किया गया है। कंप्यूटर डिस्प्ले टेक्सट, फोटो,
          वीडियो, या संवादात्मक गेम्स दिखा सकता है -- यहां तक कि कल्पित वास्तविकता
          भी! कंप्यूटर के आउटपुट में रोबोट को नियंत्रित करने के लिए सिगनल भी शामिल
          हो सकते हैं।
      10:
        text: और कौन जानता है कि कल के कंप्यूटर कैसे होंगे? मुझे आशा है कि आपको यह
          निर्धारित करने में मदद मिलेगी कि आप कल के कंप्यूटरों को कैसा देखना चाहते
          हैं। लेकिन सभी कंप्यूटरों में, उनके द्वारा उपयोग की जाने वाली अलग-अलग प्रकार
          की प्रौद्योगिकी पर विचार किए बिना, वे हमेशा वही चार चीज़ें करते हैं। वे
          जानकारी लेते हैं, वे डेटे के रूप में इसे स्टोर करते हैं, इसे संसाधित करते
          हैं और फिर वे परिणामों को आउटपुट करते हैं।
    csd_concept_binary_data:
      1:
        text: नमस्कार! मेरा नाम लिमोर फ्रीड (Limor Fried) है और मैं यहां Adafruit
          Industries में इंजीनियर हूं। यह वही स्थान है, जहां मैं इंजीनियरिंग और डिज़ाइन
          कार्य करती हीं और मैं फैशन व संगीत और प्रौद्योगिकी के लिए सर्किट डिज़ाइन
          करती हूं।
      2:
        text: मेरा नाम फेडरिको गोम्ज़ सौरेज़ (Federico Gomez Suarez) है और मैं Microsoft
          Hack for Good में सॉफ्टवेयर विकासकार हूं। मैं हमारे समय की कुछ बड़ी सामाजिक
          समस्याओं को हल करने में हमारी मदद के लिए प्रौद्योगिकी का उपयोग करने पर विचार
          करता हूं।
      3:
        text: आपने शायद सुना होगा कि कंप्यूटर इकाईयों और शून्य पर काम करते हैं। लेकिन
          असल में आज के समय में शायद ही कोई इन इकाईयों और शून्य से सीधे व्यवहार करता
          हो। लेकिन कंप्यूटर जिस प्रकार अंदर काम करते हैं, इकाईयां और शून्य उसमें
          बड़ी भूमिका निभाती हैं।
      4:
        text: कंप्यूटर के अंदर बिजली की तारें और सर्किट होते हैं, जो कंप्यूटर में
          सारी जानकारी रखते हैं। आप बिजली का उपयोग करते हुए जानकारी कैसे स्टोर या
          प्रदर्शित करते हैं?
      5:
        text: तो, यदि आपके पास सिंगल तार है, जिसमें से बिजली प्रवाहित हो रही है, तो
          सिगनल ऑन या ऑफ का हो सकता है। अर्थात् अधिक विकल्प नहीं हैं, लेकिन यह बहुत
          ही महत्वपूर्ण शुरुआत है। एक तार के साथ, हम केवल दो विकल्पों के साथ हां या
          नहीं, सही या गलत, एक या शून्य, या किसी और चीज़ को प्रदर्शित कर सकते हैं।
          सिंगल तार की इस ऑन/ऑफ स्थिति को बिट कहा जाता है और जानकारी का सबसे छोटा
          भाग होता है, जिसे कंप्यूटर स्टोर कर सकता है।
      6:
        text: 'यदि आप अधिक तारों का उपयोग करते हैं तो आप अधिक बिट्स प्राप्त करते हैं:
          अधिक इकाईयां और शून्य। अधिक बिट्स के साथ, आप अधिक जटिल जानकारी प्रदर्शित
          कर सकते हैं। लेकिन उसे समझने के लिए, हमें युग्मक अंक प्रणाली के बारे में
          सीखना होगा।'
      7:
        text: 'दशमलव अंक प्रणाली में, हमारे पास शून्य से नौ तक दस अंक होते हैं और
          इस प्रकार से हम सभी ने गिनना सीखा है। युग्मक अंक प्रणाली में, हमारे पास
          केवल दो अंक होते हैं: शून्य और एक। इन दो अंकों, से हम किसी भी संख्या तक
          गिन सकते हैं।'
      8:
        text: यह इस प्रकार काम करता है। दशमलव अंक प्रणाली में, जिससे हम सभी परिचित
          हैं, किसी अंक में प्रत्येक पोजीशन का अलग मूल्य होता है। 1 पोजीशन, 10 पोजीशन,
          100 पोजीशन आदि है। उदाहरण के लिए, 100 पोजीशन में 9, 900 है, प्रत्येक पोजीशन
          का भी एक मूल्य होता है। लेकिन हर बार 10 से गुणा करने की बजाय, हम 2 से गुणा
          करते हैं। इसलिए 1 पोजीशन, 2 पोजीशन, 4 पोजीशन, 8 पोजीशन आदि होती है। उदाहरण
          के लिए युग्मक में संख्या 9, 1001 है। मूल्य की गणना करने के लिए, हम 8 बार
          1 जोड़ते हैं, जमा 4 बार 0, जमा 2 बार 0, जमा 1 बार 1 आदि। कोई भी ऐसा गणित
          नहीं करता क्योंकि कंप्यूटर हमारे लिए ऐसा करते हैं। यह महत्वपूर्ण है कि किसी
          भी संख्या को केवल इकाईयों और शून्य के साथ या तारों के उस समूह से प्रदर्शित
          की जा सकती है, जो ऑन या ऑफ होती हैं। जितनी अधिक आप तारें उपयोग करेंगे, उतनी
          ही अधिक संख्याएं आप स्टोर कर सकते हैं। 8 तारों के साथ, आप 0 और 255 के बीच
          की संख्याएं स्टोर कर सकते हैं। वे 8 इकाईयां हैं। केवल 32 तारों के साथ, आप
          0 से लेकर 4 अरब तक की सभी संख्याएं स्टोर कर सकते हैं। युग्मक अंक प्रणाली
          का उपयोग करते हुए, आप अपनी पसंद की कोई भी संख्या प्रदर्शित कर सकते हैं।
      9:
        text: लेकिन जानकारी के अन्य प्रकारों के बारे में विचार करें? टेक्सट, चित्रों
          या ध्वनि की तरह? यह पाया जाता है कि इन सभी चीज़ों को भी संख्याओं के साथ
          प्रदर्शित किया जा सकता है। वर्णमाला में सभी अक्षरों के बारे में सोचें। आप
          प्रत्येक अक्षर के लिए एक संख्या असाइन कर सकते हैं। A हो सकता है 1, B हो
          सकता है 2 आदि। आप किसी भी शब्द या पैराग्राफ को संख्याओं के क्रम के रूप में
          प्रदर्शित कर सकते हैं। जैसा कि हमने देखा, इन संख्याओं को ऑन या ऑफ बिजली
          के सिगनलों के रूप में स्टोर किया जा सकता है। प्रत्येक शब्द, जिसे आप हर वेबपृष्ठ
          या अपने फोन पर देखते हैं, उसे इस तरह की प्रणाली का उपयोग करते हुए प्रदर्शित
          किया जाता है।
      10:
        text: अब, आइए फोटो, वीडियो और उन सभी ग्राफिक्स पर विचार करें, जो आप स्क्रीन
          पर देखते हैं।
      11:
        text: ये सभी चित्र पिक्सल्स नामक छोटी-छोटी बिंदियों से बने हैं और प्रत्येक
          पिक्लस का एक रंग होता है। प्रत्येक रंग को संख्याओं के साथ प्रदर्शित किया
          जा सकता है। जब आप विचार करते हैं तो आम चित्र में ये लाखों पिक्सल होते हैं
          और आम वीडियो प्रति सेकंड 30 चित्र दिखाता है। अब हम यहां बहुत-से डेटे के
          बारे में बात करेंगे।
      12:
        text: प्रत्येक ध्वनि मूल रूप से हवा में स्पंदनों की एक श्रृंखला है। स्पंदनों
          को तरंगरूप के तौर पर ग्राफिक से प्रदर्शित किया जा सकता है। इस तरंगरूप पर
          किसी भी बिंदु को संख्या से प्रदर्शित किया जा सकता है। साथ ही इस प्रकार से,
          किसी भी ध्वनि को संख्याओं की सीरीज में विभाजित किया जा सकता है। यदि आप उच्च
          किस्म की ध्वनि चाहते हैं, तो आप 32-बिट का ऑडियो या 8-बिट का ऑडियो चुनेंगे।
          अधिक बिट्स का मतलब है, संख्याओं की उच्च रेंज।
      13:
        text: जब हम कोड लिखने या अपना खुद का ऐप बनाने के लिए कंप्यूटर का उपयोग करते
          हैं, आप इन इकाईयों और शून्य के साथ सीधे व्यवहार नहीं कर रहे होते हैं। लेकिन
          आप चित्रों या ध्वनि या वीडियो के साथ व्यवहार कर रहे होंगे। इसलिए यदि आप
          यह समझना चाहते हैं कि कंप्यूटर अंदर कैसे काम करते हैं, तो यह सब इन साधारण
          इकाईयों और शून्य और उनके पीछे के सर्किटों में बिजली के सिगनलों से आता है।
    csd_concept_circuits_logic:
      1:
        text: सर्किटों के बारे में सबसे अच्छी बात, जिसका मैंने पता लगाया है, वो यह
          है कि सर्कुटरी एक कला रूप हो सकता है, जैसे यदि मेरे पास कोई रचनात्मक विचार
          हो, तो मैं सर्किट उपयोग करते हुए वह रचनात्मक विचार प्रकट कर सकता हूं। इसलिए
          यदि आपके पास विचार हैं, तो आप उन विचारों को सक्रिय करने के लिए प्रौद्योगिकी
          का उपयोग कर सकते हैं।
      2:
        text: कंप्यूटर का प्रत्येक इनपुट या आउटपुट प्रभावी रूप से जानकारी का प्रकार
          है, जिसे ऑन या ऑफ बिजली के सिगनलों या इकाईयों और शून्य से प्रदर्शित किया
          जा सकता है।
      3:
        text: इनपुट के रूप में प्राप्त जानकारी को संसाधित करने के लिए और जानकारी को
          आउटपुट करने के लिए, कंप्यूटर को इनपुट सिगनलों को संशोधित और संयोजित करने
          की जरूरत होती है। ऐसा करने के लिए, कंप्यूटर बिजली के लाखों छोटे-छोटे अवयवों
          का उपयोग करता है, जो सर्किट बनाने के लिए एक साथ आते हैं।
      4:
        text: आइए इस पर गहन नज़र डालें कि सर्किट जानकारी को किस प्रकार संशोधित और
          संसाधित कर सकते हैं, जिसे इकाईयों और शून्य में प्रदर्शित किया जाता है। यह
          बहुत ही साधारण सर्किट है। यह बिजली का सिगनल, ऑन या ऑफ लेता है और यह इसे
          उलट देता है। इसलिए यदि आप जो सिगनल देते हैं, वह 1 है, तो सर्किट आपको 0 देता
          है और यदि आप सर्किट को 0 देते हैं, तो यह आपको 1 देता है। जो सिगनल अंदर जाता
          है, वह उस सिगनल जैसा नहीं होता, जो बाहर आता है तो हम इसे सर्किट नहीं कहते
          हैं।
      5:
        text: अधिक जटिल सर्किट कई सिगनल लेकर और उन्हें जोड़कर आपको अलग परिणाम देते
          हैं। इस उदाहरण में, सर्किट बिजली के दो सिगनल लेगा, अब प्रत्येक 1 या 0 हो
          सकता है। यदि दोनों में से कोई भी सिगनल 1 आता है, तो परिणाम भी 0 होगा। यह
          सर्किट आपके केवल 1 देता है, यदि पहला सिगनल और दूसरा सिगनल दोनों 1 हैं, तो
          हम इसे सर्किट और कहते हैं।
      6:
        text: इस तरह के बहुत-से छोटे-छोटे सर्किट हैं, जो साधारण तार्किक गणनाएं करते
          हैं। इन सर्किटों को साथ में जोड़कर, हम अधिक जटिल सर्किट बना सकते हैं, जो
          अधिक जटिल गणनाएं करते हैं।
      7:
        text: उदाहरण के लिए, आप ऐसा सर्किट बना सकते हैं, जो 2 बिट्स को साथ में जोड़ता
          है, जिसे ऐडर कहा जाता है। यह सर्किट 2 अलग-अलग बिट्स लेता है, प्रत्येक 1
          या 0 होती है और जोड़ करने के लिए उन्हें साथ में जोड़ता है। जोड़ 0 जमा 0
          बराबर 0, 0 जमा 1 बराबर 1, या 1 जमा 1 बराबर 2 हो सकता है। आपको बाहर आने वाली
          दो तारों की जरूरत है क्योंकि यह जोड़ दर्शाने के लिए दो तक युग्मक अंक ले
          सकता है। जब आपके पास जानकारी के दो बिट्स जोड़ने के लिए सिंगल ऐडर हो, तो
          आप अधिक बड़ी संख्याओं को साथ में जोड़ने के लिए साइड-दर-साइड इन ऐडर सर्किटों
          को साथ गुणा कर सकते हैं।
      8:
        text: उदाहरण के लिए, देखें कि कैसे 8-बिट का ऐडर 25 और 50 की संख्याएं जोड़ता
          है। प्रत्येक संख्या को 8 बिट्स का उपयोग करते हुए प्रदर्शित किया जाता है,
          जिसके परिणामस्वरूप 16 अलग-अलग बिजली के सिगनल प्राप्त होते हैं, जो सर्किट
          में जाते हैं। 8-बिट के ऐडर के लिए सर्किट के अंदर बहुत-से छोटे-छोटे ऐडर होते
          हैं, जो साथ मिलकर जोड़ की गणना करते हैं।
      9:
        text: अलग-अलग बिजली के सर्किट घटा या गुणा जैसी अन्य सरल गणनाएं कर सकते हैं।
          दरअसल, वह पूरी जानकारी, जो आपका कंप्यूटर संसाधित करता है, बहुत-से छोटे-छोटे
          ऑपरेशन हैं, जिन्हें साथ जोड़ा जाता है। कंप्यूटर द्वारा किया जाने वाला हर
          एक ऑपरेशन इतना अधिक आसान होता है कि यह मनुष्य द्वारा किया जा सकता है, कंप्यूटरों
          के अंदर ये सर्किट बहुत ही ज्यादा तेज़ होते हैं।
      10:
        text: कुछ समय पहले, ये सर्किट बड़े और टेढ़े-मेढ़े होते थे और 8-बिट का ऐडर
          फ्रिज जितना बड़ा हो सकता था, और सरल गणना को करने में उन्हें कई मिनट लगते
          थे। आज, कंप्यूटर सर्किट सूक्ष्म आकार के होते हैं और बहुत ही ज्यादा तेज़
          हैं। छोटे कंप्यूटर भी सबसे तेज़ क्यों होते हैं? क्योंकि जितना छोटा सर्किट
          होता है, बिजली के सिगनल को उतनी ही कम दूरी तय करनी पड़ेगी। बिजली रोशनी की
          गति पर मूव करती है, इस कारण ही आधुनिक सर्किट प्रति सेकंड अरबों गणनाएं कर
          सकते हैं।
      11:
        text: तो चाहे आप गेम खेल रहे हों, वीडियो रिकॉर्ड कर रहे हों, या ब्रह्माण्ड
          का अन्वेषण कर रहे हों, आप सब कुछ संभवतया प्रौद्योगिकी के साथ कर सकते हैं,
          जो बहुत-सी जानकारी को बेहद तेज़ी से संसाधित करने के लिए आवश्यक है। इस पूरी
          जटिलता के नीचे बहुत-से छोटे-छोटे सर्किट होते हैं, जो युग्मक सिगनलों को वेबसाइटों,
          वीडियो, संगीत और गेम्स में बदलते हैं। ये सर्किट निदान करने और बीमारी का
          इलाज करने के लिए DNA को डीकोड करने में भी हमारी मदद कर सकते हैं। तो आप इन
          सभी सर्किटों के साथ क्या करना चाहेंगे?
    csd_concept_memory_cpu_input_output:
      1:
        text: नमस्कार, मेरा नाम मैडिसन मैक्सी (Madison Maxey) है। मेरी Loomia नामक
          कंपनी है और हम स्मार्ट कपड़ों और स्मार्ट सॉफ्ट सामान के उत्पादों के लिए
          स्मार्ट फैबरिक बनाने पर ध्यान केंद्रित करते हैं। जब टेक्सटाइल की बात आती
          है तो इसमें असीम संभावनाएं हैं।
      2:
        text: मेरा नाम डेनिएल ऐप्पलस्टोन (Danielle Applestone) है और मैं Othermachine
          Company की CEO हूं। हम डेस्कटॉप मिलिंग मशीन बनाते हैं। मिलिंग मशीन घूमने
          वाला कटिंग टूल लेती है और 3D ऑब्जेक्ट बनाने के लिए इसमें से सामग्री को मूव
          करती है।
      3:
        text: हुड के नीचे, सभी कंप्यूटर वही चार मूल चीज़ें करते हैं। वे जानकारी इनपुट
          करते हैं, जानकारी को स्टोर व संसाधित करते हैं और फिर जानकारी को आउटपुट करते
          हैं। इनमें से प्रत्येक को कंप्यूटर के अलग-अलग भाग द्वारा किया जाता है।
      4:
        text: इनपुट डिवाइसें होती हैं, जो बाहरी दुनिया से इनपुट लेती हैं और इसे युग्मक
          जानकारी में बदल देती हैं। इस जानकारी को स्टोर करने के लिए मेमरी होती है।
          सेंट्रल प्रोसेसिंग यूनिट होती है, जहां सभी गणनाएं की जाती हैं। और, अंत में,
          आउटपुट डिवाइसें होती हैं, जो जानकारी लेती हैं और इसे भौतिक आउटपुट में बदलती
          हैं।
      5:
        text: आइए पहले इनपुट के बारे में बात करें। कंप्यूटर अलग-अलग प्रकार के इनपुट
          ले सकते हैं, जैसे कंप्यूटर का कीबोर्ड, फोन का टचपैड, कैमरा, माइक्रोफोन या
          GPS आदि। लेकिन कार पर संवेदक, थर्मोस्टेट, या ड्रोन भी विभिन्न इनपुट डिवाइसें
          हैं।
      6:
        text: अब, आइए सरल उदाहरण पर नज़र डालें कि इनपुट कंप्यूटर के माध्यम से कैसे
          गुजरता है और आउटपुट बनता है। जब आप अपने कीबोर्ड पर कुंजी दबाते हैं - मान
          लें अक्षर "B", तो कीबोर्ड अक्षर को संख्या में बदल देता है। उस संख्या को
          युग्मक, इकाईयों या शून्य के रूप में कंप्यूटर में भेजा जाता है।
      7:
        text: इस संख्या से शुरू करते हुए, CPU गणना करता है कि अक्षर "B” को पिक्सल
          दर पिक्सल कैसे प्रदर्शित किया जाए। CPU मेमरी से कदम-दर-कदम निर्देश मांगता
          है, जो इसे बताती है कि अक्षर "B” कैसे चित्रित करना है। CPU इन निर्देशों
          को चलाता है और परिणामों को मेमरी में पिक्सल्स के रूप में स्टोर करता है।
      8:
        text: अंत में, यह पिक्सल जानकारी स्क्रीन को युग्मक में भेजी जाती है। स्क्रीन
          एक आउटपुट डिवाइस है, जो युग्मक सिगनलों को छोटी-छोटी रोशनियों और रंगों में
          बदलती है, जो वह बनाते हैं, जो आप देखते हैं।
      9:
        text: यह सब इतनी जल्दी हो जाता है कि यह तात्कालिक लगता है, लेकिन प्रत्येक
          अक्षर को प्रदर्शित करने के लिए कंप्यूटर आपकी उंगली द्वारा कुंजी के बिंदु
          को दबाने से शुरू करते हुए, हज़ारों निर्देश चलाता है।
      10:
        text: उस उदाहरण में, आउटपुट डिवाइस स्क्रीन थी, लेकिन आउटपुट के कई अलग-अलग
          प्रकार होते हैं, जो युग्मक सिगनल को कंप्यूटर से लेते हैं और भौतिक जगत में
          कुछ करते हैं। उदाहरण के लिए, कोई वक्ता ध्वनि प्ले करेगा, 3D प्रिंटर एक वस्तु
          प्रिंट करेगा। आउटपुट डिवाइसें भौतिक गति को भी नियंत्रित कर सकती हैं, जैसे
          रोबोटिक बाजू, कार की मोटर, मिलिंग मशीन का कटिंग टूल, जो मेरी कंपनी बनाती
          है। इनपुट और आउटपुट के नए प्रकारों से कंप्यूटर बिल्कुल नए तरीकों से दुनिया
          के साथ संवाद कर सकता है। यह गति और मेमरी व CPU के आकार में संशोधनों से संभव
          हुआ है।
      11:
        text: जितना जटिल कोई कार्य होता है और जितनी अधिक जानकारी इनपुट या आउटपुट होती
          है, कंप्यूटर को उतनी ही अधिक संसाधित पावर और मेमरी की जरूरत होती है। स्क्रीन
          पर अक्षर टाइप करना आसान हो सकता है लेकिन जटिल 3d ग्राफिक बनाने या हाई-डेफिनिशन
          की फिल्म रिकॉर्ड करने के लिए, आधुनिक कंप्यूटरों में अकसर वह सारी जानकारी
          संसाधित करने के लिए बहुत-से CPUs होते हैं और इसे स्टोर करने के लिए मेमरी
          के कई गीगाबाइट्स होते हैं।
      12:
        text: 'चाहे आप कंप्यूटर के साथ कुछ भी करना चाहें, प्रत्येक सिंगल क्रिया: भौतिक
          जगत से जानकारी इनपुट करने, उस जानकारी को स्टोर करने और संसाधिक करने और भौतिक
          जगत में वापस कुछ आउटपुट प्राप्त करने के बारे में होती है।'
    csd_concept_hardware_software:
      1:
        text: नमस्कार, मेरा नाम एरिका गोमेज़ (Erica Gomez) है और मैं Amazon.com में
          इंजीनियरिंग मैनेजर हूं। प्रौद्योगिकी में, विशेषकर Amazon में काम करने के
          बारे में सबसे अच्छी चीज़ यह है कि मैं काम पर रोज़ाना अपने कुत्ते को लाती
          हूं। मेरा काम यह सुनिश्चित करने में मदद करना है कि सॉफ्टवेयर रिलीज होता
          है और उसका काम है, मेरे डेस्क के नीचे ऊंघना और ज़ोर-ज़ोर से खर्राटे भरना।
      2:
        text: 'मेरा नाम जेरोम होल्मन (Jerome Holman) है और मैं Team Xbox में प्रोग्राम
          मैनेजर हूं और मेरा काम बहुत ही मज़ेदार है: आपको वे सभी गेम्स देने के लिए
          हार्डवेयर और सॉफ्टेयर को साथ लाना, जिन्हें आप अपने Xbox पर पसंद करते हैं।'
      3:
        text: जब आप किसी कंप्यूटिंग डिवाइस के अंदर देखते हैं तो आपको सर्किटों का गुच्छा,
          चिप्स, तारें, स्पीकर, प्लग, और इस तरह की अन्य चीज़ें दिखाई देती हैं। यह
          हार्डवेयर है।
      4:
        text: लेकिन सॉफ्टवेयर आपको दिखाई नहीं देता। सॉफ्टवेयर कंप्यूटर प्रोग्राम,
          कोड हैं, जो इस मशीन पर चल रहे हैं। सॉफ्टवेयर ऐप्स और गेम्स से लेकर वेबपृष्ठों
          और डेटा साइंस सॉफ्टवेयर तक कुछ भी हो सकता है, जिसे Amazon में मैं और मेरी
          टीमें यह समझने के लिए उपयोग करती हैं कि ग्राहक किस प्रकार व्यवहार करते हैं।
      5:
        text: लेकिन हार्डवेयर और सॉफ्टवेयर एक-दूसरे से कैसे संवाद करते हैं? आइए कंप्यूटर
          की सेंट्रल प्रोसेसिंग यूनिट या CPU पर विचार करना शुरू करें।
      6:
        text: CPU मास्टर चिप है, जो कंप्यूटर के सभी भागों को नियंत्रित करती है। CPU
          को विभिन्न चीज़ें करने की जरूरत होती है इसलिए इसके अंदर बहुत ही छोटे व साधारण
          भाग होते हैं, जो विशिष्ट कार्यों को संभालते हैं। साधारण गणित और तर्क करने
          के लिए इसमें सर्किट होते हैं। इसमें कंप्यूटर के विभिन्न भागों में जानकारी
          भेजने और प्राप्त करने के लिए अन्य सर्किट होते हैं।
      7:
        text: CPU का असली जादू यह है कि इसे कैसे पता चलता है कि कौन-से सर्किटों का
          उपयोग करना है और उन्हें कब उपयोग करना है। CPU साधारण कमांड्स प्राप्त करता
          है, जो इसे बताती हैं कि किसी विशेष काम को करने के लिए कौन-से सर्किट का उपयोग
          करना है। उदाहरण के लिए, "जोड़ें” कमांड किसी नई संख्या की गणना करने के लिए
          CPU को इसका बाहरी सर्किट उपयोग करने के लिए कहती है। और फिर "स्टोर करें”
          कमांड CPU को उस परिणाम को मेमरी में सुरक्षित करने के लिए अलग सर्किट का उपयोग
          करने के लिए कहती है
      8:
        text: बिल्कुल संख्याओं की तरह, ये सभी साधारण कमांड्स युग्मक इकाईयों या शून्य
          में या ऑन और ऑफ बिजली के सिगनलों में प्रदर्शित की जा सकती हैं। युग्मक कमांड्स
          मेमरी में स्टोर की जाती हैं और CPU उन्हें निकालता है और एक के बाद एक क्रम
          में कार्यान्वित करता है। दरअसल, कमांड्स का यह क्रम बहुत ही साधारण कंप्यूटर
          प्रोग्राम है।
      9:
        text: युग्मक कोड सॉफ्टवेयर का सबसे मूल रूप है और यह कंप्यूटर के पूरे हार्डवेयर
          को नियंत्रित करता है। इन दिनों, कोई भी युग्मक में सॉफ्टवेयर नहीं लिखता।
          यह अधिक समय लेता है।!
      10:
        text: आज, जो सॉफ्टवेयर हम लिखते हैं, काफी हद तक इस (Python), या इस (Ruby),
          या इस (Blockly) की तरह दिखाई देता है। इन जैसी प्रोग्रामिंग भाषाओं से आप
          किसी चीज़ में कमांड्स टाइप कर सकते हैं, जो काफी हद तक अंग्रेज़ी की तरह दिखाई
          देती हैं।
      11:
        text: स्क्रीन पर समकोण खींचने के लिए, आपको बस एक कमांड की जरूरत है। इस उच्च-स्तर
          की कमांड को सैंकड़ों, हज़ारों साधारण युग्मक कमांड्स में बदल दिया जाता है,
          जिन्हें CPU समझता है। सॉफ्टवेयर CPU को बताता है कि क्या करना है, लेकिन जब
          आप संगीत सुन रहे होते हैं, वेब ब्राउज कर रहे होते हैं और किसी दोस्त से चैटिंग
          कर रहे होते हैं, तो आपका कंप्यूटर एक बार में ही सॉफ्टवेयर के कई भागों को
          एक साथ चला रहा होता है।
      12:
        text: तो, किस प्रकार ये सभी प्रोग्राम पहली बार में ही कंप्यूटर पर सफल होते
          हैं, और किस प्रकार CPU उन सभी को एक ही बार में चला पाता है? यह जानने के
          लिए हम ऑपरेटिंग सिस्टम पर नज़र डालेंगे।
      13:
        text: कंप्यूटर का ऑपरेटिंग सिस्टम मास्टर प्रोग्राम है, जो इसे व्यवस्थित करता
          है कि सॉफ्टवेयर कंप्यूटर के हार्डवेयर का उपयोग करने की शुरुआत कैसे करता
          है। उदाहरण के लिए, मैंने Windows का ऑपरेटिंग सिस्टम बनाने में मदद की, जो
          अधिकतर निजी कंप्यूटरों पर चलता है।
      14:
        text: ऑपरेटिंग सिस्टम विशेष योग्यताओं वाला एक प्रोग्राम है, जो इसे कंप्यूटर
          पर अन्य सॉफ्टवेयर को नियंत्रित करने देता है। इससे आप नए प्रोग्रामों को अपने
          कंप्यूटर की मेमरी में लोड करके उन्हें इन्स्टॉल कर सकते हैं। यह निर्धारित
          करता है कि कब कोई प्रोग्राम सेंट्रल प्रोसेसिंग यूनिट द्वारा चलाया जाता है
          और वह प्रोग्राम कंप्यूटर की इनपुट और आउटपुट डिवाइसों तक पहुंच सकता है या
          नहीं। और जब आपको लगता है कि आपका कंप्यूटर एक बार में ही कई प्रोग्राम चला
          रहा है, तो असल में यह ऑपरेटिंग सिस्टम ही है, जो एक सेकंड की भिन्नों के लिए
          उस CPU को साझा करते हुए तेज़ी से प्रोग्रामों के बीच अदला बदली करता है।
      15:
        text: प्रत्येक कंप्यूटर के अंदर सॉफ्टवेयर को संभालने वाला एक ऑपरेटिंग सिस्टम
          होता है, जो कंप्यूटर के हार्डवेयर को नियंत्रित करता है।
      16:
        text: सॉफ्टवेयर साधारण युग्मक कोड से बनी कमांड्स की श्रृंखला है, और वह युग्मक
          कोड अरबों छोटे-छोटे सर्किटों के बीच में से प्रवाहित होने वाले बिजली के सिगनल
          हैं।
      17:
        text: कंप्यूटरों में हर तरह की मज़ेदार चीज़ें करने की क्षमता होती है। लेकिन
          एकमात्र चीज़, जो कंप्यूटर को स्मार्ट या उपयोगी बनाती है, वह आप हैं। जब आप
          कोड करना सीख जाते हैं तो आप जिस समस्या को हल करना चाहते हैं, उसे परिभाषित
          करना शुरू करते हैं और सॉफ्टवेयर लिखते हैं, जो उन विचारों को वास्तविकता में
          बदलता है।
    hoc_dance_warmup:
      1:
        text: 'कोड का समय | डांस पार्टी: तैयारी करें'
      2:
        text: नमस्कार! मेरा नाम मिराल कोतब (Miral Kotb) है और मैं डांसर, सॉफ्टवेयर
          डेवलेपर हूं और मैंने iLuminate तैयार किया है।
      3:
        text: तो, कंप्यूटर साइंस कई प्रकार से रचनात्मकता से संबंध रखती है। सचमुच,
          असीमित। मेरा मतलब है, जब आप सॉफ्टवेयर तैयार करने में सक्षम हों तो आप किसी
          भी चीज में विचार प्रस्तुत कर सकते हैं। मैं ऐसा हल्के सूट्स के साथ करता हूं।
          जब आपके पास सॉफ्टवेयर तैयार करने के लिए टूल्स हों तो ऐसा बहुत कुछ है, जो
          आप कर सकते हैं, और संभावनाएं सचमुच असीम हैं।
      4:
        text: अगले घंटे तक, आप अपनी खुद की डांस पार्टी को प्रोग्राम करके कंप्यूटर
          साइंस शुरू करने वाले हैं! हमने कुछ हिट संगीत और आपके साथ प्ले करने हेतु
          आपके लिए शानदार डांसरों की एक टीम को शामिल किया है।
      5:
        text: आप अलग-अलग- डांसर चुनने, उनके डांस मूव्स को बदलने, उन्हें संगीत के मुताबक
          प्रतिक्रिया करने और उन्हें संवादात्मक बनाने के लिए कोड के ब्लॉक्स का उपयोग
          करेंगे।
      6:
        text: आप देखेंगे कि आपकी स्क्रीन तीन मुख्य भागों में बंटी हुई है। बाईं तरफ,
          प्ले स्थान है। इसी स्थान पर आपके डांसर आएंगे।
      7:
        text: यह बीच का भाग टूलबॉक्स है। जब आप पाठों का अध्ययन करेंगे तो कोड के नए
          ब्लॉक्स इस स्थान पर उपलब्ध होंगे।
      8:
        text: दाईं तरफ का स्थान वर्कस्पेस है। आप अपना प्रोग्राम बनाने के लिए टूल्बॉक्स
          में से ब्लॉक्स खींचकर वर्कस्पेस में ला सकते हैं।
      9:
        text: प्रत्येक स्तर के लिए निर्देश यहां स्क्रीन के ऊपर की तरफ होंगे। यदि आपको
          संकेत की आवश्यकता है, तो लाइट बल्ब पर क्लिक करें।
      10:
        text: शुरूआत करने के लिए, आइए इस लाल ब्लॉक के साथ नया डांसर बनाएं। सबसे पहले,
          इसे टूलबॉक्स में से खींचें और इस संतरी "सेटअप" ब्लॉक के नीचे स्नैप करें।
          यह डांसर एक बिल्ली है और इसका नाम "my_first_dancer" है। आप यहां क्ल्कि करके
          इसे अपने पसंदीदा नाम से बदल सकते हैं।
      11:
        text: आप इसके साथ यह भी बदल सकते हैं कि आपके प्ले स्थान में डांसर कहां दिखाई
          दें।
      12:
        text: प्ले स्थान के ऊपर संगीत चुनने के लिए मेन्यु है। अनेक गाने हैं, जिनमें
          से आप कोई भी चुन सकते हैं तो मज़े से अपने पसंदीदा गाने चुनें। प्ले स्थान
          के नीचे रन बटन है, आप देखेंगे कि आपके प्रोग्राम से डांसर प्ले स्थान में
          दिखाई देंगे और संगीत बजने लगेगा।
      13:
        text: इसे खुद आजमाएं! यदि आप अटके हुए महसूस करें, तो कोई बात नहीं! बस उठें
          और घूमें, और आपको पता चलने से पहले ही आप खुद की डांस पार्टी बना लेंगे। तो,
          आप क्या बनाएंगे?
    hoc_dance_events:
      1:
        text: 'कोड का समय | डांस पार्टी: इवेंट'
      2:
        text: मैं ऐलो ब्लाक (Aloe Blacc) हूं। मैं गायक, गीतकार और एंटरटेनर हूं। मुझे
          लगता है कि कंप्यूटर साइंस को सीखना वाकई महत्वपूर्ण है क्योंकि कंप्यूटर साइंस
          भविष्य है, और मुझे लगता है कि लोगों के लिए तकनीक का संचालन करने योग्य होना
          जरूरी है, जो पूरी तरह से उनकी ज़िंदगी को नियंत्रित कर रही है।
      3:
        text: अलग-अलग डांस मूव संगीत के साथ सही समय पर अपने आप हो जाते हैं, आप इसके
          लिए इवेंट्स का उपयोग कर सकते हैं। इवेंट आपके प्रोग्राम को वह सुनने के लिए,
          जो घटित होने वाला है और फिर तुरंत प्रतिक्रिया करने के लिए कहती है।
      4:
        text: इवेट्स के कुछ उदाहरण हैं, माउस क्लिक, तीर वाले बटन या स्क्रीन पर थपथपाने
          से सुनना। अब हम जिस इवेंट का उपयोग करने वाले हैं, वह गाने में बदलाव सुनेगी।
          वह बदलाव आपके डांसर को नया डांस करने के लिए सक्रिय करेगा।
      5:
        text: पेशेवर डांसर गाने की बीट्स को गिनकर अपनी कोरियोग्राफी का अभ्यास करते
          हैं।
      6:
        text: संगीत में, संगीत प्रविधि बीट्स की निश्चित संख्या का उल्लेख करती है।
          सबसे ज्यादा लोकप्रिय गानों में, संगीत प्रविधि चार बीट्स जितनी लंबी होती
          है।
      7:
        text: आपके डांसरों को ढीला छोड़ने के लिए, आपको हरे इवेंट ब्लॉक की आवश्यकता
          होगी। यह इवेंट ब्लॉक बताता है "4 संगीत प्रविधियों के बाद।"
      8:
        text: यदि आप जामुनी "हमेशा के लिए करें" ब्लॉक को खींचते हैं, तो आप अपने डांसर
          के लिए एक डांस चुन सकते हैं। क्योंकि यह "4 संगीत प्रविधियों के बाद" इवेंट
          ब्लॉक के अंतर्गत है, आपका डांसर अपना डांस शुरू करने से पहले गाने की चार
          संगीत प्रविधियों तक प्रतीक्षा करेगा।
      9:
        text: डिस्प्ले भाग के ऊपर की तरफ संगीत प्रविधि काउंटर पर नज़र रखें।
      10:
        text: वह इवेंट खोजें और सुनें, जो डांस कोड को सक्रिय करेगी। संकेत के दाईं
          तरफ, हमारा डांसर जाना शुरू करता है।
    hoc_dance_properties:
      1:
        text: 'कोड का समय | डांस पार्टी: विशेषताएं'
      2:
        text: मेरा नाम मारिया है। मैं यूनिवर्सिटी ऑफ वाशिंगटन में जूनियर हूं और मैं
          Amazon Future Engineer हूं।
      3:
        text: मुझे कंप्यूटर साइंस बेहद पसंद है क्योंकि यह समस्या-समाधान और सामान्य
          विश्लेषण को शामिल करता है तथा किसी चीज में घंटों काम करने के बाद आपको इसमें
          से वाकई कुछ अच्छा परिणाम मिल सकता है।
      4:
        text: अब तक, आपको कुछ अलग-अलग तरह के डांसरों के साथ प्ले करने का मौका मिल
          चुका है और आपने उन्हें अलग-अलग तरह के डांस मूव्स के लिए प्रोग्राम किया है।
          लेकिन क्या ये मूव्स वाकई लाभकारी हैं?
      5:
        text: हर डांस मूव फ्रेम नामक चित्रों की सीरीज से बना होता है। हर फ्रेम अपने
          से पहले वाले से थोड़ा अलग होता है। जब आपका प्रोग्राम चलता है, तो कंप्यूटर
          एक के बाद एक फ्रेम दिखाता है। वे इतनी तेजी से दिखाए जाते हैं कि ऐसा लगता
          है मानो डांसर मूव कर रहा हो। यह सभी एनिमेशन के पीछे का रहस्य है।
      6:
        text: आप न केवल अपने डांसर के मूव्स को बदल सकते हैं, बल्कि आप डांसर की विशेषताओं
          को भी बदल सकते हैं। विशेषताएं स्क्रीन पर डांसर की पोजीशन, डांसर का आकार
          और डांसर का रंग आदि चीज़ों का वर्णन करती हैं।
      7:
        text: डांसर की विशेषताएं बदलने के लिए, आप एक सेट ब्लॉक का उपयोग करेंगे। आइए
          हमारे डांसरों को और छोटा दिखाने के लिए एक सेट ब्लॉक का उपयोग करें। उसके
          बाद, वह डांसर चुनें, जिसे आप बदलना चाहते हैं और साइज में प्रकार चुनें, जो
          स्क्रीन पर दिखाई देगा।
      8:
        text: पूरा आकार 100 है। यदि आप कम संख्या चुनते हैं, तो वह डांसर को ज्यादा
          छोटा कर देगी। डांसर जितना छोटा होगा, उतना ही वह दूर दिखाई देगा। यह डांसरों
          का बैकअप बनाने का शानदार तरीका है।
      9:
        text: सेट ब्लॉक का उपयोग करते हुए, आप डांसरों के आयाम, आवर्तन, पोजीशन और रंग
          भी बदल सकते हैं। इन विशेषताओं के आसपास प्ले करके, आप हर तरह के बदलाव कर
          सकते हैं और उन्हें गाने के अलग-अलग भागों के साथ जोड़ सकते हैं।
      10:
        text: याद रखें, आप केवल डांसर की वही विशेषताएं सेट कर सकते हैं, जो पहले से
          मौजूद हैं। सुनिश्चित करें कि आपका सेट ब्लॉक "एक नया डांसर बनाएं" ब्लॉक के
          बाद आता है। रचनात्मक होने के लिए प्रयोग करने से हिचकिचाएं नहीं और मज़े करें।
    hoc_dance_congrats:
      1:
        text: 'कोड का समय | डांस पार्टी: पार्टी चालू है!'
      2:
        text: ट्यूटोरियरल के अंत में, आप अपने दोस्तों के साथ अपनी रचना का लिंक साझा
          कर सकते हैं। अपनी कल्पना को फैलाएं और मज़े करें!
      3:
        text: जब आप टूल बॉक्स में देखेंगे, तो आप कुछ बिल्कुल नए ब्लॉक्स पाएंगे, जो
          आपने पहले नहीं देखे। उदाहरण के लिए, आप स्क्रीन पर अलग-अलग तरीकों में डांसरों
          को व्यवस्थित करने के लिए लेआउट ब्लॉक का उपयोग कर सकते हैं।
      4:
        text: इन नए ब्लॉक्स और विशेषताओं का परीक्षण करें और इनके साथ प्रयोग करने का
          प्रयास करें। क्या आप अपने पसंदीदा गाने के लिए सावधानीपूर्वक कोरियोग्राफ
          किया हुआ डांस बनाएंगे?
      5:
        text: या फिर अपने दोस्तों के साथ डांस मुकाबला करेंगे?
      6:
        text: या सब मिलकर कुछ और करेंगे?
      7:
        text: ट्यूटोरियरल के अंत में, आप अपने दोस्तों के साथ अपनी रचना का लिंक साझा
          कर सकते हैं। अपनी कल्पना को फैलाएं और मज़े करें!
    mc_2018_intro:
      1:
        text: हेलो! आप अभी आए हैं। Voyage Aquatic में आपका स्वागत है। मैं पानी के
          नीचे छिपे खजाने की खोज में निकलने वाला हूं और मुझे आपकी मदद मिलने की बेहद
          खुशी है। कौन जानता है कि इन रहस्यमयी जलमार्गों के साथ हमारा सामना किस चीज़
          से हो जाए? हम अपने पहले गाइड से मिलने वाले हैं, जो इस घाट पर कहीं है।
      2:
        text: एडवेंचर्रस, आपका स्वागत है! Voyage Aquatic को पूरा करने के लिए, आपको
          कोड का उपयोग करते हुए पहेलियों की श्रृंखला को हल करने की जरूरत होगी। देखें
          कि यह कैसे काम करता है। आपकी स्क्रीन को तीन मुख्य भागों में बांटा गया है।
      3:
        text: बाईं ओर, आप Minecraft दुनिया देखेंगे।
      4:
        text: मध्य का क्षेत्र आपका टूलबॉक्स है, जहां आप कोड करने वाली कमांड्स प्राप्त
          कर सकते हैं।
      5:
        text: दाईं ओर बड़ा क्षेत्र आपका वर्कस्पेस है। यह वही स्थान है, जहां आप अपना
          प्रोग्राम बनाने और अपनी गतिविधियों को नियंत्रित करने के लिए कमांड्स को क्रमबद्ध
          कर सकते हैं।
      6:
        text: प्रत्येक स्तर के निर्देश पृष्ठ के ऊपरी भाग पर हैं। लंबे और छोटे निर्देशों
          को बदलने के लिए जोड़ के चिन्ह पर क्लिक करें।
      7:
        text: ब्लॉक्स को टूलबॉक्स में से वर्कस्पेस में खींचने का प्रयास करें और फिर
          अपनी कमांड्स को कार्यान्वित करने के लिए चलाएं बटन पर क्लिक करें।
      8:
        text: इसे सही तरह से समझने में आपको कई बार प्रयास करना पड़ सकता है और कुछ
          पहेलियों के एक से अधिक समाधान होते हैं, इसलिए यह देखने के लिए प्रयोग करें
          कि कौन-सा उपयोगी है।
      9:
        text: यदि आप दुबारा प्रयास करना चाहते हैं, तो जहां से आपने शुरू किया था, वापस
          वहां जाने के लिए पुनः सेट करें बटन पर क्लिक करें।
      10:
        text: यदि आपको कमांड को मिटाने की जरूरत हो, तो उसे अपने वर्कस्पेस में से वापस
          टूलबॉक्स में खींचें। याद रखें, यह देखने के लिए "चलाएं” पर क्लिक करें कि
          क्रिया में आपका कोड कैसा दिखाई देता है।
      11:
        text: तो, साथी एडवेंचरर, हमने इसमें काफी समय लगा दिया। आइए पानी के नीचे का
          खजाना ढूंढने के लिए कोड करना शुरू करें।
    MC_2018_loops:
      1:
        text: बहुत बढ़िया! हमने काड मछली को पकड़ लिया है! क्या आप जानते हैं कि यदि
          आप डॉल्फिन को काड मछली खिलाते हैं, तो डॉल्फिन नष्ट जलयान तक आपका मार्गदर्शन
          करेगी, जहां खजाना हो सकता है? हमें पास रहना होगा। पहेलियों का अगला सेट काफी
          मुश्किल बनाया गया है, इसलिए हम कुछ और कोडिंग कौशल बेहतर ढंग से सीखेंगे।
          यह क्या है? एक गुफा?
      2:
        text: एडवेंचर्रस, आपका स्वागत है! मेरा नाम स्कवैड है। मैंने देखा कि आप पिछली
          पहेलियों में से कुछ में कमांड्स के एक ही सेट का बार-बार उपयोग कर रहे थे।
          यह बहुत थकाने वाला रहा होगा। क्या कभी आपकी इच्छा हुई है कि आपके पास किसी
          चीज़ को बार-बार करने के लिए कुछ ऐसा होता, जिसे आप बिना थके या ऊबे कर पाते,
          जैसे बर्तन धोना या अपने दांतों को ब्रुश करना? वह अच्छा होता।
      3:
        text: कंप्यूटर कोडिंग लूप्स का उपयोग करते हुए एक ही चीज़ को बार-बार करने में
          बहुत निपुण हैं। जब आप अपने प्रोग्राम को समान निर्देश कई बार देना चाहते हैं,
          तो आप लूप का उपयोग कर सकते हैं!
      4:
        text: लूप ब्लॉक में ऐसे निर्देश होते हैं, जो तब तक दोहराए जाते हैं, जब तक
          कि लक्ष्य पूरा नहीं होता। जब आपका प्रोग्राम "लक्ष्य तक दोहराएं” लूप शुरू
          करता है, तो यह अंदर निर्देशों को तब तक दोहराता रहेगा, जब तक कि यह लक्ष्य
          तक न पहुंच जाए।
      5:
        text: इसे खुद के लिए आजमाएं! जिन कमांड्स को आप दोहराना चाहते हैं, उन्हें लक्ष्य
          तक दोहराएं” ब्लॉक के अंदर रखें, "चलाएं” पर क्लिक करें और इसे जाते हुए देखें!
      6:
        text: खैर, वह थोड़ा अजीब था। किसे पता था कि स्कवैड कोड कर सकते हैं? मैंने
          सोचा भी नहीं था कि उनकी उंगलियां होंगी। तो अब हम लूप्स के बारे में जानते
          हैं। आइए थोड़ा और खजाना लेने के लिए उनका उपयोग करें।
    mc_2018_conditionals:
      1:
        text: वाहृ! और तीन पहेलियां हल हो गईं! और हमने एक सामन...मछली को पकड़ लिया
          है। यह सोने के ढेर प्राप्त करने जितना रोमांचक है, लेकिन हम वहीं लेंगे, जो
          हम प्राप्त कर सकते हैं। और मेरे ख्याल से नॉटिलस सीप बाद में काम आएगी। मैं
          जानने को उत्सुक हूं कि इन खंडहरों में क्या छिपा हुआ है। शायद दूसरा संकेत!
          आइए अंदर एक नज़र डालें।
      2:
        text: मेरा नाम नैटी (Netty) है और मेरे खंडहरों में आपका स्वागत है। हम पूरा
          समय स्थितियों के आधार पर निर्णय लेते हैं। यदि ऐसा लगता है कि वर्षा होने
          वाली है, तो मैं छाता लूंगी। यदि हमें भूख लगी होती है, तो हम स्नैक खाते हैं।
      3:
        text: यदि हम क्रीपर देखते हैं, तो हम दूसरे दिशा में भाग जाते हैं। कंप्यूटर
          भी इस तरह के निर्णय लेते हैं। वास्तव में वे कोड का उपयोग करते हुए स्थितियों
          के लिए प्रतिक्रिया करते हैं।
      4:
        text: अपनी कोड कमांड्स का उपयोग करते हुए इस तरह की प्रतिक्रिया को प्रोग्राम
          करने के लिए, यदि रास्ता है ब्लॉक चुनें।
      5:
        text: कमांड बनाने के लिए ड्रॉपडाउन चुनें।
      6:
        text: उदाहरण के लिए, यदि आप "यदि दाईं ओर रास्ता है” लिखते हैं और नियमबद्ध
          के अंदर दाएं मुड़ें को रखते हैं, तो हम स्टीव दाईं ओर एक खुले स्थान पर पहुंचता
          है, जो हमेशा दाएं मुड़ेगा। यदि दाएं कोई खुला रास्ता नहीं है, तो वह दाएं
          नहीं मुड़ेगा। ये नियमबद्ध इफ कमांड्स तब उपयोगी होती हैं, जब आप अप्रत्याशित
          स्थितियों में कोड चलाते हैं, जैसे पानी के नीचे गुफाओं में रहस्यमयी खंडहर।
      7:
        text: इफ ब्लॉक्स उपयोग करने का प्रयास करें और अपने कोड का परीक्षण करें।
      8:
        text: वाह! नैटी के खंडहर शानदार थे। मैं सच में अपने माता पिता के घर से आ गया।
          तो आपको क्या लगता है? क्या अंतिम पहेलियां पूरी करने के लिए नियमबद्ध हमारे
          लिए सही हैं? आइए इसे आजमाएं।
    mc_2018_closing:
      1:
        text: 'ऐमी ली33: बधाई हो! तुमने इसे कर लिया!'
      2:
        text: 'स्क्वैड: बधाई हो!'
      3:
        text: 'नेटी: तुमने इसे कर लिया! बधाई हो!'
      4:
        text: 'टोमोहॉक: बधाी हो!'
      5:
        text: कितना बढ़िया दिन है! खजाने की खोज ने हमें Minecraft वाहक बनाने, नॉटिलस
          सीपें ढूंढने और खजाने के संदूक खोजने की ओर अग्रसर कर दिया। मुझे प्रिस्मैरीन
          का रंग बेहद पसंद है। हमने यह भी सीखा कि लूप्स और कंडीशनल्स के साथ कोड कैसे
          करें।
      6:
        text: कोडिंग के बारे में बात करते हुए, इस खोज में एक और स्तर है। एडवेंचर्रस,
          क्या आप इसके लिए तैयार हैं?
      7:
        text: यह फ्री प्ले स्तर है और आप अपने कोडिंग कौशलों का उपयोग करके कुछ शानदार
          बना सकते हैं।
      8:
        text: ऊं... तुम्हारे खजाने को छिपाने के लिए जगह, पानी के नीचे स्मारक, कॉरल
          कासल? आह...बहुत-सी युक्तियां हैं। दोहराने की क्रिया तैयार करने के लिए लूप्स
          का और उन सभी अप्रत्याशित स्थितियों की तैयारी के लिए कंडीशनल्स का उपयोग करते
          हुए प्रयास करें।
      9:
        text: अब आपने निश्चित रूप से खुद को बेबाक कोडर साबित कर दिया है और मैं यह
          देखने के लिए उत्साहित हूं कि आप क्या बनाते हैं। आशा है कि कोड के साथ आपके
          एडवेंचर यहीं खत्म नहीं होंगे। शुभ यात्रा!
    teaching_csf_how_it_works:
      1:
        image: notes/teaching_cs_fundamentals_1.png
        text: इस कोर्स को चरणों में बांटा गया है।
      2:
        image: notes/teaching_cs_fundamentals_2.png
        text: पहले कुछ चरण कंप्यूटर साइंस के साथ-साथ कुछ मुख्य शब्दावली से परिचय कराएंगे।
      3:
        image: notes/teaching_cs_fundamentals_3.png
        text: इसके बाद, आप उसी प्रकार कोड करना सीखेंगे, जैसे आपके छात्र सीखेंगे। कोर्स
          के अंतिम चरण आपको अपनी कक्षा में कंप्यूटर साइंस पढ़ाने की योजना बनाने में
          मदद करेंगे। पूरे कोर्स में, आप प्लग्ड - या ऑनलाइन - पाठों के साथ-साथ अनप्लग्ड
          पाठ, जिन्हें आप कंप्यूटर के बिना कर सकते हैं, दोनों के उदाहरण देखेंगे।
      4:
        image: notes/teaching_cs_fundamentals_4.png
        text: यह प्रशिक्षण प्लेटफार्म आपकी प्रगति ट्रैक करेगा, इसलिए आप वहीं से शुरू
          कर सकते हैं, जहां आपने किसी भी समय छोड़ा हो।
    what_is_cs:
      1:
        image: notes/what_is_cs.png
        text: कोडिंग निर्देशों का सेट है, जो आप कंप्यूटर को देते हैं। कंप्यूटर साइंस
          ऐसा क्षेत्र है, जहां लोग बड़ी समस्याओं को हल करने के लिए कंप्यूटरों की क्षमता
          का इस्तेमाल करते हैं। कंप्यूटर साइंस में कोडिंग शामिल होती है, लेकिन इसमें
          अन्य चीज़ें भी शामिल होती हैं, जैसे इंटरनेट कैसे काम करता है और समाज को
          प्रभावित करता है, बिग डेटा के साथ क्या करना होता है, और बड़ी समस्याओं का
          विश्लेषण कैसे करें। कंप्यूटर साइंस समस्या हल करने, गंभीर चिंतन करें और दृढ़ता
          के बारे में है।
    writing_first_program:
      1:
        image: notes/writing_first_program_1.png
        text: Code.org दृश्यात्मक, खींचें और छोड़ें प्रोग्रामिंग भाषा का उपयोग करता
          है, जिसे Blockly कहा जाता है। Blockly प्रोग्राम बनाने और पहेलियों को हल
          करने के लिए ब्लॉक्स नाम रंगदार निर्देशों का उपयोग करता है।
      2:
        image: notes/writing_first_program_2.png
        text: प्रत्येक पहेली के चार भाग हैं।
      3:
        image: notes/writing_first_program_3.png
        text: खेलने का क्षेत्र बाईं ओर है, जहां आपका प्रोग्राम चलता है।
      4:
        image: notes/writing_first_program_4.png
        text: मध्य में टूलबॉक्स क्षेत्र है, जिसमें आपकी जरूरत के सभी ब्लॉक्स हैं।
      5:
        image: notes/writing_first_program_5.png
        text: दाईं ओर वर्कस्पेस है, जहां आप अपना प्रोग्राम बनाने के लिए ब्लॉक्स को
          खींचेंगे।
      6:
        image: notes/writing_first_program_6.png
        text: ऊपर का वर्कस्पेस प्रत्येक पहेली के लिए निर्देश हैं।
      7:
        image: notes/writing_first_program_7.png
        text: यदि आप टूलबॉक्स में से बहुत ज्यादा ब्लॉक्स खींच लेते हैं, तो अतिरिक्त
          ब्लॉक को वापस टूलबॉक्स में खींचें।  अपना प्रोग्राम आजमाने के लिए चलाएं को
          हिट करें, और दुबारा कोशिश करने के लिए पुनः सेट को हिट करें।
    repeat_block:
      1:
        image: notes/repeat_block.png
        text: दोहराएं ब्लॉक से आप इसके अंदर जितनी बार इसे बताएंगे, उतनी बार इसके अंदर
          कोड को लूप कर सकते हैं।
    what_is_an_event:
      1:
        image: notes/what_is_an_event.png
        text: इवेंट आपके प्रोग्राम को उसे सुनने के लिए कहती है, जो होने वाला है। जब
          वह चीज़ घटित होती है, तो प्रोग्राम क्रिया परफॉर्म करता है। कंप्यूटर माउस
          क्लिक, तीर वाले बटन को दबाना या स्क्रीन पर टैप करने को सुन सकता है।
    lesson_planning:
      1:
        image: notes/lesson_planning_1.png
        text: CS के मूल सिद्धांत पाठ आपको यह बताने के लिए संक्षिप्त विवरण से शुरू
          होते हैं कि पाठ में क्या शामिल होगा।
      2:
        image: notes/lesson_planning_2.png
        text: पाठों में तैयारियां, गतिविधियां, समाप्ति हैं। यदि आप अपनी खुद की पाठ
          योजनाएं बनाना चाहते हैं, तो आप ये सुझाव दिमाग में रखना चाह सकते हैं।
      3:
        image: notes/lesson_planning_3.png
        text: 1. घुमावदार पाठ्यक्रम डिज़ाइन का उपयोग करने का प्रयास करें। एक बार अवधारणाएं
          पेश करें और फिर उन पर दुबारा जाएं।
      4:
        image: notes/lesson_planning_4.png
        text: 2. अनप्लग्ड पाठों के साथ ऑनलाइन पाठों को जोड़कर मिश्रित प्रशिक्षण अनुभव
          तैयार करें।
      5:
        image: notes/lesson_planning_5.png
        text: 3. अपने पाठ्यक्रम को छोटे-छोटे भागों में बांटें।
      6:
        image: notes/lesson_planning_6.png
        text: 4. सुनिश्चित करें कि आप स्थानीय मानकों और कॉलेज व कैरियर की तैयारी के
          लिए कौशलों को शामिल करते हैं।
    opd_closing:
      1:
        image: notes/opd_closing_1.png
        text: बधाई हो! आपने कंप्यूटर साइंस के मूल सिद्धांत पढ़ाना ऑनलाइन कोर्स पूरा
          कर लिया है। अब आप भविष्य के लिए अपने छात्रों को तैयार करने वाले अध्यापकों
          के बढ़ते समुदाय का हिस्सा हैं।
      2:
        image: notes/opd_closing_2.png
        text: 'यदि आपको और सहयोग की जरूरत है तो ये संसाधन देखें: 1. forum.code.org
          2. @teachcode on Twitter 3. studio.code.org '
    hoc_dance_warmup_2019:
      1:
        text: 'कोड का समय | डांस पार्टी: तैयारी करें'
      2:
        text: नमस्कार! मेरा नाम मिराल कोतब (Miral Kotb) है और मैं डांसर, सॉफ्टवेयर
          डेवलेपर हूं और मैंने iLuminate तैयार किया है।
      4:
        text: अगले घंटे तक, आप अपनी खुद की डांस पार्टी को प्रोग्राम करके कंप्यूटर
          साइंस शुरू करने वाले हैं! हमने कुछ हिट संगीत और आपके साथ प्ले करने हेतु
          आपके लिए शानदार डांसरों की एक टीम को शामिल किया है।
      5:
        text: आप अलग-अलग- डांसर चुनने, उनके डांस मूव्स को बदलने, उन्हें संगीत के मुताबक
          प्रतिक्रिया करने और उन्हें संवादात्मक बनाने के लिए कोड के ब्लॉक्स का उपयोग
          करेंगे।
      6:
        text: आप देखेंगे कि आपकी स्क्रीन तीन मुख्य भागों में बंटी हुई है। बाईं तरफ,
          प्ले स्थान है। इसी स्थान पर आपके डांसर आएंगे।
      8:
        text: दाईं तरफ का स्थान वर्कस्पेस है। आप अपना प्रोग्राम बनाने के लिए टूल्बॉक्स
          में से ब्लॉक्स खींचकर वर्कस्पेस में ला सकते हैं।
      9:
        text: प्रत्येक स्तर के लिए निर्देश यहां स्क्रीन के ऊपर की तरफ होंगे। यदि आपको
          संकेत की आवश्यकता है, तो लाइट बल्ब पर क्लिक करें।
      11:
        text: आप इसके साथ यह भी बदल सकते हैं कि आपके प्ले स्थान में डांसर कहां दिखाई
          दें।
      12:
        text: प्ले स्थान के ऊपर संगीत चुनने के लिए मेन्यु है। अनेक गाने हैं, जिनमें
          से आप कोई भी चुन सकते हैं तो मज़े से अपने पसंदीदा गाने चुनें। प्ले स्थान
          के नीचे रन बटन है, आप देखेंगे कि आपके प्रोग्राम से डांसर प्ले स्थान में
          दिखाई देंगे और संगीत बजने लगेगा।
    hoc_dance_events_2019:
      1:
        text: 'कोड का समय | डांस पार्टी: इवेंट'
      4:
        text: इवेंट्स के कुछ उदाहरण हैं, माउस क्लिक, तीर के बटन या स्क्रीन पर थपथपाने
          को सुनना।
    hoc_dance_measures_2019:
      2:
        text: मैं ऐलो ब्लाक (Aloe Blacc) हूं। मैं गायक, गीतकार और एंटरटेनर हूं। मुझे
          लगता है कि कंप्यूटर साइंस को सीखना वाकई महत्वपूर्ण है क्योंकि कंप्यूटर साइंस
          भविष्य है, और मुझे लगता है कि लोगों के लिए तकनीक का संचालन करने योग्य होना
          जरूरी है, जो पूरी तरह से उनकी ज़िंदगी को नियंत्रित कर रही है।
      5:
        text: आपके डांसरों को ढीला छोड़ने के लिए, आपको हरे इवेंट ब्लॉक की आवश्यकता
          होगी। यह इवेंट ब्लॉक बताता है "4 संगीत प्रविधियों के बाद।"
      6:
        text: यदि आप जामुनी "हमेशा के लिए करें" ब्लॉक को खींचते हैं, तो आप अपने डांसर
          के लिए एक डांस चुन सकते हैं। क्योंकि यह "4 संगीत प्रविधियों के बाद" इवेंट
          ब्लॉक के अंतर्गत है, आपका डांसर अपना डांस शुरू करने से पहले गाने की चार
          संगीत प्रविधियों तक प्रतीक्षा करेगा।
      7:
        text: डिस्प्ले भाग के ऊपर की तरफ संगीत प्रविधि काउंटर पर नज़र रखें।
      8:
        text: वह इवेंट खोजें और सुनें, जो डांस कोड को सक्रिय करेगी। संकेत के दाईं
          तरफ, हमारा डांसर जाना शुरू करता है।
    hoc_dance_properties_2019:
      1:
        text: 'कोड का समय | डांस पार्टी: विशेषताएं'
      2:
        text: मेरा नाम मारिया है। मैं यूनिवर्सिटी ऑफ वाशिंगटन में जूनियर हूं और मैं
          Amazon Future Engineer हूं।
      3:
        text: मुझे कंप्यूटर साइंस बेहद पसंद है क्योंकि यह समस्या-समाधान और सामान्य
          विश्लेषण को शामिल करता है तथा किसी चीज में घंटों काम करने के बाद आपको इसमें
          से वाकई कुछ अच्छा परिणाम मिल सकता है।
      5:
        text: हर डांस मूव फ्रेम नामक चित्रों की सीरीज से बना होता है। हर फ्रेम अपने
          से पहले वाले से थोड़ा अलग होता है। जब आपका प्रोग्राम चलता है, तो कंप्यूटर
          एक के बाद एक फ्रेम दिखाता है। वे इतनी तेजी से दिखाए जाते हैं कि ऐसा लगता
          है मानो डांसर मूव कर रहा हो। यह सभी एनिमेशन के पीछे का रहस्य है।
      6:
        text: आप न केवल अपने डांसर के मूव्स को बदल सकते हैं, बल्कि आप डांसर की विशेषताओं
          को भी बदल सकते हैं। विशेषताएं स्क्रीन पर डांसर की पोजीशन, डांसर का आकार
          और डांसर का रंग आदि चीज़ों का वर्णन करती हैं।
    hoc_dance_congrats_2019:
      1:
        text: 'कोड का समय | डांस पार्टी: पार्टी चालू है!'
      2:
        text: ट्यूटोरियरल के अंत में, आप अपने दोस्तों के साथ अपनी रचना का लिंक साझा
          कर सकते हैं। अपनी कल्पना को फैलाएं और मज़े करें!
      3:
        text: जब आप टूल बॉक्स में देखेंगे, तो आप कुछ बिल्कुल नए ब्लॉक्स पाएंगे, जो
          आपने पहले नहीं देखे। उदाहरण के लिए, आप स्क्रीन पर अलग-अलग तरीकों में डांसरों
          को व्यवस्थित करने के लिए लेआउट ब्लॉक का उपयोग कर सकते हैं।
      4:
        text: इन नए ब्लॉक्स और विशेषताओं का परीक्षण करें और इनके साथ प्रयोग करने का
          प्रयास करें। क्या आप अपने पसंदीदा गाने के लिए सावधानीपूर्वक कोरियोग्राफ
          किया हुआ डांस बनाएंगे?
      5:
        text: या फिर अपने दोस्तों के साथ डांस मुकाबला करेंगे?
      6:
        text: या सब मिलकर कुछ और करेंगे?
      7:
        text: ट्यूटोरियरल के अंत में, आप अपने दोस्तों के साथ अपनी रचना का लिंक साझा
          कर सकते हैं। अपनी कल्पना को फैलाएं और मज़े करें!
