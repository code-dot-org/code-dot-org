---
fa:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: به اولین ساعت کدنویسی خود خوش آمدید! بیایید یکراست به سمت اولین تجربه
          برنامه نویسی شما شیرجه بزنیم.
      2:
        image: notes/hoc1_2.jpg
        text: ما از بلوکلی استفاده می کنیم، یک زبان برنامه نویسی تصویری که در آن با
          کشیدن و رها کردن قطعه های کد، برنامه نویسی می کنید.
      3:
        image: notes/hoc1_3.jpg
        text: بیشتر کدها آماده هستند، اما Blockly یک زبان visual است. هر قطعه کد مظابق
          با یک خط کد دنیای واقعی است.
      4:
        image: notes/hoc1_4.jpg
        text: شما مفاهیم پایه علوم رایانه ای را فرا خواهید گرفت، مفاهیمی که در هر
          جایی از ساخت برنامه ها تا کنترل یک مریخ نورد استفاده شده اند.
      5:
        image: notes/hoc1_5.jpg
        text: یک برنامه، مجموعه ای از دستورالعمل ها برای اجرا در رایانه شما می باشد.
      6:
        image: notes/hoc1_6.jpg
        text: هدف اولین برنامه شما پرتاب یک پرنده خشمگین از میان هزارتو برای زدن یک
          خوک سبز است.
      7:
        image: notes/hoc1_7.jpg
        text: سمت چپ پازل، هزارتو است جایی که برنامه شما اجرا می شود . دستورالعمل
          های هر پازل در زیر هزارتوی پازل است.
      8:
        image: notes/hoc1_8.jpg
        text: دستورات پرنده عصبانی در وسط جعبه ابزار است. از این جعبه ابزار برای ساخت
          کد خود استفاده کنید.
      9:
        image: notes/hoc1_9.jpg
        text: سمت راست فضای کاری شما جایی که در آن می توانید بلوک ها را از جعبه ابزار
          بکشید و برنامه خود را بسازید. برای حذف یک بلوک، آن را به سطل زباله که در
          گوشه قرار دارد بیندازید.
      10:
        image: notes/hoc1_10.jpg
        text: هر بلوک یک دستورالعمل است. اگر شما یک بلوک "برو جلو" را به فضای کاری
          خود بکشید و "اجرای برنامه" را فشار دهید، پرنده یک فاصله در هزارتو حرکت می
          کند.
      11:
        image: notes/hoc1_11.jpg
        text: برای انجام بیش از یک کار، میتونی بلوک های بسیاری رو به فضای کارت بکشی
          و آنها رو به هم وصل کنی. پرنده فرمان ها رو از بالا به پایین انجام خواهد
          داد.
      12:
        image: notes/hoc1_12.jpg
        text: اگر شما برنامه را اجرا کردید و می خواهید آن را تعمیر و دوباره اجرا کنید،
          دکمه "تنظیم مجدد" را فشار دهید.
      13:
        image: notes/hoc1_13.jpg
        text: بیایید برویم آن خوکها را بگیریم!
    artist_intro:
      1:
        text: سلام، من JR هستم! هر تیم‌ ماشین‌سواری برای برنده شدن به یک دانشمند کامپیوتر
          نیاز دارد. آنها داده‌های ماشین‌ها رو بررسی می‌کنند و کاری می‌کنند تا سریع‌تر
          حرکت کنند.
      2:
        text: در این پازل‌ها، تو یک هنرمند نقاش خواهی بود که هرجا می‌رود یک خط پشت
          سرش می‌کشد.
      3:
        text: این بلاک می‌گوید که ۱۰۰ پیکسل به جلو حرکت کنید. پیکسل‌ها، نقطه‌های کوچک
          روی صفحه نمایش شما هستند.
      4:
        text: 'این بلاک می‌گوید: «۹۰ درجه به راست بچرخید». این مقدار هنرمند نقاش شما
          را به همان اندازه تغییر بلاک‌ها در پازل ماز تغییر می‌دهد.'
      5:
        text: بر روی فلش در هر یک از این بلوک‌ها کلیک کن تا میزان حرکت یا چرخش هنرمند
          را تغییر بدهی. با این بلوک‌های جدید بیشتر بازی کن تا با اونها آشنا بشی.
    farmer_intro:
      1:
        text: سلام، من پائولا هستم! در این معماها، تو یک کشاورز هستی که باید زمینش
          را کاملا صاف کند تا محصول بکارد.
      2:
        text: باید به او کمک کنی تا همه توده‌های خاک را بردارد و همه چاله‌ها را پر
          کند.
      3:
        text: بلوک‌های جدید 1 بیل از یک توده خاک برمی‌دارد و 1 چاله را با یک بیل از
          خاک پر می‌کند.
      4:
        text: اندازه توده‌ها و چاله‌ها متفاوت است، بنابراین باید به کشاورز بگویی که
          چندبار از بیلچه استفاده کند.
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: سلام، من کتی هستم! یکی از جالب‌ترین چیزها در مورد علوم کامپیوتر این
          است که یک برنامه کامپیوتری می‌تواند تعاملی باشد.
      2:
        image: notes/flappy02.jpg
        text: هروقت کسی روی یک کامپیوتر یا گوشی، کلیک یا لمس یا تایپ کند، یک رویداد
          به وجود می‌آورد، و مقداری کد وجود دارد که تعیین می‌کند در هنگام یک رویداد
          چه کاری انجام شود.
      3:
        image: notes/flappy03.jpg
        text: 'برای مثال، می‌توانی یک "کنترل‌کننده رویداد" داشته باشی که می‌گوید "وقتی
          ماوس کلیک شد، صدایی را پخش کن" '
      4:
        image: notes/flappy04.jpg
        text: تا حالا چیزی درباره بازی FlappyBird شنیدی؟ با استفاده از کنترل‌کننده‌های
          رویداد، می‌خواهیم یاد بگیریم که نسخه سفارشی خودمون از FlappyBird را برنامه‌نویسی
          کنیم!
      5:
        image: notes/flappy05.jpg
        text: کدی که خواهی نوشت، شامل کشیدن و انداختن بلوک‌هایی است که نماینده دستوراتی
          برای کامپیوتر است. در پشت صحنه، هر یک از این بلوک‌ها با کد واقعی نشان داده
          می‌شوند.
      6:
        image: notes/flappy06.jpg
        text: 'اگر نگاهی به محیط کار بیندازی، چند بلوک سبز رنگ وجود دارند که پر شده‌اند
          - این‌ها "کنترل‌کننده‌های رویداد" هستند '
      7:
        image: notes/flappy07.jpg
        text: اگر می‌خواهی وقتی که ماوس را "کلیک" می‌کنی، پرنده "پرش" کند، می‌توانی
          این کار را با چسباندن بلوک "پرش" به کنترل‌کننده رویداد مناسب انجام بدهی،
          و حالا در بازی‌ات هر وقت ماوس را کلیک کنی، پرنده پرش خواهد کرد.
      8:
        image: notes/flappy08.jpg
        text: در هر معما از این فعالیت، ما انواع جدیدی از رویدادها را بصورت بلوک‌های
          سبز در محیط کاری معرفی خواهیم کرد، و می‌توانی تعیین کنی که بلوک‌های مناسب
          برای افزودن در پاسخ به هر رویداد، کدام است.
      9:
        image: notes/flappy09.jpg
        text: هنگامی‌که یک فلش رو به پایین مثل این می‌بینی، یعنی می‌توانی تنظیمات
          را تغییر دهی - مثلا چه صدایی پخش شود وقتی که پرنده به زمین برخورد می‌کند.
      10:
        image: notes/flappy10.jpg
        text: در معمای پایانی، می‌توانی بازی خودت را بسازی و آن را با دوستانت به اشتراک
          بگذاری. خوش باش و لذت ببر!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: سلام, من مارک هستم! بیایید در باره حلقه ها یاد بگیریم. با استفاده از
          حلقه ها شما می توانید به کامپیوتر بگویید که بارها دستورالعمل را هزاران یا
          حتی بیلیون بار تکرار کند.
      2:
        image: notes/hoc2_2.jpg
        text: در این پازل، ما می خواهیم که پرنده را ۵ فاصله به جلو حرکت بدهیم که به
          خوک برسد.
      3:
        image: notes/hoc2_3.jpg
        text: ما می توانیم از بلوک جدید "repeat" استفاده کنیم که به ما کمک کند.
      4:
        image: notes/hoc2_4.jpg
        text: به جای بیرون کشیدن ۵ بلوک "move forward"...
      5:
        image: notes/hoc2_5.jpg
        text: ما می توانیم بلوک "move forward" را در داخل بلوک "repeat" قرار دهیم
          و یک عدد را در آن بلوک بنویسیم که به آن بگه چند بار آن را تکرار کند.
      6:
        image: notes/hoc2_6.jpg
        text: 'و این مهم است: شما می توانید بیش از یک دستور داخل بلوک "repeat" قرار
          دهید.'
      7:
        image: notes/hoc2_7.jpg
        text: لذت ببرید با استفاده از بلوک "repeat"!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: سلام من کریس هستم. قبل از پیوستن به میامی هیت، من برای تحصیل علوم کامپیوتر
          به دانشگاه جورجیا تک رفتم. بیایید بلوک جدید "repeat until" را امتحان کنیم.
      2:
        image: notes/hoc3_2.jpg
        text: چگونه میتوانیم بدانیم که چقدر پرنده باید حرکت کند که به خوک برسد؟
      3:
        image: notes/hoc3_3.jpg
        text: اگر ما بلوک "move forward" را در داخل بلوک "repeat unit" قرار دهیم,
          پرنده به جلو حرکت خواهد کرد تا اینکه به خوک برسد (یا اینکه با دیواد برخورد
          کند).
      4:
        image: notes/hoc3_4.jpg
        text: 'و این مهم است: درست مثل قبل، ما می توانیم چند تا بلوک را داخل بلوک
          "repeat until" قرار دهیم، و آنها تکرار خواهند شد.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'سلام, من بیل هستم! اجازه دهید یک مفهوم اساسی جدید را یاد بگیریم: بیانیه
          "if". این نشان میدهد که چگونه کامپیوترها تصمیم گیری می کنند.'
      2:
        image: notes/hoc4_2.jpg
        text: شما هر روز بیانیه "if" را استفاده می کنید. قبل از اینکه شما هر روز صبح
          از خانه خارج شوید، شما می گویند اگر بیرون باران بیاید، آن وقت من نیاز دارم
          که ژاکت بپوشم.
      3:
        image: notes/hoc4_3.jpg
        text: ما می توانیم به آدم خورها بگوییم که بررسی کنند اگر مسیری در چپ وجود
          دارد، و اگر او بتواند مسیری در سمت چپ پیدا کند، ما به او اجازه می دهیم که
          به آن سمت بچرخد.
      4:
        image: notes/hoc4_4.jpg
        text: برای نوشتن این کد، بیایید  بلوک "if" را بیرون بکشیم و بلوک "turn left"
          را داخل آن قرار دهیم.
      5:
        image: notes/hoc4_5.jpg
        text: حالا، اگر ما بلوک "move forward" را بالای آن و بلوک "repeat" را اطراف
          همه چیز بگذاریم، هر زمان که آدم خور حرکت می کند، او بررسی می کند که اگر
          مسیری به چپ وجود داشته باشد، او می چرخد. استفاده از دستور "repeat" حیاتی
          است، به دلیل اینکه هر چرخش را در هر مرحله بررسی می کند.
      6:
        image: notes/hoc4_6.jpg
        text: بیانیه "if" در علم کامپیوتر واقعا مهم است. یکی از اولین برنامه هایی
          که من نوشته بودم بازی تیک-تک-تو بود، که در آن بیانیه "if" وجود داشت که می
          گفت، اگر فرد دیگری داره برنده می شود، جا را برایش ببند، که آنها برنده شوند.
      7:
        image: notes/hoc4_7.jpg
        text: لذت ببرید با استفاده از بلوک "if"!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: سلام, اسم من سلونی است. من از علم کامپیوتر برای کمک به حل مشکلات در
          بهداشت و پزشکی استفاده میکنم. بیاید در باره بلوک "if else"  یاد بگیریم.
          به نظر می رسد مانند بلوک "if" هست، اما یک بخش اضافی دارد قسمت پایانی دارد
          که به آن"else" گفته میشود.
      2:
        image: notes/hoc5_2.jpg
        text: اگریک بلوک "move forward" در جایی که می گوید "do" قرار دهم ویک بلوک
          "turn left" در جایی که می گوید "else", این یعنی زامبی بین 2 گزینه میتواند
          انتخاب کند. اگر مانعی درمسیر وجود دارد زامبی به جلو میرود و در غیر این صورت
          (مانعی در مسیر وجود ندارد) به چپ میچرخد.
      3:
        image: notes/hoc5_3.jpg
        text: درست مانند بلوک "if" می توانیم بلوک "if else" را داخل بلوکهای "repeat"
          قرار دادهیم تا زامبی بتواند به حرکت خود ادامه دهد و بلوک "if else" چک کند
          که ایا جایی برای چرخش وجود دارد.
      4:
        image: notes/hoc5_4.jpg
        text: حالا، آن آدم خورها را به جایی که آنها تعلق دارند بگذار!
    if_else_scrat:
      1:
        text: گزاره "اگر-در غیر این صورت" برای تصمیم گیری بین دو چیز هست. بیاید ببینیم
          چه جوری میتونیم از یک گزاره "اگر-در غیر این صورت" با دوستمون اسکرت سنجابه
          استفاده کنیم.
      2:
        text: این بلوک خیلی شبیه به بلوک "اگر" هست اما یک بخش اضافه در پایین برای
          "در غیر این صورت" وجود داره. اگر من بلوک " برو جلو" رو بذارم جایی که میگه
          "انجام بده" و یکبار بلوک "به سمت چپ بپیچ" رو جایی که "در غیر این صورت" هست
          بذارم یعنی سکرت سنجابه تا جایی که راهی برای جلو رفتن وجود داره به سمت جلو
          حرکت میکنه. اگرهم راهی به سمت جلو نبود, سکرت به سمت چپ میپیچه.
      3:
        text: انجام یکی از دو عمل بر اساس تصمیم انجام میگیره. و مثل بلوک های "اگر"
          شما میتونید بلوک های "اگر-در غیر این صورت" رو داخل بلوک های "تکرار" قرار
          بدید.
      4:
        text: حالا بیاید به سکرت سنجابه کمک کنیم که به بلوطش برسه!
    function:
      1:
        text: سلام، من برینا هستم، یک مهندس در اینستاگرام. یک تابع عبارت است از خطوط
          مشخصی از کد که می‌خواهی بارها و بارها استفاده کنی، بنابراین بجای اینکه هربار
          آن کد را بنویسی، می‌توانی فقط از یک بلوک استفاده کنی.
      2:
        text: حالا می‌خواهیم یاد بگیریم که چطور توابع را تعریف کنیم. توابع تعریف شده
          دارای یک ستاره در گوشه هستند. اسم تابع در بالاترین خط نوشته شده است.
      3:
        text: بلوک‌هایی که داخل تعریف قرار می‌گیرند به ما می‌گویند که چه کاری انجام
          می‌دهد. پس این تعریف تابع "5 تا پرکن" نام دارد و از یک بلوک "تکرار" و یک
          بلوک "پر کردن" تشکیل شده است.
      4:
        text: تعریف تابع در محیط کاری ما قرار می‌گیرد، اما کشاورز ما تابع را اجرا
          نخواهد کرد تا ما بلوک تابع "5 تا پر کن" را از دسته توابع بیرون بکشیم.
      5:
        text: 'بیایید "fun" را در "FUNction" برگردانیم! '
    loop_while:
      1:
        text: سلام من Makinde هستم! اجازه دهید "white block" را یاد بگیریم.
      2:
        text: '"بلوک مادامیکه" هر چیزی را که داخلش قرار دهید انجام می‌دهد "تا زمانیکه"
          عبارت بالایی "درست" باشد.'
      3:
        text: برای مثال، اگر کشاورز روی یک توده ایستاده باشد، به برداشتن 1 بیل از
          خاک ادامه می‌دهد "تا زمانیکه" هنوز یک توده زیر پایش وجود داشته باشد.
    loop_for:
      1:
        text: سلام، من ترینا هستم، و برای شرکت پیکسار کار می‌کنم. من روی چند فیلم
          از جمله شرک کار کرده‌ام.
      2:
        text: این حلقه "شمارنده" جدید ما است که عملیاتی را بارها و بارها انجام خواهد
          داد و می‌توانی عملیات را هر بار اندکی تغییر دهی.
      3:
        text: در این مثال، حلقه "شمارنده" ما می‌گوید "از 50 تا 90 بصورت ده تا ده تا
          بشمار" و داخل آن، بلوک "یک مربع بکش" خودمان را داریم. بلوک "شمارنده" را
          از بخش "متغیرها" به داخل قسمت "طول" بکش.
      4:
        text: یعنی هنرمند ما می‌خواهد یک مربع رسم کند که هر طرف آن 50 پیکسل طول دارد،
          سپس 10 تا به آن اضافه می‌کند و یک مربع با وجوه 60 پیکسل می‌کشد. سپس به اضافه
          کردن 10 پیکسل و کشیدن مربع‌ها ادامه می‌دهد تا به 90 برسد. بنابراین ما مربع‌هایی
          با اندازه‌های 50، 60، 70، 80 و 90 خواهیم داشت.
    parameters:
      1:
        text: سلام، من ژانت هستم، یک مهندس در شرکت زینگا.
      2:
        text: اگر بخواهیم یک دسته مثلث رسم کنیم که طول آن‌ها دارای اندازه‌های مختلف
          باشد، چطور؟
      3:
        text: می‌توانیم همه آن کد را به صورت دستی بنویسیم یا اینکه از یک تابع با پارامترها
          استفاده کنیم.
      4:
        text: برای این کار، روی ستاره آبی در تعریف تابع "رسم یک مثلث" کلیک کن. سپس
          "وارد کردن نام" را به داخل بلوک "ورودی" بکش.
      5:
        text: حالا اگر "طول" را در نقطه "x" بنویسی و "اینتر" را بزنی، یک ورودی طول
          برای تابع‌ات ایجاد خواهی کرد.
      6:
        text: سپس روی ستاره کلیک کن. حالا، روی دسته متغیرها کلیک کن و بلوک "طول" را
          به داخل بلوک "حرکت به جلو" در تعریف تابع خودت بکش. و بلوک شماره قدیمی را
          از آنجا خارج کن.
      7:
        text: برای استفاده از تابع‌ات همراه پارامترها، روی دسته توابع کلیک کن و تابع
          "رسم یک مثلث با طول" را بیرون بکش.
      8:
        text: حالا می‌توانی از بلوک ریاضی استفاده کنی تا اعداد مختلفی را وارد کرده
          و مثلث‌هایی با اندازه‌های مختلف رسم کنی.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: تبریک میگم! با حل آخرین پازل, شما کدی نوشتید که می تواند به هر رباتی
          بگوید که چگونه راهش را در یک  پیچ و خم غیر انشعابی یا یک تونل با هر طولی  پیدا
          کند, میتواند یک زامبی,  یک پرنده,  یک مریخ نورد, یا حتی یک ماشین بدون راننده
          باشد.
      2:
        image: notes/hoc6_2.jpg
        text: مفاهیم اولیه ای که استفاده کردید در قلب هر برنامه و یا نرم افزاری که
          در اینده خواهید نوشت خواهد بود.  ما در مورد "if", "repeat until" , "repeat"
          و "if else" یاد گرفتیم.
      3:
        image: notes/hoc6_3.jpg
        text: اگر از اولین یک ساعت کد خوشتان امد, code.org را بازدید کنید تا به تحصیلات
          خود درعلوم کامپیوتر ادامه دهید! پس از تکمیل دوره 20 ساعته ما, برمبانی برنامه
          نویسی مسلط خواهید شد, و می توانید شروع کنید به یادگیری نوشتن نرم افزار های
          تلفن, دستورالعمل های ربات, بازیها، و هر چیزی دیگری که بخواهید.
      4:
        image: notes/hoc6_4.jpg
        text: هر چیزی را که ما انجام می دهیم تکنولوژی تغییر میدهد و مهم نیست که شما
          جوان باشید یا پیر:‌ برنامه نویسی لذت بخش است، خلاق است، و هر کسی می تواند
          یاد بگیرد!
    20_wrapup:
      1:
        text: به زودی نوتها نشان داده می شود!
    frozen_intro:
      1:
        text: سلام، اسم من لینزی هست. من مدل سازی ، اجرا و نوشتن اپلیکیشن های خودم
          رو انجام میدم. بیاید از کد استفاده کنیم تا به آنا و السا ملحق بشیم وقتی
          دارن معجزه و زیبایی یخ رو کشف میکنن.
      2:
        text: شما وقتی رو یخ اسکیت میکنید دونه های برف و الگوهایی رو می سازید و یک
          سرزمین عجایب زمستونی رو درست میکنید که میتونید اون رو با دوستتاتون به اشتراک
          بگذارید.
      3:
        text: در یک ساعت آینده، شما مقدمات کدنویسی رو یاد میگیرید. برنامه نویسی ستنی
          معمولا با با نوشتن متن هست اما ما از Blockly (بلوکی) استفاده میکنیم که با
          استفاده از بلوک های بصری هستند. شما میتونید با گرفتن و انداختن اون ها برنامه
          هاتون رو بنویسید. این روشی هست که دانشجوهای دانشگاه هم برای یادگیری ابتدایی
          ازش استفاده میکنند. در قسمت اجرایی بلوک ها شما هنوز دارید کد مینویسید.
      4:
        text: یک برنامه مجموعه ای از دستورالعمل هاست که به کامپیوتر میگه که چه کار
          باید بکنه. بیاید یک کد یا یک برنامه بسازیم که به السا منم کنه یک خط ساده
          بسازه. اما بعد ها از همین برای ساختن الگوهای پیچیده تر استفاده خواهیم کرد.
      5:
        text: صفحه شما به سه بخش تقسیم میشه. در بخش چپ، سطح یخ وجود داره که شما میتونید
          برنامه تون رو اجرا کنید. دستورالعمل ها برای هر مرحله درست زیر این سطح نوشته
          شده اند.
      6:
        text: بخش میانی جعبه ابزار هست و هر کدوم از بلوک ها نشون دهنده عملی هست که
          اکسا و آنا میتونند انجام بدهند.
      7:
        text: بخش سفید در قسمت راست فضای کار نامیده میشه، که جایی هست که ما برنامه
          مون رو می سازیم. برای حرکت دادن سطح یخ، شما باید از بلوک "به سمت جلو حرکت
          کن" استفاده کنید.
      8:
        text: در اینجا، "حرکت به جلو" یعنی 100 پیکسل به جلو حرکت کن. وقتی دکمه "اجرا"
          فشار داده میشود، چه اتفاقی رخ خواهد داد؟ السا مقدار مشخصی رو به جلو خواهد
          رفت که در واقع 100 پیکسل است. پیکسل ها اساسا مربعهای بسیار کوچک در صفحه
          نمایش کامپیوتر شما هستند.
      9:
        text: بلوک دیگر در این پازل می گوید:" 90 درجه به راست گردش کن." و هنگامی که
          ما از این بلوک "گردش به راست" استفاده می نماییم، السا را وادار به گردش به
          همان سمت می نماید. می توانید مقادیر مختلف را که السا می تواند چرخش کند را
          امتحان نمایید. در این حالت 90 درجه چرخش است. و این هم 120 درجه چرخش است.
      10:
        text: به خاطر داشته باشید که می توانید تعداد پیکسل ها و درجات را با کلیک کردن
          روی پیکان کنار آنها را تغییر دهید.
    frozen_loops:
      1:
        text: سلامو من پائولا هستم. کامپیوترها واقعاً در تکرار کردن کارها خوب هستند.
          شما می توانید تا 10، 20 و یا 100 بشمارید، اما یک کامپیوتر می تواند تا میلیارد
          یا هزار میلیارد هم شمارش کند. حوصله اش سر نمی رود و برایش چند ثانیه بیشتر
          طول نمی کشد. حتی زمانی که می شمارد، نقاشی می کشد یا هرکاری که انجام می دهد،
          کامپیوتر ها می توانند آن را صدها بار یا حتی میلیاردها بار تکرار نمایند.
      2:
        text: در برنامه نویسی، ما به این  یک حلقه میگوییم. حلقه این است که چگونه  کد
          شما رابارها و بارها تکرار کند. در معمای آینده هدف شما این است که به آنا
          کمک کنید به ایجاد یک مربع با بلوک "تکرار" .
      3:
        text: هر بلوکی که شما داخل بلوک "تکرار" قرار دهید، به دفعات تکرار می گردد،
          به هر تعدادی که بخواهید.
      4:
        text: برای رسم یک مربع، می توانید از بلوکهای "حرکت به جلو" و "چرخش به راست"
          4 بار استفاده نمایید. اما ساده ترین راه آن است که به یکبار کامپیوتر بگویید
          "حرکت به جلو" و "90 درجه چرخش به راست" و سپس بگویید که این دو کار را 4 بار
          تکرار نمید. برای این کار باید بلوکهای "حرکت به جلو" و "چرخش به راست" را
          داخل یک حلقه "تکرار" قرار دهید.
      5:
        text: به خاطر داشته باشید می توانید عدد بلوک "تکرار" را به هر چیزی تغییر دهید،
          و هر چیزی که داخل حلقه تکرار باشد را به همان تعداد تکرار می نماید.
    frozen_functions:
      1:
        text: سلام, من کریس بش. من یک بازیکن حرفه ای بسکتبال, و من در کالج کدنویسی
          میکنم.
      2:
        text: یکی از مهم ترین مفاهیم در علوم رایانه این است که چگونه دستورات جدید
          را تعریف کنیم. اکثر زبانهای کامپیوتری تنها حدوداً 100 دستور یا کلمه را شامل
          می شوند. و واقعا، هنر و جادو در این است که شما کلمات جدید خودتان را از میان
          این بلوکها بسازید.
      3:
        text: وقتی با استفاده از این توالی فرمان ها به یک کامپیوتر یاد دادید تا چطور
          یک فعالیت رو انجام دهد، شما میتوانید برای فعالیت خودتان اسم بگذارید تا بعداً
          استفاده از آن راحت تر باشد. وقتی فرمان خود را تعریف میکنید و به آن اسمی
          می دهید، یک تابع نامیده می شود.
      4:
        text: سلام، من جس هستم. وقتی با بلوکها کار می کنید، باید از "تابع" استفاده
          کنید تا عملی که بارها در در برنامه تکرار می شود را تعریف نمایید. برای مثال،
          کدی را برای ساخت یک مربع ایجاد نمودید.
      5:
        text: 'شما می توانید این را "تابعی" تعریف نمایید که نامش "یک مربع بساز" است '
      6:
        text: حالا شما یک بلوک جدید دارید که شما می توانید چندین بار برای ایجاد چند
          مربع از آن استفاده کنید
      7:
        text: بسیاری اشکال ابتدایی هستند که می توانید برای ساخت الگوهای پیچیده تر
          استفاده نمایید. در مسئله بعدی، کدی که اخیراً برای ساخت یک دایره نوشته اید،
          به عنوان یک "تابع" جدید در دسترس خواهد بود تا بتوانید دوایری با ابعاد مختلف
          بسازید. آیا می توانید السا را کمک کنید تا الگوهای زیبایی روی برف خلق کند؟
    playlab_intro:
      1:
        text: ما می خواهیم بازی هایی در محیط Play Lab بسازیم. بازی های خوب داستان
          دارند، و هر داستانی بازیگر دارد. ما خواهیم آموخت چگونه بازیگرانمان را مانند
          جادوگر، بیگانگان و حیوانات، به صحبت کردن، حرکت و تعامل با همدیگر وادار نماییم.
          در انتهای این آموزش، شما خواهید توانست یک بازی را از ایده اولیه تا اشتراک
          آن با دوستانتان بسازید.
      2:
        text: صفحه نمایش شما به سه قسمت اصلی تقسیم شده است. در سمت چپ فضای بازی وجود
          دارد، جایی که برنامه اجرا می شود. دستورالعمل ها برای هر مرحله در زیر نوشته
          می شوند.
      3:
        text: منطقه میانی جعبه ابزار است، و هر کدام از این بلوک ها یک قطعه از کد هستند.
          فضای سفید سمت راست فضای کاری نامیده می شود و این جایی است که کد ها ساخته
          می شوند.
      4:
        text: برای اجرا برنامه، باید بلوک هایتان را به بلوک نارنجی رنگ "زمان اجرا"
          متصل نمایید. می توانید چند بلوک را با هم، با کشیدن آنها تا جایی که خط زرد
          ظاهر شود ادامه دهید. و سپس آنها به هم جذب می شوند.
      5:
        text: در این مسئله اول، بازیگرما یک پنگوئن است و ما با کشیدن بلوک "بگو" در
          جای خود، کاری می کنیم که بگوید "سلام!". آن را به بلوک "زمان اجرا" متصل می
          کنیم و داخل آن می نویسیم "سلام." ما حتی می توانیم کاری کنیم که پنگوئن حرکت
          نماید، با استفاده از بلوک های "برو به راست" و "برو به چپ". وقتی بلوک هایتان
          را در جای خود قرار دادید، دکمه زرد رنگ "اجرای برنامه" را فشار دهید تا ببینید
          چگونه برنامه نوشته اید.
      6: 
    C1_going_places_safely:
      1:
        text: سلام! اسم من جرمی است. و من هفت سال دارم. من عاشق بازی کردن با کامپیوتر
          مادرم هستم ولی همیشه اوّل اجازه می گیرم. "مامان، میتونم برم پای کامپیوتر؟
          حتماً عزیزم."
      2: 
      3: 
      4: 
      5: 
      6: 
      7: 
