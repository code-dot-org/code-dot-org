---
zh-TW:
  data:
    short_instructions:
      2-3 Artist 1 new: 嗨，我是一個藝術家。您可以寫程式來讓我畫出任何東西。現在請您用一些程式積木，讓我沿著圖中的灰色線條畫畫。（每一條線的長度都是
        100 像素）
      2-3 Artist 11: '我們來做一個停止的交通標誌吧！畫出一個正八邊形，每邊長 100 像素。 '
      2-3 Artist 12: "建立一個圓形來完成這個眼球！\\\r\n\\\r\n如果小藝術家在每次的循環轉向 1 度，要重複這個程式多少次才能畫出一個圓形呢？180？360？500？"
      2-3 Artist 2 new: '這房子有個半完成的牆。每一邊都應該是 100，但是半完成的牆是只有 50。請試著完成這個牆吧。 '
      2-3 Artist 3.4: |-
        跳躍積木只會移動小藝術家而不會繪圖。
        同時使用`跳躍-向前`和`移動-向前`積木來畫出這個虛線。
        每個線條長度為 50 像素。
      2-3 Artist 3new: "紅色帽子的高是 100 像素，畫完比它矮 70 像素的黑色帽子。\\\r\n（注意：每個帽子的寬度都是 50 像素。）"
      2-3 Artist 4: 幫助我完成這隻貓的房子。
      2-3 Artist 6: 這個房子需要一個屋頂！畫出這個三角形。提示：三個邊的長度都相同。
      2-3 Artist 7: '畫完學校上頭的最後一組窗戶，這樣每個學生就可以看到窗外景色了。正方形窗戶的外框邊長是 25 像素。 '
      2-3 Artist 8: 替每一隻動物完成房間。把這個長方形切成 2 個大小相同的正方形。這個長方形的寬為 200 像素、高為 100 像素。完成這個關卡的方法不只一種，看看你可以想到幾種方法吧！
      2-3 Artist 9 NEW: 完成這個風箏
      2-3 Artist Assessment 1: |-
        評量：把最後一顆牙齒畫完。
        這顆牙寬：25 像素；高：25像素
      2-3 Artist Debugging 1: 這個帽子的寬度應該只有 50 像素，你能修正它嗎？
      2-3 Artist Debugging 2: |-
        畫出貓鬍鬚的程式不正確。

        修正這個程式來給貓畫上一樣長的鬍鬚。
      2-3 Artist Debugging 7: |-
        看起來Ｃ被畫反了！

        你可以將它改正嗎？
      2-3 Artist Debugging 8: "我的老師告訴我們做事要有始有終！\\\r\n\\\r\n幫我完成我的風車，你可以找到錯誤的地方嗎？"
      2-3 Artist Debugging 9: "有個部分斷開了！\\\r\n\\\r\n畫出莖的程式碼不大正確。想一想，要如何才讓小藝術家畫出正確的莖？"
      2-3 Artist Free Play: 自由遊戲！畫出你想要畫的任何東西。
      2-3 Artist Functions 10: 自由發揮：這裏有 2 個函式：一個是 big gear（大齒輪），另一個是 small gear（小齒輪）。用它們來畫出一台機器的內部。
      2-3 Artist Functions 11: "我們已經將 `draw a square`（畫個正方形）函式重新命名成 `draw a hexagon`（畫個六邊形），但是它還是只能畫出正方形！你可以修改
        `draw a hexagon` 函式，讓它能畫出每邊長 50 像素的六邊形嗎？\\\r\n\\\r\n用新的函式把圖案畫出來吧！"
      2-3 Artist Functions 11.5: "這裡是一個相同的 `draw a hexagon`（畫個六邊形）函式。\\\r\n\\\r\n如果你循環主要的程式
        6 次，每次循環都轉 60 度，會發生什麼事呢？"
      2-3 Artist Functions 12: "函式（Functions）很適合用來重複繪製複雜圖案。\\\r\n\\\r\n你可以使用 `draw
        a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 2: "函式（Functions）能讓你能夠製作一個屬於自己的新積木！\\\r\n\\\r\n我們已經把繪製一個正方形所需要的所有積木放到一個名叫
        `draw a square` 的函式裡。這一次，使用 `draw a square` 函式來製作個眼鏡。\n\\\r\n\\\r\n鏡片外框之間的距離為
        75 像素。"
      2-3 Artist Functions 3: "編輯 draw a square（畫個正方形）函式，用 115 像素的邊長來畫出較大的鏡片。\\\r\n\\\r\n正方形之間的間隔距離為
        45 像素。"
      2-3 Artist Functions 4: 現在，把這個函式放進迴圈來畫出這 3 個正方形。
      2-3 Artist Functions 9: |-
        自由發揮：這裏有個 draw a snowflake（畫個雪花）函式。
        用它來實現一個冬季場景！這是一個自由發揮的關卡，所以沒有要解決的問題，玩得愉快！
      2-3 Artist Loops New 1: 讓我們來畫個機器人的頭吧！你能做出一個邊長為 100 像素的正方形嗎？
      2-3 Artist Loops New 10: 現在我們用迴圈來把一堆的 V 連接在一起。
      2-3 Artist Loops New 11: 重建上一關的程式，但這次在迴圈裡添加一個向左轉 30 度的指令。現在把重複 8 次改成 24 次。
      2-3 Artist Loops New 12: 畫一個邊長為 100 畫素的鑽石圖形。
      2-3 Artist Loops New 13: "我們會從一些程式（灰色）開始來建立一個菱形。\\\r\n\\\r\n循環這些灰色的程式來建立有趣的圖案！"
      2-3 Artist Loops New 14: 玩玩這個畫菱形的程式，看看你可以畫出什麼圖案。試著修改轉向的角度，還有循環的次數。
      2-3 Artist Loops New 15: 現在，畫你喜歡的任何東西！
      2-3 Artist Loops New 2: "這個關卡和前一關差不多，不過這次，我們只可以用 1 個`移動-向前`積木，還有 1 個`轉向`積木。\\\r\n\\\r\n你可以使用`重複`積木來解決這個問題嗎？"
      2-3 Artist Loops New 9: 畫出一個簡單的 V（兩邊的長度都是 50 像素）以完成這個箭頭符號。
      2-3 Artist Nested Loops 1: 用一個`重複`積木包在整個程式外圍，以畫出這個圖形。
      2-3 Artist Nested Loops 10: 循環這個程式 12 次來完成這個圖案。
      2-3 Artist Nested Loops 11: 循環這個程式 4 次來完成這個圖案。每繞完一圈就轉向 90 度。
      2-3 Artist Nested Loops 12: 循環這個程式 12 次來完成這個漩渦。
      2-3 Artist Nested Loops 2: |-
        現在循環畫出這個三角形 6 次。

        每畫出一次，需要轉向 60 度後再畫下一個。
      2-3 Artist Nested Loops 3: "你需要循環這個三角形 12 次才能畫出個圖案。\\\r\n\\\r\n用一圈 360 度除以圖形數量
        12，就可以知道每個形狀畫完後要轉向的角度是多少了。"
      2-3 Artist Nested Loops 5: "用巢狀迴圈來畫出這棟大樓的窗戶。\\\r\n\\\r\n這些窗戶邊長為 20 像素，間距為 20
        像素。"
      2-3 Artist Nested Loops 6: "這隻恐龍的尾巴上有 8 根尖刺。\\\r\n每個尖刺有 30 像素長。將三角形循環 8 次，並確保在畫出每個三角形之後向前跳！"
      2-3 Artist Nested Loops 7: "循環這個三角形 10 次來畫出這個太陽。\\\r\n\\\r\n你會需要在每次畫三角形後移動然後轉向。\n\\\r\n\\\r\n想一想，每次轉向的角度是多少，角度
        = 一圈的度數除以三角形的個數。"
      2-3 Artist Nested Loops 8: |-
        現在我們來添加一些草到圖片上。

        每簇草的間隔距離為 50 像素。
      2-3 Artist Nested Loops Free Play: 自由發揮，使用巢狀迴圈畫些有趣的東西。
      2-3 Bee Conditionals 12: 盡可能用最少的積木幫我找到全部的花蜜！
      2-3 Bee Conditionals 13: "這裡也太多活要做了吧！\\\r\n\\\r\n使用你所學到的來收集所有花蜜及蜂蜜。"
      2-3 Bee Conditionals 14: |-
        我們把所有東西都放在一起吧！

        利用你學過的技能來幫我收集花蜜，用的積木愈少愈好。

        不要忘了在最後幫它們釀成蜂蜜。
      2-3 Bee Conditionals 15: "不陌生吧，這種樓梯模式的關卡。\\\r\n\\\r\n你可以只在有花蜜的花朵上採集嗎？用的積木愈少愈好。"
      2-3 Bee Conditionals 2: "我是一隻蜜蜂！\\\r\n使用最少的積木幫我採集到花朵中的所有花蜜。"
      2-3 Bee Conditionals 3: "仔細收集花蜜！\\\r\n\\\r\n幫我收集花蜜及蜂蜜，用的積木愈少愈好。  "
      2-3 Bee Conditionals 5: "小心不要採集到沒有任何花蜜的紫花。\\\r\n你必須用`如果花蜜`積木先檢查看看。"
      2-3 Bee Conditionals 6: 用一個「如果」積木來檢查這朵花上面有沒有花蜜。
      2-3 Bee Conditionals 7: 在有花蜜的花朵中採集花蜜。
      2-3 Bee Conditionals 8: |-
        這塊地上有紅色和紫色的花朵。
        紅花上的花蜜數量很明確，但是紫花上的花蜜數量就不知道了。
        收集所有的花蜜吧。
      2-3 Bee Conditionals 9: 收集每一朵花的花蜜。
      2-3 Bee Conditionals Assessment 1: 評量：收集所有的花蜜。小心，不要採集沒有花蜜的紫花。
      2-3 Bee Debugging 1: 這些積木真是讓我一陣錯亂！修正錯誤（可能不只一個）來收集到所有的花蜜。
      2-3 Bee Debugging 10: "這個關卡讓我腦袋轉個不停！\\\r\n修正錯誤（可能不只一個）來收集所有的花蜜及蜂蜜。"
      2-3 Bee Debugging 2: "你可以找到是哪兒出了問題嗎？\\\r\n改正\n錯誤（可能不只一個）並收集到全部花蜜。"
      2-3 Bee Debugging 4: 這些積木真是讓我一陣錯亂！修正錯誤（可能不只一個）來收集到所有的花蜜及蜂蜜。
      2-3 Bee Debugging 5: "那花看起來真美味！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。\\\r\n現在你可以同時使用運行和步進。"
      2-3 Bee Debugging 7: 修復錯誤（可能不只一個）以收集所有的花蜜與蜂蜜。
      2-3 Bee Debugging 9: "有點耐心！\\\r\n\\\r\n你需要修復程式裡的一些問題，才能夠收集所有的花蜜和蜂蜜。"
      2-3 Bee Debugging Assessment 1: "評量：是時候看看你學得如何了！\\\r\n\\\r\n改正錯誤（可能不只一個），收集全部的花蜜及蜂蜜。"
      2-3 Bee Functions 1: 函式是一段程式碼，用來執行某個任務。請使用 get 2 nectar（採集 2 個花蜜）函式，從每一朵花中採集花蜜。
      2-3 Bee Functions 10: "紫花的花蜜會在每次程式運行變成 1 或 0 個。\\\r\n\\\r\n創建一個函式，讓它可以只在有花蜜的紫花中，收集花蜜。"
      2-3 Bee Functions 2: "函式是執行特定任務的一串程式碼。\\\r\n\\\r\n用 `get 5` 這個函式來一次採集 5 個花蜜。"
      2-3 Bee Functions 3: 收集每一朵花的花蜜。
      2-3 Bee Functions 4: "`Move and get nectar`（移動並採集花蜜）函式讓蜜蜂轉向、收集花蜜，接著再讓蜜蜂轉向回到起始點。\\\r\n\\\r\n使用這個函式來收集所有的花蜜。"
      2-3 Bee Functions 5: |-
        這兒現在有更多的花蜜在花朵裡。
        編輯提供的函式，讓它可以採集 4 個花蜜，並使用它來收集到花朵裡的所有花蜜。
      2-3 Bee Functions 6: 現在用相同的函式從 3 朵花中收集到花蜜。
      2-3 Bee Functions 8: 建立你自己的函式來採集 7 個花蜜、向前移動、然後釀造 7 個蜂蜜。使用這個函式來收集所有的花蜜及蜂蜜。
      2-3 Bee Functions 9: 寫一個你自己的函式，順著路走、採集花蜜、釀造蜂蜜、然後讓蜜蜂回到路徑的起點。
      2-3 Bee Functions Assessment 1: 評量：用給定的函式從每朵花上採集花蜜。
      2-3 Bee Functions Assessment 2: 評量：新建一個函式來轉向、向前移動、釀造 3 個蜂蜜。然後讓蜜蜂返回出發的位置並向後轉。
      2-3 Bee Loops 1: "那些花看起來真是香甜可口！\\\r\n\\\r\n從每個花朵上採集花蜜，用的積木愈少愈好。"
      2-3 Bee Loops 10: 你能使用一個「當…」迴圈，裡頭包含 2 個其他的迴圈，以收集到所有的花蜜嗎？
      2-3 Bee Loops 13: 評量：使用最少量的積木來收集所有的花蜜。
      2-3 Bee Loops 1A: '嗨，我是蜜蜂。你能幫助我從這些花朵中收集花蜜嗎？ '
      2-3 Bee Loops 2: 使用最少的積木來收集所有花蜜及蜂蜜。
      2-3 Bee Loops 2A: 這一回，用一個迴圈來收集所有的花蜜。
      2-3 Bee Loops 3: 使用最少的積木，從每一朵花中採集花蜜，並在每一個蜂窩裡釀造蜂蜜。
      2-3 Bee Loops 3A: 使用一個`重複`迴圈來收集所有的花蜜。
      2-3 Bee Loops 3B: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      2-3 Bee Loops 4: "蜜蜂就是那麼忙！\\\r\n\\\r\n幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。"
      2-3 Bee Loops 4A: "在這關中，迴圈應該進行多少次？\\\r\n\\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      2-3 Bee Loops 5: "這個圖形的路徑不同於其他的圖形。\\\r\n\\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      2-3 Bee Loops 6: 你能用最快的方式，讓蜜蜂收集到所有的花蜜及蜂蜜嗎？
      2-3 Bee Loops 7: 多麼美麗的一片花田啊！幫助蜜蜂到每朵花上參觀一下。你能在 7 個積木內完成嗎？
      2-3 Bee Loops 8: |-
        這些紫色的花在每次關卡運行時，就會有不同的花蜜數量。

        使用`當花蜜…`迴圈來收集到所有的花蜜。

        只要條件判斷後是 true（剩下的花蜜數 > 0），這個迴圈就會不斷循環。
      2-3 Bee Loops Assessment 1: 評量：使用一個`當…`迴圈來採集這些花朵上的所有花蜜。
      2-3 Maze 1: '你可以幫我抓住那頑皮的豬嗎？把幾個`移動-向前`積木放到`當運行時`積木的下面，然後點擊「運行」。 '
      2-3 Maze 10: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 12: 你能用 1 個`移動-向前`和 1 個`重複`積木來創建出一個迴圈，然後到達小豬那兒嗎？
      2-3 Maze 13: 讓我抓到那隻豬！這一次，你只能用 1 個向前移動積木。
      2-3 Maze 15: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      2-3 Maze 16: 迴圈裡還可以放入更多的積木！你可以循環這個序列，讓殭屍吃到向日葵嗎？
      2-3 Maze 16 before: 想想看，如何用最快的方式讓我可以抓到豬？
      2-3 Maze 2: 那隻豬惹毛我了，幫助我抓到牠！
      2-3 Maze 3: 順著路徑讓我抓到那隻蠢豬，當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      2-3 Maze 4: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 6: 保持冷靜，幫我找到那隻壞豬豬。否則我真的會憤怒！
      2-3 Maze 7: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 8: 讓我抓到那隻豬！
      2-3 Maze 9: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze Loops 1: 你可以只用 5 個相同的積木就讓我抓到豬嗎？
      2-3 Maze Loops 17: 用你學到的，讓我吃到向日葵！
      2-3 Maze Loops 18: |-
        使用最少的積木帶我吃到向日葵！

        試試把一個`重複`迴圈放到另一個`重複`迴圈裡頭，這樣可以減少積木的使用次數。
      2-3 Maze Loops 19: "我們來把它帶到另一個層次！\\\r\n使用迴圈，讓我吃到向日葵，用愈少積木愈好！"
      2-3 Maze Loops 20: 使用最少的積木讓我吃到向日葵！
      2-3 Maze Loops 21: 使用最少的積木帶我吃到向日葵！
      2-3 Maze Loops Assessment 1: '評量：只能用 5 個積木，把我帶到向日葵那兒。 '
      4-5 Artist 1: '請幫我畫完我的盒子。（每個線段的長度是 300 像素） '
      4-5 Artist 11: 完成這些綠色的線。它們的長度是 300 像素，線條與線條之間的距離為 15 像素。
      4-5 Artist 2: 使用`重複`積木來循環這個程式，以完成這個正方形。
      4-5 Artist 3: 這個長方形花圃的周長是 600。長邊的長度是 200。畫出這個長方形，用的積木愈少愈好。
      4-5 Artist 3.5: 想一想，當你運行這個程式時會發生什麼事（你也可以直接點擊「運行」來看看）。接著，重複它一定的次數來完成這個圖形！
      4-5 Artist 4: 一個圓有多少度？藉由迴圈來創造一個彩色的圓。
      4-5 Artist 5: 我們可以把「???」換成什麼，殭屍才可以用提供的迴圈完成這個圖案？
      4-5 Artist 6: 這個正三角形的三個角都是 60 度，三個邊都是 200 像素。完成這個圖形。
      4-5 Artist 7: 這個直角三角形的角度分別是 30、60、90 度。斜邊的長度是 200 像素。完成這個圖形。
      4-5 Artist 9: 畫出圖形的右半邊，以讓這個設計對稱。這是個正三角形，邊長為 50 像素。
      4-5 Artist Assessment 1: 評量：用迴圈畫出正三角形。每一邊長 300 像素。
      4-5 Artist Free Draw 1: 隨便畫吧！把你的靈感變成創作！
      4-5 Artist Patterns 10: "這個是用來畫出 2 列六邊形的程式 - 循環整個程式 4 次就可以畫出整個蜂窩。\\\r\n\\\r\n你需要在每次的循環之後向後跳躍
        120 像素，以確保小藝術家不會跑出畫面。"
      4-5 Artist Patterns 11: 你需要重複迴圈多少次才可以畫出一個半圓？
      4-5 Artist Patterns 12: |-
        如果要建立另一個像這樣的迴圈，不過把左轉改成右轉，那會發生什麼事呢？

        你可以重複那些程式來畫出波浪嗎？
      4-5 Artist Patterns 13: "現在我們來循環做這件 4 次以建立這個畫框。當心轉角處 - 你不能直接轉向 90 度！\\\r\n\\\r\n如果循環
        3 度 60 次會產生一個半圓，這些程式中的哪些積木可以額外畫出四分之一圓作為畫框圓角呢？"
      4-5 Artist Patterns 2: 如果你放置一個正方形迴圈到其它的迴圈裡，我們稱它為巢狀迴圈（nested loop）。你需要在迴圈最外層添加什麼積木，讓所有
        15 個正方形靠在一起且排成一直線？
      4-5 Artist Patterns 3: |-
        現在讓我們加深難度！
        我們已經將整個程式積木嵌套在另一個迴圈內，但你需要讓小藝術家回到初始位置來畫出下一行。要在最外層迴圈下添加哪個積木，才能畫完整個網格？
      4-5 Artist Patterns 4: 這個菱形的邊長為 50 像素，角度分別是 120 及 60 度。用一個迴圈把它畫出來。
      4-5 Artist Patterns 5: "重複這個程式來製作一排 6 個的菱形。\\\r\n\\\r\n注意我們已修改菱形的程式，將重複次數從 2
        改成 3，你覺得那是為什麼？"
      4-5 Artist Patterns 6: 你需要重複這個積木多少次才能畫出網格上的所有菱形？
      4-5 Artist Patterns 7: 讓我們修改上一題的代碼來畫出這個更複雜的圖案。注意現在菱形是如何重疊的，試著把第一個「跳躍-向後」積木上的數值從
        100 改成 50（一半的距離）- 現在藝術家應該將第二個「跳躍-向後」上的數值改成多少？
      4-5 Artist Patterns 8: 使用一個迴圈來畫出這個六邊形，它的每個邊長是 40 像素，每個角度是 60 度。
      4-5 Artist Patterns 9: "現在重複這個程式 3 次來畫出這列圖案。\\\r\n\\\r\n每個六邊形的對角距離為 80 像素。"
      4-5 Artist Patterns 9.5: 讓我們循環這段程式來畫出兩列六邊形。注意第二列是如何被移動到右邊的。
      4-5 Artist Patterns Free Play: 自由發揮 - 試著親手做一個自己的圖案！
      4-5 Bee Conditionals 1: 這雲遮住了我的視線！檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。注意，它會變來變去的！
      4-5 Bee Conditionals 3: 現在蜜蜂只想要製作蜂蜜。在一些雲裡可能藏著蜂窩，仔細的檢查每個雲！
      4-5 Bee Conditionals 4: 有時雲裡面有花朵，有時雲裡藏著蜂窩！使用「如果…否則」積木，如果是花朵就收集花蜜。否則，就釀造蜂蜜（因為它是蜂窩）。
      4-5 Bee Conditionals 5: "雲下藏的不是花朵就是蜂窩！\\\r\n\\\r\n用`如果…否則`積木，如果是花的話就採集花蜜，\\\r\n否則，就釀造蜂蜜。"
      4-5 Bee Conditionals 6: "我不確定這朵花裡有多少花蜜，也許是 1 或 2 或 3 個。\\\r\n\\\r\n組合這個條件判斷積木（`如果`和`如果…否則`）來取得花朵中實際的花蜜數。\n\\\r\n\\\r\n記住，花蜜的數量會在你每次運行之後改變！"
      4-5 Bee Conditionals 7: |-
        這些花朵上可能有 3、2 或 1 個花蜜。

        完成 `check purple flower`（檢查紫花）這個函式，並使用它來收集花朵上的所有花蜜。
      4-5 Bee Conditionals 8: "寫個 `check flower make honey`（檢查花朵釀造蜂蜜）的函式。\\\r\n\\\r\n你的函式應該要檢查紫花裡有多少的花蜜（1-3
        不等）並採集起來。\\\r\n然後，再向前移動釀造蜂蜜。"
      4-5 Bee Conditionals Assessment 1: "**評量：**雲朵中可能隱藏著帶有花蜜的花朵，或是可裝蜂蜜的蜂窩。\\\r\n\\\r\n完成這個`get
        nectar or make honey`的函式，然後調用它來收集花蜜或蜂蜜。（註：get nectar or make honey 是採到花蜜或釀成蜂蜜的意思）\\\r"
      4-5 Bee Debugging 1: |-
        這些積木真是讓我一陣錯亂！

        你可以修正它們嗎？
      4-5 Bee Debugging 10: 找到錯誤並修正它們。
      4-5 Bee Debugging 11: 這個計數是正確的嗎？
      4-5 Bee Debugging 2: 幫助蜜蜂收集花蜜及製造蜂蜜。
      4-5 Bee Debugging 3: 找到錯誤並修正它們。
      4-5 Bee Debugging 4: 這些程式積木無法正常動作，你能幫我找出模式嗎？
      4-5 Bee Debugging 5: 這兒的程式積木有點不對勁…
      4-5 Bee Debugging 6: "在你每次運行時，紫色的花朵都會有不同數量的花蜜。\\\r\n\\\r\n修正這個程式以在每次運行時都能採集到花朵上的所有花蜜。"
      4-5 Bee Debugging 7: 這個函式缺少了一些東西…
      4-5 Bee Debugging 8: 函式本身沒問題，但它沒有被正確使用。
      4-5 Bee Debugging 9: 為什麼釀造的蜂蜜永遠都不夠用？
      4-5 Bee Debugging Assessment 1: 評量：修正程式碼。
      4-5 Bee Nested Loops 1: 使用一個迴圈來收集所有的花蜜。
      4-5 Bee Nested Loops 2: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      4-5 Bee Nested Loops 3: 將起始程式碼放到巢狀迴圈中來收集的所有花蜜。
      4-5 Bee Nested Loops 4: "收集每一朵花的花蜜，並在每一個蜂窩製造蜂蜜。 \\\r\n\\\r\n使用巢狀迴圈。 "
      4-5 Bee Nested Loops 5: 建立一個巢狀迴圈來收集所有的花蜜。
      4-5 Bee Nested Loops 7: 把這個迴圈放入另一個迴圈來建構一個巢狀迴圈，從花朵上採集到所有花蜜。
      4-5 Bee Nested Loops 9: 透過巢狀迴圈（在重複迴圈裡放置一個當…迴圈）來收集所有花朵裡的花蜜。
      4-5 Bee Nested Loops Assessment 1: "**評量：**用迴圈收集所有的花蜜及蜂蜜。"
      4-5 Bee Nested Loops Rows: |-
        採集每一排花朵中的花蜜！
        使用巢狀迴圈。
      4-5 Maze 1: 親愛的... 人類, 我... 殭屍。需要... 到... 向日葵。
      4-5 Maze 10: 你可以只用 4 個積木就到達向日葵那裡嗎？
      4-5 Maze 11: 你可以只用 6 個積木就到達向日葵那裡嗎？
      4-5 Maze 12: 好啦，現在有點不一樣了。你能不能只用 6 個積木完成關卡？
      4-5 Maze 2: 讓殭屍吃到向日葵，記得要避開食殭花！
      4-5 Maze 3: 就速要... 吃到... 向日葵。
      4-5 Maze 5: 你可以用最少的積木來完成這個關卡嗎？
      4-5 Maze 6: 使用最少的積木讓我吃到向日葵！
      4-5 Maze 7: 讓殭屍快一點吃到向日葵！你能用 11 個以下的積木來完成這個關卡嗎？
      4-5 Maze 8: "用最少的積木讓殭屍吃到向日葵。\\\r\n（記得要避開食殭花！）"
      4-5 Maze 9: "現在我們有個新的積木叫做`重複直到`。\\\r\n這可以讓我們持續循環指令，直到殭屍吃到向日葵。\\\r\n\\\r\n使用新的`重複直到`積木來完成這個關卡，用的積木愈少愈好。"
      4-5 Maze Assessment 1: 評量：用最少的程式積木取得向日葵。
      4-5 Maze Conditionals 1: 使用`重複 直到`積木讓殭屍吃到向日葵。
      4-5 Maze Conditionals 10: "你可以只用 3 個積木來幫助殭屍解決更複雜的關卡嗎？ \\\r\n\\\r\n如果你成功了，不管怎樣曲折的路他都能克服！"
      4-5 Maze Conditionals 2: 使用`重複 直到`積木讓殭屍吃到向日葵。
      4-5 Maze Conditionals 4: 好啦，這個關卡的解法和上一關很像，但是請記住你是怎麼應用`如果`、`重複直到`積木的。
      4-5 Maze Conditionals 6: "「偶想... 粗... 向日葵。」\\\r\n\\\r\n使用`如果`積木，讓殭屍用最少的積木到達向日葵那裡。"
      4-5 Maze Conditionals 7: 這個關卡的解法並不是特別困難，只不過請當心噬殭花！
      4-5 Maze Conditionals 8: "`如果…否則`積木可以檢查一個狀況，接著執行一個操作或另一個。\\\r\n\\\r\n使用這個新積木，讓我吃到向日葵。"
      4-5 Maze Conditionals 9: "再練習一次如何使用`如果…否則`積木！\\\r\n\\\r\n試試先用手指頭追蹤看看，再寫出程式，你能不能一次就成功。"
      4-5 Maze Conditionals Assessment 1: "**評量：**用一個`重複直到`和`如果/否則`積木讓我到向日葵的位置，使用的積木愈少愈好。"
      4-5 Nested Loops 1: '完成代碼來畫這些三角形。第一個三角形的代碼已經幫你打好了。提示: 3個三角形旋轉了360度'
      4-5 Nested Loops 11: 你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？每個正方形的邊長為 30 像素。
      4-5 Nested Loops 12: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      4-5 Nested Loops 2: '現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。這就是所謂的「巢狀式迴圈」。  '
      4-5 Nested Loops 3: "把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\\\r\n\\\r\n要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。"
      4-5 Nested Loops 5: 重複執行已有的程式來畫出一個風車。
      4-5 Nested Loops 6: 你可以藉由重複畫三角形的代碼來畫出一個六邊形嗎？
      4-5 Nested Loops 9: 在鱷魚的嘴內畫出牙齒!
      4-5 Nested Loops Assessment 1: 評量：使用一個巢狀迴圈來完成這個設計。
      4-5 While Loops 1: 把我移動到洞口，然後使用`填充`積木，鏟 2 鏟土填平它。
      4-5 While Loops 2: 把我移動到土堆，然後使用`移除 1`積木，挖除 5 鏟土。
      4-5 While Loops 3: |-
        盡可能使用最少的積木來完成這個關卡！

        讓我移動到土堆上並把土鏟平，再移動到坑洞上並把洞填滿。
      4-5 While Loops 5: 哇，現在這裡有兩個很深的坑洞！你可以寫個程式，填滿它們直到地面變平整嗎？
      4-5 While Loops 6: 哇，現在這裡有一個很大的土堆！你可以寫個程式剷平它們嗎？
      4-5 While Loops 7: 哇，現在這裡有三個土堆！你可以寫個程式，挖除它們直到地面變平整嗎？
      4-5 While Loops 8: " 有一個非常深的洞，還有一個非常大的土堆。需要幾鏟土才能把地面變平整呢？提示:：填土和挖土都用了「當…」迴圈。"
      4-5 While Loops Assessment 1: 這兒有許多坑洞和土堆。幫我把它們填滿或鏟除，讓地面變平整。
      AB_Debug_PlayLab3: 將騎士挪移到每根旗子那兒。如果出現了問題，請找出錯誤來！
      Alien Defender: 專案點子：在 Play Lab 裡設計一個獨一無二的遊戲！
      CDEF_debugging_flappy2: 為什麼這個遊戲操作不起來？
      CSD U3 Boolean Modify: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Boolean Modify_2018: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Boolean Modify_2019: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Keypress Boolean: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Keypress Boolean_2018: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Keypress Boolean_2018_2019: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Keypress Watchers: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Keypress Watchers_2018: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 Keypress Watchers_2019: 修改一下程式，讓所有的 console.log 指令輸出 true
      CSD U3 L5 Freeplay: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 L5 Freeplay_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 L5 Freeplay_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Sprites intro sprites: 做這個
      CSD U3 Sprites intro sprites_2018: 做這個
      CSD U3 Sprites intro sprites_2019: 做這個
      CSD U3 Variables change circle size: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables change circle size_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables change circle size_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2_2018_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random with assignment: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random with assignment_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random with assignment_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U5 black white images pixelation: 利用 0 和 1 來完成這個 X 圖形。
      CSD U5 black white images pixelation 2: 畫一個笑臉(點擊這裡瀏覽圖案)
      CSD U5 black white images pixelation 2_2018: 畫一個笑臉(點擊這裡瀏覽圖案)
      CSD U5 black white images pixelation 2_2019: 畫一個笑臉(點擊這裡瀏覽圖案)
      CSD U5 black white images pixelation 3: 修改寬度和高度的滑桿以找到圖像（點擊這裡查看更多）
      CSD U5 black white images pixelation 3_2018: 修改寬度和高度的滑桿以找到圖像（點擊這裡查看更多）
      CSD U5 black white images pixelation 3_2019: 修改寬度和高度的滑桿以找到圖像（點擊這裡查看更多）
      CSD U5 black white images pixelation 5: 畫你喜歡的任何東西
      CSD U5 black white images pixelation 5_2018: 畫你喜歡的任何東西
      CSD U5 black white images pixelation 5_2019: 畫你喜歡的任何東西
      CSD U5 black white images pixelation_2018: 利用 0 和 1 來完成這個 X 圖形。
      CSD U5 black white images pixelation_2019: 利用 0 和 1 來完成這個 X 圖形。
      CSDU4 - Design Mode - 18: 修復靶心遊戲的佈局。（點擊觀看完整說明）
      CSDU6 arrays select rainbow: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 arrays select rainbow_2018: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 arrays select rainbow_2019: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      Course 4 Artist 1: '幫我畫一個盒子。（每個線段的長度是 200 像素） '
      Course 4 Artist 10: "點擊此處再次觀看完整說明！\\\r\\\r\n這是有趣圖形的程式碼。當你每次都轉一點方向角度，重複程式碼很多次會發生什麼事呢？注意在此圖案中會轉到
        420 度，這表示小藝術家晝完時，它會朝向與開始不同的方向。它會朝著從開始方向右邊 60 度的方向。"
      Course 4 Artist 11: 現在來挑戰一下！多試驗、多試錯，不要指望一次就能畫出完全的圖案。想觀看更多提示？點擊這裡！
      Course 4 Artist 12: "想再看個啟發人的設計或者提示嗎？點擊這裡！ \\\r\n\\\r\n除此之外，你也可以設計自己的圖形！"
      Course 4 Artist 13: 還在玩啊？給你一張空白畫布，你可以在上面設計任何東西，隨你高興！
      Course 4 Artist 2: 你可以用迴圈來繪製最外圍的灰色正方形嗎？（每邊邊長為 300 像素）
      Course 4 Artist 20: 還在玩啊？給你一張空白畫布，你可以在上面設計任何東西，隨你高興！
      Course 4 Artist 3: 想一想，當你運行這個程式時會發生什麼事（你也可以直接點擊「運行」來看看）。接著，重複它一定的次數來完成這個圖形。
      Course 4 Artist 4: 一個圓有多少度？將這個數字填到重複積木中，來創造一個彩色的圓。
      Course 4 Artist 5: 畫出另一半圖形，讓它對稱。這是等邊三角形，每條邊是 50 像素。提示：你可能需要多運行幾次代碼來看看需要加上哪些積木。
      Course 4 Artist 6: 完成程式碼以畫出這 3 個正三角形。
      Course 4 Artist 7: '現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。這就是所謂的「巢狀式迴圈」。 提示：全部 10 個三角形完成了
        360 度的旋轉。  '
      Course 4 Artist 8: 用迴圈包住這些程式積木，重覆執行多次來畫出這個太陽
      Course 4 Artist 8a: 記得這個圖形嗎？現在我們要讓你建立它，但這次我們不提供任何初始積木！
      Course 4 Artist 9: 循環這個圖樣 10 次並確定在每個圖樣畫完後轉向。
      Course 4 Artist Binary 1: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。 當藝術家看到
        1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\\r \n\\\r\n運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。"
      Course 4 Artist Binary 2: 怎樣的二進制字符串可以讓你循環 8 次來畫出這樣的圖像？
      Course 4 Artist Binary 3: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      Course 4 Artist Binary 4: 圖像上每一排都是用二進位制（binary）組合成的字串。你可以重新排列它們，讓圖片上的哭臉變笑臉嗎？
      Course 4 Artist Binary 5: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      Course 4 Artist Binary 6: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      Course 4 Artist Binary 7: 完成這幅畫。
      Course 4 Artist Binary Free Play 2: 自由發揮：這裡有張空白畫布讓你創作，開心的玩吧！
      Course 4 Artist Binary Free Play 2a: "這是一個有更高解析度的畫布（16 X 16像素）！\\\r\n\\\r\n當我們開始使用這些位元創作時，看看會發生甚麼事情？"
      Course 4 Artist Binary Free Play 2b: 點擊此處觀看提示。
      Course 4 Artist Binary pre1: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      Course 4 Artist For Loops 1: 使用重複積木來畫出這個邊長 50 像素的三角形。
      Course 4 Artist For Loops 11: "還記得在上一個階段，我們使用一個變數來控制圖形的邊數嗎？\n現在我們要用 counter
        這個變數來做相同的事情。\n這個圖案從一個三角形開始，且每次增加 1 個邊直到畫出一個十邊形。每個圖形的邊長為 100 像素。 "
      Course 4 Artist For Loops 11a: "讓我們總結一下吧！用你所知道的計數迴圈與計數器變數，來創造出每個形狀都比前一個多 2 條邊的圖案，確保每條邊長是這個多邊形邊數的
        10 倍。\\\r\n\\\r\n這裡提供給你一些些參考的程式碼。"
      Course 4 Artist For Loops 14: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      Course 4 Artist For Loops 15: 自由發揮：試著用計數迴圈來繪製一些自己的畫作。我們也為你新增了一些有用的變數。
      Course 4 Artist For Loops 2: 我已經放置了畫三角形的程式到計數迴圈（for loop）裡，計數是從 50 算到 100，每次增加
        10。注意：先點擊「運行」前，確定這些程式碼，這樣你才知道如何完成後面的關卡。
      Course 4 Artist For Loops 3: 參考上個關卡來完成這一關，這個最小的三角形邊長為 20 像素，最大的是 200 像素，每個三角形都比前一個的邊長多
        20 像素。
      Course 4 Artist For Loops 4: '要怎樣利用學過的積木來畫這些正方形？它們之中最小的邊長是 15 像素，最大的是 300 像素，每個正方形的邊長都比上一個長
        15 像素。 '
      Course 4 Artist For Loops 6a: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      Course 4 Artist For Loops 8: "只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？\\\r\n\\\r\n提示，你需要移除某個東西！"
      Course 4 Artist For Loops Challenge: |-
        **挑戰：**
        你能想的到要如何建立這個多邊形圖案嗎？這個圖案的邊長是 40 像素，用你所有學過的東西試試看。
      Course 4 Artist For Loops inspire: "自由發揮靈感：你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東。
        \\\r\n\\\r\n需要提示？點擊這裡。"
      Course 4 Artist Functions Inspiration: 點擊此處再次觀看提示。
      Course 4 Artist Functions challenge: 點擊此處再次觀看提示。
      Course 4 Artist Inspire: "想再看個啟發人的設計或者提示嗎？點擊這裡！ \\\r\n\\\r\n除此之外，你也可以設計自己的圖形！"
      Course 4 Artist Vars 11: 這裡是更複雜的程式，不過用的是和上個關卡相同的概念 - 你應該將 sides（邊）變數設成多少，才可以畫出這個用正方形組合出來的圖案呢？
      Course 4 Artist Vars 12: 我們將 sides（邊數）參數設為 5。添加到算式中的邊數越多，圖形就會變得愈大！注意這裡有另外一個參數叫做
        length（長度）。我們可以在「移動-向前」的地方用到它。將 length 設成 75 讓每個形狀的邊長變成 75。
      Course 4 Artist Vars 13: "當一個圖形的邊愈多，每個邊的長度就要愈小，這樣你才能讓整個圖案顯示在畫面。\\\r\n我們來重建這個演算式來畫出神奇的圖案，取代原來需手動設置的
        length（長度）變數，我們改用運算類型的積木和一個 sides（邊數）變數。這可以確保每個圖形都能完整顯示在畫面。每個多邊形的周長都是 300
        像素。\\\r\n需要一些提示嗎？點擊這裡。"
      Course 4 Artist Vars 14: "自由發揮：讓我們一探究竟！現在你的演算法嵌入了又一個循環中。試著改變這兩個變數的值來畫出很酷的圖形。
        \\\r\n\\\r\n如果想看到更好的效果，試試使用顏色積木！在循環裡面使用隨機取色，看看效果如何。"
      Course 4 Artist Vars 2: 取代向前移動 150 像素，「移動」積木現在用了一個變數叫做 length（長度）。你可以將 length
        設為 150 以畫出這個新的三角形嗎？
      Course 4 Artist Vars 4: 現在我想要製作一個長方形，它的高是寬的 2 倍。這裡有個叫作 width（寬度）的變數，請把它設為 100。你能用運算類別裡的積木來完成程式嗎？
      Course 4 Artist Vars 6: "這是可以畫出任何規則多邊形的一些程式。有一個新的變數叫做 sides（邊），現在設定為 4。不管邊數是多少，你都能使用
        sides 變數（隨著運算積木）來轉向正確的角度嗎？\\\r\n\\\r\n點擊此處以返回到提示！"
      Course 4 Artist Vars 7: "使用你在上個關卡學到的，用 sides（邊數）變數來建立這個六邊形。\\\r\n\\\r\n看看你在只修改
        1 個值的情況下能否畫出一個三角形、正方形、五邊形或者八邊形？"
      Course 4 Artist Vars 8: 自由發揮：嘗試改變這個圖形的邊數。你能改變算法，不管邊數是多少，都讓這個圖形的大小基本不變嗎？提示：如果你用長度除以邊數，這樣當邊數變多的時候，每條邊長會變短。
      Course 4 Bee 2: 使用「如果…否則」積木來檢查每個物品，看看它們是花朵還是蜂窩。如果是花朵，就收集一個花蜜…不然，就釀造一個蜂蜜。
      Course 4 Bee 3: 裡頭不是花朵就是蜂窩。這回，使用「如果…否則」積木。**如果**它是花朵，就收集一個花蜜；**否則**就收集一個蜂蜜。
      Course 4 Bee Loops 5 NEW: 這裡有 3 朵花，你能找出你需要重複 3 次去收集花蜜的操作模式，在使用最少數量的積木情況來完成這個關卡嗎？
      Course 4 Bee Loops 5a NEW: 現在，使用迴圈來幫助蜜蜂在往蜂窩的路上採集所有的花蜜，盡可能使用最少的程式積木。當你到達目的地時，別忘了要釀成蜂蜜！
      Course 4 Bee Params 1: 寫一序列的指令以收集所有花蜜。使用 `get 3 nectar`（採集 3 個花蜜）這個函式，其功能為轉向，然後移動到目標並採花蜜，最後回到原本的位置。
      Course 4 Bee Params 2: 修改 get 3 nectar（採集 3 個花蜜）這個函式，讓我右轉找到花朵，而不是向左轉。
      Course 4 Bee Params 3: '現在，兩邊都有花了！這裡有二個變量，分別是 left（左）、right（右）。同時我們已添加了一個叫做
        direction（方向）的參數到 get 3 nectar（採集 3 個花蜜）函式裡。編輯函式 get 3 nectar，當變量 left 或者
        right 傳遞進函數時，讓蜜蜂往正確的方向轉。  '
      Course 4 Bee Params 4: 嘗試用你的新函式來收集所有的花朵。記得要用 left（左）和 right（右）這兩個變數。
      Course 4 Bee Params 5: 讓我們從頭開始 - 你能建立一個含有 direction（方向）參數的 get 5 nectar（拿 5
        罐花蜜）的函式嗎？
      Course 4 Bee Params 6: 如果我們只用一個函式就能收集到所有花蜜的話，那不是很棒嗎？試著添加一個名為 nectar units（花蜜數）的新參數到函式，來控制要採集的花蜜數量。你可能也會想為這個函式重新命名！
      Course 4 Bee Params 7: 試著使用你的新函式來收集所有的花蜜。
      Course 4 Bee Params 8: 挑戰：現在還有蜂蜜也需要處理！重寫你的函式以使用相同數量的蜂蜜和花蜜。怎樣用這些數字來決定你應該做什麼？
      Course 4 EC 1a: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 1b: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2a: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2b: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2c: 沒有規則、沒有提示。只有挑戰！
      Course 4 Maze 2: 小心 TNT 炸藥！
      Course 4 Maze 3: '為憤怒鳥編寫程式，想辦法讓他抓到豬。 '
      Course 4 Maze 4: 當你完成關卡後，試試看用「重複」積木來減少積木的使用數…
      Course 4 Maze 5: 你可以用最少的積木來完成這個關卡嗎？
      Course 4 Play Lab Params 1: 這裡有個函式叫做 `jump`（跳躍），它可以讓你的主要角色向上跳 100 像素。運行這個程式，用方向鍵來控制小狗，並利用
        `jump` 函式收集所有的旗幟。
      Course 4 Play Lab Params 10: "我們為你準備了最後一個函式。\n\n使用一個「如果」陳述式來編程你的遊戲，當 player_score（玩家分數）達到了一定的數字後，就呼叫
        level_up（升級）這個函式。\n\n例如 player\\_score > 6\n\n玩玩看這個遊戲，達到 level 3 你就可以移動到下個關卡。 "
      Course 4 Play Lab Params 2: "現在我們知道有些旗子太高了，跳不上去！讓我們使用「向上」、「向下」方向鍵來讓我們能夠跳躍不同的高度。\\\r\n\\\r\n我們添加一個
        height（高度）參數到 jump（跳躍）函式裡，向上鍵用來讓小狗跳 200 像素高， 向下鍵用來讓小狗跳 100 像素高。"
      Course 4 Play Lab Params 3: '我們已經添加另一個參數到 jump（跳躍）函式裡，這樣一來我們就可以在其他角色使用它。每個角色有個數字作代表，從
        1 開始算起。編輯這個 jump 函式，讓它使用 actor（角色）參數來讓正確的角色跳起來。 '
      Course 4 Play Lab Params 4: "這裡有個函式叫做 `patrol`（巡邏）。\n\\\r\n\\\r\n編輯 `patrol`
        讓貓能夠向上移動 400 像素，再向下 400 像素。"
      Course 4 Play Lab Params 5: 編輯 patrol（巡邏）函式，加進一個 actor（角色）參數，這樣一來我們就可以為每個在畫面上的角色呼叫它。記住這些角色分別對應數字
        1、2、3。
      Course 4 Play Lab Params 6: 添加一個名為 speed（速度）的參數到 patrol（巡邏）函式中。試著在「設定速度」積木中使用新的參數，來幫助企鵝趕在其他動物前得到所有旗幟。
      Course 4 Play Lab Params 7: "我們來點有趣的！仔細看看提供的程式碼，你能不能想像每個積木在做些什麼。 \\\r\n當你完成後，使用方向鍵來控制小狗，並收集到所有的旗子。
        \\\r\n注意：\n你不需要對程式進行任何修改"
      Course 4 Play Lab Params 8: 使用`當角色碰到`積木，在小狗碰到其他角色時，把狗送回左上方的位置。
      Course 4 Play Lab Params 9: "這是一個早先的遊戲，但是大部分程式都隱藏了。這裡有個新函式叫做 score_points（獲得分數）。\\\r\n\\\r\n編輯這個函式，使得
        points（分數）參數能被添加到 player_score （玩家分數）變數上。 \\\r\n\\\r\n變數 player\\_score 應該會在每次小狗的派碰到小貓時增加；在每次小貓的三明治碰到小狗時減少。
        \\\r\n\\\r\n注意：當你完成後，點擊「運行」玩玩看，當小狗得到 6 分時，就可以進入下一關。 "
      Course 4 Play Lab Vars 1: 這一次你不需要寫任何程式，只要點擊「運行」來玩這個遊戲！在這個遊戲裡，你扮演一隻狗，要想辦法比貓拿到更多的旗子。使用向下鍵來控制狗，點你玩完了，點擊「完成」。
      Course 4 Play Lab Vars 2: 上一關的比賽一點都不公平！修改 dog\_speed 變數，確保你可以收集到比貓還要多的旗子，誰先拿到
        10 個旗子就勝利！
      Course 4 Play Lab Vars 3: 使用向左鍵和向右鍵移動、向上鍵是跳，看看你能不能收集到所有的旗子。
      Course 4 Play Lab Vars 4: 現在，我們使用了一個叫作 height（高度）的變數來控制小狗能跳躍的高度。更新 height 變數來讓小狗能夠跳得夠高以碰到所有旗子。
      Course 4 Play Lab Vars 5: '讓我們來創造一個遊戲吧！首先我們需要計分，我們將分數設為 10 分。 '
      Course 4 Play Lab Vars 6: "使用向右鍵扔出派。\\\r\n\\\r\n在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加
        1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達
        10 分（每次加 1 分）就過關。"
      Course 4 Play Lab Vars 7: 很好，現在我們來確定這個遊戲不至於太簡單！每當小狗（角色1）被小貓（角色2）的三明治丟到時就扣 1
        分。初始分數 10 分似乎不大困難，我們把分數從 10 改成 0 後再試試吧。
      Course 4 Play Lab Vars 9: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\\r\n\\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\\r\n\\\r\n提示：可以捲動頁面以查看工作區裡的所有指令。"
      Course 4 Play Labs For Loops 1: 我們來讓狗從 1 叫到 100。使用計數迴圈（for loop）還有計數器積木，在每循環一次時就念出計數器變數當前數值。
      Course 4 Play Labs For Loops 2: 這一回，幫助小貓數數，從 1 算到 101，只要奇數。
      Course 4 Play Labs For Loops 3: 如果我們數大一點的數，也能在相同次數內完成它。試著讓小狗從 10 數到 1000，每次增加
        10。
      Course 4 Playlab For Loop Freeplay: 自由發揮：使用目前為止你學會的一切製作一個遊戲，包括計數迴圈！
      Course 4 Playlab For Loops 4b: 你能修改迴圈中的**增量**，讓比賽變得更公平嗎？
      Course 4 Playlab For Loops 5b: 調整這些計數迴圈（for loops）的間隔數，以便這兩個角色最後到達完全相同的位置。
      Course 4 Playlab For Loops 6b: "編輯這個計數迴圈去創造一個你自己覺得好玩的遊戲！\\\r\n點擊「運行」然後盡你所能的點擊獨角獸，你能超過我們的最高紀錄
        24 分嗎？ "
      Course 4 SCF 1: 使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？
      Course 4 SCF 1a: 想想看，要怎樣用最少的積木收集到所有的花蜜？
      Course 4 SCF 1b: 想想看，要怎樣用最少的積木收集到所有的蜂蜜？
      Course 4 SCF 2: '用你在上個關卡學到的來畫出像這樣的圖形。注意：如果你合併了參數，程式碼會變得更精簡。 '
      Course 4 SCF 3: '用你在上個關卡學到的來畫出像這樣的圖形。注意：如果你合併了參數，程式碼會變得更精簡。 '
      Course 4 SCFL 1: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCFL 1a: 你能用最少的積木讓鼠奎特到達他的橡果園嗎？
      Course 4 SCFL 1b: 你能用最少的積木讓鼠奎特到達他的橡果園嗎？
      Course 4 SCFL 2: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCFL 3: 想想看，如何重複的繪製出這個圖？
      Course 4 SCFL 4: 想想看，如何重複的繪製出這個圖？
      Course 4 SCFL 6: 想想看，如何用單一迴圈重複的繪製出這個圖？
      Course 4 SCFL 7: 小藝術家想要畫出海浪！想一想，要怎麼重建這個圖案？
      Course 4 SCV 1: 點擊此處再次觀看說明。
      Course 4 SCV 2: 點擊此處再次觀看說明。
      Course 4 SCV 3: "現在來玩個捉人遊戲！捉住小貓得 2 分、捉住企鵝得 3 分、得到 10 分就獲勝！ \\\r\n但是小心，當小貓和企鵝互相碰到時，他們就會把分數要回去。\\\r\n\\\r\n添加所需要的積木，讓這個遊戲按照解說那樣運行。怎樣讓小狗能用方向鍵往所有方向移動？怎樣在小狗捉住小貓或者企鵝時加分？怎樣在小貓和企鵝碰到時扣分？"
      Course 4 SCV 4: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCV 5: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCV 6: 點擊此處再次觀看說明。
      CourseD_Dance_Party_01: 將「創建一個新的」積木拖曳至工作區中，並把它放到「設定」積木裡頭。
      CourseD_Dance_Party_02: 讓麋鹿在 4 個小節後開始新的動作！
      CourseD_Dance_Party_03: 現在讓舞者在 6 個小節後開始新的動作！
      CourseD_Dance_Party_04: 將背景效果新增至您的程式。
      CourseD_Dance_Party_05: 使用另一個新的程式積木，讓舞者每 2 個小節改變動作。
      CourseD_Dance_Party_06: 建立一個名為 `backup_dancer1` 的舞者，為皮斯貓伴舞。
      CourseD_Dance_Party_08: 您是否能讓兩個備用舞者的大小相同？
      CourseD_Dance_Party_09: 使用「設定色調」積木來變更舞者的顏色。
      CourseD_Dance_Party_10: 使用「開始跟隨」程式積木，讓另一個舞者也能回應音樂。
      CourseD_Dance_Party_11: "「按下向上鍵時」程式積木允許您在按下向上箭頭時執行程式碼。按下向上鍵時，嘗試讓舞者進行一個快速的動作。"
      CourseD_Dance_Party_11_5: 使用「全部鴨子」積木，讓鴨子一起跳舞。
      CourseD_Dance_Party_11b: 按下向右鍵時，會讓機器人「掉落」一次，而按下向上鍵時，會讓機器人跳「牙線舞」一次。盡可能快速地掉落又跳牙線舞！
      CourseD_Dance_Party_12: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      CourseE_HOC 2018 Level_1: 打開箱子以取得小船。
      CourseE_HOC 2018 Level_10: 前往這個海洋遺址的入口。
      CourseE_HOC 2018 Level_11: 使用海洋遺址內部的海磷石建造一根導管。
      CourseE_HOC 2018 Level_2: 走向碼頭盡頭。
      CourseE_HOC 2018 Level_3: 穿越開放海域前往鱈魚的所在位置。
      CourseE_HOC 2018 Level_4: 使用重複迴圈前往海豚的所在位置。
      CourseE_HOC 2018 Level_5: 探索沉船以找到箱子。
      CourseE_HOC 2018 Level_6: 在冰塊中尋找以找到鮭魚。
      CourseE_HOC 2018 Level_7a: 搜尋這些水底廢墟以尋找箱子。
      CourseE_HOC 2018 Level_9b: 使用珊瑚做為航點以找到寶藏。
      Crack Random Substitution: 說明
      Crack a Caesar Cipher: 說明
      Dance Party 1-validated: 預測一下，當你點擊外星生物時會發生什麼事？
      Dance Party 4: 創建第三個角色，命名為 `alien3`，然後讓所有的外星生物站成一排。
      Dance Party 4_2019: 創建個看起來黃黃的外星生物，並讓所有的外星生物排成直線。
      Dance Party 5: 添加程式，讓外星人被點擊時變成不同的顏色。
      Dance Party 5_2019: 添加程式，讓外星人被點擊時變成不同的顏色。
      Dance Party 6: 使用`停止所有動作`積木讓每個外星生物被點擊時停止舞蹈。
      Dance Party 6_2019: 使用`停止所有動作`積木讓每個外星生物被點擊時停止舞蹈。
      Dance Party 7: 添加一個新的鐘的角色，並取名為 `myBell`，讓所有的外星生物在鐘被點擊時就跳相同的舞蹈動作！
      Dance Party Freeplay: 現在就來創造一個外星生物的舞會！
      Dance Party Freeplay_2019: 現在就來創造一個外星生物的舞會！
      Dance Party Predict: 預測一下，當你點擊外星生物時會發生什麼事？
      Dance Party Predict_2019: 預測一下，當你點擊外星生物時會發生什麼事？
      Dance_2019_01: '將<xml><block type="Dancelab_makeAnonymousDanceSprite" block-text="make
        a new dancer"><title name="COSTUME" config="&quot;CAT&quot;, &quot;PINEAPPLE&quot;">"CAT"</title><title
        name="LOCATION">{x: 200, y: 200}</title></block></xml>程式積木拖到工作區中，然後將其連接到<xml><block
        type="Dancelab_whenSetup2" next_connection_disabled="true" block-text="setup"></block></xml>程式積木中以製作您的第一個舞者。'
      Dance_2019_02: 選擇您按下按鍵時作出的舞蹈動作。
      Dance_2019_03: 開始跳舞吧！對每個舞者進行程式設計，讓他們在您按下不同按鍵做出相應動作。為每個舞者選擇您喜歡的動作，或者將其設置為「（隨機）」來做出完全出乎您預料的動作！
      Dance_2019_04: 第四小節之後，讓您的舞者開始新的動作。
      Dance_2019_05: 現在讓舞者在 6 個小節後開始新的動作！
      Dance_2019_06: 製作一組伴舞演員將領舞者圍繞在中間。
      Dance_2019_07: 更改伴舞演員組的大小。
      Dance_2019_09: 用這些新程式積木發揮創造力！
      Dance_2019_10: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      Dance_Party_01: 將「創建一個新的」積木拖曳至工作區中，並把它放到「設定」積木裡頭。
      Dance_Party_02: 讓麋鹿在 4 個小節後開始新的動作！
      Dance_Party_03: 現在讓舞者在 6 個小節後開始新的動作！
      Dance_Party_04: 將背景效果新增至您的程式。
      Dance_Party_05: 使用另一個新的程式積木，讓舞者每 2 個小節改變動作。
      Dance_Party_06: 建立一個名為 `backup_dancer1` 的舞者，為皮斯貓伴舞。
      Dance_Party_08: 您是否能讓兩個備用舞者的大小相同？
      Dance_Party_09: 使用「設定色調」積木來變更舞者的顏色。
      Dance_Party_10: 使用「開始跟隨」程式積木，讓另一個舞者也能回應音樂。
      Dance_Party_11: "「按下向上鍵時」程式積木允許您在按下向上箭頭時執行程式碼。按下向上鍵時，嘗試讓舞者進行一個快速的動作。"
      Dance_Party_11_5: 使用「全部鴨子」積木，讓鴨子一起跳舞。
      Dance_Party_11b: 按下向右鍵時，會讓機器人「掉落」一次，而按下向上鍵時，會讓機器人跳「牙線舞」一次。盡可能快速地掉落又跳牙線舞！
      Dance_Party_12: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      Dance_Party_extras_battle: 舞蹈團隊（點擊「更多」觀看細節）
      Dance_Party_extras_battle_2019: 舞蹈團隊（點擊「更多」觀看細節）
      Dance_Party_extras_every_beat: 四分音符（點擊「更多」觀看細節）
      Dance_Party_extras_every_beat_2019: 四分音符（點擊「更多」觀看細節）
      Dance_Party_extras_layout: 讓我們加入陣形！（點擊更多觀看細節）
      Dance_Party_extras_layout_2019: 讓我們加入陣形！（點擊更多觀看細節）
      Dance_Party_extras_on_beat: 低音、中音和高音（點擊「更多」觀看細節）
      Dance_Party_extras_on_beat_2019: 低音、中音和高音（點擊「更多」觀看細節）
      Dance_Party_extras_speed: 加速、減速（點擊「更多」觀看細節）
      Dance_Party_extras_speed_2019: 加速、減速（點擊「更多」觀看細節）
      Dance_Party_extras_visible: 他們要去哪？（點擊「更多」觀看細節）
      Dance_Party_extras_visible_2019: 他們要去哪？（點擊「更多」觀看細節）
      Find the Wizard: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      FoodFight: 這是一個遊戲範例，你也可以在 play lab 裡自己做一個。
      Frequency Analysis: 測試
      Function intro Ryan: 使用「建造橋樑」功能兩次，以開闢路徑前往火把。
      Function intro Ryan_2019: 使用「建造橋樑」功能兩次，以開闢路徑前往火把。
      Geometric Sun: "**專案點子：** 創作一個圖案，用幾何思維，這需要毅力和規劃！"
      Geometric Sun_2018: "**專案點子：** 創作一個圖案，用幾何思維，這需要毅力和規劃！"
      Guess The Number: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      HOC 2018 Level_1: 打開箱子以取得小船。
      HOC 2018 Level_10: 前往這個海洋遺址的入口。
      HOC 2018 Level_11: 使用海洋遺址內部的海磷石建造一根導管。
      HOC 2018 Level_12: 設計您自己的水下環境，您自己決定！
      HOC 2018 Level_2: 走向碼頭盡頭。
      HOC 2018 Level_3: 穿越開放海域前往鱈魚的所在位置。
      HOC 2018 Level_4: 使用重複迴圈前往海豚的所在位置。
      HOC 2018 Level_5: 探索沉船以找到箱子。
      HOC 2018 Level_6: 在冰塊中尋找以找到鮭魚。
      HOC 2018 Level_7a: 搜尋這些水底廢墟以尋找箱子。
      HOC 2018 Level_9b: 使用珊瑚做為航點以找到寶藏。
      Infinity_catch: 您能用方向鍵控制艾莎（角色2），讓她追上安娜嗎？
      Infinity_finale: 自由發揮吧！然後把您的成果分享出來！
      Infinity_move_collide: 阿廣是「角色1」，讓他向右走到杯麵那裡，然後在他們碰面時播放一個音效。
      Infinity_move_directions: 杯麵是「角色2」。添加移動積木讓杯麵可以透過方向鍵移動。讓它走向其它兩個角色。
      Infinity_move_right: 阿廣是「角色1」，用「移動」積木來移動阿廣往右走以碰到杯麵。
      Infinity_repeat: 用「重複無限次」積木讓安娜不停的上下移動 400 像素。
      Infinity_say: 用「說出」積木讓安娜說 Hi there.。
      Infinity_shoot: 杯麵是「角色2」。讓杯麵對著阿廣發射火箭吧！
      Infinity_shoot_directions: 阿廣是「角色3」，讓阿廣對著其他四個角色各發射一個東西出去，每一次發射後都等 1 秒再發射下一個。
      Infinity_touch_score: 讓安娜去碰雪花，每次碰到就得一分。點擊「運行」後，就用方向鍵去控制安娜讓她得分吧！
      InspirationalArtwork: 如果這個圖形給了你靈感，試著自己做一個類似的。或者，你也可以隨意的創作。
      InspirationalArtwork_2018: 如果這個圖形給了你靈感，試著自己做一個類似的。或者，你也可以隨意的創作。
      K-1 Artist Loops 1: 向東移動 4 次來畫出這條線。
      K-1 Artist Loops 2: 現在，使用一個迴圈畫出相同的線條。
      K-1 Artist Loops 3: 你可以讓這些積木循環執行到畫出 6 條線嗎？
      K-1 Artist Loops 4: 能用一個迴圈幫助我們畫出這座城堡的頂端嗎？
      K-1 Artist Loops 5: 將哪些積木重複 4 次才能畫出這些樓梯？
      K-1 Artist Loops 6: 這裡需要用到 2 個迴圈：一個用來上樓梯，另一個用來下樓梯。
      K-1 Artist Loops 7: 迴圈可以幫你完成這個圖案。
      K-1 Artist Loops 8: 這個樓梯的踏面比較長。
      K-1 Artist Loops 9: 要畫出這些樓梯，最簡單的方式是什麼？
      K-1 Artist Loops Free Play: 自由發揮，畫些有趣的東西！
      K-1 Artist1 1: 用一條線畫出這個人的腳
      K-1 Artist1 10: 用畫線和跳躍來畫出通往寶藏記號 X 的虛線路徑。
      K-1 Artist1 2: 用 2 條線畫出貓的鬍鬚！
      K-1 Artist1 3: 往東畫 2 條線再往北畫 2 條線來完成這間房子！
      K-1 Artist1 4: 向上下左右方畫線，完成城堡！
      K-1 Artist1 5: 用 2 條線來畫出這朵花的莖！
      K-1 Artist1 6: 用「跳躍」積木來完成這張圖片！
      K-1 Artist1 9: 利用繪製和跳躍積木來完成虛線。
      K-1 Artist2 1: 在三角形底下畫一個正方形。
      K-1 Artist2 2: 跳躍並在房子旁畫出一個正方形。
      K-1 Artist2 3: 在其他的正方形上方再畫另一個正方形
      K-1 Artist2 4: 畫出一個長方形來完成這座橋。
      K-1 Artist2 5: 畫出一個長方形來完成這座橋的支柱
      K-1 Artist2 6: 藉由畫 2 個正方形來做出一個長方形！
      K-1 Artist2 Assessment1: 評量：在正方形的旁邊再畫另一個正方形。
      K-1 Artist2 Free Draw: 自由發揮吧！
      K-1 Artist2_7: 畫出一個長方形來完成梳妝台上的抽屜！
      K-1 Bee 1: 讓我移動到花朵那兒，採集花蜜，再到蜂窩那兒，製作蜂蜜。
      K-1 Bee 11: 採集 3 個花蜜然後釀成 1 個蜂蜜
      K-1 Bee 13: 採集 3 個花蜜然後釀成 1 個蜂蜜！
      K-1 Bee 14: 帶我到花朵那兒採集花蜜，再帶我到蜂窩那兒釀造蜂蜜！
      K-1 Bee 15: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 2: 讓我移動到花朵那兒，採集花蜜，再到蜂窩那兒，製作蜂蜜。
      K-1 Bee 3: 讓我移動到花朵那兒，採集花蜜，再到蜂窩那兒，製作蜂蜜。
      K-1 Bee 4: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 5: 採集 3 個花蜜然後釀成 3 個蜂蜜
      K-1 Bee 6: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 7: 採集 3 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 9: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee Loops 1: 採集花蜜並釀成蜂蜜！
      K-1 Bee Loops 10: 收集所有的花蜜及蜂蜜。
      K-1 Bee Loops 11: 收集全部的花蜜和蜂蜜！
      K-1 Bee Loops 12: 收集所有的花蜜以及所有的蜂蜜。
      K-1 Bee Loops 2: 使用一個「重複」迴圈來移動、接著採集花蜜、然後釀造蜂蜜！
      K-1 Bee Loops 3: 使用 3 個「重複」迴圈來採集花蜜和釀造蜂蜜！
      K-1 Bee Loops 4: 使用「重複」迴圈來採集花蜜、釀造蜂蜜、接著移動！
      K-1 Bee Loops 5: 使用「重複」迴圈讓我收集到花蜜和蜂蜜！
      K-1 Bee Loops 6: 使用一個「重複」迴圈來採集花蜜、釀造蜂蜜、接著移動！
      K-1 Bee Loops 7: 採集花蜜並釀成蜂蜜！
      K-1 Bee Loops 8: 採集花蜜並釀成蜂蜜！
      K-1 Bee Loops 9: 採集所有的花蜜並全部釀成蜂蜜。
      K-1 Bee Puzzle 12: 讓我採3次花蜜來製作2次蜂蜜
      K-1 Building a Foundation Assessment: |-
        建一個三層的金字塔。
        沒有說明，完成它就對了！
      K-1 Maze 10: '繞開 TNT 炸藥，讓我抓到豬！ '
      K-1 Maze 11: 沿著路走，讓我抓到那隻蠢豬，當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！沒看到牠嗎？牠在我的南邊。
      K-1 Maze 2: 讓我往東邊移動，我要抓到這頭豬！
      K-1 Maze 3: 讓我往南邊移動，我要抓到這頭豬！
      K-1 Maze 4: 讓我往北邊移動，我要抓到這頭豬！
      K-1 Maze 5: 讓我往東邊移動，我要抓到這頭豬！
      K-1 Maze 6: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze 7: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze 8: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze 9: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze Loops 1: 讓我抓到那隻豬！
      K-1 Maze Loops 10: 讓我抓到那隻豬！用「重複」迴圈會讓問題更容易解決。
      K-1 Maze Loops 11: 讓我抓到那隻豬！用「重複」迴圈會讓問題更容易解決。
      K-1 Maze Loops 12: 讓我抓到那隻豬！用「重複」迴圈會讓問題更容易解決。
      K-1 Maze Loops 2: 使用`重複`積木讓我抓到豬！
      K-1 Maze Loops 3: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 5: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 6: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 7: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 8: 使用「重複」迴圈讓我抓到豬。
      K-1 Maze Loops Assessment 1: 我們來看看你學得怎麼樣！使用「重複」迴圈來讓我抓到這頭豬！
      K-1 Maze Loops Assessment 2: 使用「重複」迴圈讓我抓到豬！
      K-1 Maze Sequence Assessment 1: "讓我們看看你學得如何！\\\r\n先往一個方向移動，再往另一個方向移動，讓我到達豬的位置。"
      K-1 Maze Sequence Assessment 2: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 artist 1 level 10: 用「跳躍」和「畫線」積木來畫出虛線。
      K-1 artist 1 level 9: 用 3 行程式碼畫出這張圖
      K-1 maze debug 1: 修改程式，讓為能到達豬的位置！
      K-1 maze debug 10: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 11: "這是個測驗！\\\r\n用重新排列、更換積木的方式來除錯，讓我抓到這隻豬。"
      K-1 maze debug 2: 找找看遺失了哪些積木，添加積木以到達豬那兒！
      K-1 maze debug 3: 有些地方不大正確，移除這些程式積木，讓我抓到這隻豬！
      K-1 maze debug 4: 運行並檢查這些程式積木，修正他們！我想我或許是走錯方向了。
      K-1 maze debug 5: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 6: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 7: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 8: 在這個關卡中，重新更改程式積木的順序並增加程式積木來除錯，使我能走到豬在的地方!
      K-1 maze debug 9: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      MC HOC 2016 Level 10: 是時候讓你打造自己的 Minecraft 啦！你可以生成生物，讓牠們做你要牠們做的事，好好享受遊戲吧！
      MC HOC 2016 Level 2-2: 讓呆住的雞動起來。在`當生成時`裡放置`移動`和`轉向`積木。
      MC HOC 2016 Level 3: 很好，雞移動了！但接著牠又停啦。遊戲中，雞永遠在走。使用 `永遠執行` 循環使這些雞保持活動。
      MC HOC 2016 Level 4: 現在雞都朝同個方向移動，看起來有點怪吧，你可以利用`隨機移動`、`隨機轉向`，讓牠們看起來更真實。
      MC HOC 2016 Level 5: 這些乳牛迷路了！在`重複無限次`中放置`移動一步-向目標`積木，將牠們引領到草地。
      MC HOC 2016 Level 6: 現在請使用`生成`積木製造殭屍。在夜晚降臨時製造 3 個殭屍，並讓它們向你移動。喔，在天亮前，請保住你的小命。
      MC HOC 2016 Level 8: 到綿羊那邊的路被石牆擋住了。幸好這裡有一個苦力怕。苦力怕在你碰觸後就會爆炸。利用苦力怕炸掉牆壁，你才能到達羊旁邊！
      MC HOC 2016 New Drop: 在 Minecraft 中，綿羊身上有羊毛。在 `當使用時`指令裡放置`掉落`積木，然後走過去，讓綿羊掉出物品。
      MC HOC 2016 New Spawn: 在這個世界創造一些新生命吧，「生成」表示添加一些東西到遊戲裡，在`當運行時`下放置`生成`積木，遊戲開始時就會添加指定的東西了。
      MC HOC 2016 New Walk: 我們來探索世界吧！用方向鍵（鍵盤或畫面上的）可移動、按空格鍵（或點擊畫面空白處）可使用物品。現在請「使用」門進入房子裡。
      MC HOC 2016 SCORE LEVEL: 大部分的遊戲會有分數機制吧。與這些鐵魔像玩「人捉鬼」遊戲，再用`增加 1 分`積木，在你捉到他們時給自己加分。達到
        5 分就勝利！
      MC HOC 2016 Village Test: 不好了！殭屍把你困住啦！對鐵魔像編寫程式，讓它們追蹤並攻擊殭屍！
      MC_HOC_2017_01_RETRY: 讓 Agent 前往壓板，然後按「執行」並使用箭頭按鍵，移動玩家離開房屋以收集箱子。
      MC_HOC_2017_01_RETRY_2019: 讓 Agent 前往壓板，然後按「執行」並使用箭頭按鍵，移動玩家離開房屋以收集箱子。
      MC_HOC_2017_02_Cole: 移動 Agent 前往壓板，這樣 {currentPlayerName} 才能前往地圖。
      MC_HOC_2017_02_Cole_2019: 移動 Agent 前往壓板，這樣 {currentPlayerName} 才能前往地圖。
      MC_HOC_2017_03_Cole: 為代理 Agent 編寫程式以開啟大門。
      MC_HOC_2017_03_Cole_2019: 為代理 Agent 編寫程式以開啟大門。
      MC_HOC_2017_04POINT5_RYAN: 讓 Agent 前往壓板。
      MC_HOC_2017_04POINT5_RYAN_2019: 讓 Agent 前往壓板。
      MC_HOC_2017_04_Cole: 讓 Agent 前往壓板。
      MC_HOC_2017_04_Cole_2019: 讓 Agent 前往壓板。
      MC_HOC_2017_05_Cole: 讓玩家前往鏟子的位置。
      MC_HOC_2017_05_Cole_2019: 讓玩家前往鏟子的位置。
      MC_HOC_2017_06_Cole: 修正此代碼，讓 Agent 可建造橫跨這條河流的橋樑。
      MC_HOC_2017_06_Cole_2019: 修正此代碼，讓 Agent 可建造橫跨這條河流的橋樑。
      MC_HOC_2017_07_Cole: 破壞冰塊，並讓 {currentPlayerName} 前往礦車。
      MC_HOC_2017_07_Cole_2019: 破壞冰塊，並讓 {currentPlayerName} 前往礦車。
      MC_HOC_2017_10_RETRY: 使用函式來完成礦車軌道。
      MC_HOC_2017_10_RETRY_2019: 使用函式來完成礦車軌道。
      MC_HOC_2017_Ali: 使用函式來找出能避開岩漿的路。
      MC_HOC_2017_Ali_2019: 使用函式來找出能避開岩漿的路。
      MC_HOC_2017_FP20x20: "**自由遊戲：**是自己探索的時候了！"
      MC_HOC_2017_FP20x20_2019: "**自由遊戲：**是自己探索的時候了！"
      NEW Course 4 Artist Functions 1: 你能使用一個重複迴圈，畫出一個邊長 100 像素的正方形嗎？
      NEW Course 4 Artist Functions 11: 現在我們想創建一個新函式，名為 draw a line of squares（畫排正方形），用來將六個正方形畫在一橫列上。你可以用我們為你準備好的函式
        draw a square 20 來建立出這個新函式嗎？
      NEW Course 4 Artist Functions 12: 使用上一關的 draw a line of squares 函式來畫出這個圖案。
      NEW Course 4 Artist Functions 13: '你可以使用 draw a line of squares（畫出方格邊）函式畫出一個星形嗎？  '
      NEW Course 4 Artist Functions 14: '自由遊戲時間！ '
      NEW Course 4 Artist Functions 2: 你可以畫出 3 個正方形嗎？每個正方形的邊長是 100 像素，且之間要相隔 20 像素
      NEW Course 4 Artist Functions 3: "這裡有個新的積木，稱為函式積木。點擊「編輯」，然後在裡頭添加能畫出一個邊長 100
        像素的正方形所需的積木。\\\r\n\\\r\n當你編輯完這個函式後，點擊「關閉」來返回你的程式。"
      NEW Course 4 Artist Functions 4: 使用 draw a square（畫個正方形）函式來畫出這個圖案。
      NEW Course 4 Artist Functions 7: '你已經掌握函式積木的使用技巧了嗎？讓我們修改一下代碼，來讓正方形的邊長變成 200像素。在「編輯」上點一下以進入
        draw a square（畫個正方形）函式。記住點擊「關閉」以離開函式編輯器。 '
      NEW Course 4 Artist Functions 8: 我們已經創建了一個新的函式給你，叫做 draw a triangle（畫個三角形）。你可以編輯這個函式定義以畫出每邊長
        100 像素的三角形嗎？
      NEW Course 4 Artist Functions 9: 你可以只用 1 個積木來完成關卡嗎？
      NEW Course 4 Artist Params 1: 讓我們定義 draw a square（畫個正方形）函式以畫出邊長為 50 像素的正方形。點擊「編輯」來開始。
      NEW Course 4 Artist Params 10: '建立一個 draw a hexagon（畫個六邊形）函式積木，裡頭帶有 length（長度）參數。這個六邊形的邊長為
        100 像素。 '
      NEW Course 4 Artist Params 11: 你想得到要怎麼畫出這個形狀嗎？編輯函式來使用 sides（邊長）參數。
      NEW Course 4 Artist Params 12: |-
        你可以完成這個畫嗎？
        所有形狀的邊長都是 100 像素。
      NEW Course 4 Artist Params 12a: 這個圖形和上一個很類似，你能使用一個計數迴圈和你的函式來完成這個圖案嗎？
      NEW Course 4 Artist Params 13: "讓我們編輯 draw a polygon（畫個多邊形）這個函式。它已經有 sides（邊數）參數了，現在讓我們添加一個
        length（長度）參數到上頭。\\\r\n每個圖形的周長是 200 像素，你知道當周長固定時，正多變形的邊長要怎麼樣計算出來嗎？"
      NEW Course 4 Artist Params 14: 編輯 draw a spiral edge（畫個螺旋圖）以使用 length（長度）和 sides（邊）參數，然後重新創建這些形狀。
      NEW Course 4 Artist Params 15: 自由發揮：這是除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！
      NEW Course 4 Artist Params 2: 創建一個名為 `draw triangle`（畫個三角形）的函式以製作一個邊長 50 像素的三角形。
      NEW Course 4 Artist Params 3: "現在讓我們使用這個函式在一列上畫出 5 個三角形\\\r"
      NEW Course 4 Artist Params 4: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      NEW Course 4 Artist Params 5: '將 length（長度）參數積木裡的問號（???）換成數字。這個五邊形的邊長是 100 像素。 '
      NEW Course 4 Artist Params 6: 在 length（參數）的問號處填入正確的數字以畫出這些圖形。正方形和三角形的邊長是 100
        像素，六邊形的邊長是 75 像素。
      NEW Course 4 Artist Params 7: 你能完成這幅畫嗎？每一次畫的三角形的邊長比前一個多 25 像素。第一個三角形的邊長是 25
        像素。
      NEW Course 4 Artist Params 8: |-
        畫出三角形的函式壞掉了。

        你可以修正這個函式，以分別畫出邊長為 25、50、75 的三角形嗎？
      NEW Course 4 Artist Params 9: 點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。它應該像三角形一樣有一個
        length（長度）參數。這次，畫出 3 個正方形，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。
      NEW Course 4 Artist Params inspire: "自由發揮靈感：你已經學會了所有需要創建這個模式的知識了！如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
        \\\r\n\\\r \n想要知道我們的這些創意圖案是怎麼做出來的嗎？ "
      NEW Course 4 Artist Vars 12: 現在，重新建立最後一關的演算法，並創作一個邊長 150 像素的五邊形。
      NEW Course 4 Artist Vars 2: 拖曳數字積木到「設定長度」積木和「重複」積木裡，以畫出一連串的 50 像素長的三角形。
      NEW Course 4 Artist Vars 4: "讓我們再試一次！\\\r\n\\\r\n你可以將 length（長度）變數設為 60，以完成這個酷炫的六邊形圖案嗎？"
      NEW Course 4 Artist Vars 6: "設定正確的 length（長度），並將 length 變數拖曳到正確的位置，以畫出邊長為 100
        像素的五角形。\\\r\n\\\r\n看看你是不是能一次就能設定好 length 的值和程式碼？"
      NEW Course 4 Bee For Loops 1: 使用一個迴圈來收集每個花朵上的花蜜。
      NEW Course 4 Bee For Loops 10a: 準備好接受挑戰了嗎？善用所學，試著解決這個問題。記住：在你想出所有步驟前，你可能必須要運行程式好多次。
      NEW Course 4 Bee For Loops 2: 添加需要的代碼來讓蜜蜂收集到所有的花蜜。看看你需要用到多少程式碼才能完成關卡！（我們會在下一個關卡學到更簡單的辦法。)
      NEW Course 4 Bee For Loops 3: '啊，計數循環（for loop）讓事情變得簡單多了！你需要的程式碼都在這兒，看一看它是如何放在一起的，然後點擊「運行」看看它怎麼工作。 '
      NEW Course 4 Bee For Loops 4: '把計數迴圈裡的問號（???）換成蜜蜂必須收集的最大花蜜數。 '
      NEW Course 4 Bee For Loops 4 4: 現在，我們需要向前移動，移動距離為計數器的次數，接著採集花蜜，採集個數也是計數器的次數。你可以使用
        2 個「重複」迴圈來完成這個挑戰嗎？
      NEW Course 4 Bee For Loops 5: 你也可以使用一個「計數迴圈」來倒數，試著從 5 數到 1，間隔數為 1 的方式來採集這些花蜜。
      NEW Course 4 Bee For Loops 6: 在你的計數迴圈上的最後一個數字叫做 increment（增量），每次過了一個循環，counter
        變數會依照增量的值改變。試試每次增量 2，以收集到這些花朵。
      NEW Course 4 Bee For Loops 7: "現在，我們來組合 counter 變數和一個運算積木！怎樣透過 counter 變數減少積木使用數來遊覽花園呢？這次你要怎麼做才能收集到
        3、6、9、12、15個花蜜呢？counter 變數就是秘密武器！\\\r\n\\\r\n記住：如果你的循環是遞增計數的，增量就會在每次循環加到 counter
        變數裡。"
      NEW Course 4 Bee For Loops 8: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      NEW Course 4 Bee For Loops 9: 如果循環的數字是由大排到小，每次循環就會從計數器變量中減去間隔的值。如果要依序收集 15、12、9、6、3
        個花蜜，間隔數需要設成多少？
      NEW Course 4 Play Lab Params 11: '自由發揮的時間到了，用工具箱裡的程式積木來做一些好玩的事吧。 '
      Overworld Avoid Monsters: 碰上苦力怕就糟了。小心的從苦力怕身邊通過，安全地抵達你的家裡。
      Overworld Avoid Monsters_2019: 碰上苦力怕就糟了。小心的從苦力怕身邊通過，安全地抵達你的家裡。
      Overworld Chop Tree: 木材是相當重要的資源，很多東西都要用到它。走到樹木前面，使用「摧毀方塊」指令把它砍下。
      Overworld Chop Tree_2019: 木材是相當重要的資源，很多東西都要用到它。走到樹木前面，使用「摧毀方塊」指令把它砍下。
      Overworld Chop Trees: 我們必須在太陽下山前蓋好房子，房屋需要用到大量木材。請將 3 棵樹全部砍倒。
      Overworld Chop Trees_2019: 我們必須在太陽下山前蓋好房子，房屋需要用到大量木材。請將 3 棵樹全部砍倒。
      Overworld Free Play 20x20: 恭喜！您已完成所有關卡！現在，運用您學習到的一切，採礦、建造並創造出一些獨特的東西吧。
      Overworld Free Play 20x20_2019: 恭喜！您已完成所有關卡！現在，運用您學習到的一切，採礦、建造並創造出一些獨特的東西吧。
      Overworld House Frame Chosen: 使用你喜歡的材料建立房子的其它部份。「重複」指令會派得上用場。
      Overworld House Frame Chosen_2019: 使用你喜歡的材料建立房子的其它部份。「重複」指令會派得上用場。
      Overworld Move to Sheep: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Move to Sheep_2019: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Place Wall: 萬丈高樓平地起，在重複指令裡嵌入「放置」與「移動」積木，建造房子的第一部分。
      Overworld Place Wall_2019: 萬丈高樓平地起，在重複指令裡嵌入「放置」與「移動」積木，建造房子的第一部分。
      Overworld Plant Crops: 提前規劃是很棒的！在水的兩側種植作物，這樣以後就不會挨餓了。
      Overworld Plant Crops_2019: 提前規劃是很棒的！在水的兩側種植作物，這樣以後就不會挨餓了。
      Overworld Powered Minecart: 做得好！您收集到了許多資源，也蓋了一棟體面的房屋。現在請從地圖邊緣鋪設一條軌道，通向你的房屋門口。
      Overworld Powered Minecart_2019: 做得好！您收集到了許多資源，也蓋了一棟體面的房屋。現在請從地圖邊緣鋪設一條軌道，通向你的房屋門口。
      Overworld Shear Sheep: 剪羊毛的時候到了！用「修剪」指令從 2 隻綿羊身上收集羊毛。
      Overworld Shear Sheep_2019: 剪羊毛的時候到了！用「修剪」指令從 2 隻綿羊身上收集羊毛。
      Standalone_Artist_1: |-
        歡迎使用小藝術家！首先，讓我們試試建立一個簡單的正方形，用的是「轉向-右方」積木和「移動-向前」積木。
        每邊長度應該是 100 像素。
      Standalone_Artist_2: "畫出這個菱形，它的角度分別是 120 和 60 度，邊長則是 150 像素。\\\r\n\\\r"
      Standalone_Artist_3: "你能畫出這個六邊形嗎？它的每個邊長 100 像素，每個角度 60 度。\\\r\n\\\r"
      Standalone_Artist_4: 現在你有了一個新的積木可以玩囉，這個積木是迴圈（loop），它能將一連串的指令重複執行。如果你循環這些指令 6
        次，會發生什麼事呢？
      Standalone_Artist_5: "你需要重複菱形多少次，才能畫出這朵花呢？\\\r\n\\\r"
      Standalone_Artist_5.5: "注意我們是如何利用重複積木把畫一個菱形的程式再簡化的。接著，我們要把這個程式放到迴圈裡，並循環整個序列
        12 次以畫出這朵花。提示：每畫完一次菱形後，你需要轉向 30 度，這樣子你才不會畫在相同的菱形上。\\\r\n\\\r"
      Standalone_Artist_6: "循環這個畫六邊形的程式 6 次以創作出這個花樣。你知道每畫完一次六邊形要轉多少角度嗎？提示：把一圈的度數除以循環次數。\\\r\n\\\r"
      Standalone_Artist_7: "函式是另一種編程的工具，它可以幫助你避免重複打相同的程式編碼。這個函式會畫出花朵，所以你可以在任何你想要的時候用它來畫花朵。用這個函式和新的「跳躍」積木來繪製這些花朵。提示：花朵之間的間隔距離是
        150 像素。\\\r\n\\\r"
      Standalone_Artist_8: 這裡有個函式名為 Draw a shape（畫個形狀），我們已經編寫了程式來畫出六角形。運行這個程式看看它會做些什麼，並試著修改函式看會發生什麼事。你可以讓它畫出一個正方形、三角形、八角形嗎？
      Standalone_Artist_9: "現在繼續創作任何你想要的圖案！你得到了一個空的函式，讓你想做啥就做啥！\\\r\n\\\r"
      U4 Model Design 1: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model Design 1_2018: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model Design 1_2019: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      Underground Avoiding Lava: 有些方塊下有熔岩，您必須先覆蓋好才能夠往前移動。這時候「如果」指令就派上用場了。在正確位置添加「移動-向前」指令，開採到這些方塊。
      Underground Avoiding Lava_2019: 有些方塊下有熔岩，您必須先覆蓋好才能夠往前移動。這時候「如果」指令就派上用場了。在正確位置添加「移動-向前」指令，開採到這些方塊。
      Underground If Statements: 現在情況有些棘手。請開採 3 塊紅石，但可別掉進熔岩。使用「如果」指令，將鵝卵石放在你發現的任何熔岩上。
      Underground If Statements_2019: 現在情況有些棘手。請開採 3 塊紅石，但可別掉進熔岩。使用「如果」指令，將鵝卵石放在你發現的任何熔岩上。
      Underground Iron: 走進熔化的岩漿是不智的行為。放置鵝卵石來造出一座橋，接著開採至少 2 個鐵方塊。
      Underground Iron_2019: 走進熔化的岩漿是不智的行為。放置鵝卵石來造出一座橋，接著開採至少 2 個鐵方塊。
      Underground Mining Coal: 在地下可以找到稀有資源，但這兒真的太黑了。請放置至少 2 根火把，並且開採到至少 2 塊煤炭。
      Underground Mining Coal_2019: 在地下可以找到稀有資源，但這兒真的太黑了。請放置至少 2 根火把，並且開採到至少 2 塊煤炭。
      Vigenere: 測試
      Virtual Pet 1 Predict: 預測一下，當你點擊外星生物時會發生什麼事？
      'Widget: Text Compression': 找出文本中的規律（重複的單字或短語），在右側的詞典中輸入你找到的字詞，當你在詞典中輸入時，就會以象徵的符號將文本中的字詞取代。
      behaviors 1: 建立一個預測！
      behaviors 2: 讓小小鳥展翅高飛！
      behaviors 3: 幫烏龜擊敗兔子！
      behaviors 4: 建立一個預測！
      behaviors 6: 讓球滾動。
      bounce_1: 添加一個積木到「當按向左鍵時」積木下，並點擊「運行」。讓球拍可以用向左鍵移動到目標。
      bounce_10: 畫面上方有個新的目標區域，把「得分 - 自己」和「得分 - 對手」積木分別附加到「當球命中目標時」和「當球沒有碰到球拍時」積木下以製作一個遊戲。看看在對手得到
        2 分前，你能得到幾分。
      bounce_10_basketball: 現在畫面上方有一個目標！將「得分 - 自己」和「得分 - 對手」積木附加在「當球命中目標時」以及「當手沒有碰到球」積木的後方，創建一個遊戲。看看在對手得到
        2 分前，你可以獲得多少分。
      bounce_10_sports: 現在，目標在最上方！把「得分-自己」和「得分-對手」積木拖曳到「當球命中目標時」及「當球沒有碰到手」下以製作遊戲。試看看在對手獲得
        2 分前，你能得到幾分！
      bounce_11: 現在你可以附加積木到「當運行時」積木下。你必須在超過一個地方附加新的「重新新球」積木。並且試著改變場景、球拍和球的移動速度，看看在對手得
        2 分之前，你可以獲得多少分。
      bounce_11_basketball: 你現在可以在「當運行時」積木下方添加程式。你必須在多個地方添加「扔出新球」積木。此外，試著改變場景，或是手和球的移動速度。看看在你的對手得
        2 分前，你可以得幾分！
      bounce_11_sports: 你現在可以在「當運行時」積木下方添加程式。你必須在多個地方添加「扔出新球」積木。此外，試著改變場景，或是手和球的移動速度。看看在你的對手得
        2 分前，你可以得幾分！
      bounce_12: 創造你自己的彈跳遊戲。您可以改變所有看的到的東西，也可以改變規則。當你完成時，點擊完成，讓朋友可以在他們的手機上試試你的遊戲。
      bounce_12_basketball: 創造你的籃球遊戲，你可以改變所有的遊戲規則。當你做好了，就可以分享給朋友可以在手機上玩你的遊戲。
      bounce_12_sports: 創建你自己的遊戲 ！這裡一切由你做主：你可以更改所有規則、混合搭配不同的運動，愈多創意愈好！當你完成後，點擊完成就可以讓你的朋友在手機上試試看你創造的遊戲。
      bounce_1_basketball: 在「當按向左鍵時」積木的下方添加程式並點擊「運行」。用向左鍵來移動手來到達終點目標。
      bounce_1_sports: 移動到旗幟那兒！在「當按向左鍵時」積木下添加程式，點擊「運行」讓球員移動到目標旗幟。
      bounce_2: 添加一個積木到「當按向右鍵時」積木下，並點擊「運行」。讓球拍可以用向右鍵移動到目標。
      bounce_2_basketball: 分別在「當按向右鍵時」和「當按向左鍵時」的積木添加程式，移動手到達兩邊的目標。
      bounce_2_sports: 現在有 2 個旗幟！在「當按向左鍵時」和「當按向右鍵時」的積木下添加程式，讓你的球員能往兩個方向移動。
      bounce_3: 現在，試試與「當按向上鍵時」積木類似的東西，將球拍移到上方的結束目標處。
      bounce_4: 這一回你需要添加 4 個積木。移動球拍到 4 個目標區域以完成這個關卡。
      bounce_5: 我們將發送一顆球到手上。添加一個程式到「當球碰到手」積木下，確保球能到達旗幟的位置。
      bounce_5_basketball: 我們將發送一顆球到手上。添加一個程式到「當球碰到手」積木下，確保球能到達旗幟的位置。
      bounce_5_sports: 曲棍球即將從上頭掉下來！在「當碰到球員」積木下添加程式，以擊中目標旗幟。
      bounce_6: 現在目標在最上方，你需要附加一些積木到二個「當球碰到…」積木中間以完成這個關卡。
      bounce_6_basketball: 現在要完成的目標在最上方。你需要添加程式到這兩個「當球碰到…」積木中以完成這個關卡。
      bounce_6_sports: 現在要完成的目標在最上方。你需要添加程式到這兩個「當球碰到…」積木中以完成這個關卡。
      bounce_7: 新增一個積木到「當…」積木中。試著讓球反彈，直到球擊中目標區為止。
      bounce_7_basketball: 添加程式到每個「當…」積木的下方。試著將球反彈直到擊中旗幟。
      bounce_7_sports: 添加程式到每個「當…」積木的下方。試著將球反彈直到擊中旗幟。
      course1_artist_loops_challenge2: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      course1_artist_loops_challenge3: 啾啾！你能幫我做兩個鳥屋嗎？
      course1_collector_loops_challenge2: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      course1_collector_loops_challenge3: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      course1_maze_debugging_challenge1: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      course1_maze_seq_challenge1: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      course1_playlab_events_challenge1: |-
        我的朋友藏在哪兒？
        你能寫個程式把我的朋友找出來嗎？
      course2_artist_nestedLoops_challenge1: 你知道要怎麼製作出這樣的圖像嗎？
      course2_artist_nestedLoops_challenge2: 你知道要怎麼製作出這樣的圖像嗎？
      course2_artist_prog_challenge2: _「幫我在這條路上頭漆上黃線！」_
      course2_bee_conditionals_challenge1: 收集所有的花蜜及蜂蜜。
      course2_bee_conditionals_challenge2: 收集所有的花蜜及蜂蜜。
      course2_collector_loops_challenge2: '試著收集到寶藏吧！ '
      course2_harvester_loops_challenge1: 收集所有的玉米。
      course2_harvester_loops_challenge2: |-
        收集所有的生菜。
        注意避開樹木和田地！
      course4_artist_fwp_challenge1: 試著運行這個程式，然後做些改變看看會發生什麼事。你能清楚的知道它是怎麼運作的嗎？（或著刪除它，然後用完全不同的程式碼來取代它）
      courseA_artist_loops10: 幫我放些石頭，我不想掉下去！
      courseA_artist_loops10_2018: 幫我放些石頭，我不想掉下去！
      courseA_artist_loops10_2019: 幫我放些石頭，我不想掉下去！
      courseA_artist_loops11: 幫我建置階梯，讓我可以看著船航行到遠方。
      courseA_artist_loops11_2018: 幫我建置階梯，讓我可以看著船航行到遠方。
      courseA_artist_loops11_2019: 幫我建置階梯，讓我可以看著船航行到遠方。
      courseA_artist_loops12: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      courseA_artist_loops12_2018: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      courseA_artist_loops12_2019: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      courseA_artist_loops3: 向前畫一條線，重複 5 次。
      courseA_artist_loops3_2018: 向前畫一條線，重複 5 次。
      courseA_artist_loops3_2019: 向前畫一條線，重複 5 次。
      courseA_artist_loops7: 用`重複`迴圈為水添加波紋。
      courseA_artist_loops7_2018: 用`重複`迴圈為水添加波紋。
      courseA_artist_loops7_2019: 用`重複`迴圈為水添加波紋。
      courseA_artist_loops9: 挑戰：修復這些階梯。
      courseA_artist_loops9_2018: 挑戰：修復這些階梯。
      courseA_artist_loops9_2019: 挑戰：修復這些階梯。
      courseA_artist_loops_challenge2a: _「幫我把帳篷搭起來！」_
      courseA_artist_loops_challenge2a_2018: _「幫我把帳篷搭起來！」_
      courseA_artist_loops_challenge2a_2019: _「幫我把帳篷搭起來！」_
      courseA_collector_loops1: 幫助 Laurel 移動，盡可能讓他找到所有的寶石！
      courseA_collector_loops10: 幫助 Laurel 在幽深的山谷得到所有的寶藏。
      courseA_collector_loops10_2018: 幫助 Laurel 在幽深的山谷得到所有的寶藏。
      courseA_collector_loops10_2019: 幫助 Laurel 在幽深的山谷得到所有的寶藏。
      courseA_collector_loops11: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseA_collector_loops11_2018: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseA_collector_loops11_2019: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseA_collector_loops12: _「發現寶藏啦！盡可能的收集到所有的寶藏吧！」_
      courseA_collector_loops12_2018: _「發現寶藏啦！盡可能的收集到所有的寶藏吧！」_
      courseA_collector_loops12_2019: _「發現寶藏啦！盡可能的收集到所有的寶藏吧！」_
      courseA_collector_loops1_2018: 幫助 Laurel 移動，盡可能讓他找到所有的寶石！
      courseA_collector_loops1_2019: 幫助 Laurel 移動，盡可能讓他找到所有的寶石！
      courseA_collector_loops2: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_collector_loops2_2018: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_collector_loops2_2019: 得到所有的三堆！移動勞雷爾到每一個寶藏, 然後使用採集程式積木.
      courseA_collector_loops4: 修正 Laurel 的路徑，讓牠能收集到寶藏。
      courseA_collector_loops4_2018: 修正 Laurel 的路徑，讓牠能收集到寶藏。
      courseA_collector_loops4_2019: 修正 Laurel 的路徑，讓牠能收集到寶藏。
      courseA_collector_loops5: 用你學到的方法來收集到所有的寶藏。
      courseA_collector_loops5_2018: 用你學到的方法來收集到所有的寶藏。
      courseA_collector_loops5_2019: 用你學到的方法來收集到所有的寶藏。
      courseA_collector_loops6: 添加積木到程式中，以收集到所有的寶藏。
      courseA_collector_loops6_2018: 添加積木到程式中，以收集到所有的寶藏。
      courseA_collector_loops6_2019: 添加積木到程式中，以收集到所有的寶藏。
      courseA_collector_loops7: 要添加什麼程式積木才可以收集到所有的寶藏？
      courseA_collector_loops7_2018: 要添加什麼程式積木才可以收集到所有的寶藏？
      courseA_collector_loops7_2019: 要添加什麼程式積木才可以收集到所有的寶藏？
      courseA_collector_loops8: 編寫程式來收集這些寶藏。
      courseA_collector_loops8_2018: 編寫程式來收集這些寶藏。
      courseA_collector_loops8_2019: 編寫程式來收集這些寶藏。
      courseA_collector_loops9: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseA_collector_loops9_2018: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseA_collector_loops9_2019: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseA_collector_loops_challenge1: _「你能幫我找出程式的錯誤嗎？」_
      courseA_collector_loops_challenge1_2018: _「你能幫我找出程式的錯誤嗎？」_
      courseA_collector_loops_challenge1_2019: _「你能幫我找出程式的錯誤嗎？」_
      courseA_collector_loops_challenge2: '試著收集到寶藏吧！ '
      courseA_collector_preLoops4: 你知道要怎麼過關嗎？
      courseA_collector_preLoops5: 獲得 2 個寶石中的其中一個就能過關。
      courseA_collector_preLoops6: 收集到所有的寶藏就能過關。
      courseA_collector_preLoops7: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_harvester_loops1: 幫助農夫撿起所有的玉米！
      courseA_harvester_loops11: 自己試試看！
      courseA_harvester_loops11_2019: 自己試試看！
      courseA_harvester_loops1_2019: 幫助農夫撿起所有的玉米！
      courseA_harvester_loops6_2019: 你將會需要 **一個** `往南移動` 程式積木 與 **一個** `往西移動` 程式積木.
      courseA_harvester_loops7: 換你自己試試！
      courseA_harvester_loops7_2019: 換你自己試試！
      courseA_harvester_seq6: 自己試試！
      courseA_harvester_seq6_2019: 自己試試！
      courseA_harvester_seq7: 自己試試！
      courseA_harvester_seq7_2019: 自己試試！
      courseA_harvester_seq9: 添加兩個積木以完成這個關卡！
      courseA_harvester_seq9_2019: 添加兩個積木以完成這個關卡！
      courseA_maze_ramp5a_2018: 讓鳥抓到這隻豬！
      courseA_maze_ramp5a_2019: 讓鳥抓到這隻豬！
      courseA_maze_seq1: 讓這隻鳥抓到壞豬豬！
      courseA_maze_seq10: '挑戰：繞開 TNT 炸蘗，讓鳥能夠抓到豬！ '
      courseA_maze_seq11: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到那頭豬。
      courseA_maze_seq11_2018: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到那頭豬。
      courseA_maze_seq11_2019: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到那頭豬。
      courseA_maze_seq12: '抓住那頭豬！ '
      courseA_maze_seq12_2018: '抓住那頭豬！ '
      courseA_maze_seq12_2019: '抓住那頭豬！ '
      courseA_maze_seq13: 抓到這頭豬，不管你用什麼方法！
      courseA_maze_seq13_2018: 抓到這頭豬，不管你用什麼方法！
      courseA_maze_seq13_2019: 抓到這頭豬，不管你用什麼方法！
      courseA_maze_seq1_2018: 讓這隻鳥抓到壞豬豬！
      courseA_maze_seq1_2019: 讓這隻鳥抓到壞豬豬！
      courseA_maze_seq2: 有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。
      courseA_maze_seq3: 修正這個程式，讓鳥抓到這頭豬！
      courseA_maze_seq4: "「移除」一個積木，讓鳥抓到這頭豬！"
      courseA_maze_seq5_2018: 測試一下吧。
      courseA_maze_seq5_2019: 測試一下吧。
      courseA_maze_seq6: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq6_2018: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq6_2019: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq7: 想想看，這裡頭少了什麼積木，添加積木讓鳥可以抓到這頭豬！
      courseA_maze_seq8: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq8_2018: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq8_2019: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq9: 找出這個關卡的錯誤，添加積木以修正程式，讓鳥可以抓到這頭豬！
      courseA_maze_seq_challenge1: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge1_2018: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge1_2019: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge2: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      courseA_maze_seq_challenge2_2018: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      courseA_maze_seq_challenge2_2019: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      courseA_playLab_events3: 將「移動-向左」積木連接到工作區裡的「當按向左鍵時」事件積木下。
      courseA_playLab_events3_2018: 將「移動-向左」積木連接到工作區裡的「當按向左鍵時」事件積木下。
      courseA_playLab_events3_2019: 將「移動-向左」積木連接到工作區裡的「當按向左鍵時」事件積木下。
      courseA_playlab_events_challenge1: |-
        我的朋友藏在哪兒？
        你能寫個程式把我的朋友找出來嗎？
      courseA_playlab_events_challenge1_2018: |-
        我的朋友藏在哪兒？
        你能寫個程式把我的朋友找出來嗎？
      courseA_playlab_events_challenge1_2019: |-
        我的朋友藏在哪兒？
        你能寫個程式把我的朋友找出來嗎？
      courseB_Scrat_ramp5a_2018: 自己試試這個！
      courseB_Scrat_ramp5a_2019: 自己試試這個！
      courseB_artist_loops3: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      courseB_artist_loops3_2018: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      courseB_artist_loops3_2019: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      courseB_artist_loops4: 現在我們需要準備好泥土讓他可以耕種。找出程式碼中的臭蟲（bug，程式中有錯誤的意思）幫助藝術家準備好地面。
      courseB_artist_loops4_2018: 現在我們需要準備好泥土讓他可以耕種。找出程式碼中的臭蟲（bug，程式中有錯誤的意思）幫助藝術家準備好地面。
      courseB_artist_loops4_2019: 現在我們需要準備好泥土讓他可以耕種。找出程式碼中的臭蟲（bug，程式中有錯誤的意思）幫助藝術家準備好地面。
      courseB_artist_loops6: 爬上藤，看看它在哪裡？
      courseB_artist_loops6_2018: 爬上藤，看看它在哪裡？
      courseB_artist_loops6_2019: 爬上藤，看看它在哪裡？
      courseB_artist_loops7: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops7_2018: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops7_2019: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops_challenge2: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_artist_loops_challenge2_2018: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_artist_loops_challenge2_2019: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_collector_loops1: 這位是冒險家 Laurel！你能幫助他移動以取得寶藏嗎？
      courseB_collector_loops10: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseB_collector_loops10_2018: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseB_collector_loops10_2019: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseB_collector_loops11: 發現寶藏啦！盡可能的收集到所有的寶藏吧！
      courseB_collector_loops11_2018: 發現寶藏啦！盡可能的收集到所有的寶藏吧！
      courseB_collector_loops11_2019: 發現寶藏啦！盡可能的收集到所有的寶藏吧！
      courseB_collector_loops1_2018: 這位是冒險家 Laurel！你能幫助他移動以取得寶藏嗎？
      courseB_collector_loops1_2019: 這位是冒險家 Laurel！你能幫助他移動以取得寶藏嗎？
      courseB_collector_loops2: 收集所有的 4 堆以通過這個關卡。
      courseB_collector_loops2_2018: 收集所有的 4 堆以通過這個關卡。
      courseB_collector_loops2_2019: 收集所有的 4 堆以通過這個關卡。
      courseB_collector_loops3: Laurel 要怎麼只使用一個`向東`積木收集所有的 5 堆寶石？
      courseB_collector_loops3_2018: Laurel 要怎麼只使用一個`向東`積木收集所有的 5 堆寶石？
      courseB_collector_loops3_2019: Laurel 要怎麼只使用一個`向東`積木收集所有的 5 堆寶石？
      courseB_collector_loops4: 修正 Laurel 的路徑，讓牠能收集到寶藏！
      courseB_collector_loops4_2018: 修正 Laurel 的路徑，讓牠能收集到寶藏！
      courseB_collector_loops4_2019: 修正 Laurel 的路徑，讓牠能收集到寶藏！
      courseB_collector_loops5: 添加類似上一關的程式來收集到寶藏。
      courseB_collector_loops5_2018: 添加類似上一關的程式來收集到寶藏。
      courseB_collector_loops5_2019: 添加類似上一關的程式來收集到寶藏。
      courseB_collector_loops6: 想一想要怎麼編程才能幫助 Laurel 取得這些寶藏！
      courseB_collector_loops6_2018: 想一想要怎麼編程才能幫助 Laurel 取得這些寶藏！
      courseB_collector_loops6_2019: 想一想要怎麼編程才能幫助 Laurel 取得這些寶藏！
      courseB_collector_loops7: 編寫程式來收集這些寶藏。
      courseB_collector_loops7_2018: 編寫程式來收集這些寶藏。
      courseB_collector_loops7_2019: 編寫程式來收集這些寶藏。
      courseB_collector_loops8: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseB_collector_loops8_2018: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseB_collector_loops8_2019: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseB_collector_loops9: _「幫我拿到深谷裡的所有寶藏。」_
      courseB_collector_loops9_2018: _「幫我拿到深谷裡的所有寶藏。」_
      courseB_collector_loops9_2019: _「幫我拿到深谷裡的所有寶藏。」_
      courseB_collector_loops_challenge1: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_loops_challenge1_2018: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_loops_challenge1_2019: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_loops_challenge2a: 幫 Laurel 拿到至少 **5** 塊寶石。
      courseB_collector_loops_challenge2a_2018: 幫 Laurel 拿到至少 **5** 塊寶石。
      courseB_collector_loops_challenge2a_2019: 幫 Laurel 拿到至少 **5** 塊寶石。
      courseB_iceage_loops11: 幫鼠奎特拿到橡樹果實！
      courseB_iceage_loops11_2019: 幫鼠奎特拿到橡樹果實！
      courseB_iceage_loops12: 拿到橡樹果實，不管你用什麼方法！
      courseB_iceage_loops12_2019: 拿到橡樹果實，不管你用什麼方法！
      courseB_iceage_loops6: 你能添加一個迴圈來拿到橡樹果實？
      courseB_iceage_loops6_2019: 你能添加一個迴圈來拿到橡樹果實？
      courseB_iceage_loops7: 鼠奎特真的很想拿到橡樹果實！
      courseB_iceage_loops7_2019: 鼠奎特真的很想拿到橡樹果實！
      courseB_iceage_loops8: 你有辦法修好這個程式嗎？
      courseB_iceage_loops8_2019: 你有辦法修好這個程式嗎？
      courseB_maze_seq12: 現在抓到那頭豬，不管你用什麼方法！
      courseB_maze_seq12_2018: 現在抓到那頭豬，不管你用什麼方法！
      courseB_maze_seq12_2019: 現在抓到那頭豬，不管你用什麼方法！
      courseB_maze_seq2: _「有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。」_
      courseB_maze_seq4: 添加 2 個積木讓鳥移動到豬那裡。
      courseB_maze_seq4_2018: 添加 2 個積木讓鳥移動到豬那裡。
      courseB_maze_seq4_2019: 添加 2 個積木讓鳥移動到豬那裡。
      courseB_maze_seq6: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseB_maze_seq7: 想想看，這裡頭少了什麼積木，添加積木讓鳥可以抓到這頭豬！
      courseB_maze_seq8: 輪到你了！要怎麼樣才能讓鳥抓到這頭豬呢？
      courseB_maze_seq9: 挑戰：繞開 TNT 炸蘗，讓鳥能夠抓到豬！
      courseB_playLab_events1: 看看你是否能指出每個積木的用途。
      courseB_playLab_events1_2018: 看看你是否能指出每個積木的用途。
      courseB_playLab_events1_2019: 看看你是否能指出每個積木的用途。
      courseB_playlab_events2: 在你點擊`運行`按鈕後，讓飛龍 Daisy 說些話。
      courseB_playlab_events2_2018: 在你點擊`運行`按鈕後，讓飛龍 Daisy 說些話。
      courseB_playlab_events2_2019: 在你點擊`運行`按鈕後，讓飛龍 Daisy 說些話。
      courseB_starWars_prog1: 幫助 BB-8 拿到所有廢金屬！
      courseB_starWars_prog10: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog10_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog10_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog11: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog11_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog11_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog1_2018: 幫助 BB-8 拿到所有廢金屬！
      courseB_starWars_prog1_2019: 幫助 BB-8 拿到所有廢金屬！
      courseB_starWars_prog2: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog2_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog2_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog3: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog3_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog3_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog4: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog4_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog4_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog5: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog5_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog5_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog6: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog6_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog6_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog7: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog7_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog7_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog8: "**挑戰：**幫助 BB-8 收集所有的發光廢金屬"
      courseB_starWars_prog8_2018: "**挑戰：**幫助 BB-8 收集所有的發光廢金屬"
      courseB_starWars_prog8_2019: "**挑戰：**幫助 BB-8 收集所有的發光廢金屬"
      courseB_starWars_prog9: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog9_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog9_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseC19_playLab_EOC5: 現在花些時間確保遊戲按照你想要的方式運作。包括輸或贏的方式，還有滿足的條件設定。
      courseC_PlayLab_events3: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      courseC_PlayLab_events3_2018: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      courseC_PlayLab_events3_2019: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      courseC_artist_loops3a: 現在添加一隻蝙蝠！
      courseC_artist_loops3a_2018: 現在添加一隻蝙蝠！
      courseC_artist_loops3a_2019: 現在添加第二個貼紙！
      courseC_artist_prog5: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      courseC_artist_prog5_2018: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      courseC_artist_prog5_2019: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      courseC_artist_prog7: "**挑戰：**這個標記非常特別！你想的到要怎麼畫出這種輪廓嗎？"
      courseC_artist_prog7_2018: "**挑戰：**這個標記非常特別！你想的到要怎麼畫出這種輪廓嗎？"
      courseC_artist_prog7_2019: "**挑戰：**這個標記非常特別！你想的到要怎麼畫出這種輪廓嗎？"
      courseC_artist_prog_challenge2a: _「幫我在這條路上頭漆上黃線！」_
      courseC_artist_prog_challenge2a_2018: _「幫我在這條路上頭漆上黃線！」_
      courseC_artist_prog_challenge2a_2019: _「幫我在這條路上頭漆上黃線！」_
      courseC_collector_loops_challenge2: 拿到至少 **5** 個寶藏！
      courseC_collector_loops_challenge2_2018: 拿到至少 **5** 個寶藏！
      courseC_collector_loops_challenge2_2019: 拿到至少 **5** 個寶藏！
      courseC_collector_prog1: 利用這些程式積木，幫 Laurel 收集寶石。
      courseC_collector_prog1_2018: 利用這些程式積木，幫 Laurel 收集寶石。
      courseC_collector_prog1_2019: 利用這些程式積木，幫 Laurel 收集寶石。
      courseC_collector_prog2: 幫 Laurel 移動到寶藏的位置，接著使用`收集`積木拿到寶藏。
      courseC_collector_prog2_2018: 幫 Laurel 移動到寶藏的位置，接著使用`收集`積木拿到寶藏。
      courseC_collector_prog2_2019: 幫 Laurel 移動到寶藏的位置，接著使用`收集`積木拿到寶藏。
      courseC_collector_prog6: 重新排列程式積木以收集到全部寶藏。
      courseC_collector_prog6_2018: 重新排列程式積木以收集到全部寶藏。
      courseC_collector_prog6_2019: 重新排列程式積木以收集到全部寶藏。
      courseC_collector_prog8: _「就是這樣！繼續幫助我收集所有的硬幣。」_
      courseC_collector_prog8_2018: _「就是這樣！繼續幫助我收集所有的硬幣。」_
      courseC_collector_prog8_2019: _「就是這樣！繼續幫助我收集所有的硬幣。」_
      courseC_collector_prog9: _「讓我們獲得所有的硬幣！」_
      courseC_collector_prog9_2018: _「讓我們獲得所有的硬幣！」_
      courseC_collector_prog9_2019: _「讓我們獲得所有的硬幣！」_
      courseC_harvester_loops10: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops10_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops10_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops11: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops11_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops11_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops3: 收集所有的南瓜。
      courseC_harvester_loops3_2018: 收集所有的南瓜。
      courseC_harvester_loops3_2019: 收集所有的南瓜。
      courseC_harvester_loops4: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops4_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops4_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops5: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops5_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops5_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops6: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops6_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops6_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops7: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops7_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops7_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops8: "**挑戰：**收集所有的玉米和所有的南瓜。"
      courseC_harvester_loops8_2018: "**挑戰：**收集所有的玉米和所有的南瓜。"
      courseC_harvester_loops8_2019: "**挑戰：**收集所有的玉米和所有的南瓜。"
      courseC_harvester_loops9: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops9_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops9_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops_challenge1a: 收集所有的玉米。
      courseC_harvester_loops_challenge1a_2018: 收集所有的玉米。
      courseC_harvester_loops_challenge1a_2019: 收集所有的玉米。
      courseC_harvester_loops_challenge2: |-
        收集所有的生菜。
        注意避開樹木和田地！
      courseC_harvester_loops_challenge2_2018: |-
        收集所有的生菜。
        注意避開樹木和田地！
      courseC_harvester_loops_challenge2_2019: |-
        收集所有的生菜。
        注意避開樹木和田地！
      courseC_maze_debugging7: "**挑戰：**找出關卡裡的錯誤，重新組合、添加、移除程式積木。"
      courseC_maze_debugging7_2018: "**挑戰：**找出關卡裡的錯誤，重新組合、添加、移除程式積木。"
      courseC_maze_debugging7_2019: "**挑戰：**找出關卡裡的錯誤，重新組合、添加、移除程式積木。"
      courseC_maze_programming1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming1_2019: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming2: 從工具箱中拉出另外的`移動-向前`積木來完成這個程式。
      courseC_maze_programming2_2018: 從工具箱中拉出另外的`移動-向前`積木來完成這個程式。
      courseC_maze_programming2_2019: 從工具箱中拉出另外的`移動-向前`積木來完成這個程式。
      courseC_maze_programming3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseC_maze_programming3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseC_maze_programming3_2019: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseC_maze_programming4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseC_maze_programming4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseC_maze_programming4_2019: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseC_maze_programming5: 小心 TNT 炸藥。
      courseC_maze_programming5_2018: 小心 TNT 炸藥。
      courseC_maze_programming5_2019: 小心 TNT 炸藥。
      courseC_maze_programming6: "「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」"
      courseC_maze_programming6_2018: "「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」"
      courseC_maze_programming6_2019: "「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」"
      courseC_maze_programming7: "**挑戰：**這個程式有很多的臭蟲（bugs，錯誤的地方），你必須移除一些，同時添加其它的積木。"
      courseC_maze_programming7_2018: "**挑戰：**這個程式有很多的臭蟲（bugs，錯誤的地方），你必須移除一些，同時添加其它的積木。"
      courseC_maze_programming7_2019: "**挑戰：**這個程式有很多的臭蟲（bugs，錯誤的地方），你必須移除一些，同時添加其它的積木。"
      courseC_maze_programming8: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_2018: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_2019: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_predict1: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_predict1_2018: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_predict1_2019: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming9: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      courseC_maze_programming9_2018: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      courseC_maze_programming9_2019: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      courseD_artist_1_2018: 畫個邊長 **50** 像素的六邊形。
      courseD_artist_1_2018_2019: 畫個邊長 **50** 像素的六邊形。
      courseD_artist_binary1: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      courseD_artist_binary1_2018: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      courseD_artist_binary1_2019: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      courseD_artist_binary4: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_artist_binary4_2018: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_artist_binary4_2019: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_artist_binary6: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_artist_binary6_2018: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_artist_binary6_2019: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_artist_binary7: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_artist_binary7_2018: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_artist_binary7_2019: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_artist_binary8: 完成這個程式以畫出圖案。
      courseD_artist_binary8_2018: 完成這個程式以畫出圖案。
      courseD_artist_binary8_2019: 完成這個程式以畫出圖案。
      courseD_artist_binary8_predict1: 完成這個程式以畫出圖案。
      courseD_artist_binary8_predict1_2018: 完成這個程式以畫出圖案。
      courseD_artist_binary8_predict1_2019: 完成這個程式以畫出圖案。
      courseD_artist_nestedLoops5: 如果在每次畫出圓形間轉 90 度，結果會怎樣？
      courseD_artist_nestedLoops5_2018: 如果在每次畫出圓形間轉 90 度，結果會怎樣？
      courseD_artist_nestedLoops5_2019: 如果在每次畫出圓形間轉 90 度，結果會怎樣？
      courseD_artist_nestedLoops9: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_2018: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_2019: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_predict1: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_predict1_2018: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_predict1_2019: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops_challenge1: 你知道要怎麼製作出這樣的圖像嗎？
      courseD_artist_nestedLoops_challenge1_2018: 你知道要怎麼製作出這樣的圖像嗎？
      courseD_artist_nestedLoops_challenge1_2019: 你知道要怎麼製作出這樣的圖像嗎？
      courseD_artist_project2a: 現在，轉 180 度，再畫一次樓梯形狀的圖案！
      courseD_artist_project2a_2018: 現在，轉 180 度，再畫一次樓梯形狀的圖案！
      courseD_artist_project2a_2019: 現在，轉 180 度，再畫一次樓梯形狀的圖案！
      courseD_artist_ramp11: 現在用小藝術家來畫出一個正方形！
      courseD_artist_ramp12: 使用你學到的方法，在正方形裡頭畫出這個三角形。
      courseD_autorun_binary4_2019: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_autorun_binary6_2019: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_autorun_binary7_2019: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_autorun_binary8_2019: 完成這個程式以畫出圖案。
      courseD_autorun_binary8_predict1_2019: 完成這個程式以畫出圖案。
      courseD_bee_conditionals1_predict1: 檢查看看雲裡面是不是有花朵，如果有，就採集花蜜。
      courseD_bee_conditionals1_predict1_2018: 檢查看看雲裡面是不是有花朵，如果有，就採集花蜜。
      courseD_bee_conditionals1_predict1_2019: 檢查看看雲裡面是不是有花朵，如果有，就採集花蜜。
      courseD_bee_conditionals7: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_2018: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_2019: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_predict2: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_predict2_2018: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_predict2_2019: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals9: 收集所有的花蜜及蜂蜜。
      courseD_bee_conditionals9_2018: 收集所有的花蜜及蜂蜜。
      courseD_bee_conditionals9_2019: 收集所有的花蜜及蜂蜜。
      courseD_bee_conditionals_challenge2: 收集所有的花蜜及蜂蜜。
      courseD_bee_conditionals_challenge2_2018: 收集所有的花蜜及蜂蜜。
      courseD_bee_conditionals_challenge2_2019: 收集所有的花蜜及蜂蜜。
      courseD_bee_nestedLoops2: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_2018: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_2019: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1_2018: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1_2019: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops8: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops8_2018: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops8_2019: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops9: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_2018: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_2019: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_predict2: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_predict2_2018: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_predict2_2019: 釀造全部的蜂蜜。
      courseD_collector_debugging1: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging1a_2018: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging1a_2019: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging2: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging2a_2018: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging2a_2019: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging3: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging3a_2018: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging3a_2019: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging4: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging4a_2018: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging4a_2019: 修復一個或多個錯誤以收集到所有的寶藏。
      courseD_collector_debugging6a_2018: 挑戰：使用工作區中的代碼，可至少獲得**6**件寶物！
      courseD_collector_debugging6a_2019: 挑戰：使用工作區中的代碼，可至少獲得**6**件寶物！
      courseD_collector_nested_loops_challenge2a: 幫 Laurel 收集到至少 2 塊寶石。
      courseD_collector_ramp10: 幫 Laurel 收集到所有寶石。
      courseD_collector_ramp8: 幫 Laurel 收集到所有寶石。
      courseD_collector_ramp9: 幫 Laurel 收集到所有寶石。
      courseD_farmer_condLoops3: _「玉米、生菜、南瓜！幫我收成它們。」_
      courseD_farmer_condLoops3_2018: _「玉米、生菜、南瓜！幫我收成它們。」_
      courseD_farmer_condLoops3_2019: _「玉米、生菜、南瓜！幫我收成它們。」_
      courseD_farmer_condLoops8: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops8_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops8_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_while6: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_farmer_while6_2018: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_farmer_while6_2019: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_farmer_while8: '挑戰：填滿所有的洞，使用的積木愈少愈好。 '
      courseD_farmer_while8_2018: '挑戰：填滿所有的洞，使用的積木愈少愈好。 '
      courseD_farmer_while8_2019: '挑戰：填滿所有的洞，使用的積木愈少愈好。 '
      courseD_farmer_while_challenge1: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge1_2018: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge1_2019: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge2: 填滿所有的坑垌，並移走全部的土堆。
      courseD_iceage_loops11: 幫鼠奎特拿到橡樹果實！
      courseD_iceage_loops11_2019: 幫鼠奎特拿到橡樹果實！
      courseD_iceage_loops12: 拿到橡樹果實，不管你用什麼方法！
      courseD_iceage_loops12_2019: 拿到橡樹果實，不管你用什麼方法！
      courseD_iceage_loops6: 你能添加一個迴圈來拿到橡樹果實？
      courseD_iceage_loops6_2019: 你能添加一個迴圈來拿到橡樹果實？
      courseD_iceage_loops7: 鼠奎特真的很想拿到橡樹果實！
      courseD_iceage_loops7_2019: 鼠奎特真的很想拿到橡樹果實！
      courseD_iceage_loops8: 你有辦法修好這個程式嗎？
      courseD_iceage_loops8_2019: 你有辦法修好這個程式嗎？
      courseD_maze_intro5a_2019: 仔細計算網格上的空格！
      courseD_maze_nestedLoops4: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops4_2018: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops4_2019: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops6: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops6_2018: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops6_2019: 帶我到那朵向日葵的位置!
      courseD_maze_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp1_2019: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_maze_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_maze_ramp2_2019: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_maze_ramp3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_maze_ramp3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_maze_ramp3_2019: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_maze_ramp4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_maze_ramp4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_maze_ramp4_2019: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_maze_ramp5: 小心 TNT 炸藥。
      courseD_maze_ramp5_2018: 小心 TNT 炸藥。
      courseD_maze_ramp5_2019: 小心 TNT 炸藥。
      courseD_maze_ramp5a_2019: 仔細計算網格上的空格！
      courseD_maze_ramp5b: 幫忙引導憤怒鳥抓到豬！
      courseD_maze_ramp5b_2018: 幫忙引導憤怒鳥抓到豬！
      courseD_maze_ramp5b_2019: 幫忙引導憤怒鳥抓到豬！
      courseD_maze_ramp5c: 幫憤怒鳥抓到豬。
      courseD_maze_ramp5c_2018: 幫憤怒鳥抓到豬。
      courseD_maze_ramp5d: 讓鳥抓到這隻豬！
      courseD_maze_ramp5d_2018: 讓鳥抓到這隻豬！
      courseD_maze_ramp5d_2019: 讓鳥抓到這隻豬！
      courseD_maze_ramp6: "「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」"
      courseD_maze_ramp7: 讓鳥抓到這隻豬！
      courseD_maze_until1: 讓憤怒鳥抓到豬！
      courseD_maze_until10: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until1_2018: 讓憤怒鳥抓到豬！
      courseD_maze_until1_2019: 讓憤怒鳥抓到豬！
      courseD_maze_until3: 讓鳥抓到這隻豬！
      courseD_maze_until3_2018: 讓鳥抓到這隻豬！
      courseD_maze_until3_2019: 讓鳥抓到這隻豬！
      courseD_maze_until6: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until8: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until9: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_maze_until9_2018: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_maze_until9_2019: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_playLab_cond2: 讓 Pegleg 在每次到達龍的位置時都能得到 1 分。
      courseD_playLab_cond2_2018: 讓 Pegleg 在每次到達龍的位置時都能得到 1 分。
      courseD_playLab_cond3: 讓龍的情緒隨機的變化，每秒一次（歇斯底里的龍？）。
      courseD_playLab_cond3_2018: 讓龍的情緒隨機的變化，每秒一次（歇斯底里的龍？）。
      courseD_scrat_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_scrat_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_scrat_ramp3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_scrat_ramp4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_scrat_ramp5: 小心 TNT 炸藥。
      courseD_scrat_ramp6: "_「冷靜！幫我抓到這頭壞豬，不然我就真的要變成憤怒鳥啦！」_\\\r\n\\\r\n當你有很多相同指令的積木時，試著將它們放到`重複`迴圈裡，這樣子就盡量減少積木的使用數。"
      courseD_scrat_ramp7: 幫鼠奎特拿到橡樹果實！
      courseE_artist_functions1: "哈囉。我是個僵屍。我是個熱愛繪畫的殭屍！ 幫我畫一副方形眼鏡。 \n提示： 眼鏡框之間的鼻樑比鏡框的長度短
        25 像素。"
      courseE_artist_functions10: 這次，用 8 個邊長 25 像素的六邊形來畫圖。
      courseE_artist_functions10_2018: 這次，用 8 個邊長 25 像素的六邊形來畫圖。
      courseE_artist_functions10_2019: 這次，用 8 個邊長 25 像素的六邊形來畫圖。
      courseE_artist_functions6: 畫出正方形的窗戶，方式是在畫完線條以後轉 90 度，然後再然後。
      courseE_artist_functions8: "**挑戰：**盡可能做出你想要的函式，用函式來繪製邊長為 50 像素的正方形。"
      courseE_artist_functions8a_2018: 創建一個能繪出正方形的函式。
      courseE_artist_functions8a_2019: 創建一個能繪出正方形的函式。
      courseE_artist_functions9: 用現有的積木創建出這個圖像。
      courseE_artist_ramp8: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp8_2: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp9: 使用你學到的方法來畫出這個三角形。
      courseE_artist_ramp9_2: 使用你學到的方法來畫出這個三角形。
      courseE_bee_concept1: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      courseE_bee_concept1_2018: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      courseE_bee_concept5: 幫蜜蜂在花朵上收集花蜜。
      courseE_bee_concept5_2018: 幫蜜蜂在花朵上收集花蜜。
      courseE_bee_functions1: 收集每一朵花的花蜜。
      courseE_bee_functions3: 在這個關卡創建名為 get 5 的函式以一次拿取 5 個花蜜。
      courseE_bee_functions4: |-
        "移動，並得到花蜜"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。
        使用函式來收集所有的花蜜。
      courseE_farmer_concept2: 收集所有的南瓜。
      courseE_farmer_concept2_2018: 收集所有的南瓜。
      courseE_farmer_functions10b: 使用你的新函式兩次以完成這個關卡。
      courseE_farmer_functions4b: 使用你的新函式以完成這個關卡。
      courseE_farmer_functions5c: 你的函式會在這裡派上用場。
      courseE_farmer_functions8b: "**挑戰：**讓農夫走到南瓜那兒，並沿著路收集所有的南瓜。 "
      courseE_farmer_ramp12_forswap: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp12_forswap_2018: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp12_forswap_2019: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_playLab_scaffold5: 現在花些時間確保遊戲按照你想要的方式運作。包括輸或贏的方式，還有滿足的條件設定。
      courseF_artist_for6: 利用上一關的程式，改成轉 89 度，就能讓正方形產生螺旋效果。
      courseF_artist_for6_2018: 利用上一關的程式，改成轉 89 度，就能讓正方形產生螺旋效果。
      courseF_artist_for6_2019: 利用上一關的程式，改成轉 89 度，就能讓正方形產生螺旋效果。
      courseF_artist_for7: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      courseF_artist_for7_2018: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      courseF_artist_for7_2019: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      courseF_artist_for8: 把角度變小成 72 度，以畫出螺旋狀的五邊形。
      courseF_artist_for8_2018: 把角度變小成 72 度，以畫出螺旋狀的五邊形。
      courseF_artist_for8_2019: 把角度變小成 72 度，以畫出螺旋狀的五邊形。
      courseF_artist_for_challenge1: 想想看，如何重複的繪製出這個圖？
      courseF_artist_for_challenge1_2018: 想想看，如何重複的繪製出這個圖？
      courseF_artist_for_challenge1_2019: 想想看，如何重複的繪製出這個圖？
      courseF_artist_for_challenge2: 想想看，如何用單一迴圈重複的繪製出這個圖？
      courseF_artist_for_challenge2_2018: 想想看，如何用單一迴圈重複的繪製出這個圖？
      courseF_artist_for_challenge2_2019: 想想看，如何用單一迴圈重複的繪製出這個圖？
      courseF_artist_fwp1: 編輯函式 draw a square（畫個正方形），找出程式裡頭的錯誤。
      courseF_artist_fwp2: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      courseF_artist_fwp2_predict1: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      courseF_artist_fwp3: 創建一個函式，名為 draw a square（畫個正方形），並使用參數來畫出這 4 個盒子的外框線。
      courseF_artist_fwp4: 編輯這個函式以添加一個參數，參數用來表示多邊形的邊數。
      courseF_artist_fwp5: '使用上個關卡的函式來畫出這些圖形。  '
      courseF_artist_fwp6: 編輯 draw a spiral edge（畫個螺旋圖）以使用 length（長度）和 sides（邊）參數，然後重新創建這些形狀。
      courseF_artist_fwp7: 完成 draw a spiral edge（畫個螺旋圖）函式，同時詢問螺旋中心所需的最小長度。
      courseF_artist_fwp8: 想一想要怎麼使用你剛剛創建的函式來製作出這個圖案？
      courseF_artist_fwp9: 自由發揮：畫些很棒的東西出來吧！變化筆跡寬度，看看你的圖案會變得怎麼樣！
      courseF_artist_variables7: 畫個周長為 150 像素的三角形。
      courseF_artist_variables7_2018: 畫個周長為 150 像素的三角形。
      courseF_artist_variables7_2019: 畫個周長為 150 像素的三角形。
      courseF_bee_conditionals1_predict1: 檢查看看雲裡面是不是有花朵，如果有，就採集花蜜。
      courseF_bee_conditionals7_predict2: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseF_bee_for10: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      courseF_bee_for10_2018: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      courseF_bee_for10_2019: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      courseF_bee_for8: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      courseF_bee_for8_2018: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      courseF_bee_for8_2019: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      courseF_bee_for_challenge2: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge2_2018: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge2_2019: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_functions4: |-
        "移動，並得到花蜜"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。
        使用函式來收集所有的花蜜。
      courseF_bee_fwp2: 將這些程式變成一個函式，接著呼叫這個函式來檢查是否有花蜜。
      courseF_bee_fwp3: 讓我們來看看這個函式是否有辦法很容易的收集到三列的花蜜。
      courseF_bee_fwp4: 添加一個 length（長度）參數到函式裡，這樣一來當橫列長度不一樣時，它也一樣有用。
      courseF_bee_fwp5: 使用這個函式來收集花蜜。
      courseF_bee_fwp6: 為這個關卡建立一個簡短有力的解法。
      courseF_bee_fwp7: "**挑戰：**修改你的函式，讓你的函式也可以釀造蜂蜜。"
      courseF_bee_fwp8: 使用你的新函式以畫出這個螺旋圖形。
      courseF_bee_fwp9_predict1: 使用你的新函式以完成這個關卡。
      courseF_bee_variables_1_2018: 完成編碼，以便蜜蜂能夠收集到所有的蜂蜜與花蜜。
      courseF_bee_variables_1_2019: 完成編碼，以便蜜蜂能夠收集到所有的蜂蜜與花蜜。
      courseF_bee_variables_4_2018: 編輯代碼來解決這個難題。
      courseF_bee_variables_4_2019: 編輯代碼來解決這個難題。
      courseF_bee_variables_5_2018: 自行創作代碼來解決這個難題
      courseF_bee_variables_5_2019: 自行創作代碼來解決這個難題
      courseF_bee_variables_7_2018: 這個難題有些不同。需要做些什麼來解決呢？
      courseF_bee_variables_7_2019: 這個難題有些不同。需要做些什麼來解決呢？
      courseF_bee_variables_8_2018: 蜜蜂能從這朵花中採集到多少花蜜？
      courseF_bee_variables_8_2019: 蜜蜂能從這朵花中採集到多少花蜜？
      courseF_playlab_variables3b_josh: 用變數 `age` 取代固定的年齡 `12`，幫 Kiki 和 Brain 完成對話。
      flappy_1: 添加一個積木到「當點擊時」積木下，然後點擊「運行」。點擊或輕觸螢幕，讓像素鳥移動至目標。
      flappy_11: 創造你自己的像素鳥遊戲。你可以改變所有看的到的東西和所有規則，甚至是重力。當你完成時，點擊完成，讓你的朋友可以在他們手機上體驗你做的遊戲。
      flappy_2: 現在我們已經添加了一些地面。附加一個積木到「當碰到地面時」積木，當像素鳥撞上時你要程式來將「遊戲結束」。
      flappy_3: 當你的遊戲開始時，「當運行時」積木能讓你運行程式。試著設定速度等級並飛到目的地。
      flappy_4: 像素鳥會穿過障礙物，除非你寫程式讓它停下來。添加一個積木到「當碰到障礙物時」積木裡，你必須在像素鳥在第一次撞到水管時「結束遊戲」。
      flappy_5: 讓我們添加一個記分板，在像素鳥通過障礙時可以加分。把「得分」積木放到「當通過障礙時」積木下，這樣的話，當像素鳥飛過水管障礙時就可以獲得一分。
      flappy_6: 看看你能不能讓像素鳥在拍動更小或更大的數值時也能獲得分數。
      flappy_7: 接下來，試著附加另一個積木到「當運行時」積木的下方，讓場景改變。
      flappy_8: 你可以隨時設置視覺效果，不是只有遊戲開始時才可以。試著在其他事件發生時將場景設為隨機，比方說，當通過障礙物時。
      flappy_9: 要把東西混在一起囉！當撞到一個障礙物時，不要結束遊戲，改成把遊戲分數歸零。
      frozen circle: 圓是一個特殊的形狀。您能想到中間的問號應該要選擇哪一個數字，才能畫出一個圓嗎？
      frozen circle function: 使用新的「建立一個圓形」積木讓我建立 10 個相互重疊的圓形。不要忘了在每次畫一個圓之後向前跳。
      frozen circle function in circle: 現在我們來建立 20 個互有重疊的圓，在每個圓之後轉向 18 度。
      frozen circle function with parameter: 這裡有一個「建立一個圓形」的程式積木，可以畫出不同大小的圓。您可以用這個來建立一個大小為
        5 的小圓，跟一個大小為 10 的較大的圓嗎？
      frozen cross: 將這些指令放入「重複」積木裡來畫出一個加號。注意到了嗎？艾莎可以向後移動了。
      frozen cross rotate: 現在試著重複 10 次吧。你覺得每次畫出線之後，需要轉向幾度呢？
      frozen cross rotate dense: 現在我們來重複 90 次！要重複 90 次的話，每次要幾度才能轉到 360 度呢？提示：這是個非常小的數字。
      frozen diamond: 將這些程式放到「重複」積木裡來畫出平行四邊形，它就像一個長方形，但角度不同。我們要畫的是有 60 度和 120 度角的四邊形，而長方形的所有角度都是
        90 度。
      frozen diamond mini snowflake: 你知道每個雪花的形狀都不同嗎？讓我們用另一個「重複」積木創造一個新的雪花，它是由 4 個重複的平行四邊形所組成，每畫完一個平行四邊形就向右轉
        90 度。
      frozen diamond snowflake: 現在，讓我們創建新的雪花圖案，通過使用「重複」積木來畫出平行四邊形 10 次，每畫一個之後轉向 36
        度。
      frozen freeplay: 您已經變成一個專業的藝術家囉！開始打造一個冬季仙境吧。
      frozen line: 嗨！我是艾倫戴爾的艾莎女王。請幫幫我畫出一條線。
      frozen perpendicular: 現在看看我們能不能畫出 2 條線，然後讓 2 條線成 90 度。除了「移動-向前」積木外，你還需要用到「轉向-右方」或「轉向-左方」的積木喔。
      frozen snowflake branch: 用用看「建立雪花分支」積木，建立 3 個分支，讓它一開始像個雪花。
      frozen snowflake full: 現在我們來重複它 8 次以製作出美麗的雪花！
      frozen snowflower: 精細複雜的雪花樣式其實可以用非常簡單的形狀來產生。您可以畫重複五個大小為 5 的圓，以及五個大小為 10 個圓嗎？
      frozen square iterative: 看來我們已經畫出了正方形的一半了！來，我們一起把 4 條線組合起來，變成一個正方形吧！
      frozen square loop: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      frozen square loop 3x: 這次我們來建立 3 個正方形吧！每個正方形完成後，記得要轉 120 度，再畫下一個正方形。
      frozen square snowflake: 你可以用「重複」積木來畫 10 次正方形，每次轉 36 度嗎？這樣可以繪製出一個雪花喔！
      grade2_collector_A: 幫 Laurel 收集到所有寶石。
      grade2_collector_A_2018: 幫 Laurel 收集到所有寶石。
      grade2_collector_A_2019: 幫 Laurel 收集到所有寶石。
      grade5_artist_binary11: 自由發揮：這裡有張空白畫布讓你創作，開心的玩吧！
      grade5_artist_binary4: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      grade5_artist_binary5: 圖像上每一排都是用二進位制（binary）組合成的字串。你可以重新排列它們，讓圖片上的哭臉變笑臉嗎？
      grade5_artist_binary8: 完成這幅畫。
      grade5_artist_binary9: "這是一個有更高解析度的畫布（16 X 16像素）！\\\r\n\\\r\n當我們開始使用這些位元創作時，看看會發生甚麼事情？"
      k-1 maze 1: 你可以讓我往西邊移動到達豬的位置嗎？
      mike3bitmario: "粗心的二進位編碼器（binary coder）在圖像數據裡頭多輸入了一個 0 還是 1。這個額外的位元（bit）害得瑪利歐故障了！\\\r\n\\\r\n刪除這個額外的位元，讓瑪利歐恢復原狀！"
      ramp_artist_loops7: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops7_2018: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops7_2019: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops8: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops8_2018: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops8_2019: 找到規律，用迴圈讓這個程式更精簡！
      scrat 16: 橡樹！果實！橡樹果實！用「如果」積木讓我到那裡，用的積木愈少愈好。
      scrat 17: 好的，讓我們再練習一遍。不會很難的，但是要小心，別撞到牆！
      scrat 18: "「如果…否則」積木會先檢查條件是否成立，然後才決定執行什麼操作。如果想讓我得到橡樹果實，就用用這個新的積木。"
      scrat 19: 再練習一次「如果…否則…」積木，你能一次就成功嗎？
      scrat 20: 你可以只靠 3 個積木，來幫我完成一個更複雜的關卡嗎？只要你成功了，不管是多長的曲徑，我都能自己通過囉！快點！冰快融化啦！
