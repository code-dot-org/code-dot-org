---
ru-RU:
  data:
    long_instructions:
      2-3 Artist 1 new: Привет, я - художник. Ты можешь написать код, который заставит
        меня нарисовать почти всё что угодно. Используй несколько блоков, чтобы обвести
        серые линии. (Каждая линия имеет длину 100 пикселей)
      2-3 Artist 11: 'Нарисуй знаку "Стоп" контур, нарисовав восьмиугольник со стороной
        100 пикселей. '
      2-3 Artist 12: "Нарисуй круг, чтобы закончить глаз! \n\nЕсли художник в каждой
        итерации будет поворачиваться на 1 градус, сколько раз надо повторить этот
        код, чтобы нарисовать круг? "
      2-3 Artist 2 new: У этого дома стена построена только наполовину. Длина каждой
        стороны 100 пикселей, но недоделанная длиной 50. Дострой её.
      2-3 Artist 3.4: Блок "прыгнуть" перемещает художника, не рисуя линию. Нарисуй
        пунктирную линию, используя блоки "прыгнуть вперёд" и "двигаться вперёд".
        Длина каждой линии 50 пикселей.
      2-3 Artist 3new: "У красной шляпы высота 100 пикселей. Дорисуй чёрную шляпу,
        которая на 70 пикселей ниже. \n\n(Учти - ширина каждой шляпы 50 пикселей.)"
      2-3 Artist 4: Помоги мне достроить дом для этого кота.
      2-3 Artist 6: "Этому дому нужна крыша! Нарисуйте треугольник. \\\r\n\\\r\nПодсказка:\nдлина
        всех трёх сторон - одинаковая.\\\r\n\\\r\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      2-3 Artist 7: "Дорисуй последнюю группу окон школы, чтобы все в классе могли
        видеть улицу. \n\nОкна квадратные со стороной 25 пикселей. "
      2-3 Artist 8: "Пора построить хлев! \n\nПострой загоны для каждого животного,
        разделив весь хлев на 2 равных квадрата. \n\nПодсказка: Ширина прямоугольника
        200 пикселей, длина 100 пикселей. \n\nЭту головоломку можно решить разными
        способами."
      2-3 Artist 9 NEW: Дорисуй воздушного змея
      2-3 Artist Assessment 1: "**На оценку:** Дорисуй последний зуб шириной и высотой
        25 пикселей."
      2-3 Artist Debugging 1: "Ширина шляпы должна быть 50 пикселей. \nИсправишь программу?\n\n<br/>"
      2-3 Artist Debugging 10: "Крестовина на моём геймпаде слишком узкая. \n\nСделаешь
        её шире на 10 пикселей?\n\nЗапусти код чтобы понять что не так."
      2-3 Artist Debugging 11: |-
        Моя снежинка разваливается!

        Найдёшь что пошло не так?
      2-3 Artist Debugging 2: "Эта программа рисования кошачьих усов неправильная.
        \n\nИсправь её, чтобы все усы были одинаковой длины."
      2-3 Artist Debugging 3: "В моей лодке пробоина! \n\nЧто нужно сделать, чтобы
        концы сошлись?"
      2-3 Artist Debugging 5: "Наша программа для рисования ноги и ступни неправильная.
        \n\nИсправишь?"
      2-3 Artist Debugging 6: |-
        Похоже, я сижу на стуле без ножки!

        Исправь программу, чтобы дорисовать её.
      2-3 Artist Debugging 7: |-
        Похоже буква С рисуется задом наперёд!

        Можешь это исправить?
      2-3 Artist Debugging 8: |-
        Мой учитель говорит что я должен закончить начатое!

        Мне нужно дорисовать вертушку! Но что я сделал не так?
      2-3 Artist Debugging 9: |-
        Что-то не так!

        Код для этого стебля неправильный. Разберёшься с тем как художник должен его нарисовать?
      2-3 Artist Debugging Assessment 1: |-
        **На оценку:** Почему этот квадрат со стороной 75 пикселей такой маленький?

        Где ошибка?
      2-3 Artist Free Play: Свободная игра! Рисуй всё что тебе хочется.
      2-3 Artist Functions 10: "**Свободная игра:** Здесь есть две функции, одна из
        которых рисует большую шестерню, а вторая - малую. \\\r\n\\\r\nИспользуйте
        их, чтобы нарисовать машину изнутри!"
      2-3 Artist Functions 11: Мы переименовали функцию «нарисовать квадрат» в «нарисовать
        шестиугольник», только она все еще рисует только квадраты! Можешь изменить
        функцию «нарисовать шестиугольник», чтобы она рисовала шестиугольник со сторонами
        50 пикселей, и нарисовать рисунок с ее помощью?
      2-3 Artist Functions 11.5: "Это та же функция «нарисовать шестиугольник». \\\r\\\r
        Что произойдет, если цикл выполнится 6 раз, и при каждом выполнении цикла
        поворачиваться только на 60 градусов?"
      2-3 Artist Functions 12: 'Функции прекрасно подходят для того, чтобы рисовать
        сложные фигуры несколько раз. Можешь заполнить оставшуюся часть ящика для
        цветов с помощью функции «нарисовать цветок»? (Подсказка: цветы находятся
        на расстоянии 100 пикселей друг от друга)  '
      2-3 Artist Functions 2: Функции позволяют создавать новые блоки! Мы переместили
        блоки для рисования квадрата внутрь функции «нарисовать квадрат». Можешь использовать
        функцию «нарисовать квадрат», чтобы нарисовать очки? Расстояние между квадратами
        — 75 пикселей.
      2-3 Artist Functions 3: Измени длину стороны квадрата в функции «нарисовать
        квадрат», чтобы она была равна 115, и нарисуй очки большего размера. Теперь
        квадраты должны быть на расстоянии 45 пикселей друг от друга.
      2-3 Artist Functions 4: Используй блок «повторить», чтобы нарисовать эти 3 квадрата.
      2-3 Artist Functions 9: "**Свободная игра\"** Это функция для рисования снежинки.
        Поэкспериментируйте с ней, чтобы создать зимний пейзаж! \\\r \\\r Это свободная
        игра, и здесь не нужно решать головоломку. Развлекайтесь!"
      2-3 Artist Loops New 1: |-
        Давай нарисуем голову робота! Можешь нарисовать квадрат со стороной 100 пикселей?

        <br/>
      2-3 Artist Loops New 10: Теперь давай соединим много галочек при помощи цикла.
      2-3 Artist Loops New 11: "Время сделать что-то крутое! \n\nПерепиши код из предыдущей
        задачи, но в этот раз добавь поворот влево на 30 градусов внутри цикла. Повтори
        это 24 раза вместо 8."
      2-3 Artist Loops New 12: 'Нарисуй алмаз со стороной 100 пикселей. '
      2-3 Artist Loops New 13: "У нас есть код (серый), рисующий один алмаз. \n\nЗацикли
        серый код, чтобы нарисовать красивый узор!"
      2-3 Artist Loops New 14: "Поэкспериментируй с кодом рисования алмаза и посмотри,
        какие ещё узоры можно получить. \n\nПопробуй поменять угол поворота и количество
        повторений."
      2-3 Artist Loops New 15: |-
        Нарисуй всё, что хочешь!
        <br/><br/>
      2-3 Artist Loops New 2: |-
        Это та же головоломка, которую мы только что решили, но в этот раз мы используем только один блок `двигаться вперёд` и один блок `повернуть`.

        Сможешь использовать блок `повторить` здесь?
      2-3 Artist Loops New 9: Нарисуй простую галочку "V" (со стороной 50 пикселей),
        чтобы дорисовать стрелу.
      2-3 Artist Nested Loops 1: Раньше ты использовал циклы для рисования фигур,
        но сейчас мы собираемся поместить одни циклы в другие! Помести весь этот код
        в блок "повторить", чтобы нарисовать шаблон.<br/>
      2-3 Artist Nested Loops 10: Зацикли этот код на 12 раз чтобы завершить узор.
      2-3 Artist Nested Loops 11: Сделай цикл на 4 прохода, чтобы завершить узор и
        поворачивай его на 90 градусов в конце каждого прохода.
      2-3 Artist Nested Loops 12: Сделай цикл на 12 проходов для завершения завитков.
      2-3 Artist Nested Loops 2: Теперь зацикли треугольник 6 раз. После каждого треугольника,
        тебе необходимо повернуть его на 60 градусов, прежде чем рисовать следующий.
      2-3 Artist Nested Loops 3: "Тебе нужно зациклить ваш треугольник 12 раз, чтобы
        нарисовать этот шаблон. \\\r\n\\\r\nРаздели число градусов в круге (360) на
        число фигур, которые ты рисуешь (12), чтобы узнать, на сколько градусов поворачиваться
        после каждой фигуры."
      2-3 Artist Nested Loops 4: |-
        Повтори этот код рисования ромба 12 раз. чтобы нарисовать цветок!

        Подсказка: Мы используем в цикле из ромбов тот же угол, что использовался в цветке из треугольников. На сколько нужно поворачивать после каждого "лепестка"?
      2-3 Artist Nested Loops 5: Заполни окна здания с помощью вложенного цикла. Длина
        окон — 20 пикселей, расстояние между ними — 20 пикселей.
      2-3 Artist Nested Loops 6: Над хвостом у этого динозавра 8 шипов; длина каждого
        шипа составляет 30 пикселей. Зацикли треугольник 8 раз, но убедись, что будешь
        перемещаться вперед после каждого шага!
      2-3 Artist Nested Loops 7: Зацикли треугольник 10 раз, чтобы нарисовать солнце.
        Тебе необходимо перемещаться и поворачивать после каждого треугольника. Ты
        можешь определить, на сколько градусов нужно поворачивать, разделив число
        градусов в круге на число фигур, образующих круг.
      2-3 Artist Nested Loops 8: "А теперь добавим немного зелени на нашу картинку.
        \nРазмести каждый пучок травы на расстоянии 50 пикселей друг от друга."
      2-3 Artist Nested Loops 9: "Мы закончим рисунок, дорисовав наш цветок. \n\nЗацикли
        ромб на 12 повторений, чтобы нарисовать цветок."
      2-3 Artist Nested Loops Free Play: Свободная игра. Нарисуй что-нибудь интересное
        с помощью вложенных циклов.
      2-3 Bee Conditionals 13: 'Собери нектар и приготовь мед. Подсказка: что произойдет,
        если ты используешь условный оператор «если есть нектар» для красного цветка?
        Можешь выполнить эту задачу с помощью цикла?'
      2-3 Bee Conditionals 14: Собери нектар и приготовь мед. Будь осторожен, не собирай
        нектар с фиолетовых цветов, его там нет.
      2-3 Bee Conditionals 15: "Где-то мы уже видели такую \"лестницу\"... \n\nСоберёшь
        нектар только с цветов, на которых он есть, используя как можно меньше блоков?"
      2-3 Bee Conditionals 2: "Я голодная пчёлка! \nПомоги собрать весь нектар с цветов
        используя минимум блоков."
      2-3 Bee Conditionals 3: "Посмотри на весь этот нектар!\n\nПомоги мне его собрать
        и приготовить мёд за как можно меньшее количество блоков.  "
      2-3 Bee Conditionals 5: "Те волшебные фиолетовые цветы меняются!\\\r\n\\\r\nКаждый
        раз, когда ты пытаешься решить задачу, в каждом фиолетовом цветке может быть
        или 1 нектар либо вообще ничего... но ты не узнаешь точное значение, пока
        не запустишь код! \\\r\n\\\r\nБудь осторожен! Не собирай нектар с фиолетовых
        цветов, если там его нет. \\\r\nТы должен сначала проверить, равно ли количество
        нектара 1, используя блок \"если нектар\"."
      2-3 Bee Conditionals Assessment 1: |-
        **На оценку:** Собери весь нектар.\
        Будь внимателен - не собирай нектар с фиолетовых цветов, если на них его нет.
      2-3 Bee Debugging 1: |-
        Эти блоки не дают мне покоя!

        Исправь ошибку (или несколько), чтобы собрать весь нектар и приготовить весь мед.
      2-3 Bee Debugging 10: "Эта головоломка меня путает! \n\nИсправь ошибку(-ки),
        чтобы собрать весь нектари и приготовить весь мёд."
      2-3 Bee Debugging 2: |-
        Найдёшь, в чём здесь проблема?

        Исправь ошибку (ошибки), чтобы собрать весь нектар.
      2-3 Bee Debugging 3: |-
        Ой, не туда!

        Исправь ошибку (ошибки), чтобы собрать весь нектар.
      2-3 Bee Debugging 5: "Этот цветок выглядит аппетитно! \n\nИсправь ошибку (ошибки)
        чтобы собрать весь нектар.\\\nМожешь использовать и кнопку \"Выполнить\",
        и кнопку \"Шаг\"."
      2-3 Bee Debugging 6: |-
        Какое приятное испытание!

        Исправь ошибку (ошибки), чтобы собрать весь нектар.
      2-3 Bee Debugging 9: |-
        Наберись пчелиного терпения в этот раз!

        Тебе нужно исправить несколько блоков в этой программе, чтобы собрать и нектар весь собрать, и весь мёд приготовить.
      2-3 Bee Debugging Assessment 1: |-
        **На оценку:** Пришло время показать, что ты усвоил!

        Исправь ошибку(-ки), чтобы собрать весь нектар и приготовить весь мёд.
      2-3 Bee Functions 1: "Функции - блоки кода, которые выполняют задание. \\\r\n\\\r\nИспользуйте
        функцию \"взять 2 нектара\", чтобы собрать весь нектар с каждого цветка."
      2-3 Bee Functions 10: Фиолетовые цветы могут содержать 1 или 0 порций нектара.  Создай
        функцию для сбора нектара только с фиолетовых цветов, в которых он есть.
      2-3 Bee Functions 2: Функции — это блоки кода, выполняющие определенную задачу.
        Используй функцию «собрать 5 порций нектара», чтобы собрать 5 порций нектара
        сразу. Также убедись, что ты используешь циклы с оптимальным количеством блоков.
      2-3 Bee Functions 4: Функция «перемещаться и собирать нектар» позволяет пчеле
        поворачивать, собирать нектар и затем возвращаться в начало. Используй функцию,
        чтобы собрать весь нектар.
      2-3 Bee Functions Assessment 1: "**На оценку:** Используйте данную функцию,
        чтобы собрать нектар с каждого цветка."
      2-3 Bee Functions Assessment 2: "**На оценку:** Создайте функцию для поворота,
        движения вперёд и делания 3 мёда, затем для возврата пчелы туда, где она начала,
        и оборота."
      2-3 Bee Loops 1: |-
        Эти цветы выглядят вкусно!

        Собери нектар с каждого цветка используя как можно меньше блоков.
      2-3 Bee Loops 13: "**На оценку:** Соберите весь нектар, используя как можно
        меньше блоков."
      2-3 Bee Loops 3A: Можешь использовать цикл для сбора всего нектара?
      2-3 Bee Loops 3B: Теперь используй блок "повторить" чтобы собрать весь нектар
        и приготовить весь мёд.
      2-3 Bee Loops 4: |-
        У пчёлки всегда столько дел!

        Помоги ей собрать весь нектар и приготовить весь мёд с минимумом блоков.
      2-3 Bee Loops 4A: "Сколько раз циклы могут помочь тебе в этой головоломке?  \n\nЦиклы
        - твои друзья! Используй их несколько раз, чтобы решить головоломку как можно
        короче."
      2-3 Bee Loops 5: "Этот путь не похож на другие. \n\nСумеешь собрать весь нектар
        используя минимум блоков?"
      2-3 Bee Loops 7: |-
        Какое красивое поле цветов!\
        Помоги пчёлке посетить каждый.\
        Сможешь уложиться в 7 блоков?
      2-3 Bee Loops 8: Эти фиолетовые цветы содержат неизвестное количество нектара.
        Используй цикл «пока есть нектар», чтобы собрать весь нектар. Этот цикл будет
        выполняться до тех пор, пока условие истинно, в данном случае пока количество
        нектара > 0.
      2-3 Bee Loops Assessment 1: Оценка. Используй цикл с предусловием, чтобы собрать
        весь нектар с этого цветка.
      2-3 Maze 1: "Поможешь мне поймать эту гадкую свинку? \nПрикрепи несколько блоков
        `двигаться вперёд` к блоку `при запуске` и нажми \"Выполнить\". "
      2-3 Maze 12: |-
        Неожиданно, появился волшебный блок! С блоком `повторить` ты можешь использовать код снова и снова.

        Можешь ли ты добраться до свинки, создав цикл, который использует только один блок `двигаться вперёд` внутри `повторить`?
      2-3 Maze 13: Помоги мне добраться до свиньи! Теперь ты можешь использовать блок
        "двигаться вперед" только один раз
      2-3 Maze 15: В этой головоломке, два блока `повторить` помогут тебе добраться
        до свинки с минимальным числом блоков!
      2-3 Maze Loops 18: "Доведи меня до подсолнуха, используя наименьшее количество
        блоков! \nПодсказка: Попробуй использовать один цикл \"Повторить\"  внутри
        другого."
      2-3 Maze Loops 19: "Усложним задачу! \n\nИспользуй циклы, чтобы провести меня
        к подсолнуху с минимальным числом циклов."
      2-3 Maze Loops Assessment 1: "**На оценку:** Проведи меня к подсолнуху используя
        только 5 блоков! "
      4-5 Artist 1: |-
        Help me finish drawing my box. (Each line
        is 300 pixels long)
      4-5 Artist 2: Сможешь поместить код в цикл так, чтобы получился квадрат?
      4-5 Artist 3: Периметр прямоугольной клумбы — 600. Протяженность более длинной
        стороны — 200. Нарисуй прямоугольник.
      4-5 Artist 3.5: Итак, попробуй догадаться, что произойдет при запуске кода (или
        нажми «Выполнить», чтобы узнать). Затем повтори код достаточное число раз,
        чтобы завершить рисунок. Каждый раз цвет линий, скорее всего, будут разным.
      4-5 Artist 4: Сколько градусов в окружности? Зацикли блок кода, чтобы нарисовать
        разноцветный круг.
      4-5 Artist 5: На что мы можем изменить "???", чтобы удостовериться, что зомби
        выполнит рисование, используя предоставленный цикл?
      4-5 Artist 6: Углы равностороннего треугольника равны 60 градусам, длина стороны
        - 200 точек. Дорисуй треугольник.
      4-5 Artist 7: Углы этого прямоугольного треугольника равны 30, 60 и 90 градусам.
        Гипотенуза в два раза длиннее высоты, равной 100 пикселей. Дорисуй треугольник.
      4-5 Artist 9: Нарисуй вторую половину так, чтобы рисунок получился симметричным.
        Треугольники имеют равные стороны длиной 50 пикселей.
      4-5 Artist Assessment 1: "**На оценку:** Используйте цикл для рисования равностороннего
        треугольника. Каждая сторона по 300 пикселей."
      4-5 Artist Free Draw 1: Свободная тема! Рисуй все, что захочется.
      4-5 Artist Patterns 10: "Этот код рисует два ряда шестиугольников - зациклите
        это 4 раза, чтобы нарисовать соты. \\\r\n\\\r\nВам надо прыгнуть назад на
        120 пикселей во внешнем цикле, чтобы убедиться, что художник не будет рисовать
        вне экрана."
      4-5 Artist Patterns 11: Сколько раз нужно повторить этот цикл, чтобы нарисовать
        полукруг?
      4-5 Artist Patterns 12: Что произойдет, если ты скопируешь этот цикл и повернешь
        налево вместо поворота направо? Можешь повторить это и нарисовать эту волну?
      4-5 Artist Patterns 13: Теперь давай зациклим весь этот код четыре раза, чтобы
        нарисовать рамку для рисунка. Следи за углами — ты не можешь просто поворачивать
        на 90 градусов! Если цикл со смещением на 3 градуса и поворотом 60 раз рисует
        полукруг, какой из этих блоков кода позволит нарисовать четверть круга для
        использования по углам?
      4-5 Artist Patterns 2: Если поместить цикл «нарисовать квадрат» внутрь другого
        цикла, то получится так называемый «вложенный цикл». Что тебе нужно добавить
        во внешний цикл, чтобы все 15 кругов шли один за другим?
      4-5 Artist Patterns 3: Теперь давай перейдем на следующий уровень! Мы вложили
        целый блок кода в другой цикл, но тебе нужно вернуть художника в начало, чтобы
        нарисовать следующую линию. Какой из этих блоков кода можно разместить в конце
        внешнего цикла, чтобы нарисовать всю сетку?
      4-5 Artist Patterns 4: Размер граней этого ромба — 50 пикселей, величина углов
        — 120 и 60 градусов. Используй цикл, чтобы нарисовать его.
      4-5 Artist Patterns 5: "Повторите этот код, чтобы сделать ряд из 6 алмазов.
        \\\r\n\\\r\nВнимание: мы поменяли наш код алмаза так, чтобы он повторялся
        3 раза вместо двух - к чему бы это?"
      4-5 Artist Patterns 6: Сколько раз тебе нужно повторить этот блок, чтобы нарисовать
        полную сетку ромбов?
      4-5 Artist Patterns 7: Давай изменим код из последней головоломки так, чтобы
        нарисовать этот более сложный узор. Обрати внимание, что теперь ромбы частично
        перекрывают друг друга; попробуй изменить значение первой команды «прыгнуть
        назад» со 100 на 50 (т.е. уменьшить наполовину); итак, как далеко должен переместиться
        художник при выполнении второй команды «прыгнуть назад»?
      4-5 Artist Patterns 8: Используй цикл, чтобы нарисовать шестиугольник со стороной
        40 пикселей и углами в 60 градусов.
      4-5 Artist Patterns 9: 'Теперь повтори этот код 3 раза, чтобы нарисовать полный
        ряд. Подсказка: расстояние между крайней левой и крайней правой точками каждого
        шестиугольника равно 80 пикселей.'
      4-5 Artist Patterns 9.5: Давай зациклим этот код, чтобы нарисовать два ряда
        шестиугольников. Обрати внимание, как сместился влево наш второй ряд.
      4-5 Artist Patterns Free Play: 'Свободная игра: попробуй создать свой собственный
        узор!'
      4-5 Bee Conditionals 1: Пчела не может сказать, является ли объект цветком или
        сотой. Собери нектар только с цветов, но сначала проверь, является ли объект
        цветком или сотой.
      4-5 Bee Conditionals 5: Под теми облаками может скрываться цветок или сота.
        Используй блок «если/иначе», чтобы собрать нектар, если это цветок, или чтобы
        приготовить мед в противном случае (потому что тогда объект является сотой).
      4-5 Bee Conditionals 6: В этом фиолетовом цветке может быть 3, 2 или 1 порция
        нектара. Здесь блок «если-иначе» объединен с другим блоком «если-иначе» для
        создания блока «если, иначе-если, иначе». Дополни это решение, чтобы собрать
        неизвестное количество нектара.
      4-5 Bee Conditionals 7: Помни, что в фиолетовых цветах может быть 3, 2 или 1
        порция нектара. Составь функцию «проверить фиолетовый цветок» и используй
        ее, чтобы собрать весь нектар с цветов.
      4-5 Bee Conditionals 8: Напиши внутри функции функцию «проверять цветок, готовить
        мед». Твоя функция должна проверять, содержит ли фиолетовый цветок 3, 2 или
        1 порцию нектара, и собирать весь нектар. Затем выполни перемещение вперед
        и приготовь мед.
      4-5 Bee Conditionals Assessment 1: 'Тест: Это неправильный код. Напиши функцию
        «собрать нектар или приготовить мед», а затем вызови ее, чтобы приготовить
        весь нектар и мед. Помни, что в фиолетовых цветах может быть 3, 2 или 1 порция
        нектара.'
      4-5 Bee Debugging 1: Эти блоки не дают мне покоя. Можешь их исправить?
      4-5 Bee Debugging 6: Фиолетовый цветок содержит неизвестное количество нектара.
        Исправь блоки, чтобы собрать весь нектар с цветка.
      4-5 Bee Debugging Assessment 1: "**На оценку:** Исправьте код."
      4-5 Bee Nested Loops 2: Собери весь нектар со всех цветов. Используй вложенный
        цикл.
      4-5 Bee Nested Loops 4: Собери весь нектар с каждого цветка и приготовь мед
        в каждой соте. Используй вложенный цикл.
      4-5 Bee Nested Loops Assessment 1: 'Подсказка: собери весь нектар и приготовь
        весь мед при помощи циклов.'
      4-5 Maze 7: |-
        Быстро доставьте зомби к подсолнечнику!
        Сможете ли вы решить головоломку меньше, чем за 11 блоков?
      4-5 Maze 9: Создай цикл с помощью блока «повторять, пока не».
      4-5 Maze Conditionals 1: Используй блок «повторять, пока не», чтобы доставить
        зомби к подсолнуху.
      4-5 Maze Conditionals 10: "Сможете добавить только 3 блока, чтобы помочь решить
        более сложный лабиринт зомби? \\\r \\\r Если вы сделаете это правильно, он
        сможет пройти по любому извилистому пути независимо от длины!"
      4-5 Maze Conditionals 2: Используй блок «повторять, пока не», чтобы доставить
        зомби к подсолнуху.
      4-5 Maze Conditionals 3: 'Используй блок «если», чтобы я мог решать, когда поворачивать.
        Подсказка: тебе понадобится еще один блок, но запомни, как мы его разместили,
        чтобы в следующий раз ты мог сделать это сам.'
      4-5 Maze Conditionals 4: Хорошо, это похоже на предыдущую головоломку, но тебе
        надо помнить, как ты использовал блоки «если» и «повторить» вместе.
      4-5 Maze Conditionals 6: Моя хотеть подсолнух! Используй блок «если», чтобы
        привести меня к нему, используя как можно меньше блоков.
      4-5 Maze Conditionals 7: Ну что, поупражняемся еще? Это практически то же самое.
        Остерегайся зубастиков!
      4-5 Maze Conditionals 8: Блок «если/иначе» проверяет условие, после чего выполняет
        одно действие ИЛИ другое. Чтобы помочь мне добраться до подсолнуха, попробуй
        использовать этот новый блок.
      4-5 Maze Conditionals 9: Еще один случай для использования блока «если-иначе»;
        сможешь сделать правильно с первой попытки?
      4-5 Maze Conditionals Assessment 1: Используй блоки «повторять, пока не» и «если-иначе»,
        чтобы доставить меня к подсолнуху, используя как можно меньше блоков.
      4-5 Nested Loops 1: 'Дополни код, чтобы нарисовать эти треугольники.  Первый
        уже готов.  Подсказка:  Раздели 360 градусов на 3 треугольника, чтобы узнать
        угол поворота.'
      4-5 Nested Loops 11: |-
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      4-5 Nested Loops 12: |-
        Can you draw these 36 triangles using
        a nested loop?
      4-5 Nested Loops 2: 'Теперь вложи этот цикл внутр другого цикла, чтобы нарисовать
        10 треугольников.  Это называется вложенный цикл.  Подсказка: Вместе 10 треугольников
        выполняют поворот на 360 градусов.  '
      4-5 Nested Loops 3: Чтобы нарисовать солнце, вложи этот код в цикл. Это называется
        вложенный цикл.
      4-5 Nested Loops 5: Сделай цикл из данного кода, чтобы создать ветряную мельницу.
      4-5 Nested Loops 6: |-
        Can you draw a hexagon by looping the
        triangle code?
      4-5 Nested Loops 9: Дорисуй зубы в пасти крокодила!
      4-5 While Loops 1: Перемести меня к яме и заполни ее двумя лопатами земли, используя
        блок «засыпать».
      4-5 While Loops 2: Перемести меня к куче земли и убери ее 5 взмахами лопаты,
        используя блок «раскидать».
      4-5 While Loops 3: 'Перемести меня к куче и полностью убери ее, затем перемести
        к яме и полностью засыпь ее.  Подсказка:  Используй как можно меньше блоков.'
      AppLab Intro 7 - Change Screen Color: "<div style=\"float:right\">\n\t<img src=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54
        AM.png\" style=\"height:150px\"> \n</div>\n\n**Цель:** Сделать окно зеленым.
        \n\n**Как:** Перетащите в окно кода блок`УстановитьСвойство()`. Выберите в
        выпадающих списках свойство \"цвет фона\" и его значение \"зеленый\". Затем
        нажмите \"Выполнить\".\n\n**Не получается? Нажмите сюда** ![expandable](https://images.code.org/3b5e70522b02867a1df1d5b5e481785e-image-1511279858395.gif)"
      CSD U2 HTML Adding Paragraphs: |-
        # Добавьте в body текст

        Когда вы начинаете любой проект в Web Lab, программа автоматически добавляет в ваш проект теги \<!DOCTYPE>, <html>, <head> и <body>. Наполняя свой проект содержимым, вы должны располагать его между тегами <body> и </body>, потому что содержимое является частью "тела" вашей веб-страницы.

        # Выполните следующее

        -   Напишите три отдельных предложения на любую тему внутри body-тегов вашей веб-страницы.
        -   Нажмите на "Refresh and Save", если вы не видите изменений в области предварительного просмотра.
        -   Сравните свою работу с работой вашего соседа. Убедитесь, что вы разместили код в одном и том же месте.
      CSD U2 HTML Adding Paragraphs pt 2: "<div style=\"float: right; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">
        \n<details> \n\n<summary><strong>Что такое элемент текстового абзаца?</strong></summary>
        \n\nАбзацы отмечаются открывающим (<p>) и закрывающим (</p>) тегами. Абзацы
        в HTML могут содержать текст любой длины: от одного слова до нескольких предложений.
        Абзацы объединяют несколько предложений в группу и создают отступ между этой
        группой текста и следующей группой текста.\n\n</details> \n<details> \n<summary><strong>Как
        сделать несколько абзацев?</strong> \n</summary> \n\nНиже приведен пример
        нескольких абзацев, следующих друг за другом. Этот код помещается внутри \"тела\"
        вашей веб-страницы, т.е. тегов body. \n\n<p>Это абзац. Он содержит два предложения.</p>
        \n<p>Это еще один абзац.</p> \n\n</details> \n</div> \n\n# Используйте теги
        абзаца\n\nТег <p> (от англ. paragraph — абзац) или \"тег абзаца\" ставится
        в начале и конце текста, чтобы указать, что текст является частью абзаца.
        Помещая текст в тег абзаца, мы даем компьютеру понять, что этот текст нужно
        отображать по-другому, как правило, просто отделяя его от другого текста.\n\n#
        Выполните следующее\n\n-   Поместите текст, который вы только что написали,
        в хотя бы два отдельных абзаца, используя теги <p> и </p>.\n-   Сравните свой
        результат с результатом вашего соседа. Что изменилось в том, как отображается
        ваш текст?"
      CSD U2 HTML Adding Paragraphs pt 2_2018: "<div style=\"float: right; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\"> \n<details> \n\n<summary><strong>Что такое элемент текстового
        абзаца?</strong></summary> \n\nАбзацы отмечаются открывающим (<p>) и закрывающим
        (</p>) тегами. Абзацы в HTML могут содержать текст любой длины: от одного
        слова до нескольких предложений. Абзацы объединяют несколько предложений в
        группу и создают отступ между этой группой текста и следующей группой текста.\n\n</details>
        \n<details> \n<summary><strong>Как сделать несколько абзацев?</strong> \n</summary>
        \n\nНиже приведен пример нескольких абзацев, следующих друг за другом. Этот
        код помещается внутри \"тела\" вашей веб-страницы, т.е. тегов body. \n\n<p>Это
        абзац. Он содержит два предложения.</p> \n<p>Это еще один абзац.</p> \n\n</details>
        \n</div> \n\n# Используйте теги абзаца\n\nТег <p> (от англ. paragraph — абзац)
        или \"тег абзаца\" ставится в начале и конце текста, чтобы указать, что текст
        является частью абзаца. Помещая текст в тег абзаца, мы даем компьютеру понять,
        что этот текст нужно отображать по-другому, как правило, просто отделяя его
        от другого текста.\n\n# Выполните следующее\n\n-   Поместите текст, который
        вы только что написали, в хотя бы два отдельных абзаца, используя теги <p>
        и </p>.\n-   Сравните свой результат с результатом вашего соседа. Что изменилось
        в том, как отображается ваш текст?"
      CSD U2 HTML Adding Paragraphs_2018: |-
        # Добавьте в body текст

        Когда вы начинаете любой проект в Web Lab, программа автоматически добавляет в ваш проект теги \<!DOCTYPE>, <html>, <head> и <body>. Наполняя свой проект содержимым, вы должны располагать его между тегами <body> и </body>, потому что содержимое является частью "тела" вашей веб-страницы.

        # Выполните следующее

        -   Напишите три отдельных предложения на любую тему внутри body-тегов вашей веб-страницы.
        -   Нажмите на "Refresh and Save", если вы не видите изменений в области предварительного просмотра.
        -   Сравните свою работу с работой вашего соседа. Убедитесь, что вы разместили код в одном и том же месте.
      CSD U2 HTML Adding Paragraphs_2019: |-
        # Добавьте в body текст

        Когда вы начинаете любой проект в Web Lab, программа автоматически добавляет в ваш проект теги \<!DOCTYPE>, <html>, <head> и <body>. Наполняя свой проект содержимым, вы должны располагать его между тегами <body> и </body>, потому что содержимое является частью "тела" вашей веб-страницы.

        # Выполните следующее

        -   Напишите три отдельных предложения на любую тему внутри body-тегов вашей веб-страницы.
        -   Нажмите на "Refresh and Save", если вы не видите изменений в области предварительного просмотра.
        -   Сравните свою работу с работой вашего соседа. Убедитесь, что вы разместили код в одном и том же месте.
      CSD U2 Inspector Warm Up: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary><strong>Как использовать Inspector Tool?</strong>

        </summary>

        Inspector Tool это отличный способ узнать больше о незнакомом коде в Web Lab. Чтобы включить Inspector Tool, нажмите <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Вы поймете, что Inspector Tool включен, когда кнопка изменит свой цвет на белый, и на ней будет написано "Inspector: On". После включения Inspector Tool вы можете навести курсор мыши на любой элемент в области предварительного просмотра, и Web Lab выделит код, ответственный за эту часть отображаемой страницы.

        </details>
        </div>

        # Исследуйте HTML

        Это веб-страница написана на HTML, языке Всемирной паутины. Позже вы узнаете больше о том, как он работает, но сначала исследуйте его с помощью Inspector Tool.

        # Выполните следующее

        -   Нажмите на подсказку "Как использовать Inspector Tool?".
        -   Следуя инструкциям, исследуйте веб-страницу и обсудите со своим напарником как она работает.
      CSD U2 Inspector Warm Up_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary><strong>Как использовать Inspector Tool?</strong>

        </summary>

        Inspector Tool это отличный способ узнать больше о незнакомом коде в Web Lab. Чтобы включить Inspector Tool, нажмите <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Вы поймете, что Inspector Tool включен, когда кнопка изменит свой цвет на белый, и на ней будет написано "Inspector: On". После включения Inspector Tool вы можете навести курсор мыши на любой элемент в области предварительного просмотра, и Web Lab выделит код, ответственный за эту часть отображаемой страницы.

        </details>
        </div>

        # Исследуйте HTML

        Это веб-страница написана на HTML, языке Всемирной паутины. Позже вы узнаете больше о том, как он работает, но сначала исследуйте его с помощью Inspector Tool.

        # Выполните следующее

        -   Нажмите на подсказку "Как использовать Inspector Tool?".
        -   Следуя инструкциям, исследуйте веб-страницу и обсудите со своим напарником как она работает.
      CSD U2 Inspector Warm Up_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary><strong>Как использовать Inspector Tool?</strong>

        </summary>

        Inspector Tool это отличный способ узнать больше о незнакомом коде в Web Lab. Чтобы включить Inspector Tool, нажмите <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Вы поймете, что Inspector Tool включен, когда кнопка изменит свой цвет на белый, и на ней будет написано "Inspector: On". После включения Inspector Tool вы можете навести курсор мыши на любой элемент в области предварительного просмотра, и Web Lab выделит код, ответственный за эту часть отображаемой страницы.

        </details>
        </div>

        # Исследуйте HTML

        Это веб-страница написана на HTML, языке Всемирной паутины. Позже вы узнаете больше о том, как он работает, но сначала исследуйте его с помощью Inspector Tool.

        # Выполните следующее

        -   Нажмите на подсказку "Как использовать Inspector Tool?".
        -   Следуя инструкциям, исследуйте веб-страницу и обсудите со своим напарником как она работает.
      CSD U6 iter predict bubbles: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSDU2 - Type Anything: |-
        <img src="https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg" style="width:400px; float:right">

        # Добро пожаловать в Web Lab!

        Вы находитесь на платформе, которая называется Web Lab. В Web Lab есть три основные части экрана.

        # Выполните следующее

        -   Попробуйте напечатать что-нибудь в рабочей области.
        -   Нажмите <img src="https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png" style="width:150px">, чтобы увидеть то, что получилось, в области предварительного просмотра!
      CSDU2 - Type Anything_2018: |-
        <img src="https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg" style="width:400px; float:right">

        # Добро пожаловать в Web Lab!

        Вы находитесь на платформе, которая называется Web Lab. В Web Lab есть три основные части экрана.

        # Выполните следующее

        -   Попробуйте напечатать что-нибудь в рабочей области.
        -   Нажмите <img src="https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png" style="width:150px">, чтобы увидеть то, что получилось, в области предварительного просмотра!
      CSDU2 - Type Anything_2019: |-
        <img src="https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg" style="width:400px; float:right">

        # Добро пожаловать в Web Lab!

        Вы находитесь на платформе, которая называется Web Lab. В Web Lab есть три основные части экрана.

        # Выполните следующее

        -   Попробуйте напечатать что-нибудь в рабочей области.
        -   Нажмите <img src="https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png" style="width:150px">, чтобы увидеть то, что получилось, в области предварительного просмотра!
      Course 4 Artist 13: Еще играешь?  Вот пустой холст, на котором ты можешь рисовать
        все, что захочешь!
      Course 4 Artist 2: Можешь зациклить этот код, чтобы нарисовать квадрат по серым
        линиям?
      Course 4 Artist 20: Еще играешь?  Вот чистый холст, на котором ты можешь создать
        все, что захочешь!
      Course 4 Artist 3: Попробуй догадаться, что произойдет при запуске кода (или
        нажми «Выполнить», чтобы проверить). Затем повтори код достаточное число раз,
        чтобы завершить рисунок.
      Course 4 Artist 4: Сколько градусов в круге?  Укажи в блоке «повторить» соответствующее
        число, чтобы создать разноцветный круг.
      Course 4 Artist 5: 'Нарисуй вторую половину этого рисунка так, чтобы она была
        симметрична данной. Треугольники имеют равные стороны длиной 50 пикселей.
        Подсказка: Возможно, нужно будет запустить код несколько раз, чтобы догадаться,
        какие блоки следует добавить.'
      Course 4 Artist 6: 'Дополни код, чтобы нарисовать эти треугольники. Подсказка:
        Здесь 3 треугольника, вместе образующих поворот на 360 градусов...сколько
        будет 360 разделить на 3?'
      Course 4 Artist 8: Нарисуй солнце, повторяя весь этот блок кода несколько раз.
      Course 4 Artist 8a: |-
        Помнишь эту фигуру?  Теперь мы собираемся дать тебе задание построить ее, не предоставляя никаких исходных блоков!
        Подсказка: Здесь 3 треугольника, вместе образующих поворот на 360 градусов...сколько будет 360 разделить на 3?
      Course 4 Artist 9: 'Зацикли эту структуру 10 раз и не забудь поворачивать после
        каждой нарисованной фигуры. Вот подсказка о том, на сколько градусов нужно
        будет поворачивать: Сколько будет 360 разделить на 10?'
      Course 4 Artist Binary 1: |-
        Эта функция берет двоичную последовательность из единиц и нулей и дает художнику команду следовать за ними слева направо и сверху вниз.  Художник будет заполнять квадраты, когда он видит 1, и пропускать, когда он видит 0.

        Выполни этот код, чтобы увидеть, как художник использует двоичную последовательность, чтобы нарисовать этот узор.
      Course 4 Artist For Loops 1: 'Нарисуй этот треугольник, ширина которого — 50
        пикселей. Подсказка: используй блок «повторить».'
      Course 4 Artist For Loops 11a: |-
        Давай соберем все вместе!  Используя уже освоенные тобой циклы со счетчиком и «счетчик», создай рисунок, где у каждой фигуры будет в два раза больше сторон, чем у предыдущей.  Убедись в том, что каждая сторона в 10 раз длиннее количества сторон многоугольника.

        Здесь приведена для тебя совсем небольшая часть кода.
      Course 4 Artist For Loops 14: Если ты будешь поворачивать немного больше или
        меньше, чем ты обычно поворачивал для рисования определенной фигуры, это создаст
        интересный эффект. Попробуй использовать часть кода с предыдущего уровня,
        но поворачивать на 89 градусов, чтобы создать витую квадратную спираль.
      Course 4 Artist For Loops 3: 'Чтобы выполнить эту головоломку, используй предыдущую
        в качестве образца.  Длина каждой из сторон наименьшего треугольника — 20
        пикселей, наибольшего — 200 пикселей, а длина сторон каждого следующего треугольника
        на 20 пикселей больше, чем предыдущего. '
      Course 4 Artist For Loops 4: 'Как бы ты применил то, чему уже научился, чтобы
        нарисовать эти квадраты? Их длина начинается с 15 пикселей, длина самого крупного
        — 300 пикселей, а длина каждого следующего квадрата на 15 пикселей больше,
        чем предыдущего. '
      Course 4 Artist For Loops 6a: Чтобы выполнить это задание, сделай три небольших
        изменения в коде предыдущего уровня!
      Course 4 Artist For Loops 8: |-
        Ты можешь нарисовать этот рисунок, внеся лишь одно небольшое изменение в код предыдущего рисунка. Догадываешься, что это за изменение?

        Подсказка:  Тебе нужно кое-что удалить!
      Course 4 Artist Vars 14: |-
        Свободная игра: Смотри! Теперь твой алгоритм вложен в еще один цикл. Экспериментируй, изменяя значения двух своих переменных, чтобы нарисовать классные узоры.

        Для достижения еще более интересного эффекта попробуй поиграть с цветом!  Используй случайные цвета внутри циклов, чтобы увидеть, как это изменит твой рисунок.
      Course 4 Artist Vars 4: Теперь я хочу нарисовать прямоугольник, высота которого
        в два раза больше ширины. Мы ввели переменную «ширина», которой необходимо
        присвоить значение 100. Можешь воспользоваться математическими блоками, чтобы
        дописать код?
      Course 4 Artist Vars 7: |-
        Используй полученные знания, чтобы нарисовать этот шестиугольник с помощью переменной «стороны».

        Как можно нарисовать треугольник, квадрат, пятиугольник или восьмиугольник, изменив только одно значение?
      Course 4 Bee 2: Используй блок «если/иначе», чтобы проверить каждый объект и
        понять, цветок это или сота. Если это цветок, собери нектар... в противном
        случае приготовь мед!
      Course 4 Bee Params 1: Воспользуйся функцией «собрать 3 порции нектара», которая
        позволяет поворачиваться и перемещаться, чтобы собрать нектар, а затем возвращает
        в исходное положение. Напиши последовательность, чтобы собрать весь нектар
        с помощью функции «собрать 3 порции нектара».
      Course 4 Bee Params 2: Измени функцию «собрать 3 порции нектара» таким образом,
        чтобы она повернула меня направо, а не налево к цветам.
      Course 4 Bee Params 5: Начнем с нуля - вы можете создать новую функцию под названием
        «Получить 5 нектаров» с параметром «Направление»?
      Course 4 Bee Params 6: Правда же, было бы неплохо, если бы мы могли собрать
        весь нектар, используя только одну функцию? Попробуй добавить в свою функцию
        новый параметр «порции нектара», чтобы управлять количеством собираемого нектара.
        Возможно, ты захочешь переименовать и саму функцию!
      Course 4 Bee Params 8: 'Задача: Теперь нужно еще и мед готовить! Перепиши свою
        функцию таким образом, чтобы учитывать и количество порций меда, и количество
        порций нектара.  Как бы ты использовал эти числа, чтобы решить, что делать?'
      Course 4 EC 1a: "\\*\\* Экстремальное задание: \\*\\* Никаких правил. Никаких
        подсказок. Просто задание!"
      Course 4 EC 1b: "\\*\\* Экстремальное задание: \\*\\* Никаких правил. Никаких
        подсказок. Просто задание!"
      Course 4 EC 2a: "\\*\\* Экстремальное задание: \\*\\* Никаких правил. Никаких
        подсказок. Просто задание!"
      Course 4 EC 2b: "\\*\\* Экстремальное задание: \\*\\* Никаких правил. Никаких
        подсказок. Просто задание!"
      Course 4 EC 2c: "\\*\\* Экстремальное задание: \\*\\* Никаких правил. Никаких
        подсказок. Просто задание!"
      Course 4 Maze 4: Попробуй применить блок «повторить», чтобы уменьшить количество
        блоков, используемых при решении этой головоломки...
      Course 4 Play Lab Params 1: Это функция «прыгнуть», которая заставляет твоего
        основного персонажа прыгать на 100 пикселей. Используй функцию «прыгнуть»,
        чтобы собрать все флажки.
      Course 4 Play Lab Params 3: 'Мы добавили в функцию «прыгнуть» другой параметр,
        который мы можем использовать для других персонажей. Каждый персонаж представлен
        числом, начиная с единицы. Измени функцию «прыгнуть» таким образом, чтобы
        она использовала параметр «персонаж» для вызова прыжка нужного персонажа. '
      Course 4 Play Lab Params 4: Это функция «патруль». Измени ее, чтобы переместить
        кота на 400 пикселей вверх, а затем на 400 пикселей вниз.
      Course 4 Play Lab Params 5: Добавь в функцию «патруль» параметр «персонаж»,
        чтобы можно было вызвать эту функцию для каждого персонажа на экране. Помни,
        что персонажи соответствуют номерам 1, 2 и 3.
      Course 4 Play Lab Params 7: |-
        Давай немного повеселимся! Посмотри на предоставленный код и попробуй догадаться, как узнать, что делает каждый блок.

        Используй клавиши стрелок, чтобы управлять собакой и собрать все флажки.
      Course 4 Play Lab Params 8: Используй блок «когда персонаж касается», чтобы
        отправить собаку обратно в левый верхний угол, ТОЛЬКО если собака коснется
        кого-либо из других персонажей.
      Course 4 Play Lab Vars 1: На этот раз тебе не придется писать код, просто нажми
        «Выполнить», чтобы сыграть в игру! В этой игре ты собака, которая пытается
        собрать больше флажков, чем кот. Используй стрелку «вниз», чтобы управлять
        собакой. Нажми «Завершить», когда закончишь игру.
      Course 4 Play Lab Vars 2: Гонка в предыдущей головоломке была не очень-то честной!
        Измени переменную «скорость\_собаки», чтобы убедиться, что ты можешь собрать
        больше флажков, чем Кот. Побеждает тот, кто первым соберет 10 флажков!
      Course 4 Play Lab Vars 4: Теперь мы используем переменную «высота», чтобы управлять
        высотой прыжка собаки. Обнови переменную «высота», чтобы собака могла прыгнуть
        достаточно высоко и достать до всех флажков.
      Course 4 Play Lab Vars 7: Хорошо, теперь давай убедимся, что игра не слишком
        легкая. Каждый раз, когда кот (персонаж 2) попадает желтыми сердечками в собаку
        (персонаж 1), ты теряешь балл. Начни с 10 очков, чтобы было не слишком сложно.
        Пусть для прохождения уровня счет уменьшится с 10 до 0.
      Course 4 Play Lab Vars 9: |-
        Время свободной игры! Вот все переменные, с которыми мы работали до настоящего момента, а также еще несколько на случай, если они тебе понадобятся.

        Посмотри. На нашей панели инструментов так много блоков, их необходимо упорядочить!  Вот, мы поместили каждый блок в соответствующую категорию.  Удели немного времени изучению всех доступных элементов. Когда закончишь просмотр, создай игру или рассказ, используя блоки повтора, переменные и события.

        Подсказка: прокрути вниз, чтобы увидеть все команды в рабочей области.
      Course 4 Play Labs For Loops 1: Сделаем так, чтобы собака произносила все числа
        от 1 до 100. Используй цикл со счетчиком и блок «счетчик», чтобы персонаж
        произносил значение переменной «счетчик» при каждом выполнении цикла.
      Course 4 Playlab For Loops 4b: "Теперь, эти два персонажа готовятся\nк гонке!
        \\\r\n\\\r\nКаждый из них будет двигаться `counter` шагов, но их\nсчетчики
        будут иметь различные значения из-за `for` циклов. \\\r\n\\\r\nМожете ли\nвы
        изменить приращение в одном из циклов, так чтобы была ничья?"
      Course 4 Playlab For Loops 5b: |-
        Настройте интервалы на этих `for`
        циклах таким образом, что два героя закончили в одном и том же месте.
      CourseD_Dance_Party_01: |-
        _Устроим танцевальную вечеринку!_

        Перетащите в рабочую область блок «создать новый» (make a new) и подключите его внутри блока «настройки» (setup), чтобы создать первого танцора.

        -   _Если вы хотите получить дополнительную информацию или больше заданий, нажмите на лампочку слева._
      CourseD_Dance_Party_02: |-
        Заставим этого лося станцевать!

        Перетащите в рабочую область блок <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">нового танцора</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml>. Подключите его под блоком <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Ваш танцор должен начать новое движение после четвертого такта.

        **Такты** используются для отсчета времени в музыке. В этом учебнике такт состоит из четырех битов.
      CourseD_Dance_Party_03: |-
        _Качаем!_

        Добавьте на рабочую область блок <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"тактов"</title></block></xml>. Сделайте так, чтобы танцор сделал новое движение после 6 тактов.
      CourseD_Dance_Party_04: |-
        _Этому танцу нужны эффекты!_

        Найдите в панели инструментов новый блок, который добавляет фоновый эффект позади танцора. Смотрите, как эффекты меняются вместе с музыкой!
      CourseD_Dance_Party_05: |-
        Используйте другой новый блок, чтобы изменить движения танцора через **каждые 2 такта**!

        -   Элементы «(Следующий)», «(Предыдущий)», или «(Случайный)» заставят танцора выполнять другое движение при каждом срабатывании кода.
      CourseD_Dance_Party_06: |-
        _Нам нужно больше танцоров!_

        Создайте резервного танцора «backup\_dancer1» для танца с кошкой.
      CourseD_Dance_Party_08: |-
        У каждого танцора есть набор свойств (_properties_), определяющих вид танцора.

        Вы можете сделать так, чтобы он находился на заднем фоне, уменьшив его размер (_size_). Сможете ли вы сделать обоих резервных танцоров одного размера?
      CourseD_Dance_Party_09: |-
        У танцоров есть свойство «оттенок» (tint), которое добавляет слой цвета. Попробуйте изменить оттенок одного из танцоров.

        -   Оттенки смешивают выбранный вами цвет с цветами танцора.
      CourseD_Dance_Party_10: |-
        Теперь мы знаем, как изменить свойства танцора. Мы также можем сделать так, чтобы те же свойства автоматически реагировали на музыку, используя этот блок:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        В этой программе используется громкость «баса» (звуков низкой частоты) для управления высотой одного танцора. Сможете ли вы сделать так, чтобы другой танцор тоже реагировал на музыку?
      CourseD_Dance_Party_11: |-
        Блок <xml><block type="Dancelab_whenKey"></block></xml> позволяет запускать код по нажатию клавиши вверх.

        Вы можете изменить движение танца, свойства танцора или сделать быстрое движение только один раз. Будьте изобретательны и ищите новые блоки!
      CourseD_Dance_Party_11_5: |-
        Посмотрите этот блок:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Теперь вы можете сразу создать множество танцоров!

        Попробуйте использовать некоторые из блоков «all ducks» для написания кода, который заставит всех уток танцевать вместе.
      CourseD_Dance_Party_11b: Время танцевать! Кот танцует дэб при нажатии на клавишу
        со стрелкой влево. Робот «падает» при нажатии клавиши со стрелкой вправо.
      CourseD_Dance_Party_12: Начнем веселье! Создайте свой собственный танец и поделитесь
        им с друзьями.
      CourseE_HOC 2018 Level_1: Для предстоящего путешествия вам потребуются припасы.
        Достаньте **лодку** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        из **сундука** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Где-то в этом океанском памятнике скрывается **спрут**
        ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png).
        Сможете ли вы его найти?
      CourseE_HOC 2018 Level_11: Постройте стену из **призмарина** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        вокруг черного бетона. Так вы активируете **проводник** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        и завершите испытание!
      CourseE_HOC 2018 Level_2: Добираться куда-то по воде на лодке куда быстрее,
        чем без нее! Дойдите до конца причала, чтобы сесть в лодку.
      CourseE_HOC 2018 Level_3: Возьмитесь за весла, переплывите море и поймайте **треску**
        ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Давайте накормим треской **дельфина** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Используйте блок повтора, чтобы быстрее пересечь океан.
      CourseE_HOC 2018 Level_5: Где-то здесь спрятана **раковина наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png).
        Исследуйте кораблекрушение, чтобы достичь **сундука** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      CourseE_HOC 2018 Level_6: Как здесь холодно! Поймайте **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        по пути к подводным руинам.
      CourseE_HOC 2018 Level_7a: Вы нашли подводные руины. Разыщите среди песчаника
        **сундук** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png),
        в котором лежит **призмарин** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      CourseE_HOC 2018 Level_8: Сначала айсберги, а теперь лава? Проберитесь через
        этот вулканический остров и найдите **тропическую рыбу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        у кораллового рифа.
      CourseE_HOC 2018 Level_9b: Вы достигли рифа. Теперь отыщите **сердце моря**
        ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)
        ! Используйте синие и красные кораллы, чтобы добраться до **сундука** с сокровищами
        ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      Dance_2019_01: |-
        _Устроим танцевальную вечеринку!_

        Перетащите блок <xml><block type="Dancelab_makeAnonymousDanceSprite" block-text="make a new dancer"><title name="COSTUME" config="&quot;CAT&quot;, &quot;PINEAPPLE&quot;">"CAT"</title><title name="LOCATION">{x: 200, y: 200}</title></block></xml> в рабочую область и подключите его внутри блока <xml><block type="Dancelab_whenSetup2" next_connection_disabled="true" block-text="setup"></block></xml>, чтобы создать первого танцора.

        -   _Нажмите на лампочку слева, если нуждаетесь в более подробной информации или дополнительных заданиях._
      Dance_2019_02: |-
        Блок <xml><block type="Dancelab_whenKey" block-text="when up pressed"></block></xml> позволяет запустить код, когда нажата стрелка «вверх». Используйте блок <xml><block type="Dancelab_doMoveEachLR" block-text="do once"><title name="GROUP">"CAT"</title><title name="MOVE">MOVES.XClapSide</title><title name="DIR">-1</title></block></xml>, чтобы заставить танцора хлопать в ладоши, когда нажато «вверх», или делать другое движение!

        _Не забудьте нажать на стрелку «вверх» или ![](<https://images.code.org/419e704e6841c0b696016bf5029b8cb9-image-1571864825506.06.45 PM.png>) после нажатия кнопки «Пуск»!_
      Dance_2019_03: 'Пришло время танцевального баттла! Запрограммируйте каждого
        танцора на то, чтобы он двигался при нажатии на различные клавиши. Выберите
        любимое движение для каждого танцора или установите его на «случайное» (Random),
        чтобы получить что-то совершенно непредсказуемое! '
      Dance_2019_04: |-
        Сделаем так, чтобы танцоры двигались в такт музыке!

        Перетащите блок <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml> в рабочую область. Подключите его под блоком <xml><block type="Dancelab_changeMoveEachLR"><title name="GROUP">"SHARK"</title><title name="MOVE">MOVES.ThisOrThat</title><title name="DIR">-1</title></block></xml>. Танцор должен начинать новое движение после четвертого такта.

        **Такты** используются в музыке для подсчета времени. В этом руководстве такт – это четыре удара.
      Dance_2019_05: |-
        _Качаем!_

        Добавьте на рабочую область блок <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"тактов"</title></block></xml>. Сделайте так, чтобы танцор сделал новое движение после 6 тактов.
      Dance_2019_06: "Используйте этот новый блок для создания группы участников подтанцовки
        меньшего размера с ведущим танцором посредине. \n  <xml><block type=\"Dancelab_makeNewDanceSpriteGroup\">\n
        \   <title name=\"N\">???</title>\n    <title name=\"COSTUME\" config=\"&quot;BEAR&quot;,
        &quot;CAT&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;,
        &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n
        \ </block></xml>\nТеперь вы сможете создавать сразу много танцоров!"
      Dance_2019_08: У танцоров есть свойство «оттенок», позволяющее добавить слой
        краски. Попробуйте изменить оттенок одного из танцоров (или всей группы)!
      Dance_2019_09: |-
        Это событие особого рода, вызываемое снова и снова.

        <xml><block type="Dancelab_everySeconds"><title name="N">2</title><title name="UNIT">"measures"</title></block></xml>

        Другие новые блоки в вашем наборе инструментов позволяют постепенно (или случайным образом!) менять со временем свойства танцоров.

        _Проявляйте креативность и получайте удовольствие!_
      Dance_2019_10: Начнем веселье! Создайте свой собственный танец и поделитесь
        им с друзьями.
      Dance_Party_01: |-
        _Устроим танцевальную вечеринку!_

        Перетащите в рабочую область блок «создать новый» (make a new) и подключите его внутри блока «настройки» (setup), чтобы создать первого танцора.

        -   _Если вы хотите получить дополнительную информацию или больше заданий, нажмите на лампочку слева._
      Dance_Party_02: |-
        Заставим этого лося станцевать!

        Перетащите в рабочую область блок <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">нового танцора</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml>. Подключите его под блоком <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Ваш танцор должен начать новое движение после четвертого такта.

        **Такты** используются для отсчета времени в музыке. В этом учебнике такт состоит из четырех битов.
      Dance_Party_03: |-
        _Качаем!_

        Добавьте на рабочую область блок <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"тактов"</title></block></xml>. Сделайте так, чтобы танцор сделал новое движение после 6 тактов.
      Dance_Party_04: |-
        _Этому танцу нужны эффекты!_

        Найдите в панели инструментов новый блок, который добавляет фоновый эффект позади танцора. Смотрите, как эффекты меняются вместе с музыкой!
      Dance_Party_05: |-
        Используйте другой новый блок, чтобы изменить движения танцора через **каждые 2 такта**!

        -   Элементы «(Следующий)», «(Предыдущий)», или «(Случайный)» заставят танцора выполнять другое движение при каждом срабатывании кода.
      Dance_Party_06: |-
        _Нам нужно больше танцоров!_

        Создайте резервного танцора «backup\_dancer1» для танца с кошкой.
      Dance_Party_08: |-
        У каждого танцора есть набор свойств (_properties_), определяющих вид танцора.

        Вы можете сделать так, чтобы он находился на заднем фоне, уменьшив его размер (_size_). Сможете ли вы сделать обоих резервных танцоров одного размера?
      Dance_Party_09: |-
        У танцоров есть свойство «оттенок» (tint), которое добавляет слой цвета. Попробуйте изменить оттенок одного из танцоров.

        -   Оттенки смешивают выбранный вами цвет с цветами танцора.
      Dance_Party_10: |-
        Теперь мы знаем, как изменить свойства танцора. Мы также можем сделать так, чтобы те же свойства автоматически реагировали на музыку, используя этот блок:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        В этой программе используется громкость «баса» (звуков низкой частоты) для управления высотой одного танцора. Сможете ли вы сделать так, чтобы другой танцор тоже реагировал на музыку?
      Dance_Party_11: |-
        Блок <xml><block type="Dancelab_whenKey"></block></xml> позволяет запускать код по нажатию клавиши вверх.

        Вы можете изменить движение танца, свойства танцора или сделать быстрое движение только один раз. Будьте изобретательны и ищите новые блоки!
      Dance_Party_11_5: |-
        Посмотрите этот блок:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Теперь вы можете сразу создать множество танцоров!

        Попробуйте использовать некоторые из блоков «all ducks» для написания кода, который заставит всех уток танцевать вместе.
      Dance_Party_11b: Время танцевать! Кот танцует дэб при нажатии на клавишу со
        стрелкой влево. Робот «падает» при нажатии клавиши со стрелкой вправо.
      Dance_Party_12: Начнем веселье! Создайте свой собственный танец и поделитесь
        им с друзьями.
      Dance_Party_extras_alternate_2019: "# Давайте определим расстановку!\n\nОзнакомьтесь
        с этим танцем, в котором блок [blockly block][0] используется для изменения
        расстановки танцоров во время танца. Попробуйте, например: \n\n-   создать
        вторую группу танцоров в другом макете;\n-   изменить макет при нажатой клавише;\n-
        \  изменить свойство, пока танцоры меняют расстановку."
      Dance_Party_extras_battle: |-
        # Танцевальные коллективы

        Это танец-состязание между двумя группами. Клавиши со стрелками управляют одним танцором, а клавиши «w, a, s, d» — другим. Попробуйте устроить танцевальное состязание с другом, а затем улучшите исполнение танца.

        -   Добавить больше клавиш для управления танцами.
        -   Сделать так, чтобы танцоры подтанцовки тоже реагировали при нажатии клавиш
        -   Сменять танцора каждые 4 такта, настроив их видимость
      Dance_Party_extras_battle_2019: |-
        # Танцевальные коллективы

        Это танец-состязание между двумя группами. Клавиши со стрелками управляют одним танцором, а клавиши «w, a, s, d» — другим. Попробуйте устроить танцевальное состязание с другом, а затем улучшите исполнение танца.

        -   Добавить больше клавиш для управления танцами.
        -   Сделать так, чтобы танцоры подтанцовки тоже реагировали при нажатии клавиш
        -   Сменять танцора каждые 4 такта, настроив их видимость
      Dance_Party_extras_every_beat: |-
        # Четвертные ноты

        В большинстве наших танцев используются полные такты, но каждый такт состоит из 4 четвертных нот. В этом танце используется функция «каждую четверть такта», чтобы танцор хлопал на каждой четвертной ноте.

        Этот танец также использует _условный_ блок, чтобы управлять сменой танца с помощью блока «каждую четверть такта». Попробуйте изменить числа в условном блоке, наблюдая, как при этом меняется танец.

        -   Экспериментируйте с длительностью звучания нот (например, 0,5 для половинной ноты или 0,125 для восьмой).
        -   Добавьте, что будет происходить после такта.
        -   Переключайтесь между «тактами» и «секундами», и попробуйте задавать время танца таким образом.
      Dance_Party_extras_every_beat_2019: |-
        # Ускорить, замедлить

        В этом последнем танце используется block [blockly block][0] для управления темпом движения каждого танцора. Попробуйте поэкспериментировать с различными темпами в различные моменты песни. Продолжайте работать с этим танцем или вернитесь к любому из предыдущих танцев, чтобы сделать его еще круче.
      Dance_Party_extras_layout: |-
        # Давайте установим порядок!

        Ознакомьтесь с этим танцем, в котором используется блок «макет», изменяющий расстановку подтанцовки в течение танца. Попробуйте один из этих методов, чтобы расширить его:

        -   Создайте другую танцевальную группу с другим макетом
        -   Изменяйте макет при нажатии клавиши
        -   Изменяйте свойство, когда танцоры встают в другом порядке
      Dance_Party_extras_on_beat: |-
        # Басовые, средние и высокие

        Этот танец использует событие «пик» для активации кода, заставляющего различные музыкальные фрагменты звучать громче. Попробуйте использовать различные песни, чтобы изменить танец.
      Dance_Party_extras_on_beat_2019: |-
        # Басовые, средние и высокие

        Этот танец использует событие «пик» для активации кода, заставляющего различные музыкальные фрагменты звучать громче. Попробуйте использовать различные песни, чтобы изменить танец.
      Dance_Party_extras_speed: |-
        # Ускорить, замедлить

        Этот заключительный танец использует блок «установить скорость», управляющий скоростью движения каждого танцора. Попробуйте установить разные скорости в разных фрагментах песни. Продолжайте работать над этим танцем или вернитесь к предыдущим танцам, чтобы сделать их еще лучше.
      Dance_Party_extras_speed_2019: |-
        # Ускорить, замедлить

        В этом последнем танце используется block [blockly block][0] для управления темпом движения каждого танцора. Попробуйте поэкспериментировать с различными темпами в различные моменты песни. Продолжайте работать с этим танцем или вернитесь к любому из предыдущих танцев, чтобы сделать его еще круче.
      Dance_Party_extras_visible: |-
        # Куда они исчезли?

        В этом танце две группы танцоров то появляются, то исчезают. Посмотрите, как это работает, и добавьте что-нибудь от себя.

        -   Добавить другую танцевальную группу
        -   Показывать и скрывать танцоров, используя клавиши со стрелками
        -   Скрыть всех танцоров и переключиться на яркий фон
      Dance_Party_extras_visible_2019: |-
        # Куда они исчезли?

        В этом танце две группы танцоров то появляются, то исчезают. Посмотрите, как это работает, и добавьте что-нибудь от себя.

        -   Добавить другую танцевальную группу
        -   Показывать и скрывать танцоров, используя клавиши со стрелками
        -   Скрыть всех танцоров и переключиться на яркий фон
      Function intro Ryan: "В вашей рабочей области размещена **функция** «построить
        мост».  В нее встроен весь необходимый для пересечения реки код! \\\r\n \\\r\nДважды
        прикрепите зеленый блок в рабочей области, чтобы проложить путь, и доведите
        игрока ({currentPlayerName}) до факела из красного камня [redstone_torch]."
      Function intro Ryan_2019: "В вашей рабочей области размещена **функция** «построить
        мост».  В нее встроен весь необходимый для пересечения реки код! \\\r\n \\\r\nДважды
        прикрепите зеленый блок в рабочей области, чтобы проложить путь, и доведите
        игрока ({currentPlayerName}) до факела из красного камня [redstone_torch]."
      HOC 2018 Level_1: Для предстоящего путешествия вам потребуются припасы. Достаньте
        **лодку** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        из **сундука** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Где-то в этом океанском памятнике скрывается **спрут** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png).
        Сможете ли вы его найти?
      HOC 2018 Level_11: Постройте стену из **призмарина** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        вокруг черного бетона. Так вы активируете **проводник** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        и завершите испытание!
      HOC 2018 Level_12: Поздравляем! Открытый водный мир ждет вас. Соорудите коралловый
        риф! Или вулкан! Или кораблекрушение! Выбор за вами.
      HOC 2018 Level_2: Добираться куда-то по воде на лодке куда быстрее, чем без
        нее! Дойдите до конца причала, чтобы сесть в лодку.
      HOC 2018 Level_3: Возьмитесь за весла, переплывите море и поймайте **треску**
        ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Давайте накормим треской **дельфина** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Используйте блок повтора, чтобы быстрее пересечь океан.
      HOC 2018 Level_5: Где-то здесь спрятана **раковина наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png).
        Исследуйте кораблекрушение, чтобы достичь **сундука** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      HOC 2018 Level_6: Как здесь холодно! Поймайте **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        по пути к подводным руинам.
      HOC 2018 Level_7a: Вы нашли подводные руины. Разыщите среди песчаника **сундук**
        ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png),
        в котором лежит **призмарин** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      HOC 2018 Level_8: Сначала айсберги, а теперь лава? Проберитесь через этот вулканический
        остров и найдите **тропическую рыбу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        у кораллового рифа.
      HOC 2018 Level_9b: Вы достигли рифа. Теперь отыщите **сердце моря** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)
        ! Используйте синие и красные кораллы, чтобы добраться до **сундука** с сокровищами
        ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      K-1 Bee Loops 2: Используй цикл «повторить», чтобы двигаться, затем собери нектар
        и приготовь мед!
      K-1 Bee Loops 3: Используй три цикла «повторить», чтобы собрать нектар и приготовить
        мед!
      K-1 Bee Loops 4: Используй циклы «повторить», чтобы собрать нектар, приготовить
        мед и двигаться!
      K-1 Bee Loops 5: Используй циклы «повторить», чтобы получить нектар и мед!
      K-1 Bee Loops 6: Используй цикл «повторить», чтобы получить нектар, мед и двигаться!
      K-1 Maze Loops 10: Приведи меня к свинке! Используя цикл "повторить", мы сможем
        сделать это гораздо легче.
      K-1 Maze Loops 11: |-
        Приведи меня к свинке!
        Этого намного проще добиться с циклом «повторить».
      K-1 Maze Loops 12: |-
        Приведи меня к свинке!
        Этого намного проще добиться с циклом «повторить».
      K-1 Maze Loops 2: Используй блок «повторить», чтобы довести меня до свиньи!
      K-1 Maze Loops 3: Приведи меня к свинке! Обязательно используй циклы «повторить».
      K-1 Maze Loops 5: Приведи меня к свинке! Обязательно используй циклы «повторить».
      K-1 Maze Loops 6: Приведи меня к свинке! Обязательно используй циклы «повторить».
      K-1 Maze Loops 7: Приведи меня к свинке! Обязательно используй циклы «повторить».
      K-1 Maze Loops 8: Используй циклы «повторить», чтобы довести меня до свиньи!
      K-1 Maze Loops Assessment 1: Посмотри, чему мы научились! Используй цикл «повторить»,
        чтобы привести меня к свинке!
      MC_HOC_2017_01_RETRY: "Дверь заперта, но Исполнитель спешит на помощь! \\\r\n
        \\\r\n Прикрепите блок «двигаться вперед» к блоку «при запуске» в рабочей
        области, чтобы Исполнитель добрался до нажимной пластины [PressurePlate_Up].
        Затем нажмите кнопку «Выполнить» и используйте клавиши со стрелками, чтобы
        выйти из дома и дойти до **сундука** [chest]."
      MC_HOC_2017_01_RETRY_2019: "Дверь заперта, но Исполнитель спешит на помощь!
        \\\r\n \\\r\n Прикрепите блок «двигаться вперед» к блоку «при запуске» в рабочей
        области, чтобы Исполнитель добрался до нажимной пластины [PressurePlate_Up].
        Затем нажмите кнопку «Выполнить» и используйте клавиши со стрелками, чтобы
        выйти из дома и дойти до **сундука** [chest]."
      MC_HOC_2017_02_Cole: "{Имя игрока} отправляется в путешествие! Чтобы ему помочь,
        заполучите **карту** [map_empty], находящуюся за запертой дверью справа. \\\r\n
        \\\r\nПрикрепите код в рабочем пространстве, чтобы переместить исполнителя
        на нажимную пластину [PressurePlate_Up], освобождая путь для игрока ({currentPlayerName}). "
      MC_HOC_2017_02_Cole_2019: "{Имя игрока} отправляется в путешествие! Чтобы ему
        помочь, заполучите **карту** [map_empty], находящуюся за запертой дверью справа.
        \\\r\n \\\r\nПрикрепите код в рабочем пространстве, чтобы переместить исполнителя
        на нажимную пластину [PressurePlate_Up], освобождая путь для игрока ({currentPlayerName}). "
      MC_HOC_2017_03_Cole: "{currentPlayerName} продолжает путешествие, и для подготовки
        к дальнейшим странствиям ему необходим **компас** [compass].  \\\r\n   \\\r\nСоставьте
        код для исполнителя, чтобы он смог открыть ворота. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} продолжает путешествие, и для
        подготовки к дальнейшим странствиям ему необходим **компас** [compass].  \\\r\n
        \  \\\r\nСоставьте код для исполнителя, чтобы он смог открыть ворота. "
      MC_HOC_2017_04POINT5_RYAN: "Вы добрались! \\\r\n\\\r\nТеперь безопасно проведите
        игрока ({currentPlayerName}) через лабиринт, чтобы получить **топор** [diamond_axe]\\\r"
      MC_HOC_2017_04POINT5_RYAN_2019: "Вы добрались! \\\r\n\\\r\nТеперь безопасно
        проведите игрока ({currentPlayerName}) через лабиринт, чтобы получить **топор**
        [diamond_axe]\\\r"
      MC_HOC_2017_04_Cole: "Исполнитель может преодолевать водные препятствия!  \\\r\n
        \\\r\nИспользуйте цикл «повторить», чтобы решить эту задачу и помочь игроку
        ({currentPlayerName}) добраться до **ведра** [bucket_empty] за дверью. "
      MC_HOC_2017_04_Cole_2019: "Исполнитель может преодолевать водные препятствия!
        \ \\\r\n \\\r\nИспользуйте цикл «повторить», чтобы решить эту задачу и помочь
        игроку ({currentPlayerName}) добраться до **ведра** [bucket_empty] за дверью. "
      MC_HOC_2017_05_Cole: "Ох, мост разрушен! \\\r\n\\\r\nЗапрограммируйте исполнителя
        на восстановление моста с помощью блока «разместить», чтобы игрок ({currentPlayerName})
        смог добраться до **лопаты** [diamond_shovel]."
      MC_HOC_2017_05_Cole_2019: "Ох, мост разрушен! \\\r\n\\\r\nЗапрограммируйте исполнителя
        на восстановление моста с помощью блока «разместить», чтобы игрок ({currentPlayerName})
        смог добраться до **лопаты** [diamond_shovel]."
      MC_HOC_2017_06_Cole: "Еще одна река, но гораздо шире! \\\r\n \\\r\nИсправьте
        этот код и помогите исполнителю построить мост, чтобы игрок ({currentPlayerName})
        смог добраться до **алмазной кирки** [diamond_pickaxe]. "
      MC_HOC_2017_06_Cole_2019: "Еще одна река, но гораздо шире! \\\r\n \\\r\nИсправьте
        этот код и помогите исполнителю построить мост, чтобы игрок ({currentPlayerName})
        смог добраться до **алмазной кирки** [diamond_pickaxe]. "
      MC_HOC_2017_07_Cole: "На пути лед!  \\\r\n \\\r\nФункция «расчистить путь» поможет
        вам разбить лед и добраться ({currentPlayerName}) до Майнкрафт [minecart_normal]! "
      MC_HOC_2017_07_Cole_2019: "На пути лед!  \\\r\n \\\r\nФункция «расчистить путь»
        поможет вам разбить лед и добраться ({currentPlayerName}) до Майнкрафт [minecart_normal]! "
      MC_HOC_2017_10_RETRY: "Сможете ли вы найти различие между двумя функциями в
        рабочей области? \\\r\n \\\r\nИспользуйте эти функции с другим кодом с панели
        элементов, чтобы расчистить путь для майнкрафт, а затем заберите **огниво**
        [flint_and_steel]. \\\r\n "
      MC_HOC_2017_10_RETRY_2019: "Сможете ли вы найти различие между двумя функциями
        в рабочей области? \\\r\n \\\r\nИспользуйте эти функции с другим кодом с панели
        элементов, чтобы расчистить путь для майнкрафт, а затем заберите **огниво**
        [flint_and_steel]. \\\r\n "
      MC_HOC_2017_Ali: 'Взгляните на функции ниже.  Как вы сможете с их помощью избежать
        гастов и помочь игроку ({currentPlayerName}) безопасно добраться до **зачарованной
        книги** [book_enchanted]?  '
      MC_HOC_2017_Ali_2019: 'Взгляните на функции ниже.  Как вы сможете с их помощью
        избежать гастов и помочь игроку ({currentPlayerName}) безопасно добраться
        до **зачарованной книги** [book_enchanted]?  '
      MC_HOC_2017_FP20x20: Теперь всё в ваших руках! Используйте код, чтобы исполнитель
        помог вам исследовать мир.
      MC_HOC_2017_FP20x20_2019: Теперь всё в ваших руках! Используйте код, чтобы исполнитель
        помог вам исследовать мир.
      NEW Course 4 Artist Functions 1: Можешь создать квадрат со сторонами 100 пикселей,
        используя цикл «повторить»?
      NEW Course 4 Artist Functions 12: Используй функцию «нарисовать ряд квадратов»
        из последней головоломки, чтобы нарисовать этот узор.
      NEW Course 4 Artist Functions 2: 'Можешь нарисовать 3 квадрата на расстоянии
        20 пикселей друг от друга? Подсказка: размер каждого квадрата — 100 пикселей'
      NEW Course 4 Artist Functions 3: Это новый тип блока. Такой блок называется
        «Функция». Нажми «Изменить», а затем впиши код для рисования квадрата со сторонами
        100 пикселей. Когда закончишь редактировать функцию, нажми «Закрыть», чтобы
        вернуться обратно к программе.
      NEW Course 4 Artist Functions 4: 'Используй функцию «нарисовать квадрат», чтобы
        нарисовать этот узор. Подсказка: Тебе необходимо будет использовать блок «повернуть
        направо на 120 градусов» после рисования каждого квадрата.'
      NEW Course 4 Artist Functions 8: Мы создали для тебя новую функцию «нарисовать
        треугольник».  Можешь изменить определение функции таким образом, чтобы она
        рисовала треугольник со сторонами 100 пикселей?
      NEW Course 4 Artist Functions 9: Можешь решить эту задачу, добавив только один
        блок?
      NEW Course 4 Artist Params 1: Давай зададим определение этой функции таким образом,
        чтобы она рисовала квадрат со сторонами 50 пикселей. Нажми «Изменить», чтобы
        начать.
      NEW Course 4 Artist Params 10: 'Создай блок функции «нарисовать шестиугольник»,
        содержащий параметр «длина». Подсказка: Длина сторон этого шестиугольника
        — 100 пикселей. '
      NEW Course 4 Artist Params 12: Можешь закончить этот рисунок? Длина сторон каждой
        из фигур составляет 100 пикселей.
      NEW Course 4 Artist Params 12a: Это изображение аналогично предыдущему. Можешь
        использовать в своей функции цикл со счетчиком, чтобы нарисовать этот рисунок?
      NEW Course 4 Artist Params 2: Создай с нуля функцию «нарисовать треугольник»
        со сторонами 50 пикселей
      NEW Course 4 Artist Params 4: Тебе удалось заметить в блоках этих функций какое-нибудь
        отличие? Нажми «Выполнить», чтобы увидеть, что произойдет.
      NEW Course 4 Artist Params 5: 'Заполни поле «???» параметра «длина» в блоке
        ввода. Подсказка: Длина сторон пятиугольника — 100 пикселей. '
      NEW Course 4 Artist Params 7: 'Можешь закончить этот рисунок? Подсказка: Длина
        сторон каждого треугольника на 25 пикселей больше последнего.  Длина сторон
        первого треугольника — 25 пикселей.'
      NEW Course 4 Artist Params 8: Код для этой функции рисования треугольника неисправен.
        Можешь изменить функцию, чтобы исправить его, а затем нарисовать треугольник
        с длиной сторон 25, 50 и 75?
      NEW Course 4 Artist Vars 12: А теперь восстанови алгоритм из предыдущей головоломки
        и нарисуй пятиугольник со сторонами длиной 150.
      NEW Course 4 Artist Vars 4: 'Давай попробуем еще раз. Можешь задать переменную
        «длина», чтобы нарисовать этот классный рисунок с шестиугольниками? Подсказка:
        Это величина, кратная 10.'
      NEW Course 4 Artist Vars 6: |-
        Нарисуй этот узор, поместив переменную «длина» в нужные места и установив правильное значение длины. (Подсказка: это величина, кратная 10).

        Видишь, мы установили значение длины только один раз, а программа везде использует правильное значение?
      NEW Course 4 Bee For Loops 10a: 'Готовы ответить на вызов?  Воспользуйся полученными
        знаниями о циклах и попытайся решить эту задачу. Помни: Возможно, тебе придется
        тестировать свое решение множество раз, прежде чем ты разберешься во всех
        этапах.'
      NEW Course 4 Bee For Loops 2: Добавь код, необходимый для того, чтобы пчела
        собрала весь нектар. Посмотри, сколько кода тебе нужно для этой головоломки!
        (В следующей головоломке мы изучим более простой способ.)
      NEW Course 4 Bee For Loops 3: 'Ага, цикл со счетчиком позволит сделать это намного
        проще! Здесь приведен весь код, который тебе нужен. Посмотри, как он объединен
        вместе, затем нажми «Выполнить» и увидишь, как это работает. '
      NEW Course 4 Bee For Loops 4: |-
        Replace the ??? in the for loop
        with the largest amount of nectar the bee has to collect.
      NEW Course 4 Bee For Loops 5: Ты также можешь использовать цикл со счетчиком
        для обратного отсчета. Попробуй собрать этот нектар, считая от 5 до 1 с шагом
        1.
      NEW Course 4 Bee For Loops 6: Последнее число в твоем цикле со счетчиком называется
        «приращение». При каждом выполнении цикла значение переменной «счетчик» меняется
        на величину приращения. Попробуй собрать эти цветы с величиной приращения,
        равной 2.
      NEW Course 4 Bee For Loops 7: |-
        Теперь давай объединим переменную «счетчик» с математическим блоком! Как ты можешь использовать переменную «счетчик» для передвижения, используя как можно меньше блоков? Что тебе нужно сделать, чтобы в этот раз собрать 3, 6, 9, 12, 15 порций нектара? Секрет кроется в переменной «счетчик»!

        Помни: Если твой цикл считает в прямом направлении, то величина приращения прибавляется к твоей переменной «счетчик» при каждой итерации цикла.
      NEW Course 4 Bee For Loops 8: |-
        Все правильно! Какой должна быть величина приращения, чтобы собрать 3, 6, 9, 12, 15 порций нектара?
        Подсказка: Сколько тебе нужно добавить к каждому из указанных чисел, чтобы получить следующее число?
      Overworld House Frame Chosen: Построй оставшуюся часть своего дома из любого
        материала по своему выбору. Тебе пригодится команда «повторить».
      Overworld House Frame Chosen_2019: Построй оставшуюся часть своего дома из любого
        материала по своему выбору. Тебе пригодится команда «повторить».
      Overworld Move to Sheep: Добавь еще одну команду «двигаться вперед», чтобы подойти
        к овце.
      Overworld Move to Sheep_2019: Добавь еще одну команду «двигаться вперед», чтобы
        подойти к овце.
      Overworld Place Wall: Любой дом начинается со стены. Постройте первую часть
        дома, вставив команды «разместить» и «двигаться вперед» в цикл повтора.
      Overworld Place Wall_2019: Любой дом начинается со стены. Постройте первую часть
        дома, вставив команды «разместить» и «двигаться вперед» в цикл повтора.
      Standalone_Artist_2: Обведи ромб с углами 120 и 60 градусов со сторонами длиной
        150 пикселей.
      Standalone_Artist_3: Нарисуешь шестигранник со сторонами по 100 пикселей, поворачивая
        на 60 градусов?
      Standalone_Artist_4: Теперь в твоем распоряжении новый блок - цикл! Он позволит
        тебе повторять набор команд. Что получится, если повторить команды ниже 6
        раз?
      Standalone_Artist_5: Сколько раз нужно повторить эту программу рисования ромба,
        чтобы получился цветок?
      Standalone_Artist_5.5: 'Посмотрите, как используя цикл, мы упростили код для
        ромба. Теперь выполните цикл 12 раз, чтобы нарисовать цветок. Подсказка: поверните
        на 30 градусов после того, как вы нарисуете один ромб, чтобы не рисовать тот
        же самый ромб повторно.'
      Standalone_Artist_6: 'Повторите этот код для шестиугольника, чтобы нарисовать
        узор. На сколько градусов надо поворачивать каждый цикл? Подсказка: раздели
        количество градусов в круге на число повторений цикла.'
      Standalone_Artist_7: 'Процедура— еще один инструмент программирования, который
        помогает избежать повторений. Эта функция рисует цветок, поэтому используйте
        её когда хотите нарисовать цветок. Используйте эту процедуру и новый блок
        "прыжок", чтобы нарисовать эти цветы. Подсказка: цветки находятся на расстоянии
        в 150 точек друг от друга'
      Standalone_Artist_8: Процедура, которую мы запрограммировали нарисовать шестиугольник,
        называется "Нарисовать фигуру". Запустите код, чтобы увидеть, что она делает,
        а затем поэкспериментируйте с ней. Можете изменить её так, чтобы она рисовала
        узоры из квадратов, треугольников, или восьмиугольников?
      Standalone_Artist_9: А теперь, нарисуйте то, что вам нравится! У вас есть пустая
        процедура, которую можно изменить для рисования любой фигуры!
      Underground Avoiding Lava: Под некоторыми из этих блоков таится лава – ее надо
        закрыть перед тем, как двигаться вперед. Здесь нам пригодится оператор «если».
        Вставьте команду «двигаться вперед» в нужное место, чтобы добыть эти блоки.
      Underground Avoiding Lava_2019: Под некоторыми из этих блоков таится лава –
        ее надо закрыть перед тем, как двигаться вперед. Здесь нам пригодится оператор
        «если». Вставьте команду «двигаться вперед» в нужное место, чтобы добыть эти
        блоки.
      Underground If Statements: Задача усложняется. Добудьте 3 блока красного камня,
        но не упадите в лаву. Используйте команду «если», чтобы накрыть булыжником
        обнаруженную лаву.
      Underground If Statements_2019: Задача усложняется. Добудьте 3 блока красного
        камня, но не упадите в лаву. Используйте команду «если», чтобы накрыть булыжником
        обнаруженную лаву.
      course1_artist_loops_challenge2: Давай поиграем! Нарисуй столько крестиков,
        сколько сможешь! Сможешь нарисовать 3 в одной строке?
      course1_artist_loops_challenge3: |-
        **Чирик!**
        \_"Поможешь мне построить 2 домика для птичек?"
      course1_maze_debugging_challenge1: Отладь этот уровень. Удали лишние блоки и
        добавь недостающие. Перемести птичку к свинке!
      course1_maze_debugging_challenge2: Отладь этот уровень. Блоки верные, но они
        в неправильном порядке!
      course1_maze_seq_challenge2: Ты можешь переместиться только 4 раза в каждом
        направлении. Сможешь найти путь до того, как закончатся блоки?
      course2_artist_prog_challenge1: Нарисуйте комнаты для каждого животного. Эту
        задачу можно решить по-разному, так что веселитесь!
      course2_artist_prog_challenge2: _Помоги мне нарисовать жёлтые линии на этой
        дороге!_
      course2_bee_conditionals_challenge1: Собери весь нектар и приготовь весь мёд.
        Ты можешь собирать нектар с цветов и готовить мёд в сотах. Проверяй каждую
        клетку, есть ли там цветок или сота.
      course2_collector_loops_challenge2: |-
        _"Давай охотиться за сокровищами - с циклами!"_

        Помоги коллекционеру, отыскав ошибки в этом коде. Собери все сокровища!
      course2_collector_prog_challenge1: Смотри внимательно! Сможешь собрать все _10_
        сокровищ?
      course2_collector_prog_challenge2: Всего нужно найти **20** сокровищ. Собери
        хотя бы половину, чтобы решить головоломку!
      course2_maze_programming_challenge1: _"Свинка прячется! Проведёшь меня к ней?"_
      course4_artist_fwp_challenge1: Попробуй запустить эту программу и внести изменения,
        чтобы увидеть, что происходит.  Можешь понять, как она работает? (Или удали
        её и замени чем-то совсем другим)
      courseA_collector_loops_challenge1: Поможешь устранить несколько ошибок? Я знаю,
        какой дорогой хочу пройти, но я не уверен, что нужно сделать так много шагов
      courseA_collector_loops_challenge1_2018: Поможешь устранить несколько ошибок?
        Я знаю, какой дорогой хочу пройти, но я не уверен, что нужно сделать так много
        шагов
      courseA_collector_loops_challenge1_2019: Поможешь устранить несколько ошибок?
        Я знаю, какой дорогой хочу пройти, но я не уверен, что нужно сделать так много
        шагов
      courseA_maze_seq_challenge1: Отладь этот уровень. Удали лишние блоки и добавь
        недостающие. Перемести птичку к свинке!
      courseA_maze_seq_challenge1_2018: Отладь этот уровень. Удали лишние блоки и
        добавь недостающие. Перемести птичку к свинке!
      courseA_maze_seq_challenge1_2019: Отладь этот уровень. Удали лишние блоки и
        добавь недостающие. Перемести птичку к свинке!
      courseB_maze_seq_challenge2_2019: Отладь этот уровень. Блоки верные, но они
        в неправильном порядке!
      courseD_artist_nestedLoops1a: Теперь зациклите треугольник 6 раз. После каждого
        треугольника, Вам необходимо повернуть его на 60 градусов, прежде чем рисовать
        следующий.
      courseD_artist_nestedLoops1a_2018: Теперь зациклите треугольник 6 раз. После
        каждого треугольника, Вам необходимо повернуть его на 60 градусов, прежде
        чем рисовать следующий.
      courseD_artist_nestedLoops1a_2019: Теперь зациклите треугольник 6 раз. После
        каждого треугольника, Вам необходимо повернуть его на 60 градусов, прежде
        чем рисовать следующий.
      courseD_bee_nestedLoops8: Собери весь нектар с каждого цветка и приготовь мед
        в каждой соте. Используй вложенный цикл.
      courseD_bee_nestedLoops8_2018: Собери весь нектар с каждого цветка и приготовь
        мед в каждой соте. Используй вложенный цикл.
      courseD_bee_nestedLoops8_2019: Собери весь нектар с каждого цветка и приготовь
        мед в каждой соте. Используй вложенный цикл.
      courseD_maze_nestedLoops4: |-
        Доведи меня до подсолнуха!
        (Подсказка: Чтобы пройти этот уровень, тебе нужно использовать один цикл «повторить» внутри другого.)
      courseD_maze_nestedLoops4_2018: |-
        Доведи меня до подсолнуха!
        (Подсказка: Чтобы пройти этот уровень, тебе нужно использовать один цикл «повторить» внутри другого.)
      courseD_maze_nestedLoops4_2019: |-
        Доведи меня до подсолнуха!
        (Подсказка: Чтобы пройти этот уровень, тебе нужно использовать один цикл «повторить» внутри другого.)
      courseD_maze_ramp2: Перетащи блоки "двигаться вперед" из панели инструментов
        и прикрепи все блоки к блоку 'при запуске', чтобы закончить программу.
      courseD_maze_ramp2_2018: Перетащи блоки "двигаться вперед" из панели инструментов
        и прикрепи все блоки к блоку 'при запуске', чтобы закончить программу.
      courseD_maze_ramp2_2019: Перетащи блоки "двигаться вперед" из панели инструментов
        и прикрепи все блоки к блоку 'при запуске', чтобы закончить программу.
      courseD_scrat_ramp2: Перетащи блоки "двигаться вперед" из панели инструментов
        и прикрепи все блоки к блоку 'при запуске', чтобы закончить программу.
      courseE_bee_functions2: "Функции - блоки кода, которые выполняют задание. \\\r\n\\\r\nИспользуйте
        функцию \"взять 2 нектара\", чтобы собрать весь нектар с каждого цветка."
      courseE_bee_functions3: Функции — это блоки кода, выполняющие определенную задачу.
        Используй функцию «собрать 5 порций нектара», чтобы собрать 5 порций нектара
        сразу. Также убедись, что ты используешь циклы с оптимальным количеством блоков.
      courseF_artist_for7: Чтобы выполнить это задание, сделай три небольших изменения
        в коде предыдущего уровня!
      courseF_artist_for7_2018: Чтобы выполнить это задание, сделай три небольших
        изменения в коде предыдущего уровня!
      courseF_artist_for7_2019: Чтобы выполнить это задание, сделай три небольших
        изменения в коде предыдущего уровня!
      courseF_bee_for_challenge2: Реши эту задачу, используя как можно меньше блоков.
      courseF_bee_for_challenge2_2018: Реши эту задачу, используя как можно меньше
        блоков.
      courseF_bee_for_challenge2_2019: Реши эту задачу, используя как можно меньше
        блоков.
      frozen circle: Круг имеет особую форму. Догадываешься, на какое число нужно
        заменить вопросительные знаки, чтобы нарисовать круг?
      frozen circle function: Используй новый блок «создать круг», чтобы создать 10
        пересекающихся кругов. Не забудь прыгнуть вперед между кругами.
      frozen circle function in circle: Теперь создадим 20 пересекающихся кругов,
        поворачивая на 18 градусов после каждого круга.
      frozen circle function with parameter: Это блок «Создать круг», который может
        создавать круги разных размеров. Можешь воспользоваться им, чтобы создать
        маленький круг размером 5 и круг побольше размером 10?
      frozen cross: Помести блок «повторить» между этими командами, чтобы создать
        знак «плюс». Ты заметил, что Эльза может двигаться вперед и назад?
      frozen cross rotate: Теперь повторим это 10 раз. На сколько градусов тебе нужно
        поворачивать между рисованием линий?
      frozen cross rotate dense: 'Повторим это 90 раз! Сколько будет 360 разделить
        на 90? Подсказка: Это очень маленькое число.'
      frozen diamond: Используй блок «повторить» между этими блоками, чтобы создать
        параллелограмм. Это как прямоугольник, только с разными углами. Углы параллелограмма
        равны 60 и 120 градусам, в отличие от прямоугольника, у которого все углы
        по 90 градусов.
      frozen diamond mini snowflake: Ты знаешь, что все снежинки отличаются друг от
        друга формой? Теперь создадим новую снежинку с помощью блока «повторить»,
        чтобы повторить параллелограмм 4 раза, поворачивая на 90 градусов после рисования
        каждого параллелограмма.
      frozen diamond snowflake: Теперь создадим новую снежинку с помощью блока «повторить»,
        чтобы повторить параллелограмм 10 раз, поворачивая на 36 градусов после рисования
        каждого параллелограмма.
      frozen freeplay: Теперь ты — настоящий художник! Создай снежную страну чудес.
      frozen perpendicular: Теперь давай посмотрим, можем ли мы создать две линии,
        расположенные под углом 90 градусов друг к другу. Тебе потребуется использовать
        блок «поворот» и блок «двигаться».
      frozen snowflake branch: Попробуй использовать блок «создать ветвь снежинки»,
        чтобы создать три ветви, которые вместе будут выглядеть как снежинка.
      frozen snowflake full: Теперь повторим 8 раз, чтобы сделать красивую снежинку!
      frozen snowflower: Замысловатые снежные узоры можно создать с помощью очень
        простых форм. Можешь создать узор, повторив 5 кругов размера 5 и 5 кругов
        размера 10?
      frozen square iterative: Похоже, мы на полпути к тому, чтобы нарисовать квадрат.
        Давай соединим вместе 4 линии, чтобы получился квадрат.
      frozen square loop: Привет, я Анна из Эренделла! Давай нарисуем квадрат с помощью
        блока «повторить», который использует минимальное количество блоков. Сколько
        раз (???) необходимо зациклить блоки внутри блока «повторить», чтобы нарисовать
        квадрат?
      frozen square loop 3x: Давай нарисуем три квадрата, поворачивая после каждого.
        Обязательно поворачивай на 120 градусов перед каждым новым квадратом.
      frozen square snowflake: Сможешь создать снежинку, используя блок «повторить»,
        чтобы 10 раз нарисовать квадрат, и блок «повернуть», чтобы поворачивать на
        36 градусов после рисования каждого квадрата?
      grade5_pixelation: "# Создай свою картинку любого размера\n\n![](https://images.code.org/01c15fed4f1a2c6c3af531edc35e736e-image-1439596066108.png)\n![](https://images.code.org/24efcaa184d1fc852f37c32911b3b87c-image-1439596070178.png)\n![](https://images.code.org/c9a5d0fd5ba445b7f6b5744e08b50e49-image-1439596071878.png)\n![](https://images.code.org/f14e1b8dd722b0ca5bc54fa96b34f2eb-image-1439596074236.png)\n![](https://images.code.org/fe938c0c16453b9d461b4023098079df-image-1439596075744.png)\n![](https://images.code.org/02c88a7da51289b2f2d1f64bd8c97b28-image-1439596077514.png)\n![](https://images.code.org/309e3157dcfd91956181007f483f8e58-image-1439596079084.png)\n\n**Указания:**\n\n-
        \  Закодируй изображение чего угодно используя `binary`.\n-   Двоичный язык
        представлен только знаками `0` и `1`.\n-   Ты можешь заранее нарисовать свою
        картинку на бумаге. \n-   Изобразить ты можешь, к примеру, своё имя, инициалы,
        иконку или логотип.\n-   Экспериментируй! Картинка может и не быть квадратной,
        она может быть вытянутой или узкой."
      iceage_throw_hearts: Сид хочет сказать своей бабушке Грэнни, что он ее любит.
        Используй команду «персонаж посылает», чтобы Сид (персонаж 1) послал сердечки
        Грэнни (персонаж 2)! Сделай так, чтобы Грэнни становилась счастливой, когда
        в нее попадают сердечки.
