---
tr-TR:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan, otomatik
          olarak bir çizgi çizeceğim.
        2-3_Artist_1_new_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece sağa
          dön` bloğunu kullanın.
      2-3 Artist 11:
        2-3_Artist_11_a: Açılar ile sorununuz mu var? 360 dereceyi 8 turda gitmeniz
          gerekiyor. 360/8 kaçtır?
      2-3 Artist 12:
        2-3_Artist_12_a: Bir daire içerisinde 360 derece vardır, bu nedenle sanatçı
          her seferinde döngü boyunca 1 derece dönerse, 360 kez geçmesi gerekir.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Sanatçı doğru yönde işaret etmiyor gibi görünüyor. Çizgi
          çizmeden önce yönünü düzeltir misin?
      2-3 Artist 3new:
        2-3_Artist_3new_a: 100-70 nedir?  Hikayeye bağlı olarak, o şapkanın olması
          gereken uzunluk!
        2-3_Artist_3new_b: Sanatçı doğru yönde işaret etmiyor gibi görünüyor. Çizgi
          çizmeden önce yönünü düzeltir misin?
      2-3 Artist 4:
        2-3_Artist_4_a: Evi bitirmek için tek yapmamız gereken bir kare çizmek!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Bu minik perileri yapmak için her seferinde karede olduğundan
          daha fazla dön.   '
        2-3_Artist_6_b: " Zaten sağa dönük durduğum için ileri hareket ettirerek başlamanız
          en kolayı, sonra üçgen oluşturmak için sol dönüşler yapın."
        2-3_Artist_6_c: Üçgenin her kenarı karenin bir kenarı ile aynı uzunlukta ...
          100 piksel!
      2-3 Artist 7:
        2-3_Artist_7_a: Bu bulmacayı çözmenin en kolay yolu önce ilk kareyi çizmek
          ve sonra ikinci kareye başlamadan önce sanatçıyı aşağı bakar durumda bırakmak.
      2-3 Artist 8:
        2-3_Artist_8_a: 200'ü ikiye bölersen, her bir kare kaç piksel genişliğinde
          olmalı?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Bu elmas aslında yana eğilmiş bir kare.
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Unutmayın, kontrol panelini 10 piksel daha _geniş_
          istiyorsunuz bu yüzden her değiştirdiğiniz sayıya 10 **eklemeyi** unutmayın.
        2-3_Artist_Debugging_10_b: "\\*\\* Burada deneme yanılma serbest! \\*\\* \nHer
          defasında bir sayıyı değiştirerek başla.\\\nHangi numaralar ne yapıyor?\\\nİpin
          ucu kaçarsa, \"baştan başla\"  tuşu ile kodunuzu sıfırlayabilirsiniz."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'İpucu: Her bıyık 75 piksel uzunluğundadır.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Dönülşlerden birisi 15 derece az.
        2-3_Artist_Debugging_3_b: Program  ne olduğunu görmek için hızlı çalışıyorsa,
          kaydırıcı ile yavaşlatabilirsin.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Sanatçı ilk satırı çizdikten sonra İlerlese yada
          geriye doğru atlasa ne olur?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: Şekil kaç kere tekrar ediyor? Şekil kaç kez tekrar
          _etmeli_? Programda bunu nerede değiştirebilirim?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Sanatçı çizmeye başlamadan önce 60 derece daha sola
          dönmesi lazım!
        2-3_Artist_Debugging_9_b: Tam dönüş için blok eklemene gerek yok. Sadece programdaki
          sola dön bloğuna 60 derece ekle!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Karelerin kenarları 100 piksel genişliğinde, buda
          demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        2-3_Artist_Functions_1_b: Gözlük yapmak için çakışan çizgiler olabilir.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Fonksiyonun içinde sadece kenar sayısını ve kenar
          uzunluğunu değil, bir de sanatçının her kenar arasında dönmesi gereken açıyı
          değiştirmelisin .
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Önce kodu çalıştır ve ne eklemen gerektiğini gör.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: "Programınız: \n\\-Fonksiyon kullanmalıdır.\n\n-
          \  ileri 100 + 75 piksel ilerlemelidir\n-   Fonksiyon kullanmalıdır"
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "\\*\\* 115 + 45 = 160 \\*\\*"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Sanatçının bu tasarımı tamamlaması için her kare
          arasında 120 derece dönmesi gerekiyor.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_b: Yeni dönüşün döngünün içindeki kodun **sonuna**
          gelmeli.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Baklava şekline başlamadan önce sanatçının doğru
          yöne girmesi için 60 derece sola doğru dönmesi gerek.
        2-3_Artist Loops_New_12_b: Sanatçı ileri 100 piksel gittikten sonra, keskin
          köşe yapmak için 120 derece sağa dönüş yapmalı.
        2-3_Artist Loops_New_12_c: Sanatçının geniş bir köşe yapmak için sağa 60 derece
          dönmesi yeterlidir.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          Her baklava şeklinin sonunda sanatçı zaten bir sonraki baklava şekli için doğru yöne bakıyor olacak.
          Bu sebeple, tekrar başlamadan önce 'sola dön' komutuna ihtiyacımız olmayacaktır.
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Sanatçı çizime başlamadan önce 45 derece sağa dönmeli.
        2-3_Artist_Loops_New_9_b: Bu V bir karenin sadece yarısı kadardır.  Bir karenin
          diğer yarısı çizmek için gereken kod ne olurdu?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Bütün gri blokları döngü içine koymayı unutma.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: Açılar için yardıma ihtiyacınız var mı?   \*\*
          360/12 = 30 \*\*
        2-3_Artist_Nested_Loops_3_b: Bütün gri blokları ve dönüş bloğunu döngü içine
          koymayı unutma.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: Açılar için yardıma ihtiyacınız var mı?   \*\*
          360/12 = 30 \*\*
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.
          Eğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: Her  döngüde ne kadar dönmem gerekir?    360/10
          kaç eder?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: Doğru açıyı bulmak için yardım lazım mı? \*\*
          360 / 12 = 30 \*\*
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Blokları koymakta zorlanıyor musun?  Kırmızı çiçeklerle
          mor çiçeklere aynı şekilde davranmaya çalış!
        2-3_Bee_Conditionals_14_b: Kırmızı çiçek mor olsaydı ekstra 'tekrarla' bloğuyla
          kodu ne kadar azaltabilirdin?
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Unutmayın: Mor çiçekler sadece ya 0 ya da 1 nektar
          bulunduruyor ve programı her çalıştırdığında bu değer değişebilir.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: İlerlemek için bir döngü, nektar için başka bir
          döngü ve bal yapmak için başka döngü kullanırsan daha az blok kullanmış
          olursun.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Unutmayın: mor çiçekler 0 ila 1 nektar bulundurur
          ve programınızı her çalıştırdığınızda değişir!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Hatalı bloğu bulup düzelttikten sonra, 'tekrarla' bloğu
          kullanabileceğin bir tekrar fark ettin mi?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Hatalı bloğu bulup düzelttikten sonra, 'tekrarla' bloğu
          kullanabileceğin bir tekrar fark ettin mi?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Biryerlerde arının yaptığı anlamsız bir hareket varmı?
          O bloğu değiştirdiğinde ne oluyor?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Fonksiyonla döngü kullanman gerekmiyor. Fonksiyonu
          kullanarak ilerle sonra da tekrar fonksiyonu kullanarak ilerle.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Fonksiyonla döngü kullanman gerekmiyor. Fonksiyonu
          kullanarak ilerle sonra da tekrar fonksiyonu kullanarak ilerle.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.
           Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! \[] (<https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif>)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde
          bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın.
          Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        2-3_Bee_Functions_8_b: Kodunu yeşil fonksiyon bloğu içinde oluştur. ! \[]
          (<https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif>)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Döngü içinde 4 blok olsun.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Döngü içinde 6 blok olsun.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Birbiri ardına İki farklı döngü gerekir.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Döngü içinde 5 blok olsun.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_4A_b: Programın son parçası döngü sonrasına yazacağınız kod
          olmalı.
        2-3_Bee_Loops_4A_c: Eğer döngüleri henüz bulmadıysanız, uzun yoldan kodlayıp
          neleri 'tekrarla' bloğu ile döngüye dönüştürebileceğinize bakın.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Eğer tekrarla bloğunun içine koyacak blokları henüz bulamadıysan,
          teker teker kodla ve tekrar eden yerlere dikkat et.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Eğer tekrarla bloğu içine hangi blokların gireceğini bulamadıysan
          teker teker eklemeyi dene.
        2-3_Bee_Loops_6_b: İşiniz bittiğinde, 'tekrarla' döngüsü içinde 6 blok olmalıdır.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_7_b: 'Eğer döngüyü başlangıçta göremiyorsan, uzun şekilde yap
          ve tekrarlara dikkat et.  '
      2-3 Maze 1:
        2-3_Maze_1_a: "'İlerle' bloğunu kullanmak için araç çubuğu alanından dışarı
          çalışma alanına sürükleyin ve 'çalıştığı zaman' bloğuna bağlayın."
      2-3 Maze 16:
        2-3_Maze_16_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin
          ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_16_b: Birden fazla bloğu tekrarla bloğu içine koymak için döngüyü
          çalışma alanına sürükle, sonra  blokları içine sürükle!
      2-3 Maze 6:
        2-3_Maze_6_a: Bu bulmacayı çözmek için iki yol vardır!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı
          deneyin ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_Loops_17_b: Başlangıç kodu silindi mi? "Baştan Başla" tuşu ile tekrar
          başa dönebilirsin!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı
          deneyin ve tekrar eden şeyleri döngüye koyun.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Eğer takıldıysan, önce kodu yaz sonra tekrarlı kısımları
          gör.
        2-3_Maze_Loops_19_b: İçiçe döngüler kullanmanız blok sayısının azalmasını
          sağlayacaktır.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Bu labirentte döngü kullanılabilecek yerleri bulmak için
          merdiven basamağı desenine bak.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Merdiven basamağı deseni bulmakta zorlanıyorsanız, önü
          kapalı yolları parmağınızla kapatın.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Döngü içinde sanatçının her çizgiyi çizdikten sonra geriye
          ve yukarı atladığını garanti et.
      4-5 Artist 3:
        4-5_Artist_3_a: "Çiçek tarlasının etrafı 600 piksel ise ve iki tarafı 200
          piksel uzunluğunda ise, kısa kenarlara ne kadar piksel olur hesaplayalım:
          \n\\*\\* 600-200 - 200 = 200 \\*\\* \nYani iki kısa kenar toplam 200 piksel
          eder.\n \\*\\* 200 / 2 kaç eder? \\*\\*"
        4-5_Artist_3_b: Tekrarla bloğunun nereye gireceğini bulamıyorsanız önce kodlayın
          sonra tekrarlayan kısımları görün.
      4-5 Artist 4:
        4-5_Artist_4_a: Bir daire içinde 360 derece vardır! Bir daire çizebilmek için
          bu kodu 360 kere (1 derece dönerek) tekrarlaman gerekir!
      4-5 Artist 5:
        4-5_Artist_5_a: Deneme yanılma iyi bir yöntemdir, ancak 90 derecelik açıyı
          üçe bölerek de sorun çözebilir. \*\* 90 / 3 **\_** \*\* =
      4-5 Artist 7:
        4-5_Artist_7_a: 'Hangi açı en küçüktür? Sanatçı hangi açıda duruyor? '
      4-5 Artist 8:
        4-5_Artist_8_a: "Uzun kenarlar 240 piksel uzunluğundadır.  Yani 2 Kısa taraf
          toplamı : \\*\\* 800-240 - 240 = 320 \\*\\*  \\*\\*\n 320/2  kaç eder\\*\\*? "
        4-5_Artist_8_b: |-
          Bu görüntü 2 şekilde yapılabilir!   -
          \-Bir kenarı çakışan İki dikdörtgen çiz: \*\* 120 \*\* uzunlukta ve \*\* 160 \*\* yükseklikte,\
          -Bir dikdörtgen çiz \*\* 240 \*\* uzunlukta ve \*\* 160 \*\* yükseklikte, sonra  ortaya bir satır ekleyin.
      4-5 Artist 9:
        4-5_Artist_9_a: 'Bir eşkenar üçgenin tüm kenarları ve açıları eşittir. '
        4-5_Artist_9_b: Aynı boyutta üç üçgen çizmek gerekir. Her birinin ardından
          yeni konuma atlamayı unutma.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Bu bulmacayı tamamlamak için sadece dış üçgeni
          çizmen yeterli.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Bir çemberde 360 derece varsa ve her döngü 3 derece
          dönerse, yarım daire için kaç kere döngüyü çalıştırman gerekir?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Kareler 20 piksel uzun olduğundan, sonraki döngüye
          başlamadan önce 20 piksel atlamak gerekecektir.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Araç kutusundan her seferinde tüm kod bloğunu çekmeyi
          unutmayın.
        4-5_Artist_Patterns_3_b: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan
          Başla"'yı tıklayın ve yeniden deneyin!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: |-
          Şimdi sanatçı her bir baklava şeklini bitirdiğinde olması gereken yönün terine bakıyor.
          Doğru yöne bakması için kaç derece dönmesi gerekiyor?
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          \*\* Dikkat: \*\* Bu bulmaca her çalıştırdığınızda değişir.\
          Bu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor.
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          \*\* Dikkat: \*\* Bu bulmaca her çalıştırdığınızda değişir.\
          Bu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor.
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Bu bulmacayı yalnızca çalışma alanındaki bloklarla  çözebilirsiniz.  Hangi
          sırayla olmalı?
        4-5 Bee Conditionals 6_b: Çiçeğin **0** dan çok nektar içerip içermediğini
          kontrol etmeyi en az **3** kez tekrarlaman gerekiyor.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Doğru çözümü bulamadıysan, programı çalıştır neyin
          hatalı olduğunu gör.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Bu bulmacayı uzun bir dikdörtgen olarak düşün.
          Arı ileri hareket etmeli, sonra birkaç defa sola dönmeli ve rotayı tamamlamalı.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          Eğer döngüyü nasıl kullanacağını bulamadıysan uzun yoldan dene sonra tekrarlı kısımları gör.
          Tekrarla içine neyi koyduğunda kod daha kısa olacaktır?
      4-5 Maze 4:
        4-5_Maze_4_a: Tekrarla bloğunu nereye koyacağına karar veremediysen önce kodla
          sonra tekrar eden kısımlara bak.
      4-5 Maze 5:
        4-5_Maze_5_a: Tekrarla bloğunu iki adımdan fazla ilerlemek gerektiğinde kullanın.
        4-5_Maze_5_b: Bulmacayı çözmek için birden fazla tekrarla bloğu kullanabilirsiniz.
      4-5 Maze 6:
        4-5_Maze_6_a: Rotayı parmağınızla takip etmeyi deneyin. Bulduğunuz yol en
          kısa yol mu ?
      4-5 Maze 7:
        4-5_Maze_7_a: "\\*\\* Kodunuzu olabildiğince kısaltmak mı istiyorsunuz? \\*\\*
          \nKodunu iyice incele. Tekrar eden bloklar görüyor musun?  Tekrar eden kodu
          döngü içinde yazmayı dene!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "\\*\\* 360 / 36 =? \\*\\*"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: "İç döngü sonrası bir dönüş yapmayı unutmayın. 360 derece
          üzerine 6 üçgeni döngüyle yazman gerekir. \n\\*\\* 360 / 6 =? \\*\\*"
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: Bu tasarım 360 derece için on kez dönmelidir. \*\* 360
          / 10 =? \*\*
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: Bu tasarım 360 derece için 6 kez dönmelidir. \*\* 360
          / 6 =? \*\*
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Her öğe kendi 'süresince' döngüsüne ihtiyaç duymaktadır.
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'Yarım altıgenin \*\* 30 kenar uzunluğu \*\* ve \*\*
          60 derece\*\*sağa dönüşü vardır.  '
        Course_4_Artist_11_b: '2/3 üçgeninin \*\* 80 kenar uzunluğunu \*\* ve \*\*
          120 derece \*\*sağa dönüşü vardır.  '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Bu resimde tekrarlanan her şekil önce \*\* yarım bir
          Altıgen **, daha sonra \*\* bir üçgenin iki kenarının**birleşiminden oluşur. '
        Course_4_Artist_12_b: 'Yarım altıgenin biraz daha büyük olması dışında, bu
          şekil neredeyse en son bulmaca ile aynıdır. '
        Course_4_Artist_12_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: Orada 3 üçgen 360 derece döndürme açısı içindedir. Kaç
          kez 3 derece döndüğümüzde 360 derece dönmüş oluruz?
      Course 4 Artist 8a:
        Course_4_Artist_8a: Ne kadar döneceğin konusunda yardım mı gerekiyor? 360
          derecelik dönüş içinde 3 üçgen vardır. 360 derece içinde kaç tane 3 vardır?
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Ne kadar dönmek gerek? \n360 bölü 10 nedir?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: Bu kod iki 'şununla say döngüsü' kullanır.
          İlki 1'den 8'e, diğeri ise 8'den 1'e geriye doğru sayıyor.
        Course_4_Artist_Binary_Free_Play_2b_b: Her 'şununla say döngüsü' üç kez tekrarlanır.  İlki
          en soldaki 1'leri, ikincisi ortadaki 0'ları ve üçüncüsü sağdaki 1'leri çizer.
        Course_4_Artist_Binary_Free_Play_2b_c: Her tekrarda 'sayac' değeri kadar 1
          ve 16-(2 x sayaç) sayısı kadar 0 olmalı.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: 'Dönüş açısı ile her şekil ile değişecek!    Matematik
          blokları kullanarak  "360 bölü şeklin kenar sayısı" ile döneceğin açıyı
          hesapla. '
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: 360/kenar sayısı değeri dönmen gereken açıyı
          verir.
        Course_4_Artist_For_Loops_11a_b: 'Her seferinde şeklin kenar sayısının 10
          katı kadar ilerlemen gerekiyor. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: Şununla say döngüsünün sizi ilerletmesini istiyorsan,
          'sayaç' değişkenini uzaklık olarak kullan.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: "\\*\\* İhtiyacınız olacak en küçük sayı nedir?\\\nEn
          büyük sayı nedir?\\\nHer defasında artış ne kadar? \\*\\* \n'Şununla say
          döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: En büyük şeklin 19 yüzü vardır. En
          küçük olanı sadece iki.
        Course_4_Artist_For_Loops_Challenge_b: Şununla say döngüsü ikişer ikişer sayıyor
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: Bu kodun temeli bir önceki bulmaca ile
          aynıdır. Sadece birkaç basit değişiklik gerekir.
        Course_4_Artist_For_Loops_inspire_b: 10 dan 3 e birer birer sayan 'şununla
          say döngüsü' kullanmayı dene.
        Course_4_Artist_For_Loops_inspire_c: "'Şununla say döngüsü' içinde iki adet
          'tekrarla döngüsü' vardır. Fakat ikincisi ters yöne döner."
        Course_4_Artist_For_Loops_inspire_d: |-
          \*\* Çözüm: \*\*
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true" movable="false">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_arithmetic" inline="true">
                          <title name="OP">EKSİ</title>
                          <value name="A">
                            <block type="variables_get">
                              <title name="VAR">sayaç</title>
                            </block>
                          </value>
                          <value name="B">
                            <block type="math_number">
                              <title name="NUM">1</title>
                            </block>
                          </value>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">ilerle</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">40</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">sağadön</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">BÖL</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">360</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">sayaç</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">EKSİ</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">sayaç</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">1</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move" inline="true">
                              <title name="DIR">ilerle</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">40</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">soladön</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">BÖL</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">360</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">sayaç</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Bir önceki bulmacadan başla ve tekrarla
          bloğu içine sağa 3 derece dön bloğu ekle.
        Course_4_Artist_Functions_Inspiration_b: "'Tekrarla döngüsünün' dışında fakat
          'for döngüsünün' içinde olacak şekilde 90 derece dönüş yap."
        Course_4_Artist_Functions_Inspiration_c: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Fonksiyonları kullanmayı öğrenmenin
          bir yanı da hangi fonksiyona ihtiyacın olup olmadığını anlamaktır.
        Course_4_Artist_Functions_challenge_b: "'For döngüsü' kullan ve sonra onun
          sayaç değişkenini iç içe geçmiş tekrarla döngüsünde kullan."
        Course_4_Artist_Functions_challenge_c: Her döngüde kare çizip ileri atlaman
          gerekiyor.
        Course_4_Artist_Functions_challenge_d: Tekrarla döngüsü dışında fakat 'for
          döngüsü' içinde 90 derece dönmen gerekiyor.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: Bir kareyi tamamladıktan sonra, dönmeden ve yeni
          bir tane çizmeden önce kenar uzunluğunun yarısı kadar ileri atlayın.
        Course_4_Artist_Inspire_b: Bir rüzgar gülü çizmek için her bir kare ve atlama
          4 kez tekrarlanıyor(aralarında sola dönüş var).
        Course_4_Artist_Inspire_c: Her bir rüzgar gülü sağa \*\* 360/kenar\*\* değerinde
          dönüş açısıyla 4 kez tekrarlanıyor.
        Course_4_Artist_Inspire_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: İç içe İki adet 'tekrarla döngüsü' kullanmalısın
          ve her biri kenar sayısı kadar tekrarlamalı.
        Course_4_Artist_Vars_13_b: İç 'tekrarla döngüsü' (sola dönerek) bir sekizgen
          çizer.        Daha sonra sadece dıştaki döngünün içinde ilerleyip sağa dönün.
        Course_4_Artist_Vars_13_c: Kenar sayısı değiştiğinde şeklin boyutunun aynı
          kalması için matematik bloğunu kullanarak piksel uzunluğunu kenar sayısına
          bölün.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Bir çokgen çizmek için \*\* 360 / kenar \*\* kadar
          dönün.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Başlangıç uzunluğunu kenar sayısına bölersen, kenar
          sayısı arttıkça kenar uzunluğu azalacaktır.
      Course 4 Bee Params 7:
        notice_pattern: 'Nektarların ne kadar değiştiği ile ilgili bir düzen görüyor
          musun? '
        count_with_for: Nektar birer birer artar dikkat edin. Ne tür bir blok kullanırsan
          nektarları sayarken aynı kodu bir çok kez tekrarlamasını sağlayabilirsin?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: Her seferinde nektar sayısını ve bal sayısını sorabilirsin.
          Eğer yok ise değer 0 olacaktır.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: '"Düzenle" tuşuna basıp ''atla'' fonksiyonunu
          güncelleyebilir ve yükseklik parametresi almasını sağlayabilirsin.'
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Köpeğin hızını 'Dog_speed' değerini kedinin hızından
          'cat_speed' değerinden büyük yaptığınızdan emin olun.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: "'For döngüsüne' her seferinde çift sayıları
          atlamak için ne eklemeniz gerekir?"
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: Bayraklar karakterlere 330 piksel uzaktadır.
        Course_4_Playlab_For_Loops_4b_b: Her karakterin 330 piksel uzaklığa aynı sayıda
          hareketle fakat farklı başlangıç ve bitiş sayılarıyla gitmesini nasıl sağlarsın?
        Course_4_Playlab_For_Loops_4b_c: Her bir karekter bayrağı aynı sayıda hareket
          ile geçtiği sürece, son hareketinde karakterin bayrağı ne kadar geçtiği
          önemli değil.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Karekterler merkeze 175 piksel uzaktadır.
        Course_4_Playlab_For_Loops_5b_b: Kahramanın bir sonraki adımı daha uzun olacak
          çünkü sayacı artmaya devam ediyor.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Her altıgenin 40 piksel kenar uzunluğu vardır.
        Course_4_SCF_1_b: Her altıgen arasında yatay düzlemde 120 piksel atla olmalı.
        Course_4_SCF_1_c: |-
          İkinci sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.
          Doğru dikey noktaya geldikten sonra sanatçıyı döndür ve geriye 320 piksel atla.
        Course_4_SCF_1_d: "Üçüncü sıra altıgen çizmeden önce, sağa 60 derece dön ve
          40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür
          ve 440 piksel geri atla. (Fonksiyonunuzdan 120 piksel daha ileride olacak
          şekilde). "
        Course_4_SCF_1_e: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: 16. aşamadaki fonksiyonları hatırla.
        Course_4_SCF_1a_c: Şununla say döngüsü kullanmayı düşün. Adımlar için değil
          fonksiyon parametreleri için.
        Course_4_SCF_1a_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: |-
          Dikkat bütün bal noktalarının şekilleri benzer.
          Fonksiyon için iyi bir yer!
        Course_4_SCF_1b_c: Arının ilerlemesi gereken mesafe için şununla say döngüsü
          kullan.
        Course_4_SCF_1b_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: Her sekizgenin 40 piksel kenar uzunluğu vardır.
        Course_4_SCF_2_b: Yatay düzlemde her sekizgen arasında 136 piksel atla olmalı.
        Course_4_SCF_2_c: "İkinci sıra sekizgeni çizmeden önce, sağa 45 derece dön
          ve 96 piksel ileri atla.\nDoğru dikey noktada bulunduğunuzda sanatçıyı geriye
          döndür ve geriye doğru 408 piksel atla. "
        Course_4_SCF_2_d: |-
          Çift sayılı şekil olan satırlarda daha az sekizgen olduğuna dikkat edin. Tek sayılı şekil olan satırlarda geriye daha fazla atlaman gerekmiyecek.
          Buda demek oluyor ki aynı fonksiyonu bütün satırlar için kullanabilirsin.
        Course_4_SCF_2_e: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        Course_4_SCF_3_b: 'Bu resim kenar uzunlukları ''sayaç'' (counter) uzunluğunda
          olan sekizgenlerlerdir. '
        Course_4_SCF_3_c: Her bir sekizgen 200 den aşağı ikişer ikişer geriye 2'ye
          kadar giden bir 'şununla say döngüsü' (for loop) içinden çağırılır.
        Course_4_SCF_3_d: 'Her döngünün sonunda 22.5 derece dönmeyi unutma. '
        Course_4_SCF_3_e: Sekizgen rengi ve kalem genişliği 'sayaç' değişkeni tarafından
          kontrol edilir.
        Course_4_SCF_3_f: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: " Hareket için bu seçeneğe bir göz atın:! \\[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        Course_4_SCFL_1_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı deneyin:
          biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal yapma için.'
        Course_4_SCFL_1_c: "Gittikçe yükselen merdiven basamaklarını çizmek için,
          'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla
          döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet
          'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        Course_4_SCFL_1_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: En az sayıda blok kullanmak için daha ileri gitmen gerkecek.
        Course_4_SCFL_1a_b: " Hareket için bu seçeneğe bir göz atın:! \\[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        Course_4_SCFL_1a_c: "'Şununla say döngüsü' (for loop) aynı deseni fakat değişen
          sayıda basamakla yapmanı sağlar. Sayının 7'den 5'e  birer birer düşmesi
          gerekecek."
        Course_4_SCFL_1a_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: "'Şununla say döngüsü' (for loop) kullanmayı dene."
        Course_4_SCFL_1b_b: " Hareket için bu seçeneğe bir göz atın:! \\[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        Course_4_SCFL_1b_c: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: " Hareket için bu seçeneğe bir göz atın:! \\[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        Course_4_SCFL_2_b: 'Dikkatli bakarsan ''Şununla say döngüsü'' (for loop) her
          döndüğünde üç noktada durup nesnelerle etkileşim kuruyorsun. '
        Course_4_SCFL_2_c: 'Şununla say döngüsünün(for loop) her tekrarında, her nesne
          bir şekilde ''sayaç'' değişkeni ile ilişki kurar. '
        Course_4_SCFL_2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: "'Kalem genişliği' 1'dir. İlk karenin 50 piksel kenar uzunluğu
          vardır ve her kare öncekinden 50 piksel daha geniş."
        Course_4_SCFL_3_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        Course_4_SCFL_3_c: Her bir kareyi yaptıktan sonra geri atla, dön, atla ve
          geriye dön!
        Course_4_SCFL_3_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: Renk değişimi 'kırmızı, yeşil, mavi renk ayarla' bloğu
          kullanarak olur.  Kırmızı 'sayaç ' olarak ayarlıdır. Yeşil '255 - sayaç',
          ve mavi 255'te sabittir.
        Course_4_SCFL_4_b: Her bir şekil kenar uzunluğu 'sayaç' değişkeni kadar olan
          bir karedir. 5 piksel ile başlayıp 200 piksele kadar 5 er piksel artar.
        Course_4_SCFL_4_c: Sanatçı her bir kare arasında 15 derece döner.
        Course_4_SCFL_4_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: Renk değişimi 'kırmızı, yeşil, mavi renk ayarla' bloğu
          kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır. Yeşil her zaman
          'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        Course_4_SCFL_6_b: Bu kod düşündüğünden daha basit. Şununla say döngüsü (for
          loop) içinde rengi ayarla, ilerle ve sonra dön.
        Course_4_SCFL_6_c: 'Şununla say döngüsü (for loop) 5 ten 250 ye 2 şer ilerler. '
        Course_4_SCFL_6_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: Renk değişim 'kırmızı, yeşil, mavi renk ayarla' bloğu kullanarak
          olur.  Kırmızı 'sayaç ' olarak ayarlanır. Yeşil '255 - sayaç', ve mavi 255'te
          sabitlenir.
        Course_4_SCFL_7_b: Bu çizim iki benzer şununla say döngüsüyle (for loop) yapılır.
          Birisi 5'ten 200'e 2 şer artar, diğeri 200'den 5'e 2 şer azalır.
        Course_4_SCFL_7_c: Her bir şununla say döngüsü (for loop) içinde 5 piksel
          ilerleyip '360/sayaç' kadar dön. Fırça genişliğini 'sayaç' kadar yapmayı
          unutma!
        Course_4_SCFL_7_d: İki şununla say döngüsü arasında 225 derece sola dönmen
          gerekecek.
        Course_4_SCFL_7_e: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Değişkenler kullanışlıdır, çünkü döngü içinde bu değişkene
          ekleme yapabilirsiniz. '
        Course_4_SCV_1_b: Bu bulmaca çokgen oluşturan bir döngü içermekte. Bir diğer
          döngü çokgenleri kenar katı kadar tekrarlamakta, diğer döngü 'kenarlara'
          5 ekledikten sonra tekrarlamakta.
        Course_4_SCV_1_c: "'Kenarlar' için ve 'uzunluk' için birer değişken kullanmak
          kodu daha düzgün yapar, böylece her sayı kümesi için yeni bir kopya oluşturmaya
          gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. "
        Course_4_SCV_1_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_b: 'Bu tasarım iç içe geçmiş döngüleri (üç derinliğinde) kullanır.
          Tüm döngüler ''kenar'' sayısı kez çalışmalı. '
        Course_4_SCV_2_c: Her bir ongeni bitirdikten sonra sanatçı sola döner fakat
          öbür döngülerde sağa döner.
        Course_4_SCV_2_d: 'Tüm 10 taç yapraklı çiçeklerinizin aynı yere çizilmesini
          engellemek için ''360/kenar sayısı'' derece dönmeden önce en dıştaki döngünüzün
          parçası olarak ''uzunluk/kenar sayısı'' kadar atlamayı unutma. '
        Course_4_SCV_2_e: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_a: 'Hareketli nesneler çarpıştığında ''puan'' değişkenine ekleme
          ve çıkarma yapmak için matematik bloklarını kullanın. '
        Course_4_SCV_3_b: Ok tuşuna her basıldığında hareketli nesnenin ne kadar hareket
          edeceğini parametreden ayarlayabilirsin.
        Course_4_SCV_3_c: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_a: 'Burada 3 değişken işine yarayacaktır. Biri nektar miktarı,
          biri bal miktarı ve diğeri her döngüde arı ne kadar ilerleyecek. '
        Course_4_SCV_4_b: 'Ana döngünün içinde 3 döngü kullanman faydalı olacaktır.
          Bir tanesi ileri hareket için, diğeri nektar toplamak için ve sonuncusu
          bal yapmak için. '
        Course_4_SCV_4_c: " Hareket için bu seçeneğe bir göz atın:! \\[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        Course_4_SCV_4_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_b: Döngünün her tekrarında çiçekte 2 nektar azalır ve arının
          bir bal daha yapması gerekir.
        Course_4_SCV_5_c: Dış döngünün başlangıcında arı bir sonraki çiçekteki nektar
          kadar hareket ediyor.
        Course_4_SCV_5_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_b: 'Sekiz değişken oluşturman işe yarayacaktır: kırmızı1, yeşil1,
          mavi1, kırmızı2, yeşil2, mavi2, uzunluk ve kenarlar.'
        Course_4_SCV_6_c: Şeklin 5 tarafı da parçalara bölünmüş  'uzunluk/kenarlar'
          kadar zig deniz mavisi (rgb 0,175,200 ) ve zag mor (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'Zig için ''360'' / ''kenarlar'' kadar sola dönün.  Zag
          için ''360 ''/''kenarlar'' kadar sağa dönün. '
        Course_4_SCV_6_e: 'Şekilden 360 derece dönüş yapma kısmı standart. Şekiller
          yarı yarıya kesişiyor. Bu sebeple 180/kenar kadar dönmelisin. (Bu durumda
          sides\*2 kadar tekrarlaman gerekecek). '
        Course_4_SCV_6_f: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Ekranda bir dansçının göründüğünden emin olun.

          _Bu seviye 4 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görevler**

          -   Çalmak için başka şarkı seçin.
          -   Geyik gibi görünen başka bir şey seçin!
          -   Dansçınızı yeniden adlandırın.
      CourseD_Dance_Party_02:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçının 4 ölçü sonra yeni bir harekete geçmesi gerekiyor.

          _Seviye 8 ölçüden sonra biter._
      CourseD_Dance_Party_03:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçınızın 6 ölçü sonra, 4 ölçü sonraki dansından farklı dans etmesi gerekiyor.

          _Seviye 12 ölçüden sonra biter._
      CourseD_Dance_Party_04:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Şarkının yedinci ölçüsünden sonra arka plan efektini değiştirmeniz gerekiyor.

          _Bu seviye 10 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görev**

          Şarkının farklı yerlerinde <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> etkinliklerinin altına yeni blok ekleyerek arka plan efektini değiştirin.
      CourseD_Dance_Party_06:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   En az iki dansçınız olması gerekli.

          _Bu seviye 6 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görev**

          -   Üçüncü bir dansçı ekleyin (daha fazla da ekleyebilirsiniz!)
          -   Tüm dansçılarınıza şarkının farklı yerlerinde farklı hareketler yaptırın.
      CourseD_Dance_Party_08:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   İki dansçının 100 dışında bir boyuta sahip olması gerekiyor.

          _Bu seviye 6 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görev**

          -   Diğer özellikleri değiştirerek denemeler yapın (genişlik, yükseklik, yön vb.)
      CourseD_Dance_Party_09:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   En az bir dansçının renk tonunu değiştirin.

          _Bu seviye 8 ölçüden sonra biter._
      CourseD_Dance_Party_10:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   İki veya daha fazla dansçının özellikleri değişmelidir.

          _Bu seviye 8 ölçüden sonra biter._
      CourseD_Dance_Party_11:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Yaratıcı olmanız yeterli!

          _Bu seviye 8 ölçüden sonra biter._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Yaratıcı olmanız yeterli!

          _Bu seviye 8 ölçüden sonra biter._
      CourseD_Dance_Party_11b:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Sol oka bastığınızda Robota bir dans hareketi yaptırmak için `sol oka basıldığında` bloğunu kullanın.

          _Bu seviye 8 ölçüden sonra biter._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: "**Deniz Işıklarını** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          görüyor musun? Okyanus Anıtını geçmek için bunları bir koşulla birlikte
          nasıl kullanabilirsin?"
      CourseE_HOC 2018 Level_7a:
        aquatic7: Sağa dönüşler için "Eğer" bloğunu kullanabilirsiniz.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Ne kadar güzel bir mercan resifi! Mavi mercan gidilecek
          **sağ** yoldur, kırmızı mercanın **solda** olmadığına emin ol!
      Dance_2019_01:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Ekranda bir dansçının göründüğünden emin olun.

          _Bu seviye 4 ölçüden sonra biter._
        challenges: "**İsteğe Bağlı Zorluks**  -   Choose a different song to play.
          -   Move your dancer to a new location. -   Make more than one dancer."
      Dance_2019_02:
        validation: "**Bu seviyeyi nasıl geçerim?** - Dansçı bir hareket yapmak zorundadır.
          - Bir ok tuşuna basmalısınız. _Bu seviye 4 ölçütten sonra sona erer._"
        challenges: '**İsteğe Bağlı Zorluk**  Birden fazla <xml><block type="Dancelab_whenKey"><title
          name="KEY"></title></block></xml> bloğu kullanın.'
      Dance_2019_03:
        validation: "**Bu seviyeyi nasıl geçerim?**  -   Her iki dansçı bir hareket
          yapmak zorundadır. -   Ok tuşlarına basmalısınız.  _Bu seviye 4 ölçütten
          sonra sona erer._"
        challenges: "**İsteğe Bağlı Zorluk**  -   Bir dansçının sol ve sağ ok tuşlarına
          tepki vermesini sağlayın."
      Dance_2019_04:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçının 4 ölçü sonra yeni bir harekete geçmesi gerekiyor.

          _Seviye 8 ölçüden sonra biter._
      Dance_2019_05:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçınızın 6 ölçü sonra, 4 ölçü sonraki dansından farklı dans etmesi gerekiyor.

          _Seviye 12 ölçüden sonra biter._
        challenges: "**İsteğe Bağlı Zorluk**  -   Dansçılar her hareket ettiğinde
          arka planı değiştirin."
      Dance_2019_06:
        validation: "**Bu seviyeyi nasıl geçerim?**  -   Şarkının ilk 4 ölçütünde
          bir baş dansçı ve bir grup yedek dansçı oluşturun.  _Bu seviye 7 ölçütten
          sonra sona erer._"
        challenges: "**İsteğe Bağlı Zorluk**  -   Birden fazla yedek dansçı grubu
          oluşturun."
      Dance_2019_07:
        validation: "**Bu seviyeyi nasıl geçerim?**  -   Müzik başladıktan sonra en
          az bir dansçının boyutunu değiştirin.  _Bu seviye 6 ölçütten sonra sona
          erer._"
        challenges: "**İsteğe Bağlı Zorluk**  -   Genişlik veya döndürme gibi diğer
          özellikleri değiştirerek deneme yapın."
      Dance_2019_08:
        validation: "**Bu seviyeyi nasıl geçerim?**  -   En az bir dansçının renk
          tonunu değiştirin. _Bu seviye 6 ölçütten sonra sona erer._"
        tint_hint: Dansçılarınızın seçtiğiniz tam renge değişmediğini fark ettiniz
          mi? Bunun nedeni **renk tonlarının** seçtiğiniz rengin dansçının renkleri
          ile karıştırmasıdır.
      Dance_2019_09:
        validation: '**Bu seviyeyi nasıl geçerim?**  -   Sadece "Son" düğmesine basın!'
        repeat_every_ideas: "**Bazı fikirlere mi ihtiyacınız var?**  -   Büyümesini
          sağlamak için dansçının boyutunu tekrar tekrar değiştirin. -   Bir dansçının
          dönüşünü sağlamak için art arda bir dansçının dönüşünü değiştirin. -   Bir
          dansçının ekran boyunca hareket etmesi için art arda bir dansçının yatay
          veya dikey konumunu değiştirin.  _Ters etki yaratmak için negatif sayıları
          da kullanabilirsiniz!_"
        next_previous: '**İsteğe Bağlı Zorluk**  -   Bu yeni etkinlik bloğunu, dansı
          `(Rastgele)`, `(Sonraki)` ya da `(Önceki)` olarak ayarlayarak bir dans hareketleri
          listesinde dolaşmak için de kullanabilirsiniz..     <xml><block type="Dancelab_changeMoveEachLR">     <title
          name="GROUP">???</title>     <title name="MOVE">"rand"</title>     <title
          name="DIR">-1</title>     </block></xml>'
      Dance_Party_01:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Ekranda bir dansçının göründüğünden emin olun.

          _Bu seviye 4 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görevler**

          -   Çalmak için başka şarkı seçin.
          -   Geyik gibi görünen başka bir şey seçin!
          -   Dansçınızı yeniden adlandırın.
      Dance_Party_02:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçının 4 ölçü sonra yeni bir harekete geçmesi gerekiyor.

          _Seviye 8 ölçüden sonra biter._
      Dance_Party_03:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçınızın 6 ölçü sonra, 4 ölçü sonraki dansından farklı dans etmesi gerekiyor.

          _Seviye 12 ölçüden sonra biter._
      Dance_Party_04:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Şarkının yedinci ölçüsünden sonra arka plan efektini değiştirmeniz gerekiyor.

          _Bu seviye 10 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görev**

          Şarkının farklı yerlerinde <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> etkinliklerinin altına yeni blok ekleyerek arka plan efektini değiştirin.
      Dance_Party_05:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Dansçınızın, seviye sona ermeden en az 4 farklı dans hareketi boyunca hareket etmesi gerekir.

          _Bu seviye 12 ölçütten sonra biter._
      Dance_Party_06:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   En az iki dansçınız olması gerekli.

          _Bu seviye 6 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görev**

          -   Üçüncü bir dansçı ekleyin (daha fazla da ekleyebilirsiniz!)
          -   Tüm dansçılarınıza şarkının farklı yerlerinde farklı hareketler yaptırın.
      Dance_Party_08:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   İki dansçının 100 dışında bir boyuta sahip olması gerekiyor.

          _Bu seviye 6 ölçüden sonra biter._
        challenges: |-
          **İsteğe Bağlı Görev**

          -   Diğer özellikleri değiştirerek denemeler yapın (genişlik, yükseklik, yön vb.)
      Dance_Party_09:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   En az bir dansçının renk tonunu değiştirin.

          _Bu seviye 8 ölçüden sonra biter._
      Dance_Party_10:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   İki veya daha fazla dansçının özellikleri değişmelidir.

          _Bu seviye 8 ölçüden sonra biter._
      Dance_Party_11:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Yaratıcı olmanız yeterli!

          _Bu seviye 8 ölçüden sonra biter._
      Dance_Party_11_5:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Yaratıcı olmanız yeterli!

          _Bu seviye 8 ölçüden sonra biter._
      Dance_Party_11b:
        validation: |-
          **Bu seviyeyi nasıl geçerim?**

          -   Sol oka bastığınızda Robota bir dans hareketi yaptırmak için `sol oka basıldığında` bloğunu kullanın.

          _Bu seviye 8 ölçüden sonra biter._
      Function intro Ryan:
        Function_intro_Ryan_b: Fonksiyonları düzgün çağırırsanız, bu yolda seyahat
          edeceksiniz...
        Function_intro_Ryan_a: Bir fonksiyonu programının içinde birçok kez çağırabilirsin!  Bu
          bulmacayı çözmek için iki kez çağırmayı dene.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: Fonksiyonları düzgün çağırırsanız, bu yolda seyahat
          edeceksiniz...
        Function_intro_Ryan_a: Bir fonksiyonu programının içinde birçok kez çağırabilirsin!  Bu
          bulmacayı çözmek için iki kez çağırmayı dene.
      HOC 2018 Level_10:
        voyage_aquatic_10a: "**Deniz Işıklarını** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          görüyor musun? Okyanus Anıtını geçmek için bunları bir koşulla birlikte
          nasıl kullanabilirsin?"
      HOC 2018 Level_7a:
        aquatic7: Sağa dönüşler için "Eğer" bloğunu kullanabilirsiniz.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Ne kadar güzel bir mercan resifi! Mavi mercan gidilecek
          **sağ** yoldur, kırmızı mercanın **solda** olmadığına emin ol!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Bir `ileri taşı` bloğunu araç kutusundan çalışma alanına
          sürükle ve `çalıştığında` bloğuna tuttur.
        MC_HOC_2017_01_RETRY_b: Agent için kodu çalıştırmak üzere "Çalıştır" düğmesine
          tıklamayı unutma.
        MC_HOC_2017_01_RETRY_c: Agent kodun tamamını çalıştırdıktan sonra ok tuşlarıyla
          oyuncuyu hareket ettirebilirsin!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Bir `ileri taşı` bloğunu araç kutusundan çalışma alanına
          sürükle ve `çalıştığında` bloğuna tuttur.
        MC_HOC_2017_01_RETRY_b: Agent için kodu çalıştırmak üzere "Çalıştır" düğmesine
          tıklamayı unutma.
        MC_HOC_2017_01_RETRY_c: Agent kodun tamamını çalıştırdıktan sonra ok tuşlarıyla
          oyuncuyu hareket ettirebilirsin!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Baskı plakasının üzerinde durmak için Agent'ı iki kare
          ilerlet.  Böylece oyuncun için kapı açılır.
        MC_HOC_2017_02_Cole_b: "\"Çalıştır\" düğmesine bas! \nKodu doğru olmasa bile
          çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca
          çalıştırıp sıfırlayabilirsin."
        MC_HOC_2017_02_Cole_c: Agent kapıyı açtıktan sonra ok tuşlarını kullanarak
          oyuncuyu haritaya götür!
        MC_HOC_2017_02_Cole_d: Ajanın haritada belirtilen yolu takip ettiğinden emin
          olun!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Baskı plakasının üzerinde durmak için Agent'ı iki kare
          ilerlet.  Böylece oyuncun için kapı açılır.
        MC_HOC_2017_02_Cole_b: "\"Çalıştır\" düğmesine bas! \nKodu doğru olmasa bile
          çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca
          çalıştırıp sıfırlayabilirsin."
        MC_HOC_2017_02_Cole_c: Agent kapıyı açtıktan sonra ok tuşlarını kullanarak
          oyuncuyu haritaya götür!
        MC_HOC_2017_02_Cole_d: Ajanın haritada belirtilen yolu takip ettiğinden emin
          olun!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Agent'ı baskı plakasına getirdikten sonra ok tuşlarını
          kullanarak oyuncuyu pusulaya yürütebilirsin!
        MC_HOC_2017_03_Cole_b: Kod biraz uzun mu geldi?  Bir `tekrarla` döngüsü kullanmayı
          dene ve kısaltmanın mümkün olup olmadığını gör!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Agent'ı baskı plakasına getirdikten sonra ok tuşlarını
          kullanarak oyuncuyu pusulaya yürütebilirsin!
        MC_HOC_2017_03_Cole_b: Kod biraz uzun mu geldi?  Bir `tekrarla` döngüsü kullanmayı
          dene ve kısaltmanın mümkün olup olmadığını gör!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Agent''ın yönünü değiştirmek için `sağa dön`
          bloğunu kullan '
        MC_HOC_2017_04POINT5_RYAN_a: Alex veya Steve'in baltaya ulaşması için Agent'ın
          yalnızca birinci baskı plakasına ulaşması gerekir.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Agent''ın yönünü değiştirmek için `sağa dön`
          bloğunu kullan '
        MC_HOC_2017_04POINT5_RYAN_a: Alex veya Steve'in baltaya ulaşması için Agent'ın
          yalnızca birinci baskı plakasına ulaşması gerekir.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent'ın 7 kez `ileri taşı` işlemini yapması gerekiyor.  Bunu
          gerçekleştirmek için `tekrarla` döngüsünü nasıl kullanabilirsin?
        MC_HOC_2017_04_Cole_c: "\"Çalıştır\" düğmesine bas! \nKodu doğru olmasa bile
          çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca
          çalıştırıp sıfırlayabilirsin."
        MC_HOC_2017_04_Cole_b: Agent baskı plakasına ulaştıktan sonra oyuncu için
          kapıyı açar.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent'ın 7 kez `ileri taşı` işlemini yapması gerekiyor.  Bunu
          gerçekleştirmek için `tekrarla` döngüsünü nasıl kullanabilirsin?
        MC_HOC_2017_04_Cole_c: "\"Çalıştır\" düğmesine bas! \nKodu doğru olmasa bile
          çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca
          çalıştırıp sıfırlayabilirsin."
        MC_HOC_2017_04_Cole_b: Agent baskı plakasına ulaştıktan sonra oyuncu için
          kapıyı açar.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Bir döngünün içine birden fazla kod yerleştirebileceğini
          biliyor muydun?  Bu bulmacayı tamamlamak için bir kalas yerleştirmeyi **ve**
          `tekrarla` döngüsü içinde ilerlemeyi dene.
        MC_HOC_2017_05_Cole_b: Ajanı bir köprü inşa ederek nehrin karşısına geçirin.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Bir döngünün içine birden fazla kod yerleştirebileceğini
          biliyor muydun?  Bu bulmacayı tamamlamak için bir kalas yerleştirmeyi **ve**
          `tekrarla` döngüsü içinde ilerlemeyi dene.
        MC_HOC_2017_05_Cole_b: Ajanı bir köprü inşa ederek nehrin karşısına geçirin.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Bu döngü kaç kez çalışır?  Kaç kez _çalışmalıdır_?
        MC_HOC_2017_06_Cole_b: 'Sudan karşıya geçerken yol boyunca Ajana köprü inşa
          ederken yardım edin! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Bu döngü kaç kez çalışır?  Kaç kez _çalışmalıdır_?
        MC_HOC_2017_06_Cole_b: 'Sudan karşıya geçerken yol boyunca Ajana köprü inşa
          ederken yardım edin! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Ajanın tüm yapması gereken maden vagonuna giden yolu
          temizlemek.
        MC_HOC_2017_07_Cole_a: Bu bulmacayı çözmek için `yolu temizle` işlevinin ne
          işe yaradığını öğren ve araç kutusundaki küçük yeşil `yolu temizle` bloğunu
          kullanarak, gereken sayıda fonksiyon çağrısı yap.
        MC_HOC_2017_07_Cole_b: Bu bulmacayı çözmene yardımcı olması için fonksiyon
          bloklarını araç kutusundaki diğer bloklarla karıştırmayı dene.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Ajanın tüm yapması gereken maden vagonuna giden yolu
          temizlemek.
        MC_HOC_2017_07_Cole_a: Bu bulmacayı çözmek için `yolu temizle` işlevinin ne
          işe yaradığını öğren ve araç kutusundaki küçük yeşil `yolu temizle` bloğunu
          kullanarak, gereken sayıda fonksiyon çağrısı yap.
        MC_HOC_2017_07_Cole_b: Bu bulmacayı çözmene yardımcı olması için fonksiyon
          bloklarını araç kutusundaki diğer bloklarla karıştırmayı dene.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Nereye gideceğinizi bilmiyor musunuz? Noktalı satırı
          bulup bulamayacağınıza bakın!
        MC_HOC_2017_10_Cole_a: Bu bulmacayı daha kolay çözmek için fonksiyonları kullan!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Nereye gideceğinizi bilmiyor musunuz? Noktalı satırı
          bulup bulamayacağınıza bakın!
        MC_HOC_2017_10_Cole_a: Bu bulmacayı daha kolay çözmek için fonksiyonları kullan!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "\"Çalıştır\" düğmesine bas! \nKodu doğru olmasa bile
          çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca
          çalıştırıp sıfırlayabilirsin."
        MC_HOC_2017_08_RY_b: Bu bulmacayı çözmenin BİRÇOK yolu var.  Birkaç tanesini
          dene!
        MC_HOC_2017_08_RY_c: Lava giden basit bir yol için noktalı çizgiyi takip etmeye
          çalışın.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "\"Çalıştır\" düğmesine bas! \nKodu doğru olmasa bile
          çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca
          çalıştırıp sıfırlayabilirsin."
        MC_HOC_2017_08_RY_b: Bu bulmacayı çözmenin BİRÇOK yolu var.  Birkaç tanesini
          dene!
        MC_HOC_2017_08_RY_c: Lava giden basit bir yol için noktalı çizgiyi takip etmeye
          çalışın.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Alex veya Steve'in harita kenarlarının dışında yürüyebilmesi
          için Agent'a bazı köprüler inşa ettirmeyi dene.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Alex veya Steve'in harita kenarlarının dışında yürüyebilmesi
          için Agent'a bazı köprüler inşa ettirmeyi dene.
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: "'karelerin bir kenarını çiz' fonksiyonunu
          güncelle ki iki kere çağırmak zorunda kalmayasın."
        NEW_Course_4_Artist_Functions_13_c: Kutular yerine düz çizgilerle yıldız yapmak
          istersen nasıl bir koda ihtiyacın olur?
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: Her bir kareden sonra 120 derece 'sağa
          dön' bloğu kullanmalısın .
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: Blok eklemeden kodu çalıştırın. Çiziminizdeki
          eksik ne?
        NEW_Course_4_Artist_Functions_9_b: Eğer neyin yanlış olduğunu bulamadıysan
          kaydırıcıyı sola oynatarak sanatçıyı yavaşlatmayı dene.
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: Fonksiyonun içinde değişkenler ile değişmesi
          gereken birden fazla sayı var.
      NEW Course 4 Artist Params 13:
        NEW_Course_4_Artist_Params_13_a: 'Çevre uzunluğunu kenar sayısına bölerek
          bütün şekillerin aynı boyutta olmasını sağlayabilirsin. '
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: Fonksiyonun farklı parametrelerle nasıl çalıştığını
          anlamak için birkaç kere programı normaldir.
      NEW Course 4 Artist Params inspire:
        brush_width: Fırça kalınlığını 1 yap ve başka bir hamle yapmadan rengini maviye
          ayarla.
        double_loop: "'Tekrarla' bloğu içine 'for döngüsü' koymayı dene."
        specifics: |-
          'For döngüsü' altı 'taç yaprağın' her biri için 3 ten 17 ye kadar sayıyor ve sonraki şekle geçmeden önce sadece tek sayıda kenarı olan çokgenler çiziyor.\
          'alfa\_ayarla' bloğu sayaç değeri arttıkça bölme işlemini kullanarak rengin soluklaşmasını sağlıyor.
        after: Her "taç yaprak" ile işiniz bittiğinde, 60 derece dönmeden önce 20
          piksel 'ilerle' komutu kullandığınızdan emin olun.
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: "Eğer döngü yukarı sayıyor ise her seferinde
          artış miktarı sayaç değişkenine eklenir. \nSonraki sayıyı elde etmek için
          her sayıya ne kadar eklemen gerekiyor?"
      Overworld Avoid Monsters:
        mc_8_a: Burada seçebileceğin birkaç yol var. Hangisi en kısa?
        mc_8_b: Kodunu sadeleştirmek için 'tekrarla' döngüsünü kullan.
        mc_8_c: Amacınız ekranın üst kısmındaki evin kapısından girmek.
      Overworld Avoid Monsters_2019:
        mc_8_a: Burada seçebileceğin birkaç yol var. Hangisi en kısa?
        mc_8_b: Kodunu sadeleştirmek için 'tekrarla' döngüsünü kullan.
        mc_8_c: Amacınız ekranın üst kısmındaki evin kapısından girmek.
      Overworld Chop Tree:
        mc_2_a: Ağacın önüne ulaşmak için iki kere "ilerle" komutunu kullanmalısınız.
        mc_2_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld Chop Tree_2019:
        mc_2_a: Ağacın önüne ulaşmak için iki kere "ilerle" komutunu kullanmalısınız.
        mc_2_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld Chop Trees:
        mc_4_a: Ağaçları istediğiniz yolu izleyerek kesebilirsiniz. Hangi yol en az
          sayıda blok içerir?
        mc_4_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld Chop Trees_2019:
        mc_4_a: Ağaçları istediğiniz yolu izleyerek kesebilirsiniz. Hangi yol en az
          sayıda blok içerir?
        mc_4_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld House Frame Chosen:
        mc_6_a: Ne yerleştirmek istediğinizi seçmek için 'yerleştir' bloğundaki oku
          tıklayın.
        mc_6_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
        mc_6_c: "'Tekrarla' döngüsü içine birden fazla blok ekleyebilirsin."
      Overworld House Frame Chosen_2019:
        mc_6_a: Ne yerleştirmek istediğinizi seçmek için 'yerleştir' bloğundaki oku
          tıklayın.
        mc_6_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
        mc_6_c: "'Tekrarla' döngüsü içine birden fazla blok ekleyebilirsin."
      Overworld Move to Sheep:
        mc_1_a: "'İlerle' bloğu araç kutusunun üstünde yer alır."
        mc_1_b: "'İlerle' bloklarının ikisinin de 'çalıştığı zaman' bloğuna takıldığından
          emin olun."
      Overworld Move to Sheep_2019:
        mc_1_a: "'İlerle' bloğu araç kutusunun üstünde yer alır."
        mc_1_b: "'İlerle' bloklarının ikisinin de 'çalıştığı zaman' bloğuna takıldığından
          emin olun."
      Overworld Place Wall:
        mc_5_a: Öncelikle 'yerleştir' bloğunu, ardından da 'ilerle' bloğunu kullan.
        mc_5_b: Kodu bir defadan fazla çalıştırmak için blokların 'tekrarla' döngüsü
          içinde olduğundan emin ol.
        mc_5_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
      Overworld Place Wall_2019:
        mc_5_a: Öncelikle 'yerleştir' bloğunu, ardından da 'ilerle' bloğunu kullan.
        mc_5_b: Kodu bir defadan fazla çalıştırmak için blokların 'tekrarla' döngüsü
          içinde olduğundan emin ol.
        mc_5_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
      Overworld Plant Crops:
        mc_7_a: Bulunduğunuz yere hasat için "hasat et" komutunu kullanın.
        mc_7_b: Nehrin iki tarafındaki koyu kahve alanları hasat etmen gerekiyor.
        mc_7_c: "'Tekrarla' döngüsü içine birden fazla blok ekleyebilirsin."
      Overworld Plant Crops_2019:
        mc_7_a: Bulunduğunuz yere hasat için "hasat et" komutunu kullanın.
        mc_7_b: Nehrin iki tarafındaki koyu kahve alanları hasat etmen gerekiyor.
        mc_7_c: "'Tekrarla' döngüsü içine birden fazla blok ekleyebilirsin."
      Overworld Powered Minecart:
        mc_13_a: "'Yerleştir Ray' bloğunu kullanarak üzerinde bulunduğun kareye tren
          rayı yerleştir."
        mc_13_b: Kodunuzu daha kısaltmak için 'tekrarla' döngülerini kullanın.
      Overworld Powered Minecart_2019:
        mc_13_a: "'Yerleştir Ray' bloğunu kullanarak üzerinde bulunduğun kareye tren
          rayı yerleştir."
        mc_13_b: Kodunuzu daha kısaltmak için 'tekrarla' döngülerini kullanın.
      Overworld Shear Sheep:
        mc_3_a: "'Kırkma' bloğunu kullanmak için kuzu önünde olmalı. Kuzunun önünde
          misin?"
        mc_3_b: Bakmakta olduğunuz yönü değiştirmen gerekirse, 'dönüş' bloğunu kullan.
        mc_3_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
      Overworld Shear Sheep_2019:
        mc_3_a: "'Kırkma' bloğunu kullanmak için kuzu önünde olmalı. Kuzunun önünde
          misin?"
        mc_3_b: Bakmakta olduğunuz yönü değiştirmen gerekirse, 'dönüş' bloğunu kullan.
        mc_3_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
      Underground Avoiding Lava:
        mc_11_a: Lav olup olmadığını kontrol edip ona göre hareket etmen için bütün
          kod sana hazır verildi. Tek yapman gereken ilerletmek için gerekli bloğu
          koyman.
        mc_11_b: '"ilerle" komutu "eğer" bloğunun içinde mi yoksa "eğer" bloğundan
          sonra mı kullanılmalı?'
      Underground Avoiding Lava_2019:
        mc_11_a: Lav olup olmadığını kontrol edip ona göre hareket etmen için bütün
          kod sana hazır verildi. Tek yapman gereken ilerletmek için gerekli bloğu
          koyman.
        mc_11_b: '"ilerle" komutu "eğer" bloğunun içinde mi yoksa "eğer" bloğundan
          sonra mı kullanılmalı?'
      Underground If Statements:
        mc_12_a: Kırmızı lekeler Kırmızıtaş madeni.
        mc_12_b: Kodunuzu kısaltmak için bir 'tekrarla' döngüsü kullanabilir misin?
        mc_12_c: 'Lav için aralıkları kontrol etmek için ''eğer'' ifadesini kullanın,
          sonra kaldırım taşları yerleştirin. '
      Underground If Statements_2019:
        mc_12_a: Kırmızı lekeler Kırmızıtaş madeni.
        mc_12_b: Kodunuzu kısaltmak için bir 'tekrarla' döngüsü kullanabilir misin?
        mc_12_c: 'Lav için aralıkları kontrol etmek için ''eğer'' ifadesini kullanın,
          sonra kaldırım taşları yerleştirin. '
      Underground Iron:
        mc_10_a: Meş'alenin arkasındaki lekeli bloklar demir madeni! Oraya nasıl gideceksin?
        mc_10_b: Lavın kenarında durduğunda, 'ileriye kırıktaş yerleştir' komutunu
          kullanarak güvenliğini sağlayabilirsin. Sonra da üzerinden yürü!
        mc_10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
      Underground Iron_2019:
        mc_10_a: Meş'alenin arkasındaki lekeli bloklar demir madeni! Oraya nasıl gideceksin?
        mc_10_b: Lavın kenarında durduğunda, 'ileriye kırıktaş yerleştir' komutunu
          kullanarak güvenliğini sağlayabilirsin. Sonra da üzerinden yürü!
        mc_10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu
          görmek için kodu çalıştır.
      Underground Mining Coal:
        mc_9_a: Doğru yöne mi bakıyorsun? 'Bloğu yok et' bloğu önündeki bloğu yok
          eder.
        mc_9_b: Duvardaki kara lekeler kömür madeni! 'Bloğu yok et' bloğu ile bu madenleri
          toplayın.
        mc_9_c: Durduğunuz alana meşale yerleştirmek için 'meşale yerleştir'i kullanın.
      Underground Mining Coal_2019:
        mc_9_a: Doğru yöne mi bakıyorsun? 'Bloğu yok et' bloğu önündeki bloğu yok
          eder.
        mc_9_b: Duvardaki kara lekeler kömür madeni! 'Bloğu yok et' bloğu ile bu madenleri
          toplayın.
        mc_9_c: Durduğunuz alana meşale yerleştirmek için 'meşale yerleştir'i kullanın.
      behaviors 3:
        behavior hint: |-
          Davranışları düzenlemeyi deneyin!

          -   Hangi değer hareket hızını kontrol ediyor?
      behaviors 3a:
        behavior hint: |-
          Davranışları düzenlemeyi deneyin!

          -   Hangi değer hareket hızını kontrol ediyor?
      behaviors 6:
        behavior hint: |-
          Davranışları düzenlemeyi deneyin!

          -   Hangi değer hareket hızını kontrol ediyor?
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          Duvarları ve çatıyı yapmak için döngü bloğunu kullanabilirsin. Farklı kodlar kullanmayı dene [0]!

          Kendi kodunu yaz ya da [1] ipucuna tıkla!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: Atla bloğu ile başka alanlara gidebilirsiniz.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir kuş evini bitirdikten sonra diğerine
          'Atla'!
        courseA_artist_loops_challenge2_c: Bu bulmaca için döngü içinde ÇOK FAZLA
          blok kullanman gerekecek.
      course1_artist_loops_challenge4:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle''
          veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki
          sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız,
          döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş
          vardır, ama sadece bir kez ilerleyip, 5 kez toplaman gerekecek. Neden biliyor
          musun?
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_c: |-
          Her yolun arasında Doğuya iki defa ilerleyin.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Bunu sadece 14 blok ile yapabilirsiniz.  Bir çözüm yolu görmek için bir ipucuna daha basın.
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_a: Eğer işler ters giderse, yeniden başlamaktan
          korkma! Sakın pes etme!
        courseB_collector_loops_challenge2_b: "Bu tekrar eden kodu kullanırsan, Laurel
          mağaranın içindeki duvara çarpmayacak! \n\n<xml><block type=\"maze_moveEast\">\n<next>\n<block
          type=\"collector_collect\">\n<next>\n<block type=\"maze_moveWest\">\n<next>\n<block
          type=\"maze_moveWest\">\n<next>\n<block type=\"maze_moveSouth\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block></xml>"
        courseB_collector_loops_challenge2_c: Son hazine yığınını toplamak için bir
          döngü kullanmayı unutma!
        courseB_collector_loops_challenge2_d: |-
          Bu çözümü deneyin:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Eğer çok ileri giderseniz, bazı yollar TNT
          (patlayıcı) ya çıkar.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya
          kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları doğru sıralayıp ortadaki yoldan git.
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız
          yerdeki boşluğu saymayın!
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: Batıya ilerlemeyi deneyerek başlayın.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin
          gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo'
          yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i
          görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff'
          i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: Robotun bip sesi çıkarmasını sağlayabilirsiniz.
          <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 6</title>
          <next><block type="studio_playSound"> <title name="SOUND"> winpoint</title></block></next></block></xml>
        courseA_playlab_events_challenge2_c: Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block
          type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block
          type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE">
          2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title>
          <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion">
          <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Dört tane sekizgen oluşturmak için
          iç içe döngü yaparak başla. Sekizgen yapmak için 45 derece dön. Zıpla ve
          her birinden sonra 90 derce dön.
        courseD_artist_nestedLoops_challenge1_b: İç içe geçmiş döngü içerisinde kod
          kullanarak bir üçgen çizin. Üçgeniniz için 120 derecelik dönüşler kullanın.
        courseD_artist_nestedLoops_challenge1_c: |-
          Bir içi içe döngü kullanın:

          -   8 defa tekrarla
          -   bir sekizgen çiz
          -   bir üçgen çiz
          -   50 pixel ileri atla
          -   90 derece sağa dön
      course2_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının
          (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının
          4 kez 90 derece dönmesi gerekiyor.
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: '200 piksel genişliğinde ve 100 piksel yüksekliğinde
          dikdörtgendir. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: |-
          Komutları tekrar tekrar döngülemek için `tekrar et` bloğuna yerleştirebilirsiniz. Deneyin!
          <xml>

                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="draw_move_by_constant_dropdown">
                          <title name="DIR">ilerle</title>
                          <title name="VALUE" config="25,50,100,150,200,300">25</title>
                          <next>
                            <block type="jump_by_constant_dropdown">
                              <title name="DIR">ileri atla</title>
                              <title name="VALUE" config="25,50,100,150,200,300">25</title>
                            </block>
                          </next>
                        </block>
                        </statement></block></xml>
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Herhangi bir ağaca çarpmadan her bir çiçeğe ve peteğe ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.

          \*\* Bunu çözerken sola dönmenize hiç  gerek yok. \*\*
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek
          olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse
          (if/else) koşulunu tekrarlayabilirsin.
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Her yığında sadece bir hazine parçası olsaydı,
          orjinal kod harika çalışırdı!
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece \`topla 'blokları
          bitmez!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan denemeyi düşünme bile!
        courseC_harvester_loops_challenge1_b: "`ilerle` ve `mısır al`ı ihtiyacın olduğu
          kadar tekrar edip, her köşede `sağa dön` yapabilirsin."
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor.
          Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok
          farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul
          al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: "Sadece 20 blok ile bulmacayı bitirmek
          için bu zik-zak deseni iki kez tekrarlanabilir. \n\n![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52
          PM copy.png>)"
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Bu yolu üç farklı parça olarak düşün. Her
          birinin tekrar edebileceğin bir deseni vardır.
        courseC_maze_loops_challenge1_b: Scrat'i  bir sonraki adıma hazır olması için,
          her tekrarla bloğunun arasında  'sağa dön' veya 'sola dön' komutuna ihtiyacın
          var.
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Eğer beni geri göndermek istersen,
          doğru yöne döndüğüne daha fazla dikkat et!_
        courseC_maze_programming_challenge2_b: En kısa çözüm yalnızca 5 bloktan oluşur,
          fakat 'tekrarla' bloğu kullanılır!
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız,
          son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara
          da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
      course3_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>

          <block type="jump_to_xy">
          <title name="XPOS">350</title>
          <title name="YPOS">200</title>
          </block>
          </xml>

          Bu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan _önce_ nerede olduğunun bir önemi yoktur!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: Bu programın neden ilk yarısı çalıştı?
          Arıların neden geriye gitmeleri gerektiği hakkında düşünün. Çiçeklerin üzerinden
          her geçtiklerinde arılar ne kadar nektar toplarlar?
        courseD_bee_debugging_challenge1_b: Dönüş yolunda arının aynı deseni takip
          etmesini sağlayın. Arının peteğin üzerinde hareket ettiği her defasında
          ne kadar bal yapmaya ihtiyacı var?
        courseD_bee_debugging_challenge1_c: |-
          Arı alt sıraya kadar yaptıktan sonra, aşağıdaki komutları tekrarlamasını sağla:

          -   2 defa tekrarla:
          -   İlerle
          -   3 bal yap
          -   Geriye git
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu
          her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra
          çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde
          kod oluşturmayı unutmayın.
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu
          her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra
          çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde
          kod oluşturmayı unutmayın.
      course3_bee_functions_challenge3:
        courseF_bee_functions_challenge1_a: Yardımcı olmak için araç kutusundaki işlevleri
          kullanabilirsiniz. Başka bir işlevin tanımının içindeki bir fonksiyonu çağırabilirsiniz!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_a: |-
          Eğer sağa bir yol varsa, aşağıdakileri yapmalısınız:

          -   Herhangi bir miktarda nektar al veya herhangi bir miktarda bal yap.
          -   Yan yola doğru sağa dön.
          -   Yan yolun sonuna hareket et.
          -   Sağa dön.

          Eğer yukarıdaki eylemleri iki kez tekrarlarsanız, ana yola geri dönmeye hazır olacaksınız.

          **Çözümün tamamını görmek isterseniz yalnızca başka bir ipucuna tıklayın!**
        courseF_bee_functions_challenge2_b: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_b: |-
          Sonra, bu sıradaki kalan mücevherleri toplayın.

          ![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png>)
          Bu blokları programınıza ekleyin.

          <xml><block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
          <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">

                  </statement>
                </block>

          </xml>
        courseD_collector_debugging_challenge2_c: "Son olarak, kalan hazineyi toplayın.
          Bu blokları programınıza ekleyin.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Bu bulmaca için çözümün tamamı burada.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: "'STEP' butonu bu meydan okuma için
          çok yardımcı olabilir."
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade
          sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız
          gerekiyor?
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir.
          Bunlar için `süresince` döngülerini kullanın.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde!
          Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir
          veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: Bunu çözmenin bir yolu, dönüşler arasında
          ileri adımlar atmaktır.
        courseC_maze_debugging_challenge2_b: Eğer sıkışırsan, her zaman baştan başlayabilir
          veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      course3_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          Burada oyuncu oyunu kazandığında yapabileceğin bazı şeyler var:

          -   Dinozoru kaybet.
          -   Sincapları durdur.
          -   Sincapları ve şövalyeyi mutlu et.
          -   Yeni bir arka plan ayarla.
          -   Yardım ettiği için oyuncuya şövalyeyi teşekkür ettir.
          -   Bütün aktörleri kaybet ve "Kazandınız!" mesajı göster.
        courseE_playLab_challenge1_b: |-
          Burada oyuncu oyunu kaybettiğinde yapabileceğin bazı şeyler var:

          -   Şövalyeyi kaybet.
          -   Sincapları üzgün yap.
          -   Dinozora bir şeyler söylet.
          -   Yeni bir arka plan ayarla.
          -   Bütün aktörleri yok et ve "Oyun Bitti" mesajı göster.
      course4_artist_binary_challenge2:
        courseD_artist_binary_challenge2_a: |-
          Eğer kodların gerçekten karmaşık bir hal almaya başlarsa, senin için en iyi ipucu `⟲ Baştan Başla`komutuna basmak.

          Orjinal programdan sadece bir kaç satır hatalı. Bir yaklaşım başarısız olursa, geri dön ve yeniden dene. Bir çözüm var!
      course4_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: Bir fonksiyonu bir kez oluşturduğunda,
          onu tekrar tekrar kullanabilirsin. İstediğin zaman istediğin yerde!
        courseE_artist_concept_challenge2_b: |-
          Bu komutu kullanarak tuval üzerinde farklı konumlara atlayabilirsin:
          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      course4_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>

          <block type="jump_to_xy">
          <title name="XPOS">350</title>
          <title name="YPOS">200</title>
          </block>
          </xml>

          Bu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan _önce_ nerede olduğunun bir önemi yoktur!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda.
          Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki
          kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola,
          sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          Program şöyle görünmelidir:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">

          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Her alandaki hasat için mısır miktarına bak. Tezgah desenini görüyor musun? ' Şununla Say Döngüsü' içindeki maksimum değeri ayarlamak için 'uzunluk' parametresi kullanılmalıdır.

          Hasat sonrası çiftçiyi ana yola geri çekmeyi unutmayın!
        courseF_bee_fwp_challenge1_c: |-
          Bir işlevin içine 'şununla say döngüsü' yerleştirin ve '1' den başlayıp 'uzunluk' kadar 1er artacak şekilde ayarlayın.
          Bu döngünün içinde, ileri gitmeli ve tüm mısırları almalısın.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "Şununla say döngüsü içerisinde ilerleyip **sayaç
          defa** 'nektar al'. \nŞununla say döngüsünden sonra **uzunluk defa** 'geri
          git'.\n\nBu ipucunu anlamak için bir çok defa okumaya ihtiyacın olabilir.
          **Koyu** kısımlar ihtiyacınız olan iki 'tekrarla' döngüsünün nasıl kullanılacağı
          hakkında ipucudur."
        courseF_bee_fwp_challenge1_e: |-
          \*\* İşte çözüm: \*\*

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Bu işlevin nasıl çalışması gerektiğini anladığınızdan emin olarak başlayın. Çiftçi her bir yoldan aşağı indiğinde, yalnızca mısır toplamaya çalışacaktır. Bunun yerine, 3 sebzenin her birini ona kontrol ettirip sadece bulduğu birini almasını nasıl sağlarsın?

          Mısır, balkabakları ve marulları kontrol etmek için fonksiyona koşullu ifadeler ekleyin.
        courseF_bee_fwp_challenge2_b: |-
          "İleriye git" bloklarının bittiğini mi düşünüyorsun?
          Programınızda bir \* ikinci \* \`for döngüsü 'kullanmayı deneyin.

          **Not:** Kodunuzda`Sayaç` ı `sayaç2` ile  karıştırmamaya özen gösterin.
        courseF_bee_fwp_challenge2_c: |-
          \*\* İşte işlevi şöyle görünmelidir: \*\*

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>

          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifAtCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **İşte ana programınız böyle görünmeli:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir
          kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi
          'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden
          uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine
          yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince
          tekrarlarsan, toplayıcı mağara _boyunca_ hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en
          kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: Muhtemelen bir zig-zag deseni
          oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız,
          buraya onun için birkaç ekleme yapabilirsiniz.
      course4_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          Aktörleri konuşturmak için araç kutusundan ek bloklara ihtiyacınız olacak.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseA_artist_loops2:
        courseA_artist_loops2_b: 'Bu bulmacayı çözmek için <xml><block type="simple_move_right"/></xml>
          bloğunu kullan. '
      courseA_artist_loops2_2018:
        courseA_artist_loops2_b: 'Bu bulmacayı çözmek için <xml><block type="simple_move_right"/></xml>
          bloğunu kullan. '
      courseA_artist_loops2_2019:
        courseA_artist_loops2_b: 'Bu bulmacayı çözmek için <xml><block type="simple_move_right"/></xml>
          bloğunu kullan. '
      courseA_artist_loops3:
        courseA_artist_loops3_b: |-
          Bu bulmacayı çözmek için böyle bir blok kullanmak isteyeceksiniz.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_b: |-
          Bu bulmacayı çözmek için böyle bir blok kullanmak isteyeceksiniz.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_b: |-
          Bu bulmacayı çözmek için böyle bir blok kullanmak isteyeceksiniz.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops4_b: Yalnızca bir <xml><block type="simple_move_right"/></xml>
          bloğu kullanabileceğinden, onu <block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block> döngüsünün içine koymayı deneyin.
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops4_b: Yalnızca bir <xml><block type="simple_move_right"/></xml>
          bloğu kullanabileceğinden, onu <block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block> döngüsünün içine koymayı deneyin.
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops4_b: Yalnızca bir <xml><block type="simple_move_right"/></xml>
          bloğu kullanabileceğinden, onu <block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block> döngüsünün içine koymayı deneyin.
      courseA_artist_loops5:
        courseA_artist_loops5_a: Tekrarla bloğu hakkında öğrendiklerini kullan!
        courseA_artist_loops5_b: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops5_c: Yalnızca bir Doğu bloğu kullanabildiğinden, onu `tekrar
          et` döngüsünün içine koymayı deneyin.
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: Tekrarla bloğu hakkında öğrendiklerini kullan!
        courseA_artist_loops5_b: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops5_c: Yalnızca bir Doğu bloğu kullanabildiğinden, onu `tekrar
          et` döngüsünün içine koymayı deneyin.
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: Tekrarla bloğu hakkında öğrendiklerini kullan!
        courseA_artist_loops5_b: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops5_c: Yalnızca bir Doğu bloğu kullanabildiğinden, onu `tekrar
          et` döngüsünün içine koymayı deneyin.
      courseA_artist_loops6:
        courseA_artist_loops6_b: Bu bulmacayı çözmek için iki farklı yönde iki blok
          gerekecek.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_b: Bu bulmacayı çözmek için iki farklı yönde iki blok
          gerekecek.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_b: Bu bulmacayı çözmek için iki farklı yönde iki blok
          gerekecek.
      courseA_artist_loops7:
        courseA_artist_loops7_a: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseA_artist_loops7_b: Önce bir dalga için gereken kodu yaz, sonra bunu
          tekrarlayarak diğer ikisini çizebilirsin.
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>döngüsü içine birden fazla blok yerleştirebileceğinizi unutmayın.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseA_artist_loops7_b: Önce bir dalga için gereken kodu yaz, sonra bunu
          tekrarlayarak diğer ikisini çizebilirsin.
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>döngüsü içine birden fazla blok yerleştirebileceğinizi unutmayın.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseA_artist_loops7_b: Önce bir dalga için gereken kodu yaz, sonra bunu
          tekrarlayarak diğer ikisini çizebilirsin.
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>döngüsü içine birden fazla blok yerleştirebileceğinizi unutmayın.
      courseA_artist_loops9:
        courseA_artist_loops9_b: |-
          Eklediğin bloğu <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> döngüsü içine yerleştirmelisin.
        courseA_artist_loops9_c: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu
          adım adım yazmayı deneyin ve oluşan örneğe bakın.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_b: |-
          Eklediğin bloğu <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> döngüsü içine yerleştirmelisin.
        courseA_artist_loops9_c: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu
          adım adım yazmayı deneyin ve oluşan örneğe bakın.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_b: |-
          Eklediğin bloğu <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> döngüsü içine yerleştirmelisin.
        courseA_artist_loops9_c: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu
          adım adım yazmayı deneyin ve oluşan örneğe bakın.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir çadırı bitirdiğinde, sonrakine geçmek
          için iki kere 'zıpla'!
        courseA_artist_loops_challenge2_c: Bulmacayı bitirmek için bütün bloklarınızın
          bir döngü içinde olması gerekir.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir çadırı bitirdiğinde, sonrakine geçmek
          için iki kere 'zıpla'!
        courseA_artist_loops_challenge2_c: Bulmacayı bitirmek için bütün bloklarınızın
          bir döngü içinde olması gerekir.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir çadırı bitirdiğinde, sonrakine geçmek
          için iki kere 'zıpla'!
        courseA_artist_loops_challenge2_c: Bulmacayı bitirmek için bütün bloklarınızın
          bir döngü içinde olması gerekir.
      courseA_collector_loops1:
        courseA_collector_loops1_a: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
        courseA_collector_loops1_b: Hazineye gitmek için Doğuya doğru iki kere ilerlemek
          basit bir çözüm olur.
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
        courseA_collector_loops1_b: Hazineye gitmek için Doğuya doğru iki kere ilerlemek
          basit bir çözüm olur.
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
        courseA_collector_loops1_b: Hazineye gitmek için Doğuya doğru iki kere ilerlemek
          basit bir çözüm olur.
      courseA_collector_loops2:
        courseA_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz
          gerekir.
        courseA_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz
          gerekir.
        courseA_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz
          gerekir.
        courseA_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseA_collector_loops3:
        courseA_collector_loops3_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> döngüsünü kullanmayı
          dene!
        courseA_collector_loops3_b: ' <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> gibi bir döngüye birden
          fazla blok yerleştirebileceğinizi unutmayın.'
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> döngüsünü kullanmayı
          dene!
        courseA_collector_loops3_b: ' <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> gibi bir döngüye birden
          fazla blok yerleştirebileceğinizi unutmayın.'
      courseA_collector_loops3_2019:
        courseA_collector_loops3_b: ' <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> gibi bir döngüye birden
          fazla blok yerleştirebileceğinizi unutmayın.'
      courseA_collector_loops5:
        courseA_collector_loops5_a: Cevabı hemen bulamıyorsanız, hangi oka ihtiyacınız
          olduğunu anlamak için bir kağıt parçası kullanın ve bir desen arayın.
        courseA_collector_loops5_b: Yana ve aşağıya doğru hareket ederek olayı iki
          aşamada çözmeyi deneyin.
        courseA_collector_loops5_c: Laurel 'in batıya hareket ederek hazineyi toplaması
          için <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> döngüsü ile başlayabilirsin.
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: Cevabı hemen bulamıyorsanız, hangi oka ihtiyacınız
          olduğunu anlamak için bir kağıt parçası kullanın ve bir desen arayın.
        courseA_collector_loops5_b: Yana ve aşağıya doğru hareket ederek olayı iki
          aşamada çözmeyi deneyin.
        courseA_collector_loops5_c: Laurel 'in batıya hareket ederek hazineyi toplaması
          için <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> döngüsü ile başlayabilirsin.
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: Cevabı hemen bulamıyorsanız, hangi oka ihtiyacınız
          olduğunu anlamak için bir kağıt parçası kullanın ve bir desen arayın.
        courseA_collector_loops5_b: Yana ve aşağıya doğru hareket ederek olayı iki
          aşamada çözmeyi deneyin.
        courseA_collector_loops5_c: Laurel 'in batıya hareket ederek hazineyi toplaması
          için <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> döngüsü ile başlayabilirsin.
      courseA_collector_loops6:
        courseA_collector_loops6_a: Neyin yanlış olduğunu anlayamıyor musunuz? Ne
          olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
        courseA_collector_loops6_b: En kısa çözüm için peş peşe iki <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> döngüsü içerir.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: Neyin yanlış olduğunu anlayamıyor musunuz? Ne
          olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
        courseA_collector_loops6_b: En kısa çözüm için peş peşe iki <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> döngüsü içerir.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: Neyin yanlış olduğunu anlayamıyor musunuz? Ne
          olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
        courseA_collector_loops6_b: En kısa çözüm için peş peşe iki <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> döngüsü içerir.
      courseA_collector_loops7:
        courseA_collector_loops7_a: Sonrasında ne olacağını anlayamıyorsanız, Laurel'in
          nereye gideceğini görmek için kodu çalıştırmayı deneyin.
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: Sonrasında ne olacağını anlayamıyorsanız, Laurel'in
          nereye gideceğini görmek için kodu çalıştırmayı deneyin.
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: Sonrasında ne olacağını anlayamıyorsanız, Laurel'in
          nereye gideceğini görmek için kodu çalıştırmayı deneyin.
      courseA_collector_loops8:
        courseA_collector_loops8_a: Bu bulmacayı anlamakta zorlanıyorsanız, hareketleri
          bir kağıda yazmayı ve bir desen bulmayı deneyin.
        courseA_collector_loops8_b: Bu bulmacayı 3 ayrı bölüme ayırıp, her biri için
          döngüler yazmayı deneyin.
        courseA_collector_loops8_c: Her seferinde kodun bir kısmını yazabileceğinizi
          ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: Bu bulmacayı anlamakta zorlanıyorsanız, hareketleri
          bir kağıda yazmayı ve bir desen bulmayı deneyin.
        courseA_collector_loops8_b: Bu bulmacayı 3 ayrı bölüme ayırıp, her biri için
          döngüler yazmayı deneyin.
        courseA_collector_loops8_c: Her seferinde kodun bir kısmını yazabileceğinizi
          ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: Bu bulmacayı anlamakta zorlanıyorsanız, hareketleri
          bir kağıda yazmayı ve bir desen bulmayı deneyin.
        courseA_collector_loops8_b: Bu bulmacayı 3 ayrı bölüme ayırıp, her biri için
          döngüler yazmayı deneyin.
        courseA_collector_loops8_c: Her seferinde kodun bir kısmını yazabileceğinizi
          ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseA_collector_loops9:
        courseA_collector_loops9_b: Kodunu daha kısaltmak için senin 2 <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          döngünü başka bir döngünün içine yerleştirmeyi dene!
      courseA_collector_loops9_2018:
        courseA_collector_loops9_b: Kodunu daha kısaltmak için senin 2 <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          döngünü başka bir döngünün içine yerleştirmeyi dene!
      courseA_collector_loops9_2019:
        courseA_collector_loops9_b: Kodunu daha kısaltmak için senin 2 <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          döngünü başka bir döngünün içine yerleştirmeyi dene!
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki
          sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız,
          döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş
          vardır, ama güneye ilerlerken 5 kez hazineyi alman gerekecek. Neden biliyor
          musun?
        courseA_collector_loops_challenge1_d: |-
          Başlangıçtaki program, son 2 mücevheri toplamaz. Son bölüme bu kodu eklemeyi dene:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki
          sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız,
          döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş
          vardır, ama güneye ilerlerken 5 kez hazineyi alman gerekecek. Neden biliyor
          musun?
        courseA_collector_loops_challenge1_d: |-
          Başlangıçtaki program, son 2 mücevheri toplamaz. Son bölüme bu kodu eklemeyi dene:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki
          sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız,
          döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş
          vardır, ama güneye ilerlerken 5 kez hazineyi alman gerekecek. Neden biliyor
          musun?
        courseA_collector_loops_challenge1_d: |-
          Başlangıçtaki program, son 2 mücevheri toplamaz. Son bölüme bu kodu eklemeyi dene:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: Bunu çözmek için yalnızca bir tane blok
          kullanmanız gerekir.
        courseA_collector_loops_challenge2_a: "Güney'e ilerlemeden önce patikada bir
          kez daha geriye gidebilirsin.\n "
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: Sonuca ulaşmak için bu yolu deneyin.
        courseA_collector_loops_challenge2kp_a: Bu bulmacayı çözmek için döngüleri
          kullanabilir misiniz?
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: Sonuca ulaşmak için bu yolu deneyin.
        courseA_collector_loops_challenge2kp_a: Bu bulmacayı çözmek için döngüleri
          kullanabilir misiniz?
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: Sonuca ulaşmak için bu yolu deneyin.
        courseA_collector_loops_challenge2kp_a: Bu bulmacayı çözmek için döngüleri
          kullanabilir misiniz?
      courseA_collector_preLoops5:
        courseA_collector_preLoops5_a: Bir elmas bile alabilmek için iki farklı yönde
          gitmeniz gerekiyor!
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseA_harvester_loops3:
        courseA_harvester_loops3_b: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_b: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: Takıldığınızda, bulmacayı köşeden önce ve köşeden
          sonra olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: Takıldığınızda, bulmacayı köşeden önce ve köşeden
          sonra olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_harvester_loops5a:
        courseA_harvester_loops5a_a: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız
          olacak.
      courseA_harvester_loops5a_2019:
        courseA_harvester_loops5a_a: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız
          olacak.
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı deneyin ve tekrar eden adımları bulun.
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı deneyin ve tekrar eden adımları bulun.
      courseA_maze_seq13:
        courseA_maze_seq13_b: Bir hata yapmaktan korkmayın! Bloklar ekleyin ve ne
          olacağını görmek için kodu çalıştırmayı deneyin.
        courseA_maze_seq13_c: |-
          <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blokları domuza yaklaşmanıza yardımcı olur.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_b: Bir hata yapmaktan korkmayın! Bloklar ekleyin ve ne
          olacağını görmek için kodu çalıştırmayı deneyin.
        courseA_maze_seq13_c: |-
          <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blokları domuza yaklaşmanıza yardımcı olur.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_b: Bir hata yapmaktan korkmayın! Bloklar ekleyin ve ne
          olacağını görmek için kodu çalıştırmayı deneyin.
        courseA_maze_seq13_c: |-
          <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blokları domuza yaklaşmanıza yardımcı olur.
      courseA_maze_seq2:
        courseA_maze_seq2_b: Kuşun nereye gittiğini görmek için önce kodu çalıştırmayı
          deneyin. Oradan nereye gitmen gerekiyor?
      courseA_maze_seq3:
        courseA_maze_seq3_b: Programın yanlış gittiği yeri bulmak için adım düğmesini
          kullan. Hata ilk adımda mı? İkinci adımda mı?
        courseA_maze_seq3_c: <xml><block type="maze_moveNorth"/></xml> bloğu, kuşu
          doğru yönde hareket ettirmiyor gibi görünüyor. Bunu farklı bir blokla değiştirebilir
          misin?
      courseA_maze_seq4:
        courseA_maze_seq4_b: Kodu olduğu gibi çalıştırın. Bir şeyler yanlış mı gidiyor?
          Hangi bloğu kaldırılabilirsin? Bunu nasıl düzeltirsin?
      courseA_maze_seq5:
        courseA_maze_seq5_b: İki farklı yönde işaret eden iki farklı bloğa ihtiyacınız
          olacak.
      courseA_maze_seq6:
        courseA_maze_seq6_b: Takıldığınızda, bulmacayı köşeden önce ve köşeden sonra
          olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_maze_seq6_2018:
        courseA_maze_seq6_b: Takıldığınızda, bulmacayı köşeden önce ve köşeden sonra
          olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_maze_seq6_2019:
        courseA_maze_seq6_b: Takıldığınızda, bulmacayı köşeden önce ve köşeden sonra
          olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_maze_seq9:
        courseA_maze_seq9_b: 'Ne yapacağınızdan emin değilseniz, ''baştan başla''
          düğmesini tıklayıp kodu tekrar çalıştırın ve nerede hata olduğuna bakın. '
        courseA_maze_seq9_c: Bu bulmacayı çözmek için üç farklı yönde hareket etmeniz
          gerekecek.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: Bu bulmacanın iki çözümü var.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: Bu bulmacanın iki çözümü var.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: Bu bulmacanın iki çözümü var.
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız
          yerdeki boşluğu saymayın!
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız
          yerdeki boşluğu saymayın!
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız
          yerdeki boşluğu saymayın!
      courseA_playLab_events2:
        courseA_playLab_events2_b: |-
          Bu bulmacayı tamamlamanız için ihtiyaç duyduğunuz kod:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Selam.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018:
        courseA_playLab_events2_b: |-
          Bu bulmacayı tamamlamanız için ihtiyaç duyduğunuz kod:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Selam.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019:
        courseA_playLab_events2_b: |-
          Bu bulmacayı tamamlamanız için ihtiyaç duyduğunuz kod:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Selam.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3:
        courseA_playLab_events3_b: Programınızı yazdıktan sonra Jorge'yi bayrağa götürmek
          için sol ok tuşunu kullanmayı unutmayın. Bayrak yeşile döndüğünde, oradasın!
      courseA_playLab_events3_2018:
        courseA_playLab_events3_b: Programınızı yazdıktan sonra Jorge'yi bayrağa götürmek
          için sol ok tuşunu kullanmayı unutmayın. Bayrak yeşile döndüğünde, oradasın!
      courseA_playLab_events3_2019:
        courseA_playLab_events3_b: Programınızı yazdıktan sonra Jorge'yi bayrağa götürmek
          için sol ok tuşunu kullanmayı unutmayın. Bayrak yeşile döndüğünde, oradasın!
      courseA_playLab_events5:
        courseA_playLab_events5_b: Blok içinde resmi tıklatıp yeni bir ok tuşu seçebileceğinizi
          biliyor muydun?  ! \[] (<https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif>)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_b: Blok içinde resmi tıklatıp yeni bir ok tuşu seçebileceğinizi
          biliyor muydun?  ! \[] (<https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif>)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_b: Blok içinde resmi tıklatıp yeni bir ok tuşu seçebileceğinizi
          biliyor muydun?  ! \[] (<https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif>)
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          Aktörler çarpıştığında ne olacağını kontrol etmek için bu bloğu kullanın.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          Aktörler çarpıştığında ne olacağını kontrol etmek için bu bloğu kullanın.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          Aktörler çarpıştığında ne olacağını kontrol etmek için bu bloğu kullanın.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin
          gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo'
          yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i
          görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff'
          i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü
          Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin
          gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo'
          yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i
          görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff'
          i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü
          Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin
          gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo'
          yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i
          görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff'
          i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü
          Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title
          name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title
          name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: Robotun bip sesi çıkarmasını sağlayabilirsiniz.
          <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 6</title>
          <next><block type="studio_playSound"> <title name="SOUND"> winpoint</title></block></next></block></xml>
        courseA_playlab_events_challenge2_c: Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block
          type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block
          type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE">
          2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title>
          <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion">
          <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: Robotun bip sesi çıkarmasını sağlayabilirsiniz.
          <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 6</title>
          <next><block type="studio_playSound"> <title name="SOUND"> winpoint</title></block></next></block></xml>
        courseA_playlab_events_challenge2_c: Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block
          type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block
          type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE">
          2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title>
          <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion">
          <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: Robotun bip sesi çıkarmasını sağlayabilirsiniz.
          <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 6</title>
          <next><block type="studio_playSound"> <title name="SOUND"> winpoint</title></block></next></block></xml>
        courseA_playlab_events_challenge2_c: Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block
          type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block
          type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE">
          2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title>
          <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion">
          <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      courseB_artist_loops2:
        courseB_artist_loops2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseB_artist_loops2_b: Sanatçının nereye geldiğini görmek için kodu çalıştırmayı
          deneyin.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseB_artist_loops2_b: Sanatçının nereye geldiğini görmek için kodu çalıştırmayı
          deneyin.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan
          bloğun üstündeki sayıyı değiştirebilirsin.
        courseB_artist_loops2_b: Sanatçının nereye geldiğini görmek için kodu çalıştırmayı
          deneyin.
      courseB_artist_loops3:
        courseB_artist_loops3_b: Çizgi çizmek için sanatçıyı Güneye hareket ettirmelisin.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_b: Çizgi çizmek için sanatçıyı Güneye hareket ettirmelisin.
      courseB_artist_loops3_2019:
        courseB_artist_loops3_b: Çizgi çizmek için sanatçıyı Güneye hareket ettirmelisin.
      courseB_artist_loops4:
        courseB_artist_loops4_a: Atla bloğu, çizgi çizmeden ileri hareket etmenizi
          sağlar.
        courseB_artist_loops4_b: Bulmacayı çözmek için tekrar döngüsünün içine bir
          blok eklemeniz gerekecek.
        courseB_artist_loops4_c: Döngünün tekrarlama sayısını değiştirmeyi unutmayın.
      courseB_artist_loops4_2018:
        courseB_artist_loops4_a: Atla bloğu, çizgi çizmeden ileri hareket etmenizi
          sağlar.
        courseB_artist_loops4_b: Bulmacayı çözmek için tekrar döngüsünün içine bir
          blok eklemeniz gerekecek.
        courseB_artist_loops4_c: Döngünün tekrarlama sayısını değiştirmeyi unutmayın.
      courseB_artist_loops4_2019:
        courseB_artist_loops4_a: Atla bloğu, çizgi çizmeden ileri hareket etmenizi
          sağlar.
        courseB_artist_loops4_b: Bulmacayı çözmek için tekrar döngüsünün içine bir
          blok eklemeniz gerekecek.
        courseB_artist_loops4_c: Döngünün tekrarlama sayısını değiştirmeyi unutmayın.
      courseB_artist_loops6:
        courseB_artist_loops6_b: Hareketleri bir kağıda yazmayı deneyin ve desene
          bakın.
      courseB_artist_loops6_2018:
        courseB_artist_loops6_b: Hareketleri bir kağıda yazmayı deneyin ve desene
          bakın.
      courseB_artist_loops6_2019:
        courseB_artist_loops6_b: Hareketleri bir kağıda yazmayı deneyin ve desene
          bakın.
      courseB_artist_loops7:
        courseB_artist_loops7_a: Bu meydan okuma dört döngü içerir, herbiri birbiri
          ardına kullanılır!
      courseB_artist_loops7_2018:
        courseB_artist_loops7_a: Bu meydan okuma dört döngü içerir, herbiri birbiri
          ardına kullanılır!
      courseB_artist_loops7_2019:
        courseB_artist_loops7_a: Bu meydan okuma dört döngü içerir, herbiri birbiri
          ardına kullanılır!
      courseB_artist_loops8:
        courseB_artist_loops8_b: Ne yapacağını görmek için kodu çalıştırmalısın.
      courseB_artist_loops8_2018:
        courseB_artist_loops8_b: Ne yapacağını görmek için kodu çalıştırmalısın.
      courseB_artist_loops8_2019:
        courseB_artist_loops8_b: Ne yapacağını görmek için kodu çalıştırmalısın.
      courseB_artist_loops9:
        courseB_artist_loops9_a: Çizgi çizmeden ilerlemek için atlama bloklarını kullanabileceğini
          unutma.
        courseB_artist_loops9_b: 'Bu bulmacayı çözmek için B bloğunu kullanacaksın. '
        courseB_artist_loops9_c: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_a: Çizgi çizmeden ilerlemek için atlama bloklarını kullanabileceğini
          unutma.
        courseB_artist_loops9_b: 'Bu bulmacayı çözmek için B bloğunu kullanacaksın. '
        courseB_artist_loops9_c: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_a: Çizgi çizmeden ilerlemek için atlama bloklarını kullanabileceğini
          unutma.
        courseB_artist_loops9_b: 'Bu bulmacayı çözmek için B bloğunu kullanacaksın. '
        courseB_artist_loops9_c: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseB_artist_loops_challenge1:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle''
          veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      courseB_artist_loops_challenge1_2018:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle''
          veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      courseB_artist_loops_challenge1_2019:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml>
          sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle''
          veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      courseB_artist_loops_challenge2:
        courseB_artist_loops_challenge2_a: Bir X çizmek için gerekli olan kod, sana
          zaten verilmiş durumda. Yapman gereken şey, X'i tekrar etmek ve sonraki
          noktaya atlamak.
        courseB_artist_loops_challenge2_b: Atla bloğu ile başka alanlara gidebilirsiniz.
      courseB_artist_loops_challenge2_2018:
        courseB_artist_loops_challenge2_a: Bir X çizmek için gerekli olan kod, sana
          zaten verilmiş durumda. Yapman gereken şey, X'i tekrar etmek ve sonraki
          noktaya atlamak.
        courseB_artist_loops_challenge2_b: Atla bloğu ile başka alanlara gidebilirsiniz.
      courseB_artist_loops_challenge2_2019:
        courseB_artist_loops_challenge2_a: Bir X çizmek için gerekli olan kod, sana
          zaten verilmiş durumda. Yapman gereken şey, X'i tekrar etmek ve sonraki
          noktaya atlamak.
        courseB_artist_loops_challenge2_b: Atla bloğu ile başka alanlara gidebilirsiniz.
      courseB_collector_loops1:
        courseB_collector_loops1_a: Hazineyi almak için üzerinde dururken <xml><block
          type="collector_collect_simplified"/></xml> bloğunu kullanmalısın.
      courseB_collector_loops10:
        courseB_collector_loops10_b: Hareketleri bir kağıda yazmayı ve desene bakmayı
          deneyin.
      courseB_collector_loops10_2018:
        courseB_collector_loops10_b: Hareketleri bir kağıda yazmayı ve desene bakmayı
          deneyin.
      courseB_collector_loops10_2019:
        courseB_collector_loops10_b: Hareketleri bir kağıda yazmayı ve desene bakmayı
          deneyin.
      courseB_collector_loops1_2018:
        courseB_collector_loops1_a: Hazineyi almak için üzerinde dururken <xml><block
          type="collector_collect_simplified"/></xml> bloğunu kullanmalısın.
      courseB_collector_loops1_2019:
        courseB_collector_loops1_a: Hazineyi almak için üzerinde dururken <xml><block
          type="collector_collect_simplified"/></xml> bloğunu kullanmalısın.
      courseB_collector_loops2:
        courseB_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz
          gerekir.
        courseB_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz
          gerekir.
        courseB_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz
          gerekir.
        courseB_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi
          Al' bloğunu kullanmayı unutmayın.
      courseB_collector_loops3:
        courseB_collector_prog3_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi
          unutmayın.
      courseB_collector_loops3_2018:
        courseB_collector_prog3_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi
          unutmayın.
      courseB_collector_loops3_2019:
        courseB_collector_prog3_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi
          unutmayın.
      courseB_collector_loops4:
        courseB_collector_loops4_c: Laurel, 'tekrar' döngüsünü tamamladıktan sonra
          aşağıya doğru yürüyüp hazine toplamaya ihtiyacı var!
      courseB_collector_loops4_2018:
        courseB_collector_loops4_c: Laurel, 'tekrar' döngüsünü tamamladıktan sonra
          aşağıya doğru yürüyüp hazine toplamaya ihtiyacı var!
      courseB_collector_loops4_2019:
        courseB_collector_loops4_c: Laurel, 'tekrar' döngüsünü tamamladıktan sonra
          aşağıya doğru yürüyüp hazine toplamaya ihtiyacı var!
      courseB_collector_loops5:
        courseB_collector_loops5_b: Neler olduğunu görmek için kodu birkaç kez çalıştırmayı
          dene.
      courseB_collector_loops5_2018:
        courseB_collector_loops5_b: Neler olduğunu görmek için kodu birkaç kez çalıştırmayı
          dene.
      courseB_collector_loops5_2019:
        courseB_collector_loops5_b: Neler olduğunu görmek için kodu birkaç kez çalıştırmayı
          dene.
      courseB_collector_loops6:
        courseB_collector_loops6_b: '"3"e tıklayıp sayıyı farklı seçerek tekrar döngüsünün
          kaç kez çalışacağını değiştirebilirsiniz.'
        courseB_collector_loops6_c: 'Bu bulmacayı çözmek için üç tekrarla döngüsüne
          ihtiyacınız olacak. '
        courseB_collector_loops6_d: Eğer kafanız karıştıysa, bu bulmacayı üç aşamada
          çözmeyi deneyin.
      courseB_collector_loops6_2018:
        courseB_collector_loops6_b: '"3"e tıklayıp sayıyı farklı seçerek tekrar döngüsünün
          kaç kez çalışacağını değiştirebilirsiniz.'
        courseB_collector_loops6_c: 'Bu bulmacayı çözmek için üç tekrarla döngüsüne
          ihtiyacınız olacak. '
        courseB_collector_loops6_d: Eğer kafanız karıştıysa, bu bulmacayı üç aşamada
          çözmeyi deneyin.
      courseB_collector_loops6_2019:
        courseB_collector_loops6_b: '"3"e tıklayıp sayıyı farklı seçerek tekrar döngüsünün
          kaç kez çalışacağını değiştirebilirsiniz.'
        courseB_collector_loops6_c: 'Bu bulmacayı çözmek için üç tekrarla döngüsüne
          ihtiyacınız olacak. '
        courseB_collector_loops6_d: Eğer kafanız karıştıysa, bu bulmacayı üç aşamada
          çözmeyi deneyin.
      courseB_collector_loops7:
        courseB_collector_loops7_b: Bulmacayı çözmek için 3 tekrarla döngüsüne ihtiyacın
          olacak ve sonundaki ekstra hazineyi unutma!
      courseB_collector_loops7_2018:
        courseB_collector_loops7_b: Bulmacayı çözmek için 3 tekrarla döngüsüne ihtiyacın
          olacak ve sonundaki ekstra hazineyi unutma!
      courseB_collector_loops7_2019:
        courseB_collector_loops7_b: Bulmacayı çözmek için 3 tekrarla döngüsüne ihtiyacın
          olacak ve sonundaki ekstra hazineyi unutma!
      courseB_collector_loops9:
        courseB_collector_loops9_a: Bu çok mu zor görünüyor? Daha kolay hissettirmek
          için 4 küçük probleme ayırın.
        courseB_collector_loops9_b: Bu çözüm için birbiri ardına 3 tekrarla döngüsüne
          ihtiyacınız olacaktır.
      courseB_collector_loops9_2018:
        courseB_collector_loops9_a: Bu çok mu zor görünüyor? Daha kolay hissettirmek
          için 4 küçük probleme ayırın.
        courseB_collector_loops9_b: Bu çözüm için birbiri ardına 3 tekrarla döngüsüne
          ihtiyacınız olacaktır.
      courseB_collector_loops9_2019:
        courseB_collector_loops9_a: Bu çok mu zor görünüyor? Daha kolay hissettirmek
          için 4 küçük probleme ayırın.
        courseB_collector_loops9_b: Bu çözüm için birbiri ardına 3 tekrarla döngüsüne
          ihtiyacınız olacaktır.
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_b: |-
          Aşağıdaki komutları döngüleyerek başlayın:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Her yolun arasında Doğuya iki defa ilerleyin.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Bunu sadece 14 blok ile yapabilirsiniz.  Bir çözüm yolu görmek için bir ipucuna daha basın.
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_b: |-
          Aşağıdaki komutları döngüleyerek başlayın:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Her yolun arasında Doğuya iki defa ilerleyin.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Bunu sadece 14 blok ile yapabilirsiniz.  Bir çözüm yolu görmek için bir ipucuna daha basın.
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_b: |-
          Aşağıdaki komutları döngüleyerek başlayın:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Her yolun arasında Doğuya iki defa ilerleyin.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Bunu sadece 14 blok ile yapabilirsiniz.  Bir çözüm yolu görmek için bir ipucuna daha basın.
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_a: Eğer işler ters giderse, yeniden başlamaktan
          korkma! Sakın pes etme!
        courseB_collector_loops_challenge2_b: "Bu tekrar eden kodu kullanırsan, Laurel
          mağaranın içindeki duvara çarpmayacak! \n\n<xml><block type=\"maze_moveEast\">\n<next>\n<block
          type=\"collector_collect\">\n<next>\n<block type=\"maze_moveWest\">\n<next>\n<block
          type=\"maze_moveWest\">\n<next>\n<block type=\"maze_moveSouth\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block></xml>"
        courseB_collector_loops_challenge2_c: Son hazine yığınını toplamak için bir
          döngü kullanmayı unutma!
        courseB_collector_loops_challenge2_d: |-
          Bu çözümü deneyin:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Eğer herhangi bir şey ters giderse,
          hata ayıklamayı deneyin. Pes etmeyin!
        courseB_collector_loops_challenge2a_b: Labirenti geçmek için bu seçeneğe bakın.
          Tekrar edebileceğin bir desen görüyor musun?
        courseB_collector_loops_challenge2a_c: Hazinenin tamamını toplamak için, döngünüze
          iki tane <xml> <block type="collector_collect"/></xml> bloğu eklemeli, veya
          bloğu kendi 'tekrar' bloğunun içine koymanız gerekiyor.
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Eğer herhangi bir şey ters giderse,
          hata ayıklamayı deneyin. Pes etmeyin!
        courseB_collector_loops_challenge2a_b: Labirenti geçmek için bu seçeneğe bakın.
          Tekrar edebileceğin bir desen görüyor musun?
        courseB_collector_loops_challenge2a_c: Hazinenin tamamını toplamak için, döngünüze
          iki tane <xml> <block type="collector_collect"/></xml> bloğu eklemeli, veya
          bloğu kendi 'tekrar' bloğunun içine koymanız gerekiyor.
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Eğer herhangi bir şey ters giderse,
          hata ayıklamayı deneyin. Pes etmeyin!
        courseB_collector_loops_challenge2a_b: Labirenti geçmek için bu seçeneğe bakın.
          Tekrar edebileceğin bir desen görüyor musun?
        courseB_collector_loops_challenge2a_c: Hazinenin tamamını toplamak için, döngünüze
          iki tane <xml> <block type="collector_collect"/></xml> bloğu eklemeli, veya
          bloğu kendi 'tekrar' bloğunun içine koymanız gerekiyor.
      courseB_iceage_loops3:
        courseB_iceage_loops3_b: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_b: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseB_maze_seq1:
        courseB_maze_seq1_a: Kuşun hareket etmesi için blokları 'çalıştığı zaman'
          <xml><block type="when_run"/></xml> bloğuna birleştirin!
        courseB_maze_seq1_b: 'Kuşu domuza getirmek için, üç tane <xml><block type="maze_moveSouth"/></xml>
          oku  dışarı sürükleyin ve ''çalıştığı zaman'' <xml><block type="when_run"/></xml>
          bloğu ile bağlayın. '
      courseB_maze_seq10:
        courseB_maze_seq10_b: Domuza ulaşmak için iki farklı yönde hareket etmelisin.
      courseB_maze_seq11:
        courseB_maze_seq11_b: Zorlandığınız durumlarda, bulmacayı köşeden önce ve
          köşeden sonra olarak iki ayrı bölüm halinde çözmeyi deneyin.
      courseB_maze_seq1_2018:
        courseB_maze_seq1_a: Kuşun hareket etmesi için blokları 'çalıştığı zaman'
          <xml><block type="when_run"/></xml> bloğuna birleştirin!
        courseB_maze_seq1_b: 'Kuşu domuza getirmek için, üç tane <xml><block type="maze_moveSouth"/></xml>
          oku  dışarı sürükleyin ve ''çalıştığı zaman'' <xml><block type="when_run"/></xml>
          bloğu ile bağlayın. '
      courseB_maze_seq1_2019:
        courseB_maze_seq1_a: Kuşun hareket etmesi için blokları 'çalıştığı zaman'
          <xml><block type="when_run"/></xml> bloğuna birleştirin!
        courseB_maze_seq1_b: 'Kuşu domuza getirmek için, üç tane <xml><block type="maze_moveSouth"/></xml>
          oku  dışarı sürükleyin ve ''çalıştığı zaman'' <xml><block type="when_run"/></xml>
          bloğu ile bağlayın. '
      courseB_maze_seq2:
        courseB_maze_seq2_b: Kuşun ne yapması gerektiğini görmek için verilen kodu
          çalıştırmayı deneyin.
      courseB_maze_seq3:
        courseB_maze_seq3_b: Programın yanlış gittiği yeri bulmak için adım düğmesini
          kullanmaya çalışın. Bu ilk adım mı? ikinci mi?
        courseB_maze_seq3_c: '<xml><block type="maze_moveWest"/></xml> bloğu, kuşu
          doğru yönde hareket ettirmiyor gibi görünüyor. '
      courseB_maze_seq4:
        courseB_maze_seq4_b: Bu bulmacayı çözmek için doğuya hareket etmek isteyeceksiniz
      courseB_maze_seq4_2018:
        courseB_maze_seq4_b: Bu bulmacayı çözmek için doğuya hareket etmek isteyeceksiniz
      courseB_maze_seq4_2019:
        courseB_maze_seq4_b: Bu bulmacayı çözmek için doğuya hareket etmek isteyeceksiniz
      courseB_maze_seq5:
        courseB_maze_seq5_a: Zorlandığınız durumlarda yolu kağıt üzerine çizmeyi deneyin.
        courseB_maze_seq5_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_c: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu
          deneyin.
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Zorlandığınız durumlarda yolu kağıt üzerine çizmeyi deneyin.
        courseB_maze_seq5_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_c: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu
          deneyin.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Zorlandığınız durumlarda yolu kağıt üzerine çizmeyi deneyin.
        courseB_maze_seq5_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_c: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu
          deneyin.
      courseB_maze_seq6:
        courseB_maze_seq6_b: Zorlandığınız durumlarda, bulmacayı, biri yanlamasına,
          diğeri yukarı ve aşağı olmak üzere iki ayrı bölüm halinde çözmeyi deneyin.
        courseB_maze_seq5_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_d: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu
          deneyin!
      courseB_maze_seq6_2018:
        courseB_maze_seq6_b: Zorlandığınız durumlarda, bulmacayı, biri yanlamasına,
          diğeri yukarı ve aşağı olmak üzere iki ayrı bölüm halinde çözmeyi deneyin.
        courseB_maze_seq5_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_d: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu
          deneyin!
      courseB_maze_seq6_2019:
        courseB_maze_seq6_b: Zorlandığınız durumlarda, bulmacayı, biri yanlamasına,
          diğeri yukarı ve aşağı olmak üzere iki ayrı bölüm halinde çözmeyi deneyin.
        courseB_maze_seq5_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_d: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu
          deneyin!
      courseB_maze_seq7:
        courseB_maze_seq7_b: Size verilen kodu çalıştırın ve nerede bittiğini görün.
        courseB_maze_seq7_c: Domuza ulaşamıyor musunuz? Bu yolu deneyin!
      courseB_maze_seq7_2018:
        courseB_maze_seq7_b: Size verilen kodu çalıştırın ve nerede bittiğini görün.
        courseB_maze_seq7_c: Domuza ulaşamıyor musunuz? Bu yolu deneyin!
      courseB_maze_seq7_2019:
        courseB_maze_seq7_b: Size verilen kodu çalıştırın ve nerede bittiğini görün.
        courseB_maze_seq7_c: Domuza ulaşamıyor musunuz? Bu yolu deneyin!
      courseB_maze_seq8:
        courseB_maze_seq8_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq8_c: Hangi yöne gideceğinizi bilmiyor musunuz? Bu yolu deneyin!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq8_c: Hangi yöne gideceğinizi bilmiyor musunuz? Bu yolu deneyin!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq8_c: Hangi yöne gideceğinizi bilmiyor musunuz? Bu yolu deneyin!
      courseB_maze_seq9:
        courseB_maze_seq9_b: Unutmayın, programınızı her seferinde bir blok ekleyerek
          yazıp, yazdıkça test edebilirsiniz.
        courseB_maze_seq9_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq9_d: Takıldınız mı? Bu yolu deneyin!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_b: Unutmayın, programınızı her seferinde bir blok ekleyerek
          yazıp, yazdıkça test edebilirsiniz.
        courseB_maze_seq9_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq9_d: Takıldınız mı? Bu yolu deneyin!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_b: Unutmayın, programınızı her seferinde bir blok ekleyerek
          yazıp, yazdıkça test edebilirsiniz.
        courseB_maze_seq9_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq9_d: Takıldınız mı? Bu yolu deneyin!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: <xml><block type="maze_moveWest"/></xml>  bloğunu
          kullanarak ilerlemeyi deneyin.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: <xml><block type="maze_moveWest"/></xml>  bloğunu
          kullanarak ilerlemeyi deneyin.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: <xml><block type="maze_moveWest"/></xml>  bloğunu
          kullanarak ilerlemeyi deneyin.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya
          kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları yeniden sıralayıp merdiven deseni
          olan yoldan git.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya
          kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları yeniden sıralayıp merdiven deseni
          olan yoldan git.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya
          kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları yeniden sıralayıp merdiven deseni
          olan yoldan git.
      courseB_playlab_events4:
        courseB_playlab_events4_b: |-
          Bu blok şövalyeyi sola hareket ettirir.
          <xml>
          <block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018:
        courseB_playlab_events4_b: |-
          Bu blok şövalyeyi sola hareket ettirir.
          <xml>
          <block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2019:
        courseB_playlab_events4_b: |-
          Bu blok şövalyeyi sola hareket ettirir.
          <xml>
          <block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events6:
        courseB_playlab_events6_b: |-
          Farklı yönler seçmek için açılır menüdeki yeşil 'ok işaretine basıldığında' olay bloklarını kullan.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Geçmek için tüm bayraklara git!
      courseB_playlab_events6_2018:
        courseB_playlab_events6_b: |-
          Farklı yönler seçmek için açılır menüdeki yeşil 'ok işaretine basıldığında' olay bloklarını kullan.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Geçmek için tüm bayraklara git!
      courseB_playlab_events6_2019:
        courseB_playlab_events6_b: |-
          Farklı yönler seçmek için açılır menüdeki yeşil 'ok işaretine basıldığında' olay bloklarını kullan.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Geçmek için tüm bayraklara git!
      courseB_playlab_events_challenge1:
        courseB_playlab_events_challenge1_a: Aşağı Taşı '▼' tuşuna bastığınızda diğer
          hayvanları aşağı ilerletin.  <xml><block type="studio_whenArrow" movable="false">
          <title name="VALUE"> aşağı</title></block></xml>
        courseB_playlab_events_challenge1_b: 'Bu bloğu kullanarak hayvanların hızını
          değiştirebilirsin: <xml><block type="studio_setSpriteSpeed"> <title name="SPRITE">
          0</title> <title name="VALUE"> Studio.SpriteSpeed.NORMAL</title></block></xml>'
        courseB_playlab_events_challenge1_c: 'Yarış bittiğinde herkes ne diyecek?
          Bu olay ile konuşmalarını sağlayın: <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE"> 2</title> <next><block type="studio_saySpriteChoices">
          <title name="SPRITE"> 2</title> <title name="VALUE"> Kur yapmak hoo!</title></block></next></block></xml>'
      courseB_playlab_events_challenge1_2018:
        courseB_playlab_events_challenge1_a: Aşağı Taşı '▼' tuşuna bastığınızda diğer
          hayvanları aşağı ilerletin.  <xml><block type="studio_whenArrow" movable="false">
          <title name="VALUE"> aşağı</title></block></xml>
        courseB_playlab_events_challenge1_b: 'Bu bloğu kullanarak hayvanların hızını
          değiştirebilirsin: <xml><block type="studio_setSpriteSpeed"> <title name="SPRITE">
          0</title> <title name="VALUE"> Studio.SpriteSpeed.NORMAL</title></block></xml>'
        courseB_playlab_events_challenge1_c: 'Yarış bittiğinde herkes ne diyecek?
          Bu olay ile konuşmalarını sağlayın: <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE"> 2</title> <next><block type="studio_saySpriteChoices">
          <title name="SPRITE"> 2</title> <title name="VALUE"> Kur yapmak hoo!</title></block></next></block></xml>'
      courseB_playlab_events_challenge1_2019:
        courseB_playlab_events_challenge1_a: Aşağı Taşı '▼' tuşuna bastığınızda diğer
          hayvanları aşağı ilerletin.  <xml><block type="studio_whenArrow" movable="false">
          <title name="VALUE"> aşağı</title></block></xml>
        courseB_playlab_events_challenge1_b: 'Bu bloğu kullanarak hayvanların hızını
          değiştirebilirsin: <xml><block type="studio_setSpriteSpeed"> <title name="SPRITE">
          0</title> <title name="VALUE"> Studio.SpriteSpeed.NORMAL</title></block></xml>'
        courseB_playlab_events_challenge1_c: 'Yarış bittiğinde herkes ne diyecek?
          Bu olay ile konuşmalarını sağlayın: <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE"> 2</title> <next><block type="studio_saySpriteChoices">
          <title name="SPRITE"> 2</title> <title name="VALUE"> Kur yapmak hoo!</title></block></next></block></xml>'
      courseB_playlab_events_challenge2:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı.
          Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "Karıştır! Bazı hayvanlar diğerlerinden
          daha fazla puan verebilir. \nFarklı sesler kullanın. \nHayvanların duygularını
          değiştir!"
      courseB_playlab_events_challenge2_2018:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı.
          Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "Karıştır! Bazı hayvanlar diğerlerinden
          daha fazla puan verebilir. \nFarklı sesler kullanın. \nHayvanların duygularını
          değiştir!"
      courseB_playlab_events_challenge2_2019:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı.
          Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "Karıştır! Bazı hayvanlar diğerlerinden
          daha fazla puan verebilir. \nFarklı sesler kullanın. \nHayvanların duygularını
          değiştir!"
      courseB_starWars_prog1:
        courseB_starWars_prog1_a: Her seferinde bir tane blok eklemeyi deneyin, sonra
          ne olduğunu görmek için kodunuzu çalıştırın.
        courseB_starWars_prog1_b: |-
          Bu bulmacayı çözmek için Doğu'ya hareket etmelisin. Peki ne kadar ilerlemelisin?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2018:
        courseB_starWars_prog1_a: Her seferinde bir tane blok eklemeyi deneyin, sonra
          ne olduğunu görmek için kodunuzu çalıştırın.
        courseB_starWars_prog1_b: |-
          Bu bulmacayı çözmek için Doğu'ya hareket etmelisin. Peki ne kadar ilerlemelisin?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2019:
        courseB_starWars_prog1_a: Her seferinde bir tane blok eklemeyi deneyin, sonra
          ne olduğunu görmek için kodunuzu çalıştırın.
        courseB_starWars_prog1_b: |-
          Bu bulmacayı çözmek için Doğu'ya hareket etmelisin. Peki ne kadar ilerlemelisin?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2:
        courseB_starWars_prog2_a: 'Bu problemi iki parçaya bölebilirsin: ilk olarak,
          bir yığın hurda metal al, ardından oradan ikinci yığına nasıl ulaşacağını
          çöz.'
      courseB_starWars_prog2_2018:
        courseB_starWars_prog2_a: 'Bu problemi iki parçaya bölebilirsin: ilk olarak,
          bir yığın hurda metal al, ardından oradan ikinci yığına nasıl ulaşacağını
          çöz.'
      courseB_starWars_prog2_2019:
        courseB_starWars_prog2_a: 'Bu problemi iki parçaya bölebilirsin: ilk olarak,
          bir yığın hurda metal al, ardından oradan ikinci yığına nasıl ulaşacağını
          çöz.'
      courseB_starWars_prog3:
        courseB_starWars_prog3_a: Bu bulmacayı çözmek için 3 farklı yönde hareket
          etmeniz gerekecek.
        courseB_starWars_prog3_b: Bir defada bir parça kod yazabileceğinizi ve oradan
          nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseB_starWars_prog3_2018:
        courseB_starWars_prog3_a: Bu bulmacayı çözmek için 3 farklı yönde hareket
          etmeniz gerekecek.
        courseB_starWars_prog3_b: Bir defada bir parça kod yazabileceğinizi ve oradan
          nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseB_starWars_prog3_2019:
        courseB_starWars_prog3_a: Bu bulmacayı çözmek için 3 farklı yönde hareket
          etmeniz gerekecek.
        courseB_starWars_prog3_b: Bir defada bir parça kod yazabileceğinizi ve oradan
          nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseB_starWars_prog4:
        courseB_starWars_prog4_a: Bir defada bir parça kod yazabileceğinizi ve oradan
          nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
        courseB_starWars_prog4_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018:
        courseB_starWars_prog4_a: Bir defada bir parça kod yazabileceğinizi ve oradan
          nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
        courseB_starWars_prog4_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2019:
        courseB_starWars_prog4_a: Bir defada bir parça kod yazabileceğinizi ve oradan
          nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
        courseB_starWars_prog4_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5:
        courseB_starWars_prog5_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog5_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog5_c: Bu deseni parmağınla takip et. İlerledikçe metal
          parçalarını say.
        courseB_starWars_prog5_da: |-
          Merdiven basamağı bulmacasındaki aynı çözüm yolunu kullanırsan ne olacağına bak:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018:
        courseB_starWars_prog5_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog5_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog5_c: Bu deseni parmağınla takip et. İlerledikçe metal
          parçalarını say.
        courseB_starWars_prog5_da: |-
          Merdiven basamağı bulmacasındaki aynı çözüm yolunu kullanırsan ne olacağına bak:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019:
        courseB_starWars_prog5_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog5_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog5_c: Bu deseni parmağınla takip et. İlerledikçe metal
          parçalarını say.
        courseB_starWars_prog5_da: |-
          Merdiven basamağı bulmacasındaki aynı çözüm yolunu kullanırsan ne olacağına bak:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6:
        courseB_starWars_prog6_a: Daha kısa kod için `tekrar et` bloğunu kullanmayı
          deneyin.
        courseB_starWars_prog6_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018:
        courseB_starWars_prog6_a: Daha kısa kod için `tekrar et` bloğunu kullanmayı
          deneyin.
        courseB_starWars_prog6_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2019:
        courseB_starWars_prog6_a: Daha kısa kod için `tekrar et` bloğunu kullanmayı
          deneyin.
        courseB_starWars_prog6_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7:
        courseB_starWars_prog7_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog7_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog7_c: Bu bulmacaya büyük bir merdiven basamağı çizmeyi
          deneyin. Metal yığınlarının hepsini kapsıyor mu?
      courseB_starWars_prog7_2018:
        courseB_starWars_prog7_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog7_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog7_c: Bu bulmacaya büyük bir merdiven basamağı çizmeyi
          deneyin. Metal yığınlarının hepsini kapsıyor mu?
      courseB_starWars_prog7_2019:
        courseB_starWars_prog7_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog7_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog7_c: Bu bulmacaya büyük bir merdiven basamağı çizmeyi
          deneyin. Metal yığınlarının hepsini kapsıyor mu?
      courseB_starWars_prog8:
        courseB_starWars_prog8_a: Zaten seyahat ettiğiniz bir dizi alana geri gitmek
          problem değil.
        courseB_starWars_prog8_b: İçindeki koda ne olduğunu görmek için `repeat` (tekrar)
          bloğunu kullanmayı deneyin
      courseB_starWars_prog8_2018:
        courseB_starWars_prog8_a: Zaten seyahat ettiğiniz bir dizi alana geri gitmek
          problem değil.
        courseB_starWars_prog8_b: İçindeki koda ne olduğunu görmek için `repeat` (tekrar)
          bloğunu kullanmayı deneyin
      courseB_starWars_prog8_2019:
        courseB_starWars_prog8_a: Zaten seyahat ettiğiniz bir dizi alana geri gitmek
          problem değil.
        courseB_starWars_prog8_b: İçindeki koda ne olduğunu görmek için `repeat` (tekrar)
          bloğunu kullanmayı deneyin
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
        courseB_starWars_prog9_b: Bu bulmacayı çözmek için bir çok yol vardır!
        courseB_starWars_prog9_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
        courseB_starWars_prog9_b: Bu bulmacayı çözmek için bir çok yol vardır!
        courseB_starWars_prog9_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
        courseB_starWars_prog9_b: Bu bulmacayı çözmek için bir çok yol vardır!
        courseB_starWars_prog9_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC19_playLab_EOC1:
        courseE_playLab_scaffold1_a: "'ayarla aktör 1 ??? görünümüne' bloku sahneye
          aktör eklemek için kullanılabilir."
        courseE_playLab_scaffold1_b: Aktörünüzün programınız başladığında görünmesi
          için 'çalıştığı zaman' bloğunun altına 'aktörü ayarla' bloğu ekleyin.
        courseE_playLab_scaffold1_c: Sahnenizin arka planını seçmek için '??? arka
          planı ayarla' bloğunu kullanın.
      courseC19_playLab_EOC2:
        courseE_playLab_scaffold1_b: Her birinin altında bir yöne taşıyacak şekilde
          4 adet 'ne zaman ok' olay blokuna sahip olmalısın.
        courseE_playLab_scaffold1_c: Yaptığında kahramanını yön ok tuşlarıyla hareket
          ettirebilmelisin!
      courseC19_playLab_EOC4:
        courseE_playLab_scaffold4_a: Bir puan eklemek için 'skor puanı' ve bir puan
          çıkarmak için 'puanı sil' kullanın.
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          Blokların ikisini 'Çalıştığı zaman'(when run) bloğuna ekle:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Konuşan karakteri değiştirmek için bloğun üzerindeki
          açılır menüyü kullan.
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          Blokların ikisini 'Çalıştığı zaman'(when run) bloğuna ekle:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Konuşan karakteri değiştirmek için bloğun üzerindeki
          açılır menüyü kullan.
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          Blokların ikisini 'Çalıştığı zaman'(when run) bloğuna ekle:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Konuşan karakteri değiştirmek için bloğun üzerindeki
          açılır menüyü kullan.
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_b: Araç kutusunda, karakteri hareket ettirebilecek
          bir blok var mı?
        courseC_PlayLab_events3_c: |-
          Bu bloğu, 'Çalıştığı Zaman' bloğuna ekle:
          <xml>
          <block type="studio_moveDistance">

          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_b: Araç kutusunda, karakteri hareket ettirebilecek
          bir blok var mı?
        courseC_PlayLab_events3_c: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_b: Araç kutusunda, karakteri hareket ettirebilecek
          bir blok var mı?
        courseC_PlayLab_events3_c: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_b: İşe yaradığını kontrol etmek için programı çalıştırdığınızda
          Octavia' ya tıklayın!
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_b: İşe yaradığını kontrol etmek için programı çalıştırdığınızda
          Octavia' ya tıklayın!
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_b: İşe yaradığını kontrol etmek için programı çalıştırdığınızda
          Octavia' ya tıklayın!
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: Her bir yeşil "ne zaman ok" bloğunun altında bir
          eylem olmalıdır.
        courseC_PlayLab_events6_b: "' taşı aktör 1' bloğunun üzerindeki açılır menüyü
          Waddles aktörünün hangi yöne gideceğini belirlemek için kullan."
        courseC_PlayLab_events6_c: İşiniz bittiğinde, Waddles' ı hareket ettirmek
          için bilgisayarınızdaki yön tuşlarını kullanabileceksiniz!
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: Her bir yeşil "ne zaman ok" bloğunun altında bir
          eylem olmalıdır.
        courseC_PlayLab_events6_b: "' taşı aktör 1' bloğunun üzerindeki açılır menüyü
          Waddles aktörünün hangi yöne gideceğini belirlemek için kullan."
        courseC_PlayLab_events6_c: İşiniz bittiğinde, Waddles' ı hareket ettirmek
          için bilgisayarınızdaki yön tuşlarını kullanabileceksiniz!
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: Her bir yeşil "ne zaman ok" bloğunun altında bir
          eylem olmalıdır.
        courseC_PlayLab_events6_b: "' taşı aktör 1' bloğunun üzerindeki açılır menüyü
          Waddles aktörünün hangi yöne gideceğini belirlemek için kullan."
        courseC_PlayLab_events6_c: İşiniz bittiğinde, Waddles' ı hareket ettirmek
          için bilgisayarınızdaki yön tuşlarını kullanabileceksiniz!
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_b: "'sürekli tekrarla' bloğunun başka herhangi bir
          olay bloğuna bağlanması gerekmez: 'sürekli tekrarla' bloğu kendi başına
          çalışır."
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_b: "'sürekli tekrarla' bloğunun başka herhangi bir
          olay bloğuna bağlanması gerekmez: 'sürekli tekrarla' bloğu kendi başına
          çalışır."
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_b: "'sürekli tekrarla' bloğunun başka herhangi bir
          olay bloğuna bağlanması gerekmez: 'sürekli tekrarla' bloğu kendi başına
          çalışır."
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_b: Yeni 'aktör dokunduğunda' bloğunuzun aktör  **1**
          ve aktör **3** dediğinden emin olun.
        courseC_PlayLab_events9_c: Çalışma alanında aynı anda birden fazla \`aktör
          dokunduğunda' olay bloğu kullanabilirsin, bu sebeple ilkini silmene gerek
          yok!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_b: Yeni 'aktör dokunduğunda' bloğunuzun aktör  **1**
          ve aktör **3** dediğinden emin olun.
        courseC_PlayLab_events9_c: Çalışma alanında aynı anda birden fazla \`aktör
          dokunduğunda' olay bloğu kullanabilirsin, bu sebeple ilkini silmene gerek
          yok!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_b: Yeni 'aktör dokunduğunda' bloğunuzun aktör  **1**
          ve aktör **3** dediğinden emin olun.
        courseC_PlayLab_events9_c: Çalışma alanında aynı anda birden fazla \`aktör
          dokunduğunda' olay bloğu kullanabilirsin, bu sebeple ilkini silmene gerek
          yok!
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_b: Bulmacayı çözmek için`çalıştığı zaman` olay bloğunu
          çalışma alanına sürüklemeye ihtiyacın olacak.
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_b: Bulmacayı çözmek için`çalıştığı zaman` olay bloğunu
          çalışma alanına sürüklemeye ihtiyacın olacak.
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_b: Bulmacayı çözmek için`çalıştığı zaman` olay bloğunu
          çalışma alanına sürüklemeye ihtiyacın olacak.
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_b: Bulmacayı çözmek için`çalıştığı zaman` olay bloğunu
          çalışma alanına sürüklemeye ihtiyacın olacak.
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          Oyuncuları oyun alanında farklı yerlere taşımak için bu bloğu kullanabilirsiniz.
          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Diğer aktörlerden biri dokunursa 'Aktör
          1 sol orta konuma ayarla' blokunu kullanmayı deneyin. Bu oyunu yeniden başlatacaktır
          böylece kullanıcı denemeye devam edebilir!
        courseC_PlayLab_events_challenge_c: |-
          Oyunu daha kolay ya da daha mücadele dolu yapmak için farklı karakterlerin hızlarını değiştirebilirsin!
          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          Oyuncuları oyun alanında farklı yerlere taşımak için bu bloğu kullanabilirsiniz.
          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Diğer aktörlerden biri dokunursa 'Aktör
          1 sol orta konuma ayarla' blokunu kullanmayı deneyin. Bu oyunu yeniden başlatacaktır
          böylece kullanıcı denemeye devam edebilir!
        courseC_PlayLab_events_challenge_c: |-
          Oyunu daha kolay ya da daha mücadele dolu yapmak için farklı karakterlerin hızlarını değiştirebilirsin!
          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          Oyuncuları oyun alanında farklı yerlere taşımak için bu bloğu kullanabilirsiniz.
          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Diğer aktörlerden biri dokunursa 'Aktör
          1 sol orta konuma ayarla' blokunu kullanmayı deneyin. Bu oyunu yeniden başlatacaktır
          böylece kullanıcı denemeye devam edebilir!
        courseC_PlayLab_events_challenge_c: |-
          Oyunu daha kolay ya da daha mücadele dolu yapmak için farklı karakterlerin hızlarını değiştirebilirsin!
          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: Döngüde herhangi bir değişiklik yapman gerekmiyor,
          sadece döngünün üstüne bir blok koy.
        courseC_artist_loop1_b: |-
          Bir desen atamak için ihtiyacın olan blok bu:
          <xml>
          <block type="draw_line_style_pattern">

          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          İstediğin herhangi bir deseni seç!
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: Döngüde herhangi bir değişiklik yapman gerekmiyor,
          sadece döngünün üstüne bir blok koy.
        courseC_artist_loop1_b: |-
          Bir desen atamak için ihtiyacın olan blok bu:
          <xml>
          <block type="draw_line_style_pattern">

          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          İstediğin herhangi bir deseni seç!
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: Döngüde herhangi bir değişiklik yapman gerekmiyor,
          sadece döngünün üstüne bir blok koy.
        courseC_artist_loop1_b: |-
          Bir desen atamak için ihtiyacın olan blok bu:
          <xml>
          <block type="draw_line_style_pattern">

          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          İstediğin herhangi bir deseni seç!
      courseC_artist_loops1a:
        courseC_artist_loops1a_a: |-
          İhtiyacın olan ilk blok bu:
          <xml>
          <block type="jump_to_xy">

          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Etiketi çizmek için bu bloğu kullan!
          <xml>
          <block type="sticker">

          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018:
        courseC_artist_loops1a_a: |-
          İhtiyacın olan ilk blok bu:
          <xml>
          <block type="jump_to_xy">

          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Etiketi çizmek için bu bloğu kullan!
          <xml>
          <block type="sticker">

          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2019:
        courseC_artist_loops1a_a: |-
          İhtiyacın olan ilk blok bu:
          <xml>
          <block type="jump_to_xy">

          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Etiketi çizmek için bu bloğu kullan!
          <xml>
          <block type="sticker">

          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops2a:
        courseC_artist_loops2a_a: Döngünün içinde 200 yukarı 200 aşağı zıplamalı,
          ardından kuş etiketi çizip 30 derece dönmelisin.
        courseC_artist_loops2a_b: Kaç defa tekrar edeceğini değiştirmek için 'tekrarla'
          döngüsünün üstündeki sayıya tıkla.
      courseC_artist_loops2a_2018:
        courseC_artist_loops2a_a: Döngünün içinde 200 yukarı 200 aşağı zıplamalı,
          ardından kuş etiketi çizip 30 derece dönmelisin.
        courseC_artist_loops2a_b: Kaç defa tekrar edeceğini değiştirmek için 'tekrarla'
          döngüsünün üstündeki sayıya tıkla.
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_a: Döngünün içinde 200 yukarı 200 aşağı zıplamalı,
          ardından kuş etiketi çizip 30 derece dönmelisin.
        courseC_artist_loops2a_b: Kaç defa tekrar edeceğini değiştirmek için 'tekrarla'
          döngüsünün üstündeki sayıya tıkla.
      courseC_artist_loops3a:
        courseC_artist_loops3a_a: Kuş etiketinden sonra, döngünün içine yalnızca bir
          blok eklemek isteyeceksin.
        courseC_artist_loops3a_b: Yarasa etiketini bulmak için 'etiket çiz' bloğunun
          üzerindeki açılır menüyü kullan.
      courseC_artist_loops3a_2018:
        courseC_artist_loops3a_a: Kuş etiketinden sonra, döngünün içine yalnızca bir
          blok eklemek isteyeceksin.
        courseC_artist_loops3a_b: Yarasa etiketini bulmak için 'etiket çiz' bloğunun
          üzerindeki açılır menüyü kullan.
      courseC_artist_loops3a_2019:
        courseC_artist_loops3a_a: Kuş etiketinden sonra, döngünün içine yalnızca bir
          blok eklemek isteyeceksin.
        courseC_artist_loops3a_b: Yarasa etiketini bulmak için 'etiket çiz' bloğunun
          üzerindeki açılır menüyü kullan.
      courseC_artist_loops4a:
        courseC_artist_loops4a_a: |-
          İleri atlamak için bu bloğu kullan:
          <xml>
          <block type="jump_by_constant">

          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          Ne kadar uzunlukta olacağını değiştirmeyi unutma!
      courseC_artist_loops4a_2018:
        courseC_artist_loops4a_a: |-
          İleri atlamak için bu bloğu kullan:
          <xml>
          <block type="jump_by_constant">

          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          Ne kadar uzunlukta olacağını değiştirmeyi unutma!
      courseC_artist_loops4a_2019:
        courseC_artist_loops4a_a: |-
          İleri atlamak için bu bloğu kullan:
          <xml>
          <block type="jump_by_constant">

          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          Ne kadar uzunlukta olacağını değiştirmeyi unutma!
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: "'etiket çiz' bloklarının resimlerini değiştirmek
          için üzerlerindeki açılır menüleri kullan."
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: "'etiket çiz' bloklarının resimlerini değiştirmek
          için üzerlerindeki açılır menüleri kullan."
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: "'etiket çiz' bloklarının resimlerini değiştirmek
          için üzerlerindeki açılır menüleri kullan."
      courseC_artist_loops5b:
        courseC_artist_loops5b_a: |-
          Çizgilerinin desenini ayarlamak için bu bloğu kullan:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Yukarıdaki gibi bir tasarım oluşturmak için, ileriye
          gittiğin kadar mesafede geriye gitmek isteyeceksin.
      courseC_artist_loops5b_2018:
        courseC_artist_loops5b_a: |-
          Çizgilerinin desenini ayarlamak için bu bloğu kullan:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Yukarıdaki gibi bir tasarım oluşturmak için, ileriye
          gittiğin kadar mesafede geriye gitmek isteyeceksin.
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_a: |-
          Çizgilerinin desenini ayarlamak için bu bloğu kullan:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Yukarıdaki gibi bir tasarım oluşturmak için, ileriye
          gittiğin kadar mesafede geriye gitmek isteyeceksin.
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: Yukarıdaki gibi bir tasarım oluşturmak için her
          etiketin arasında 75 pikselden daha az olacak şekilde ileriye atla.
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: Yukarıdaki gibi bir tasarım oluşturmak için her
          etiketin arasında 75 pikselden daha az olacak şekilde ileriye atla.
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: Yukarıdaki gibi bir tasarım oluşturmak için her
          etiketin arasında 75 pikselden daha az olacak şekilde ileriye atla.
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: Dairenin iç açısı 360 derece olduğundan, dönüşteki
          açı değeri ve döngü sayının çarpımı 360'a eşit olmalıdır. Bunun nasıl çalıştığını
          görmek için önerilen rotayı kontrol edin!
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: Dairenin iç açısı 360 derece olduğundan, dönüşteki
          açı değeri ve döngü sayının çarpımı 360'a eşit olmalıdır. Bunun nasıl çalıştığını
          görmek için önerilen rotayı kontrol edin!
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: Dairenin iç açısı 360 derece olduğundan, dönüşteki
          açı değeri ve döngü sayının çarpımı 360'a eşit olmalıdır. Bunun nasıl çalıştığını
          görmek için önerilen rotayı kontrol edin!
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: Döngünüzün içine 'dön' bloğunu koymayı unutmayın.
        courseC_artist_loopsPre1a_b: "'Tekrarla' döngüsünün 3 bloğu içermesi gerekirdi:
          '200 yukarı 200 aşağı atla', '50 piksel ilerle' ve '60 derece sağa dön'."
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: Döngünüzün içine 'dön' bloğunu koymayı unutmayın.
        courseC_artist_loopsPre1a_b: "'Tekrarla' döngüsünün 3 bloğu içermesi gerekirdi:
          '200 yukarı 200 aşağı atla', '50 piksel ilerle' ve '60 derece sağa dön'."
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: Döngünüzün içine 'dön' bloğunu koymayı unutmayın.
        courseC_artist_loopsPre1a_b: "'Tekrarla' döngüsünün 3 bloğu içermesi gerekirdi:
          '200 yukarı 200 aşağı atla', '50 piksel ilerle' ve '60 derece sağa dön'."
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          İhtiyaç duyacağın ilk blok budur:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: '50 piksel ilerlemek için bu bloğu kullanın:
          <https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27>
          AM.png'
      courseC_artist_loopsPrePre1a_2018:
        courseC_artist_loopsPrePre1a_a: |-
          İhtiyaç duyacağın ilk blok budur:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: '50 piksel ilerlemek için bu bloğu kullanın:
          <https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27>
          AM.png'
      courseC_artist_loopsPrePre1a_2019:
        courseC_artist_loopsPrePre1a_a: |-
          İhtiyaç duyacağın ilk blok budur:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: '50 piksel ilerlemek için bu bloğu kullanın:
          <https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27>
          AM.png'
      courseC_artist_prog2:
        courseC_artist_prog2_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan,
          otomatik olarak bir çizgi çizeceğim.
        courseC_artist_prog2_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece
          sağa dön` bloğunu kullanın.
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan,
          otomatik olarak bir çizgi çizeceğim.
        courseC_artist_prog2_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece
          sağa dön` bloğunu kullanın.
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan,
          otomatik olarak bir çizgi çizeceğim.
        courseC_artist_prog2_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece
          sağa dön` bloğunu kullanın.
      courseC_artist_prog3:
        courseC_artist_prog3_b: Daha kısa kodla yapmak ister misin? Bu bulmacada 'Tekrar'
          (repeat) döngüsü kullanmayı deneyin.
      courseC_artist_prog3_2018:
        courseC_artist_prog3_b: Daha kısa kodla yapmak ister misin? Bu bulmacada 'Tekrar'
          (repeat) döngüsü kullanmayı deneyin.
      courseC_artist_prog3_2019:
        courseC_artist_prog3_b: Daha kısa kodla yapmak ister misin? Bu bulmacada 'Tekrar'
          (repeat) döngüsü kullanmayı deneyin.
      courseC_artist_prog4:
        courseC_artist_prog4_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog4_c: |-
          Bir üçgen çizmek için:

          -   ilerle
          -   120 derece sola dön
          -   ilerle
          -   120 derece sola dön
          -   ilerle
      courseC_artist_prog4_2018:
        courseC_artist_prog4_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog4_c: |-
          Bir üçgen çizmek için:

          -   ilerle
          -   120 derece sola dön
          -   ilerle
          -   120 derece sola dön
          -   ilerle
      courseC_artist_prog4_2019:
        courseC_artist_prog4_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog4_c: |-
          Bir üçgen çizmek için:

          -   ilerle
          -   120 derece sola dön
          -   ilerle
          -   120 derece sola dön
          -   ilerle
      courseC_artist_prog5:
        courseC_artist_prog5_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_artist_prog5_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog5_d: Her sağa dönüş 90 derece olmalıdır.
      courseC_artist_prog5_2018:
        courseC_artist_prog5_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_artist_prog5_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog5_d: Her sağa dönüş 90 derece olmalıdır.
      courseC_artist_prog5_2019:
        courseC_artist_prog5_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_artist_prog5_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog5_d: Her sağa dönüş 90 derece olmalıdır.
      courseC_artist_prog7:
        courseC_artist_prog7_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog7_d: |-
          Bu kodu 2 kere tekrar etmelisin:

          -   ilerle
          -   sağa 45 derece dön
          -   ilerle
          -   sağa 90 derece dön
          -   ilerle
          -   sağa 45 derece dön
        courseC_artist_prog7_e: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_artist_prog7_2018:
        courseC_artist_prog7_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog7_d: |-
          Bu kodu 2 kere tekrar etmelisin:

          -   ilerle
          -   sağa 45 derece dön
          -   ilerle
          -   sağa 90 derece dön
          -   ilerle
          -   sağa 45 derece dön
        courseC_artist_prog7_e: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_artist_prog7_2019:
        courseC_artist_prog7_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu
          üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog7_d: |-
          Bu kodu 2 kere tekrar etmelisin:

          -   ilerle
          -   sağa 45 derece dön
          -   ilerle
          -   sağa 90 derece dön
          -   ilerle
          -   sağa 45 derece dön
        courseC_artist_prog7_e: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: Bunu ortasından bir çizgi geçen bir dikdörtgen
          olarak veya iki farklı kare olarak çizebilirsiniz!
      courseC_artist_prog_challenge1_2018:
        courseC_artist_prog_challenge1_a: Bunu ortasından bir çizgi geçen bir dikdörtgen
          olarak veya iki farklı kare olarak çizebilirsiniz!
      courseC_artist_prog_challenge1_2019:
        courseC_artist_prog_challenge1_a: Bunu ortasından bir çizgi geçen bir dikdörtgen
          olarak veya iki farklı kare olarak çizebilirsiniz!
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: İlk satırı çizdikten sonra, ikinci satırı
          çizmeden önce sola dönmeyi deneyin.
        courseC_artist_prog_challenge2_b: İkinci satırı çizdikten sonra, üçüncü satırı
          çizmeden önce sağa dönmeyi deneyin.
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: İlk satırı çizdikten sonra, ikinci satırı
          çizmeden önce sola dönmeyi deneyin.
        courseC_artist_prog_challenge2_b: İkinci satırı çizdikten sonra, üçüncü satırı
          çizmeden önce sağa dönmeyi deneyin.
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: İlk satırı çizdikten sonra, ikinci satırı
          çizmeden önce sola dönmeyi deneyin.
        courseC_artist_prog_challenge2_b: İkinci satırı çizdikten sonra, üçüncü satırı
          çizmeden önce sağa dönmeyi deneyin.
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece \`topla 'blokları
          bitmez!
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece \`topla 'blokları
          bitmez!
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece \`topla 'blokları
          bitmez!
      courseC_collector_prog1:
        courseC_collector_prog1_a: Hazinenin olduğu bir alan üzerinde duruyorsan,
          hazineyi toplamak için 'topla' <xml><block type="collector_collect"/></xml>bloğunu
          kullan.
        courseC_collector_prog1_b: En basit çözüm, bir defa ilerleyip sonra hazineyi
          toplamak olacak.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: Hazinenin olduğu bir alan üzerinde duruyorsan,
          hazineyi toplamak için 'topla' <xml><block type="collector_collect"/></xml>bloğunu
          kullan.
        courseC_collector_prog1_b: En basit çözüm, bir defa ilerleyip sonra hazineyi
          toplamak olacak.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: Hazinenin olduğu bir alan üzerinde duruyorsan,
          hazineyi toplamak için 'topla' <xml><block type="collector_collect"/></xml>bloğunu
          kullan.
        courseC_collector_prog1_b: En basit çözüm, bir defa ilerleyip sonra hazineyi
          toplamak olacak.
      courseC_collector_prog2:
        courseC_collector_prog2_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_collector_prog2_2018:
        courseC_collector_prog2_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_collector_prog2_2019:
        courseC_collector_prog2_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_collector_prog3:
        courseC_collector_prog3_c: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız,
          yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_collector_prog3_2018:
        courseC_collector_prog3_c: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız,
          yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_collector_prog3_2019:
        courseC_collector_prog3_c: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız,
          yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_collector_prog4:
        courseC_collector_prog4_a: Zorlandığınız durumlarda, adımları bir kağıt parçası
          üzerine yazmayı deneyin.
        courseC_collector_prog4_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_collector_prog4_c: Bir yol için bu seçeneği deneyin.
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: Zorlandığınız durumlarda, adımları bir kağıt parçası
          üzerine yazmayı deneyin.
        courseC_collector_prog4_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_collector_prog4_c: Bir yol için bu seçeneği deneyin.
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: Zorlandığınız durumlarda, adımları bir kağıt parçası
          üzerine yazmayı deneyin.
        courseC_collector_prog4_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_collector_prog4_c: Bir yol için bu seçeneği deneyin.
      courseC_collector_prog5:
        courseC_collector_prog5_c: Zorlandığınız durumlarda, adımları bir kağıt parçası
          üzerine yazmayı deneyin.
        courseC_collector_prog5_d: Hazineyi toplamak için yolu takip edin.
      courseC_collector_prog5_2018:
        courseC_collector_prog5_c: Zorlandığınız durumlarda, adımları bir kağıt parçası
          üzerine yazmayı deneyin.
        courseC_collector_prog5_d: Hazineyi toplamak için yolu takip edin.
      courseC_collector_prog5_2019:
        courseC_collector_prog5_c: Zorlandığınız durumlarda, adımları bir kağıt parçası
          üzerine yazmayı deneyin.
        courseC_collector_prog5_d: Hazineyi toplamak için yolu takip edin.
      courseC_collector_prog6:
        courseC_collector_prog6_b: Takıldın mı? Hazineyi toplamak için bu yolu dene.
      courseC_collector_prog6_2018:
        courseC_collector_prog6_b: Takıldın mı? Hazineyi toplamak için bu yolu dene.
      courseC_collector_prog6_2019:
        courseC_collector_prog6_b: Takıldın mı? Hazineyi toplamak için bu yolu dene.
      courseC_collector_prog7:
        courseC_collector_prog7_c: Bütün hazineleri toplamak için bir rota görmekte
          zorluk mu yaşıyorsunuz? Bu yolu deneyin!
      courseC_collector_prog7_2018:
        courseC_collector_prog7_c: Bütün hazineleri toplamak için bir rota görmekte
          zorluk mu yaşıyorsunuz? Bu yolu deneyin!
      courseC_collector_prog7_2019:
        courseC_collector_prog7_c: Bütün hazineleri toplamak için bir rota görmekte
          zorluk mu yaşıyorsunuz? Bu yolu deneyin!
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
        courseC_collector_prog_challenge1_b: Yolunuzu mu kaybettiniz? Bulmacayı çözmek
          için bu yolu deneyin!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
        courseC_collector_prog_challenge1_b: Yolunuzu mu kaybettiniz? Bulmacayı çözmek
          için bu yolu deneyin!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık
          "toplama" komutunu kullanabilirsiniz.
        courseC_collector_prog_challenge1_b: Yolunuzu mu kaybettiniz? Bulmacayı çözmek
          için bu yolu deneyin!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: 'Eklemen gereken blok, ''hızı ayarla'' bloğudur. '
        courseC_flappy_events2_b: Bulmacayı çözmek için 'hızı ayarla' bloğunu 'çalıştığı
          zaman' bloğuna bağla.
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: 'Eklemen gereken blok, ''hızı ayarla'' bloğudur. '
        courseC_flappy_events2_b: Bulmacayı çözmek için 'hızı ayarla' bloğunu 'çalıştığı
          zaman' bloğuna bağla.
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: 'Eklemen gereken blok, ''hızı ayarla'' bloğudur. '
        courseC_flappy_events2_b: Bulmacayı çözmek için 'hızı ayarla' bloğunu 'çalıştığı
          zaman' bloğuna bağla.
      courseC_flappy_events3:
        courseC_flappy_events3_a: Eğer bir şeyler doğru çalışmazsa, bloklarının çalışma
          alanındaki doğru olaylarla bağlandığına emin ol.
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: Eğer bir şeyler doğru çalışmazsa, bloklarının çalışma
          alanındaki doğru olaylarla bağlandığına emin ol.
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: Eğer bir şeyler doğru çalışmazsa, bloklarının çalışma
          alanındaki doğru olaylarla bağlandığına emin ol.
      courseC_flappy_events4:
        courseC_flappy_events4_a: Bulmacayı çözmek için 'oyunu sonlandır' bloğunu
          'bir engele çarptığı zaman' bloğuna bağla.
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: Bulmacayı çözmek için 'oyunu sonlandır' bloğunu
          'bir engele çarptığı zaman' bloğuna bağla.
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: Bulmacayı çözmek için 'oyunu sonlandır' bloğunu
          'bir engele çarptığı zaman' bloğuna bağla.
      courseC_flappy_events5:
        courseC_flappy_events5_a: Bu seviyeyi geçmek için 'puan al' bloğunu kullanman
          gerekecek.
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: Bu seviyeyi geçmek için 'puan al' bloğunu kullanman
          gerekecek.
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: Bu seviyeyi geçmek için 'puan al' bloğunu kullanman
          gerekecek.
      courseC_flappy_events6:
        courseC_flappy_events6_a: "`____ kadar kanat çırp`bloğunu`tıkladığında` bloğuna
          bağlamaya çalışın."
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: "`____ kadar kanat çırp`bloğunu`tıkladığında` bloğuna
          bağlamaya çalışın."
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: "`____ kadar kanat çırp`bloğunu`tıkladığında` bloğuna
          bağlamaya çalışın."
      courseC_flappy_events7:
        courseC_flappy_events7_a: "'Sahneyi ayarla' bloğunu kullanarak arka planı
          değiştirebilirsin. "
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: "'Sahneyi ayarla' bloğunu kullanarak arka planı
          değiştirebilirsin. "
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: "'Sahneyi ayarla' bloğunu kullanarak arka planı
          değiştirebilirsin. "
      courseC_flappy_events8:
        courseC_flappy_events8_a: Bu seviyeyi geçmek için ikinci 'sahneyi ayarla'
          bloğunu 'engeli geçtiği zaman' bloğunun altına eklemeyi dene.
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: Bu seviyeyi geçmek için ikinci 'sahneyi ayarla'
          bloğunu 'engeli geçtiği zaman' bloğunun altına eklemeyi dene.
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: Bu seviyeyi geçmek için ikinci 'sahneyi ayarla'
          bloğunu 'engeli geçtiği zaman' bloğunun altına eklemeyi dene.
      courseC_flappy_events9:
        courseC_flappy_events9_a: Bu seviyeyi geçmek için 'puanı 0 yap' bloğunu 'bir
          engele çarptığında' bloğuna bağla.
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: Bu seviyeyi geçmek için 'puanı 0 yap' bloğunu 'bir
          engele çarptığında' bloğuna bağla.
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: Bu seviyeyi geçmek için 'puanı 0 yap' bloğunu 'bir
          engele çarptığında' bloğuna bağla.
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: Bir balkabağına geldikten sonra, onu toplamak
          için <xml><block type="harvester_pumpkin"/></xml> bloğunu kullanın.
        courseC_harvester_loops1_b: Alandan birden fazla balkabağı toplamak için 'Balkabağı
          topla' <xml><block type="harvester_pumpkin"/></xml>bloğunun etrafına bir
          'tekrarla' bloğu ekleyebilirsin.
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: Bir balkabağına geldikten sonra, onu toplamak
          için <xml><block type="harvester_pumpkin"/></xml> bloğunu kullanın.
        courseC_harvester_loops1_b: Alandan birden fazla balkabağı toplamak için 'Balkabağı
          topla' <xml><block type="harvester_pumpkin"/></xml>bloğunun etrafına bir
          'tekrarla' bloğu ekleyebilirsin.
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: Bir balkabağına geldikten sonra, onu toplamak
          için <xml><block type="harvester_pumpkin"/></xml> bloğunu kullanın.
        courseC_harvester_loops1_b: Alandan birden fazla balkabağı toplamak için 'Balkabağı
          topla' <xml><block type="harvester_pumpkin"/></xml>bloğunun etrafına bir
          'tekrarla' bloğu ekleyebilirsin.
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı deneyin ve tekrar eden adımları bulun.
        courseC_harvester_loops2_b: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız
          olacak.
        courseC_harvester_loops2_c: Bir döngü 'ilerle' komutunu tekrar edecek, ve
          diğeri de 'balkabağı topla' komutunu tekrarlayacak.
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı deneyin ve tekrar eden adımları bulun.
        courseC_harvester_loops2_b: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız
          olacak.
        courseC_harvester_loops2_c: Bir döngü 'ilerle' komutunu tekrar edecek, ve
          diğeri de 'balkabağı topla' komutunu tekrarlayacak.
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı deneyin ve tekrar eden adımları bulun.
        courseC_harvester_loops2_b: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız
          olacak.
        courseC_harvester_loops2_c: Bir döngü 'ilerle' komutunu tekrar edecek, ve
          diğeri de 'balkabağı topla' komutunu tekrarlayacak.
      courseC_harvester_loops3:
        courseC_harvester_loops3_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_harvester_loops3_b: İlk balkabakları için son bulmacadakine çok benzer
          kodlar kullanabilirsin. Devamında hangi yola dönmeli?
        courseC_harvester_loops3_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_harvester_loops3_b: İlk balkabakları için son bulmacadakine çok benzer
          kodlar kullanabilirsin. Devamında hangi yola dönmeli?
        courseC_harvester_loops3_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_harvester_loops3_b: İlk balkabakları için son bulmacadakine çok benzer
          kodlar kullanabilirsin. Devamında hangi yola dönmeli?
        courseC_harvester_loops3_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: Mısır toplamak için yeni 'mısır topla' bloğunu
          kullan.
        courseC_harvester_loops4_b: Kodlarında birden fazla tekrarla döngüsü kullanabilirsin,
          bazıları mısır toplamak için, bazıları da balkabaklarını toplamak için.
        courseC_harvester_loops4_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: Mısır toplamak için yeni 'mısır topla' bloğunu
          kullan.
        courseC_harvester_loops4_b: Kodlarında birden fazla tekrarla döngüsü kullanabilirsin,
          bazıları mısır toplamak için, bazıları da balkabaklarını toplamak için.
        courseC_harvester_loops4_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: Mısır toplamak için yeni 'mısır topla' bloğunu
          kullan.
        courseC_harvester_loops4_b: Kodlarında birden fazla tekrarla döngüsü kullanabilirsin,
          bazıları mısır toplamak için, bazıları da balkabaklarını toplamak için.
        courseC_harvester_loops4_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı ve tekrar eden desenleri bulmayı deneyin.
        courseC_harvester_loops5_b: Bu merdiven basamağı diğer bulmacalarla benzerlik
          gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca bitkileri toplamayı
          unutmayın.
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı ve tekrar eden desenleri bulmayı deneyin.
        courseC_harvester_loops5_b: Bu merdiven basamağı diğer bulmacalarla benzerlik
          gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca bitkileri toplamayı
          unutmayın.
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: Zorlandığınız durumlarda, adımları kağıt üzerinde
          yazmayı ve tekrar eden desenleri bulmayı deneyin.
        courseC_harvester_loops5_b: Bu merdiven basamağı diğer bulmacalarla benzerlik
          gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca bitkileri toplamayı
          unutmayın.
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: Bir tekrarla döngüsü içine birden fazla blok ekleyebileceğini
          unutma.
        courseC_harvester_loops6_b: Mısır sırasının sonunda dönmeyi unutma.
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: Bir tekrarla döngüsü içine birden fazla blok ekleyebileceğini
          unutma.
        courseC_harvester_loops6_b: Mısır sırasının sonunda dönmeyi unutma.
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: Bir tekrarla döngüsü içine birden fazla blok ekleyebileceğini
          unutma.
        courseC_harvester_loops6_b: Mısır sırasının sonunda dönmeyi unutma.
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: Bu bulmacayı iki yolla çözebilirsin, ilk olarak
          balkabaklarını ya da mısırları alabilirsin.
        courseC_harvester_loops7_b: Bu bulmacayı çözmek için birden fazla 'tekrarla'
          döngüsüne ihtiyacın olacak.
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: Bu bulmacayı iki yolla çözebilirsin, ilk olarak
          balkabaklarını ya da mısırları alabilirsin.
        courseC_harvester_loops7_b: Bu bulmacayı çözmek için birden fazla 'tekrarla'
          döngüsüne ihtiyacın olacak.
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: Bu bulmacayı iki yolla çözebilirsin, ilk olarak
          balkabaklarını ya da mısırları alabilirsin.
        courseC_harvester_loops7_b: Bu bulmacayı çözmek için birden fazla 'tekrarla'
          döngüsüne ihtiyacın olacak.
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: Bu merdiven basamağı önceki bulmacayla benzerlik
          gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca ekinleri toplamayı
          unutmayın.
        courseC_harvester_loops8_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: Bu merdiven basamağı önceki bulmacayla benzerlik
          gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca ekinleri toplamayı
          unutmayın.
        courseC_harvester_loops8_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: Bu merdiven basamağı önceki bulmacayla benzerlik
          gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca ekinleri toplamayı
          unutmayın.
        courseC_harvester_loops8_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan bunu yapmak çook zor!
        courseC_harvester_loops_challenge1_b: "`ilerle` ve `mısır al`ı ihtiyacın olduğu
          kadar tekrar edip, her köşede `sağa dön` yapabilirsin."
        courseC_harvester_loops_challenge1_c: "İlk dört mısırı toplamanın en iyi yolu,
          'tekrarla' bloğunun içinde başka bir 'tekrarla' bloğunu kullanmaktır. Bu
          deseni bulmacanın geri kalanı için de kullanabilirsin. \n\n<xml>\n<block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n<next>\n<block
          type=\"controls_repeat\">\n<title name=\"TIMES\">2</title>\n<statement name=\"DO\">\n<block
          type=\"controls_repeat\">\n<title name=\"TIMES\">2</title>\n<statement name=\"DO\">\n<block
          type=\"maze_move\">\n<title name=\"DIR\">moveForward</title>\n<next>\n<block
          type=\"harvester_corn\"/>\n</next>\n</block>\n</statement>\n<next>\n<block
          type=\"maze_turn\">\n<title name=\"DIR\">turnRight</title>\n</block>\n</next>\n</block>\n</statement>\n</block></next></block></xml>"
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan bunu yapmak çook zor!
        courseC_harvester_loops_challenge1_b: "`ilerle` ve `mısır al`ı ihtiyacın olduğu
          kadar tekrar edip, her köşede `sağa dön` yapabilirsin."
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan bunu yapmak çook zor!
        courseC_harvester_loops_challenge1_b: "`ilerle` ve `mısır al`ı ihtiyacın olduğu
          kadar tekrar edip, her köşede `sağa dön` yapabilirsin."
        courseC_harvester_loops_challenge1_c: "İlk dört mısırı toplamanın en iyi yolu,
          'tekrarla' bloğunun içinde başka bir 'tekrarla' bloğunu kullanmaktır. Bu
          deseni bulmacanın geri kalanı için de kullanabilirsin. \n\n<xml>\n<block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n<next>\n<block
          type=\"controls_repeat\">\n<title name=\"TIMES\">2</title>\n<statement name=\"DO\">\n<block
          type=\"controls_repeat\">\n<title name=\"TIMES\">2</title>\n<statement name=\"DO\">\n<block
          type=\"maze_move\">\n<title name=\"DIR\">moveForward</title>\n<next>\n<block
          type=\"harvester_corn\"/>\n</next>\n</block>\n</statement>\n<next>\n<block
          type=\"maze_turn\">\n<title name=\"DIR\">turnRight</title>\n</block>\n</next>\n</block>\n</statement>\n</block></next></block></xml>"
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor.
          Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok
          farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul
          al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: "Sadece 20 blok ile bulmacayı bitirmek
          için bu zik-zak deseni iki kez tekrarlanabilir. \n\n![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52
          PM copy.png>)"
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor.
          Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok
          farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul
          al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: "Sadece 20 blok ile bulmacayı bitirmek
          için bu zik-zak deseni iki kez tekrarlanabilir. \n\n![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52
          PM copy.png>)"
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor.
          Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok
          farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul
          al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: "Sadece 20 blok ile bulmacayı bitirmek
          için bu zik-zak deseni iki kez tekrarlanabilir. \n\n![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52
          PM copy.png>)"
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_maze_debugging1:
        courseC_maze_debugging1_b: Bu bulmacayı tamamlamak için eklemeniz gereken
          1 blok var.
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_b: Bu bulmacayı tamamlamak için eklemeniz gereken
          1 blok var.
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_b: Bu bulmacayı tamamlamak için eklemeniz gereken
          1 blok var.
      courseC_maze_debugging2:
        courseC_maze_debugging2_c: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu
          görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_c: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu
          görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_c: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu
          görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging3:
        courseC_maze_debugging3_b: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu
          görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_b: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu
          görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_b: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu
          görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging4:
        courseC_maze_debugging4_b: Dönüşlerden biri, Scrat'ı yanlış yönde çeviriyor.
          Hangisi bulabilir misin?
      courseC_maze_debugging4_2018:
        courseC_maze_debugging4_b: Dönüşlerden biri, Scrat'ı yanlış yönde çeviriyor.
          Hangisi bulabilir misin?
      courseC_maze_debugging4_2019:
        courseC_maze_debugging4_b: Dönüşlerden biri, Scrat'ı yanlış yönde çeviriyor.
          Hangisi bulabilir misin?
      courseC_maze_debugging6:
        courseC_maze_debugging6_b: Bir kez hatayı bulup düzeltirsen ikinciyi bulmak
          için hata ayıklamaya yeniden başla. Program çalışana kadar işlemi tekrarlayın!
      courseC_maze_debugging6_2018:
        courseC_maze_debugging6_b: Bir kez hatayı bulup düzeltirsen ikinciyi bulmak
          için hata ayıklamaya yeniden başla. Program çalışana kadar işlemi tekrarlayın!
      courseC_maze_debugging6_2019:
        courseC_maze_debugging6_b: Bir kez hatayı bulup düzeltirsen ikinciyi bulmak
          için hata ayıklamaya yeniden başla. Program çalışana kadar işlemi tekrarlayın!
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde!
          Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir
          veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde!
          Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir
          veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde!
          Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir
          veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      courseC_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_b: Eğer takılırsan, kodundaki hataları ayıklamayı
          dene. Nerede işler yanlış gidiyor görebildin mi?
        courseC_maze_debugging_challenge2_c: |-
          'İlerle' ve dört dönüş kullanarak izleyebileceğiniz iki farklı yol var. 'Tekrarla' bloğunu kullanmanın bir yolunu bulursanız, daha da fazlası olabilir!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2018:
        courseC_maze_debugging_challenge2_b: Eğer takılırsan, kodundaki hataları ayıklamayı
          dene. Nerede işler yanlış gidiyor görebildin mi?
        courseC_maze_debugging_challenge2_c: |-
          'İlerle' ve dört dönüş kullanarak izleyebileceğiniz iki farklı yol var. 'Tekrarla' bloğunu kullanmanın bir yolunu bulursanız, daha da fazlası olabilir!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2019:
        courseC_maze_debugging_challenge2_b: Eğer takılırsan, kodundaki hataları ayıklamayı
          dene. Nerede işler yanlış gidiyor görebildin mi?
        courseC_maze_debugging_challenge2_c: |-
          'İlerle' ve dört dönüş kullanarak izleyebileceğiniz iki farklı yol var. 'Tekrarla' bloğunu kullanmanın bir yolunu bulursanız, daha da fazlası olabilir!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: Bu yolu iki farklı parça olarak düşünün.
          Her biri tekrar edebileceğin bir desene sahip.
        courseC_maze_loops_challenge1_b: Döngüleri bir merdiven desenini tekrar etmek
          için nasıl kullanacağını hatırlayabiliyor musun?
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: Bu yolu iki farklı parça olarak düşünün.
          Her biri tekrar edebileceğin bir desene sahip.
        courseC_maze_loops_challenge1_b: Döngüleri bir merdiven desenini tekrar etmek
          için nasıl kullanacağını hatırlayabiliyor musun?
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: Bu yolu iki farklı parça olarak düşünün.
          Her biri tekrar edebileceğin bir desene sahip.
        courseC_maze_loops_challenge1_b: Döngüleri bir merdiven desenini tekrar etmek
          için nasıl kullanacağını hatırlayabiliyor musun?
      courseC_maze_programming3:
        courseC_maze_programming3_b: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nKodlarının
          arasından bir bloğu silmek için, onun altındaki tüm kodları sağ tarafa doğru
          sürükle ve bir süreliğine çalışma alanında öylece durmalarını sağla. \n\nSilmek
          istediğin bloğa tıkla ve onu araç çubuğuna doğru sürükle (çalışma alanının
          solunda, \"Bloklar\" başlıklı bölüm).\n\nSon olarak, diğer bloklarını yeniden
          ait oldukları yere geri koy."
      courseC_maze_programming3_2018:
        courseC_maze_programming3_b: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nKodlarının
          arasından bir bloğu silmek için, onun altındaki tüm kodları sağ tarafa doğru
          sürükle ve bir süreliğine çalışma alanında öylece durmalarını sağla. \n\nSilmek
          istediğin bloğa tıkla ve onu araç çubuğuna doğru sürükle (çalışma alanının
          solunda, \"Bloklar\" başlıklı bölüm).\n\nSon olarak, diğer bloklarını yeniden
          ait oldukları yere geri koy."
      courseC_maze_programming3_2019:
        courseC_maze_programming3_b: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nKodlarının
          arasından bir bloğu silmek için, onun altındaki tüm kodları sağ tarafa doğru
          sürükle ve bir süreliğine çalışma alanında öylece durmalarını sağla. \n\nSilmek
          istediğin bloğa tıkla ve onu araç çubuğuna doğru sürükle (çalışma alanının
          solunda, \"Bloklar\" başlıklı bölüm).\n\nSon olarak, diğer bloklarını yeniden
          ait oldukları yere geri koy."
      courseC_maze_programming5:
        courseC_maze_programming5_b: Bu bulmacayı tamamlamak için kuşun bir tur yapması
          gerekecek. Hangi yoldan gideceğini bulabilir misin?
        courseC_maze_programming5_c: Çözümde, iki ileri hareket bloğu, bir dönüş bloğu
          ve iki ileri hareket bloğu daha olacak.
      courseC_maze_programming5_2018:
        courseC_maze_programming5_b: Bu bulmacayı tamamlamak için kuşun bir tur yapması
          gerekecek. Hangi yoldan gideceğini bulabilir misin?
        courseC_maze_programming5_c: Çözümde, iki ileri hareket bloğu, bir dönüş bloğu
          ve iki ileri hareket bloğu daha olacak.
      courseC_maze_programming5_2019:
        courseC_maze_programming5_b: Bu bulmacayı tamamlamak için kuşun bir tur yapması
          gerekecek. Hangi yoldan gideceğini bulabilir misin?
        courseC_maze_programming5_c: Çözümde, iki ileri hareket bloğu, bir dönüş bloğu
          ve iki ileri hareket bloğu daha olacak.
      courseC_maze_programming6:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Parmağınızı kuştan domuza takip edin, hangi adımları
          geçtiniz?
        courseC_maze_programming6_c: Kuş duvara dönük başladığı için, önce onu döndürmelisin.
        courseC_maze_programming6_d: Takılmış mı hissediyorsun? Bu yola bak!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Parmağınızı kuştan domuza takip edin, hangi adımları
          geçtiniz?
        courseC_maze_programming6_c: Kuş duvara dönük başladığı için, önce onu döndürmelisin.
        courseC_maze_programming6_d: Takılmış mı hissediyorsun? Bu yola bak!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Parmağınızı kuştan domuza takip edin, hangi adımları
          geçtiniz?
        courseC_maze_programming6_c: Kuş duvara dönük başladığı için, önce onu döndürmelisin.
        courseC_maze_programming6_d: Takılmış mı hissediyorsun? Bu yola bak!
      courseC_maze_programming7:
        courseC_maze_programming7_b: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız,
          yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_maze_programming7_2018:
        courseC_maze_programming7_b: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız,
          yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_maze_programming7_2019:
        courseC_maze_programming7_b: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız,
          yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_maze_programming8:
        courseC_maze_programming8_a: Zorlandığınız durumlarda, kod bloklarınızı satır
          satır  incelemek için adım düğmesini kullanabileceğinizi unutmayın.
        courseC_maze_programming8_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: Zorlandığınız durumlarda, kod bloklarınızı satır
          satır  incelemek için adım düğmesini kullanabileceğinizi unutmayın.
        courseC_maze_programming8_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: Zorlandığınız durumlarda, kod bloklarınızı satır
          satır  incelemek için adım düğmesini kullanabileceğinizi unutmayın.
        courseC_maze_programming8_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: Domuzu almanın bir çok yolu vardır.
          Yolu bulmak için parmağını kullan sonra programla!
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: Domuzu almanın bir çok yolu vardır.
          Yolu bulmak için parmağını kullan sonra programla!
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: Domuzu almanın bir çok yolu vardır.
          Yolu bulmak için parmağını kullan sonra programla!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Eğer beni geri göndermek istersen,
          doğru yöne döndüğüne daha fazla dikkat et!_
        courseC_maze_programming_challenge2_b: En kısa çözüm yalnızca 5 bloktan oluşur,
          fakat`tekrar et` bloğu kullanılır!<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _Eğer beni geri göndermek istersen,
          doğru yöne döndüğüne daha fazla dikkat et!_
        courseC_maze_programming_challenge2_b: En kısa çözüm yalnızca 5 bloktan oluşur,
          fakat`tekrar et` bloğu kullanılır!<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _Eğer beni geri göndermek istersen,
          doğru yöne döndüğüne daha fazla dikkat et!_
        courseC_maze_programming_challenge2_b: En kısa çözüm yalnızca 5 bloktan oluşur,
          fakat`tekrar et` bloğu kullanılır!<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: BB-8 hurda metalleri yuvarlanınca otomatik olarak
          toplayacak.
        courseC_starWars_loops1_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
        courseC_starWars_loops1_c: Bu bulmacayı çözmek için 5 defa 'ilerle'.
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: Bu desen dev bir merdiven basamağı gibi görünmüyor
          mu? Bütün dönüşleri yapmak için önceki bulmacada öğrendiklerinizi kullanıp
          kullanamayacağınızı görün.
        courseC_starWars_loops10_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
        courseC_starWars_loops10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: Bu desen dev bir merdiven basamağı gibi görünmüyor
          mu? Bütün dönüşleri yapmak için önceki bulmacada öğrendiklerinizi kullanıp
          kullanamayacağınızı görün.
        courseC_starWars_loops10_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
        courseC_starWars_loops10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: Bu desen dev bir merdiven basamağı gibi görünmüyor
          mu? Bütün dönüşleri yapmak için önceki bulmacada öğrendiklerinizi kullanıp
          kullanamayacağınızı görün.
        courseC_starWars_loops10_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
        courseC_starWars_loops10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: BB-8 hurda metalleri yuvarlanınca otomatik olarak
          toplayacak.
        courseC_starWars_loops1_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
        courseC_starWars_loops1_c: Bu bulmacayı çözmek için 5 defa 'ilerle'.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: BB-8 hurda metalleri yuvarlanınca otomatik olarak
          toplayacak.
        courseC_starWars_loops1_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
        courseC_starWars_loops1_c: Bu bulmacayı çözmek için 5 defa 'ilerle'.
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: Tekrar etmek için, bir 'tekrar' döngüsü sürükle,
          sonra içine istediğin bloğu koy.
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: '"Sola" dön bloğunun yanındaki küçük ok işaretine
          tıklamak, onu "sağ" olarak değiştirmene izin verecektir.'
        courseC_starWars_loops4_a: İki 'tekrarla' bloğu kullanın.
        courseC_starWars_loops4_b: 'Her ''tekrarla'' döngüsünün içinde bir komut bulunacak:
          ''ilerle''.'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: '"Sola" dön bloğunun yanındaki küçük ok işaretine
          tıklamak, onu "sağ" olarak değiştirmene izin verecektir.'
        courseC_starWars_loops4_a: İki 'tekrarla' bloğu kullanın.
        courseC_starWars_loops4_b: 'Her ''tekrarla'' döngüsünün içinde bir komut bulunacak:
          ''ilerle''.'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: '"Sola" dön bloğunun yanındaki küçük ok işaretine
          tıklamak, onu "sağ" olarak değiştirmene izin verecektir.'
        courseC_starWars_loops4_a: İki 'tekrarla' bloğu kullanın.
        courseC_starWars_loops4_b: 'Her ''tekrarla'' döngüsünün içinde bir komut bulunacak:
          ''ilerle''.'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: Aşağı ilerlemek için, dönüp ilerlemelisin.
        courseC_starWars_loops5_a: 'En iyi çözüm bir dönüş sonra bir ilerle ve tekrar
          dönüş, en son da tekrarla döngüsü içermektedir. '
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: Bütün hareketleri bir kağıt parçasına yazmayı ve
          bir desen bulmayı deneyin.
        courseC_starWars_loops6_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: Bütün hareketleri bir kağıt parçasına yazmayı ve
          bir desen bulmayı deneyin.
        courseC_starWars_loops6_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: Bütün hareketleri bir kağıt parçasına yazmayı ve
          bir desen bulmayı deneyin.
        courseC_starWars_loops6_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: Bu yıldız deseni biraz karışık görünüyor! İlk olarak
          basit bir merdiven basamağı çizerek başla. Bu bütün hurda metali kaplıyor
          mu?
        courseC_starWars_loops7_b: Bu bulmacayla ilgili problem yaşıyorsanız, bütün
          hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops7_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: Bu yıldız deseni biraz karışık görünüyor! İlk olarak
          basit bir merdiven basamağı çizerek başla. Bu bütün hurda metali kaplıyor
          mu?
        courseC_starWars_loops7_b: Bu bulmacayla ilgili problem yaşıyorsanız, bütün
          hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops7_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: Bu yıldız deseni biraz karışık görünüyor! İlk olarak
          basit bir merdiven basamağı çizerek başla. Bu bütün hurda metali kaplıyor
          mu?
        courseC_starWars_loops7_b: Bu bulmacayla ilgili problem yaşıyorsanız, bütün
          hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops7_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan
          bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops8:
        course_starWars_loops8_b: Bu problemin ilk yarısını bir merdiven basamağı
          olarak düşünün. Bunu daha önce nasıl çözdün?
        course_starWars_loops8_c: |-
          Bu çözüme bir bak:

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_b: Bu problemin ilk yarısını bir merdiven basamağı
          olarak düşünün. Bunu daha önce nasıl çözdün?
        course_starWars_loops8_c: |-
          Bu çözüme bir bak:

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_b: Bu problemin ilk yarısını bir merdiven basamağı
          olarak düşünün. Bunu daha önce nasıl çözdün?
        course_starWars_loops8_c: |-
          Bu çözüme bir bak:

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi
          unutmayın.
        course_starWars_loops9_c: |-
          Bu bulmacayı çözmek için sola dönmene gerek kalmayacak, bu yüzden tüm dönüşlerin sağa doğru olabilir.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi
          unutmayın.
        course_starWars_loops9_c: |-
          Bu bulmacayı çözmek için sola dönmene gerek kalmayacak, bu yüzden tüm dönüşlerin sağa doğru olabilir.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi
          unutmayın.
        course_starWars_loops9_c: |-
          Bu bulmacayı çözmek için sola dönmene gerek kalmayacak, bu yüzden tüm dönüşlerin sağa doğru olabilir.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_1_2018:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project1_b: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
      courseD_artist_1_2018_2019:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project1_b: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
      courseD_artist_2_2018:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
      courseD_artist_2_2018_2019:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
      courseD_artist_binary1:
        courseD_artist_binary1_a: Metin bloğundaki "???" yazısını birler halindeki
          istediğin ikili resim ile değiştir.
        courseD_artist_binary1_b: Sanatçı, her 1 için beyaz bir boşluk çizecek ve
          her 0 için siyah bir boşluk çizecek.
        courseD_artist_binary1_c: |-
          İkili kodunuzu nasıl gireceğinizi gösterir:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018:
        courseD_artist_binary1_a: Metin bloğundaki "???" yazısını birler halindeki
          istediğin ikili resim ile değiştir.
        courseD_artist_binary1_b: Sanatçı, her 1 için beyaz bir boşluk çizecek ve
          her 0 için siyah bir boşluk çizecek.
        courseD_artist_binary1_c: |-
          İkili kodunuzu nasıl gireceğinizi gösterir:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2019:
        courseD_artist_binary1_a: Metin bloğundaki "???" yazısını birler halindeki
          istediğin ikili resim ile değiştir.
        courseD_artist_binary1_b: Sanatçı, her 1 için beyaz bir boşluk çizecek ve
          her 0 için siyah bir boşluk çizecek.
        courseD_artist_binary1_c: |-
          İkili kodunuzu nasıl gireceğinizi gösterir:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2:
        courseD_artist_binary2_a: Bu programı çalışırken görmek için sadece 'Çalıştır'
          ı tıklayın!
      courseD_artist_binary2_2018:
        courseD_artist_binary2_a: Bu programı çalışırken görmek için sadece 'Çalıştır'
          ı tıklayın!
      courseD_artist_binary2_2019:
        courseD_artist_binary2_a: Bu programı çalışırken görmek için sadece 'Çalıştır'
          ı tıklayın!
      courseD_artist_binary3:
        courseD_artist_binary3_a: Araç kutusundaki dört ikili desenden bir tanesi
          bu bulmacayı çözecek!
        courseD_artist_binary3_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: Araç kutusundaki dört ikili desenden bir tanesi
          bu bulmacayı çözecek!
        courseD_artist_binary3_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: Araç kutusundaki dört ikili desenden bir tanesi
          bu bulmacayı çözecek!
        courseD_artist_binary3_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_artist_binary4:
        courseD_artist_binary4_a: Üst sıradaki ilk üç kareye bak. Tüm desene ulaşmak
          için bu üçünü tekrar edebilir misin?
        courseD_artist_binary4_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_artist_binary4_2018:
        courseD_artist_binary4_a: Üst sıradaki ilk üç kareye bak. Tüm desene ulaşmak
          için bu üçünü tekrar edebilir misin?
        courseD_artist_binary4_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_artist_binary4_2019:
        courseD_artist_binary4_a: Üst sıradaki ilk üç kareye bak. Tüm desene ulaşmak
          için bu üçünü tekrar edebilir misin?
        courseD_artist_binary4_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_artist_binary5:
        courseD_artist_binary5_a: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary5_b: Bir gülümseme yapmak için yalnızca iki sırayı değiştirmeniz
          gerekir.
        courseD_artist_binary5_c: Eğer bu bulmacayı çözmekte zorlanıyorsanız, bir
          kağıda ikili sistemde satırı yazmayı ve tekrar eden bir desen bulmayı deneyin.
      courseD_artist_binary5_2018:
        courseD_artist_binary5_a: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary5_b: Bir gülümseme yapmak için yalnızca iki sırayı değiştirmeniz
          gerekir.
        courseD_artist_binary5_c: Eğer bu bulmacayı çözmekte zorlanıyorsanız, bir
          kağıda ikili sistemde satırı yazmayı ve tekrar eden bir desen bulmayı deneyin.
      courseD_artist_binary5_2019:
        courseD_artist_binary5_a: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary5_b: Bir gülümseme yapmak için yalnızca iki sırayı değiştirmeniz
          gerekir.
        courseD_artist_binary5_c: Eğer bu bulmacayı çözmekte zorlanıyorsanız, bir
          kağıda ikili sistemde satırı yazmayı ve tekrar eden bir desen bulmayı deneyin.
      courseD_artist_binary6:
        courseD_artist_binary6_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary6_b: İkili dizeyi her seferinde biraz oluşturmaya ve
          test etmeye devam edebilirsin!
      courseD_artist_binary6_2018:
        courseD_artist_binary6_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary6_b: İkili dizeyi her seferinde biraz oluşturmaya ve
          test etmeye devam edebilirsin!
      courseD_artist_binary6_2019:
        courseD_artist_binary6_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary6_b: İkili dizeyi her seferinde biraz oluşturmaya ve
          test etmeye devam edebilirsin!
      courseD_artist_binary7:
        courseD_artist_binary7_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary7_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_artist_binary7_2018:
        courseD_artist_binary7_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary7_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_artist_binary7_2019:
        courseD_artist_binary7_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary7_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_artist_binary8:
        courseD_artist_binary8_a: Sarmal kafa karıştırıcı olabilir. Bu tasarımı oluştururken
          kafanda her yatay çizgiyi ayrı düşün.
        courseD_artist_binary8_b: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary8_c: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_artist_binary8_2018:
        courseD_artist_binary8_a: Sarmal kafa karıştırıcı olabilir. Bu tasarımı oluştururken
          kafanda her yatay çizgiyi ayrı düşün.
        courseD_artist_binary8_b: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary8_c: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_artist_binary8_2019:
        courseD_artist_binary8_a: Sarmal kafa karıştırıcı olabilir. Bu tasarımı oluştururken
          kafanda her yatay çizgiyi ayrı düşün.
        courseD_artist_binary8_b: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary8_c: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_artist_binary_challenge2_2018:
        courseD_artist_binary_challenge2_a: 'Orjinal programdan sadece bir kaç satır
          hatalı. '
      courseD_artist_binary_challenge2_2019:
        courseD_artist_binary_challenge2_a: 'Orjinal programdan sadece bir kaç satır
          hatalı. '
      courseD_artist_nestedLoops1:
        courseD_artist_nestedLoops1_b: Bir 'tekrarla' bloğu ve içinde iki blokla bu
          üçgeni çizebilirsiniz. Hangi bloklara ihtiyacın var?
        courseD_artist_nestedLoops1_c: Adımları kağıda yazmaya çalış ve döngüler ile
          sadeleştirilebilecek örüntüler ara.
      courseD_artist_nestedLoops1_2018:
        courseD_artist_nestedLoops1_b: Bir 'tekrarla' bloğu ve içinde iki blokla bu
          üçgeni çizebilirsiniz. Hangi bloklara ihtiyacın var?
        courseD_artist_nestedLoops1_c: Adımları kağıda yazmaya çalış ve döngüler ile
          sadeleştirilebilecek örüntüler ara.
      courseD_artist_nestedLoops1_2019:
        courseD_artist_nestedLoops1_b: Bir 'tekrarla' bloğu ve içinde iki blokla bu
          üçgeni çizebilirsiniz. Hangi bloklara ihtiyacın var?
        courseD_artist_nestedLoops1_c: Adımları kağıda yazmaya çalış ve döngüler ile
          sadeleştirilebilecek örüntüler ara.
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_b: Eğer üçgenini döngüyle oluşturduysan, sanatçı
          başladığı yöne dönük olmalıdır. Bu 60 derece dönüşü çok daha kolaylaştıracaktır.
        courseD_artist_nestedLoops1a_c: Renkleri kullanmak istersen kodunda 'renk
          ayarla\` bloğunu kullan. Şablon resimdeki renkleri kullanmak zorunda değilsin.
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_b: Eğer üçgenini döngüyle oluşturduysan, sanatçı
          başladığı yöne dönük olmalıdır. Bu 60 derece dönüşü çok daha kolaylaştıracaktır.
        courseD_artist_nestedLoops1a_c: Renkleri kullanmak istersen kodunda 'renk
          ayarla\` bloğunu kullan. Şablon resimdeki renkleri kullanmak zorunda değilsin.
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_b: Eğer üçgenini döngüyle oluşturduysan, sanatçı
          başladığı yöne dönük olmalıdır. Bu 60 derece dönüşü çok daha kolaylaştıracaktır.
        courseD_artist_nestedLoops1a_c: Renkleri kullanmak istersen kodunda 'renk
          ayarla\` bloğunu kullan. Şablon resimdeki renkleri kullanmak zorunda değilsin.
      courseD_artist_nestedLoops2:
        courseD_artist_nestedLoops2_b: Döngünün içine `dön` bloğunu koymayı unutma,
          böylece sanatçı her üçgenden sonra döner.
      courseD_artist_nestedLoops2_2018:
        courseD_artist_nestedLoops2_b: Döngünün içine `dön` bloğunu koymayı unutma,
          böylece sanatçı her üçgenden sonra döner.
      courseD_artist_nestedLoops2_2019:
        courseD_artist_nestedLoops2_b: Döngünün içine `dön` bloğunu koymayı unutma,
          böylece sanatçı her üçgenden sonra döner.
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.
          Eğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?
        courseD_artist_nestedLoops3_c: Bir kare yapmaya `tekrarla` döngüsü kullanarak
          başla. Sonra, kareyi aralarında 40 piksel zıplayarak 8 kere tekrar et.
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.
          Eğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?
        courseD_artist_nestedLoops3_c: Bir kare yapmaya `tekrarla` döngüsü kullanarak
          başla. Sonra, kareyi aralarında 40 piksel zıplayarak 8 kere tekrar et.
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.
          Eğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?
        courseD_artist_nestedLoops3_c: Bir kare yapmaya `tekrarla` döngüsü kullanarak
          başla. Sonra, kareyi aralarında 40 piksel zıplayarak 8 kere tekrar et.
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_d: Bunu doğru bir şekilde çözmek için \*\* önce
          \*\* hareket ettirmeniz gerekir; aksi takdirde daireleriniz küçük miktarla
          kapatılacaktır!
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_d: Bunu doğru bir şekilde çözmek için \*\* önce
          \*\* hareket ettirmeniz gerekir; aksi takdirde daireleriniz küçük miktarla
          kapatılacaktır!
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_d: Bunu doğru bir şekilde çözmek için \*\* önce
          \*\* hareket ettirmeniz gerekir; aksi takdirde daireleriniz küçük miktarla
          kapatılacaktır!
      courseD_artist_nestedLoops5:
        courseD_artist_nestedLoops5_b: Bir daire için 360 defa tekrar eden tekrarla
          döngüsü ayarlayın. Döngü içinde, 1 piksel ilerle ve 1 derece dön.
      courseD_artist_nestedLoops5_2018:
        courseD_artist_nestedLoops5_b: Bir daire için 360 defa tekrar eden tekrarla
          döngüsü ayarlayın. Döngü içinde, 1 piksel ilerle ve 1 derece dön.
      courseD_artist_nestedLoops5_2019:
        courseD_artist_nestedLoops5_b: Bir daire için 360 defa tekrar eden tekrarla
          döngüsü ayarlayın. Döngü içinde, 1 piksel ilerle ve 1 derece dön.
      courseD_artist_nestedLoops7:
        courseD_artist_nestedLoops7_b: "İç içe geçmiş döngü kullanın ve iç döngü bir
          kare çizme kodu olsun. \n \\-6 kez tekrarla\n\n-   kare yap \n-   \\*\\*
          50 piksel \\*\\* ileri atla \n    \\-\\*\\* 60 derece \\*\\* dön"
      courseD_artist_nestedLoops7_2018:
        courseD_artist_nestedLoops7_b: "İç içe geçmiş döngü kullanın ve iç döngü bir
          kare çizme kodu olsun. \n \\-6 kez tekrarla\n\n-   kare yap \n-   \\*\\*
          50 piksel \\*\\* ileri atla \n    \\-\\*\\* 60 derece \\*\\* dön"
      courseD_artist_nestedLoops7_2019:
        courseD_artist_nestedLoops7_b: "İç içe geçmiş döngü kullanın ve iç döngü bir
          kare çizme kodu olsun. \n \\-6 kez tekrarla\n\n-   kare yap \n-   \\*\\*
          50 piksel \\*\\* ileri atla \n    \\-\\*\\* 60 derece \\*\\* dön"
      courseD_artist_nestedLoops8:
        courseD_artist_nestedLoops8_b: Takıldıysan, önce son bulmacaya tekrar bak,
          sonra bu bulmacadaki farklı kısımlar için kodu değiştir.
        courseD_artist_nestedLoops8_c: "İç içe döngü kullanın: \n\n-   8 defa tekrarla\n-
          \  bir Altıgen çiz \n-   ileri 50 piksel atla \n-   sağa 45 derece dön"
      courseD_artist_nestedLoops8_2018:
        courseD_artist_nestedLoops8_b: Takıldıysan, önce son bulmacaya tekrar bak,
          sonra bu bulmacadaki farklı kısımlar için kodu değiştir.
        courseD_artist_nestedLoops8_c: "İç içe döngü kullanın: \n\n-   8 defa tekrarla\n-
          \  bir Altıgen çiz \n-   ileri 50 piksel atla \n-   sağa 45 derece dön"
      courseD_artist_nestedLoops8_2019:
        courseD_artist_nestedLoops8_b: Takıldıysan, önce son bulmacaya tekrar bak,
          sonra bu bulmacadaki farklı kısımlar için kodu değiştir.
        courseD_artist_nestedLoops8_c: "İç içe döngü kullanın: \n\n-   8 defa tekrarla\n-
          \  bir Altıgen çiz \n-   ileri 50 piksel atla \n-   sağa 45 derece dön"
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_c: "İki tane iç içe döngü kullanın: \n\n-   8
          defa tekrarla \n-   kare çiz\\\n    -ileri 50 piksel atla \n-   45 derece
          sağa dön \n-   8 kez tekrarla \n-   Üçgen çiz\n-   ileri 50 piksel atla\n-
          \  45 derece sağa dön"
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_c: "İki tane iç içe döngü kullanın: \n\n-   8
          defa tekrarla \n-   kare çiz\\\n    -ileri 50 piksel atla \n-   45 derece
          sağa dön \n-   8 kez tekrarla \n-   Üçgen çiz\n-   ileri 50 piksel atla\n-
          \  45 derece sağa dön"
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_c: "İki tane iç içe döngü kullanın: \n\n-   8
          defa tekrarla \n-   kare çiz\\\n    -ileri 50 piksel atla \n-   45 derece
          sağa dön \n-   8 kez tekrarla \n-   Üçgen çiz\n-   ileri 50 piksel atla\n-
          \  45 derece sağa dön"
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Rengi maviye değiştirerek başla ve
          sonra 50 piksel kenarı olan sekizgen oluşturmak için 45 derece sola dönüşler
          kullan.
        courseD_artist_nestedLoops_challenge1_b: Rengi yeşile değiştirerek başla ve
          sonra 50 piksel kenarı olan üçgen oluşturmak için 120 derece sola dönüşler
          kullan.
        courseD_artist_nestedLoops_challenge1_c: Her iki şekli de çizdikten sonra
          90 derece sağa dönmeden evvel ileriye 50 piksel atlamalısın.
        courseD_artist_nestedLoops_challenge1_d: Bitimek için '4 kez tekrarla' döngüsünün
          içine kodunuzun tamamını koyunuz.
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_a: Rengi maviye değiştirerek başla ve
          sonra 50 piksel kenarı olan sekizgen oluşturmak için 45 derece sola dönüşler
          kullan.
        courseD_artist_nestedLoops_challenge1_b: Rengi yeşile değiştirerek başla ve
          sonra 50 piksel kenarı olan üçgen oluşturmak için 120 derece sola dönüşler
          kullan.
        courseD_artist_nestedLoops_challenge1_c: Her iki şekli de çizdikten sonra
          90 derece sağa dönmeden evvel ileriye 50 piksel atlamalısın.
        courseD_artist_nestedLoops_challenge1_d: Bitimek için '4 kez tekrarla' döngüsünün
          içine kodunuzun tamamını koyunuz.
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_a: Rengi maviye değiştirerek başla ve
          sonra 50 piksel kenarı olan sekizgen oluşturmak için 45 derece sola dönüşler
          kullan.
        courseD_artist_nestedLoops_challenge1_b: Rengi yeşile değiştirerek başla ve
          sonra 50 piksel kenarı olan üçgen oluşturmak için 120 derece sola dönüşler
          kullan.
        courseD_artist_nestedLoops_challenge1_c: Her iki şekli de çizdikten sonra
          90 derece sağa dönmeden evvel ileriye 50 piksel atlamalısın.
        courseD_artist_nestedLoops_challenge1_d: Bitimek için '4 kez tekrarla' döngüsünün
          içine kodunuzun tamamını koyunuz.
      courseD_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının
          (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının
          4 kez 90 derece dönmesi gerekiyor.
      courseD_artist_nestedLoops_challenge2_2018:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının
          (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının
          4 kez 90 derece dönmesi gerekiyor.
      courseD_artist_nestedLoops_challenge2_2019:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının
          (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının
          4 kez 90 derece dönmesi gerekiyor.
      courseD_artist_project1:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project1_b: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
      courseD_artist_project1_2018:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project1_b: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
      courseD_artist_project1_2019:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project1_b: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
      courseD_artist_project1a:
        courseD_artist_project1a_a: |-
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına
          oldukça benziyor, yalnızca açı farklı.
      courseD_artist_project1a_2018:
        courseD_artist_project1a_a: |-
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına
          oldukça benziyor, yalnızca açı farklı.
      courseD_artist_project1a_2019:
        courseD_artist_project1a_a: |-
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına
          oldukça benziyor, yalnızca açı farklı.
      courseD_artist_project2:
        courseD_artist_project2_a: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
        courseD_artist_project2_b: İlk çiziminizi yapıp ilerlediğinizde, bütün kodun
          etrafına bir döngü yerleştirerek birden fazla tekrar edebilirsiniz.
      courseD_artist_project2_2018:
        courseD_artist_project2_a: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
        courseD_artist_project2_b: İlk çiziminizi yapıp ilerlediğinizde, bütün kodun
          etrafına bir döngü yerleştirerek birden fazla tekrar edebilirsiniz.
      courseD_artist_project2_2019:
        courseD_artist_project2_a: "'ileri git' komutu bir çizgi çizerek ilerler,
          fakat 'ileri zıpla' komutu çizmeden ileri atlatır."
        courseD_artist_project2_b: İlk çiziminizi yapıp ilerlediğinizde, bütün kodun
          etrafına bir döngü yerleştirerek birden fazla tekrar edebilirsiniz.
      courseD_artist_project2a:
        courseD_artist_project2a_a: "Bu çizim 4 basamağın iç içe döngüsünden ve '2
          defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur.
          \n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\"
          width=\"200px\" />"
      courseD_artist_project2a_2018:
        courseD_artist_project2a_a: "Bu çizim 4 basamağın iç içe döngüsünden ve '2
          defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur.
          \n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\"
          width=\"200px\" />"
      courseD_artist_project2a_2019:
        courseD_artist_project2a_a: "Bu çizim 4 basamağın iç içe döngüsünden ve '2
          defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur.
          \n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\"
          width=\"200px\" />"
      courseD_artist_project3:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project3_b: |-
          İç içe döngüleri dene!

          Şekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.

          -   Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene
          -   Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene
      courseD_artist_project3_2018:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project3_b: |-
          İç içe döngüleri dene!

          Şekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.

          -   Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene
          -   Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene
      courseD_artist_project3_2019:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan
          dönüş açısını seçebilirsin!
        courseD_artist_project3_b: |-
          İç içe döngüleri dene!

          Şekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.

          -   Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene
          -   Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene
      courseD_artist_project3a:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz!
          18 defa, 20 derece döndürmeye ne dersin?
      courseD_artist_project3a_2018:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz!
          18 defa, 20 derece döndürmeye ne dersin?
      courseD_artist_project3a_2019:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz!
          18 defa, 20 derece döndürmeye ne dersin?
      courseD_artist_project4:
        courseD_artist_project4_a: |-
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          İşte karelerle bir altıgen kümesi:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra
          dön ve ikinci kar tanesini çiz.
      courseD_artist_project4_2018:
        courseD_artist_project4_a: |-
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          İşte karelerle bir altıgen kümesi:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra
          dön ve ikinci kar tanesini çiz.
      courseD_artist_project4_2019:
        courseD_artist_project4_a: |-
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          İşte karelerle bir altıgen kümesi:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra
          dön ve ikinci kar tanesini çiz.
      courseD_artist_project4a:
        courseD_artist_project4a_a: |-
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018:
        courseD_artist_project4a_a: |-
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2019:
        courseD_artist_project4a_a: |-
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5:
        courseD_artist_project4_a: |-
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018:
        courseD_artist_project4_a: |-
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2019:
        courseD_artist_project4_a: |-
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_ramp11:
        courseD_artist_ramp11a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan
          ve 100 yerine 200 gir.
        courseD_artist_ramp11b: "4 tarafı çizmek için 'ileri 100 piksel' bloğunu döngü
          içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. \nDaha
          sonra dönüşü de unutma!"
        courseD_artist_ramp11_c: Döngünüzün içine 'dön' bloğu yerleştirmeyi unutmayın!
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: Önce kare sonra üçgen çizebilirsin yada tam tersi
          sırada!
        courseD_artist_ramp12_b: Problemi 2 parçaya ayırmayı ve 2 farklı 'tekrarla'
          döngüsü kullanmayı deneyin.
        courseD_artist_ramp12_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön'
          bloğu üzerindeki açılır menüyü kullanabilirsin!
      courseD_autorun_binary2_2019:
        courseD_artist_binary2_a: Bu programı çalışırken görmek için sadece 'Çalıştır'
          ı tıklayın!
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: Araç kutusundaki dört ikili desenden bir tanesi
          bu bulmacayı çözecek!
        courseD_artist_binary3_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_autorun_binary4_2019:
        courseD_artist_binary4_a: Üst sıradaki ilk üç kareye bak. Tüm desene ulaşmak
          için bu üçünü tekrar edebilir misin?
        courseD_artist_binary4_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_autorun_binary5_2019:
        courseD_artist_binary5_a: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary5_b: Bir gülümseme yapmak için yalnızca iki sırayı değiştirmeniz
          gerekir.
        courseD_artist_binary5_c: Eğer bu bulmacayı çözmekte zorlanıyorsanız, bir
          kağıda ikili sistemde satırı yazmayı ve tekrar eden bir desen bulmayı deneyin.
      courseD_autorun_binary6_2019:
        courseD_artist_binary6_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary6_b: İkili dizeyi her seferinde biraz oluşturmaya ve
          test etmeye devam edebilirsin!
      courseD_autorun_binary7_2019:
        courseD_artist_binary7_a: Sol üstten başla. desen tekrar etmeye başlamadan
          önce ne kadar okumalısın?
        courseD_artist_binary7_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek
          için kodlarını çalıştırmayı dene.
      courseD_autorun_binary8_2019:
        courseD_artist_binary8_a: Sarmal kafa karıştırıcı olabilir. Bu tasarımı oluştururken
          kafanda her yatay çizgiyi ayrı düşün.
        courseD_artist_binary8_b: Ne ile çalışmak zorunda olduğunu görmek için önce
          kodu çalıştırmayı deneyin.
        courseD_artist_binary8_c: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini
          düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için
          kodlarını çalıştırmayı dene.
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals2_b: Bu labirent boyunca ilerlemek için 'tekrarla'
          veya 'yol olduğu süresince' bloklarını kullanabilirsiniz.
        courseD_bee_conditionals2_c: Petekleri kontrol etmenize gerek yok, bulutların
          altında sadece çiçekler veya boş alanlar var.
        courseD_bee_conditionals2_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals2_b: Bu labirent boyunca ilerlemek için 'tekrarla'
          veya 'yol olduğu süresince' bloklarını kullanabilirsiniz.
        courseD_bee_conditionals2_c: Petekleri kontrol etmenize gerek yok, bulutların
          altında sadece çiçekler veya boş alanlar var.
        courseD_bee_conditionals2_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals2_2019:
        courseD_bee_conditionals2_c: Petekleri kontrol etmenize gerek yok, bulutların
          altında sadece çiçekler veya boş alanlar var.
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals3_b: Arının ileriye gitmesini devam ettirmek için
          'tekrarla' veya 'süresince' bloklarını kullanabilirsiniz. Hangisini isterseniz
          onu kullanın!
        courseD_bee_conditionals3_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseD_bee_conditionals3_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals3_b: Arının ileriye gitmesini devam ettirmek için
          'tekrarla' veya 'süresince' bloklarını kullanabilirsiniz. Hangisini isterseniz
          onu kullanın!
        courseD_bee_conditionals3_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseD_bee_conditionals3_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals3_2019:
        courseD_bee_conditionals3_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals4_c: '''Yol olduğu sürece'' <xml><block type="maze_untilBlocked"/></xml>
          bloğu kullandığında ''İlerle'' ve bir çiçek var mı kontrol et. ''Eğer çiçek
          var ise'' arı ne yapmalı?'
        courseD_bee_conditionals4_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals4_c: '''Yol olduğu sürece'' <xml><block type="maze_untilBlocked"/></xml>
          bloğu kullandığında ''İlerle'' ve bir çiçek var mı kontrol et. ''Eğer çiçek
          var ise'' arı ne yapmalı?'
        courseD_bee_conditionals4_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak
          düşün. "Tekrarla" bloğu içine "yol olduğu sürece" bloğu koy. Arının bütün
          çiçekleri yoklaması gerekiyor, bunun için kaç tane yol gitmeksi gerekir?
        courseD_bee_conditionals5_c: Bir üçgenin 3 kenarı vardır bu yüzden 'Tekrarla
          3 kez ' döngüsü kullanman gerekir. Her tekrarda 'yol olduğu sürece' döngüsü
          ile yol boyunca devam etmesi gerekir. Yola devam etmek için 'ilerle ' gerekir.
          Yolda iken, arının çiçekleri denetlemesi gerekir. 'eğer çiçek ise', arı
          'nektar almalı'.
        courseD_bee_conditionals5_b: "'Yol olduğu süresince' bloğu içinde ilerle ve
          bir çiçek varmı kontrol et blokları kullanmalısın. Bir çiçek olup olmadığını
          nasıl kontrol edebilirim? Bir çiçek varsa ne yapıyorsun?"
        courseD_bee_conditionals5_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak
          düşün. "Tekrarla" bloğu içine "yol olduğu sürece" bloğu koy. Arının bütün
          çiçekleri yoklaması gerekiyor, bunun için kaç tane yol gitmeksi gerekir?
        courseD_bee_conditionals5_c: Bir üçgenin 3 kenarı vardır bu yüzden 'Tekrarla
          3 kez ' döngüsü kullanman gerekir. Her tekrarda 'yol olduğu sürece' döngüsü
          ile yol boyunca devam etmesi gerekir. Yola devam etmek için 'ilerle ' gerekir.
          Yolda iken, arının çiçekleri denetlemesi gerekir. 'eğer çiçek ise', arı
          'nektar almalı'.
        courseD_bee_conditionals5_b: "'Yol olduğu süresince' bloğu içinde ilerle ve
          bir çiçek varmı kontrol et blokları kullanmalısın. Bir çiçek olup olmadığını
          nasıl kontrol edebilirim? Bir çiçek varsa ne yapıyorsun?"
        courseD_bee_conditionals5_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals6_b: Bu durumda, bulutların altında çiçek var mı diye
          kontrol etmek zorunda değilsiniz.
        courseD_bee_conditionals6_c: Kodunu daha basit hale getirmek için kullanabileceğin
          bir döngü var mı?
        courseD_bee_conditionals6_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals6_b: Bu durumda, bulutların altında çiçek var mı diye
          kontrol etmek zorunda değilsiniz.
        courseD_bee_conditionals6_c: Kodunu daha basit hale getirmek için kullanabileceğin
          bir döngü var mı?
        courseD_bee_conditionals6_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals6_2019:
        courseD_bee_conditionals6_b: Bu durumda, bulutların altında çiçek var mı diye
          kontrol etmek zorunda değilsiniz.
        courseD_bee_conditionals6_c: Kodunu daha basit hale getirmek için kullanabileceğin
          bir döngü var mı?
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals7_b: Eğer bulutun altında çiçek yoksa, petek olmalı;bu
          sebeple boş alan mı diye düşünmene gerek yok.
        courseD_bee_conditionals7_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals7_b: Eğer bulutun altında çiçek yoksa, petek olmalı;bu
          sebeple boş alan mı diye düşünmene gerek yok.
        courseD_bee_conditionals7_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals7_2019:
        courseD_bee_conditionals7_b: Eğer bulutun altında çiçek yoksa, petek olmalı;bu
          sebeple boş alan mı diye düşünmene gerek yok.
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals8_a: |-
          \*\* Dikkat: \*\* Bu bulmaca her çalıştırdığınızda değişir.\
          Bu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor.
        courseD_bee_conditionals8_c: Yolculuğun her yolun sonunda bittiğinden nasıl
          emin olabilirsin, ne kadar uzun olursa olsun?
        courseD_bee_conditionals8_d: "Her ne kadar tam önünde bir bulut olsa da, ilk
          olarak onu ziyaret etmek zorunda değilsin. Karenin sağ alt köşesindeki ile
          başlamayı dene. \n\n![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)"
        courseD_bee_conditionals8_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: Başlangıçta yardıma ihtiyacınız mı var?
          Videoyu izleyin!
        courseD_bee_conditionals8_a: |-
          \*\* Dikkat: \*\* Bu bulmaca her çalıştırdığınızda değişir.\
          Bu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor.
        courseD_bee_conditionals8_c: Yolculuğun her yolun sonunda bittiğinden nasıl
          emin olabilirsin, ne kadar uzun olursa olsun?
        courseD_bee_conditionals8_d: "Her ne kadar tam önünde bir bulut olsa da, ilk
          olarak onu ziyaret etmek zorunda değilsin. Karenin sağ alt köşesindeki ile
          başlamayı dene. \n\n![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)"
        courseD_bee_conditionals8_hintVid2: Bu bulmacayı çözerken yardım almak için
          bu videoyu izleyin.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          \*\* Dikkat: \*\* Bu bulmaca her çalıştırdığınızda değişir.\
          Bu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor.
      courseD_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: Herhangi bir ağaca vurmadan her çiçeğe
          ve peteklere ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek
          olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse
          (if/else) koşulunu tekrarlayabilirsin.
      courseD_bee_conditionals_challenge1_2018:
        courseD_bee_conditionals_challenge1_a: Herhangi bir ağaca vurmadan her çiçeğe
          ve peteklere ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek
          olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse
          (if/else) koşulunu tekrarlayabilirsin.
      courseD_bee_conditionals_challenge1_2019:
        courseD_bee_conditionals_challenge1_a: Herhangi bir ağaca vurmadan her çiçeğe
          ve peteklere ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek
          olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse
          (if/else) koşulunu tekrarlayabilirsin.
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: "'eğer çiçekte' blokları gibi, kodun
          içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana
          farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır.
          Bu deseni deneyin: \n<xml>  <block type=\"bee_whileNectarAmount\">\n\n<title
          name=\"ARG1\">kalan nektar</title>\n<title name=\"OP\">&gt;</title>\n<title
          name=\"ARG2\">0</title>                    <statement name=\"DO\">\n<block
          type=\"maze_nectar\"/>\n</statement>\n</block></xml>"
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge1_b: "'eğer çiçekte' blokları gibi, kodun
          içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana
          farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır.
          Bu deseni deneyin: \n<xml>  <block type=\"bee_whileNectarAmount\">\n\n<title
          name=\"ARG1\">kalan nektar</title>\n<title name=\"OP\">&gt;</title>\n<title
          name=\"ARG2\">0</title>                    <statement name=\"DO\">\n<block
          type=\"maze_nectar\"/>\n</statement>\n</block></xml>"
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge1_b: "'eğer çiçekte' blokları gibi, kodun
          içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana
          farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır.
          Bu deseni deneyin: \n<xml>  <block type=\"bee_whileNectarAmount\">\n\n<title
          name=\"ARG1\">kalan nektar</title>\n<title name=\"OP\">&gt;</title>\n<title
          name=\"ARG2\">0</title>                    <statement name=\"DO\">\n<block
          type=\"maze_nectar\"/>\n</statement>\n</block></xml>"
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: Bu programın neden ilk yarısı çalıştı?
          Arıların neden geriye gitmeleri gerektiği hakkında düşünün. Çiçeklerin üzerinden
          her geçtiklerinde arılar ne kadar nektar toplarlar?
        courseD_bee_debugging_challenge1_b: Dönüş yolunda arının aynı deseni takip
          etmesini sağlayın. Arının peteğin üzerinde hareket ettiği her defasında
          ne kadar bal yapmaya ihtiyacı var?
        courseD_bee_debugging_challenge1_c: |-
          Arı alt sıraya kadar yaptıktan sonra, aşağıdaki komutları tekrarlamasını sağla:

          -   2 defa tekrarla:
          -   İlerle
          -   3 bal yap
          -   Geriye git
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_a: Bu programın neden ilk yarısı çalıştı?
          Arıların neden geriye gitmeleri gerektiği hakkında düşünün. Çiçeklerin üzerinden
          her geçtiklerinde arılar ne kadar nektar toplarlar?
        courseD_bee_debugging_challenge1_b: 'Bu bulmacayı çözmek için, arıya bal yapması
          için nektar toplarken izlediği yolun aynısını izlettirin. '
        courseD_bee_debugging_challenge1_c: |-
          Arı alt diziye ulaştıktan sonra, ona bu komutları tekrarlattırın:
          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">ilerle</title>
          <next>
          <block type="maze_honey"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">gerigit</title>
          </block>
          </next>
          </block></xml>
      courseD_bee_nestedLoops1:
        courseD_bee_nestedLoops1_b: Önce karenin ilk kenarı için kodu yazmayı deneyin.
          Bütün nektarları almak için bununla bir döngü kurabilir misiniz?
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu
          kullanmayı unutmayın.
      courseD_bee_nestedLoops1_2018:
        courseD_bee_nestedLoops1_b: Önce karenin ilk kenarı için kodu yazmayı deneyin.
          Bütün nektarları almak için bununla bir döngü kurabilir misiniz?
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu
          kullanmayı unutmayın.
      courseD_bee_nestedLoops1_2019:
        courseD_bee_nestedLoops1_b: Önce karenin ilk kenarı için kodu yazmayı deneyin.
          Bütün nektarları almak için bununla bir döngü kurabilir misiniz?
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu
          kullanmayı unutmayın.
      courseD_bee_nestedLoops1a:
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu
          kullanmayı unutmayın.
      courseD_bee_nestedLoops1a_2018:
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu
          kullanmayı unutmayın.
      courseD_bee_nestedLoops1a_2019:
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu
          kullanmayı unutmayın.
      courseD_bee_nestedLoops2:
        courseD_bee_nestedLoops2_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım kağıda yazmayı ve bir desen bulmayı deneyin.
        courseD_bee_nestedLoops2_c: Bir döngünün içine bir bloktan fazlasını koyabileceğinizi
          unutmayın.
      courseD_bee_nestedLoops2_2018:
        courseD_bee_nestedLoops2_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım kağıda yazmayı ve bir desen bulmayı deneyin.
        courseD_bee_nestedLoops2_c: Bir döngünün içine bir bloktan fazlasını koyabileceğinizi
          unutmayın.
      courseD_bee_nestedLoops2_2019:
        courseD_bee_nestedLoops2_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım kağıda yazmayı ve bir desen bulmayı deneyin.
        courseD_bee_nestedLoops2_c: Bir döngünün içine bir bloktan fazlasını koyabileceğinizi
          unutmayın.
      courseD_bounce_events10s_2018:
        courseD_bounce_events10s_a: |-
          Kodunda bu olayların ikisini de bulundurmalısın:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Hışırtı</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Islık</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events10s_2019:
        courseD_bounce_events10s_a: |-
          Kodunda bu olayların ikisini de bulundurmalısın:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Hışırtı</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Islık</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events11s_2018:
        courseD_bounce_events11s_a: Oyun başladığında, sepeti vurduğunda ve el topu
          kaçırdığında topu atmalısın.
      courseD_bounce_events11s_2019:
        courseD_bounce_events11s_a: Oyun başladığında, sepeti vurduğunda ve el topu
          kaçırdığında topu atmalısın.
      courseD_bounce_events12s_2018:
        courseD_bounce_events12s_a: Bu blokları 'çalıştığı zaman' olayına ekleyerek
          eli veya basket topunu hızlandırabilirsin.
        courseD_bounce_events12s_b: Her atışın değerini 2 puan yapmayı ve takım logosunu
          sizin memleketinizin logosuyla değiştirmeyi deneyin!
      courseD_bounce_events12s_2019:
        courseD_bounce_events12s_a: Bu blokları 'çalıştığı zaman' olayına ekleyerek
          eli veya basket topunu hızlandırabilirsin.
        courseD_bounce_events12s_b: Her atışın değerini 2 puan yapmayı ve takım logosunu
          sizin memleketinizin logosuyla değiştirmeyi deneyin!
      courseD_bounce_events1s_2018:
        courseD_bounce_events1s_a: |-
          Bu oyunun çalışması için 'sola ilerle' bloğunu 'sol oka basıldığında' olayına eklemeniz gerekir:
          <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Bu bulmacayı çözmek için "Çalıştır" düğmesine basmayı
          ve eli sepete almayı unutma.
      courseD_bounce_events1s_2019:
        courseD_bounce_events1s_a: |-
          Bu oyunun çalışması için 'sola ilerle' bloğunu 'sol oka basıldığında' olayına eklemeniz gerekir:
          <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Bu bulmacayı çözmek için "Çalıştır" düğmesine basmayı
          ve eli sepete almayı unutma.
      courseD_bounce_events2s_2018:
        courseD_bounce_events2s_a: |-
          Bunun çalışması için kodlanan 2 takım 'ilerle' olayına sahip olmanız gerekecek:

          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2019:
        courseD_bounce_events2s_a: |-
          Bunun çalışması için kodlanan 2 takım 'ilerle' olayına sahip olmanız gerekecek:

          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events5s_2018:
        courseD_bounce_events5s_a: Bulmacayı çözmek için eli hareket ettirmeye gerek
          yok.
        courseD_bounce_events5s_b: |-
          Çalışma alanına bu kodu eklediğinizden emin olun:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2019:
        courseD_bounce_events5s_a: Bulmacayı çözmek için eli hareket ettirmeye gerek
          yok.
        courseD_bounce_events5s_b: |-
          Çalışma alanına bu kodu eklediğinizden emin olun:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_2018:
        courseD_bounce_events6s_a: |-
          Bunun gibi bir olayınız var mı?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Eğer kodu doğru yazdıysanız, kazanmak için eli
          hareket ettirmeniz gerekmez.
      courseD_bounce_events6s_2019:
        courseD_bounce_events6s_a: |-
          Bunun gibi bir olayınız var mı?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Eğer kodu doğru yazdıysanız, kazanmak için eli
          hareket ettirmeniz gerekmez.
      courseD_bounce_events7s_2018:
        courseD_bounce_events7s_a: İstiyorsanız daha fazla yere ses ekleyebilirsiniz!
      courseD_bounce_events7s_2019:
        courseD_bounce_events7s_a: İstiyorsanız daha fazla yere ses ekleyebilirsiniz!
      courseD_collector_debugging1:
        courseD_collector_debugging1_c: Hazineye ulaştıktan sonra hazineyi almak için
          'topla' bloğunu kullanmayı unutmayın.
      courseD_collector_debugging1a_2018:
        courseD_collector_debugging1_c: Hazineye ulaştıktan sonra hazineyi almak için
          'topla' bloğunu kullanmayı unutmayın.
      courseD_collector_debugging1a_2019:
        courseD_collector_debugging1_c: Hazineye ulaştıktan sonra hazineyi almak için
          'topla' bloğunu kullanmayı unutmayın.
      courseD_collector_debugging2:
        courseD_collector_debugging2_c: Bu U şeklinin bir tarafı için kod yazmayı
          deneyin. Diğer iki taraftaki hazineyi toplamak için bunu tekrar edebilir
          misin?
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_c: |-
          Ne oluyor?

          Ne olması gerekir?

          Bu sana ne söylüyor?
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_c: |-
          Ne oluyor?

          Ne olması gerekir?

          Bu sana ne söylüyor?
      courseD_collector_debugging3:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi
          bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
      courseD_collector_debugging3a_2018:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi
          bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
      courseD_collector_debugging3a_2019:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi
          bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
      courseD_collector_debugging4:
        courseD_collector_debugging4_c: Bu döngüde sadece bir blok eksik. Hangisi
          bulabilir misin?
      courseD_collector_debugging5a_2018:
        courseD_collector_debugging5a_a: |-
          O ne yapıyor?

          Onun ne yapması gerekir?

          Bu sana ne söylüyor?
        courseD_collector_debugging5a_b: Hazinenin ilk satırını topladığınız zaman,
          kodunuzda ne kaldı?
      courseD_collector_debugging5a_2019:
        courseD_collector_debugging5a_a: |-
          O ne yapıyor?

          Onun ne yapması gerekir?

          Bu sana ne söylüyor?
        courseD_collector_debugging5a_b: Hazinenin ilk satırını topladığınız zaman,
          kodunuzda ne kaldı?
      courseD_collector_debugging6:
        courseD_collector_debugging6_b: Doğru adımların tamamı burada gibi görünüyor,
          sadece onlardan biraz daha fazla kullanmalısın. 'Topla' komutunu birden
          çok kez nasıl tekrarlayabilirsin?
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_b: İhtiyacınız olan bütün bloklar çalışma alanında
          gibi görünüyor. İşler çok kafa karıştırıcı olursa "baştan başla"ya tıklamayı
          deneyin.
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_b: İhtiyacınız olan bütün bloklar çalışma alanında
          gibi görünüyor. İşler çok kafa karıştırıcı olursa "baştan başla"ya tıklamayı
          deneyin.
      courseD_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "İlk iki yığının her birinden ikişer
          adet mücevher toplamaya odaklanarak başlayın .\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nBu blokları kullan.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">ilerle</title>\n\n                  </block>\n                  \n\n
          \  <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_b: |-
          Sonra, bu sıradaki kalan mücevherleri toplayın.

          ![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png>)
          Bu blokları programınıza ekleyin.

          <xml><block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
          <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">

                  </statement>
                </block>

          </xml>
        courseD_collector_debugging_challenge2_c: "Son olarak, kalan hazineyi toplayın.
          Bu blokları programınıza ekleyin.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Bu bulmaca için çözümün tamamı burada.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir
          kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi
          'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden
          uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine
          yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince
          tekrarlarsan, toplayıcı mağara _boyunca_ hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en
          kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir
          kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi
          'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden
          uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine
          yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince
          tekrarlarsan, toplayıcı mağara _boyunca_ hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en
          kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir
          kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi
          'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden
          uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine
          yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince
          tekrarlarsan, toplayıcı mağara _boyunca_ hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en
          kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_a: Tek bir komutu ya da daha uzun
          bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi
          'tekrarlayabilirsin'!
        courseD_collector_nested_loops_challenge2a_b: 2 tane elmas toplamak için gerekenden
          fazla blok kullanmadan nasıl 4 elmasın hepsini toplayacağınızı bulabilir
          misiniz?
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: 'Dört blok ''ilerle'' bloğu kullanmak yerine, tekrarla
          döngü bloğu içine ilerle bloğu koymayı deneyin: <xml><block type="controls_repeat">
          <title name="TIMES">4</title> <statement name="DO"> <block type="maze_moveForward"/>
          </statement> </block></xml>'
        courseD_artist_ramp10_b: Önce bir parça hazine toplayın sonra karenin başka
          kenarından başlamak için dönüş yapın!
        courseD_artist_ramp10_c: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: Hazinenin olduğu bir alana ulaşırsanız, hazineyi
          toplamak için 'topla' kullanın. Bu bulmacada, daha önce topladığınızdan
          daha fazla hazine toplamanız gerekecek!
        courseD_collector_ramp8_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: İlk olarak Laurel' i hazineye götürerek başlayın,
          sonra hazineyi toplatın. Bu sırayı ikinci yığını almak için tekrar edebilir
          misin?
        courseD_collector_ramp9_b: Eğer kodlarını daha fazla basitleştirmek istersen,
          bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseD_farmer_condLoops2:
        courseD_farmer_condLoops2_c: |-
          'Eğer' ifadeniz şuna benzemeli:

          -   Eğer mısırdaysan
          -   mısırı al
              \-değilsen
          -   eğer maruldaysan
              \\t-marulu al

          eğer hiçbir şey yok ise, bir şey almak zorunda değilsiniz!
      courseD_farmer_condLoops2_2018:
        courseD_farmer_condLoops2_c: |-
          'Eğer' ifadeniz şuna benzemeli:

          -   Eğer mısırdaysan
          -   mısırı al
              \-değilsen
          -   eğer maruldaysan
              \\t-marulu al

          eğer hiçbir şey yok ise, bir şey almak zorunda değilsiniz!
      courseD_farmer_condLoops2_2019:
        courseD_farmer_condLoops2_c: |-
          'Eğer' ifadeniz şuna benzemeli:

          -   Eğer mısırdaysan
          -   mısırı al
              \-değilsen
          -   eğer maruldaysan
              \\t-marulu al

          eğer hiçbir şey yok ise, bir şey almak zorunda değilsiniz!
      courseD_farmer_condLoops4:
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "'Süresince' döngüsü boş
          alanları da işleyebilir. Bu sayede marul olmadığında, toplamayıp kodun devam
          etmesini sağlayacak."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: "'ileride yol olduğu sürece'
          ya da 'tekrarla' döngüsünü tüm ekinlerin arasından geçmek için kullanabilirsiniz."
      courseD_farmer_condLoops4_2018:
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "'Süresince' döngüsü boş
          alanları da işleyebilir. Bu sayede marul olmadığında, toplamayıp kodun devam
          etmesini sağlayacak."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: "'ileride yol olduğu sürece'
          ya da 'tekrarla' döngüsünü tüm ekinlerin arasından geçmek için kullanabilirsiniz."
      courseD_farmer_condLoops4_2019:
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "'Süresince' döngüsü boş
          alanları da işleyebilir. Bu sayede marul olmadığında, toplamayıp kodun devam
          etmesini sağlayacak."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: "'ileride yol olduğu sürece'
          ya da 'tekrarla' döngüsünü tüm ekinlerin arasından geçmek için kullanabilirsiniz."
      courseD_farmer_condLoops5:
        courseD_farmer_condLoops5_a: 'İşte yeni bir döngü: ''bir balkabağına kadar
          tekrarla''. Bunu, bu bulmacada nasıl kullanabileceğini görüyor musun?'
        courseD_farmer_condLoops5_b: Her noktada birden fazla mısır veya marul bitkisi
          olabilir. Onların tamamını toplamak için bir adet 'süresince' döngüsü kullan!
      courseD_farmer_condLoops5_2018:
        courseD_farmer_condLoops5_a: 'İşte yeni bir döngü: ''bir balkabağına kadar
          tekrarla''. Bunu, bu bulmacada nasıl kullanabileceğini görüyor musun?'
        courseD_farmer_condLoops5_b: Her noktada birden fazla mısır veya marul bitkisi
          olabilir. Onların tamamını toplamak için bir adet 'süresince' döngüsü kullan!
      courseD_farmer_condLoops5_2019:
        courseD_farmer_condLoops5_a: 'İşte yeni bir döngü: ''bir balkabağına kadar
          tekrarla''. Bunu, bu bulmacada nasıl kullanabileceğini görüyor musun?'
        courseD_farmer_condLoops5_b: Her noktada birden fazla mısır veya marul bitkisi
          olabilir. Onların tamamını toplamak için bir adet 'süresince' döngüsü kullan!
      courseD_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: "'ADIM' butonu bu meydan okuma için
          çok yardımcı olabilir."
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade
          sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız
          gerekiyor?
      courseD_farmer_condLoops_challenge1_2018:
        courseD_farmer_condLoops_challenge1_a: "'ADIM' butonu bu meydan okuma için
          çok yardımcı olabilir."
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade
          sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız
          gerekiyor?
      courseD_farmer_condLoops_challenge1_2019:
        courseD_farmer_condLoops_challenge1_a: "'ADIM' butonu bu meydan okuma için
          çok yardımcı olabilir."
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade
          sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız
          gerekiyor?
      courseD_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir.
          Bunlar için `süresince` döngülerini kullanın.
      courseD_farmer_condLoops_challenge2_2018:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir.
          Bunlar için `süresince` döngülerini kullanın.
      courseD_farmer_condLoops_challenge2_2019:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir.
          Bunlar için `süresince` döngülerini kullanın.
      courseD_farmer_while1:
        courseD_farmer_while1_a: Yığına ulaşmak için dört kez ilerlemek isteyeceksin.
          Bunun için bir tane 'tekrarla' döngüsü kullanabilir misin?
        courseD_farmer_while1_b: Toprağı kaldırmak için toprak yığınının üzerindeyken
          'kaldır 1' bloğunu kullan.
      courseD_farmer_while1_2018:
        courseD_farmer_while1_a: Yığına ulaşmak için dört kez ilerlemek isteyeceksin.
          Bunun için bir tane 'tekrarla' döngüsü kullanabilir misin?
        courseD_farmer_while1_b: Toprağı kaldırmak için toprak yığınının üzerindeyken
          'kaldır 1' bloğunu kullan.
      courseD_farmer_while1_2019:
        courseD_farmer_while1_a: Yığına ulaşmak için dört kez ilerlemek isteyeceksin.
          Bunun için bir tane 'tekrarla' döngüsü kullanabilir misin?
        courseD_farmer_while1_b: Toprağı kaldırmak için toprak yığınının üzerindeyken
          'kaldır 1' bloğunu kullan.
      courseD_farmer_while2:
        courseD_farmer_while2_a: Deliğe ulaşmak için yalnızca bir kez ilerlemeniz
          gerekecek.
        courseD_farmer_while2_b: Altı kez '1 doldur' bloğuna ihtiyacınız var. Bunu
          bir döngü ile daha kolay yapabilir misiniz?
      courseD_farmer_while2_2018:
        courseD_farmer_while2_a: Deliğe ulaşmak için yalnızca bir kez ilerlemeniz
          gerekecek.
        courseD_farmer_while2_b: Altı kez '1 doldur' bloğuna ihtiyacınız var. Bunu
          bir döngü ile daha kolay yapabilir misiniz?
      courseD_farmer_while2_2019:
        courseD_farmer_while2_a: Deliğe ulaşmak için yalnızca bir kez ilerlemeniz
          gerekecek.
        courseD_farmer_while2_b: Altı kez '1 doldur' bloğuna ihtiyacınız var. Bunu
          bir döngü ile daha kolay yapabilir misiniz?
      courseD_farmer_while3:
        courseD_farmer_while3_a: Bir döngü, burada kodunuzu basitleştirmenize yardımcı
          olabilir.
        courseD_farmer_while3_b: Yığına ulaşmak için 'dön' bloklarından hiç birine
          ihtiyacınız olmamalı.
      courseD_farmer_while3_2018:
        courseD_farmer_while3_a: Bir döngü, burada kodunuzu basitleştirmenize yardımcı
          olabilir.
        courseD_farmer_while3_b: Yığına ulaşmak için 'dön' bloklarından hiç birine
          ihtiyacınız olmamalı.
      courseD_farmer_while3_2019:
        courseD_farmer_while3_a: Bir döngü, burada kodunuzu basitleştirmenize yardımcı
          olabilir.
        courseD_farmer_while3_b: Yığına ulaşmak için 'dön' bloklarından hiç birine
          ihtiyacınız olmamalı.
      courseD_farmer_while4:
        courseD_farmer_conditionals4_b: Bu, daha önceki bir bulmaya çok benziyor,
          tek fark hangi döngüye ihtiyacınız olduğu.
      courseD_farmer_while4_2018:
        courseD_farmer_conditionals4_b: Bu, daha önceki bir bulmaya çok benziyor,
          tek fark hangi döngüye ihtiyacınız olduğu.
      courseD_farmer_while4_2019:
        courseD_farmer_conditionals4_b: Bu, daha önceki bir bulmaya çok benziyor,
          tek fark hangi döngüye ihtiyacınız olduğu.
      courseD_farmer_while5:
        courseD_farmer_conditionals5a_b: Çiftçi sıranın sonuna ulaşmak için toplam
          beş kez ilerlemeli. Çiftçi başka ne yapmalı?
        courseD_farmer_conditionals5a_c: 5 kere ilerle. Her ilerlediğinde "sürece
          yığın var" döngüsü ile toprağı temizle.
      courseD_farmer_while5_2018:
        courseD_farmer_conditionals5a_b: Çiftçi sıranın sonuna ulaşmak için toplam
          beş kez ilerlemeli. Çiftçi başka ne yapmalı?
        courseD_farmer_conditionals5a_c: 5 kere ilerle. Her ilerlediğinde "sürece
          yığın var" döngüsü ile toprağı temizle.
      courseD_farmer_while5_2019:
        courseD_farmer_conditionals5a_b: Çiftçi sıranın sonuna ulaşmak için toplam
          beş kez ilerlemeli. Çiftçi başka ne yapmalı?
        courseD_farmer_conditionals5a_c: 5 kere ilerle. Her ilerlediğinde "sürece
          yığın var" döngüsü ile toprağı temizle.
      courseD_farmer_while6:
        courseD_farmer_conditionals6_c: "Merdiven basamak modeli aşağıdaki blokları
          kullanır \n\\-ilerle \n\n-   doldur \n-   sağa dön \n-   ilerle \n-   doldur
          \n-   sola dön\n    Kaç kez bu merdiven basamağı desenini kullanman gerekiyor?
          'Çukur olduğu sürece' bloğunu kullanarak çukurları doldurduğunuzdan emin
          olun."
      courseD_farmer_while6_2018:
        courseD_farmer_conditionals6_c: "Merdiven basamak modeli aşağıdaki blokları
          kullanır \n\\-ilerle \n\n-   doldur \n-   sağa dön \n-   ilerle \n-   doldur
          \n-   sola dön\n    Kaç kez bu merdiven basamağı desenini kullanman gerekiyor?
          'Çukur olduğu sürece' bloğunu kullanarak çukurları doldurduğunuzdan emin
          olun."
      courseD_farmer_while6_2019:
        courseD_farmer_conditionals6_c: "Merdiven basamak modeli aşağıdaki blokları
          kullanır \n\\-ilerle \n\n-   doldur \n-   sağa dön \n-   ilerle \n-   doldur
          \n-   sola dön\n    Kaç kez bu merdiven basamağı desenini kullanman gerekiyor?
          'Çukur olduğu sürece' bloğunu kullanarak çukurları doldurduğunuzdan emin
          olun."
      courseD_farmer_while7:
        courseD_farmer_conditionals8_b: Bir tekrarla dongüsünün içine 'yol boyunca'
          döngüsü koymak bu bulmacada size yardımcı olabilir.
        courseD_farmer_conditionals8_c: Her yolun sonunda ne yapman gerekiyor?
      courseD_farmer_while7_2018:
        courseD_farmer_conditionals8_b: Bir tekrarla dongüsünün içine 'yol boyunca'
          döngüsü koymak bu bulmacada size yardımcı olabilir.
        courseD_farmer_conditionals8_c: Her yolun sonunda ne yapman gerekiyor?
      courseD_farmer_while7_2019:
        courseD_farmer_conditionals8_b: Bir tekrarla dongüsünün içine 'yol boyunca'
          döngüsü koymak bu bulmacada size yardımcı olabilir.
        courseD_farmer_conditionals8_c: Her yolun sonunda ne yapman gerekiyor?
      courseD_farmer_while_challenge1:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir
          boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada
          birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz.
          Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan
          bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_farmer_while_challenge1_2018:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir
          boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada
          birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz.
          Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan
          bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_farmer_while_challenge1_2019:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir
          boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada
          birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz.
          Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan
          bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_farmer_while_challenge2:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir
          boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada
          birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz.
          Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan
          bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: Muhtemelen bir zig-zag deseni
          oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız,
          buraya onun için birkaç ekleme yapabilirsiniz.
        courseD_harvester_nested_loops_challenge1_b: Birden fazla mısır toplamak için
          'mısır topla'yı birden fazla kere kullanmanız gerekir.
        courseD_harvester_nested_loops_challenge1_c: Bu bulmacayı çözmek için ana
          döngünüzün içine küçük bir döngü koymanız gerekir!
      courseD_harvester_nested_loops_challenge1_2018:
        courseD_harvester_nested_loops_challenge1_a: Muhtemelen bir zig-zag deseni
          oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız,
          buraya onun için birkaç ekleme yapabilirsiniz.
        courseD_harvester_nested_loops_challenge1_b: Birden fazla mısır toplamak için
          'mısır topla'yı birden fazla kere kullanmanız gerekir.
        courseD_harvester_nested_loops_challenge1_c: Bu bulmacayı çözmek için ana
          döngünüzün içine küçük bir döngü koymanız gerekir!
      courseD_harvester_nested_loops_challenge1_2019:
        courseD_harvester_nested_loops_challenge1_a: Muhtemelen bir zig-zag deseni
          oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız,
          buraya onun için birkaç ekleme yapabilirsiniz.
        courseD_harvester_nested_loops_challenge1_b: Birden fazla mısır toplamak için
          'mısır topla'yı birden fazla kere kullanmanız gerekir.
        courseD_harvester_nested_loops_challenge1_c: Bu bulmacayı çözmek için ana
          döngünüzün içine küçük bir döngü koymanız gerekir!
      courseD_maze_intro4_2019:
        courseC_maze_programming4_a: Sağa veya sola Scrat'in bakış açısından dönebilirsiniz.
          Eğer yüzünüz sağa dönükse, sağa dönmek sizi aşağıya döndürecektir.
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne
          dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için
          bir kez daha ileri gidin.
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_nestedLoops3:
        courseD_maze_nestedLoops3_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseD_maze_nestedLoops3_c: Düz bir yol ve bir dönüş için kod yazmayı deneyin.
          Bunu, ayçiçeğine ulaşmak için tekrar edebilir misiniz?
      courseD_maze_nestedLoops3_2018:
        courseD_maze_nestedLoops3_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseD_maze_nestedLoops3_c: Düz bir yol ve bir dönüş için kod yazmayı deneyin.
          Bunu, ayçiçeğine ulaşmak için tekrar edebilir misiniz?
      courseD_maze_nestedLoops3_2019:
        courseD_maze_nestedLoops3_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseD_maze_nestedLoops3_c: Düz bir yol ve bir dönüş için kod yazmayı deneyin.
          Bunu, ayçiçeğine ulaşmak için tekrar edebilir misiniz?
      courseD_maze_nestedLoops5:
        courseD_maze_nestedLoops5_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseD_maze_nestedLoops5_2018:
        courseD_maze_nestedLoops5_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseD_maze_nestedLoops5_2019:
        courseD_maze_nestedLoops5_b: Döngüleri nereye koyacağınızı bulamıyor musunuz?
          Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseD_maze_ramp1:
        courseC_maze_programming1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların
          tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların
          tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların
          tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp2:
        courseC_maze_programming2_b: 3 bloğun beraber tıklandığından ve 'çalıştığı
          zaman' bloğuna bağlı olduğundan emin olun.
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_b: 3 bloğun beraber tıklandığından ve 'çalıştığı
          zaman' bloğuna bağlı olduğundan emin olun.
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_b: 3 bloğun beraber tıklandığından ve 'çalıştığı
          zaman' bloğuna bağlı olduğundan emin olun.
      courseD_maze_ramp4:
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne
          dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için
          bir kez daha ileri gidin.
      courseD_maze_ramp4_2018:
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne
          dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için
          bir kez daha ileri gidin.
      courseD_maze_ramp4_2019:
        courseC_maze_programming4_a: Sağa veya sola Scrat'in bakış açısından dönebilirsiniz.
          Eğer yüzünüz sağa dönükse, sağa dönmek sizi aşağıya döndürecektir.
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne
          dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için
          bir kez daha ileri gidin.
      courseD_maze_ramp5:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5a:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5b:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Kuş duvara doğru bakıyor,  hareket etmeden önce
          yönünü döndürmeyi unutmayın.
        courseC_maze_programming6_c: Bir defada bir parça kod yazabileceğinizi ve
          oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseD_maze_ramp7:
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu
          tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir
          'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç
          içe döngü** denir.
      courseD_maze_until1:
        courseD_maze_until1_a: Kodunuzu kısaltmak için döngü oluşturabileceğiniz herhangi
          bir dizi var mı?
        courseD_maze_until1_b: Bu bulmacayı çözmek için bir tane iç içe döngü kullanmayı
          deneyin.
      courseD_maze_until1_2018:
        courseD_maze_until1_a: Kodunuzu kısaltmak için döngü oluşturabileceğiniz herhangi
          bir dizi var mı?
        courseD_maze_until1_b: Bu bulmacayı çözmek için bir tane iç içe döngü kullanmayı
          deneyin.
      courseD_maze_until1_2019:
        courseD_maze_until1_a: Kodunuzu kısaltmak için döngü oluşturabileceğiniz herhangi
          bir dizi var mı?
        courseD_maze_until1_b: Bu bulmacayı çözmek için bir tane iç içe döngü kullanmayı
          deneyin.
      courseD_maze_until3:
        courseD_maze_until3_b: İşin içinden çıkamıyorsan, adımları bir kağıda yazmayı
          ve nerede tekrar ettiklerini bulmayı dene.
        courseD_maze_until3_c: Bu bulmaca için takip edebileceğin bir merdiven basamağı
          deseni var mı?
        courseD_maze_until3_d: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu
          kullanmayı unutma.
      courseD_maze_until3_2018:
        courseD_maze_until3_b: İşin içinden çıkamıyorsan, adımları bir kağıda yazmayı
          ve nerede tekrar ettiklerini bulmayı dene.
        courseD_maze_until3_c: Bu bulmaca için takip edebileceğin bir merdiven basamağı
          deseni var mı?
        courseD_maze_until3_d: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu
          kullanmayı unutma.
      courseD_maze_until3_2019:
        courseD_maze_until3_b: İşin içinden çıkamıyorsan, adımları bir kağıda yazmayı
          ve nerede tekrar ettiklerini bulmayı dene.
        courseD_maze_until3_c: Bu bulmaca için takip edebileceğin bir merdiven basamağı
          deseni var mı?
        courseD_maze_until3_d: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu
          kullanmayı unutma.
      courseD_maze_until4:
        courseD_maze_until4_b: Bu bulmaca için takip edebileceğin bir merdiven basamağı
          deseni var mı?
        courseD_maze_until4_c: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu
          kullanmayı unutma.
      courseD_maze_until4_2018:
        courseD_maze_until4_b: Bu bulmaca için takip edebileceğin bir merdiven basamağı
          deseni var mı?
        courseD_maze_until4_c: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu
          kullanmayı unutma.
      courseD_maze_until4_2019:
        courseD_maze_until4_b: Bu bulmaca için takip edebileceğin bir merdiven basamağı
          deseni var mı?
        courseD_maze_until4_c: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu
          kullanmayı unutma.
      courseD_maze_until5:
        courseD_maze_until5_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine
          kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
        courseD_maze_until5_c: Her adımdan sonra, zombi sol tarafa bir yol olup olmadığını
          kontrol etmeli. Eğer bir yol bulursa ne yapması gerekir?
      courseD_maze_until5_2018:
        courseD_maze_until5_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine
          kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
      courseD_maze_until5_2019:
        courseD_maze_until5_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine
          kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
      courseD_maze_until6:
        courseD_maze_until6_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine
          kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
        courseD_maze_until6_c: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar
          tekrarla' bloğu sebebiyle kodun neredeyse aynı!
      courseD_maze_until6_2018:
        courseD_maze_until6_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine
          kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
      courseD_maze_until6_2019:
        courseD_maze_until6_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine
          kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
      courseD_maze_until7:
        courseD_maze_until7_b: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar
          tekrarla' bloğu sebebiyle kodun neredeyse aynı!
        courseD_maze_until7_c: Sol taraftaki yolları kontrol etmeyi unutma, çünkü
          sağa dönmek sizi yoldan çıkarır!
      courseD_maze_until7_2018:
        courseD_maze_until7_b: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar
          tekrarla' bloğu sebebiyle kodun neredeyse aynı!
      courseD_maze_until7_2019:
        courseD_maze_until7_b: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar
          tekrarla' bloğu sebebiyle kodun neredeyse aynı!
      courseD_maze_until8:
        courseD_maze_until8_b: "'eğer/değilse' bloğun ile: eğer ileride bir yol varsa,
          ne yapmalısın?"
        courseD_maze_until8_c: "'eğer/değilse' bloğun ile: eğer ileride bir yol yoksa,
          hangi yöne dönmelisin?"
      courseD_maze_until9:
        courseD_maze_until8_b: Eğer ileriye doğru bir yol yoksa hangi yöne dönmen
          gerekir?
        courseD_maze_until8_c: Ayçiçeğine ulaşmak için 'kadar tekrarla' bloğunu kullanmayı
          unutmayın!
      courseD_maze_until9_2018:
        courseD_maze_until8_c: Ayçiçeğine ulaşmak için 'kadar tekrarla' bloğunu kullanmayı
          unutmayın!
      courseD_maze_until9_2019:
        courseD_maze_until8_c: Ayçiçeğine ulaşmak için 'kadar tekrarla' bloğunu kullanmayı
          unutmayın!
      courseD_playLab_cond1:
        courseD_playLab_cond1_b: Gittikleri yönü değiştirmek için 'ok olduğunda' ve
          'aktörü taşı' bloklarındaki açılır menüleri kullan.
        courseD_playLab_cond1_c: Kodunuzu yazdıktan sonra Pegleg' i ejderhaya doğru
          hareket ettirmeyi unutmayın!
      courseD_playLab_cond1_2018:
        courseD_playLab_cond1_b: Gittikleri yönü değiştirmek için 'ok olduğunda' ve
          'aktörü taşı' bloklarındaki açılır menüleri kullan.
        courseD_playLab_cond1_c: Kodunuzu yazdıktan sonra Pegleg' i ejderhaya doğru
          hareket ettirmeyi unutmayın!
      courseD_playLab_cond3a:
        courseD_playLab_cond3_c: "-   'Eğer' dragon mutlu ise\n    -   'puan al'\n
          \   -   'puan al'  \n\n-   'değilse' 'puan al'"
      courseD_playLab_cond3a_2018:
        courseD_playLab_cond3_c: "-   'Eğer' dragon mutlu ise\n    -   'puan al'\n
          \   -   'puan al'  \n\n-   'değilse' 'puan al'"
      courseD_playLab_cond5:
        courseD_playLab_cond5_b: Çalışma alanında birden fazla 'sürekli tekrarla'
          döngüsü olabilir.
      courseD_playLab_cond5_2018:
        courseD_playLab_cond5_b: Çalışma alanında birden fazla 'sürekli tekrarla'
          döngüsü olabilir.
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: Scrat palamuda ulaşamıyorsa, üç karenin tümünün
          tam olarak yapıştığından emin olun, sonra tekrar "Çalıştır"a tıklayın.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp2:
        courseC_maze_programming2_b: Her 3 'ileri git' blokunun 'çalıştığı zaman'
          blokuna eklenmiş olduğundan emin olun.
      courseD_scrat_ramp3:
        courseC_maze_programming3_b: Sağa ve sola dönüşlerin kuş bakışı olduğunu unutmayın.
      courseD_scrat_ramp4:
        courseC_maze_programming4_a: Sağa veya sola Scrat'in bakış açısından dönebilirsiniz.
          Eğer yüzünüz sağa dönükse, sağa dönmek sizi aşağıya döndürecektir.
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne
          dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için
          bir kez daha ileri gidin.
        courseC_maze_programming4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp5:
        courseC_maze_programming5_b: Köşeye ulaşmak için ne kadar hareket etmek gerekir?
        courseC_maze_programming5_c: Domuzu almak için köşeden sola dönmen gerekir.
      courseD_scrat_ramp6:
        courseC_maze_programming6a_a: Scrat'i hareket ettirmek için bir 'tekrar' döngüsü
          kullanın!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseD_scrat_programming6_b: Scrat yanlış yöne dönük olduğu için, hareket
          etmeden önce dönmeyi unutmayın.
        courseD_scrat_programming6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp8:
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu
          tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_artist_concept1:
        courseE_artist_concept1_c: Kalemin genişliğini değiştirmek için fonksiyonu
          çalıştırmadan önce her defasında 'genişliği ayarla' bloğunu kullanın.
      courseE_artist_concept1_2018:
        courseE_artist_concept1_c: Kalemin genişliğini değiştirmek için fonksiyonu
          çalıştırmadan önce her defasında 'genişliği ayarla' bloğunu kullanın.
      courseE_artist_concept4:
        courseE_artist_concept4_c: Karelerin bir çizgisini çizdikten sonra, etrafında
          dönebilir ve sola giden karelerin diğer çizgilerini çizebilirsiniz veya
          sağa giden karelerin diğer çizgisini çizmek için figürün soluna geri atlayabilirsiniz.
          Hangisini tercih edersiniz?
      courseE_artist_concept4_2018:
        courseE_artist_concept4_c: Karelerin bir çizgisini çizdikten sonra, etrafında
          dönebilir ve sola giden karelerin diğer çizgilerini çizebilirsiniz veya
          sağa giden karelerin diğer çizgisini çizmek için figürün soluna geri atlayabilirsiniz.
          Hangisini tercih edersiniz?
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'Yarım altıgenin \*\* 30 kenar uzunluğu
          \*\* ve \*\* 60 derece\*\*sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_b: '2/3 üçgeninin \*\* 80 kenar uzunluğunu
          \*\* ve \*\* 120 derece \*\*sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_c: |-
          Şeklin tamamını oluşturmak için tekrar etmek istediğiniz tasarım bu:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'Yarım altıgenin \*\* 30 kenar uzunluğu
          \*\* ve \*\* 60 derece\*\*sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_b: '2/3 üçgeninin \*\* 80 kenar uzunluğunu
          \*\* ve \*\* 120 derece \*\*sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_c: |-
          Şeklin tamamını oluşturmak için tekrar etmek istediğiniz tasarım bu:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: Bir fonksiyonu bir kez oluşturduğunda,
          onu tekrar tekrar kullanabilirsin. İstediğin zaman istediğin yerde!
        courseE_artist_concept_challenge2_b: |-
          Bu komutu kullanarak tuval üzerinde farklı konumlara atlayabilirsin:
          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2018:
        courseE_artist_concept_challenge2_a: Bir fonksiyonu bir kez oluşturduğunda,
          onu tekrar tekrar kullanabilirsin. İstediğin zaman istediğin yerde!
        courseE_artist_concept_challenge2_b: |-
          Bu komutu kullanarak tuval üzerinde farklı konumlara atlayabilirsin:
          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_functions1:
        courseE_artist_functions1_a: Karelerin kenarları 100 piksel genişliğinde,
          buda demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        courseE_artist_functions1_b: Gözlük yapmak için çakışan çizgiler olabilir.
        courseE_artist_functions1_c: Daha kısa kodlama için, gözlüğün kare çerçevesini
          çizmek için bir tane 'tekrarla' döngüsü kullanmayı deneyin.
      courseE_artist_functions10:
        courseD_artist_functions10_c: |-
          `line of hexagons` isimli fonksiyonun nerede kullanıldığı görebiliyor musun?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018:
        courseD_artist_functions10_c: |-
          `line of hexagons` isimli fonksiyonun nerede kullanıldığı görebiliyor musun?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2019:
        courseD_artist_functions10_c: |-
          `line of hexagons` isimli fonksiyonun nerede kullanıldığı görebiliyor musun?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions2:
        courseD_artist_functions2_b: Fonksiyon bütün programı içermeyecek, sadece
          100 piksel uzunluğundaki kenarlarını çizer.
        courseD_artist_functions2_c: "'Çalıştığı zaman' bloğunun altına fonksiyonunuzu
          'çalıştırmak' için yeşil 'bir kare çiz' bloğu kullanın. Aksi takdirde, fonksiyonunuzdaki
          kod çalışmayacak."
        courseD_artist_functions2_a: "Programınız: \n\\-Fonksiyon kullanmalıdır.\n\n-
          \  ileri 100 + 75 piksel ilerlemelidir\n-   Fonksiyon kullanmalıdır"
      courseE_artist_functions2_2018:
        courseD_artist_functions2_b: Fonksiyon bütün programı içermeyecek, sadece
          100 piksel uzunluğundaki kenarlarını çizer.
        courseD_artist_functions2_c: "'Çalıştığı zaman' bloğunun altına fonksiyonunuzu
          'çalıştırmak' için yeşil 'bir kare çiz' bloğu kullanın. Aksi takdirde, fonksiyonunuzdaki
          kod çalışmayacak."
        courseD_artist_functions2_a: "Programınız: \n\\-Fonksiyon kullanmalıdır.\n\n-
          \  ileri 100 + 75 piksel ilerlemelidir\n-   Fonksiyon kullanmalıdır"
      courseE_artist_functions2_2019:
        courseD_artist_functions2_b: Fonksiyon bütün programı içermeyecek, sadece
          100 piksel uzunluğundaki kenarlarını çizer.
        courseD_artist_functions2_c: "'Çalıştığı zaman' bloğunun altına fonksiyonunuzu
          'çalıştırmak' için yeşil 'bir kare çiz' bloğu kullanın. Aksi takdirde, fonksiyonunuzdaki
          kod çalışmayacak."
        courseD_artist_functions2_a: "Programınız: \n\\-Fonksiyon kullanmalıdır.\n\n-
          \  ileri 100 + 75 piksel ilerlemelidir\n-   Fonksiyon kullanmalıdır"
      courseE_artist_functions3:
        courseD_artist_functions3_b: Döngünüzün içinde başlatıcı kod bloklarından
          her 3' ü de bulunmalı.
      courseE_artist_functions4:
        courseD_artist_functions4_b: Kendi fonksiyonunu oluşturmaya başlamak için
          'yıldız çiz' fonksiyonunu araç kutusunun dışına sürükle. Önceki bulmacadaki
          ile aynı koda sahip olmalı, çünkü aynı yıldız desenini çiziyorsun.
        courseD_artist_functions4_c: Ana programınızda bu fonksiyonu çağırmak için
          yeşil 'yıldız çiz' bloğunu kullan. Her bir yıldızda ileri atlamayı unutmayın!
      courseE_artist_functions5:
        courseD_artist_functions5_c: "'yıldız çiz' fonksiyonun içine yıldız şekli
          kodunu sürükleyerek başlayın, sonra 3 yıldızı çizmek için bu fonksiyonu
          kullanın!"
      courseE_artist_functions5_2018:
        courseD_artist_functions5_c: "'yıldız çiz' fonksiyonun içine yıldız şekli
          kodunu sürükleyerek başlayın, sonra 3 yıldızı çizmek için bu fonksiyonu
          kullanın!"
      courseE_artist_functions5_2019:
        courseD_artist_functions5_c: "'yıldız çiz' fonksiyonun içine yıldız şekli
          kodunu sürükleyerek başlayın, sonra 3 yıldızı çizmek için bu fonksiyonu
          kullanın!"
      courseE_artist_functions6:
        grade4_artist_functions_windows0_c: Hata yapmaktan korkmayın! Bulmacayı henüz
          çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için
          kodu çalıştırın.
      courseE_artist_functions8:
        courseD_artist_functions8_f: Sadece bir tane 'move forward' bloğuna ihtiyacın
          var, fakat birkaç tane 'jump forward' ve/veya 'jump backward' bloğuna ihtiyacın
          olacak!
        courseD_artist_functions8_d: |-
          Karelerin bir çizgisini yapmak için,

          -   3 kez tekrarlayın
          -   bir kenar uzunluğu**50 piksel** olan bir kare çizin
          -   **100 piksel** ileri atlayın
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_f: Sadece bir tane 'move forward' bloğuna ihtiyacın
          var, fakat birkaç tane 'jump forward' ve/veya 'jump backward' bloğuna ihtiyacın
          olacak!
        courseD_artist_functions8_d: |-
          Karelerin bir çizgisini yapmak için,

          -   3 kez tekrarlayın
          -   bir kenar uzunluğu**50 piksel** olan bir kare çizin
          -   **100 piksel** ileri atlayın
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_f: Sadece bir tane 'move forward' bloğuna ihtiyacın
          var, fakat birkaç tane 'jump forward' ve/veya 'jump backward' bloğuna ihtiyacın
          olacak!
        courseD_artist_functions8_d: |-
          Karelerin bir çizgisini yapmak için,

          -   3 kez tekrarlayın
          -   bir kenar uzunluğu**50 piksel** olan bir kare çizin
          -   **100 piksel** ileri atlayın
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions9:
        courseD_artist_functions9_e: |-
          Bu çizimde 'üçgenlerin çizgisi' olarak kullanılabilecek 4 yerin hepsini bulabilir misin?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_c: "Üçgenden bir çizgi çizmek için: \n\n-   tekrar
          4 kez \n-   bir üçgen çiz\n-   ileri 50 piksel"
        courseD_artist_functions9_d: "Elmas çizmek için: \n\n-   2 kez tekrarla\n
          \   \\-üçgenlerden çizgi çiz \n-   120 derece dönüş yap\n-   üçgenlerden
          çizgi çiz \n-   60 derece dön"
      courseE_artist_functions9_2018:
        courseD_artist_functions9_e: |-
          Bu çizimde 'üçgenlerin çizgisi' olarak kullanılabilecek 4 yerin hepsini bulabilir misin?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_c: "Üçgenden bir çizgi çizmek için: \n\n-   tekrar
          4 kez \n-   bir üçgen çiz\n-   ileri 50 piksel"
        courseD_artist_functions9_d: "Elmas çizmek için: \n\n-   2 kez tekrarla\n
          \   \\-üçgenlerden çizgi çiz \n-   120 derece dönüş yap\n-   üçgenlerden
          çizgi çiz \n-   60 derece dön"
      courseE_artist_functions9_2019:
        courseD_artist_functions9_e: |-
          Bu çizimde 'üçgenlerin çizgisi' olarak kullanılabilecek 4 yerin hepsini bulabilir misin?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_c: "Üçgenden bir çizgi çizmek için: \n\n-   tekrar
          4 kez \n-   bir üçgen çiz\n-   ileri 50 piksel"
        courseD_artist_functions9_d: "Elmas çizmek için: \n\n-   2 kez tekrarla\n
          \   \\-üçgenlerden çizgi çiz \n-   120 derece dönüş yap\n-   üçgenlerden
          çizgi çiz \n-   60 derece dön"
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız,
          son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara
          da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
        courseE_artist_functions_challenge1_b: Ayrıca başka konumlara 'zıpla'yabilirsiniz
          veya bütün tasarımı istediğiniz gibi değiştirebilirsiniz!
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız,
          son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara
          da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
        courseE_artist_functions_challenge1_b: Ayrıca başka konumlara 'zıpla'yabilirsiniz
          veya bütün tasarımı istediğiniz gibi değiştirebilirsiniz!
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız,
          son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara
          da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
        courseE_artist_functions_challenge1_b: Ayrıca başka konumlara 'zıpla'yabilirsiniz
          veya bütün tasarımı istediğiniz gibi değiştirebilirsiniz!
      courseE_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>

          <block type="jump_to_xy">
          <title name="XPOS">350</title>
          <title name="YPOS">200</title>
          </block>
          </xml>

          Bu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan _önce_ nerede olduğunun bir önemi yoktur!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2018:
        courseE_artist_functions_challenge1_a: |-
          <xml>

          <block type="jump_to_xy">
          <title name="XPOS">350</title>
          <title name="YPOS">200</title>
          </block>
          </xml>

          Bu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan _önce_ nerede olduğunun bir önemi yoktur!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2019:
        courseE_artist_functions_challenge1_a: |-
          <xml>

          <block type="jump_to_xy">
          <title name="XPOS">350</title>
          <title name="YPOS">200</title>
          </block>
          </xml>

          Bu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan _önce_ nerede olduğunun bir önemi yoktur!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_ramp8:
        courseE_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan
          ve 100 yerine 200 gir.
        courseE_artist_ramp8_b: 4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel'
          bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin
          olun. Daha sonra dönmeyi unutma!
        courseE_artist_ramp8_c: Döngünüzün içinde iki blok bulunmalı, 'ilerle' ve
          '90 derece sağa dön'.
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan
          ve 100 yerine 200 gir.
        courseE_artist_ramp8_b: 4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel'
          bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin
          olun. Daha sonra dönmeyi unutma!
        courseE_artist_ramp8_c: Döngünüzün içinde iki blok bulunmalı, 'ilerle' ve
          '90 derece sağa dön'.
      courseE_artist_ramp9:
        courseD_artist_ramp12_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseD_artist_ramp12_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön'
          bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp12_c: Her tarafı çizmek için 100 piksel ilerlemen gerekecek,
          sonra 120 derece dönmelisin. Kaç tarafa ihtiyacın var?
      courseE_artist_ramp9_2:
        courseD_artist_ramp12_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseD_artist_ramp12_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön'
          bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp12_c: Her tarafı çizmek için 100 piksel ilerlemen gerekecek,
          sonra 120 derece dönmelisin. Kaç tarafa ihtiyacın var?
      courseE_bee_concept1:
        courseE_bee_concept1_b: Burada _tekrarlayan_ herhangi bir desen var mı?
      courseE_bee_concept1_2018:
        courseE_bee_concept1_b: Burada _tekrarlayan_ herhangi bir desen var mı?
      courseE_bee_concept2:
        courseE_bee_concept2_a: Burada bir 'süresince' döngüsünün yardımı olur mu?
        courseE_bee_concept2_d: Bal>0 mı diye görmek için boş alanları bile kontrol
          edebilirsiniz.
        courseE_bee_concept2_b: Her yolun sonuna hareket etmek için, ve her boş alandaki
          tüm balı toplamak için 'süresince' döngüsünü kullanabilirsiniz.
        courseE_bee_concept2_c: Her yoldan sonra arı hangi yöne dönmeli?
      courseE_bee_concept2_2018:
        courseE_bee_concept2_a: Burada bir 'süresince' döngüsünün yardımı olur mu?
        courseE_bee_concept2_d: Bal>0 mı diye görmek için boş alanları bile kontrol
          edebilirsiniz.
        courseE_bee_concept2_b: Her yolun sonuna hareket etmek için, ve her boş alandaki
          tüm balı toplamak için 'süresince' döngüsünü kullanabilirsiniz.
        courseE_bee_concept2_c: Her yoldan sonra arı hangi yöne dönmeli?
      courseE_bee_concept3:
        courseE_bee_concept3a_b: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu
          adım adım yazmayı deneyin ve desenlere bakın.
        courseE_bee_concept3a_c: Üç grup çiçek var, bu yüzden dış döngünüz üç kez
          tekrarlanmalı.
      courseE_bee_concept3_2018:
        courseE_bee_concept3a_b: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu
          adım adım yazmayı deneyin ve desenlere bakın.
      courseE_bee_concept4:
        courseE_bee_concept4_b: Basamak deseni, çiçekler ve balpeteklerinin tamamını
          geçmenize yardımcı olabilir.
        courseE_bee_concept4_c: Eğer bir çiçekte iseniz, kaç kez nektar almak zorundasınız?
          Bu sayı bütün çiçekler için aynı mıdır?
      courseE_bee_concept4_2018:
        courseE_bee_concept4_b: Basamak deseni, çiçekler ve balpeteklerinin tamamını
          geçmenize yardımcı olabilir.
        courseE_bee_concept4_c: Eğer bir çiçekte iseniz, kaç kez nektar almak zorundasınız?
          Bu sayı bütün çiçekler için aynı mıdır?
      courseE_bee_concept5:
        courseE_bee_concept5_c: "Arının gidebileceği dikdörtgen yolun bir resmi var.
          \n![](<https://images.code.org/b0ab0f9ec823fd8fbc9b032d68fd69d0-image-1493152066638.7.8
          Hint Drawing.png>)"
      courseE_bee_concept5_2018:
        courseE_bee_concept5_c: "Arının gidebileceği dikdörtgen yolun bir resmi var.
          \n![](<https://images.code.org/b0ab0f9ec823fd8fbc9b032d68fd69d0-image-1493152066638.7.8
          Hint Drawing.png>)"
      courseE_bee_functions1:
        courseE_bee_functions1_b: Kodunuzu kısaltmak için nektar toplarken bir tane
          'tekrarla' döngüsü kullanın.
        courseE_bee_functions1_c: Sola ve sağa dönüşlerin arının bakış açısından olduğunu
          unutmayın.
      courseE_bee_functions10:
        courseE_bee_functions10_a: Bütün balı toplamak için 'süresince' (while) döngüsü
          kullanmanız gerekir, çünkü petekler arasında kaç bal olduğu farklılık gösterir.
        courseE_bee_functions10_b: Fonksiyonlarınız dönüşler ve hareketler içermeli,
          böylece arı ana yolda olduğu zaman fonksiyonu çağırabilirisiniz.
        courseE_bee_functions10_c: Ana programda fonksiyonu çağırmayı unutmayın!
      courseE_bee_functions2:
        courseE_bee_functions2_b: Yeşil '2 nektar al' bloğunu fonksiyonu çağırmak
          için kullanın.
        courseE_bee_functions2_c: Bu bulmacayı çözmek için ilerle ve iki defa 2 nektar
          al.
      courseE_bee_functions3:
        courseE_bee_functions3_b: Ana programda 'çalıştığı zaman' bloğunun altında
          '5 al' fonksiyonunu çağır.
        courseE_bee_functions3_c: Ana programın tüm hareketleri kontrol edecek, fonksiyon
          sadece arı çiçeğe ulaştığında gerçekleşen şeyler için.
        courseE_bee_functions3_d: Doğruca bu yolu kullanmayı deneyin.
      courseE_bee_functions4:
        courseE_bee_functions4_b: Yeşil 'ilerle ve nektar al' blokunu fonksiyonu çağırmak
          için kullan.
        courseE_bee_functions4_c: Fonksiyonu değiştirmene gerek yok, sadece programda
          kullan.
      courseE_bee_functions5:
        courseE_bee_functions5_c: "'ileri git' bloku 'geri git' bloku olarak değiştirilebilir.
          Yolların sonundaki her yeri değiştirmek yerine bunu kullan!"
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.
           Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! \[] (<https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif>)
        courseE_bee_functions6_b: Bu durumda fonksiyon içine taşımak yardımcı olabilir,
          ama bütün 'ilerle' bloklarının orada olması gerekmiyor.
      courseE_bee_functions7:
        courseE_bee_functions7_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde
          bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın.
          Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions7_b: Kodunu yeşil fonksiyon bloğu içinde oluştur. ! \[]
          (<https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif>)
      courseE_bee_functions8:
        courseE_bee_functions8_c: Ana programınıza merdiven adımı hareketleri deseni
          gerekiyor.
      courseE_bee_functions9:
        courseE_bee_functions9_b: Bazı çiçeklerin ne kadar nektara sahip olduğunu
          bilsen bile 'sürece' döngüsü hepsi için çalışan bir fonksiyon yapabilir.
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu
          her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra
          çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde
          kod oluşturmayı unutmayın.
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu
          her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra
          çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde
          kod oluşturmayı unutmayın.
      courseE_farmer_concept1:
        courseE_farmer_concept1_b: Merdiven adımı desenini delikleri almak için kullanabilirsin.
      courseE_farmer_concept1_2018:
        courseE_farmer_concept1_b: Merdiven adımı desenini delikleri almak için kullanabilirsin.
      courseE_farmer_concept2:
        courseE_farmer_concept2_b: Dönen, yoldan aşağı giden, kabaklar toplayan ve
          ana yatay yola döndüren fonksiyon burada yardımcı olabilir.
        courseE_farmer_concept2_c: Ana programın yeşil 'bir şeyler yap' bloku ile
          bu fonksiyonu çağırabilir.
      courseE_farmer_concept2_2018:
        courseE_farmer_concept2_b: Dönen, yoldan aşağı giden, kabaklar toplayan ve
          ana yatay yola döndüren fonksiyon burada yardımcı olabilir.
        courseE_farmer_concept2_c: Ana programın yeşil 'bir şeyler yap' bloku ile
          bu fonksiyonu çağırabilir.
      courseE_farmer_concept3:
        grade3_robotFarmer_ConditionalsIntro_8_b: Bir yolun sonuna geldiğinizde ne
          yapmanız gerekir?
        grade3_robotFarmer_ConditionalsIntro_8_c: Her düz yolda bir çok defa kodunuzu
          çalıştırmak için 'tekrarla' döngüsü kullanın.
      courseE_farmer_concept3_2018:
        grade3_robotFarmer_ConditionalsIntro_8_b: Bir yolun sonuna geldiğinizde ne
          yapmanız gerekir?
        grade3_robotFarmer_ConditionalsIntro_8_c: Her düz yolda bir çok defa kodunuzu
          çalıştırmak için 'tekrarla' döngüsü kullanın.
      courseE_farmer_functions1:
        courseE_farmer_functions1_a: Araç kutusu bu sefer küçük farkla düzenlendi!
          Hangi bloklara sahip olduğunu görmek için farklı kategorilere tıkla.
        courseE_farmer_functions1_b: Sadece bir kabak alman gerekiyor, ama onu bir
          döngü kullanarak alabilir misin?
      courseE_farmer_functions10b:
        courseE_farmer_functions10b_a: Bu bulmacayı çözmek için bir 'eğer/değilse'
          ifadesini kullanman gerekir.
        courseE_farmer_functions10b_b: İlk bal kabağından sonra hangi yöne dönmeniz
          gerekir?
        courseE_farmer_functions10b_c: Fonksiyonu yapmak için yardıma ihtiyacınız
          varsa son bulmacada geriye bakın.
      courseE_farmer_functions1_2018:
        courseE_farmer_functions1_a: Araç kutusu bu sefer küçük farkla düzenlendi!
          Hangi bloklara sahip olduğunu görmek için farklı kategorilere tıkla.
        courseE_farmer_functions1_b: Sadece bir kabak alman gerekiyor, ama onu bir
          döngü kullanarak alabilir misin?
      courseE_farmer_functions1_2019:
        courseE_farmer_functions1_a: Araç kutusu bu sefer küçük farkla düzenlendi!
          Hangi bloklara sahip olduğunu görmek için farklı kategorilere tıkla.
        courseE_farmer_functions1_b: Sadece bir kabak alman gerekiyor, ama onu bir
          döngü kullanarak alabilir misin?
      courseE_farmer_functions1a:
        courseE_farmer_functions1a_b: Eğer mısırda değilsen, bir sonrakinde hangi
          mahsulü kontrol etmelisin?
      courseE_farmer_functions1a_2018:
        courseE_farmer_functions1a_b: Eğer mısırda değilsen, bir sonrakinde hangi
          mahsulü kontrol etmelisin?
      courseE_farmer_functions1a_2019:
        courseE_farmer_functions1a_b: Eğer mısırda değilsen, bir sonrakinde hangi
          mahsulü kontrol etmelisin?
      courseE_farmer_functions2b:
        courseE_farmer_functions2b_a: İki yolun sonuna ulaşmak için 'bal kabağına
          kadar tekrarla''yı kullanabilirsiniz.
        courseE_farmer_functions2b_b: Bağlantı yolunda hiç mısır yok, bu yüzden sadece
          ilerleyebilir ve dönebilirsiniz.
        courseE_farmer_functions2b_c: Bütün mısırları toplamak için iki ayrı 'kadar
          tekrarla' karesine ihtiyacınız var.
      courseE_farmer_functions2b_2018:
        courseE_farmer_functions2b_a: İki yolun sonuna ulaşmak için 'bal kabağına
          kadar tekrarla''yı kullanabilirsiniz.
        courseE_farmer_functions2b_b: Bağlantı yolunda hiç mısır yok, bu yüzden sadece
          ilerleyebilir ve dönebilirsiniz.
        courseE_farmer_functions2b_c: Bütün mısırları toplamak için iki ayrı 'kadar
          tekrarla' karesine ihtiyacınız var.
      courseE_farmer_functions2b_2019:
        courseE_farmer_functions2b_a: İki yolun sonuna ulaşmak için 'bal kabağına
          kadar tekrarla''yı kullanabilirsiniz.
        courseE_farmer_functions2b_b: Bağlantı yolunda hiç mısır yok, bu yüzden sadece
          ilerleyebilir ve dönebilirsiniz.
        courseE_farmer_functions2b_c: Bütün mısırları toplamak için iki ayrı 'kadar
          tekrarla' karesine ihtiyacınız var.
      courseE_farmer_functions2ba:
        courseE_farmer_functions2ba_a: Nu fonksiyonu çağırmak için yeşil 'mısır ve
          bal kabağı' karesi kullanın.
        courseE_farmer_functions2ba_b: Bu fonksiyonun nasıl çalıştığını görmek için
          alet çantasındaki bütün kareleri 'sırasında çalıştır'ın altına sürükleyin.
      courseE_farmer_functions2ba_2018:
        courseE_farmer_functions2ba_a: Nu fonksiyonu çağırmak için yeşil 'mısır ve
          bal kabağı' karesi kullanın.
      courseE_farmer_functions2ba_2019:
        courseE_farmer_functions2ba_a: Nu fonksiyonu çağırmak için yeşil 'mısır ve
          bal kabağı' karesi kullanın.
      courseE_farmer_functions3c:
        courseE_farmer_functions3c_a: Bu programda hangi dizi sıkça tekrarlanmış?
          Bu kareleri fonksiyona sürükleyebilir misiniz?
        courseE_farmer_functions3c_b: Kareleri sildiğin zamanlarda ana programdaki
          fonksiyonlarını çağırmayı unutma.
      courseE_farmer_functions4b:
        courseE_farmer_functions4b_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseE_farmer_functions4b_b: Her yoldan sonra dönmeyi unutma.
        courseE_farmer_functions4b_c: Yeşil 'mısır ve bal kabağı' kareleri alet çantasının
          fonksiyonlar sekmesindedir.
      courseE_farmer_functions5c:
        courseE_farmer_functions5c_a: Bu bulmacada başka döngü yapabileceğiniz desenler
          var mı?
        courseE_farmer_functions5c_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_farmer_functions6c:
        courseE_farmer_functions6c_a: Marul aramak için de fonksiyonunuzu düzenleyin.
        courseE_farmer_functions6c_b: Bir alanda marul olup olmadığını kontrol etmek
          için bir 'eğer/başka' karesi yardım eder mi?
        courseE_farmer_functions6c_c: Mısır aramaya devam etmeyi unutmayın!
      courseE_farmer_functions7b:
        courseE_farmer_functions7b_a: Burada bir fonksiyona ihtiyacınız yok, ama eğer
          sizin için yararlıysa bir tane yapabilirsiniz!
        courseE_farmer_functions7b_b: Mısır aramak için bir 'eğer/başka' ifadesi kullanın,
          sonra hangi mısırı bulduğunuza dayanarak dönün.
        courseE_farmer_functions7b_c: Labirent boyunca bütün yolu gitmenizde bir 'bal
          kabağına kadar tekrarla' döngüsü yardımcı olabilir.
      courseE_farmer_functions8b:
        courseE_farmer_functions8b_a: Verilen kodun ne yaptığını görmek için çalıştırmayı
          deneyin. Bundan sonra neye ihtiyacınız var?
        courseE_farmer_functions8b_b: Başlangıç karelerinin hepsini bir fonksiyona
          taşıyın ki onları biden fazla kullanabilirsiniz.
        courseE_farmer_functions8b_c: Fonksiyonu kaç kere çağırmaya ihtiyacınız var?
      courseE_farmer_functions9b:
        courseE_farmer_functions9b_a: Yolda ilerlemek için iç içe geçmiş 'eğer' ve
          'eğer/başka' ifadelerini kullanabilir misiniz?
        courseE_farmer_functions9b_b: Yollar boyunca hareket etmek için 'bal kabağına
          kadar tekrarla' kullanın.
        courseE_farmer_functions9b_c: Yollar boyunca her döngüden sonra kareler büyüyormuş
          gibi hareket etmek isteyeceksiniz.
      courseE_farmer_ramp11a:
        courseE_farmer_ramp12_a: 'Çiftçinin kaç kere marul toplaması gerektiğini tekrarla
          bloğu ile söylemek yerine (marul olduğu sürece) ''süresince'' bloğu kullanarak
          çözebilirsiniz.  '
        courseE_farmer_ramp12_b: Marulu almak için bir kez ilerlemek yeterlidir.
      courseE_farmer_ramp11a_2018:
        courseE_farmer_ramp12_a: 'Çiftçinin kaç kere marul toplaması gerektiğini tekrarla
          bloğu ile söylemek yerine (marul olduğu sürece) ''süresince'' bloğu kullanarak
          çözebilirsiniz.  '
        courseE_farmer_ramp12_b: Marulu almak için bir kez ilerlemek yeterlidir.
      courseE_farmer_ramp11a_2019:
        courseE_farmer_ramp12_a: 'Çiftçinin kaç kere marul toplaması gerektiğini tekrarla
          bloğu ile söylemek yerine (marul olduğu sürece) ''süresince'' bloğu kullanarak
          çözebilirsiniz.  '
        courseE_farmer_ramp12_b: Marulu almak için bir kez ilerlemek yeterlidir.
      courseE_farmer_ramp11b:
        courseE_farmer_ramp11b_a: Kodunuzu daha kısa yapmak için 'tekrar' döngüsünün
          içine 'süresince' döngüsü yerleştirebilirsiniz.
      courseE_farmer_ramp11b_2018:
        courseE_farmer_ramp11b_a: Kodunuzu daha kısa yapmak için 'tekrar' döngüsünün
          içine 'süresince' döngüsü yerleştirebilirsiniz.
      courseE_farmer_ramp11b_2019:
        courseE_farmer_ramp11b_a: Kodunuzu daha kısa yapmak için 'tekrar' döngüsünün
          içine 'süresince' döngüsü yerleştirebilirsiniz.
      courseE_farmer_ramp12_forswap:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek
          için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12_forswap_2018:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek
          için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12_forswap_2019:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek
          için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12c:
        courseE_farmer_ramp12b_b: Yine de hala ilk 'kadar' döngüsünü kullanmaya ihtiyacınız
          olacak, sonra marula ulaştığınızda bir 'süresince' döngüsü kullanın.
      courseE_farmer_ramp12c_2018:
        courseE_farmer_ramp12b_b: Yine de hala ilk 'kadar' döngüsünü kullanmaya ihtiyacınız
          olacak, sonra marula ulaştığınızda bir 'süresince' döngüsü kullanın.
      courseE_farmer_ramp12c_2019:
        courseE_farmer_ramp12b_b: Yine de hala ilk 'kadar' döngüsünü kullanmaya ihtiyacınız
          olacak, sonra marula ulaştığınızda bir 'süresince' döngüsü kullanın.
      courseE_farmer_ramp12d:
        courseE_farmer_ramp12d_b: Bulmacayı çözmek için yine de hala bir 'tekrar'
          döngüsünün içine 'kadar' ve 'süresince' döngülerinizi koymanız gerekir!
      courseE_farmer_ramp12d_2018:
        courseE_farmer_ramp12d_b: Bulmacayı çözmek için yine de hala bir 'tekrar'
          döngüsünün içine 'kadar' ve 'süresince' döngülerinizi koymanız gerekir!
      courseE_farmer_ramp12d_2019:
        courseE_farmer_ramp12d_b: Bulmacayı çözmek için yine de hala bir 'tekrar'
          döngüsünün içine 'kadar' ve 'süresince' döngülerinizi koymanız gerekir!
      courseE_farmer_ramp12e:
        courseE_farmer_ramp12e_b: Bu bulmacanın çözümü son bulmacanın çözümüne çok
          benziyor, fakat diğer yöne dönüyor.
      courseE_farmer_ramp12e_2018:
        courseE_farmer_ramp12e_b: Bu bulmacanın çözümü son bulmacanın çözümüne çok
          benziyor, fakat diğer yöne dönüyor.
      courseE_farmer_ramp12e_2019:
        courseE_farmer_ramp12e_b: Bu bulmacanın çözümü son bulmacanın çözümüne çok
          benziyor, fakat diğer yöne dönüyor.
      courseE_farmer_ramp12f:
        courseE_farmer_ramp12f_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar
          vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12f_2018:
        courseE_farmer_ramp12f_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar
          vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12f_2019:
        courseE_farmer_ramp12f_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar
          vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12g:
        courseE_farmer_ramp12G_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar
          vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12g_2018:
        courseE_farmer_ramp12G_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar
          vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12g_2019:
        courseE_farmer_ramp12G_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar
          vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          Burada oyuncu oyunu kazandığında yapabileceğin bazı şeyler var:

          -   Dinozoru kaybet.
          -   Sincapları durdur.
          -   Sincapları ve şövalyeyi mutlu et.
          -   Yeni bir arka plan ayarla.
          -   Yardım ettiği için oyuncuya şövalyeyi teşekkür ettir.
          -   Bütün aktörleri kaybet ve "Kazandınız!" mesajı göster.
        courseE_playLab_challenge1_b: |-
          Burada oyuncu oyunu kaybettiğinde yapabileceğin bazı şeyler var:

          -   Şövalyeyi kaybet.
          -   Sincapları üzgün yap.
          -   Dinozora bir şeyler söylet.
          -   Yeni bir arka plan ayarla.
          -   Bütün aktörleri yok et ve "Oyun Bitti" mesajı göster.
      courseE_playLab_scaffold1:
        courseE_playLab_scaffold1_a: "'ayarla aktör 1 ??? görünümüne' bloku sahneye
          aktör eklemek için kullanılabilir."
        courseE_playLab_scaffold1_b: Aktörünüzün programınız başladığında görünmesi
          için 'çalıştığı zaman' bloğunun altına 'aktörü ayarla' bloğu ekleyin.
        courseE_playLab_scaffold1_c: Sahnenizin arka planını seçmek için '??? arka
          planı ayarla' bloğunu kullanın.
      courseE_playLab_scaffold2:
        courseE_playLab_scaffold1_b: Her birinin altında bir yöne taşıyacak şekilde
          4 adet 'ne zaman ok' olay blokuna sahip olmalısın.
        courseE_playLab_scaffold1_c: Yaptığında kahramanını yön ok tuşlarıyla hareket
          ettirebilmelisin!
      courseE_playLab_scaffold4:
        courseE_playLab_scaffold4_a: Bir puan eklemek için 'skor puanı' ve bir puan
          çıkarmak için 'puanı sil' kullanın.
      courseE_playLab_scaffold5:
        courseE_playLab_scaffold5_a: Bu seviyeyi bitirmek için, kazanman veya kaybetmen
          gerekir. Bitirmek için bir adet 'kazanarak oyunu bitir' veya 'kaybederek
          oyunu bitir' kullanın.
      courseF_artist_for2:
        courseF_artist_for2_b: Döngünüzün içinde 10' a kadar saymayı unutmayın.
        courseF_artist_for2_c: |-
          Bu sanatçının takip edeceği desen:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2018:
        courseF_artist_for2_b: Döngünüzün içinde 10' a kadar saymayı unutmayın.
        courseF_artist_for2_c: |-
          Bu sanatçının takip edeceği desen:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2019:
        courseF_artist_for2_b: Döngünüzün içinde 10' a kadar saymayı unutmayın.
        courseF_artist_for2_c: |-
          Bu sanatçının takip edeceği desen:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for3:
        courseF_artist_for3_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for3_2018:
        courseF_artist_for3_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for3_2019:
        courseF_artist_for3_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for4:
        courseF_artist_for4_a: "\\*\\* İhtiyacınız olacak en küçük sayı nedir?\\\nEn
          büyük sayı nedir?\\\nHer defasında artış ne kadar? \\*\\* \n'Şununla say
          döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
        courseF_artist_for4_b: Kodunuz en son bulmacada yazdığınıza çok benziyor,
          fakat bu sefer bir dörtgen çizmeyi unutmayın!
        courseF_artist_for4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: "\\*\\* İhtiyacınız olacak en küçük sayı nedir?\\\nEn
          büyük sayı nedir?\\\nHer defasında artış ne kadar? \\*\\* \n'Şununla say
          döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
        courseF_artist_for4_b: Kodunuz en son bulmacada yazdığınıza çok benziyor,
          fakat bu sefer bir dörtgen çizmeyi unutmayın!
        courseF_artist_for4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: "\\*\\* İhtiyacınız olacak en küçük sayı nedir?\\\nEn
          büyük sayı nedir?\\\nHer defasında artış ne kadar? \\*\\* \n'Şununla say
          döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
        courseF_artist_for4_b: Kodunuz en son bulmacada yazdığınıza çok benziyor,
          fakat bu sefer bir dörtgen çizmeyi unutmayın!
        courseF_artist_for4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for5:
        courseF_artist_for5_b: "'için' döngünüz, hareket et, ve dön kareleriniz tam
          olarak aynı kalabilir."
      courseF_artist_for5_2018:
        courseF_artist_for5_b: "'için' döngünüz, hareket et, ve dön kareleriniz tam
          olarak aynı kalabilir."
      courseF_artist_for5_2019:
        courseF_artist_for5_b: "'için' döngünüz, hareket et, ve dön kareleriniz tam
          olarak aynı kalabilir."
      courseF_artist_for6:
        courseF_artist_for6_a: "'için' döngünüz 15'den 300'e 15'er sayacak."
        courseF_artist_for6_b: "'için' döngüsünün içine bir 'ileri git' ve bir 'dön'
          karesi koyun."
        courseF_artist_for6_c: Tüm yapmanız gereken 'dön' karesindeki numaranın derecesini
          değiştirmek.
      courseF_artist_for6_2018:
        courseF_artist_for6_a: "'için' döngünüz 15'den 300'e 15'er sayacak."
        courseF_artist_for6_b: "'için' döngüsünün içine bir 'ileri git' ve bir 'dön'
          karesi koyun."
        courseF_artist_for6_c: Tüm yapmanız gereken 'dön' karesindeki numaranın derecesini
          değiştirmek.
      courseF_artist_for6_2019:
        courseF_artist_for6_a: "'için' döngünüz 15'den 300'e 15'er sayacak."
        courseF_artist_for6_b: "'için' döngüsünün içine bir 'ileri git' ve bir 'dön'
          karesi koyun."
        courseF_artist_for6_c: Tüm yapmanız gereken 'dön' karesindeki numaranın derecesini
          değiştirmek.
      courseF_artist_for7:
        courseF_artist_for7_c: Bu bulmaca içindeki `şununla say` (for) döngüsü 15
          ten 300'e kadar 2 artarak gider.
        courseF_artist_for7_d: Bu görüntü sadece 89 derece döndürülerek yapılır.
      courseF_artist_for7_2018:
        courseF_artist_for7_c: Bu bulmaca içindeki `şununla say` (for) döngüsü 15
          ten 300'e kadar 2 artarak gider.
        courseF_artist_for7_d: Bu görüntü sadece 89 derece döndürülerek yapılır.
      courseF_artist_for7_2019:
        courseF_artist_for7_c: Bu bulmaca içindeki `şununla say` (for) döngüsü 15
          ten 300'e kadar 2 artarak gider.
        courseF_artist_for7_d: Bu görüntü sadece 89 derece döndürülerek yapılır.
      courseF_artist_for8:
        courseF_artist_for8_a: Kodunuzdaki diğer her şeyi aynı tutun, sadece dönüş
          açısının değişmesi gerekiyor.
        courseF_artist_for8_b: İsterseniz, sarmalınız için farklı bir renk seçebilirsiniz!
      courseF_artist_for8_2018:
        courseF_artist_for8_a: Kodunuzdaki diğer her şeyi aynı tutun, sadece dönüş
          açısının değişmesi gerekiyor.
        courseF_artist_for8_b: İsterseniz, sarmalınız için farklı bir renk seçebilirsiniz!
      courseF_artist_for8_2019:
        courseF_artist_for8_a: Kodunuzdaki diğer her şeyi aynı tutun, sadece dönüş
          açısının değişmesi gerekiyor.
        courseF_artist_for8_b: İsterseniz, sarmalınız için farklı bir renk seçebilirsiniz!
      courseF_artist_for9:
        courseF_artist_for9_a: "'için' döngünüzün içine 'alfayı belirle' karesini
          koyar ve değiştirmek için 'zıt' değişkenini kullanırsanız, bunun gibi bir
          tasarım oluşturabilirsiniz."
      courseF_artist_for9_2018:
        courseF_artist_for9_a: "'için' döngünüzün içine 'alfayı belirle' karesini
          koyar ve değiştirmek için 'zıt' değişkenini kullanırsanız, bunun gibi bir
          tasarım oluşturabilirsiniz."
      courseF_artist_for9_2019:
        courseF_artist_for9_a: "'için' döngünüzün içine 'alfayı belirle' karesini
          koyar ve değiştirmek için 'zıt' değişkenini kullanırsanız, bunun gibi bir
          tasarım oluşturabilirsiniz."
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: "'Kalem genişliği' 1'dir. İlk karenin 50
          piksel kenar uzunluğu vardır ve her kare öncekinden 50 piksel daha geniş."
        courseF_artist_for_challenge1_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        courseF_artist_for_challenge1_c: Her bir kareyi yaptıktan sonra geri atla,
          dön, atla ve geriye dön!
        courseF_artist_for_challenge1_d: |-
          **Çözümü:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"/>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: "'Kalem genişliği' 1'dir. İlk karenin 50
          piksel kenar uzunluğu vardır ve her kare öncekinden 50 piksel daha geniş."
        courseF_artist_for_challenge1_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        courseF_artist_for_challenge1_c: Her bir kareyi yaptıktan sonra geri atla,
          dön, atla ve geriye dön!
        courseF_artist_for_challenge1_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: "'Kalem genişliği' 1'dir. İlk karenin 50
          piksel kenar uzunluğu vardır ve her kare öncekinden 50 piksel daha geniş."
        courseF_artist_for_challenge1_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        courseF_artist_for_challenge1_c: Her bir kareyi yaptıktan sonra geri atla,
          dön, atla ve geriye dön!
        courseF_artist_for_challenge1_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: 'Şununla say döngüsü (for loop) 5 ten 250
          ye 2 şer ilerler. '
        courseF_artist_for_challenge2_a: Renk değişimi 'kırmızı, yeşil, mavi renk
          ayarla' bloğu kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır.
          Yeşil her zaman 'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        courseF_artist_for_challenge2_b: Bu kod düşündüğünden daha basit. Şununla
          say döngüsü (for loop) içinde rengi ayarla, ilerle ve sonra dön.
        courseF_artist_for_challenge2_d: |-
          **Çözüm:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">EKSİ</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">ileri git</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">sağa dön</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: 'Şununla say döngüsü (for loop) 5 ten 250
          ye 2 şer ilerler. '
        courseF_artist_for_challenge2_a: Renk değişimi 'kırmızı, yeşil, mavi renk
          ayarla' bloğu kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır.
          Yeşil her zaman 'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        courseF_artist_for_challenge2_b: Bu kod düşündüğünden daha basit. Şununla
          say döngüsü (for loop) içinde rengi ayarla, ilerle ve sonra dön.
        courseF_artist_for_challenge2_d: "\\*\\* Çözüm: \\*\\*! [Çözüm blokları] \\(<https://images.code.org/a61c16d76d876d9c26ebcaebef3f97a2-image-1469726730055.png>)"
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: 'Şununla say döngüsü (for loop) 5 ten 250
          ye 2 şer ilerler. '
        courseF_artist_for_challenge2_a: Renk değişimi 'kırmızı, yeşil, mavi renk
          ayarla' bloğu kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır.
          Yeşil her zaman 'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        courseF_artist_for_challenge2_b: Bu kod düşündüğünden daha basit. Şununla
          say döngüsü (for loop) içinde rengi ayarla, ilerle ve sonra dön.
        courseF_artist_for_challenge2_d: |-
          **Çözüm:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">EKSİ</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">ileri git</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">sağa dön</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_fwp4:
        courseF_artist_fwp4_c: Şekilleri çizmek için fonsiyonunuzu 3 kere çağırmanız
          gerekir.
      courseF_artist_fwp5:
        courseF_artist_fwp5_d: Bir 'için' döngüsü burdan çıkmanıza gerçekten yadım
          edebilir!
        courseF_artist_fwp5_c: Fonksiyonu biraz değiştirmen gerekiyor çünkü önceki
          fonksiyon aktörü her bir kenardan sonra sağına döndürdü ve bu resmin sola
          dönmesi gerekiyor.
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: Fonksiyonun farklı parametrelerle nasıl çalıştığını
          anlamak için birkaç kere programı normaldir.
      courseF_artist_fwp9:
        courseF_artist_fwp9_a: |-
          Bu çizimlerden birini deneyin.
          ![](<https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png>)
      courseF_artist_fwp_challenge1:
        courseF_artist_fwp_challenge1_b: Bu bir zıt pikseller uzunluğunda kenarlara
          sahip sekizgenler serisi.
        courseF_artist_fwp_challenge1_c: Her sekizgen 200'den 2'ye ikişer artarak
          giden bir için döngüsünden çağırılıyor.
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseF_artist_fwp_challenge1_b: 'Bu resim kenar uzunlukları ''sayaç'' (counter)
          uzunluğunda olan sekizgenlerlerdir. '
        courseF_artist_fwp_challenge1_c: Her bir sekizgen 200 den aşağı ikişer ikişer
          geriye 2'ye kadar giden bir 'şununla say döngüsü' (for loop) içinden çağırılır.
        courseF_artist_fwp_challenge1_d: 'Her döngünün sonunda 22.5 derece dönmeyi
          unutma. '
        courseF_artist_fwp_challenge1_e: Sekizgen rengi ve kalem genişliği 'sayaç'
          değişkeni tarafından kontrol edilir.
        courseF_artist_fwp_challenge1_f: "\\*\\* Çözüm: \\*\\*! [Çözüm] blokları (<https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png>)"
      courseF_artist_variables10:
        courseF_artist_variables10_a: Bu seviyede eğlenin. Kodunuzdaki küçük değişikliklerin
          neler yapabileceğini görün.
        courseF_artist_variables10_b: Birden çok şey deneyebilir ve kodunuzu birden
          çok kez deneyebilirsiniz.
      courseF_artist_variables10_2018:
        courseF_artist_variables10_a: Bu seviyede eğlenin. Kodunuzdaki küçük değişikliklerin
          neler yapabileceğini görün.
        courseF_artist_variables10_b: Birden çok şey deneyebilir ve kodunuzu birden
          çok kez deneyebilirsiniz.
      courseF_artist_variables10_2019:
        courseF_artist_variables10_a: Bu seviyede eğlenin. Kodunuzdaki küçük değişikliklerin
          neler yapabileceğini görün.
        courseF_artist_variables10_b: Birden çok şey deneyebilir ve kodunuzu birden
          çok kez deneyebilirsiniz.
      courseF_artist_variables2:
        courseF_artist_variables2_a: Her üçgeni çizdikten sonra ilerlemeyi unutma.
        courseF_artist_variables2_b: Yeni döngünüz, üçgeninizin döngüsünü içerecek
          sonra da bir tane 'ilerle' komutu.
      courseF_artist_variables2_2018:
        courseF_artist_variables2_a: Her üçgeni çizdikten sonra ilerlemeyi unutma.
        courseF_artist_variables2_b: Yeni döngünüz, üçgeninizin döngüsünü içerecek
          sonra da bir tane 'ilerle' komutu.
      courseF_artist_variables2_2019:
        courseF_artist_variables2_a: Her üçgeni çizdikten sonra ilerlemeyi unutma.
        courseF_artist_variables2_b: Yeni döngünüz, üçgeninizin döngüsünü içerecek
          sonra da bir tane 'ilerle' komutu.
      courseF_artist_variables3:
        courseF_artist_variables3_a: "'Uzunluk' değişkeni kodunuzda iki yerde kullanılacak:
          üçgeninizin kenar uzunluğu ve üçgenler arasındaki ilerleme miktarı."
        courseF_artist_variables3_b: 'Değeri 50 olan sayı bloğu sadece bir yerde olmalı:
          ''uzunluk değişkeni ata'' bloğundan sonra.'
      courseF_artist_variables3_2018:
        courseF_artist_variables3_a: "'Uzunluk' değişkeni kodunuzda iki yerde kullanılacak:
          üçgeninizin kenar uzunluğu ve üçgenler arasındaki ilerleme miktarı."
        courseF_artist_variables3_b: 'Değeri 50 olan sayı bloğu sadece bir yerde olmalı:
          ''uzunluk değişkeni ata'' bloğundan sonra.'
      courseF_artist_variables3_2019:
        courseF_artist_variables3_a: "'Uzunluk' değişkeni kodunuzda iki yerde kullanılacak:
          üçgeninizin kenar uzunluğu ve üçgenler arasındaki ilerleme miktarı."
        courseF_artist_variables3_b: 'Değeri 50 olan sayı bloğu sadece bir yerde olmalı:
          ''uzunluk değişkeni ata'' bloğundan sonra.'
      courseF_artist_variables4:
        courseF_artist_variables4_c: |-
          Sanatçınızın takip edeceği desen bu:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_c: |-
          Sanatçınızın takip edeceği desen bu:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
      courseF_artist_variables4_2019:
        courseF_artist_variables4_c: |-
          Sanatçınızın takip edeceği desen bu:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
      courseF_artist_variables5:
        courseF_artist_variables5_b: Kodunuzun ilk yarısı üç tane üçgen çizecek, kodunuzun
          ikinci yarısı diğer üç taneyi çizecek.
        courseF_artist_variables5_c: Programınızın ilk yarısındaki kodu çoğaltarak
          başlayın, sonra gösterilen tasarımı yapmak için kodunuzu değiştirin.
        courseF_artist_variables5_d: |-
          Sanatçınızın takip edeceği desen bu:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018:
        courseF_artist_variables5_b: Kodunuzun ilk yarısı üç tane üçgen çizecek, kodunuzun
          ikinci yarısı diğer üç taneyi çizecek.
        courseF_artist_variables5_c: Programınızın ilk yarısındaki kodu çoğaltarak
          başlayın, sonra gösterilen tasarımı yapmak için kodunuzu değiştirin.
        courseF_artist_variables5_d: |-
          Sanatçınızın takip edeceği desen bu:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2019:
        courseF_artist_variables5_b: Kodunuzun ilk yarısı üç tane üçgen çizecek, kodunuzun
          ikinci yarısı diğer üç taneyi çizecek.
        courseF_artist_variables5_c: Programınızın ilk yarısındaki kodu çoğaltarak
          başlayın, sonra gösterilen tasarımı yapmak için kodunuzu değiştirin.
        courseF_artist_variables5_d: |-
          Sanatçınızın takip edeceği desen bu:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6:
        courseF_artist_variables6_b: Sayı bloğunu 50 değeri ile düzenlemeniz gerekecek,
          fakat koddaki hiçbir şey değiştirilmemelidir.
      courseF_artist_variables6_2018:
        courseF_artist_variables6_b: Sayı bloğunu 50 değeri ile düzenlemeniz gerekecek,
          fakat koddaki hiçbir şey değiştirilmemelidir.
      courseF_artist_variables6_2019:
        courseF_artist_variables6_b: Sayı bloğunu 50 değeri ile düzenlemeniz gerekecek,
          fakat koddaki hiçbir şey değiştirilmemelidir.
      courseF_artist_variables6a:
        courseF_artist_variables6a_b: Bu kod üçgen kodunuza çok benzeyecek, sadece
          farklı bir şekil!
        courseF_artist_variables6a_c: İlk olarak bir kare için kod yazın, sonra kareler
          arasında hareket etmek için kod ekleyin. Sonunda her şeyin etrafına bir
          döngü ekleyin!
        courseF_artist_variables6a_d: |-
          Takip edeceğin desen bu!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_b: Bu kod üçgen kodunuza çok benzeyecek, sadece
          farklı bir şekil!
        courseF_artist_variables6a_c: İlk olarak bir kare için kod yazın, sonra kareler
          arasında hareket etmek için kod ekleyin. Sonunda her şeyin etrafına bir
          döngü ekleyin!
        courseF_artist_variables6a_d: |-
          Takip edeceğin desen bu!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_b: Bu kod üçgen kodunuza çok benzeyecek, sadece
          farklı bir şekil!
        courseF_artist_variables6a_c: İlk olarak bir kare için kod yazın, sonra kareler
          arasında hareket etmek için kod ekleyin. Sonunda her şeyin etrafına bir
          döngü ekleyin!
        courseF_artist_variables6a_d: |-
          Takip edeceğin desen bu!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7:
        courseF_artist_variables7_a: Kodunuzu 'uzunluk ata' kullanarak başlatın. Uzunluk
          değişkenine 150 değerini atayın.
        courseF_artist_variables7_b: Üçgen kodunuzu daha basit yapmak için bir tane
          'tekrarla' döngüsü kullanabilirsiniz.
        courseF_artist_variables7_c: Üçgenin köşelerini yapmak için 120 derece sola
          dönmeyi isteyeceksiniz.
      courseF_artist_variables7_2018:
        courseF_artist_variables7_a: Kodunuzu 'uzunluk ata' kullanarak başlatın. Uzunluk
          değişkenine 150 değerini atayın.
        courseF_artist_variables7_b: Üçgen kodunuzu daha basit yapmak için bir tane
          'tekrarla' döngüsü kullanabilirsiniz.
        courseF_artist_variables7_c: Üçgenin köşelerini yapmak için 120 derece sola
          dönmeyi isteyeceksiniz.
      courseF_artist_variables7_2019:
        courseF_artist_variables7_a: Kodunuzu 'uzunluk ata' kullanarak başlatın. Uzunluk
          değişkenine 150 değerini atayın.
        courseF_artist_variables7_b: Üçgen kodunuzu daha basit yapmak için bir tane
          'tekrarla' döngüsü kullanabilirsiniz.
        courseF_artist_variables7_c: Üçgenin köşelerini yapmak için 120 derece sola
          dönmeyi isteyeceksiniz.
      courseF_artist_variables8:
        courseF_artist_variables8_b: Üçgen için olan kodunuzu 'uzunluk ata' bloğu
          ile başlatmayı unutmayın ve 150 piksel ile başlatın.
        courseF_artist_variables8_c: Üçgeninizi çizmek için 'tekrarla' döngüsünü kullandığınızdan
          emin olun.
      courseF_artist_variables8_2018:
        courseF_artist_variables8_b: Üçgen için olan kodunuzu 'uzunluk ata' bloğu
          ile başlatmayı unutmayın ve 150 piksel ile başlatın.
        courseF_artist_variables8_c: Üçgeninizi çizmek için 'tekrarla' döngüsünü kullandığınızdan
          emin olun.
      courseF_artist_variables8_2019:
        courseF_artist_variables8_b: Üçgen için olan kodunuzu 'uzunluk ata' bloğu
          ile başlatmayı unutmayın ve 150 piksel ile başlatın.
        courseF_artist_variables8_c: Üçgeninizi çizmek için 'tekrarla' döngüsünü kullandığınızdan
          emin olun.
      courseF_artist_variables9:
        courseF_artist_variables9_a: Bu bulmaca için tek yapmanız gereken, döngünün
          kaç kez tekrar edeceğini değiştirmek.
        courseF_artist_variables9_b: "'Uzunluk' değerini arttıran blokların döngünüzün
          içinde olduğundan emin olun böylece satırlar gittikçe uzunlaşır."
      courseF_artist_variables9_2018:
        courseF_artist_variables9_a: Bu bulmaca için tek yapmanız gereken, döngünün
          kaç kez tekrar edeceğini değiştirmek.
        courseF_artist_variables9_b: "'Uzunluk' değerini arttıran blokların döngünüzün
          içinde olduğundan emin olun böylece satırlar gittikçe uzunlaşır."
      courseF_artist_variables9_2019:
        courseF_artist_variables9_a: Bu bulmaca için tek yapmanız gereken, döngünün
          kaç kez tekrar edeceğini değiştirmek.
        courseF_artist_variables9_b: "'Uzunluk' değerini arttıran blokların döngünüzün
          içinde olduğundan emin olun böylece satırlar gittikçe uzunlaşır."
      courseF_artist_variablesFP:
        courseF_artist_variablesFP_a: |-
          Bu üç çizimden birini deneyin.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2018:
        courseF_artist_variablesFP_a: |-
          Bu üç çizimden birini deneyin.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2019:
        courseF_artist_variablesFP_a: |-
          Bu üç çizimden birini deneyin.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda.
          Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki
          kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola,
          sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda.
          Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki
          kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola,
          sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda.
          Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki
          kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola,
          sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: 'Değişkenler kullanışlıdır, çünkü döngü
          içinde bu değişkene ekleme yapabilirsiniz. '
        courseF_artist_variables_challenge2_c: "'Kenarlar' için ve 'uzunluk' için
          birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi
          için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. "
        courseF_artist_variables_challenge2_d: "\\*\\* Çözüm: \\*\\*![Solution] \\(<https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png>)"
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: 'Değişkenler kullanışlıdır, çünkü döngü
          içinde bu değişkene ekleme yapabilirsiniz. '
        courseF_artist_variables_challenge2_c: "'Kenarlar' için ve 'uzunluk' için
          birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi
          için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. "
        courseF_artist_variables_challenge2_d: "\\*\\* Çözüm: \\*\\*![Solution] \\(<https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png>)"
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: 'Değişkenler kullanışlıdır, çünkü döngü
          içinde bu değişkene ekleme yapabilirsiniz. '
        courseF_artist_variables_challenge2_c: "'Kenarlar' için ve 'uzunluk' için
          birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi
          için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. "
        courseF_artist_variables_challenge2_d: "\\*\\* Çözüm: \\*\\*![Solution] \\(<https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png>)"
      courseF_bee_conditionals10:
        courseF_bee_conditionals10_a: Her noktada bir bulut olduğunu hayal edin. Bu
          kodunuzu sadeleştirmede yardımcı olur mu?
        courseF_bee_conditionals10_b: Nektar veya bal aramak amacıyla her alanı kontrol
          etmek için bir 'eğer/başka' kullanın.
        courseF_bee_conditionals10_c: Bu yolun sonuna ulaşmanıza bir 'süresince' döngüsü
          yardımcı olabilir mi?
      courseF_bee_conditionals2:
        courseF_bee_conditionals2_b: Bütün alanlara ulaşmak için diziyi yazmayı deneyin,
          sonra 'eğer' ifadesini ekleyin.
      courseF_bee_conditionals3:
        courseF_bee_conditionals3_b: Bir 'tekrar' döngüsü yararlı olacaktır bu yüzden
          sadece bir 'eğer' karesi kullanmalısın.
        courseF_bee_conditionals3_c: İlk bulutu kontrol etmek için kodu yazmayı deneyin.
          Hepsini kontrol etmek için döngü yapabiliyor musun?
      courseF_bee_conditionals4:
        courseF_bee_conditionals4_c: "'Yol olduğu sürece' bloğu kullandığında 'İlerle'
          ve bir çiçek var mı kontrol et. 'Eğer çiçek var ise' arı ne yapmalı?"
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak
          düşün. "Tekrarla" bloğu içine "sürece bir yol var" bloğu koy. Bütün çiçekleri
          yoklamak için kaç tane yol gitmek gerekir?
        courseF_bee_conditionals5_b: "'Sürece bir yol' bloğu içinde ilerle ve bir
          çiçek varmı kontrol et. Bir çiçek olup olmadığını nasıl kontrol edebilirim?
          Bir çiçek ise ne yapıyorsun?"
        courseF_bee_conditionals5_c: Bir üçgenin 3 kenarı vardır bu yüzden 'Tekrarla
          3 kez ' döngüsü kullanman gerekir. Her tekrarda 'sürece bir yol' döngüsü
          ile yol boyunca devam etmek gerekir. Yola devam etmek için 'ilerle ' gerekir.
          Yolda iken, arının çiçekleri denetlemesi gerekir. 'eğer çiçek ise', 'nektar
          almalısınız'.
        courseF_bee_conditionals5_d: Yola devam etmek için, arının 'ileri git'meye
          ihtiyacı var. Yoldayken, arının bir çiçek araması gerekiyor. Bir çiçek varsa
          arı ne yapmalı?
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          \*\* Dikkat: \*\* Bu bulmaca her çalıştırdığınızda değişir.\
          Bu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor.
        courseF_bee_conditionals8_c: "'ilerde yol süresince' karesi kullansan ve son
          kez ilk çiçeğini toplasan ne olur?"
      courseF_bee_for1:
        courseF_bee_for1_b: Bütün nektarı toplamak için 'tekrar' döngünüzün içinde
          iki kareye iktiyacınız olacak.
      courseF_bee_for10:
        courseF_bee_for10_c: |-
          Yapbozda ilk çiçek kümesinde \*\* 14 \*\* çiçek, ikinci kümede \*\* 10 \*\* çiçek, üçüncü kümesinde \*\* 6 \*\* çiçek, dördüncü kümesinde \*\* 2 \*\* çiçek bulunur.

          Bu çizimde, \*\* 7 \*\* kırmızı kare, \*\* 5 \*\* turuncu kare, \*\* 3 \*\* yeşil kare ve \*\* 1 \*\* mavi blok bulunduğuna dikkat edin.

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          Sayılar nasıl ilişkilidir?
      courseF_bee_for10_2018:
        courseF_bee_for10_c: |-
          Yapbozda ilk çiçek kümesinde \*\* 14 \*\* çiçek, ikinci kümede \*\* 10 \*\* çiçek, üçüncü kümesinde \*\* 6 \*\* çiçek, dördüncü kümesinde \*\* 2 \*\* çiçek bulunur.

          Bu çizimde, \*\* 7 \*\* kırmızı kare, \*\* 5 \*\* turuncu kare, \*\* 3 \*\* yeşil kare ve \*\* 1 \*\* mavi blok bulunduğuna dikkat edin.

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          Sayılar nasıl ilişkilidir?
      courseF_bee_for10_2019:
        courseF_bee_for10_c: |-
          Yapbozda ilk çiçek kümesinde \*\* 14 \*\* çiçek, ikinci kümede \*\* 10 \*\* çiçek, üçüncü kümesinde \*\* 6 \*\* çiçek, dördüncü kümesinde \*\* 2 \*\* çiçek bulunur.

          Bu çizimde, \*\* 7 \*\* kırmızı kare, \*\* 5 \*\* turuncu kare, \*\* 3 \*\* yeşil kare ve \*\* 1 \*\* mavi blok bulunduğuna dikkat edin.

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          Sayılar nasıl ilişkilidir?
      courseF_bee_for1_2018:
        courseF_bee_for1_b: Bütün nektarı toplamak için 'tekrar' döngünüzün içinde
          iki kareye iktiyacınız olacak.
      courseF_bee_for1_2019:
        courseF_bee_for1_b: Bütün nektarı toplamak için 'tekrar' döngünüzün içinde
          iki kareye iktiyacınız olacak.
      courseF_bee_for2:
        courseF_bee_for2_b: Her döngünün arasında ileri gitmeyi unutmayın, bu sayede
          her çiçeğe ulaşırsınız.
      courseF_bee_for2_2018:
        courseF_bee_for2_b: Her döngünün arasında ileri gitmeyi unutmayın, bu sayede
          her çiçeğe ulaşırsınız.
      courseF_bee_for2_2019:
        courseF_bee_for2_b: Her döngünün arasında ileri gitmeyi unutmayın, bu sayede
          her çiçeğe ulaşırsınız.
      courseF_bee_for5:
        courseF_bee_for5_b: Her döngüde 'zıt' değişken kullanın, bu sayede arı her
          çiçeğin arasındaki farklı uzaklıkları gitsin.
        courseF_bee_for5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_bee_for5_2018:
        courseF_bee_for5_b: Her döngüde 'zıt' değişken kullanın, bu sayede arı her
          çiçeğin arasındaki farklı uzaklıkları gitsin.
        courseF_bee_for5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_bee_for5_2019:
        courseF_bee_for5_b: Her döngüde 'zıt' değişken kullanın, bu sayede arı her
          çiçeğin arasındaki farklı uzaklıkları gitsin.
        courseF_bee_for5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü
          düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_bee_for6:
        courseF_bee_for6_c: Döngünüz **5'ten 1'e** saymalı.
      courseF_bee_for6_2018:
        courseF_bee_for6_c: Döngünüz **5'ten 1'e** saymalı.
      courseF_bee_for6_2019:
        courseF_bee_for6_c: Döngünüz **5'ten 1'e** saymalı.
      courseF_bee_for7:
        courseF_bee_for7_c: "'tekrar' döngünüzde 'zıt' değişken kullanmayı unutmayın."
      courseF_bee_for7_2018:
        courseF_bee_for7_c: "'tekrar' döngünüzde 'zıt' değişken kullanmayı unutmayın."
      courseF_bee_for7_2019:
        courseF_bee_for7_c: "'tekrar' döngünüzde 'zıt' değişken kullanmayı unutmayın."
      courseF_bee_for8:
        courseF_bee_for8_b: Bu bulmacada, çiçeklere ulaşmak için bir merdiven basamağı
          deseninde hareket etmeniz gerekir.
        courseF_bee_for8_c: Döngünüz _3'ten 15'e_ belli bir artışla sayacak. Bu nedir?
      courseF_bee_for8_2018:
        courseF_bee_for8_b: Bu bulmacada, çiçeklere ulaşmak için bir merdiven basamağı
          deseninde hareket etmeniz gerekir.
        courseF_bee_for8_c: Döngünüz _3'ten 15'e_ belli bir artışla sayacak. Bu nedir?
      courseF_bee_for8_2019:
        courseF_bee_for8_b: Bu bulmacada, çiçeklere ulaşmak için bir merdiven basamağı
          deseninde hareket etmeniz gerekir.
        courseF_bee_for8_c: Döngünüz _3'ten 15'e_ belli bir artışla sayacak. Bu nedir?
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: " Hareket için bu seçeneğe bir göz atın:! \\[]
          (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        courseF_bee_for_challenge2_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı
          deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal
          yapma için.'
        courseF_bee_for_challenge2_c: "Gittikçe yükselen merdiven basamaklarını çizmek
          için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla
          döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet
          'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        courseF_bee_for_challenge2_d: |-
          **Çözüm:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: " Hareket için bu seçeneğe bir göz atın:! \\[]
          (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        courseF_bee_for_challenge2_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı
          deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal
          yapma için.'
        courseF_bee_for_challenge2_c: "Gittikçe yükselen merdiven basamaklarını çizmek
          için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla
          döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet
          'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        courseF_bee_for_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: " Hareket için bu seçeneğe bir göz atın:! \\[]
          (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)"
        courseF_bee_for_challenge2_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı
          deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal
          yapma için.'
        courseF_bee_for_challenge2_c: "Gittikçe yükselen merdiven basamaklarını çizmek
          için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla
          döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet
          'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        courseF_bee_for_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions2:
        courseF_bee_functions2_b: Ne yaptığını görmek için 'sadece nektar topla' fonksiyonundaki
          mavi düzenle butonuna tıklayın.
      courseF_bee_functions3:
        courseF_bee_functions3_a: 'Bu bulmacadaki fonksiyonun sadece bal yapması gerek,
          fonksiyonda ''move forward'' yada ''turn'' blokları bulunmamalı. '
        courseF_bee_functions3_b: Fonksiyonunuz yalnızca bal varken bal toplamalı
          unutmayın.
        courseF_bee_functions3_c: Fonksiyonunuzu çağırmak için yeşil 'sadece bal yap'
          karesini kullanın.
        courseF_bee_functions3_d: Bu yola bir bakın.
      courseF_bee_functions3a:
        courseF_bee_functions3a_a: Bu bulmacanın sadece nektar alması veya bal yapması
          gerekiyor, içinde bir 'ileriye doğru hareket et' veya 'dön' blokları bulunmamalı.
        courseF_bee_functions3a_b: İlk dört bulutu kontrol etmek için merdiven basamağı
          kullanın.
      courseF_bee_functions4:
        courseF_bee_functions4_a: Göreviniz yan yollardan aşağı doğru ilerleyip arıyı
          ana yoldan geri getirmektir. Bu bölümü programınıza eklemenize gerek yoktur.
        courseF_bee_functions4_b: Programı inşa etmeyi deneyin ve fonksiyonun beklendiği
          gibi işlev bloklarını kullanmaya çalışın, daha sonra fonksiyonu oluşturun.
      courseF_bee_functions5a:
        courseF_bee_functions5a_a: "Göreviniz yan yollardan aşağı doğru ilerleyip
          arıyı ana yoldan geri getirmektir. \nBu bölümü ana programınıza eklemenize
          gerek yoktur."
        courseF_bee_functions5a_b: Farklı uzunluklarda oldukları için, ana yolların
          hepsini gezmek için bir 'süresince' döngüsü kullanın.
        courseF_bee_functions5a_c: "'süresince' döngüsünde, ileri gittiğinizden emin
          olun, sonra fonksiyonunuzu bir yol aramak için kullanın."
      courseF_bee_functions6:
        courseF_bee_functions6_a: |-
          Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.
           Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! \[] (<https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif>)
        courseF_bee_functions6_b: Fonksiyonunuz çiçek veya bal peteği olup olmadığını
          kontrol etmeli, nektar toplamalı veya bal yapmalı, sonra dönmeli.
        courseF_bee_functions6_c: Fonsiyonunuzun içinde döndüğünüz için, labirentten
          çıkmak için sadece bir 'süresince' döngüsüne ihtiyacınız var.
      courseF_bee_functions7:
        courseF_bee_functions7_a: Fonksiyonunuzu görmek için son bulmacanıza geri
          dönüp bakabilirsiniz.
        courseF_bee_functions7_b: Parmağınızla bu labirent boyunca bir yol çizmeyi
          deneyin. Arı nerede karar vermek zorunda kalacak?
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde
          bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın.
          Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions8a_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı
          unutmayın.
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde
          bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın.
          Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions7_b: |-
          Kodu yeşil fonksiyon bloğunun içinde oluşturmayı unutmayın.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: Eğer bir petek varsa hangi yöne dönmelisiniz? Peki
          ya bir çiçek varsa? Ya da hiç birşey yoksa?
      courseF_bee_functions_challenge1:
        courseF_bee_functions_challenge1_a: Yardımcı olmak için araç kutusundaki işlevleri
          kullanabilirsiniz. Başka bir işlevin tanımının içindeki bir fonksiyonu çağırabilirsiniz!
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_a: |-
          Eğer sağa bir yol varsa, aşağıdakileri yapmalısınız:

          -   Herhangi bir miktarda nektar al veya herhangi bir miktarda bal yap.
          -   Yan yola doğru sağa dön.
          -   Yan yolun sonuna hareket et.
          -   Sağa dön.

          Eğer yukarıdaki eylemleri iki kez tekrarlarsanız, ana yola geri dönmeye hazır olacaksınız.

          **Çözümün tamamını görmek isterseniz yalnızca başka bir ipucuna tıklayın!**
        courseF_bee_functions_challenge2_b: |-
          **Çözüm:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_fwp1:
        courseF_bee_fwp1_b: "'Tekrarla' bloğu kullanarak yol boyunca devam edin. 'İlerle'
          blogu kullan ve bir 'eğer' bloğu kullanarak bir çiçek olup olmadığını kontrol
          emin olun."
      courseF_bee_fwp3:
        courseF_bee_fwp3_b: 3 satır nektar varsa, her satır geçişi için ne tür hareketler
          yapmalışsın?
        courseF_bee_fwp3_c: Bu bulmacayı çözmek için fonksiyonu 3 kez çağırmak gerekir.
          Her çağırma arasında 'sağa dön', 'ilerle' (2 kez), sonra 'sağa dön' gerekiyor.
          VEYA 'sola dön', 'ilerle' (2 kez), sonra tekrar 'sola dön' gerekiyor.
      courseF_bee_fwp4:
        courseF_bee_fwp4_b: Fonksiyon için oluşturduğun parametre, arının kaç kez
          ilerleyeceğini ve nektarı kaç kez kontrol edeceğini belirlemek için tekrar
          eden döngü içinde kullanılır.
      courseF_bee_fwp5:
        courseF_bee_fwp5_a_b: Her fonksiyon çağrısı arasında dönmeyi unutmayın.
      courseF_bee_fwp7:
        courseF_bee_fwp7_b: Fonksiyona bir 'eğer' deyimi ekleyin, böylece arı, çiçeklerin
          ve peteklerin ikisini de kontrol eder.
      courseF_bee_fwp8:
        courseF_bee_fwp8_a: Bu bulmacada bir \`döngü 'nasıl yardımcı olabilir?
        courseF_bee_fwp8_b: İçeri girerken spiral küçüldüğünden, "for" döngüsü geri
          sayılmalıdır.
      courseF_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          Program şöyle görünmelidir:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">

          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Her alandaki hasat için mısır miktarına bak. Tezgah desenini görüyor musun? 'Döngü' içindeki maksimum değeri ayarlamak için 'uzunluk' parametresi kullanılmalıdır.

          Hasat sonrası çiftçiyi ana yoldan geri çekmeyi unutmayın!
        courseF_bee_fwp_challenge1_b1: |-
          'For Döngü'sünde maksimum değeri ayarlamak için' uzunluk 'parametresi kullanılmalıdır.

          Hasat sonrası çiftçiyi ana yoldan geri çekmeyi unutmayın!
        courseF_bee_fwp_challenge1_c: |-
          Bir işlevin içine 'şununla say döngüsü' yerleştirin ve '1' den başlayıp 'uzunluk' kadar 1er artacak şekilde ayarlayın.
          Bu döngünün içinde, ileri gitmeli ve tüm mısırları almalısın.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "Şununla say döngüsü içerisinde ilerleyip **sayaç
          defa** 'mısır al'. \nŞununla say döngüsünden sonra **uzunluk defa** 'geri
          git'.\n\nBu ipucunu anlamak için bir çok defa okumaya ihtiyacın olabilir.
          **Koyu** kısımlar ihtiyacınız olan iki 'tekrarla' döngüsünün nasıl kullanılacağı
          hakkında ipucudur."
        courseF_bee_fwp_challenge1_d2: "`For Döngüsü' sonrasında, sadece`geriye doğru\\`
          \\*\\* uzunluk sürelerine \\*\\* geçebilirsiniz."
        courseF_bee_fwp_challenge1_e: |-
          \*\* İşte çözüm: \*\*

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Bu işlevin nasıl çalışması gerektiğini anladığınızdan emin olarak başlayın. Çiftçi her bir yoldan aşağı indiğinde, yalnızca mısır toplamaya çalışacaktır. Bunun yerine, 3 sebzenin her birini ona kontrol ettirip sadece bulduğu birini almasını nasıl sağlarsın?

          Mısır, balkabakları ve marulları kontrol etmek için fonksiyona koşullu ifadeler ekleyin.
        courseF_bee_fwp_challenge2_b: |-
          "İleriye git" bloklarının bittiğini mi düşünüyorsun?
          Programınızda bir \* ikinci \* \`for döngüsü 'kullanmayı deneyin.

          **Not:** Kodunuzda`Sayaç` ı `sayaç2` ile  karıştırmamaya özen gösterin.
        courseF_bee_fwp_challenge2_c: |-
          \*\* İşte işlevi şöyle görünmelidir: \*\*

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>

          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifAtCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **İşte ana programınız böyle görünmeli:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: "`Çalıştır`a bastığınızda sizce Kiki ne diyecek?"
      courseF_playlab_variables3b_josh:
        courseF_playlab_variables3b_a: 'Boş alanlara sahip iki blok vardır: bir ''aktör
          söyle'' bloğu ve bir ''katılmak'' bloğu. Değişken blokları oraya ekleyin!'
      courseF_playlab_variables4b:
        courseF_playlab_variables4b_a: Buradaki araç kutusundan daha fazla bloğa ihtiyacınız
          yok.
        courseF_playlab_variables4b_b: İki `yaş` ve bir `isim` değişkenini konuşmada
          en mantıklı olan yere koyun.
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_a: Araç kutusunda "Değişkenler" altında bir `cevap`değişkeni
          bloğu bulun.
        courseF_playlab_variables5c_b: Kodunuzu test edin! Ne olduğunu görmek için
          "kırmızı" ve diğer renkleri de girmeyi deneyin.
      courseF_playlab_variables6c:
        courseF_playlab_variables6c_a: '"Girdi" bölümü altında, kullanıcılardan girdi
          almak için`sor` bloğunu kullanın.'
      courseF_playlab_variables7b:
        courseF_playlab_variables7b_a: Bir kedi ve köpek onların sevdiği yemekler
          hakkında konuşsun. Sor bloğu ile favori yiyeceği sor ve sonra metni ekranda
          görüntüle!
        courseF_playlab_variables7b_b: En sevdiğiniz karekter size bir espri duymak
          ister misin diye sorsun. Eğer cevabı Evet ise ekranda espiriyi görüntüle.
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_a: Yeni `ask` bloğunu`if / else` deyiminin önüne
          koyun, böylece onu diğer aşamalarında kullanabilirsiniz.
      courseF_playlab_variables8c:
        courseF_playlab_variables8c_a: "`Join` bloğu`actor say` bloğuna girer ve değişkenlerinizi
          daha büyük cümlelerde kullanmanıza olanak tanır."
      courseF_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          Aktörleri konuşturmak için araç kutusundan ek bloklara ihtiyacınız olacak.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_a: 'Nesneler çarpıştığında ''skor'' değişkenine
          puanlar ekleyin ve azaltın. '
        courseF_playlab_variables_challenge2_b: Ok tuşuna her basıldığında hareketli
          nesnenin ne kadar hareket edeceğini parametreden ayarlayabilirsin.
        courseF_playlab_variables_challenge2_c: |-
          **Çözüm:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      coursea_maze_ramp1_2018:
        courseC_maze_programming1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların
          tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
      coursea_maze_ramp1_2019:
        courseC_maze_programming1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların
          tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: Bu üçgende iç açıyı 60 derece yapmak
          için sanatçıyı 120 derece döndürmeyi unutmayın.
        grade5_artist_variables_triangles1_b: Kodunuzu kısaltmak için 'tekrarla' döngüsünü
          kullanın.
        grade5_artist_variables_triangles1_c: Döngünüzün içinde, 50 piksel ilerlemek
          sonra 120 derece sola dönmek isteyeceksiniz.
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: Bu üçgende iç açıyı 60 derece yapmak
          için sanatçıyı 120 derece döndürmeyi unutmayın.
        grade5_artist_variables_triangles1_b: Kodunuzu kısaltmak için 'tekrarla' döngüsünü
          kullanın.
        grade5_artist_variables_triangles1_c: Döngünüzün içinde, 50 piksel ilerlemek
          sonra 120 derece sola dönmek isteyeceksiniz.
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: Bu üçgende iç açıyı 60 derece yapmak
          için sanatçıyı 120 derece döndürmeyi unutmayın.
        grade5_artist_variables_triangles1_b: Kodunuzu kısaltmak için 'tekrarla' döngüsünü
          kullanın.
        grade5_artist_variables_triangles1_c: Döngünüzün içinde, 50 piksel ilerlemek
          sonra 120 derece sola dönmek isteyeceksiniz.
      iceage_click_hello:
        iceage_click_hello_a: Bu bulmacayı tamamlamak için 'tıklandığı zaman' olayına
          'bir ya da daha fazla 'aktör 1 de' bloku ekle.
      iceage_free_play:
        iceage_free_play_a: 'Sid ve Manny''ye buz kristali savaşı yaptırabilir misin?  '
        iceage_free_play_b: Granny'ye Dieogo'yu kovalattırın. Onu yakalarsa oyunu
          kazanmış olarak sonlandırın.
        iceage_free_play_c: Sid'in Dieogo'ya kar taneleri fırlatmasını ve kar taneleri
          her dokunduğunda Diego'nun daha büyük olmasını sağla? Diego 5 kez vurulduğunda
          oyunu kazanmış olarak sonlandır.
      iceage_hello1:
        iceage_hello1_a: Bu bulmacayı çözmek için yalnızca bir blok eklemeniz gerekiyor.
          Araç çubuğundan 'söyle' bloğunu sürükleyin ve bu bloğu çalışma alanında
          zaten bulunan 'çalıştığı zaman' olay bloğuna bağlayın. Daha sonra, içine
          "Merhaba!" yazın.
      iceage_hello2:
        iceage_hello2_a: 'Bu bulmacayı çözmek için Sid''in ''aktör 1 de'' blokunu
          kullanarak bir şeyler söylemesini sağlaman gerekir. Bunun yanında Manny''nin
          de ''aktör 2 de'' bloku ile bir şeyler söylemesini sağlaman gerekir. '
      iceage_move_events:
        iceage_move_events_a: 'Bu bulmacayı çözmek için her bir ''Ne zaman ok'' olayının
          farklı bir ''taşı aktör 1'' komutuyla bağlanması gerekir. '
      iceage_move_to_actor:
        iceage_move_to_actor_a: Bu bulmaca için Diego'yu 200 piksel aşağıya ya da
          Manny'yi 200 piksel yukarıya taşıyabilirsin.
        iceage_move_to_actor_b: Bu meydan okumayı bitirmek için '\_\_\_ sesi çal'
          blokunu 'aktör 1 aktör 2ye dokunduğunda' blokuna bağla.
      iceage_move_to_flag:
        iceage_hello3_a: "'taşı aktör 1 sağa 200 piksel' blokunu bu bulmacayı çözmek
          için kullan."
      iceage_repeat:
        iceage_repeat_a: Bu bulmacayı çözmek için 'taşı aktör 1 sola' ve 'taşı aktör
          1 sağa' bloklarının her ikisini de kullan.
      iceage_sound_and_points:
        iceage_sound_and_points_a: "'aktör 1 aktör 2ye dokunduğunda' olayının altına
          2 blok eklemeniz gerekir."
        iceage_sound_and_points_b: Bu bölümü geçmek için 'skor puanı' bloku ve '\_\_\_\_
          sesini çal' blokunun ikisine de ihtiyacın var.
      iceage_throw_hearts:
        iceage_throw_hearts_a: Granny'ye kalpleri ne zaman fırlatmalısın? Oka basıldığında
          mı? Sid'e tıklandığı zaman mı? Granny'ye tıkladığın zaman mı? Karar senin!
        iceage_throw_hearts_b: Kalp aldığında Granny'yi mutlu etmek için, 'ayarla
          aktör 2 mutlu ruh haline' blokunu 'aktör 2 mermiye dokunduğunda' olayına
          bağlaman gerekir.
      iceage_warn_ice_age:
        iceage_warn_ice_age_a: 'Bulmacayı çözmek için sadece uygun olan yere 2 blok
          eklemelisin. '
        iceage_warn_ice_age_b: Program başladıktan hemen sonra onlara sahip olmak
          için 'Çalıştığı zaman' olayının altına 2 yeni blok ekle.
