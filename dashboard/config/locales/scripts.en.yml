# Autogenerated scripts locale file.
---
en:
  data:
    script:
      name:
        course1:
          title: Course 1
          description: Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1.
          description_short: Introduction to computer science for early readers.
          description_audience: Ages 4-6
          lesson_groups: {}
          student_description: Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1.
        course2:
          title: Course 2
          description: Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5.
          description_short: Introduction to computer science for students who can read.
          description_audience: Ages 6+ (reading required)
          lesson_groups: {}
          student_description: Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5.
        course3:
          title: Course 3
          description: Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5.
          description_short: Delve even deeper into programming while building games and interactive stories. This is a follow-up to Course 2.
          description_audience: Ages 8-18
          lesson_groups: {}
          student_description: Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5.
        playlab:
          title: Play Lab
          description: Create a story or make a game with Play Lab!
          description_short: Create a story or make a game with Play Lab!
          lesson_groups: {}
          description_audience: ''
          student_description: Create a story or make a game with Play Lab!
          name: playlab
        artist:
          title: Artist
          description: Draw cool pictures and designs with the Artist!
          description_short: Draw cool pictures and designs with the Artist!
          lesson_groups: {}
          student_description: Draw cool pictures and designs with the Artist!
          name: artist
          description_audience: ''
        hourofcode:
          title: Classic Maze
          description: Try the basics of computer science with characters from Angry Birds, Plants vs. Zombies, and Scrat from Ice Age!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          lesson_groups: {}
          student_description: Try the basics of computer science with characters from Angry Birds, Plants vs. Zombies, and Scrat from Ice Age!
          name: hourofcode
        frozen:
          title: Code with Anna and Elsa
          description: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. You will create snowflakes and patterns as you ice-skate and make a winter wonderland that you can then share with your friends!
          description_short: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice.
          lesson_groups: {}
          student_description: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. You will create snowflakes and patterns as you ice-skate and make a winter wonderland that you can then share with your friends!
          name: frozen
          description_audience: ''
        course4:
          title: Course 4
          description: Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8.
          description_short: Build more complex programs with concepts such as for loops and functions with parameters. This is a follow-up to Course 3.
          description_audience: Ages 9-18
          lesson_groups: {}
          student_description: Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8.
        Course4pre:
          title: Course 4 Prerequisite
          description: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_short: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_audience: ''
          lesson_groups: {}
          student_description: A brief rampup of concepts for students who have not taken Course 2 and 3.
        usability:
          title: Usability Testing
          description: A selection of Course 4 levels for usability testing.
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          student_description: A selection of Course 4 levels for usability testing.
        algebra:
          title: Computer Science in Algebra
          description: Learn Functional Programming through Algebra.
          description_short: Learn Functional Programming through Algebra.
          description_audience: ''
          lesson_groups: {}
          student_description: Learn Functional Programming through Algebra.
        infinity:
          title: Disney Infinity Play Lab
          description: Use Play Lab to create a story or game starring Disney Infinity characters.
          description_short: Use Play Lab to create a story or game starring Disney Infinity characters.
          lesson_groups: {}
          student_description: Use Play Lab to create a story or game starring Disney Infinity characters.
          name: infinity
          description_audience: ''
        algebrademo:
          title: Algebra Demo
          description: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          description_short: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          lesson_groups: {}
          student_description: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
        K5PD:
          title: K5 Professional Development (old)
          description: 'For the latest online Professional Development resources for elementary school teachers here: https://studio.code.org/s/k5-onlinepd'
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          student_description: 'For the latest online Professional Development resources for elementary school teachers here: https://studio.code.org/s/k5-onlinepd'
        netsim:
          title: Internet Simulator
          description: Learn about how the Internet works.
          description_short: Learn about how the Internet works.
          description_audience: ''
          lesson_groups: {}
          student_description: Learn about how the Internet works.
        pixelation:
          title: Pixelation
          description: Create images with bits and bytes.
          description_short: Create images with bits and bytes.
          description_audience: ''
          lesson_groups: {}
          student_description: Create images with bits and bytes.
        20-hour:
          title: Accelerated Intro to CS Course
          description: This 20-hour course covers the core computer science and programming concepts in courses 2-4. The course is designed for use with ages 10-18. Check out courses 2-4 for a more complete experience!
          description_short: This 20-hour course covers the core computer science and programming concepts in courses 2-4.
          description_audience: Ages 10-18
          lesson_groups: {}
          student_description: This 20-hour course covers the core computer science and programming concepts in courses 2-4. The course is designed for use with ages 10-18. Check out courses 2-4 for a more complete experience!
        edit-code:
          title: Edit Code
          description: Edit Code
          description_short: Edit Code
          description_audience: ''
          lesson_groups: {}
          student_description: Edit Code
        events:
          title: Events
          description: Events
          description_short: Events
          description_audience: ''
          lesson_groups: {}
          student_description: Events
        flappy:
          title: Flappy Code
          description: Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial!
          description_short: Write your own Flappy game!
          description_audience: ''
          lesson_groups: {}
          student_description: Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial!
          name: flappy
        jigsaw:
          title: Jigsaw
          description: Try our Jigsaw tutorial.
          description_short: Try our Jigsaw tutorial.
          description_audience: ''
          lesson_groups: {}
          student_description: Try our Jigsaw tutorial.
          name: jigsaw
        step:
          title: Step
          description: Step tutorial
          description_short: Step tutorial
          description_audience: ''
          lesson_groups: {}
          student_description: Step tutorial
        Hour of Code:
          title: Hour of Code 2013
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          lesson_groups: {}
          student_description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies!
        CodeStudioPuzzleChallenge:
          title: Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          lesson_groups: {}
          student_description: Try out these fun coding puzzles. Do your best!
        Tutorial Video - Code Studio Puzzle Challenge:
          title: Tutorial - Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          lesson_groups: {}
          student_description: Try out these fun coding puzzles. Do your best!
        cspunit1:
          title: "(old) CS Principles Unit 1 - Digital Information"
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
        algebraPD:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        algPDmiami:
          title: Computer Science in Algebra PD
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          lesson_groups: {}
          student_description: Teach Algebra through Functional Programming
        text-compression:
          title: Text Compression
          description: Compress text by identifying repeated patterns.
          description_short: Compress text by identifying repeated patterns.
          description_audience: ''
          lesson_groups: {}
          student_description: Compress text by identifying repeated patterns.
          name: text-compression
        CSPPD:
          title: Computer Science Principles PD
          description: 'Phase 1: Online Introduction for CSP'
          description_short: 'Phase 1: Online Introduction for CSP'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction for CSP'
        CSPLessonSamples:
          title: CSP Lesson Samples
          description: Lesson samples for CSP
          description_short: Lesson samples for CSP
          description_audience: ''
          lesson_groups: {}
          student_description: Lesson samples for CSP
        ECSPD:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
          name: ECSPD
          description_audience: ''
        sciencePD:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        rbo-reference:
          title: rbo-reference
          description: rbo-reference
          description_short: rbo-reference
          description_audience: ''
          lesson_groups: {}
          student_description: rbo-reference
        Test Wednesday:
          title: Test Wednesday
          description: Test Wednesday
          description_short: Test Wednesay
          lesson_groups: {}
          student_description: Test Wednesday
        cspunit3:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        algebraPD3:
          title: Phase 3 PD
          description: Teach Algebra through block-based Functional Programming
          description_short: Teach Algebra through block-based Functional Programming
          description_audience: ''
          lesson_groups: {}
          student_description: Teach Algebra through block-based Functional Programming
        ECSPD-NexTech:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        ECSPD-iZone:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        algebraPD-NexTech:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        algebraPD-iZone:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        sciencePD-NexTech:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        sciencePD-iZone:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 1: Online Introduction'
        sciencePD2:
          title: 'CS in Science: Part 2'
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          lesson_groups: {}
          student_description: Phase 2 Online Blended Summer Study
        sciencePD3:
          title: 'CS in Science: Part 3'
          description: Academic Year Support - Semester 1
          description_short: Academic Year Support - Semester 1
          lesson_groups: {}
          student_description: Academic Year Support - Semester 1
        Testing:
          title: Testing
          description: Testing
          description_short: Testing
          description_audience: ''
          lesson_groups: {}
          student_description: Testing
        cspunit2:
          title: "(old) CS Principles Unit 2 - The Internet"
          description: In this unit, students extend their understanding of the internet and how it functions by building off the concepts learned when sending bits in Unit 1. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          student_description: In this unit, students extend their understanding of the internet and how it functions by building off the concepts learned when sending bits in Unit 1. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
        algebraPD2a:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 2 Online: Blended Summer Study'
        allthethings:
          title: All the Things!
          description: All the level types for UI testing. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for this script).
          description_short: All the level types for UI testing
          description_audience: ''
          lesson_groups: {}
          student_description: All the level types for UI testing. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for this script).
          name: allthethings
        algebraPD2b:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 2 Online: Blended Summer Study'
        cspfacilitator:
          title: 'CS Principles Facilitator Workshop '
          description: Online levels for PD workshop
          description_short: Online levels for PD workshop
          description_audience: ''
          lesson_groups: {}
          student_description: Online levels for PD workshop
        K5-OnlinePD:
          title: Teaching Computer Science Fundamentals (2017)
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          name: K5-OnlinePD
        ECSPD2:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 2 Online: Blended Summer Study'
        equityPD:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          lesson_groups: {}
          student_description: How to lead a discussion on equity in a Code.org PD
        algebraPD2:
          title: CS in Algebra Part 2
          description: Academic Year Support
          description_short: Academic Year Support
          description_audience: ''
          lesson_groups: {}
          student_description: Academic Year Support
        sciencePD2b:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 2 Online: Blended Summer Study'
        equity-pd:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          description_audience: ''
          lesson_groups: {}
          student_description: How to lead a discussion on equity in a Code.org PD
        science-PD2:
          title: Computer Science in Science PD Phase 2b
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          description_audience: ''
          lesson_groups: {}
          student_description: Phase 2 Online Blended Summer Study
        Equity-OnlinePD:
          title: Creating More Equitable Computer Science Classrooms
          description: Develop strategies for creating equity in your classroom with this free, self-paced online course.
          description_short: Develop equitable teaching strategies with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          student_description: Develop strategies for creating equity in your classroom with this free, self-paced online course.
        sciencePD2b-iZone:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 2 Online: Blended Summer Study'
        ECSPD2-iZone:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          lesson_groups: {}
          description_audience: ''
          student_description: 'Phase 2 Online: Blended Summer Study'
        ECSPD2-NexTech:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          lesson_groups: {}
          description_audience: ''
          student_description: 'Phase 2 Online: Blended Summer Study'
        CSPPD2:
          title: 'Computer Science Principles PD: Blended Summer Study'
          description: 8-hour online PD that builds on the 5-day in-person experience and helps teachers prepare for the beginning of the semester
          description_short: 'Blended Summer Study: 8 hour online'
          lesson_groups: {}
          student_description: 8-hour online PD that builds on the 5-day in-person experience and helps teachers prepare for the beginning of the semester
        odometer:
          title: Odometer Widget
          description: Use the Odometer widget to control odometers with various number bases. Binary, Decimal and Hexadecimal are the most common number systems to see in computer science.
          description_short: Use the Odometer widget to control odometers with various number bases.
          description_audience: ''
          lesson_groups: {}
          student_description: Use the Odometer widget to control odometers with various number bases. Binary, Decimal and Hexadecimal are the most common number systems to see in computer science.
        asUnplugged:
          title: Afterschool Unplugged
          description: Afterschool Unplugged is designed to teach computational thinking and computer science ideas through offline games and crafts. Created with informal classrooms in mind, these lessons are fantastic on their own, or in combination with Afterschool 1 . This course focuses on learning through entertainment. Recommended for grades K-8.
          description_short: Short unplugged course designed for informal learning
          description_audience: Ages 6-13
          lesson_groups: {}
          student_description: Afterschool Unplugged is designed to teach computational thinking and computer science ideas through offline games and crafts. Created with informal classrooms in mind, these lessons are fantastic on their own, or in combination with Afterschool 1 . This course focuses on learning through entertainment. Recommended for grades K-8.
        afterschool1:
          title: Afterschool 1
          description: Afterschool 1 is designed to for informal classrooms where students vary in age and assessment is not required. This course focuses on learning through entertainment, with varying options for implementation, all in 10 sessions or less. Use alone or with Afterschool Unplugged. Recommended for grades 3-8.
          description_short: Short course designed for informal learning
          description_audience: Ages 7-13
          stage: {}
        vigenere:
          title: Vigenere Cipher Widget
          description: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_short: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_audience: ''
          lesson_groups: {}
          student_description: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
        algebraPD3a:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra blended online school year study'
          description_short: 'Phase 3 (Part 1): CS in Algebra blended online school year study'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 3 (Part 2): CS in Algebra blended online school year study'
        sciencePD3_pre1:
          title: CS in Science PD3 Before 1st In-Person
          description: 'Phase 3: Academic Year Development (Segment One)'
          description_short: 'Phase 3: Academic Year Development Pre 1'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 3: Academic Year Development (Segment One)'
        frequency_analysis:
          title: Frequency Analysis Widget
          description: Use the Frequency Analysis Widget to analyze letter frequencies in an input text compared to expected frequencies for standard English. Use that comparison to explore cracking Shift and Substitution Ciphers.
          description_short: Use the Frequency Analysis Widget to analyze letter frequencies in a text compared to expected frequencies. Crack Shift and Substitution Ciphers.
          description_audience: ''
          lesson_groups: {}
          student_description: Use the Frequency Analysis Widget to analyze letter frequencies in an input text compared to expected frequencies for standard English. Use that comparison to explore cracking Shift and Substitution Ciphers.
        ECSPD3-Unit2:
          title: 'Exploring Computer Science: Unit 2'
          description: Online Professional Development Course
          description_short: Unit 2 Online PD
          description_audience: ''
          lesson_groups: {}
          student_description: Online Professional Development Course
        ECSPD3-Unit3:
          title: 'Exploring Computer Science: Unit 3'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          student_description: Academic Year Development
        ECSPD3-Unit4:
          title: 'Exploring Computer Science: Unit 4'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          student_description: Academic Year Development
        ECSPD3-Unit5:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          student_description: Academic Year Development
        ECSPD3-Unit6:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          student_description: Academic Year Development
        cspunit4draft:
          title: CS Principles Unit 4 - Data
          description: "Collect, analyze, and extract knowledge from data by programming and\r\nbuilding apps. Process data imported from other sources and also pull\r\ndata from live data APIs."
          description_short: Data
          description_audience: ''
          lesson_groups: {}
          student_description: "Collect, analyze, and extract knowledge from data by programming and\r\nbuilding apps. Process data imported from other sources and also pull\r\ndata from live data APIs."
        ScienceP3OLPT2:
          title: Computer Science in Science PD Phase 3A Post Work
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
        algebraPD3b:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_short: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
        CSPPD3-Unit2:
          title: 'Computer Science Principles: Unit 2 PD'
          description: Online Exploration of CSP Unit 2
          description_short: Online Exploration of CSP Unit 2
          description_audience: ''
          lesson_groups: {}
          student_description: Online Exploration of CSP Unit 2
        duino:
          title: Experimenting with Arduino stuff
          description: Testing some tools for teaching with Arduinos
          lesson_groups: {}
          student_description: Testing some tools for teaching with Arduinos
        Special Fun:
          title: Special Fun
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          description: ''
          lesson_groups: {}
          student_description: ''
        SpecialSeries:
          title: Special Levels
          description: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          lesson_groups: {}
          student_description: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
        iceage:
          title: Ice Age Play Lab
          description: Create a story or make a game with Ice Age Play Lab!
          description_short: Create a story or make a game with Ice Age Play Lab!
          description_audience: ''
          lesson_groups: {}
          student_description: Create a story or make a game with Ice Age Play Lab!
          name: iceage
        CSPPD3-Unit3:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          lesson_groups: {}
          student_description: Online Exploration of CSP Unit 3
        cspunit3temp:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        CSP-Unit3-Support:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          lesson_groups: {}
          student_description: Online Exploration of CSP Unit 3
        gumball:
          title: Gumball Play Lab
          description: Create a story or make a game with Gumball Play Lab!
          description_short: Create a story or make a game with Gumball Play Lab!
          lesson_groups: {}
          description_audience: ''
          student_description: Create a story or make a game with Gumball Play Lab!
          name: gumball
        starwars:
          title: 'Star Wars: Building a Galaxy With Code (Javascript)'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          lesson_groups: {}
          student_description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          name: starwars
        starwarsblocks:
          title: 'Star Wars: Building a Galaxy With Code (Blockly)'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          lesson_groups: {}
          student_description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          name: starwarsblocks
        mc:
          title: Minecraft Hour of Code
          description: Use blocks of code to take Steve or Alex on an adventure through this Minecraft world.
          description_short: Explore a Minecraft world through code.
          description_audience: ''
          lesson_groups: {}
          student_description: Use blocks of code to take Steve or Alex on an adventure through this Minecraft world.
          name: mc
        oceans:
          title: AI for Oceans
          description: Learn how AI and machine learning can be used to address world problems.
          description_short: Learn how AI and machine learning can be used to address world problems.
          description_audience: ''
          lesson_groups: {}
          student_description: Learn how AI and machine learning can be used to address world problems.
          name: oceans
        CSPPD3-Unit3-pt2:
          title: 'Computer Science Principles: Unit 3 PD Challenges'
          description: Online Exploration of CSP Unit 3-- Lesson Challenges
          description_short: Online Exploration of CSP Unit 3-- Lesson Challenges
          lesson_groups: {}
          student_description: Online Exploration of CSP Unit 3-- Lesson Challenges
        ScienceP3OLPT3:
          title: Computer Science in Science PD Pre-Phase 3B
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          lesson_groups: {}
          student_description: Phase 3 Academic Year Development
        cspunit5:
          title: "(old) CS Principles Unit 5 - Performance Tasks"
          description: This unit covers the preparation and completion of the Explore and Create Performance Tasks.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          student_description: This unit covers the preparation and completion of the Explore and Create Performance Tasks.
        cspunit4:
          title: "(old) CS Principles Unit 4 - Data"
          description: Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. The data-rich world we live in also introduces many complex questions related to public policy, law, ethics and societal impact. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          student_description: Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. The data-rich world we live in also introduces many complex questions related to public policy, law, ethics and societal impact. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        CSPPD3-Unit4:
          title: 'Computer Science Principles: Unit 4 PD'
          description: Online Support for CSP Unit 4
          description_short: Support for CSP Unit 4
          lesson_groups: {}
          student_description: Online Support for CSP Unit 4
        cspunit6draft:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, and it concludes with a sampling of example projects that can be built using these tools.
          description_short: Data Apps
          description_audience: ''
          lesson_groups: {}
          student_description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, and it concludes with a sampling of example projects that can be built using these tools.
        CSPPD3-Unit5:
          title: 'Computer Science Principles: Unit 5 PD'
          description: Online Support for CSP Unit 5
          description_short: Support for CSP Unit 5
          lesson_groups: {}
          student_description: Online Support for CSP Unit 5
        cspunit6:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups: {}
          student_description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
        AlgebraA:
          title: 'Computer Science in Algebra: Course A'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          lesson_groups: {}
          student_description: Learn Functional Programming through Algebra
        AlgebraB:
          title: 'Computer Science in Algebra: Course B'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          lesson_groups: {}
          student_description: Learn Functional Programming through Algebra
        gamelab-hackathon:
          title: Gamelab Hackathon
          description: A place to try things out in Game Lab
          description_short: Gamelab Hackathon
          lesson_groups: {}
          student_description: A place to try things out in Game Lab
        algebraPD1:
          title: CS in Algebra Part 1
          description: Teach Algebra through Functional Programming
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          student_description: Teach Algebra through Functional Programming
        algebraPD3c:
          title: Computer Science in Algebra PD
          description: CS in Algebra end of year reflection
          description_short: CS in Algebra end of year reflection
          description_audience: ''
          lesson_groups: {}
          student_description: CS in Algebra end of year reflection
        csp1-2017:
          title: CSP Unit 1 - The Internet ('17-'18)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
        csp2-2017:
          title: CSP Unit 2 - Digital Information ('17-'18)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1:
              display_name: 'Chapter 1: Encoding and Compressing Complex Information'
            csp2_2:
              display_name: 'Chapter 2: Manipulating and Visualizing Data'
            cspSurvey:
              display_name: Survey
          student_description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        csp3-2017:
          title: CSP Unit 3 - Intro to Programming ('17-'18)
          description: "This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.\r\n\r\nThis unit was last updated October 30th, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: "This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.\r\n\r\nThis unit was last updated October 30th, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp4-2017:
          title: CSP Unit 4 - Big Data and Privacy ('17-'18)
          description: "The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1:
              display_name: 'Chapter 1: The World of Big Data and Encryption'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: "The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp5-2017:
          title: CSP Unit 5 - Building Apps ('17-'18)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          student_description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csp6:
          title: CSP Unit 6 - AP Performance Tasks
          description: This unit covers the preparation and completion of the Create and Explore Performance Tasks.
          description_short: Lessons guide students to prepare for and complete the AP Performance Tasks.
          description_audience: ''
          lesson_groups: {}
          student_description: This unit covers the preparation and completion of the Create and Explore Performance Tasks.
        CSDU3-Draft:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: Temp place to work on U3 of Disco
          description_short: Programming
          description_audience: ''
        2016_sciencePD_phase1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: In Partnership with Project GUTS
          description_audience: ''
          lesson_groups: {}
          student_description: In Partnership with Project GUTS
        TEMP CSD Unit 3:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: ''
          description_short: Programming
          description_audience: ''
        CSF_Secret_Sample:
          title: Secret Sample
          description: Test of new educational philosophy
          description_short: This is a secret...shhhhh
          description_audience: Ages 8-18
          lesson_groups: {}
          student_description: Test of new educational philosophy
        ECSPD1:
          title: ECS Part 1
          description: Two hour introduction to your Professional Learning Program for the ECS Version 5 curriculum
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          student_description: Two hour introduction to your Professional Learning Program for the ECS Version 5 curriculum
        algebraFacilitator:
          title: Computer Science in Algebra Facilitator Pre Work
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          lesson_groups: {}
          student_description: Teach Algebra through Functional Programming
        sciencePD1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          student_description: In Partnership with Project GUTS
        cspoptional:
          title: CS Principles Optional Lessons
          description: Optional lessons and content across all of the CS Principles units are listed here
          description_short: Optional
          description_audience: ''
          lesson_groups: {}
          student_description: Optional lessons and content across all of the CS Principles units are listed here
        cspunit1-support:
          title: Online Support for CSP Unit 1
          description: This is a test Professional Learning Course
          description_audience: ''
          description_short: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a test Professional Learning Course
        test-teaching-ap-cs-unit-1:
          title: Test CPS PD
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: ''
        allthehiddenthings:
          title: All the Hidden Things!
          description: Unreleased level types for UI testing as admin
          description_short: Unreleased level types for UI testing as admin
          lesson_groups: {}
          student_description: Unreleased level types for UI testing as admin
        cspunit1-support-test:
          title: CSP Unit 1 teacher support
          description: Online Supports for CSP Unit 1
          description_audience: ''
          description_short: ''
          lesson_groups: {}
          student_description: Online Supports for CSP Unit 1
        cspunit1-tools:
          title: netsim task completion
          description: introduction to the internet simulator and a discussion of how we use it to teach the internet
          lesson_groups: {}
          student_description: introduction to the internet simulator and a discussion of how we use it to teach the internet
        csp-facilitators:
          title: CSP Tool Overview
          description: A collection of tools from the CS Principles course. These levels provide a glimpse into the tools we use throughout the curriculum to
          description_short: Introduction to CS Principles for new Facilitators
          description_audience: ''
          lesson_groups: {}
          student_description: A collection of tools from the CS Principles course. These levels provide a glimpse into the tools we use throughout the curriculum to
        cspassessment:
          title: "[Deprecated] CS Principles Culminating Assessment"
          description: 'This assessment has been deprecated and is scheduled for removal in Summer of 2017.  Students may complete the test and see their own results, but a teacher will not be able to see results for students in a section.  Please use the official CSP practice exam from the College Board.  [This 55-question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.]'
          description_short: This assessment has been deprecated and is scheduled for removal in Summer of 2017.
          description_audience: ''
          lesson_groups: {}
          student_description: 'This assessment has been deprecated and is scheduled for removal in Summer of 2017.  Students may complete the test and see their own results, but a teacher will not be able to see results for students in a section.  Please use the official CSP practice exam from the College Board.  [This 55-question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.]'
        cspexam1-mWU7ilDYM9:
          title: CS Principles Culminating Assessment - Part 1
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 1 of a two-part 50 question exam.
          description_audience: ''
          lesson_groups: {}
          student_description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.'
        cspexam2-AKwgAh1ac5:
          title: CS Principles Culminating Assessment - Part 2
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.  It is part 2 of a two-part 50 question exam'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 2 of a two-part 50 question exam.
          description_audience: ''
          lesson_groups: {}
          student_description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.  It is part 2 of a two-part 50 question exam'
        CSDU4-Draft:
          title: " TEMP CSD Unit 4 - The Design Process"
          description: Temp place to work on U4 of Disco
          description_short: Design Process and App Lab
          description_audience: ''
        CSDU1-Draft:
          title: " TEMP CSD Unit 1"
          description: Temp place to work on U1 of Disco
          description_short: Problem Solving
        CSDU2-Draft:
          title: " TEMP CSD Unit 2"
          description: Temp place to work on U2 of Disco
          description_short: Web Development
          description_audience: ''
        CSDU5-Draft:
          title: " TEMP CSD Unit 5"
          description: Temp place to work on U5 of Disco
          description_short: Data
          stage: {}
        CSDU6-Draft:
          title: " TEMP CSD Unit 6 "
          description: Temp place to work on U6 of Disco
          description_short: Makerlab
          stage: {}
        CSF_Secret_Sample_Story:
          title: Secret Sample with Story
          description: Test of new educational philosophy with guiding storyline
          description_short: This is a secret...shhhh
          description_audience: Ages 8-18+
          lesson_groups: {}
          student_description: Test of new educational philosophy with guiding storyline
        MikeTest:
          title: MikeTest
          description: Trying not to break anything
          description_short: Just a script for playing around
          description_audience: Ages 8-98
          lesson_groups: {}
          student_description: Trying not to break anything
        artistExemplar:
          title: Artist Exemplar
          description: These artist levels will knock the socks off of third graders
          description_short: How can we make the artist levels really hum?
          description_audience: Ages 8-18
          lesson_groups: {}
          student_description: These artist levels will knock the socks off of third graders
        teachercon:
          title: TeacherCon Supports
          description: We will use this during TeacherCon to deliver supports and materials for sessions
          description_short: We will use this during TeacherCon to deliver supports and materials for sessions
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: We will use this during TeacherCon to deliver supports and materials for sessions
        kinderTest:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        gradeKinder:
          title: Kindergarten
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
        grade4:
          title: Grade 4
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 9-99
        grade1:
          title: Grade 1
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
        grade5:
          title: Grade 5
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 10-110
          lesson_groups: {}
          student_description: Planning Script for CSF 2.0
        ecs-unit1:
          title: ECS Unit 1
          description: 'Unit 1: Human-Computer Interaction'
          description_short: 'Unit 1: Human-Computer Interaction'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Unit 1: Human-Computer Interaction'
        ecs-unit2:
          title: ECS Unit 2
          description: 'Unit 2: Problem Solving'
          description_short: 'Unit 2: Problem Solving'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Unit 2: Problem Solving'
        ecs-unit3:
          title: ECS Unit 3
          description: 'Unit 3: Web Design'
          description_short: 'Unit 3: Web Design'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Unit 3: Web Design'
        ecs-unit4:
          title: ECS Unit 4
          description: 'Unit 4: Programming'
          description_short: 'Unit 4: Programming'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Unit 4: Programming'
        ecs-unit5:
          title: ECS Unit 5
          description: 'Unit 5: Computer and Data Analysis'
          description_short: 'Unit 5: Computer and Data Analysis'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Unit 5: Computer and Data Analysis'
        ecs-unit6:
          title: ECS Unit 6
          description: 'Unit 6: Robotics'
          description_short: 'Unit 6: Robotics'
          description_audience: ''
          lesson_groups: {}
          student_description: 'Unit 6: Robotics'
        grade3:
          title: Grade 3
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
        alltheplcthings:
          title: Sample course for PLC things
          description: This is a sample course that has all of the plc special things. Enrollment in this course does nothing. Right now, it's just a copy of TeacherCon
          description_short: This is a sample course that has all of the plc special things
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a sample course that has all of the plc special things. Enrollment in this course does nothing. Right now, it's just a copy of TeacherCon
        csd3-2017:
          title: CSD Unit 3 - Animations and Games ('17-'18)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: Programación
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
            csd_survey:
              display_name: Post-Course Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        grade2:
          title: Grade 2
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
        transferring-over:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        k5concepts:
          title: K5 Concepts
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        algebrapdnext:
          title: Computer Science in Algebra PD Phase 2
          description: Teach Algebra through Functional Programming
          description_short: "\tPhase 3: School Year Support"
          description_audience: ''
          lesson_groups: {}
          student_description: Teach Algebra through Functional Programming
        csp-pre-survey:
          title: CS Principles Pre-Survey
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
          name: csp-pre-survey
        csd1-2017:
          title: CSD Unit 1 - Problem Solving ('17-'18)
          description_short: "  Learn how humans work with computers to solve problems."
          description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          student_description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csp-online-test:
          title: test space for csp online support
          description_short: This is a sample course for testing csp online pd
          description: This is a test space for online pd. Enrollment in this course does nothing.
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a test space for online pd. Enrollment in this course does nothing.
        csp1-support:
          title: Unit 1 Online Professional Learning Course
          description_short: Teacher Professional Learning Course for CSP Unit 1
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 1.
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 1.
        basketball:
          title: Choose your team and make a basketball game
          description_audience: ''
          description_short: Choose your team and make a basketball game
          description: Choose your team and make a basketball game
          lesson_groups: {}
          student_description: Choose your team and make a basketball game
          name: basketball
        sample-csp5: {}
        hoc-encryption:
          title: 'Hour of Code: Simple Encryption'
          description_audience: ''
          description_short: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          description: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          lesson_groups: {}
          student_description: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          name: hoc-encryption
        csd2-2017:
          title: CSD Unit 2 - Web Development ('17-'18)
          description_audience: ''
          description_short: "  Learn to build your own web site in Web Lab."
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            csd_survey:
              display_name: Post-Course Survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        csp2-support:
          title: Unit 2 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 2
          description: 'This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 2. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: 'This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 2. '
        csd4-2017:
          title: CSD Unit 4 - The Design Process ('17-'18)
          description_audience: ''
          description_short: "  Learn how to design a program that meets the needs of your users."
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd_survey:
              display_name: Post-Course Survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        minecraft:
          title: Minecraft Hour of Code Designer
          description_audience: ''
          description_short: Program animals and other Minecraft creatures in your own version of Minecraft.
          description: Program animals and other Minecraft creatures in your own version of Minecraft.
          lesson_groups: {}
          student_description: Program animals and other Minecraft creatures in your own version of Minecraft.
          name: minecraft
        flappy-impact-study:
          title: Flappy Code with Survey
          description_audience: ''
          description_short: 'Write your own Flappy game in less than 10 minutes! '
          description: Want to write your own game in less than 10 minutes? Try our Flappy Code tutorial! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lesson_groups: {}
          student_description: Want to write your own game in less than 10 minutes? Try our Flappy Code tutorial! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
        coursea-draft:
          title: 'CS Fundamentals: Course A'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: "Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \r\nRecommended for grade K."
          lesson_groups: {}
          student_description: "Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \r\nRecommended for grade K."
        courseb-draft:
          title: 'CS Fundamentals: Course B'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for 1st grade.
          lesson_groups: {}
          student_description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for 1st grade.
        coursec-draft:
          title: 'CS Fundamentals: Course C'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 2nd grade.
          lesson_groups: {}
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 2nd grade.
        coursed-draft:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 3rd grade.
          lesson_groups: {}
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 3rd grade.
        coursee-draft:
          title: 'CS Fundamentals: Course E'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 4th grade.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 4th grade.
        coursef-draft:
          title: 'CS Fundamentals: Course F'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 5th grade.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 5th grade.
        classic-hoc-impact-study:
          title: Hour of Code with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
        hoc-impact-study:
          title: Classic Maze with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lesson_groups: {}
          student_description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
        sports:
          title: Code your own sports game
          description_audience: ''
          description_short: Mix and match across sports
          description: Mix and match across sports
          lesson_groups: {}
          student_description: Mix and match across sports
          name: sports
        2016_sciencePD-phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        2016_sciencePD_phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        sciencepd3-2016:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp3-support:
          title: Unit 3 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 3
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 3.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 3.
        csdgraveyard:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp4-support:
          title: Unit 4 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 4
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 4.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 4.
        sciencepd4:
          title: 'CS in Science: Part 4'
          description_audience: ''
          description_short: 'Phase 3: Reflect on semester 1 workshop'
          description: 'Phase 3: Reflect on semester 1 workshop'
          lesson_groups: {}
          student_description: 'Phase 3: Reflect on semester 1 workshop'
        csp-ca-a:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        science-pd-ol-pt-5:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csf2harvey:
          title: Mr. Harvey's Class
          description_audience: ''
          description_short: ''
          description: Special bubbles just for our class!
          lesson_groups:
            end_of_course_project:
              display_name: End of Course Project
            content:
              display_name: Content
          student_description: Special bubbles just for our class!
        sciencepd5:
          title: 'CS in Science: Part 5'
          description_audience: ''
          description_short: 'Phase 3: Prepare for semester 2 workshop'
          description: 'Phase 3: Prepare for semester 2 workshop'
          lesson_groups: {}
          student_description: 'Phase 3: Prepare for semester 2 workshop'
        csp5-support:
          title: Unit 5 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 5
          description: "####  **This course is associated with a version of the course that is no longer supported.  Please visit our Courses Overview page (https://studio.code.org/courses) to see our most current curricula.**\r\n\r\nThis is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 5."
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 5.
          name: csp5-support
        csp6-support:
          stage: {}
          title: AP Preparation and Resources for Teachers
          description_audience: ''
          description_short: ''
          description: 'COMING SOON: soon this page will host a set of resources for teachers preparing for the AP exam'
          lesson_groups: {}
          student_description: 'COMING SOON: soon this page will host a set of resources for teachers preparing for the AP exam'
        csppostap-2017:
          title: CSP Post-AP - Databases and Using Data in Your Apps ('17-'18)
          description_audience: ''
          description_short: Learn to collect and use data in App Lab apps.
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          lesson_groups:
            content:
              display_name: Content
            cspSurvey:
              display_name: Survey
          student_description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
        unit6-csd-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        gamelab-demo:
          lesson_groups: {}
        csd6-draft:
          title: CSD Unit 6 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
          student_description: ''
        workshop-gamelab:
          title: Game Lab Workshop
          description_audience: Teachers attending an in-person Game Lab Workshop
          description_short: Level progression to accompany an in-person Game Lab Workshop
          description: This level progression is intended to accompany an in-person Game Lab Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of Game Lab.
          lesson_groups: {}
          student_description: This level progression is intended to accompany an in-person Game Lab Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of Game Lab.
        csd5-draft:
          title: Draft of CSD5
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
          student_description: ''
        applab-1hour:
          title: App Lab 1 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 1 hour. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          lesson_groups: {}
          student_description: This workshop is designed to give students a basic introduction to app lab in 1 hour. Students should be able to come in with different backgrounds in computer science and have fun creating something.
        applab-2hour:
          title: App Lab 2 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 2 hours. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          lesson_groups: {}
          student_description: This workshop is designed to give students a basic introduction to app lab in 2 hours. Students should be able to come in with different backgrounds in computer science and have fun creating something.
        coursed-ramp:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        workshop-maker:
          title: Maker Toolkit Workshop
          description_audience: Teachers attending an in-person Maker Toolkit Workshop
          description_short: Level progression to accompany an in-person Maker Toolkit Workshop
          description: This level progression is intended to accompany an in-person Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of App Lab and the Maker Toolkit.
          lesson_groups: {}
          student_description: This level progression is intended to accompany an in-person Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of App Lab and the Maker Toolkit.
        coursee-ramp:
          title: coursee-ramp
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd6-2017:
          title: CSD Unit 6 - Physical Computing ('17-'18)
          description_audience: ''
          description_short: Learn to program with physical devices.
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            csd_survey:
              display_name: Post-Course Survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csd3-draft:
          title: 'CSD Unit 3 - Programming: Animations and Games'
          description_audience: ''
          description_short: Animations and Games
          description: ''
        csd5-2017:
          title: CSD Unit 5 - Data and Society ('17-'18)
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            csd_survey:
              display_name: Post-Course Survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd3-old:
          title: CSD Unit 3 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 3
          description: This is the original draft of CSD Unit 3, released in the fall of 2016. Unless you have students currently using this course, you should instead use the updated version of this unit at studio.code.org/s/csd3-2019 - this original draft will remain available until July 1, 2017.
          lesson_groups: {}
          student_description: This is the original draft of CSD Unit 3, released in the fall of 2016. Unless you have students currently using this course, you should instead use the updated version of this unit at studio.code.org/s/csd3-2019 - this original draft will remain available until July 1, 2017.
        csd1-old:
          title: CSD Unit 1 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 1
          description: This is the original draft of CSD Unit 1, originally published in the fall of 2016. This version has been replaced with an updated unit at studio.code.org/s/csd1-2019 and will only remain available until July 1, 2017.
          lesson_groups: {}
          student_description: This is the original draft of CSD Unit 1, originally published in the fall of 2016. This version has been replaced with an updated unit at studio.code.org/s/csd1-2019 and will only remain available until July 1, 2017.
        csd2-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csd1-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csd3-chapters:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        coursef-ramp:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csppostsurvey-staging:
          title: "[Deprecated] CSP post survey staging area"
          description_audience: ''
          description_short: ''
          description: Moved to /s/csp-post-survey.  Destory after 05.05.17
        fmscsd3preview:
          title: CSD - Drawing in Game Lab
          description_audience: Falmouth Middle School (Mike Harvey)
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csppostsurvey:
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 10 minutes to complete.  Your responses are private and anonymous.  '
        csp-post-survey:
          title: CSP Student Post-Course Survey ('17-'18)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          student_description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csp-post-survey
        public-key-cryptography:
          title: Public Key Cryptography Widgets
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd2-old:
          title: CSD Unit 2 (DEPRECATED)
          description_audience: ''
          description_short: Web Development
          description: ''
          lesson_groups: {}
          student_description: ''
        artist-and-bb8:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        coursea-2017:
          title: Course A
          assignment_family_title: Course A
          description_audience: 'Ages: 4-7'
          description_short: An introduction to computer science for pre-readers.
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: coursea-2017
        courseb-2017:
          title: Course B
          assignment_family_title: Course B
          description_audience: 'Ages: 5-8'
          description_short: An introduction to computer science for pre-readers. (Similar to Course A, but with more variety for older students.)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: courseb-2017
        coursec-2017:
          title: Course C
          assignment_family_title: Course C
          description_audience: 'Ages: 6-10'
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          lesson_groups: {}
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          name: coursec-2017
        coursed-2017:
          title: Course D
          assignment_family_title: Course D
          description_audience: 'Ages: 7-11'
          description_short: Quickly cover concepts from Course C, then go further with algorithms, nested loops, conditionals, and more.
          description: Learn new coding concepts including algorithms, nested loops, while loops, conditionals, and events. Get an introduction to digital citizenship before creating your very own game or story that you can share.
          lesson_groups: {}
          student_description: Learn new coding concepts including algorithms, nested loops, while loops, conditionals, and events. Get an introduction to digital citizenship before creating your very own game or story that you can share.
          name: coursed-2017
        coursee-2017:
          title: Course E
          assignment_family_title: Course E
          description_audience: 'Ages: 8-12'
          description_short: Quickly cover concepts in Course C & D and then go further with functions.
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          name: coursee-2017
        coursef-2017:
          title: Course F
          assignment_family_title: Course F
          description_audience: 'Ages: 9-13'
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          name: coursef-2017
        csdnovice:
          title: CS Discoveries TeacherCon Novice Facilitators
          description_audience: CSD Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
          lesson_groups: {}
          student_description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
        csp-explore-task:
          title: CSP Explore PT Prep
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
        csp-create-task:
          title: ''
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
        csp-ap-tech-setup:
          title: CSP AP Digital Portfolio and Other Tools
          description_audience: ''
          description_short: ''
          description: Covers AP Digital Portfolio setup and other technical tools required for completing and submitting the AP Performance Tasks.
        csp-ap:
          title: CSP AP Exam and Performance Tasks
          description_audience: ''
          description_short: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          description: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          lesson_groups:
            csp_ap_1:
              display_name: 'Chapter 1: AP Tech Setup'
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
          student_description: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
        cspnovice:
          title: CS Principles TeacherCon Novice Facilitator Reflection
          description_audience: CSP Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
        novice-view:
          title: view novice responses
          description_audience: brook, dani, mal
          description_short: NA
          description: NA
          lesson_groups: {}
          student_description: NA
        csp1-dlp:
          title: CSP Unit 1 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csp1-dlp
        csp2-dlp:
          title: CSP Unit 2 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 2 Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp3-dlp:
          title: CSP Unit 3 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 3 Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp4-dlp:
          title: CSP Unit 4 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp5-dlp:
          title: CSP Unit 5 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csd1-dlp:
          title: CS Discoveries Unit 1 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csd6-dlp:
          title: CS Discoveries Unit 6 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd5-dlp:
          title: CS Discoveries Unit 5 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd4-dlp:
          title: CS Discoveries Unit 4 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd3-dlp:
          title: CS Discoveries Unit 3 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd2-dlp:
          title: CS Discoveries Unit 2 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        allthettsthings:
          lesson_groups: {}
        express-2017:
          title: Express Course
          assignment_family_title: Express Course
          description_audience: 'Ages: 9-18'
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: express-2017
        pre-express-2017:
          title: Pre-reader Express
          assignment_family_title: Pre-reader Express
          description_audience: 'Ages: 4-8'
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: pre-express-2017
        subgoal-labels-opt-in:
          title: Subgoal Labels Study Opt-in
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp-pre-survey-test-2017:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csp3-research-mxghyt:
          title: CSP Unit 3 - Intro to Programming (subgoals)
          description_audience: ''
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csd4-draft:
          title: CSD Unit 4 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
          student_description: ''
        craft17:
          title: Craft17 Development Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        applab-intro:
          title: Intro to App Lab
          description_audience: ''
          description_short: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          description: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          lesson_groups: {}
          student_description: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          name: applab-intro
        e-f-ramp:
          title: Course E & F Ramp
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          student_description: ''
        new-d:
          title: New Course D Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp3-a:
          title: CSP Unit 3 - Subgoals Group A
          description_audience: ''
          description_short: Alternate version of CSP Unit 3 for subgoal labels experiment group A.
          description: This unit introduces the foundational concepts of computer programming, for students in Subgoals Group A.
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
          student_description: This unit introduces the foundational concepts of computer programming, for students in Subgoals Group A.
        new-express:
          title: New Express Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: ''
        new-stages-sept-2017:
          title: New stages for 9/17
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        new-e:
          title: New Script for E
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          student_description: ''
        new-f:
          title: New Script for F
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: ''
        csd5-old:
          title: CSD Unit 5 - Data and Society
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of the your choosing.
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of the your choosing.
        subgoals-assessment-staging:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        hocali:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        colehoc2017:
          title: 'HoC 17 - Cole '
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        craft17-kiki:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd4-old:
          title: "(DEPRECATED) CSD Unit 4 - The Design Process"
          description_audience: ''
          description_short: 2016/17 Beta version of CSD Unit 4
          description: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
          student_description: ''
        csp3-staging:
          title: CSP 3 Proposed Changes Temporary Staging Ground
          description_audience: ''
          description_short: Temporary staging ground for Oct. changes to csp3
          description: "This is a replica of live levels in /s/csp3-2017 with new and modified stages added.  DO NOT EDIT LIVE LEVELS.\r\n"
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
          student_description: "This is a replica of live levels in /s/csp3-2017 with new and modified stages added.  DO NOT EDIT LIVE LEVELS.\r\n"
        pwc:
          title: PwC's Access Your Potential curriculum
          description_audience: ''
          description_short: ''
          description: At PwC, we believe that all students have the potential to be tomorrow’s leaders and tech-driven workforce. Access Your Potential is our commitment to help close the opportunity gap by equipping young people, especially those from disadvantaged communities, with the financial, technology and career-selection skills they need to change the trajectory of their lives. As part of our commitment, we’re excited to launch our Access Your Potential middle school technology and careers curriculum.
          lesson_groups: {}
          student_description: At PwC, we believe that all students have the potential to be tomorrow’s leaders and tech-driven workforce. Access Your Potential is our commitment to help close the opportunity gap by equipping young people, especially those from disadvantaged communities, with the financial, technology and career-selection skills they need to change the trajectory of their lives. As part of our commitment, we’re excited to launch our Access Your Potential middle school technology and careers curriculum.
        allthesurveys:
          title: All the surveys
          description_audience: ''
          description_short: Place to stage and test Code.org surveys
          description: ''
          lesson_groups: {}
          student_description: ''
          name: allthesurveys
        k1hoc2017:
          title: K-1 Hour of Code 2017
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        hero:
          title: 'Minecraft: Hero''s Journey'
          description_audience: ''
          description_short: Minecraft is back with a brand new activity for Hour of Code!
          description: Minecraft is back for the Hour of Code with a brand new activity! Journey through Minecraft with code.
          lesson_groups: {}
          student_description: Minecraft is back for the Hour of Code with a brand new activity! Journey through Minecraft with code.
          name: hero
        applab-intro-staging:
          title: Intro to App Lab Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp-explore-2017:
          title: Explore - AP Performance Task Prep ('17-'18)
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description: "These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          student_description: "These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp-create-2017:
          title: Create - AP Performance Task Prep ('17-'18)
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description: "These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated December, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          student_description: "These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated December, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp3-reovery:
          title: 'csp3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
        csp3-recovery:
          title: 'CSP3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        aws-demo:
          title: AWS Demo
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        halloween:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        valentine:
          title: Valentine Special
          description_audience: ''
          description_short: Have fun creating valentines
          description: ''
          lesson_groups: {}
          student_description: ''
        colehoc17:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        course-e-2018:
          title: Course E 2018 (Outdated!)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          student_description: ''
        course-f-2018:
          title: Course F 2018 (Outdated)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: ''
        csd6-old:
          title: "(DEPRECATED) CSD Unit 6 - Physical Computing"
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
          student_description: ''
        unembeddedlevels:
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
        unembedded:
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
        csd3-1819draft:
          title: CSD Unit 3 - Animations and Games
          description_audience: ''
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        textbook:
          title: CSF Textbook Pages
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        glj-behavior-test:
          title: Game Lab Jr. Test - Behavior
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd3-2018:
          title: CSD Unit 3 - Animations and Games ('18-'19)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd2-2018:
          title: CSD Unit 2 - Web Development ('18-'19)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        coursea-2018:
          title: Course A (2018)
          assignment_family_title: Course A
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        express-2018:
          title: Express Course
          assignment_family_title: Express Course
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2018:
          title: Course B (2018)
          assignment_family_title: Course B
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        coursed-2018:
          title: Course D (2018)
          assignment_family_title: Course D
          description: Students develop their understanding of nested loops, while loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements and create your own art, story or game.
          description_audience: 'Ages: 7-11'
          lesson_groups: {}
          student_description: Students develop their understanding of nested loops, while loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
        jr-test:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        petgame:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp-exam:
          title: CS Principles AP Exam Prep
          description_audience: ''
          description_short: CS Principles AP Exam Prep
          description: 'This page contains copies of all the multiple choice assessment questions that appeared in Units 1-5 in the course.  Students may want to practice for the multiple choice exam by re-taking these little tests.  '
          lesson_groups: {}
          student_description: 'This page contains copies of all the multiple choice assessment questions that appeared in Units 1-5 in the course.  Students may want to practice for the multiple choice exam by re-taking these little tests.  '
        coursec-2018:
          title: Course C (2018)
          assignment_family_title: Course C
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups: {}
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        csd6-2018:
          title: CSD Unit 6 - Physical Computing ('18-'19)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        coursee-2018:
          title: Course E (2018)
          assignment_family_title: Course E
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
        coursef-2018:
          title: Course F (2018)
          assignment_family_title: Course F
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
        csp1-2018:
          title: CSP Unit 1 - The Internet ('18-'19)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
        csd1-2018:
          title: CSD Unit 1 - Problem Solving ('18-'19)
          description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          student_description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd4-2018:
          title: CSD Unit 4 - The Design Process ('18-'19)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            cspSurvey:
              display_name: Survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-2018:
          title: CSD Unit 5 - Data and Society ('18-'19)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csp2-2018:
          title: CSP Unit 2 - Digital Information ('18-'19)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1_2018:
              display_name: 'Unit 2: Digital Information'
            cspAssessment:
              display_name: Chapter Assessment
          student_description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        csp3-2018:
          title: CSP Unit 3 - Intro to Programming ('18-'19)
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          name: csp3-2018
        csp-explore-2018:
          title: Explore - AP Performance Task Prep ('18-'19)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csp-create-2018:
          title: Create - AP Performance Task Prep ('18-'19)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csp4-2018:
          title: CSP Unit 4 - Big Data and Privacy ('18-'19)
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1_2018:
              display_name: 'Unit 4: Big Data and Privacy'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
        csp5-2018:
          title: CSP Unit 5 - Building Apps ('18-'19)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          student_description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csppostap-2018:
          title: Post AP - Data Tools ('18-'19)
          description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups:
            csp_postap_1:
              display_name: 'Chapter 1: Manipulating and Visualizing Data'
            csp_postap_2:
              display_name: 'Chapter 2: Apps and Databases'
            cspSurvey:
              display_name: Survey
          student_description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
        spritelab:
          title: Introduction to Sprite Lab (PILOT)
          description_audience: Course E/F Students
          description_short: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          lesson_groups: {}
          student_description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
        csd1-dlp-18:
          title: CS Discoveries Unit 1 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd1-dlp-18
        csd2-dlp-18:
          title: CS Discoveries Unit 2 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd2-dlp-18
        csd3-dlp-18:
          title: CS Discoveries Unit 3 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd3-dlp-18
        csd4-dlp-18:
          title: CS Discoveries Unit 4 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd4-dlp-18
        csd5-dlp-18:
          title: CS Discoveries Unit 5 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd5-dlp-18
        csd6-dlp-18:
          title: CS Discoveries Unit 6 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd6-dlp-18
        csp1-dlp-18:
          title: CS Principles Unit 1 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csp1-dlp-18
        csp2-dlp-18:
          title: CS Principles Unit 2 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csp2-dlp-18
        csp3-dlp-18:
          title: CS Principles Unit 3 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp4-dlp-18:
          title: CS Principles Unit 4 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp5-dlp-18:
          title: CS Principles Unit 5 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp-explore-dlp-18:
          title: CS Principles Explore Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is the Explore AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Explore AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is the Explore AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Explore AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp-create-dlp-18:
          title: CS Principles Create Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is the Create AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Create AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: 'This is the Create AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Create AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csd-post-survey:
          title: CSD Student Post-Course Survey ('18-'19)
          description_audience: CSD Students
          description_short: CSD Student Post-Course Survey
          description: Welcome to the Code.org CS Discoveries Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            csd_survey:
              display_name: Post-Course Survey
          student_description: Welcome to the Code.org CS Discoveries Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csd-post-survey
        csd-novice-18:
          title: CS Discoveries Novice Reflections 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Novice reflection materials for CS Discoveries facilitators in training '
          description: This is the set of novice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is the set of novice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        csd-apprentice-18:
          title: CS Discoveries Apprentice Reflections 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Apprentice reflection materials for CS Discoveries facilitators in training '
          description: This is the set of apprentice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is the set of apprentice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        csp-novice-18:
          title: CS Principles Novice Reflections 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Novice reflection materials for CS Principles facilitators in training '
          description: This is the set of novice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is the set of novice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        csp-apprentice-18:
          title: CS Principles Apprentice Reflections 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Apprentice reflection materials for CS Principles facilitators in training '
          description: This is the set of apprentice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is the set of apprentice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        pre-express-2018:
          title: Pre-reader Express (2018)
          assignment_family_title: Pre-reader Express
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups: {}
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        spritelab-validated:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        2018hoc-ab:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        deepdive-debugging:
          title: Debugging Lessons for Educators
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        fit-test:
          title: FIT Training Practice PLC Course
          description_audience: Facilitators in Training
          description_short: FIT Training Course
          description: To be used to demonstrate how the PLC courses work.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: To be used to demonstrate how the PLC courses work.
        spritelab-simple:
          title: Introduction to Sprite Lab (EE)
          description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description_short: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description_audience: Course E/F Students
          lesson_groups: {}
          student_description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
        spritelab-ee:
          title: Introduction to Sprite Lab (EE)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        craft18:
          title: craft18 test script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        frozen-2018:
          title: New Frozen Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        frozen-2018-test:
          title: New Frozen Script
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          student_description: ''
        dance:
          title: Dance Party (2018)
          description_audience: ''
          description_short: Featuring Katy Perry, Madonna, J. Balvin, Sia, Keith Urban, Ciara, and 25 more!
          description: Code your own dance party to share with your friends!
          lesson_groups: {}
          student_description: Code your own dance party to share with your friends!
          name: dance
        frozen-2018-test-b:
          title: New Frozen Script
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          student_description: ''
        aquatic:
          title: 'Minecraft: Voyage Aquatic'
          description_audience: ''
          description_short: Use your creativity and problem solving skills to explore and build underwater worlds with code!
          description: Minecraft is back with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code.
          lesson_groups: {}
          student_description: Minecraft is back with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code.
          name: aquatic
        sconyers:
          title: Tracey's Playground
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        dance--draft:
          title: ''
          description: ''
          description_short: ''
          description_audience: ''
        dance-draft:
          title: DO NOT USE
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          student_description: ''
        cspplayground:
          title: CSP Playground
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        dance-extras:
          title: Keep On Dancing (2018)
          description_audience: ''
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description: Go beyond the first hour with extended project ideas.
          lesson_groups: {}
          student_description: Go beyond the first hour with extended project ideas.
          name: dance-extras
        coursef-2019:
          title: Course F (2019)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_internet:
              display_name: Internet
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
        dance-low:
          title: Dance Party (Low Bandwidth)
          description_audience: ''
          description_short: Code your own dance party to share with your friends! (This version is for slow connections)
          description: ''
          lesson_groups: {}
          student_description: ''
        coursed-2019:
          title: Course D (2019)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          student_description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
        coursee-2019:
          title: Course E (2019)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            end_of_course_project:
              display_name: End of Course Project
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
        express-2019:
          title: Express Course (2019)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm-Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          name: express-2019
        csd1-2019:
          title: CSD Unit 1 - Problem Solving and Computing ('19-'20)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        andrea-test:
          title: andrea-test
          description_audience: 6-12 Facilitators-in-Training
          description_short: this is to test my skills in making a course
          description: longer description on my attempt to create a course....   stilling wondering where overview, content came from....
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          name: andrea-test
          student_description: longer description on my attempt to create a course....   stilling wondering where overview, content came from....
        dance-extras-gallery:
          title: Keep On Dancing
          description_audience: ''
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description: Go beyond the first hour with extended project ideas.
          lesson_groups: {}
          student_description: Go beyond the first hour with extended project ideas.
        coursec-2019:
          title: Course C (2019)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        csp-mid-survey:
          title: CSP Student Mid-year Survey
          description_audience: CSP Students
          description_short: CSP Student Mid-year Survey
          description: Welcome to the Code.org CS Principles Mid-Year Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          student_description: Welcome to the Code.org CS Principles Mid-Year Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csp-mid-survey
        gamelab:
          title: Game Lab
          description_audience: ''
          description_short: ''
          description: Teacher-facing tutorials for development in Game Lab.  These tutorials go beyond the concepts covered in CSD.
          lesson_groups: {}
          student_description: Teacher-facing tutorials for development in Game Lab.  These tutorials go beyond the concepts covered in CSD.
        coursea-2019:
          title: Course A (2019)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2019:
          title: Course B (2019)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        pre-express-2019:
          title: Pre-reader Express (2019)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          name: pre-express-2019
        removed19:
          title: Removed from CSF for 2019
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        dani-test-script:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csd2-2019:
          title: CSD Unit 2 - Web Development ('19-'20)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        csd3-2019:
          title: CSD Unit 3 - Animations and Games ('19-'20)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd4-2019:
          title: CSD Unit 4 - The Design Process ('19-'20)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-2019:
          title: CSD Unit 5 - Data and Society ('19-'20)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd6-2019:
          title: CSD Unit 6 - Physical Computing ('19-'20)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csp4-pilot:
          title: CSP Unit 4 Pilot - Variables, Conditionals, and Functions
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          student_description: ''
        csp1-2019:
          title: CSP Unit 1 - The Internet ('19-'20)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
        csp2-2019:
          title: CSP Unit 2 - Digital Information ('19-'20)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1_2018:
              display_name: 'Unit 2: Digital Information'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        csp3-2019:
          title: CSP Unit 3 - Intro to Programming ('19-'20)
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csp4-2019:
          title: CSP Unit 4 - Big Data and Privacy ('19-'20)
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1_2018:
              display_name: 'Unit 4: Big Data and Privacy'
            cspAssessment:
              display_name: Chapter Assessment
            optional:
              display_name: Optional
            cspSurvey:
              display_name: Survey
          student_description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
        csp5-2019:
          title: CSP Unit 5 - Building Apps ('19-'20)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          student_description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csp-explore-2019:
          title: Explore - AP Performance Task Prep ('19-'20)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csp-create-2019:
          title: Create - AP Performance Task Prep ('19-'20)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csppostap-2019:
          title: Post AP - Data Tools ('19-'20)
          description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups:
            csp_postap_1:
              display_name: 'Chapter 1: Manipulating and Visualizing Data'
            csp_postap_2:
              display_name: 'Chapter 2: Apps and Databases'
            cspSurvey:
              display_name: Survey
          student_description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
        csp1-pilot:
          title: CSP Unit 1 Pilot - Digital Information
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            required:
              display_name: Overview
          student_description: ''
        csd-tests:
          title: Post-Project Tests for CSD
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd-videos:
          title: CSD Videos
          description_audience: ''
          description_short: All the Videos in CS Discoveries
          description: All the Videos in CS Discoveries
          lesson_groups: {}
          student_description: All the Videos in CS Discoveries
        time4csdemo:
          title: Time4CS Florida's Diversity
          description_audience: 4th grade
          description_short: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
          description: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            time4cs_c1:
              display_name: 'Collection 1: The Everglades & its Ecosystems'
            time4cs_c2:
              display_name: 'Collection 2: Food Chains (in the Everglades)'
            time4cs_c3:
              display_name: 'Collection 3: Native Species (in the Everglades)'
            time4cs_c4:
              display_name: 'Collection 4: Impact of Invasive Species (on the Everglades)'
            time4cs_c5:
              display_name: 'Collection 5: Citizens Take Action'
          student_description: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
        csp1-pilot-staging:
          title: 'Unit 1: Bits & Bytes'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        csp2-pilot-staging:
          title: 'Unit 2: The Internet'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        csp3-pilot-staging:
          title: 'Unit 3: Intro to App Development'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp4-pilot-staging:
          title: 'Unit 4: Variables, Conditionals, and Functions'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        csp5-pilot-staging:
          title: 'Unit 5: Lists, Loops, and Traversals'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            csp_libraries:
              display_name: Libraries
          student_description: ''
        csp6-pilot-staging:
          title: 'Unit 6: Algorithms'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        csp7-pilot-staging:
          title: 'Unit 7: Functions and Libraries'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
          student_description: ''
        csp8-pilot-staging:
          title: 'Unit 8: Create PT'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        csp9-pilot-staging:
          title: 'Unit 9: Data'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        csp10-pilot-staging:
          title: 'Unit 10: Global Impact'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        pluralsight:
          title: Get access to Pluralsight One
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        express-2018-vn:
          title: Express For Vietnam (2018)
          description_audience: ''
          description_short: Giới thiệu Khoa học máy tính cơ bản cho học sinh Việt Nam.
          description: "Khoa Học Máy Tính (Computer Science) \x1Dlà môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô động cho phù hợp với học sinh Việt Nam.\r\n"
        csd-post-survey-2018:
          title: CSD Student Post-Course Survey ('18-'19)
          description_audience: CSD Students
          description_short: CSD Student Post-Course Survey 2018
          description: "The CS Discoveries Post-Course Survey is an important tool we use to get feedback from you and make improvements to the course. \r\n The survey is private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration."
          lesson_groups:
            cspSurvey:
              display_name: Survey
          student_description: "The CS Discoveries Post-Course Survey is an important tool we use to get feedback from you and make improvements to the course. \r\n The survey is private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration."
          name: csd-post-survey-2018
        csp-post-survey-2018:
          title: CSP Student Post-Course Survey ('18-'19)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          student_description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csp-post-survey-2018
        csp5-pilot:
          title: CSP Unit 5 Pilot - Lists, Loops, and Traversals
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          student_description: ''
        fit2019-novice:
          title: Novice Reflections for Summer Workshop 2019
          description_audience: 6 - 12 Novice Facilitators in Training
          description_short: 'Novice reflection materials for 2019 facilitators in training '
          description: This is the set of novice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is the set of novice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop.
        csd-test-saving-state:
          title: Sample of online activities
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        fit2019-apprentice:
          title: Apprentice Reflections for Summer Workshop 2019
          description_audience: 6 - 12 Apprentice Facilitators in Training
          description_short: 'Apprentice reflection materials for 2019 facilitators in training '
          description: This is the set of apprentice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: This is the set of apprentice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop
          name: fit2019-apprentice
        csd-sample-online:
          title: Sample of online activities for CS Discoveries
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd1-pilot:
          title: CSD Unit 1 - Problem Solving (Pilot Version)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd2-pilot:
          title: CSD Unit 2 - Web Development (Pilot Version)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        csd3-pilot:
          title: CSD Unit 3 - Animations and Games (Pilot Version)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd-bugs:
          title: Example of Bugs for CSD Teachers
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        maddie-test:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csp3-pilot:
          title: CSP Unit 3 Pilot - Intro to App Design
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          student_description: ''
        csl-vn:
          title: Computer Science Literacy for Vietnam
          description_audience: Tuổi 5-10
          description_short: Khoa học máy tính cơ bản cho học sinh Việt Nam
          description: 'Khoa Học Máy Tính (Computer Science) là môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô đọng cho phù hợp với học sinh Việt Nam. '
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          student_description: 'Khoa Học Máy Tính (Computer Science) là môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô đọng cho phù hợp với học sinh Việt Nam. '
        dlp19-csd-mod-fit:
          title: CS Discoveries Deeper Learning 2019 Module for FiT
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: Background information and practice prompt for FiT workshop
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          name: dlp19-csd-mod-fit
          student_description: ''
        dlp19-csp-mod-fit:
          title: CS Principles Deeper Learning 2019 FiT Workshop
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        pl-csd-bugs:
          title: CSD Workshop 1 Bugs
          description_audience: ''
          description_short: Debugging in Game Lab - Academic Year Workshop 1
          description: ''
          lesson_groups: {}
          student_description: ''
        dlp19-csd-mod-w1:
          title: 'CS Discoveries Deeper Learning 2019 Module for Workshop 1 '
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: Academic Year Workshop 1
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        dlp19-csd-mod-w2:
          title: CS Discoveries Deeper Learning Module for Workshop 2
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        dlp19-csd-mod-w3:
          title: CS Discoveries Deeper Learning Module for Workshop 3
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        dlp19-csd-mod-w4:
          title: CS Discoveries Deeper Learning Module for Workshop 4
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        dlp19-csp-mod-w1:
          title: CS Principles Deeper Learning Module for Workshop 1
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        dlp19-csp-mod-w2:
          title: CS Principles Deeper Learning Module for Workshop 2
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
          name: dlp19-csp-mod-w2
        dlp19-csp-mod-w3:
          title: CS Principles Deeper Learning Module for Workshop 3
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
        dlp19-csp-mod-w4:
          title: CS Principles Deeper Learning Module for Workshop 4
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          student_description: ''
          name: dlp19-csp-mod-w4
        csd-pilot:
          title: CSD Pilot Course
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd4-pilot:
          title: Computing and Problem Solving
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          student_description: ''
        csp2-pilot:
          title: CSP Unit 2 Pilot - The Internet
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          student_description: ''
        denny-science:
          title: Earthquake Detector
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        peru-2019:
          title: Hora del Código Perú 2019
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp6-pilot:
          title: CSP Unit 6 Pilot - Algorithms
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          student_description: ''
        denny-science-8:
          title: Collision Detector
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          student_description: ''
        denny-science-copy:
          lesson_groups: {}
        dance-2019:
          title: Dance Party (2019)
          description_audience: ''
          description_short: Featuring Katy Perry, Shawn Mendes, Panic! At The Disco, Lil Nas X, Jonas Brothers, Nicki Minaj, and 34 more!
          description: Code your own dance party to share with your friends!
          lesson_groups: {}
          student_description: Code your own dance party to share with your friends!
          name: dance-2019
        k5-onlinepd-2019:
          title: Teaching Computer Science Fundamentals (2019)
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups:
            k5_getting_started:
              display_name: Getting Started
            k5_basic_concepts:
              display_name: Basic Coding Concepts and Teaching Practices
            k5_diving_deeper:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps:
              display_name: Next Steps
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          name: k5-onlinepd-2019
        dance-extras-2019:
          title: Keep On Dancing (2019)
          description: Go beyond the first hour with extended project ideas.
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description_audience: ''
          lesson_groups: {}
          student_description: Go beyond the first hour with extended project ideas.
          name: dance-extras-2019
        csp10-pilot:
          title: Cybersecurity and Global Impacts
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp4-preview:
          title: 'CSP Preview: Variables, Conditionals, and Functions'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          student_description: ''
        time4cs-original-unit-1:
          title: Time4CS Original Unit 1
          description_audience: ''
          description_short: ''
          description: ''
        time4cs-control-unit-2:
          title: Time4CS Control Unit 2
          description_audience: ''
          description_short: ''
          description: Description for the unit goes here
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_conditionals:
              display_name: Conditionals
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            end_of_course_project:
              display_name: End of Course Project
          student_description: Description for the unit goes here
        time4cs-experiment-unit-2:
          title: Time4CS Experiment Unit 2
          description_audience: ''
          description_short: "[Add description]"
          description: "[Add description]"
          lesson_groups:
            time4cs_c1:
              display_name: 'Collection 1: The Everglades & its Ecosystems'
            time4cs_c2:
              display_name: 'Collection 2: Food Chains (in the Everglades)'
            time4cs_c3:
              display_name: 'Collection 3: Native Species (in the Everglades)'
            time4cs_c4:
              display_name: 'Collection 4: Impact of Invasive Species (on the Everglades)'
            time4cs_c5:
              display_name: 'Collection 5: Citizens Take Action'
          student_description: "[Add description]"
        time4cs-control-unit-1:
          title: Time4CS Control Unit 1
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_events:
              display_name: Events
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            ramp_up:
              display_name: Ramp-Up
          student_description: ''
        time4cs-experiment-unit-1:
          title: Time4CS Experiment Unit 1
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_events:
              display_name: Events
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            ramp_up:
              display_name: Ramp-Up
          student_description: ''
        csp7-pilot:
          title: CSP Unit 7 Pilot - Parameters, Return, and Libraries
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          student_description: ''
        csp8-pilot:
          title: CSP Unit 8 Pilot - Create PT Prep
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csp4-2020:
          title: CSP Unit 4 - Variables, Conditionals, and Functions ('20-'21)
          description_audience: ''
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          name: csp4-2020
        csp5-2020:
          title: CSP Unit 5 - Lists, Loops, and Traversals ('20-'21)
          description_audience: ''
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          name: csp5-2020
        csp7-2020:
          title: CSP Unit 7 - Parameters, Return, and Libraries ('20-'21)
          description_audience: ''
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            cspSurvey2020:
              display_name: Post-Course Survey
          name: csp7-2020
          student_description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
        csd2-projects-temp:
          title: CSD Web Projects - TEMP
          description_audience: ''
          description_short: ''
          description: Temporary place to hold the new mini-projects for CSD Web Development
          lesson_groups: {}
          student_description: Temporary place to hold the new mini-projects for CSD Web Development
        csp9-pilot:
          title: CSP Unit 9 Pilot - Data
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        csd2-2020:
          title: CSD Unit 2 - Web Development ('20-'21)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          name: csd2-2020
        csd1-2020:
          title: CSD Unit 1 - Problem Solving and Computing ('20-'21)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
            csd1_3:
              display_name: Alternate Lessons
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd4-2020:
          title: CSD Unit 4 - The Design Process ('20-'21)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          name: csd4-2020
        csd5-2020:
          title: CSD Unit 5 - Data and Society ('20-'21)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd6-2020:
          title: CSD Unit 6 - Physical Computing ('20-'21)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csd3-2020:
          title: CSD Unit 3 - Interactive Animations and Games ('20-'21)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          name: csd3-2020
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        moneppo-1:
          lesson_groups: {}
        coursea-2020:
          title: Course A (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2020:
          title: Course B (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        coursec-2020:
          title: Course C (2020)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        coursed-2020:
          title: Course D (2020)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          student_description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
        coursee-2020:
          title: Course E (2020)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            csf_impacts:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
        coursef-2020:
          title: Course F (2020)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_digcit:
              display_name: Digital Citizenship
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          name: coursef-2020
        express-2020:
          title: Express Course (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm-Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        pre-express-2020:
          title: Pre-reader Express (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        csp1-2020:
          title: CSP Unit 1 - Digital Information ('20-'21)
          description_audience: ''
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          lesson_groups:
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
            cspSurvey:
              display_name: Survey
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          name: csp1-2020
        csp2-2020:
          title: CSP Unit 2 - The Internet ('20-'21)
          description_audience: ''
          description_short: Build the internet from the ground up using the Internet Simulator.
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          name: csp2-2020
        csp3-2020:
          title: CSP Unit 3 - Intro to App Design ('20-'21)
          description_audience: ''
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
            cspSurvey2020:
              display_name: Post-Course Survey
          name: csp3-2020
          student_description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
        csp6-2020:
          title: CSP Unit 6 - Algorithms ('20-'21)
          description_audience: ''
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          lesson_groups:
            csp_unit6_2020:
              display_name: 'Unit 6: Algorithms'
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          name: csp6-2020
        csp8-2020:
          title: CSP Unit 8 - Create PT Prep ('20-'21)
          description_audience: ''
          description_short: Practice and complete the Create Performance Task (PT).
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          lesson_groups: {}
          student_description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          name: csp8-2020
        csp9-2020:
          title: CSP Unit 9 - Data ('20-'21)
          description_audience: ''
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project you''ll analyze a dataset of your choosing and present your findings. '
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project you''ll analyze a dataset of your choosing and present your findings. '
          name: csp9-2020
        csp10-2020:
          title: CSP Unit 10 - Cybersecurity and Global Impacts ('20-'21)
          description_audience: ''
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security, and the ways that encryption and other techniques are used to complete it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\r\n\r\n"
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
            cspSurvey2020:
              display_name: Post-Course Survey
          student_description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security, and the ways that encryption and other techniques are used to complete it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\r\n\r\n"
          name: csp10-2020
        csp-march-virtual:
          title: CS Principles 20-21 Curriculum Training for Facilitators
          description_audience: CS Principles Facilitators
          description_short: ''
          description: Welcome to the CSP Facilitator Pre-work for the April call! This will be focused on deepening the understanding of EIPM, content in Unit 5, and the new datasets available in the course. This work is essential to completing before the April call since we will be processing and discussing the work together in the call.
          lesson_groups: {}
          student_description: Welcome to the CSP Facilitator Pre-work for the April call! This will be focused on deepening the understanding of EIPM, content in Unit 5, and the new datasets available in the course. This work is essential to completing before the April call since we will be processing and discussing the work together in the call.
        csp3-virtual:
          title: Self Paced Introduction to Turtle Programming In App Lab
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        jess-test-script:
          title: Jess's Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
          name: jess-test-script
        csd2-virtual:
          title: Self Paced Introduction to Web Lab
          description: You’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
          description_short: Learn to build your own web site in Web Lab.
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
          student_description: You’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
        csp5-virtual:
          title: Event-Driven Programming in App Lab
          description: This self-paced module introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This unit uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups: {}
          student_description: This self-paced module introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This unit uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        virtual-holding-place:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            csd3_2:
              display_name: 'Chapter 2: Building Games'
          student_description: ''
        code-break:
          title: Code Break
          description_audience: ''
          description_short: ''
          description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 13+. '
          lesson_groups: {}
          student_description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 13+. '
        code-break-staging:
          title: Code Break Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        code-break-younger-staging:
          title: Code Break Younger Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          student_description: ''
        code-break-younger:
          title: Code Break for Younger Students
          description_audience: ''
          description_short: ''
          description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 6-12. '
          lesson_groups: {}
          student_description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 6-12. '
        no-lg:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csp5-virtual-part2:
          title: Self Paced Introduction to App Lab
          description_audience: ''
          description_short: Learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description: This unit introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This uni uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
          student_description: This unit introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This uni uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        gamelabprojects:
          lesson_groups: {}
        k5-onlinepd-2020:
          title: Teaching Computer Science Fundamentals (2020)
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups:
            k5_getting_started_1:
              display_name: Getting Started
            k5_basic_concepts_1:
              display_name: Basic Coding Concepts and Teaching Practices
            k5_diving_deeper_1:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps_1:
              display_name: Next Steps
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          name: k5-onlinepd-2020
        dani-test-2020:
          lesson_groups:
            lesson group:
              display_name: display name
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dani-june-2020-test:
          lesson_groups:
            lesson group:
              display_name: display name
            lg_1:
              display_name: DISPLAYNAME
            cspSurvey:
              display_name: Survey
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            cs_lg:
              display_name: LG GOOD
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd3-virtual:
          title: Self Paced Introduction to Game Lab
          description: You’ll program animations, interactive art, and games in Game Lab. Start off with simple shapes and build up to more sophisticated sprite-based animations and games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: Content
            csd3_2:
              display_name: Content
            cspSurvey:
              display_name: Content
          student_description: You’ll program animations, interactive art, and games in Game Lab. Start off with simple shapes and build up to more sophisticated sprite-based animations and games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.
        ui-test-script-in-course-2017:
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-script-in-course-2019:
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-versioned-script-2017:
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-versioned-script-2019:
          lesson_groups:
            lg_1:
              display_name: Content
        kaitie-test-script:
          lesson_groups:
            lesson group:
              display_name: display name
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
          name: kaitie-test-script
        vpl-csd-2020:
          lesson_groups: {}
          title: CS Discoveries Virtual Professional Learning 2020 - 21
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
          name: vpl-csd-2020
        vpl-csp-2020:
          lesson_groups: {}
          title: CS Principles Virtual Professional Learning
          description_audience: ''
          description_short: ''
          description: ''
          name: vpl-csp-2020
          student_description: ''
        curriculum-sandbox-levels:
          lesson_groups:
            lesson group:
              display_name: Teacher Levels
              description: These are teaching-facing levels that are linked to lesson plans. The levels do not appear in other scripts.
            slides:
              display_name: Translator Levels
              description: These levels contain editable start code that aligns to curriculum slide decks.
            video:
              display_name: Video Capture Levels
              description: These levels are for use by video creators.
          title: Curriculum Sandbox Levels
          description_audience: 'Internal - Do not delete. This script houses important curriculum levels that would otherwise not have a script. '
          description_short: 'Levels that are linked directly in lesson plans but do not appear in other scripts. '
          description: ''
          student_description: ''
          name: curriculum-sandbox-levels
        virustest:
          lesson_groups:
            csf_data:
              display_name: Virus Simulation for Code Bytes
          title: Simulating an Outbreak
          description_audience: ''
          description_short: 'Use Sprite Lab to create a simulation out of a virus outbreak. '
          description: ''
          student_description: ''
        ml-playground:
          lesson_groups: {}
          title: ML/AI Unit - CSD
          description_audience: ''
          description_short: ML/AI Unit
          description: Brainstorm / Playground area for ML/AI Unit Development for CSD. For future questions about this, ask Dan Schneider.
          name: ml-playground
          student_description: Brainstorm / Playground area for ML/AI Unit Development for CSD. For future questions about this, ask Dan Schneider.
        outbreak:
          lesson_groups:
            outbreak:
              display_name: Outbreak Simulation
          title: Outbreak Simulator
          description_audience: ''
          description_short: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          name: outbreak
          student_description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
        apps-for-good:
          lesson_groups: {}
          title: Apps for Good
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        2021drafting:
          lesson_groups:
            Toolbox Levels:
              display_name: Toolbox Levels
            introduction:
              display_name: Introduction
              description: Explore projects created with Sprite Lab. Learn the basics of coding with sprites and events!
            lessonGroup-3:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
            outbreak:
              display_name: Outbreak Simulator
            Loom Levels:
              display_name: Loom Levels
            contagion:
              display_name: Contagion
            lesson group:
              display_name: Contagion-Guided-Practice
            haiku bot:
              display_name: Haiku Bot
            AB EOC:
              display_name: Course A and B EOC Project
            debugging:
              display_name: Debugging
            Argentina:
              display_name: Argentina
          title: Planning script for CI and CSF 2021
          description_audience: Internal
          description_short: Internal
          name: 2021drafting
          description: ''
          student_description: ''
        csd1-2021:
          title: Problem Solving and Computing ('21-'22)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing. \n\n**Implementation Guidance for Unit 1**\n- Unit 1 Chapter 1 should be completed before any other unit in CS Discoveries\n- Alternate lessons are provided for some lessons in Unit 1, depending on your classroom context\n- You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
              big_questions: "* What strategies and processes can I use to become a more effective problem solver?"
              description: This chapter guides students to develop and adopt a more formal structured problem solving process by reflecting on problems they have problems they have encountered, both in the classroom and everyday life. By working through a diverse set of problems, such as logic puzzles, engineering challenges, and planning a trip, students learn to identify different classes of problems, decompose large problems, and develop their personal problem solving skills.
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
              big_questions: |-
                * How do computers help people to solve problems?
                * How do people and computers approach problems differently?
                * What does a computer need from people in order to solve problems effectively?
              description: This chapter presents computers as machines that solve information problems. Students begin by building a common definition for a computer that focuses on functionality instead of specific hardware. They then explore the ways that computers approach problems. For their final project, students propose an app that could be used to solve a problem of their choosing.
            csd1_3:
              display_name: Alternate Lessons
              description: 'This chapter provides alternate lessons for this unit.  '
          name: csd1-2021
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd2-2021:
          title: Web Development ('21-'22)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.   \n\n**Implementation Guidance for Unit 2**\n- Complete Unit 1 Chapter 1 before starting this unit\n- Guidance for how to support students in programming levels and differentiate tasks are available in the [Debugging Guide](https://docs.google.com/document/d/1-mXz53CAQ1dy3-RVGkoUnR0hfAwdWeza4kch6NAvLb8/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)\n- You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit"
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
              big_questions: |-
                * Why do people create websites?
                * How can text communicate content, structure, and style on a web page?
                * How do I safely and appropriately make use of the content published on the Internet?
                * What strategies can I use when coding to find and fix issues?
              description: Students use computing as a form of self expression as they design and develop basic web pages.   Focusing on the tags, keywords, and syntax used to communicate instructions to the computer, students use HTML to structure the content of a web page. They also explore the privacy and intellectual property implications of publishing their work online.
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
              big_questions: |-
                * How can websites be used to address problems in the world?
                * What strategies can teams use to work better together?
                * How do I know what information can be trusted online?
              description: Students expand their ideas of websites beyond personal expression and begin to see them as a way to solve problems.  Students build on their collaborative skills and work in teams to create multi-page websites that solve a problem.
            cspSurvey:
              display_name: Survey
          name: csd2-2021
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
        csd3-2021:
          title: Interactive Animations and Games ('21-'22)
          description: |2-
             In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.

            **Implementation Guidance for Unit 3**
            - Complete Unit 1 Chapter 1 before starting this unit
            - Chapter 1 of this unit is a pre-requisite for Unit 6
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Debugging Guide](https://docs.google.com/document/d/1-mXz53CAQ1dy3-RVGkoUnR0hfAwdWeza4kch6NAvLb8/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
              big_questions: |
                * What is a computer program?
                * What are the core features of most programming languages?
                * How does programming enable creativity and individual expression?
                * What practices and strategies will help me as I write programs?
              description: Students build up toward programming interactive animations in the Game Lab environment.  They begin with simple shapes and sprite objects, then use loops to create flipbook style animations.  Next, they learn to use booleans and conditionals to respond to user input.  At the end of the chapter, students design and create an interactive animation that they can share with the world.
            csd3_2:
              display_name: 'Chapter 2: Building Games'
              big_questions: |-
                * How do software developers manage complexity and scale?
                * How can programs be organized so that common problems only need to be solved once?
                * How can I build on previous solutions to create even more complex behavior?
              description: In this chapter students combine the constructs that they learned in the first chapter to program more complex movement and collisions in their sprites.  As they create more complex programs, they begin to use functions to organize their code.  In the end, students use a design process to create an original game.
            cspSurvey:
              display_name: Survey
          name: csd3-2021
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd4-2021:
          title: The Design Process ('21-'22)
          description: |-
            Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.

            **Implementation Guidance for Unit 4**
            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit is a pre-requisite for Unit 6 and Unit 7
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
              big_questions: |-
                * How do designers identify the needs of their user?
                * How can we ensure that a user's needs are met by our designs?
                * What processes will best allow us to efficiently create, test, and iterate upon our designs?
              description: This chapter introduces the design process as a specific version of the problem solving process in which empathy for a user's needs is consistently integrated. Students learn strategies for identifying user needs and assessing how well different designs address them. In particular they learn how to develop a paper prototype, how to gather and respond to feedback about a prototype, and consider ways different user interfaces do or do not affect the usability of their apps.
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
              big_questions: |-
                * How do teams effectively work together to develop software?
                * What roles beyond programming are necessary to design and develop software?
                * How do designers incorporate feedback into multiple iterations of a product?
              description: This chapter is focused on a long running group project that allows students to apply all they've learned about User-Centered Design to develop an app prototype.  Working in teams, students identify a social issue that they care about and design and prototype an app to address that issue.  This is an opportunity for students to explore other roles in software development, such as product management, marketing, design, and testing.
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd4-2021
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-2021:
          title: Data and Society ('21-'22)
          description: |-
            Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.

            **Implementation Guidance for Unit 5**
            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit could be swapped out with Unit 7 - see the [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information on this option
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) for more information about this unit
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
              big_questions: |
                * Why is representation important in problem solving?
                * What features does a representation system need to be useful?
                * What is necessary to create usable binary representation systems?
                * How can we combine systems together to get more complex information?
              description: This chapter focuses on data representation and its role in solving information problems.  Students learn what a representation system needs to be useful, and how computers are able to represent different types of information using binary systems.  For the chapter project, students represent their perfect day in a binary punch card and trade with classmates to decipher.
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
              big_questions: |-
                * How does data help us to solve problems?
                * How do computers and humans use data differently?
                * What parts of the data problem solving process can be automated?
                * What kinds of problems do computers use data to solve in the real world?
              description: Students explore how data can be used to answer interesting questions and solve problems.  Using a modified version of the general Problem Solving Process, students look at how computers and humans use data differently and the pros and cons of automating problem solving.  After learning ways that computers use data in the real world, students choose their own problem and use data to address it.
            cspSurvey:
              display_name: Survey
          name: csd5-2021
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd6-2021:
          title: Physical Computing ('21-'22)
          description: |-
            Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.

            **Implementation Guidance for Unit 6**
            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit assumes students have completed Unit 3 Chapter 1 and all of Unit 4. Students without this background may struggle in this unit.
            - This unit requires students to have access to Circuit Playground's - [click here](https://code.org/circuitplayground) for more information about using Circuit Playground's in your classroom
            - This unit could be swapped out with Unit 7 - see the [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information on this option
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Debugging Guide](https://docs.google.com/document/d/1-mXz53CAQ1dy3-RVGkoUnR0hfAwdWeza4kch6NAvLb8/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) for more information about this unit
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
              big_questions: |-
                * How does software interact with hardware?
                * How can computers sense and respond to their environment?
                * What kind of information can be communicated with simple hardware outputs?
              description: This unit begins with an activity that encourages students to explore a wide variety of non-traditional computing platforms, before kicking off a review of programming in App Lab, with a particular focus on better understanding the event-driven programming model that was first introduced in Unit 4. Students learn techniques to make the apps they write more flexible by modifying design elements through code instead of always relying on design mode. Using the Circuit Playground, they then explore different approaches to taking input and producing output using hardware. By the end of this chapter, students will design a develop a game that uses physical hardware for input and output.
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
              big_questions: |-
                * How do programmers work with larger amounts of similar values?
                * How can complex real-world information be represented in code?
                * How can simple hardware be used to develop innovative new products?
              description: With an understanding of how to use hardware to take input and produce output, students move to thinking about more complex programs that integrate hardware and software. Using the color LEDs as an example of a a group of like objects, students learn how to use arrays to keep track of lists of values. From there we introduce the for loop, first simply as a way to repeat a block of code, and then as a way to run code on each element of an array. By the end of this chapter students will have explored all components of their boards while learning to structure their code using arrays, loops, and parametric functions. In the final two lessons students have an opportunity to dig into building physical prototypes using their boards.
            cspSurvey:
              display_name: Survey
          name: csd6-2021
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csp1-2021:
          title: Digital Information ('21-'22)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
              description: |-
                ### Unit Philosophy and Pedagogy


                * **Establishing a Strong Classroom Culture:** This unit is designed to be hands-on, collaborative, and exploratory. A major focus of the unit is building a positive classroom culture in which students work together, explore problems, and communicate about their thinking. Most lessons either feature physical manipulatives or a digital widget, and the bulk of lesson time should be spent with students exploring these tools together to develop an understanding of the concepts they highlight. The course intentionally does not start with programming since, in many classrooms, some students have experience with programming and others do not. Choosing to begin with digital information and the internet lets you build community in the room while exploring a topic that is likely to be accessible to all students. The supportive and inclusive classroom environment built in this unit should help set a positive tone that can be carried through the school year.


                * **Empowering "Deciders":**  An important goal of the course is not merely to teach students technical knowledge, but to put those skills to work in meaningful ways. This unit builds towards the unit project, which provides an opportunity for students to be "deciders" about the impacts of computing on modern life. Other units will emphasize empowering units as "creators."

                ### Major Assessment and Projects

                The unit project asks students to consider and debate issues that arise in modern society due to the digitizing of information. Students will analyze an article that addresses the intersection of digitizing information and current events. They will evaluate what data is being digitized and evaluate the benefits and harms caused by making this information digital. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit and its associated project help build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * DAT-1: The way a computer represents data internally is different from the way the data is interpreted and displayed for the user. Programs are used to translate data into a representation more easily understood by people.
                * IOC-1: while computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 2.1 Binary Numbers
                * 2.2 Data Compression
                * 5.5 Legal and Ethical Concerns.
          name: csp1-2021
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
        csp2-2021:
          title: The Internet ('21-'22)
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          description_short: Build the internet from the ground up using the Internet Simulator.
          description_audience: ''
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
              description: "### Unit Philosophy and Pedagogy\n\n* **Inventing the Internet with the Internet Simulator:** This unit features many different versions of the Internet Simulator, a digital widget that simulates how different features or \"layers\" of the Internet work. As students move from lesson to lesson, the version of the Internet Simulator they use will have slightly more functionality than the last. Lessons will present students with challenges that closely mimic those that the internet's original inventors needed to solve. Students will collaboratively design and test solutions to those problems to develop an intuitive understanding of how the internet works and why it was designed that way. By the end of the unit, students will have \"invented the internet\" themselves! \n\n* **Continuing to Establish a Strong Classroom Culture:** Much like the Digital Information unit that comes before it, this unit emphasizes collaborative problem solving and developing a supportive and inclusive classroom culture. \n\n### Major Assessment and Projects\n\nThe unit project asks students to design a policy position for an imaginary political candidate related to an \"Internet Dilemma.\" Students must analyze news stories about their topic to identify impacted groups, explain those groups' interests, explain technical background about the dilemma, and then recommend a policy solution that the candidate should advocate for. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and its associated project help build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the \"Standards\" page for this unit.\n\n* CSN-1: that computer systems and networks facilitate how data are transferred\n* IOC-1: and that while computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 4.1 The Internet\n* 4.2 Fault Tolerance\n* 5.2 Digital Divide"
            lessonGroup-2:
              display_name: Survey
              big_questions: Big question
              description: helllo
          name: csp2-2021
          student_description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
        csp3-2021:
          title: Intro to App Design ('21-'22)
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description_audience: ''
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
              description: "### Unit Philosophy and Pedagogy\n\n\n* **New Topics, Same Classroom Culture:** This unit is students' first experience with programming. It is designed to maintain the collaborative and inclusive classroom environment developed in the previous two units. The collaborative project, fun, unplugged activities, and the focus on experimenting should help keep your whole class working together and trying out ideas. \n\n* **Emphasizing Skills:** Since this is the first of many programming units, it emphasizes attitudes and skills that will serve your students well for the remainder of the year. The project that runs through this unit emphasizes that programming is a creative and collaborative endeavor that students can use to help others. Key practices like pair programming and debugging help normalize working with a partner, asking for help, and making mistakes. While students have a lot to learn about programming and App Lab, there is just as much emphasis on establishing these positive habits and mindsets. \n\n* **Empowering \"Creators\":** This unit empowers students to be creators with a major emphasis on making personally meaningful apps. Students have a lot to learn about programming. Still, the goal is for students to come away from this unit, seeing programming as a powerful form of personal expression that allows them to draw on their innate talents and interests to help solve problems in their community.\n\n### Major Assessment and Projects\n\nThe unit project asks students to collaborate with a classmate to design an app that can teach others about a topic of shared interest. Students practice interviewing classmates to identify the project's goals, mockup designs, collaboratively program the app and run simple user tests. The app itself must include at least three screens and demonstrate what students have learned about user interface design and event-driven programming. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the \"Standards\" page for this unit.\n\n* CRD-1: incorporating multiple perspectives through collaboration improves computing innovations as they are developed.\n* CRD-2: developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.\n* AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.\n* AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 1.1 Collaboration\n* 1.2 Program Function and Purpose\n* 1.3 Program Design and Development\n\nThe College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.\n\n* 3.a.i.\n* 3.a.ii.\n* 3.a.iii\n"
          name: csp3-2021
          student_description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
        csp4-2021:
          title: Variables, Conditionals, and Functions ('21-'22)
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description_audience: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
              description: |-
                ### Unit Philosophy and Pedagogy


                * **Intro to EIPM:** This unit is students' first experience with the Explore, Investigate, Practice, Make lesson sequence, or EIPM. This structured approach to teaching programming is covered in detail in the curriculum guide. We highly recommend watching the [accompanying video series](https://www.youtube.com/playlist?list=PLzdnOPI1iJNeqEl6MN7c2KyM3gdBSo8t3) to better understand what EIPM should look like in the classroom. When used effectively, it supports deep learning of content and helps maintain a collaborative classroom culture, even as you move into more complex programming concepts.

                * **Scaffolding Towards Independent Projects:** A major goal of this course is to empower students to design and build projects independently. The Create PT in Unit 8 offers students enormous freedom to scope and build projects, and even this unit begins scaffolding towards that goal. Individual EIPM sequences of lessons gradually prepare students for scoped, independent Make projects. The unit project has a few requirements, but students are largely free to choose the design, topic, and implementation of their ideas. As you teach the unit, look for the opportunities to scaffold the skills and knowledge students will need to creatively and independently tackle the unit project.


                ### Major Assessment and Projects

                The unit project asks students to design an app that makes a recommendation based on information from user input. Students are given a great deal of freedom to choose their topic, design their user interface, and decide how to actually program their app's behavior. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.
                * AAP-1: To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.
                * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
                * AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 1.4 Identifying and Correcting Errors
                * 3.1 Variables and Assignment
                * 3.3 Mathematical Expressions
                * 3.5 Boolean Expressions
                * 3.6 Conditionals
                * 3.7 Nested Conditionals
                * 3.15 Random Values

                The College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.

                * 3.a.i.
                * 3.a.ii.
                * 3.a.iii
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          name: csp4-2021
          student_description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
        csp5-2021:
          title: Lists, Loops, and Traversals ('21-'22)
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description_audience: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
              description: |-
                ### Unit Philosophy and Pedagogy

                * **Independent Creation and The Hackathon Project:** Much like the project in Unit 4, the "Hackathon" project in this unit is designed as an opportunity for students to creatively and independently build something with their programming skills. While students are asked to include some technical requirements in their program to ensure they demonstrate mastery of new programming concepts, they have free rein to choose the goals, design, and implementation of their project. To avoid asking students to complete a major programming project right before the Create PT, this hackathon is the most "Create-PT-like" project of the course. It is the best chance for students to practice skills like budgeting time or scoping an open-ended project. In many classrooms, if you maintain the recommended pacing of the course, this project serves as an excellent end to the first semester.

                * **Growing Comfort with EIPM:** By Unit 5, students (and teachers!) should be developing greater comfort with the flow of EIPM lessons. Students may begin to anticipate that sequences build towards an independent Make lesson or look forward to stepping away from computers to Explore. A nice feature of EIPM is that you will find strategies and modifications to each lesson type that work best for your students. Keep an eye out for how you and your students are developing comfort with EIPM and note strategies that help meet your classroom's needs.

                * **Programming with Real-world Data:** The Data Library is a new feature in App Lab for the 2020-21 school year and was designed to let students program with data from the real world. This tool aims to motivate students to build new kinds of data-powered apps that they find personally interesting. This tool also facilitates programming with lists of information since students will need to manipulate lists of data to incorporate the different data sources. Encourage students to use datasets they find personally relevant as they draw on their creative ideas for bringing data to life.



                ### Major Assessment and Projects

                The unit project asks students to spend five days as part of a "Hackathon" project that they have nearly complete independence to scope and design. Students must choose one dataset from the Data Library in AppLab to be a component of their project to demonstrate what they have learned about lists and list processing; otherwise, scoping the project is completely up to them. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * CRD-2: Developers create and innovate using an iterative design process that is user-focused, incorporating implementation/feedback cycles, which leaves ample room for experimentation and risk-taking.
                * AAP-1: To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.
                * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
                * AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that they can reuse. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and more confidently.

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 3.2 Data Abstraction
                * 3.4 Strings
                * 3.8 Iteration
                * 3.10 Lists
                * 3.16 Simulations

                The College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.

                * 3.b.i
                * 3.b.ii
                * 3.b.iii
                * 3.b.iv
                * 3.b.v
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            lessonGroup-5:
              display_name: Post-Course Survey
          name: csp5-2021
          student_description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
        csp6-2021:
          title: Algorithms ('21-'22)
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description_audience: ''
          lesson_groups:
            csp_unit6_2020:
              display_name: Algorithms
              description: |-
                ### Unit Philosophy and Pedagogy


                * **A Break from Programming:** This unit is intentionally designed as a short respite from programming. After three units and a major hackathon project, it is a great opportunity to get away from screens for a while before the final programming push that leads to the Create PT.

                * **Just Enough Math:** This unit includes some mathematical concepts which enrich students' understanding of how algorithms are analyzed, which might at first be a little intimidating to some students (and teachers!). The mathematical topics included in this unit are only those necessary to provide a solid foundation in algorithmic analysis to the depth described in the CS Principles framework. If you are a teacher with a strong mathematical background, check carefully that you do not needlessly add complexity to a unit that might already prove challenging for some students. All teachers should keep an eye out for the ways visuals, hands-on examples, and patterns in presentation style are used to ensure a consistent presentation of these mathematical topics.


                ### Major Assessment and Projects

                This unit does not conclude with a major project. Students will complete an end-of-unit assessment that is aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
                * AAP-4: There exist problems that computers cannot solve, and even when a computer can solve a problem, it may not be able to do so in a reasonable amount of time.
                * CSN-2: Parallel and distributed computing leverage multiple computers to more quickly solve complex problems or process large data sets.

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 3.9 Developing Algorithms
                * 3.11 Binary Search
                * 3.17 Algorithmic Efficiency
                * 3.18 Undecidable Problems
                * 4.3 Parallel and Distributed Computing
            lessonGroup-2:
              display_name: Post-Course Survey
          name: csp6-2021
          student_description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
        csp7-2021:
          title: Parameters, Return, and Libraries ('21-'22)
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description_audience: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
              description: "### Unit Philosophy and Pedagogy\n\n* **Learning by Building Libraries:** In the second EIPM sequence of this unit, students learn to use the Student-Create Libraries tool in App Lab. This tool allows them to build and share libraries of functions that they can use in many different projects. This tool serves many purposes besides simply teaching students about libraries. By having to write functions that other students find useful, they will need to think about common patterns or situations that they have seen in projects across the course. Students will also practice commenting their code so others can understand how it works, practice designing functions that use parameters and return.  \n\n* **Final Preparation for the Create PT:** Students learn very few new concepts in this unit; nevertheless, it can be challenging because students need to learn how to integrate the ideas of parameters and return with every other concept they have learned in this course. This unit presents a good opportunity to do a final review of every programming construct covered in the course as students prepare to demonstrate what they've learned on the Create PT.\n\n### Major Assessment and Projects\n\nThe unit project asks students to design a library of functions that they can share with classmates. Their library must contain at least two functions, and at least one of those functions must include a parameter, return, a loop, and an if-statement. This requirement ensures students practice skills they willll use in the Create PT. Using a project guide, students choose a theme for their library, build it, test it, and exchange feedback with other students. Students submit their library code, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. They will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the \"Standards\" page for this unit.\n\n* CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.\n* AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.\n* AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 3.12 Calling Procedures\n* 3.13 Developing Procedures\n* 3.14 Libraries\n\nThe College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.\n\n* 3.c.i\n* 3.c.ii\n* 3.c.iii\n* 3.c.iv\n* 3.d.i\n* 3.d.ii\n* 3.d.iii"
            csp_libraries:
              display_name: Libraries
            lessonGroup-3:
              display_name: Survey
          name: csp7-2021
          student_description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
        csp8-2021:
          title: Create PT Prep ('21-'22)
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          description_short: Practice and complete the Create Performance Task (PT).
          description_audience: ''
          lesson_groups:
            lessonGroup-2:
              display_name: Create PT
            lessonGroup-3:
              display_name: Survey
          name: csp8-2021
          student_description: 'In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.

'
        csp9-2021:
          title: Data ('21-'22)
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description_audience: ''
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
              description: "### Unit Philosophy and Pedagogy\n\n\n* **The Data Analysis Process:** This unit is built around a data analysis process that helps students break down how data is turned into new information about the world. Some lessons are designed around different steps of this process, like cleaning data or building visualizations. Other lessons focus on ways this process is applied in real-world contexts like citizen science or machine learning. The data analysis process helps provide a consistent reference point as students explore the importance of data analysis in computing. \n\n* **Exploring Data with the Data Visualizer:** The Data Visualizer is a tool built into App Lab that allows students to quickly create visualizations of the data they've added to their projects. The set of possible visualizations is intentionally limited to a few ways to change or modify the chart. This tool aims to encourage exploring the different kinds of questions that can be answered with data visualizations, with a greater emphasis on students' ability to create a variety of visualizations quickly.\n\n\n### Major Assessment and Projects\n\nStudents use the data visualizer to find and present a data story. Using what they've learned about the data analysis process, students either choose a dataset inside the data library or upload one of their own and create visualizations that find interesting patterns that may reveal new insights and knowledge. Students complete an activity guide describing their findings and the process they used in identifying them. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs please see the \"Standards\" page for this unit.\n\n* DAT-2: Programs can be used to process data, which allows users to discover information and create new knowledge.\n* IOC-1: While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences.\n\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 2.3 Extracting Information from Data\n* 2.4 Using Programs with Data\n* 5.3 Computing Bias\n* 5.4 Crowdsourcing"
            lessonGroup-2:
              display_name: Survey
          name: csp9-2021
          student_description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
        csp10-2021:
          title: Cybersecurity and Global Impacts ('21-'22)
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\n\n"
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description_audience: ''
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
              description: "### Unit Philosophy and Pedagogy\n\n* **Learning Through Full-class Simulation:** The simulation project that runs through this unit serves several important goals. It helps contextualize what students are learning by moving from abstract ideas of privacy or security to concrete potential innovations. Since the simulation is based on modernizing schools, students can consider the consequences of computing innovations in a familiar setting. By taking on an assigned role and interacting with a group of teammates who have done the same, students must consider a breadth of interests and goals beyond their own when it comes to innovating in schools. \n\n* **Ending the Year as \"Deciders\":** A major theme students engage with throughout this unit is the need to consider both sides of technological innovation. Computing technology has led to both benefits and harms to culture, economy, and society at large. Responding to important questions facing our world requires understanding technology and an ability to identify and interpret the impacts it causes. This unit is not designed to advocate for any particular point of view on the impact of technology. Still, it should empower students to adeptly see and weigh the consequences of the technology around them. While the Create PT may feel like the most significant project of this course, the Explore Curricular requirement and the questions faced in this unit are arguably more crucial. Many of the young people who take CS Principles may pursue studies or careers in which they are \"creators\" with technology, but all of them will need to be thoughtful \"deciders\" in a world profoundly shaped by computing. \n\n\n### Major Assessment and Projects\n\nStudents complete the Future School Convention simulation throughout this unit. Working in teams of roughly five people, students are assigned a role and a set of interests they'll need to investigate. They research real-world innovations that could improve schools and align with the interests of their character. Throughout the unit, they are given opportunities to refine their proposals as a team and debate the benefits and risks of different computing innovations. Eventually, their team submits an overall proposal for the Future School, and all students vote for the team and innovation they believe to be the best. Students will also complete an end-of-unit assessment aligned with the CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs please see the \"Standards\" page for this unit.\n\n* IOC-1: While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences.\n* IOC-2: The use of computing innovations may involve risks to your personal safety and identity.\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 5.1 Beneficial and Harmful Effects\n* 5.6 Safe Computing"
            lessonGroup-2:
              display_name: Survey
          name: csp10-2021
          student_description: 'In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a "school of the future" conference in which you and a team make a proposal for how best to improve school life with computing innovations.

'
        coursea-2021:
          title: Course A (2021)
          description: 'Course A offers a computer science curriculum for beginning readers, including Kindergarten students. Students will learn to program using commands like loops and events. The lessons featured in this course also teach students to meaningfully collaborate with others, investigate different problem-solving techniques, persist in the face of challenging tasks, and learn about internet safety. '
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            lessonGroup-5:
              display_name: End of Course Project
          name: coursea-2021
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2021:
          title: Course B (2021)
          description: We developed Course B with first graders in mind. While the concepts in Course B parallel those in Course A, students learn more sophisticated unplugged activities and work through a greater variety of puzzles. Students will learn the basics of programming, collaboration techniques, investigation and critical thinking skills, persistence in the face of difficulty, and internet safety. At the end of this course, students create games in the Play Lab programming environment.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
            lessonGroup-6:
              display_name: End of Course Project
              description: |2-


                ![](https://images.code.org/0c33f6c158290834562bf8a6a39769b5-flower.png)
          name: courseb-2021
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        coursec-2021:
          title: Course C (2021)
          description: We developed Course C for students in second grade. Students will create programs with sequencing, loops, and events. They will investigate problem-solving techniques and develop strategies for building positive communities both online and offline. By the end of the course, students will create interactive games that they can share.
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          name: coursec-2021
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        coursed-2021:
          title: Course D (2021)
          description: 'We created course D for students in third grade.  The course begins with a review of the concepts found in earlier courses, including loops and events. Afterward, students will develop their understanding of algorithms, nested loops, while loops, conditionals, and more. '
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-6:
              display_name: Digital Citizenship
          name: coursed-2021
          student_description: Learn about loops, conditionals, and events. Beyond coding, learn about digital citizenship.
        coursee-2021:
          title: Course E (2021)
          description: We created Course E for students in fourth grade. The course begins with an introduction to the Sprite Lab programming tool. Students will learn to make fun, interactive projects that reinforce what they’ll learn about online safety. Following these lessons, students will engage in more complex coding. Students will learn about nested loops, functions, and conditionals. By the end of the course, students will combine these concepts to solve challenging puzzles. The course ends with an open-ended project where students create a game or drawing.
          description_short: Learn the basics of sprites, nested loops, and functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Nested Loops
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_nested_loops:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_impacts:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-8:
              display_name: Removed
            lessonGroup-7:
              display_name: Impacts of Computing
          name: coursee-2021
          student_description: Start coding with algorithms, events, loops, conditionals, and functions! By the end of this course, design and create a game or drawing that you can share with your friends and family.
        coursef-2021:
          title: Course F (2021)
          description: We created Course F for students in the fifth grade. The course begins by looking at how users make choices in the apps they use. Students then learn to make a variety of Sprite Lab apps that also offer choices for the user. In the later lessons in the course, students will learn more advanced concepts, including variables and “for” loops. Students are given greater autonomy and more choices throughout this course. By the end of the course, students will have created interactive projects and artwork to share with their friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_variables:
              display_name: For Loops
            csf_data:
              display_name: Data and Simulations
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-8:
              display_name: Variables
            lessonGroup-9:
              display_name: remove
            lessonGroup-7:
              display_name: Digital Citizenship
          name: coursef-2021
          student_description: Learn to code with sprites, variables, and loops and discuss societal impacts of computing and the internet. By the end of this course, design and create a project you can share with friends and family.
        express-2021:
          title: Express Course (2021)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-9:
              display_name: Events
          name: express-2021
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        pre-express-2021:
          title: Pre-reader Express (2021)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          name: pre-express-2021
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        csf-2021-pilot:
          lesson_groups:
            ramp_up:
              display_name: Introduction
            outbreak:
              display_name: Outbreak Simulation
            introduction:
              display_name: Introduction to Sprite Lab
              description: Explore projects created with Sprite Lab. Learn the basics of coding with sprites and events!
            lessonGroup-3:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
            Sprites:
              display_name: Sprites
              description: Learn the basics of coding with sprites!
            variables:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
          name: csf-2021-pilot
          title: CS Fundamentals 2021 Pilot
          description_audience: Upper Elementary
          description_short: Learn about events, variables, and conditionals, and create your own animations, games, and simulations.
          description: "Learn to use events by programming in Sprite Lab. Investigate different design techniques and discuss societal impacts of computing. \n\n**Pilot 2021**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June, 2021 only."
          student_description: "Learn to use events by programming in Sprite Lab. Investigate different design techniques and discuss societal impacts of computing. \n\n**Pilot 2021**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June, 2021 only."
        csd4-preview-2021:
          title: CSD Unit 4 - The Design Process ('21-'22 Beta Preview)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
            csdSurvey:
              display_name: Survey
          name: csd4-preview-2021
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-preview-2021:
          title: CSD Unit 5 - Data and Society ('21-'22 Beta Preview)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd5-preview-2021
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        testtess:
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: testtess
          title: ''
          description_audience: ''
          description_short: ''
          description: |-
            I get the error only when trying to add this markdown chunk.
             ### Unit Philosophy and Pedagogy
            * **Intro to EIPM:** This unit is students' first experience with the Explore, Investigate, Practice, Make lesson sequence, or EIPM. This structured approach to teaching programming is covered in detail in the curriculum guide and we highly recommend that you watch the [accompanying video series](https://www.youtube.com/playlist?list=PLzdnOPI1iJNeqEl6MN7c2KyM3gdBSo8t3) to better understand what EIPM should look like in the classroom. When used effectively, it supports deep learning of content and helps maintain a collaborative classroom culture, even as you move into more complex programming concepts.
            * **Scaffolding Towards Independent Projects:** A major goal of this course is to empower students to design and build projects independently. The Create PT in Unit 8 offers students enormous freedoms to scope and build projects, and even this unit begins scaffolding towards that goal. Individual EIPM sequences of lessons gradually prepare students for scoped, independent Make projects. The unit project has a few requirements, but students are largely free to choose the design, topic, and implementation of their ideas. As you teach the unit, look for the opportunities to scaffold the skills and knowledge students will need to creatively and independently tackle the unit project.
            ### Major Assessment and Projects
            The unit project asks students to design an app that makes a recommendation based on input information from the user. Students are given a great deal of freedom to choose their topic, design their user interface, and decide how to actually program their app's behavior. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.
            ### AP Connections
            This unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs please see the "Standards" page for this unit.
            * CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.
            * AAP-1: To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.
            * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
            * AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.
            This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).
            * 1.4 Identifying and Correcting Errors
            * 3.1 Variables and Assignment
            * 3.3 Mathematical Expressions
            * 3.5 Boolean Expressions
            * 3.6 Conditionals
            * 3.7 Nested Conditionals
            * 3.15 Random Values
            The College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.
            * 3.a.i.
            * 3.a.ii.
            * 3.a.iii
          student_description: ''
        contagion-pilot:
          lesson_groups:
            lesson group:
              display_name: Contagion-Guided-Practice
            contagion:
              display_name: Contagion
            haiku bot:
              display_name: Haiku Bot
          name: contagion-pilot
          title: 'Contagion Simulator '
          description_audience: Grade 5
          description_short: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          student_description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
        contagion-guided-practice:
          lesson_groups:
            lesson group:
              display_name: Contagion-Guided-Practice
          name: contagion-guided-practice
          title: Contagion Guided Practice [Teacher only]
          description_audience: 5th grade
          description_short: These levels are for teachers to use when demonstrating CS and science concepts in the Contagion Simulator levels
          description: These levels are for teachers to use when demonstrating CS and science concepts in the Contagion Simulator levels
          student_description: ''
        ai-unit-pilot:
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: ai-unit-pilot
          title: AI Unit Pilot
          description_audience: ''
          description_short: Pilot for AI Unit in CSD
          description: ''
          student_description: ''
        teststandard:
          lesson_groups: {}
        csa1-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
              description: Believing in one's own software engineering identity develops confidence and perseverance. This lesson introduces the core values of software engineering and explores common perceptions students may have. Students reflect on how they already practice many of these values to discover their own software engineering identity.
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa1-pilot
          title: Object Oriented Programming
          description_audience: ''
          description_short: ''
          description: 'Believing in one''s own software engineering identity develops confidence and perseverance. This lesson introduces the core values of software engineering and explores common perceptions students may have. Students reflect on how they already practice many of these values to discover their own software engineering identity.

'
          student_description: ''
        csa2-pilot:
          lesson_groups:
            lesson group:
              display_name: Content
            lessonGroup-2:
              display_name: Show What You Know
            lessonGroup-3:
              display_name: Pilot Survey
            lessonGroup-4:
              display_name: Sandbox
          name: csa2-pilot
          title: Giving Objects State
          description_audience: ''
          description_short: ''
          description: In this unit, students create objects and define instance variables to represent attributes. Students explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. Students implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with objects, students use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.
          student_description: In this unit, you create objects and define instance variables to represent attributes. You explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. You implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with your objects, you use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.
        csa3-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa3-pilot
          title: Expanding Program Data
          description_audience: ''
          description_short: ''
          description: In this unit, students create one-dimensional arrays to store primitive values and object references. Students represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, students use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.
          student_description: In this unit, you create one-dimensional arrays to store primitive values and object references. You represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, you use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.
        csa4-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Pilot Survey
          name: csa4-pilot
          title: Expanding Program Logic
          description_audience: ''
          description_short: ''
          description: In this unit, students learn how the use of APIs and libraries can expand the functionalities of their programs. Students learn to use relational and logical operators to expand the decisions for conditionals and iteration. Students use casting operators and `Math` class methods as they evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, students develop an understanding of De Morgan's Laws and writing truth tables. Students use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.
          student_description: In this unit, you learn how the use of APIs and libraries can expand the functionalities of your programs. You learn to use relational and logical operators to expand the decisions for conditionals and iteration. You use casting operators and `Math` class methods as you evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, you develop an understanding of De Morgan's Laws and writing truth tables. You use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.
        csa5-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Pilot Survey
          name: csa5-pilot
          title: Giving Objects Organization
          description_audience: ''
          description_short: ''
          description: In this unit, students use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. Students identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. Students traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms they developed in Unit 3 to access and manipulate elements.
          student_description: In this unit, you use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. You identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. You traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms you developed in Unit 3 to access and manipulate elements.
        csa6-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa6-pilot
          title: Expanding Program Capabilities
          description_audience: ''
          description_short: ''
          description: In this unit, students use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. Students explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. Students use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, students write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, students identify and document preconditions and postconditions of objects and methods.
          student_description: In this unit, you use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. You explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. You use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, you write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, you identify and document preconditions and postconditions of objects and methods.
        csa7-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa7-pilot
          title: Expanding Software Design
          description_audience: ''
          description_short: ''
          description: In this unit, students practice software design and development using the skills and programming constructs they have learned to develop a title sequence for their favorite content creator. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. Students explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.
          student_description: In this unit, you practice software design and development using the skills and programming constructs you have learned to develop a title sequence for your favorite content creator. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your projects meet specified requirements. You explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
        csa8-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa8-pilot
          title: Giving Objects Life
          description_audience: ''
          description_short: ''
          description: In this unit, students implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. Students analyze the efficiency of searching and sorting algorithms and expand the standard algorithms they have developed throughout the course to solve more complex problems. Throughout the unit, students apply their knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. Students wrap up the unit and course considering the privacy and security of their programs and users.
          student_description: In this unit, you implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. You analyze the efficiency of searching and sorting algorithms and expand the standard algorithms you have developed throughout the course to solve more complex problems. Throughout the unit, you apply your knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. You wrap up the unit and course considering the privacy and security of their programs and users.
        csa9-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Review and Practice
            lessonGroup-3:
              display_name: Mock Exams
          name: csa9-pilot
          title: AP Exam Review and Practice
          description_audience: ''
          description_short: ''
          description: This unit prepares students for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. Students identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          student_description: This unit prepares you for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. You identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
        k5-onlinepd-2021:
          title: Teaching Computer Science Fundamentals ('21-'22)
          description: "Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! \n"
          student_description: 'Welcome to Code.org’s free online educator course for CS Fundamentals! '
          description_short: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          description_audience: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          lesson_groups:
            k5_getting_started_1:
              display_name: Introduction
            k5_basic_concepts_1:
              display_name: 'Part II:  Concepts in Courses A - F'
            k5_diving_deeper_1:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps_1:
              display_name: 'Part III:  Next Steps'
            Introduction:
              display_name: Introduction
            Implementing and Teaching CS:
              display_name: 'Part I:  Teaching and Implementing Computer Science'
          name: k5-onlinepd-2021
        haikubot-pilot:
          lesson_groups:
            haiku bot:
              display_name: Haiku Bot
            poem bot:
              display_name: Programming Poem Bot
            rampup:
              display_name: Programming Ramp Up for Poem Bot
              description: Learn the basics of coding with sprites and text!
            write a haikut:
              display_name: Write a Haiku
            plan your poem:
              display_name: Plan Your Haiku Poem
            poetry circle:
              display_name: Poetry Circle
            Lesson 1:
              display_name: Lesson 1
              description: Learn the basics of coding with sprites and text!
            Lesson 2:
              display_name: Lesson 2
            Lesson 3:
              display_name: Lesson 3
            Lesson 4:
              display_name: Lesson 4
            Lesson 5:
              display_name: Lesson 5
            Peom Bot:
              display_name: Poem Bot
          name: haikubot-pilot
          title: Poem Bot (Pilot)
          description_audience: Grade 4, Grade 5
          description_short: 'In this module, students will create a haiku poem generator in a Mad Libs style using what they know about the elements of poetry, diction, and coding with variables. '
          description: "**Overview:** \nIn this module, students will create a Poem Bot that recites different versions of a haiku poem they write. First, students will study the structure and elements of a haiku poem by reading poems together, decomposing a haiku poem into its parts, and writing a haiku. Then, students will learn how computers can take in user input and store it in its memory and will build a Poem Bot. Once they’ve built their Poem Bot, they will test their programs with their classmates and complete the project by sharing their user-generated poems in a poetry circle."
          student_description: Use Sprite Lab to make a Haiku Bot!
        allthemigratedthings:
          lesson_groups:
            lessonGroup-2:
              display_name: Lesson Group 1
              big_questions: |-
                * Who?
                * What?
                * Where?
              description: Lesson group 1 description
            lessonGroup-3:
              display_name: Lesson Group 2
            lessonGroup-4:
              display_name: UI/Eyes Test Content
              description: All lessons which are examined by automated UI or Eyes tests.
          name: allthemigratedthings
          title: All the Migrated Things
          description_audience: ''
          description_short: ''
          description: Teacher overview of the unit.
          student_description: Student overview of the unit.
        fancygeometry-pilot:
          lesson_groups:
            Fancy Geometry:
              display_name: Fancy Geometry
          name: fancygeometry-pilot
          title: Fancy Geometry
          description_audience: Grade 3, Grade 4
          description_short: " In this module, students will explore different geometric shapes by examining the relationships between angles, sides, and lengths. They will also compare the different affordances of using different tools to complete an artistic task."
          description: "**Overview**\nThe Artist tool is an especially explorative and creative platform to build and decompose intricate geometric patterns. Fourth grade math standards focus on developing student proficiency in geometry, encouraging students to discover the relationships between angles, sides, and lengths of different shapes. With the Artist, teachers can help make these geometric relationships come to life. "
          student_description: ''
        ai-classroom-test:
          lesson_groups: {}
          name: ai-classroom-test
          title: AI Lab Classroom Test
          description_audience: ''
          description_short: Let's Test AI Tools!
          description: Let's Test AI Tools!
          student_description: Let's Test AI Tools!
        poembot-springforum21:
          lesson_groups:
            lesson group:
              display_name: Poem Bot - Spring Forum 2021
          name: poembot-springforum21
          title: Poem Bot for Spring Forum 2021
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        pl-playground:
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: pl-playground
          title: PL Playground
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        outbreakmodule:
          lesson_groups:
            Outbreak Module:
              display_name: Outbreak Module
          name: outbreakmodule
          title: Outbreak Module_V2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csp-post-survey-2020:
          lesson_groups:
            cspSurvey2020:
              display_name: Survey
          name: csp-post-survey-2020
          title: CSP Student Post-Course Survey ('20-'21)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          student_description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
        aiml-2021:
          name: aiml-2021
          title: AI and Machine Learning Module
          description_audience: ''
          description_short: ''
          description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. [Click Here](https://docs.google.com/document/d/1SkMCN4Eid3-mGoRUQkurQGJqoOJ9PydfB7uGE0xZyFA/preview) to learn more about recommendations for introducing students to App Lab before this unit.

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](http://studio.code.org/s/self-paced-pl-csd5-2022). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **For Teachers:** [Click here](https://studio.code.org/s/aiml-2021?viewAs=Teacher) to see lesson plans and teacher resources for this unit.
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
              description: Students learn the basics of machine learning and use a tool called AI Lab to create machine learning models that can be used in App Lab. The unit starts with an overview of machine learning and how computers can use patterns in data to make decisions and predictions. Then, students learn how to use AI Lab to train models from tabular data while exploring issues of bias. Lessons follow a repeating "unplugged - AI Lab - App Lab" pattern so students are continually exposed to the concepts and tools of machine learning. The chapter culminates in a project where students select from a set of real-world datasets to train a machine learning model and create an app.
              big_questions: |-
                - How does machine learning find patterns in data to make decisions?
                - How can we avoid bias when training a machine learning model?
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
              big_questions: "- How can machine learning be used to solve problems in our community?"
              description: This chapter prepares students to be machine learning scientists to create an app that addresses an issue in their community. Students follow along with a fictional group of students as they define an issue, develop a survey to collect data, analyze their data in AI Lab, create a model card, and create an app to solve their problem. Then, in the final project, students repeat these same steps with an issue they care about in their community.
            lessonGroup-4:
              display_name: Survey
        csd7-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
              big_questions: |-
                - How does machine learning find patterns in data to make decisions?
                - How can we avoid bias when training a machine learning model?
              description: Students learn the basics of machine learning and use a tool called AI Lab to create machine learning models that can be used in App Lab. The unit starts with an overview of machine learning and how computers can use patterns in data to make decisions and predictions. Then, students learn how to use AI Lab to train models from tabular data while exploring issues of bias. Lessons follow a repeating "unplugged - AI Lab - App Lab" pattern so students are continually exposed to the concepts and tools of machine learning. The chapter culminates in a project where students select from a set of real-world datasets to train a machine learning model and create an app.
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
              big_questions: "- How can machine learning be used to solve problems in our community?"
              description: This chapter prepares students to be machine learning scientists to create an app that addresses an issue in their community. Students follow along with a fictional group of students as they define an issue, develop a survey to collect data, analyze their data in AI Lab, create a model card, and create an app to solve their problem. Then, in the final project, students repeat these same steps with an issue they care about in their community.
            lessonGroup-4:
              display_name: Survey
          name: csd7-2021
          title: AI and Machine Learning
          description_audience: ''
          description_short: ''
          description: |-
            Unit 7 is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **Implementation guidance for Unit 7**

            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. [Click Here](https://docs.google.com/document/d/1SkMCN4Eid3-mGoRUQkurQGJqoOJ9PydfB7uGE0xZyFA/preview) to learn more about recommendations for introducing students to App Lab before this unit.
            - This is an optional unit that can be used in place of another CSD unit - see the [Implementation Guide](https://docs.google.com/document/d/1SkMCN4Eid3-mGoRUQkurQGJqoOJ9PydfB7uGE0xZyFA/preview) for more information
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) for more information about this unit

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](https://studio.code.org/s/self-paced-pl-csd5-2021). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: Unit 7 is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop your own machine learning projects around real-world data. The unit culminates with designing your own machine learning app to solve a personally relevant problem.
        kodea-pd-2021:
          title: CSF Online PD - Kodea
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          name: kodea-pd-2021
        vpl-csd-2021:
          title: CS Discoveries Virtual Professional Learning 2021 - 22
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            CSD_Module 1:
              display_name: Module 1
            CSD_Module 2:
              display_name: Module 2
            CSD_Module 3:
              display_name: Module 3
            CSD_Module 4:
              display_name: Module 4
            CSD_Module 5:
              display_name: Module 5
            CSD_Module 6:
              display_name: Module 6
            CSD_Module 7:
              display_name: Module 7
            CSD_Module 8:
              display_name: Module 8
            lesson group:
              display_name: lesson group display name
          name: vpl-csd-2021
        vpl-csp-2021:
          title: CS Principles Virtual Professional Learning 21 - 22
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: vpl-csp-2021
        self-paced-pl-csd1-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Welcome
            lessonGroup-3:
              display_name: Navigating Code.org
            lessonGroup-5:
              display_name: Preparing to Teach CS Discoveries
          name: self-paced-pl-csd1-2021
          title: 'Module 1: Welcome '
          description_audience: ''
          description_short: ''
          description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
        self-paced-pl-csd2-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Navigating Code.org
            lessonGroup-3:
              display_name: Navigating Lesson Plans and Resources
            lessonGroup-4:
              display_name: Navigating Support
          name: self-paced-pl-csd2-2021
          title: 'Module 2: Navigating Code.org'
          description_audience: ''
          description_short: ''
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes\n\n\n\n\n"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
        self-paced-pl-csd3-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Overview of CS Discoveries
          name: self-paced-pl-csd3-2021
          title: 'Module 3: Overview of CS Discoveries'
          description_audience: ''
          description_short: ''
          description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
          student_description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
        self-paced-pl-csd4-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching and learning CS Discoveries
          name: self-paced-pl-csd4-2021
          title: 'Module 4: Teaching and learning CS Discoveries'
          description_audience: ''
          description_short: ''
          description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
          student_description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
        self-paced-pl-csd5-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Artificial Intelligence and Machine Learning
              description: Students learn the problem-solving process, the input-output-store-process model of a computer, and how computers help humans solve problems. Students end the unit by proposing their own app to solve a problem.
            lessonGroup-3:
              display_name: 'Preparing to Teach Unit 2 '
              description: 'Students learn to create websites using HTML and CSS inside Code.org''s Web Lab environment. Throughout the unit, students consider questions of privacy and ownership on the Internet as they develop their own personal websites.  '
            lessonGroup-4:
              display_name: Preparing to Teach Unit 3
              description: 'Students learn fundamental programming constructs and practices in the JavaScript programming language while developing animations and games in Code.org''s Game Lab environment. Students end the unit by designing their own animations and games. '
            lessonGroup-5:
              display_name: Preparing to Teach Unit 4
              description: 'Students apply the problem solving process to the problems of others, learning to empathize with the needs of a user and design solutions to address those needs. During the second half of the unit, students form teams to prototype an app of their own design, first on paper, and eventually in Code.org''s App Lab environment. '
            lessonGroup-6:
              display_name: Preparing to Teach Unit 5
              description: Students explore different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second half of the unit, students learn how collections of data are used to solve problems and how computers help to automate the steps of this process.
            lessonGroup-7:
              display_name: Preparing to Teach Unit 6
              description: 'Students use Code.org''s App Lab environment, in conjunction with the Adafruit Circuit Playground, to explore the relationship between hardware and software. Throughout the unit, students develop prototypes that mirror existing innovative computing platforms, before ultimately designing and prototyping one of their own. '
            lessonGroup-8:
              display_name: Preparing to Teach Artificial Intelligence and Machine Learning
              description: 'Students learn how machine learning can be used to solve problems by preparing data, training a machine model, the testing the model for accuracy and bias. Students use Code.org''s AI Lab environment to train machine learning models, then import their models into App Lab to create apps that solve problems. '
            lessonGroup-9:
              display_name: Preparing to Teach Unit 1
          name: self-paced-pl-csd5-2021
          title: Teaching AI and machine learning
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects. \n* Make a plan for implementing the unit with your students.\n\n**Suggested Time:** 120 minutes\n"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Train a machine learning model using AI Lab.\n* Engage with machine learning apps. \n* Consider real-world implications of AI and machine learning. \n* Explore end of chapter projects.\n\n**Suggested Time:** 120 minutes"
        self-paced-pl-csd6-2021:
          lesson_groups:
            lessonGroup-2:
              display_name: Preparing to Teach Artificial Intelligence and Machine Learning
            lessonGroup-3:
              display_name: 'Preparing to Teach Unit 2: Web Development'
            lessonGroup-4:
              display_name: 'Preparing to Teach Unit 3: Interactive Animations and Games'
            lessonGroup-5:
              display_name: 'Preparing to Teach Unit 4: The Design Process'
            lessonGroup-6:
              display_name: 'Preparing to Teach Unit 5: Data and Society'
            lessonGroup-7:
              display_name: 'Preparing to Teach Unit 6: Physical Computing'
            lessonGroup-8:
              display_name: 'Preparing to Teach Unit 7: AI and Machine Learning'
          name: self-paced-pl-csd6-2021
          title: 'Teaching AI and machine learning '
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Train a machine learning model using AI Lab.\n* Engage with machine learning apps. \n* Consider real-world implications of AI and machine learning. \n* Explore end of chapter projects.\n\n**Suggested Time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare for teaching Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Train a machine learning model using AI Lab.\n* Engage with machine learning apps. \n* Consider real-world implications of AI and machine learning. \n* Explore end of chapter projects.\n\n**Suggested Time:** 120 minutes"
        self-paced-pl-csd7-2021:
          lesson_groups: {}
          name: self-paced-pl-csd7-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csd8-2021:
          lesson_groups: {}
          name: self-paced-pl-csd8-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp1-2021:
          lesson_groups: {}
          name: self-paced-pl-csp1-2021
          title: 'Module 1: Welcome'
          description_audience: ''
          description_short: ''
          description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
        self-paced-pl-csp2-2021:
          lesson_groups: {}
          name: self-paced-pl-csp2-2021
          title: 'Module 2: Navigating Code.org'
          description_audience: ''
          description_short: ''
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
        self-paced-pl-csp3-2021:
          lesson_groups: {}
          name: self-paced-pl-csp3-2021
          title: Overview of CS Principles
          description_audience: ''
          description_short: ''
          description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
          student_description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
        self-paced-pl-csp4-2021:
          lesson_groups: {}
          name: self-paced-pl-csp4-2021
          title: Teaching and learning CS Principles
          description_audience: ''
          description_short: ''
          description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Principles course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Principles classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Principles classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Principles course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.

            **Suggested Time**: 50 minutes
          student_description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Discoveries classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Discoveries course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.

            **Suggested Time**: 50 minutes
        self-paced-pl-csp5-2021:
          lesson_groups: {}
          name: self-paced-pl-csp5-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp6-2021:
          lesson_groups: {}
          name: self-paced-pl-csp6-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp7-2021:
          lesson_groups: {}
          name: self-paced-pl-csp7-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp8-2021:
          lesson_groups: {}
          name: self-paced-pl-csp8-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp9-2021:
          lesson_groups: {}
          name: self-paced-pl-csp9-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp10-2021:
          lesson_groups: {}
          name: self-paced-pl-csp10-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp11-2021:
          lesson_groups: {}
          name: self-paced-pl-csp11-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poster:
          lesson_groups:
            about me_ip:
              display_name: 'Interactive Poster: Self-Expression'
              description: 'Version 1 of Interactive Poster: Self-Expression'
          name: poster
          title: 'V1_Interactive Poster: Self-Expression'
          description_audience: ''
          description_short: '(Need to change name) Interactive Poster project in an "About Me" format for HoC - V1 '
          description: ''
        poster-draft:
          lesson_groups: {}
          name: poster-draft
          title: Story Board (V1 - Control)
          description_audience: ''
          description_short: Story Board (V1)
          description: ''
          student_description: '(Need to change name) Interactive Poster project in an "About Me" format for HoC - V1 '
        poembot:
          lesson_groups: {}
          name: poembot
          title: Poembot
          description_audience: ''
          description_short: ''
          description: ''
        outbreak-module:
          lesson_groups: {}
          name: outbreak-module
          title: Outbreak
          description_audience: ''
          description_short: ''
          description: ''
        csa1-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa1-exemplars
          title: Unit 1 - Object Oriented Programming [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
        csa2-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa2-exemplars
          title: Unit 2 - Giving Objects State [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
        csa-videos:
          lesson_groups:
            lessonGroup-3:
              display_name: Resources
            lessonGroup-2:
              display_name: Unit 1
            lessonGroup-4:
              display_name: Unit 2
            lessonGroup-5:
              display_name: Unit 3
            lessonGroup-6:
              display_name: Unit 4
            lessonGroup-7:
              display_name: Unit 5
          name: csa-videos
          title: CSA Videos
          description_audience: ''
          description_short: ''
          description: ''
        csa3-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa3-exemplars
          title: Unit 3 - Expanding Program Data [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
        ai-lab:
          lesson_groups: {}
          name: ai-lab
          title: AI Lab
          description_audience: ''
          description_short: ''
          description: Use these levels to explore AI Lab and use in other lessons or activities.
          student_description: Use these levels to explore AI Lab and use in other lessons or activities. You will need to create a Code.org account and sign-in in order to use these tools.
        poster-experiment:
          lesson_groups: {}
          name: poster-experiment
          title: Story Board (V1 - Experiment)
          description_audience: ''
          description_short: ''
          description: ''
        tesspltest:
          lesson_groups: {}
          name: tesspltest
          title: Testing PL Course Unit 1
          description_audience: ''
          description_short: ''
          description: ''
        tesspl2:
          lesson_groups: {}
          name: tesspl2
          title: Tess PL 2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        sb-pt-cont:
          lesson_groups: {}
          name: sb-pt-cont
          title: Story Board (playtest control)
          description_audience: ''
          description_short: ''
          description: ''
        sb-pt-exp:
          lesson_groups: {}
          name: sb-pt-exp
          title: Story Board (playtest experiment)
          description_audience: ''
          description_short: ''
          description: ''
        dc-standalone:
          lesson_groups: {}
          name: dc-standalone
          title: Story Board (DC Standalone)
          description_audience: ''
          description_short: ''
          description: ''
        storyboard-playtest-control:
          lesson_groups: {}
        sb-chardev-v1:
          lesson_groups: {}
          name: sb-chardev-v1
          title: Story Board Character Development
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csp-mod4:
          lesson_groups:
            lessonGroup-2:
              display_name: Stage 1
            lessonGroup-3:
              display_name: Stage 2
          name: dlp21-csp-mod4
          title: 2021 CS Principles Deeper Learning Module 4  for Workshop 4
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csp-mod1:
          lesson_groups: {}
          name: dlp21-csp-mod1
          title: 2021 CS Principles Deeper Learning Module 1 for Workshop 1
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd:
          lesson_groups:
            lessonGroup-2:
              display_name: Module 1
              description: test
            lessonGroup-3:
              display_name: Module 2
            lessonGroup-4:
              display_name: Module 3
            lessonGroup-5:
              display_name: Module 4
          name: dlp21-csd
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd-mod1:
          lesson_groups: {}
          name: dlp21-csd-mod1
          title: 2021 CS Discoveries Deeper Learning Module 1 for Workshop 1
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd-mod2:
          lesson_groups: {}
          name: dlp21-csd-mod2
          title: 2021 CS Discoveries Deeper Learning Module 2 for Workshop 2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csd-mod3:
          lesson_groups: {}
          name: dlp21-csd-mod3
          title: 2021 CS Discoveries Deeper Learning Module 3 for Workshop 3
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csd-mod4:
          lesson_groups: {}
          name: dlp21-csd-mod4
          title: 2021 CS Discoveries Deeper Learning Module 4 for Workshop 4
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csp-mod2:
          lesson_groups: {}
          name: dlp21-csp-mod2
          title: 2021 CS Principles Deeper Learning Module 2 for Workshop 2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csp-mod3:
          lesson_groups: {}
          name: dlp21-csp-mod3
          title: 2021 CS Principles Deeper Learning Module 3 for Workshop 3
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-overview:
          lesson_groups: {}
          name: dlp21-overview
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd-overview:
          lesson_groups: {}
          name: dlp21-csd-overview
          title: CS Discoveries Deeper Learning Overview
          description_audience: ''
          description_short: ''
          description: Welcome to the 2021 Deeper Learning program for onboarding CS Discoveries facilitators.
        dlp21-csp-overview:
          lesson_groups: {}
          name: dlp21-csp-overview
          title: 2021 CS Principles Deeper Learning Overview
          description_audience: ''
          description_short: ''
          description: "###Welcome to the 2021 Deeper Learning program for onboarding CS Principles facilitators."
        csa-u6-dev:
          lesson_groups:
            lessonGroup-2:
              display_name: Lessons
            lessonGroup-3:
              display_name: Project
            lessonGroup-4:
              display_name: Demos and Resources
          name: csa-u6-dev
          title: CSA Unit 6 Development
          description_audience: ''
          description_short: ''
          description: ''
        hello-world-draft:
          lesson_groups: {}
          name: hello-world-draft
          title: '"Hello, World!"'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-self-paced-pl:
          lesson_groups:
            lessonGroup-2:
              display_name: Navigating Code.org
          title: Navigating Code.org for CSA Pilot Teachers
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CSA. \n\n**You will learn how to:**\n\n* Navigate the Code.org website and teacher tools.\n* Locate and use course lesson plans and teacher resources. \n\n**Suggested time:** 1 hour\n\n\n\n\n"
          student_description: ''
          description_short: ''
          description_audience: ''
          name: csa-self-paced-pl
        csa1-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Object Oriented Programming
          description: 'Believing in one''s own software engineering identity develops confidence and perseverance. This lesson introduces the core values of software engineering and explores common perceptions students may have. Students reflect on how they already practice many of these values to discover their own software engineering identity.

'
          student_description: ''
          description_short: ''
          description_audience: ''
          name: csa1-pilot-facilitator
        csa2-pilot-facilitator:
          lesson_groups:
            lesson group:
              display_name: Content
            lessonGroup-2:
              display_name: Show What You Know
            lessonGroup-3:
              display_name: Pilot Survey
            lessonGroup-4:
              display_name: Sandbox
          title: Giving Objects State
          description: |-
            In this unit, students create objects and define instance variables to represent attributes. Students explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. Students implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with objects, students use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa2-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 1
            * Personal Progress Check 5
            * Personal Progress Check 9

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you create objects and define instance variables to represent attributes. You explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. You implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with your objects, you use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.
          description_short: ''
          description_audience: ''
          name: csa2-pilot-facilitator
        csa3-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Expanding Program Data
          description: |-
            In this unit, students create one-dimensional arrays to store primitive values and object references. Students represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, students use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa3-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 4
            * Personal Progress Check 6

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you create one-dimensional arrays to store primitive values and object references. You represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, you use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.
          description_short: ''
          description_audience: ''
          name: csa3-pilot-facilitator
        csa4-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Unit 4 Pilot Survey
          title: Expanding Program Logic
          description: |-
            In this unit, students learn how the use of APIs and libraries can expand the functionalities of their programs. Students learn to use relational and logical operators to expand the decisions for conditionals and iteration. Students use casting operators and `Math` class methods as they evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, students develop an understanding of De Morgan's Laws and writing truth tables. Students use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa4-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 3

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you learn how the use of APIs and libraries can expand the functionalities of your programs. You learn to use relational and logical operators to expand the decisions for conditionals and iteration. You use casting operators and `Math` class methods as you evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, you develop an understanding of De Morgan's Laws and writing truth tables. You use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.
          description_short: ''
          description_audience: ''
          name: csa4-pilot-facilitator
        csa5-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Pilot Survey
          title: Giving Objects Organization
          description: |-
            In this unit, students use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. Students identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. Students traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms they developed in Unit 3 to access and manipulate elements.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa5-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 8

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. You identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. You traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms you developed in Unit 3 to access and manipulate elements.
          description_short: ''
          description_audience: ''
          name: csa5-pilot-facilitator
        poetry-hoc:
          lesson_groups: {}
          name: poetry-hoc
          title: Poetry HoC
          description_audience: ''
          description_short: 'Hour of Code Activity - V2 '
          description: ''
          student_description: ''
        csdu6-playground:
          lesson_groups:
            lessonGroup-3:
              display_name: Templates
            lessonGroup-2:
              display_name: Chapter 1
            lessonGroup-4:
              display_name: Chapter 2
          name: csdu6-playground
          title: CSD Unit 6 Playground
          description_audience: ''
          description_short: CSD U6 Playground. See Dan Schneider for questions
          description: ''
          student_description: CSD U6 Playground. See Dan Schneider for questions
        hello-world-food:
          lesson_groups: {}
          name: hello-world-food
          title: 'Hello World: Food'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-u7-dev:
          lesson_groups:
            lessonGroup-2:
              display_name: Lessons
            lessonGroup-3:
              display_name: Project
            lessonGroup-4:
              display_name: Demos and Resources
          name: csa-u7-dev
          title: CSA Unit 7 Development
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        tesstest921:
          lesson_groups: {}
          name: tesstest921
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-animals:
          lesson_groups: {}
          name: hello-world-animals
          title: 'Hello World: Animals'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-emoji:
          lesson_groups: {}
          name: hello-world-emoji
          title: 'Hello World: Emoji'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-retro:
          lesson_groups: {}
          name: hello-world-retro
          title: 'Hello World: Retro'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-batman:
          lesson_groups: {}
          name: hello-world-batman
          title: Hello World
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa4-exemplars:
          lesson_groups:
            lesson group:
              display_name: Content
            content:
              display_name: Content
            show_what_you_know:
              display_name: Show What You Know
            lesson_group:
              display_name: Content
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa4-exemplars
          title: Unit 4 - Expanding Program Logic [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        ai-ethics:
          lesson_groups: {}
          name: ai-ethics
          title: Our AI Code of Ethics
          description_audience: grades 6-12
          description_short: 'In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. '
          description: In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. Afterward, each group develops at least one solution-oriented principle that addresses their chosen area. These principles are then assembled into a class-wide “Our AI Code of Ethics” resource (e.g. a slide presentation, document, or webpage) for AI creators and legislators everywhere.
          student_description: 'Conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of your choice. '
        dance-unplugged:
          lesson_groups: {}
          name: dance-unplugged
          title: Hour of Code - Dance Party - Unplugged
          description_audience: grades K-12
          description_short: 'Learners of all ages get an introductory experience with coding and computer science in a safe, supportive environment and learn to think about controlling actions using events. '
          description: Students will learn that events are a useful way to control when an action happens, and can even be used to make make multiple things act in sync. In programming, you can use events to respond to a user controlling it (like pressing buttons or clicking the mouse). Events can make your program more interesting and interactive.
          student_description: Learn to think about controlling actions using events. Events are widely used in programming and should be easily recognizable after this lesson.
        csc-things:
          lesson_groups: {}
          name: csc-things
          title: 'CSC Brain Dump '
          description_audience: ''
          description_short: ''
          description: 'These are just a work in progress :) '
          student_description: ''
        poetry-hoc2:
          lesson_groups: {}
          name: poetry-hoc2
          title: Poetry HoC v2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poetry-hoc3:
          lesson_groups: {}
          name: poetry-hoc3
          title: Poetry HoC v3
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        spritelab-effects-challenge:
          lesson_groups: {}
          name: spritelab-effects-challenge
          title: Sprite Effect Challenge
          description_audience: Intermediate/advanced users of Sprite Lab
          description_short: Take the challenge to create your own sprite effect using Sprite Lab!
          description: ''
          student_description: ''
        csa-u8-dev:
          lesson_groups:
            lessonGroup-2:
              display_name: Demos and Resources
          name: csa-u8-dev
          title: CSA Unit 8 Development
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poem-art:
          lesson_groups: {}
          name: poem-art
          title: Poem Art
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poetry:
          lesson_groups: {}
          name: poetry
          title: Computer Science and Poetry
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        spelling-bee:
          lesson_groups: {}
          name: spelling-bee
          title: Spelling Bee
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        outbreak-csc:
          lesson_groups: {}
          name: outbreak-csc
          title: Outbreak
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        explore-data-1:
          lesson_groups: {}
          name: explore-data-1
          title: Exploring Box Plots and Histograms
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        counting-csc:
          lesson_groups: {}
          name: counting-csc
          title: Counting with Laurel
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa5-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa5-exemplars
          title: Unit 5 - Giving Objects Organization [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-examples-21:
          lesson_groups: {}
          name: csa-examples-21
          title: CSA Unit Project Examples [2021-2022]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd-post-survey-2021:
          lesson_groups: {}
          name: csd-post-survey-2021
          title: CS Discoveries Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Discoveries Post-Course Survey. This unit can be assigned after students complete their final unit in CS Discoveries.
          student_description: This unit contains a survey for when your class is finished with the units in CS Discoveries. Your teacher will tell you when it's time to take this survey.
        csa-pl-test:
          lesson_groups: {}
          name: csa-pl-test
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-pl-module-1-test:
          lesson_groups: {}
          name: csa-pl-module-1-test
          title: Orientation to Code.org and CSA
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-pl-module-2-test:
          lesson_groups: {}
          name: csa-pl-module-2-test
          title: Navigating Code.org’s tools
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-pl-module-3-test:
          lesson_groups: {}
          name: csa-pl-module-3-test
          title: Support with text-based programming
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa6-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Expanding Program Capabilities
          description: |-
            In this unit, students use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. Students explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. Students use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, students write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, students identify and document preconditions and postconditions of objects and methods.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa6-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 2
            * Personal Progress Check 7

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. You explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. You use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, you write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, you identify and document preconditions and postconditions of objects and methods.
          description_short: ''
          description_audience: ''
          name: csa6-pilot-facilitator
        ai-ethics-2021:
          title: Our AI Code of Ethics
          description: In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. Afterward, each group develops at least one solution-oriented principle that addresses their chosen area. These principles are then assembled into a class-wide “Our AI Code of Ethics” resource (e.g. a slide presentation, document, or webpage) for AI creators and legislators everywhere.
          student_description: 'Conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of your choice. '
          description_short: 'In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. '
          description_audience: grades 6-12
          lesson_groups: {}
          name: ai-ethics-2021
        poem-art-2021:
          title: Poem Art
          description: "This lesson can be completed as a 1-hour standalone lesson. There is also an option to use this lesson as the first lesson of the multi-lesson module called [Coding with Poetry](https://studio.code.org/s/poetry). \n\nThe Coding with Poetry is part of Code.org’s [CS Connections](code.org/educate/csc) curriculum, which is meant to integrate CS into other subject areas like math, ELA, and science with alignment to CCSS, NGSS, and CSTA standards. "
          student_description: ''
          description_short: 'This lesson can be completed as a 1-hour standalone lesson. There is also an option to use this lesson as the first lesson of the multi-lesson module called Coding with Poetry. '
          description_audience: ''
          lesson_groups: {}
          name: poem-art-2021
        poetry-2021:
          title: Coding with Poetry
          description: "This module is designed to ensure students have a shareable app by the end of each lesson, so each lesson is a potential stopping point. If your class finishes the entire 7-part module, students will write their own poems, investigate word choice, learn how to use prompts and variables, learn how to code conditional statements, and create a poem generator app to share with friends. \n\nThe Coding with Poetry is part of Code.org’s [CS Connections](https://www.code.org/educate/csc) curriculum, which is meant to integrate CS into other subject areas like math, ELA, and science with alignment to CCSS, NGSS, and CSTA standards. \n\n**First time teaching with Code.org?** To get started, watch these videos:\n* [Basic Features of Code.org](https://www.youtube.com/watch?v=lYZq1HVTAIY) \n* [Creating a Class Section](https://youtu.be/4Wugxc80fNU)\n* [The Student Experience](https://youtu.be/wzz3jJZoj20)\n* [Progress, Feedack, and Assessment](https://youtu.be/c0pGfCpd6MI)"
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: poetry-2021
        hello-world-food-2021:
          title: 'Hello World: Food'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-food-2021
        hello-world-emoji-2021:
          title: 'Hello World: Emoji'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-emoji-2021
        hello-world-animals-2021:
          title: 'Hello World: Animals'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-animals-2021
        hello-world-retro-2021:
          title: 'Hello World: Retro'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-retro-2021
        spelling-bee-2021:
          title: Spelling With Bee
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: spelling-bee-2021
        explore-data-1-2021:
          title: Data Visualization
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: explore-data-1-2021
        counting-csc-2021:
          title: Counting with Laurel
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: counting-csc-2021
        hello-world-gabrielle-validation:
          lesson_groups: {}
          name: hello-world-gabrielle-validation
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa6-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa6-exemplars
          title: Unit 6 - Expanding Program Capabilities [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        2022drafting:
          lesson_groups:
            lessonGroup-2:
              display_name: Variables, Pt 2
            lessonGroup-3:
              display_name: Modified Lessons
            lessonGroup-4:
              display_name: Toolboxes, etc.
            lessonGroup-5:
              display_name: Course F Variables (Deprecated)
            lessonGroup-6:
              display_name: Course F For Loops (Deprecated)
            lessonGroup-7:
              display_name: Course E Sprites (Deprecated)
            lessonGroup-8:
              display_name: Hour of Code
          name: 2022drafting
          title: Planning Script for CSF 2022
          description_audience: ''
          description_short: Internal
          description: ''
          student_description: ''
        csa7-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa7-exemplars
          title: Unit 7 - Expanding Software Design [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csf-2022-pilot:
          lesson_groups:
            lessonGroup-2:
              display_name: Sprites
            lessonGroup-3:
              display_name: Variables
            lessonGroup-4:
              display_name: End of Course Project
          name: csf-2022-pilot
          title: Course F 2022 Pilot
          description_audience: Fifth grade
          description_short: 'Learn about sprites and variables by programming in Sprite Lab. '
          description: "Learn about sprites and variables by programming in Sprite Lab.  \n\n**Pilot 2022**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June 2022 only. Note that the final version of Course F (2022) will include additional lessons and may have other differences. CS Fundamentals (2022) will launch this summer.\n\nWe need your feedback, especially on the lessons marked **[New]**. If you are eager to start the new lessons, you can give students a basic introduction to Sprite Lab using our  [Hello World](https://code.org/helloworld) Hour of Code tutorial."
          student_description: "Learn about sprites and variables by programming in Sprite Lab. \n\n**Pilot 2022**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June 2022 only."
        csd6-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1
            lessonGroup-3:
              display_name: Chapter 2
          name: csd6-pilot-2022
          title: Physical Computing Pilot (2022)
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa8-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa8-exemplars
          title: Unit 8 - Giving Objects Life [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        alltheselfpacedplthings:
          lesson_groups: {}
          name: alltheselfpacedplthings
          title: All the Self Paced PL Things
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa7-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Expanding Software Design
          description: In this unit, students practice software design and development using the skills and programming constructs they have learned to develop a title sequence for their favorite content creator. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. Students explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.
          student_description: In this unit, you practice software design and development using the skills and programming constructs you have learned to develop a title sequence for your favorite content creator. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your projects meet specified requirements. You explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
          description_short: ''
          description_audience: ''
          name: csa7-pilot-facilitator
        csa8-pilot-facilitator:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Giving Objects Life
          description: |-
            In this unit, students implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. Students analyze the efficiency of searching and sorting algorithms and expand the standard algorithms they have developed throughout the course to solve more complex problems. Throughout the unit, students apply their knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. Students wrap up the unit and course considering the privacy and security of their programs and users.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa8-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 10

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. You analyze the efficiency of searching and sorting algorithms and expand the standard algorithms you have developed throughout the course to solve more complex problems. Throughout the unit, you apply your knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. You wrap up the unit and course considering the privacy and security of their programs and users.
          description_short: ''
          description_audience: ''
          name: csa8-pilot-facilitator
        csa9-pilot-facilitator:
          title: AP Exam Review and Practice
          description: This unit prepares students for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. Students identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          student_description: This unit prepares you for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. You identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          description_short: ''
          description_audience: ''
          lesson_groups:
            lessonGroup-2:
              display_name: Review and Practice
            lessonGroup-3:
              display_name: Mock Exams
          name: csa9-pilot-facilitator
        coursea-2022:
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            lessonGroup-5:
              display_name: End of Course Project
          title: Course A (2022)
          description: 'Course A offers a computer science curriculum for beginning readers, including Kindergarten students. Students will learn to program using commands like loops and events. The lessons featured in this course also teach students to meaningfully collaborate with others, investigate different problem-solving techniques, persist in the face of challenging tasks, and learn about internet safety. '
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          name: coursea-2022
          lessons: {}
        express-2022:
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_sprites:
              display_name: Sprites
            lessonGroup-9:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            end_of_course_project:
              display_name: End of Course Project
          title: Express Course (2022)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          name: express-2022
        csp1-2022:
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
          title: Digital Information ('22-'23)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description_audience: ''
          name: csp1-2022
        csp2-2022:
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
          title: The Internet ('22-'23)
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          student_description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          description_short: Build the internet from the ground up using the Internet Simulator.
          description_audience: ''
          name: csp2-2022
        csp3-2022:
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
          title: Intro to App Design ('22-'23)
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          student_description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description_audience: ''
          name: csp3-2022
        csp4-2022:
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          title: Variables, Conditionals, and Functions ('22-'23)
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          student_description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description_audience: ''
          name: csp4-2022
        csp5-2022:
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            lessonGroup-5:
              display_name: Post-Course Survey
          title: Lists, Loops, and Traversals ('22-'23)
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          student_description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description_audience: ''
          name: csp5-2022
        courseb-2022:
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
            lessonGroup-6:
              display_name: End of Course Project
          title: Course B (2022)
          description: We developed Course B with first graders in mind. While the concepts in Course B parallel those in Course A, students learn more sophisticated unplugged activities and work through a greater variety of puzzles. Students will learn the basics of programming, collaboration techniques, investigation and critical thinking skills, persistence in the face of difficulty, and internet safety. At the end of this course, students create games in the Play Lab programming environment.
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          name: courseb-2022
        coursec-2022:
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          title: Course C (2022)
          description: We developed Course C for students in second grade. Students will create programs with sequencing, loops, and events. They will investigate problem-solving techniques and develop strategies for building positive communities both online and offline. By the end of the course, students will create interactive games that they can share.
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          name: coursec-2022
        csp6-2022:
          lesson_groups:
            csp_unit6_2020:
              display_name: 'Unit 6: Algorithms'
            lessonGroup-2:
              display_name: Post-Course Survey
          title: Algorithms ('22-'23)
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          student_description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description_audience: ''
          name: csp6-2022
        csp7-2022:
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            lessonGroup-3:
              display_name: Post-Course Survey
          title: Parameters, Return, and Libraries ('22-'23)
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          student_description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description_audience: ''
          name: csp7-2022
        csp8-2022:
          title: Create PT Prep ('22-'23)
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          student_description: 'In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.

'
          description_short: Practice and complete the Create Performance Task (PT).
          description_audience: ''
          lesson_groups:
            lessonGroup-2:
              display_name: Create PT
            lessonGroup-3:
              display_name: Post-Course Survey
          name: csp8-2022
        csp9-2022:
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
            lessonGroup-2:
              display_name: Post-Course Survey
          title: Data ('22-'23)
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
          student_description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description_audience: ''
          name: csp9-2022
        csp10-2022:
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
            lessonGroup-2:
              display_name: Post-Course Survey
          title: Cybersecurity and Global Impacts ('22-'23)
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\n\n"
          student_description: 'In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a "school of the future" conference in which you and a team make a proposal for how best to improve school life with computing innovations.

'
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description_audience: ''
          name: csp10-2022
        coursed-2022:
          lesson_groups:
            lessonGroup-6:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            end_of_course_project:
              display_name: End of Course Project
          title: Course D (2022)
          description: 'We created course D for students in third grade.  The course begins with a review of the concepts found in earlier courses, including loops and events. Afterward, students will develop their understanding of algorithms, nested loops, while loops, conditionals, and more. '
          student_description: Learn about loops, conditionals, and events. Beyond coding, learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          name: coursed-2022
        coursee-2022:
          lesson_groups:
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            ramp_up:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            csf_nested_loops:
              display_name: Conditionals
            lessonGroup-7:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-8:
              display_name: Deprecated
          title: Course E (2022)
          description: We created Course E for students in fourth grade. The course begins with an introduction to the Sprite Lab programming tool. Students will learn to make fun, interactive projects that reinforce what they’ll learn about online safety. Following these lessons, students will engage in more complex coding. Students will learn about nested loops, functions, and conditionals. By the end of the course, students will combine these concepts to solve challenging puzzles. The course ends with an open-ended project where students create a game or drawing.
          student_description: Start coding with algorithms, events, loops, conditionals, and functions! By the end of this course, design and create a game or drawing that you can share with your friends and family.
          description_short: Learn the basics of sprites, nested loops, and functions.
          description_audience: 'Ages: 8-12'
          name: coursee-2022
        coursef-2022:
          lesson_groups:
            ramp_up:
              display_name: Sprites
            lessonGroup-7:
              display_name: Digital Citizenship
            lessonGroup-8:
              display_name: Variables
            csf_variables:
              display_name: Deprecated
            csf_data:
              display_name: Data and Simulations
            end_of_course_project:
              display_name: End of Course Project
          title: Course F (2022)
          description: We created Course F for students in the fifth grade. The course begins by looking at how users make choices in the apps they use. Students then learn to make a variety of Sprite Lab apps that also offer choices for the user. In the later lessons in the course, students will learn about variables in a variety of contexts. Students are given greater autonomy and more choices throughout this course. By the end of the course, students will have created interactive projects to share with their friends and family.
          student_description: Learn to code with sprites and variables, and discuss societal impacts of computing and the internet. By the end of this course, design and create a project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          name: coursef-2022
        csp-post-survey-2021:
          lesson_groups: {}
          name: csp-post-survey-2021
          title: CS Principles Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Principles Post-Course Survey.
          student_description: This unit contains a survey about the CS Principles Course. Your teacher will tell you when it's time to take this survey.
        csa1-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Survey
          name: csa1-2022
          title: Object-Oriented Programming ('22-'23)
          description_audience: ''
          description_short: Students learn fundamental Java concepts, discover their identity as software engineers, and use debugging strategies and code reviews to improve their programming skills.
          description: |-
            This unit exposes students to object-oriented programming principles as they explore The Neighborhood. Students learn fundamental Java concepts as they navigate and interact with The Neighborhood with `Painter` objects and create new types of `Painter`s to expand the capabilities of their programs. Students practice predicting the outcome of program code and use their `Painter` objects with conditional statements, `while` loops, and Boolean expressions to navigate mazes and create drawings. While students work with the `Painter`, they practice identifying syntax and logic errors to explain why code segments will not compile or work as intended. Additionally, students learn to document program code using comments to describe the behavior of specific code segments. Throughout this unit, students discover their identity as software engineers and use debugging strategies and code reviews to improve their programming skills.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa1-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).
          student_description: This unit exposes you to object-oriented programming principles as you explore The Neighborhood. You learn fundamental Java concepts as you navigate and interact with The Neighborhood with `Painter` objects and create new types of `Painter`s to expand the capabilities of your programs. You practice predicting the outcome of program code and use your `Painter` objects with conditional statements, `while` loops, and Boolean expressions to navigate mazes and create drawings. While you work with the `Painter`, you practice identifying syntax and logic errors to explain why code segments will not compile or work as intended. Additionally, you learn to document program code using comments to describe the behavior of specific code segments. Throughout this unit, you discover your identity as a software engineer and use debugging strategies and code reviews to improve your programming skills.
        pre-express-2022:
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          name: pre-express-2022
          title: Pre-reader Express (2022)
          description_audience: 'Ages: 4-8'
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        csa2-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
          name: csa2-2022
          title: Class Structure and Design ('22-'23)
          description_audience: ''
          description_short: Students develop an understanding of data encapsulation and object-oriented design decisions.
          description: |-
            This unit expands on the object-oriented programming principles introduced in Unit 1 to explore design principles as students develop classes with attributes and behaviors and work with primitive and object data. Students learn to work with variables and user input as they develop and utilize classes and objects to represent desserts, customers, and food trucks for the Project Mercury Pastries Food Truck business. As students work with the `Dessert` class, they build on their knowledge of inheritance to design subclasses that represent specific types of desserts. While working with variables, students learn to create and evaluate expressions using assignment and relational operators and trace code segments to determine the result of output. Throughout this unit, students continue to develop software engineering skills as they learn to use UML diagrams to represent classes and the DRY principle to refactor program code.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa2-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 1
            * Personal Progress Check 5
            * Personal Progress Check 9

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit expands on the object-oriented programming principles introduced in Unit 1 to explore design principles as you develop classes with attributes and behaviors and work with primitive and object data. You learn to work with variables and user input as you develop and utilize classes and objects to represent desserts, customers, and food trucks for the Project Mercury Pastries Food Truck business. As you work with the `Dessert` class, you build on your knowledge of inheritance to design subclasses that represent specific types of desserts. While working with variables, you learn to create and evaluate expressions using assignment and relational operators and trace code segments to determine the result of output. Throughout this unit, you continue to develop software engineering skills as you learn to use UML diagrams to represent classes and the DRY principle to refactor program code.
        csa3-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
          name: csa3-2022
          title: Arrays and Algorithms ('22-'23)
          description_audience: ''
          description_short: Students use one-dimensional (1D) arrays to store lists of primitive values and object references.
          description: |-
            This unit introduces students to data structures to store primitive values and object references. Students use one-dimensional (1D) arrays to represent lists of data while expanding their knowledge of loops and conditionals to analyze and process data in a 1D array. Students learn to use `for` loops to traverse arrays and discover that an algorithm involving loops can be implemented with either a `for` loop or a `while` loop. Throughout the unit, students develop and modify standard algorithms to find and manipulate elements in a 1D array while also discovering the concept of polymorphism when traversing arrays of objects. As part of the planning process, students identify the preconditions and postconditions that an algorithm must satisfy. Additionally, students learn to use the `static` and `final` keywords to create static variables to represent values shared with all classes and constants to represent values that cannot be changed.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa3-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 4
            * Personal Progress Check 6

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit introduces you to data structures to store primitive values and object references. You use one-dimensional (1D) arrays to represent lists of data while expanding your knowledge of loops and conditionals to analyze and process data in a 1D array. You learn to use `for` loops to traverse arrays and discover that an algorithm involving loops can be implemented with either a `for` loop or a `while` loop. Throughout the unit, you develop and modify standard algorithms to find and manipulate elements in a 1D array while also discovering the concept of polymorphism when traversing arrays of objects. As part of the planning process, you identify the preconditions and postconditions that an algorithm must satisfy. Additionally, you learn to use the `static` and `final` keywords to create static variables to represent values shared with all classes and constants to represent values that cannot be changed.
        tessplayground:
          lesson_groups: {}
          name: tessplayground
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        cs4all-invasive-species:
          lesson_groups:
            lessonGroup-2:
              display_name: Collection 1
            lessonGroup-3:
              display_name: Collection 2
            lessonGroup-4:
              display_name: Collection 3
            lessonGroup-5:
              display_name: Collection 4
            lessonGroup-6:
              display_name: Collection 5
          name: cs4all-invasive-species
          title: 'Invasive Species '
          description_audience: ''
          description_short: 'This is a NSF funded research grant for CS4All '
          description: ''
          student_description: ''
        csa4-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
          name: csa4-2022
          title: Conditions and Logic ('22-'23)
          description_audience: ''
          description_short: Students improve decision-making in their programs using relational and logical operators to evaluate primitive values and object references and use the Math class to perform calculations and generate random numbers.
          description: "This unit revisits the use of packages to access existing functionalities in their programs, such as The Neighborhood, to expand their knowledge of APIs and libraries and explore The Theater. With The Theater, students learn to improve the decisions made in conditionals and loops with relational and logical operators to evaluate primitive values and object references. While working with conditionals and logical operators, students expand their knowledge of the `static` keyword to write static methods and explore their functionality. Additionally, students use casting operators and `Math` class methods to evaluate expressions and perform calculations, including incorporating random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, students develop an understanding of De Morgan’s Laws and learn how to evaluate truth tables.\n\n### AP Classroom Personal Progress Checks\nTo assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org\t/s/csa4-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).\n\nThe following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:\n* Personal Progress Check 3\n\n***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*"
          student_description: This unit revisits the use of packages to access existing functionalities in your programs, such as The Neighborhood, to expand your knowledge of APIs and libraries and explore The Theater. With The Theater, you learn to improve the decisions made in conditionals and loops with relational and logical operators to evaluate primitive values and object references. While working with conditionals and logical operators, you expand your knowledge of the `static` keyword to write static methods and explore their functionality. Additionally, you use casting operators and `Math` class methods to evaluate expressions and perform calculations, including incorporating random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, you develop an understanding of De Morgan's Laws and learn how to evaluate truth tables.
        csa5-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know Week
            lessonGroup-4:
              display_name: Sandboxes
          name: csa5-2022
          title: Two-Dimensional Arrays ('22-'23)
          description_audience: ''
          description_short: Students use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs.
          description: |-
            This unit expands on data structures introduced in Unit 3 to create tables of data using two-dimensional (2D) arrays. Students identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing 2D arrays and apply standard algorithms to find and manipulate elements. As students analyze problems involving 2D arrays, they revisit these standard algorithms to determine what code needs to be added or modified and to interact with completed program code. Students apply these concepts to manipulate pixels and in The Theater to create image filters in addition to working with primitive values and various object references. Additionally, students use the programming knowledge and skills they have acquired to consider the impacts of programs on society, economies, and culture.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa5-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:

            * Personal Progress Check 8

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit expands on data structures introduced in Unit 3 to create tables of data using two-dimensional (2D) arrays. You identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing 2D arrays and apply standard algorithms to find and manipulate elements. As you analyze problems involving 2D arrays, you revisit these standard algorithms to determine what code needs to be added or modified and to interact with completed program code. You apply these concepts to manipulate pixels using The Theater to create image filters in addition to working with primitive values and various object references. Additionally, you use the programming knowledge and skills you have acquired to consider the impacts of programs on society, economies, and culture.
        tess-test-csa:
          lesson_groups: {}
          name: tess-test-csa
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa1-2022-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa1-2022-exemplars
          title: Unit 1 - Object-Oriented Programming [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        pltess:
          lesson_groups:
            lessonGroup-2:
              display_name: Tess lesson
          name: pltess
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        pltess2:
          lesson_groups: {}
        self-paced-pl-csa1-2022:
          lesson_groups: {}
          name: self-paced-pl-csa1-2022
          title: 'Module 1: Welcome'
          description_audience: ''
          description_short: ''
          description: |-
            This module is for anyone using these professional learning modules for CSA.

            **You will:**
            * Get an introduction to Code.org.
            * Learn how to engage in these professional learning modules.
            * Get an introduction to the AP Computer Science A course
            * Learn Code.org’s curricular approach to CSA

            **Estimated Time:** 60 minutes
          student_description: |-
            This module is for anyone using these professional learning modules for CSA.

            **You will:**
            * Get an introduction to Code.org.
            * Learn how to engage in these professional learning modules.
            * Get an introduction to the AP Computer Science A course
            * Learn Code.org’s curricular approach to CSA

            **Estimated Time:** 60 minutes
        self-paced-pl-csa2-2022:
          lesson_groups: {}
          name: self-paced-pl-csa2-2022
          title: 'Module 2: Navigating Code.org'
          description_audience: ''
          description_short: ''
          description: "This module is intended for teachers who are new to Code.org and the Code.org platform. \n\n**You will:**\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section.\n* Locate and use course lesson plans and teacher resources.\n* Learn how to access support while teaching the course.\n\n**Estimated Time:** 70 minutes\n"
          student_description: |-
            This module is intended for teachers who are new to Code.org and the Code.org platform.

            **You will:**
            * Navigate the Code.org website and teacher tools.
            * Set up a classroom section.
            * Locate and use course lesson plans and teacher resources.
            * Learn how to access support while teaching the course.

            **Estimated Time:** 70 minutes
        self-paced-pl-csa3-2022:
          lesson_groups: {}
          name: self-paced-pl-csa3-2022
          title: 'Module 3: Support for text-based programming'
          description_audience: ''
          description_short: ''
          description: |
            This module is for any teacher who is experienced in using variables, conditionals, loops and arrays in other programming languages, but is new to Java.

            **You will:**
            * Create a new file in the Java Lab IDE
            * Become familiar with the basics of Java syntax
            * Declare and initialize variables
            * Use variables in arithmetic operations
            * Print variables and text to the console
            * Write and read if, if-else, if-else-if-else statements
            * Read, write, and debug for loops in Java
            * Declare and  initialize a 1D array of primitive data types
            * Access and modify elements in arrays
            * Traverse arrays

            **Estimated Time:** 7.5 hours
          student_description: |
            This module is for any teacher who is experienced in using variables, conditionals, loops and arrays in other programming languages, but is new to Java.

            **You will:**
            * Create a new file in the Java Lab IDE
            * Become familiar with the basics of Java syntax
            * Declare and initialize variables
            * Use variables in arithmetic operations
            * Print variables and text to the console
            * Write and read if, if-else, if-else-if-else statements
            * Read, write, and debug for loops in Java
            * Declare and  initialize a 1D array of primitive data types
            * Access and modify elements in arrays
            * Traverse arrays

            **Estimated Time:** 7.5 hours
        csa7-pilot-extra:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: 'Expanding Software Design '
          description: In this unit, students practice software design and development using the skills and programming constructs they have learned to develop a title sequence for their favorite content creator. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. Students explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.
          student_description: In this unit, you practice software design and development using the skills and programming constructs you have learned to develop a title sequence for your favorite content creator. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your projects meet specified requirements. You explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
          description_short: ''
          description_audience: ''
          name: csa7-pilot-extra
        csa8-pilot-extra:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Giving Objects Life
          description: In this unit, students implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. Students analyze the efficiency of searching and sorting algorithms and expand the standard algorithms they have developed throughout the course to solve more complex problems. Throughout the unit, students apply their knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. Students wrap up the unit and course considering the privacy and security of their programs and users.
          student_description: In this unit, you implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. You analyze the efficiency of searching and sorting algorithms and expand the standard algorithms you have developed throughout the course to solve more complex problems. Throughout the unit, you apply your knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. You wrap up the unit and course considering the privacy and security of their programs and users.
          description_short: ''
          description_audience: ''
          name: csa8-pilot-extra
        csa-backpack-2022:
          lesson_groups: {}
          name: csa-backpack-2022
          title: CSA Backpack Versions ['22-'23]
          description_audience: ''
          description_short: ''
          description: Versions of classes students have in their **Backpack** throughout the course.
          student_description: ''
        csd6-projects:
          lesson_groups: {}
          name: csd6-projects
          title: CSD Unit 6 Projects
          description_audience: ''
          description_short: ''
          description: These are the new projects for the CS Discoveries Physical Computing unit. This unit exists to help playtesting the new MicroBit features in the Code.org platform
          student_description: ''
        coursef-2022-pilot:
          lesson_groups:
            lessonGroup-7:
              display_name: Digital Citizenship
            ramp_up:
              display_name: Sprites
            lessonGroup-8:
              display_name: Variables
            csf_data:
              display_name: Data and Simulations
            end_of_course_project:
              display_name: End of Course Project
          name: coursef-2022-pilot
          title: Course F (2022)
          description_audience: 'Ages: 9-13'
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description: |
            We created Course F for students in the fifth grade. The course begins by looking at how users make choices in the apps they use. Students then learn to make a variety of Sprite Lab apps that also offer choices for the user. In the later lessons in the course, students will learn about variables in a variety of contexts. Students are given greater autonomy and more choices throughout this course. By the end of the course, students will have created interactive projects to share with their friends and family.

            ## Spring 2022 Open Preview
            This new version of Course F includes three new lessons, and we need your feedback! The new lessons are:
            * Lesson 9 - Lots of Sprites - [give feedback](https://docs.google.com/forms/d/e/1FAIpQLSdgGilUP1l2i7Cie_kojOBjq_UMVDA8O1NFX4hLt4Ts4IMvnQ/viewform)
            * Lesson 10 - Counting with Variables - [give feedback](https://docs.google.com/forms/d/e/1FAIpQLSeuqnSbdJEgUY9paU2HNLN0RymYogBIRYrAtttTg826QXjK0w/viewform)
            * Lesson 11 - Mini-Project: Collector Game - [give feedback](https://docs.google.com/forms/d/e/1FAIpQLSe5IU4p57sowVOUuJyk_1Nv_R8XwELRwto75zPdre50aYy9DA/viewform)

            Please note that these new lessons may change between now and July 2022. We appreciate any feedback. Courses A-E of CS Fundamentals (2022) will launch in July 2022.

            We have also added a full slide deck covering all lessons in Course F. We welcome your [feedback](https://docs.google.com/forms/d/e/1FAIpQLScDJ_UUYW1fw36uCiupsB96F8O8zoiSuppGQ7YrQfVn0ma_5w/viewform) on the lesson slides as well!
          student_description: Learn to code with sprites and variables, and discuss societal impacts of computing and the internet. By the end of this course, design and create a project you can share with friends and family.
        csa6-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Sandbox
          title: ArrayLists and String Methods ('22-'23)
          description: |-
            This unit continues to expand on data structures to introduce students to creating lists using the `ArrayList` class. In the process, students learn about the `Integer` and `Double` classes and use their methods to parse data from text files and explore the limits of integer values. Students differentiate between when to use each type of data structure while learning about the structure and functionality of an `ArrayList`. Students apply standard algorithms to find and manipulate data in an `ArrayList` of numerical and object data. Throughout the unit, students learn to use the `String` class to analyze and process text obtained from a user and from file input while learning about basic natural language processing techniques and applications. Additionally, students further develop software engineering skills by writing Javadoc comments to create API documentation for their programs.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa6-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 2
            * Personal Progress Check 7

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit continues to expand on data structures to introduce you to creating lists using the `ArrayList` class. In the process, you learn about the `Integer` and `Double` classes and use their methods to parse data from text files and explore the limits of integer values. You differentiate between when to use each type of data structure while learning about the structure and functionality of an `ArrayList`. You apply standard algorithms to find and manipulate data in an `ArrayList` of numerical and object data. Throughout the unit, you learn to use the `String` class to analyze and process text obtained from a user and from file input while learning about basic natural language processing techniques and applications. Additionally, you further develop software engineering skills by writing Javadoc comments to create API documentation for your programs.
          description_short: Students use ArrayLists to store program data and work with methods in the String class to manipulate and evaluate String objects.
          description_audience: ''
          name: csa6-2022
        csa7-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Sandbox
          title: Method Decomposition and Recursion ('22-'23)
          description: |-
            This unit allows students to practice software design and development using the skills they have learned throughout the curriculum while planning and developing a creative coding project to convey a personal interest or story using The Theater. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. In the process, students learn to write `private`, overloaded, and overridden methods and use the `super` keyword in a subclass method to call a superclass method while exploring the functionality of methods and their parameters. Throughout the unit, students practice tracing and writing recursive methods and comparing these methods to iterative solutions. With the knowledge and skills acquired throughout the year, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.

            ###AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa7-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).
          student_description: This unit allows you to practice software design and development using the skills you have learned throughout the curriculum while planning and developing a creative coding project to convey a personal interest or story using The Theater. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your project meet specified requirements. In the process, you learn to write `private`, overloaded, and overridden methods and use the `super` keyword in a subclass method to call a superclass method while exploring the functionality of methods and their parameters. Throughout the unit, you practice tracing and writing recursive methods and comparing these methods to iterative solutions. With the knowledge and skills acquired throughout the year, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
          description_short: Students practice software design and development using the skills and programming constructs they have learned and explore recursion.
          description_audience: ''
          name: csa7-2022
        csa8-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Survey
          title: Searching and Sorting ('22-'23)
          description: |-
            This unit expands on algorithms students have learned to introduce common approaches to searching and sorting 1D and 2D arrays and `ArrayList`s. In the process, students analyze and compare the efficiencies of these algorithms using statement execution counts and further develop problem-solving skills to decompose complex problems. Throughout the unit, students apply their programming and software engineering skills to plan and develop a creative coding project using the console that incorporates object-oriented design, data structures, and algorithmic thinking. With the knowledge and skills acquired throughout the year, students consider the privacy and security of programs and users.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa8-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 10

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you expand on the algorithms you have learned to explore common approaches to searching and sorting 1D and 2D arrays and `ArrayList`s. In the process, you analyze and compare the efficiencies of these algorithms using statement execution counts and further develop problem-solving skills to decompose complex problems. Throughout the unit, you apply your programming and software engineering skills to plan and develop a creative coding project using the console that incorporates object-oriented design, data structures, and algorithmic thinking. With the knowledge and skills acquired throughout the year, you consider the privacy and security of programs and users.
          description_short: ''
          description_audience: ''
          name: csa8-2022
        ui-test-csa-family-script:
          lesson_groups: {}
          name: ui-test-csa-family-script
          title: UI Test CSA Family Script
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-preview:
          lesson_groups: {}
          name: csa-preview
          title: CSA Curriculum and Tools Preview
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd1-summer-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Asynchronous Part 2
          name: vpl-csd1-summer-pilot-2022
          title: 'Module 1: Introduction to CS Discoveries '
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd2-summer-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Asynchronous Part 2
          name: vpl-csd2-summer-pilot-2022
          title: 'Module 2: Tools and Instructional Strategies'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd3-summer-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Asynchronous Part 2
          name: vpl-csd3-summer-pilot-2022
          title: 'Module 3: Classroom Context and Culture'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd4-summer-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Curriculum Investigation
          name: vpl-csd4-summer-pilot-2022
          title: 'Module 4: Planning and Practicing '
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd5-summer-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
          name: vpl-csd5-summer-pilot-2022
          title: 'Module 5: Preparing to Teach CS Discoveries'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa2-2022-exemplars:
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa2-2022-exemplars
          title: Unit 2 - Class Structure and Design [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        k5-onlinepd-2022:
          lesson_groups:
            Implementing and Teaching CS:
              display_name: 'Part I:  Teaching and Implementing Computer Science'
            k5_basic_concepts_1:
              display_name: 'Part II:  Concepts in Courses A - F'
            k5_next_steps_1:
              display_name: 'Part III:  Next Steps'
          title: Teaching Computer Science Fundamentals ('22-'23)
          description: "Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! \n"
          student_description: 'Welcome to Code.org’s free online educator course for CS Fundamentals! '
          description_short: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          description_audience: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          name: k5-onlinepd-2022
        vpl-csd1-ci-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Problem Solving and Computing
          name: vpl-csd1-ci-pilot-2022
          title: Preparing to Teach Problem Solving and Computing
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Problem Solving and Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Problem Solving and Computing.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 30 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Problem Solving and Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Problem Solving and Computing.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 30 minutes"
        vpl-csd2-ci-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Web Development
          name: vpl-csd2-ci-pilot-2022
          title: Preparing to Teach Web Development
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Web Development unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Web Development.\n* Practice key concepts included in the unit.\n* Engage with Web Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Web Development unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Web Development.\n* Practice key concepts included in the unit.\n* Engage with Web Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
        vpl-csd3-ci-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Preparing to Teach Interactive Animations and Games
          name: vpl-csd3-ci-pilot-2022
          title: 'Preparing to Teach Interactive Animations and Games '
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Interactive Animations and Games unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Interactive Animations and Games.\n* Practice key concepts included in the unit.\n* Engage with Game Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Interactive Animations and Games unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Interactive Animations and Games.\n* Practice key concepts included in the unit.\n* Engage with Game Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 120 minutes"
        vpl-csd4-ci-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Preparing to Teach the Design Process
          name: vpl-csd4-ci-pilot-2022
          title: Preparing to Teach The Design Process
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Design Process unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to The Design Process.\n* Practice key concepts included in the unit.\n* Engage with App Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Design Process unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to The Design Process.\n* Practice key concepts included in the unit.\n* Engage with App Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
        vpl-csd5-ci-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Data and Society
          name: vpl-csd5-ci-pilot-2022
          title: Preparing to Teach Data and Society
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Data and Society unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Data and Society.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 60 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Data and Society unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Data and Society.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 60 minutes"
        vpl-csd6-ci-pilot-2022:
          lesson_groups: {}
          name: vpl-csd6-ci-pilot-2022
          title: Preparing to Teach Physical Computing
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Physical Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Physical Computing.\n* Practice key concepts included in the unit.\n* Engage with the maker app.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Physical Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Physical Computing.\n* Practice key concepts included in the unit.\n* Engage with the maker app.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
        vpl-csd7-ci-pilot-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching AI and machine learning
          name: vpl-csd7-ci-pilot-2022
          title: Preparing to Teach AI and Machine Learning
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to AI and Machine Learning.\n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects.\n* Make a plan for implementing the unit with your students.\n\n**Suggested time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to AI and Machine Learning.\n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects.\n* Make a plan for implementing the unit with your students.\n\n**Suggested time:** 120 minutes"
        hello-world-csc:
          lesson_groups: {}
          name: hello-world-csc
          title: Hello World
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd-playground:
          lesson_groups: {}
          name: csd-playground
          title: CSD Playground
          description_audience: Curriculum Writers
          description_short: For staging updates to lessons or levels between curriculum versions
          description: For staging updates to lessons or levels between curriculum versions
          student_description: ''
        csc-pilot-2022-ecosystems:
          lesson_groups: {}
          name: csc-pilot-2022-ecosystems
          title: Ecosystems
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csc-pilot-2022-timecapsule:
          lesson_groups: {}
          name: csc-pilot-2022-timecapsule
          title: Time Capsule
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csc-pilot-2022-starquilts:
          lesson_groups: {}
          name: csc-pilot-2022-starquilts
          title: Star Quilts Module
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csc-pilot-2022-fables:
          lesson_groups: {}
          name: csc-pilot-2022-fables
          title: Fables
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd1-2022:
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
            csd1_3:
              display_name: Alternate Lessons
          title: Problem Solving and Computing ('22-'23)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing. \n\n**Implementation Guidance for Problem Solving and Computing**\n- The first chapter of this unit should be completed before any other unit in CS Discoveries\n- Alternate lessons are provided for some lessons in this unit, depending on your classroom context\n- You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit\n"
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          name: csd1-2022
        csd2-2022:
          lesson_groups:
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
            cspSurvey:
              display_name: Survey
          title: Web Development ('22-'23)
          description: |-
            In Web Development, students are empowered to create and share content on their own web pages. They begin by thinking about the role of the web and how it can be used as a medium for creative expression. As students develop their pages and begin to see themselves as programmers, they are encouraged to think critically about the impact of sharing information online and how to be more critical consumers of content. They are also introduced to problem solving as it relates to programming while they learn valuable skills such as debugging, using resources, and teamwork. At the conclusion of the unit, students will have created a personal website they can publish and share.


            **Implementation Guidance for Web Development**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: " In this unit, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          name: csd2-2022
        csd3-2022:
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          title: Interactive Animations and Games ('22-'23)
          description: |-
            In the Interactive Animations and Games unit, students create programmatic images, animations, interactive art, and games. Starting off with simple, primitive shapes and building up to more sophisticated sprite-based games, students become familiar with the programming concepts and the design process computer scientists use daily. They then learn how these simpler constructs can be combined to create more complex programs. In the final project, students develop a personalized, interactive program.

            **Implementation Guidance for Interactive Animations and Games**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: " In this unit, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          name: csd3-2022
        csd4-2022:
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            cspSurvey:
              display_name: Survey
          title: The Design Process ('22-'23)
          description: |-
            The Design Process unit transitions students from thinking about computer science as a tool to solve their own problems towards considering the broader social impacts of computing. Through a series of design challenges, students are asked to consider and understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which students have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test their solutions with real users to get feedback and drive further iteration.

            **Implementation Guidance for The Design Process**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: This unit introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          name: csd4-2022
        csd5-2022:
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          title: Data and Society ('22-'23)
          description: |-
            The Data and Society unit is about the importance of using data to solve problems and it highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter, students learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. In the final project, students gather their own data and use it to develop an automated solution to a problem.

            **Implementation Guidance for Data and Society**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: This unit is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          name: csd5-2022
        csd7-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
            lessonGroup-4:
              display_name: Survey
          title: AI and Machine Learning ('22-'23)
          description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **Implementation guidance for the AI and Machine Learning Unit**

            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. This can be accomplished by having students complete the [App Lab Hour of Code](https://studio.code.org/s/applab-intro/reset) before starting this unit.
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](https://studio.code.org/s/self-paced-pl-csd5-2021). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: This unit is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop your own machine learning projects around real-world data. The unit culminates with designing your own machine learning app to solve a personally relevant problem.
          description_short: Learn to about Artificial Intelligence and Machine Learning
          description_audience: ''
          name: csd7-2022
        csd6-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: 'Chapter 1: Inputs and Outputs'
            lessonGroup-3:
              display_name: 'Chapter 2: Building Physical Prototypes'
            lessonGroup-4:
              display_name: Survey
          name: csd6-2022
          title: Physical Computing ('22-'23)
          description_audience: ''
          description_short: Learn to program with physical devices.
          description: |-
            In the Physical Computing unit, students explore the role of physical devices in computing. Using App Lab and Adafruit’s Circuit Playground, students develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. Then, students explore how physical devices can be used to react to the world around them using a “maker” mindset to create prototypes with everyday materials.

            **Implementation Guidance for Physical Computing**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. This can be accomplished by having students complete the [App Lab Hour of Code](https://studio.code.org/s/applab-intro/reset) before starting this unit.
            - This unit requires students to have access to Circuit Playground's - [click here](https://code.org/circuitplayground) for more information about using Circuit Playground's in your classroom
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: This unit explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csd-post-survey-2022:
          lesson_groups: {}
          name: csd-post-survey-2022
          title: CS Discoveries Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Discoveries Post-Course Survey. This unit can be assigned after students complete their final unit in CS Discoveries.
          student_description: This unit contains a survey for when your class is finished with the units in CS Discoveries. Your teacher will tell you when it's time to take this survey.
        testtess2:
          lesson_groups: {}
          name: testtess2
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csp-post-survey-2022:
          lesson_groups: {}
          name: csp-post-survey-2022
          title: CS Principles Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Principles Post-Course Survey.
          student_description: This unit contains a survey about the CS Principles Course. Your teacher will tell you when it's time to take this survey.
        aiml-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
          name: aiml-2022
          title: AI and Machine Learning Module
          description_audience: ''
          description_short: Learn about Artificial Intelligence and Machine Learning
          description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. [Click Here](https://docs.google.com/document/d/1Wkg4DqfTDQVAxau217P0W_LmiGpNbfTSiHpkJbN2we4/preview) to learn more about recommendations for introducing students to App Lab before this unit.

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](http://studio.code.org/s/self-paced-pl-csd5-2022). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **For Teachers:** [Click here](https://studio.code.org/s/aiml-2022?viewAs=Instructor) to see lesson plans and teacher resources for this unit.
        vpl-csd-2022:
          title: CS Discoveries Virtual Professional Learning 2022 - 23
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: vpl-csd-2022
        vpl-csp-2022:
          title: CS Principles Virtual Professional Learning 22 - 23
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: vpl-csp-2022
          lessons: {}
        self-paced-pl-csd1-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Welcome
          title: 'Module 1: Welcome '
          description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
          description_short: ''
          description_audience: ''
          name: self-paced-pl-csd1-2022
        self-paced-pl-csd2-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Navigating Code.org
          title: 'Module 2: Navigating Code.org'
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes\n\n\n\n\n"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          description_short: ''
          description_audience: ''
          name: self-paced-pl-csd2-2022
        self-paced-pl-csd3-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Overview of CS Discoveries
          title: 'Module 3: Overview of CS Discoveries'
          description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
          student_description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
          description_short: ''
          description_audience: ''
          name: self-paced-pl-csd3-2022
        self-paced-pl-csd4-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching and learning CS Discoveries
          title: 'Module 4: Teaching and learning CS Discoveries'
          description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
          student_description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
          description_short: ''
          description_audience: ''
          name: self-paced-pl-csd4-2022
        self-paced-pl-csp1-2022:
          title: 'Module 1: Welcome'
          description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: self-paced-pl-csp1-2022
        self-paced-pl-csp2-2022:
          title: 'Module 2: Navigating Code.org'
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: self-paced-pl-csp2-2022
        self-paced-pl-csp3-2022:
          title: Overview of CS Principles
          description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
          student_description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: self-paced-pl-csp3-2022
        self-paced-pl-csp4-2022:
          title: Teaching and learning CS Principles
          description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Principles course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Principles classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Principles classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Principles course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.
            * Learn about opportunities to connect with the broader CS community.

            **Suggested Time**: 70 minutes
          student_description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Principles course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Principles classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Principles classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Principles course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.
            * Learn about opportunities to connect with the broader CS community.

            **Suggested Time**: 70 minutes
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: self-paced-pl-csp4-2022
        csa9-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Review and Practice
            lessonGroup-3:
              display_name: Mock Exams
            lessonGroup-4:
              display_name: Sandboxes
          name: csa9-2022
          title: AP Exam Review and Practice ('22-'23)
          description_audience: ''
          description_short: Students prepare for the AP CSA Exam by practicing strategies for the multiple-choice and free response questions.
          description: This unit prepares students for the AP CSA Exam by reviewing key concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. Students identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          student_description: This unit prepares you for the AP CSA Exam by reviewing key concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. You identify strengths and areas of improvement to create individualized study plans to focus you practice and self-assess your progress.
        csa-pl-standalone-code-2022:
          lesson_groups: {}
          name: csa-pl-standalone-code-2022
          title: CSA Professional Learning Coding Projects
          description_audience: ''
          description_short: ''
          description: Workshop participants will be able to see example projects and code during PL from the neighborhood, console, and theater.
          student_description: ''
        csc-ecosystems-1:
          lesson_groups: {}
        csc-ecosystems:
          lesson_groups: {}
        dlp-csd-overview-2022:
          title: 2022 CS Discoveries Deeper Learning Overview
          description: Welcome to the 2022 Deeper Learning program for onboarding CS Discoveries facilitators.
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csd-overview-2022
        dlp-csd-mod1-2022:
          title: 2022 CS Discoveries Deeper Learning FiT Module
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csd-mod1-2022
        dlp-csd-mod2-2022:
          title: 2022 CS Discoveries Deeper Learning Module A
          description: "##This module will be published by August 1, 2022."
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csd-mod2-2022
        dlp-csd-mod3-2022:
          title: 2022 CS Discoveries Deeper Learning Module B
          description: "##This module will be published by October 3, 2022."
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csd-mod3-2022
        dlp-csd-mod4-2022:
          title: 2022 CS Discoveries Deeper Learning Module 4 for Workshop 4
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csd-mod4-2022
        dlp-csp-mod1-2022:
          title: 2022 CS Principles Deeper Learning FiT Module
          description: "##This module is for training purposes only.  No submissions will be officially evaluated."
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csp-mod1-2022
        dlp-csp-mod2-2022:
          title: 2022 CS Principles Deeper Learning Module A
          description: "##This module will be published by August 1, 2022."
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csp-mod2-2022
        dlp-csp-mod3-2022:
          title: 2022 CS Principles Deeper Learning Module B
          description: "##This module will be published by October 3, 2022."
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csp-mod3-2022
        dlp-csp-mod4-2022:
          title: 2022 CS Principles Deeper Learning Module 4  for Workshop 4
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csp-mod4-2022
        dlp-csp-overview-2022:
          title: 2022 CS Principles Deeper Learning Overview
          description: "###Welcome to the 2021 Deeper Learning program for onboarding CS Principles facilitators."
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: dlp-csp-overview-2022
        csc-ecosystems-2022:
          title: Ecosystems
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: csc-ecosystems-2022
        csc-starquilts-2022:
          title: Star Quilts Module
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: csc-starquilts-2022
          lessons: {}
        csc-fables-2022:
          title: Fables
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: csc-fables-2022
        csc-timecapsule-2022:
          title: Time Capsule
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lessons: {}
          lesson_groups: {}
          name: csc-timecapsule-2022
        vpl-csd1-ayw-pilot-2022:
          lesson_groups: {}
        alltheblocklythings:
          lesson_groups:
            lessonGroup-2:
              display_name: Google Blockly
            lessonGroup-3:
              display_name: CDO Blockly
          name: alltheblocklythings
          title: All the Blockly Things!
          description_audience: ''
          description_short: A selection of Blockly levels for internal testing
          description: ''
          student_description: ''
        self-paced-pl-csd5-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Artificial Intelligence and Machine Learning
          name: self-paced-pl-csd5-2022
          title: Teaching AI and Machine Learning
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects. \n* Make a plan for implementing the unit with your students.\n\n**Suggested Time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects. \n* Make a plan for implementing the unit with your students.\n\n**Suggested Time:** 120 minutes"
        vpl-csa-2022:
          lesson_groups: {}
          name: vpl-csa-2022
          title: CSA Virtual Professional Learning
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
          lessons:
            lesson-2:
              name: 'Module 2 post-work: Understanding Unit 4 content'
        csa-labs-2022:
          lesson_groups:
            lessonGroup-2:
              display_name: Magpie Lab
            lessonGroup-3:
              display_name: Celebrity Lab
          name: csa-labs-2022
          title: AP CSA College Board Labs
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
          lessons:
            lesson-7:
              name: 'The Celebrity Class: A Simple Version'
            lesson-8:
              name: Putting It All Together
            lesson-9:
              name: Extending the Celebrity Class
            lesson-10:
              name: Open-Ended Activity
        csa-draft-pl:
          lessons: {}
          lesson_groups: {}
