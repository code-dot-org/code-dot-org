# Autogenerated scripts locale file.
---
en:
  data:
    script:
      category:
        csd_category_name: CS Discoveries ('17-'18)
        csd_2018_category_name: CS Discoveries ('18-'19)
        csd_2019_category_name: CS Discoveries ('19-'20)
        csd_2020_category_name: CS Discoveries ('20-'21)
        csd_pilot_category_name: CS Discoveries Pilot
        csf_category_name: CS Fundamentals
        csf_2018_category_name: CS Fundamentals ('18-'19)
        csf_2019_category_name: CS Fundamentals ('19-'20)
        csf_2020_category_name: CS Fundamentals ('20-'21)
        csf_international_category_name: CS Fundamentals International
        csf2_draft_category_name: 'Under Development: Courses A - F'
        csp_category_name: CS Principles ('15-'16)
        csp_2018_category_name: CS Principles ('18-'19)
        csp_2019_category_name: CS Principles ('19-'20)
        csp_2020_category_name: CS Principles ('20-'21)
        cspexams_category_name: CS Principles Practice Test
        csp17_category_name: CS Principles ('17-'18)
        full_course_category_name: Full Courses
        hoc_category_name: Hour of Code
        math_category_name: Math
        research_studies_category_name: Research Studies
        twenty_hour_category_name: 20-Hour
        tts_category_name: Text-to-Speech
        other_category_name: Other
      name:
        course1:
          title: Course 1
          description: Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1.
          description_short: Introduction to computer science for early readers.
          description_audience: Ages 4-6
          lesson_groups: {}
          lessons:
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Artist: Shapes':
              name: 'Artist: Shapes'
            'Bee: Loops':
              name: 'Bee: Loops'
            'Bee: Sequence':
              name: 'Bee: Sequence'
            Building a Foundation:
              name: Building a Foundation
            Getting Loopy:
              name: Getting Loopy
            Going Places Safely:
              name: Going Places Safely
            Happy Maps:
              name: Happy Maps
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            'Maze: Debugging':
              name: 'Maze: Debugging'
            'Maze: Loops':
              name: 'Maze: Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
            Move it, Move it:
              name: Move it, Move it
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Spelling Bee:
              name: Spelling Bee
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
            The Big Event:
              name: The Big Event
        course2:
          title: Course 2
          description: Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5.
          description_short: Introduction to computer science for students who can read.
          description_audience: Ages 6+ (reading required)
          lesson_groups: {}
          lessons:
            'Artist: Debugging':
              name: 'Artist: Debugging'
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Loops':
              name: 'Bee: Loops'
            Binary Bracelets:
              name: Binary Bracelets
            Conditionals:
              name: Conditionals
            Flappy:
              name: Flappy
            Getting Loopy:
              name: Getting Loopy
            Graph Paper Programming:
              name: Graph Paper Programming
            'Maze: Loops':
              name: 'Maze: Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Relay programming:
              name: Relay programming
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
            The Big Event:
              name: The Big Event
            Your Digital Footprint:
              name: Your Digital Footprint
        course3:
          title: Course 3
          description: Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5.
          description_short: Delve even deeper into programming while building games and interactive stories. This is a follow-up to Course 2.
          description_audience: Ages 8-18
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Patterns':
              name: 'Artist: Patterns'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Functions':
              name: 'Bee: Functions'
            'Bee: Nested Loops':
              name: 'Bee: Nested Loops'
            Bounce:
              name: Bounce
            Computational Thinking:
              name: Computational Thinking
            Crowdsourcing:
              name: Crowdsourcing
            Dice Race:
              name: Dice Race
            Digital Citizenship:
              name: Digital Citizenship
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            Functional Suncatchers:
              name: Functional Suncatchers
            Internet:
              name: Internet
            Maze:
              name: Maze
            'Maze: Conditionals':
              name: 'Maze: Conditionals'
            Songwriting:
              name: Songwriting
            'Studio: Create a Game':
              name: 'Play Lab: Create a Game'
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
        playlab:
          title: Play Lab
          description: Create a story or make a game with Play Lab!
          description_short: Create a story or make a game with Play Lab!
          lesson_groups: {}
          lessons:
            Play Lab:
              name: Play Lab
          description_audience: ''
        artist:
          title: Artist
          description: Draw cool pictures and designs with the Artist!
          description_short: Draw cool pictures and designs with the Artist!
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
        hourofcode:
          title: Classic Maze
          description: Try the basics of computer science with characters from Angry Birds, Plants vs. Zombies, and Scrat from Ice Age!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Maze:
              name: Maze
        frozen:
          title: Code with Anna and Elsa
          description: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. You will create snowflakes and patterns as you ice-skate and make a winter wonderland that you can then share with your friends!
          description_short: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice.
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
        course4:
          title: Course 4
          description: Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8.
          description_short: Build more complex programs with concepts such as for loops and functions with parameters. This is a follow-up to Course 3.
          description_audience: Ages 9-18
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
            Artist Binary:
              name: Artist Binary
            'Artist: For Loops':
              name: 'Artist: For Loops'
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Functions with Parameters':
              name: 'Artist: Functions with Parameters'
            'Artist: Variables':
              name: 'Artist: Variables'
            'Bee: For Loops':
              name: 'Bee: For Loops'
            'Bee: Functions with Parameters':
              name: 'Bee: Functions with Parameters'
            Extreme Challenge - Comprehensive:
              name: Extreme Challenge - Comprehensive
            Maze and Bee:
              name: Maze and Bee
            'Play Lab: For Loops':
              name: 'Play Lab: For Loops'
            'Play Lab: Functions with Parameters':
              name: 'Play Lab: Functions with Parameters'
            'Play Lab: Variables':
              name: 'Play Lab: Variables'
            Super Challenge - For Loops:
              name: Super Challenge - For Loops
            Super Challenge - Functions and Parameters:
              name: Super Challenge - Functions and Parameters
            Super Challenge - Variables:
              name: Super Challenge - Variables
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            'Unplugged: Envelope Variables':
              name: 'Unplugged: Envelope Variables'
            'Unplugged: For Loop Fun':
              name: 'Unplugged: For Loop Fun'
            'Unplugged: Madlibs':
              name: 'Unplugged: Madlibs'
            'Unplugged: Songwriting with Parameters':
              name: 'Unplugged: Songwriting with Parameters'
            'Unplugged: Tangrams':
              name: 'Unplugged: Tangrams'
        Course4pre:
          title: Course 4 Prerequisite
          description: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_short: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Nested Loops':
              name: 'Bee: Nested Loops'
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
        usability:
          title: Usability Testing
          description: A selection of Course 4 levels for usability testing.
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Binary:
              name: Binary
            For Loops:
              name: For Loops
            Functions and Functions with Parameters:
              name: Functions and Functions with Parameters
            Intro:
              name: Intro
            Variables:
              name: Variables
        algebra:
          title: Computer Science in Algebra
          description: Learn Functional Programming through Algebra.
          description_short: Learn Functional Programming through Algebra.
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Calc: Defining Variables':
              name: Defining Variables and Substitution
            'Calc: Evaluation Blocks':
              name: Evaluation Blocks and Arithmetic Expressions
            'Eval: Boolean Operators':
              name: Boolean Operators
            'Eval: Conditionals':
              name: Conditionals
            'Eval: Defining Functions':
              name: Composite Functions
            'Eval: Functions':
              name: Solving Word Problems with the Design Recipe
            'Eval: Strings and Images':
              name: Strings and Images
            'Eval: Writing Contracts':
              name: Writing Contracts
            'Play Lab: Animation (Big Game)':
              name: The Big Game - Animation
            'Play Lab: Boolean (Big Game)':
              name: The Big Game - Booleans
            'Play Lab: Booleans':
              name: Sam the Bat
            'Play Lab: Collision Detection (Big Game)':
              name: The Big Game - Collision Detection
            'Play Lab: Defining Functions':
              name: Rocket Height
            'Play Lab: Defining Variables (Big Game)':
              name: The Big Game - Variables
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans and Logic'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Pythagorean Theorem'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'Unplugged: Conditionals and Piecewise Functions'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts, Domain, and Range'
            'Unplugged: The Design Recipe':
              name: 'Unplugged: The Design Recipe'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'Unplugged: Video Games and Coordinate Planes'
        infinity:
          title: Disney Infinity Play Lab
          description: Use Play Lab to create a story or game starring Disney Infinity characters.
          description_short: Use Play Lab to create a story or game starring Disney Infinity characters.
          lesson_groups: {}
          lessons:
            Infinity:
              name: Infinity
        algebrademo:
          title: Algebra Demo
          description: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          description_short: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          lesson_groups: {}
          lessons:
            Defining Simple Functions:
              name: Defining Simple Functions
            Defining Variables:
              name: Defining Variables
            Evaluation Blocks:
              name: Evaluation Blocks
            Making Pictures:
              name: Making Pictures
            The Design Recipe:
              name: The Design Recipe
        K5PD:
          title: K5 Professional Development (old)
          description: 'For the latest online Professional Development resources for elementary school teachers here: https://studio.code.org/s/k5-onlinepd'
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Computer Science Pedagogy:
              name: Computer Science Pedagogy
            Introduction to PD:
              name: Introduction to PD
            K-5 Courses:
              name: K-5 Courses
            Next Steps:
              name: Next Steps
            'Programming Concept: Conditionals':
              name: 'Programming Concept: Conditionals'
            'Programming Concept: Events':
              name: 'Programming Concept: Events'
            'Programming Concept: Functions':
              name: 'Programming Concept: Functions'
            'Programming Concept: Loops':
              name: 'Programming Concept: Loops'
            Reflection:
              name: Reflection
            Teacher Dashboard:
              name: Teacher Dashboard
            Unplugged lessons:
              name: Unplugged lessons
            Writing computer programs:
              name: Writing computer programs
            new stage:
              name: new stage
        netsim:
          title: Internet Simulator
          description: Learn about how the Internet works.
          description_short: Learn about how the Internet works.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Automatic DNS node:
              name: Automatic DNS node
            Broadcasting messages:
              name: Broadcasting messages
            Internet Simulator Freeplay:
              name: Internet Simulator Freeplay
            Manual DNS:
              name: Manual DNS
            Overview and Setup Instructions:
              name: Overview and Setup Instructions
            Packets and Reliability:
              name: Packets and Reliability
            Peer to Peer - Sending Ascii:
              name: Peer to Peer - Sending Ascii
            Peer to Peer - Sending Bits on a Shared Wire:
              name: Peer to Peer - Sending Bits on a Shared Wire
            Peer to Peer - Sending Numbers:
              name: Peer to Peer - Sending Numbers
            Routers and addresses:
              name: Routers and addresses
        pixelation:
          title: Pixelation
          description: Create images with bits and bytes.
          description_short: Create images with bits and bytes.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Black & White Pixelation Freeplay:
              name: Black & White Pixelation Freeplay
            Black & White Pixelation Tutorial:
              name: Black & White Pixelation Tutorial
            Color Pixelation Examples:
              name: Color Pixelation Examples
            Color Pixelation Freeplay:
              name: Color Pixelation Freeplay
            Color Pixelation Tutorial:
              name: Color Pixelation Tutorial
        20-hour:
          title: Accelerated Intro to CS Course
          description: This 20-hour course covers the core computer science and programming concepts in courses 2-4. The course is designed for use with ages 10-18. Check out courses 2-4 for a more complete experience!
          description_short: This 20-hour course covers the core computer science and programming concepts in courses 2-4.
          description_audience: Ages 10-18
          lesson_groups: {}
          lessons:
            Abstraction:
              name: Abstraction
            Algorithms:
              name: Algorithms
            Computational Thinking:
              name: Computational Thinking
            Conditionals:
              name: Conditionals
            Functions:
              name: Functions
            Graph Paper Programming:
              name: Graph Paper Programming
            Introduction to Computer Science:
              name: Introduction to Computer Science
            Relay Programming:
              name: Relay Programming
            Song Writing:
              name: Song Writing
            The Artist:
              name: The Artist
            The Artist 2:
              name: The Artist 2
            The Artist 3:
              name: The Artist 3
            The Artist 4:
              name: The Artist 4
            The Artist 5:
              name: The Artist 5
            The Farmer:
              name: The Farmer
            The Farmer 2:
              name: The Farmer 2
            The Farmer 3:
              name: The Farmer 3
            The Internet:
              name: The Internet
            The Maze:
              name: The Maze
            Wrap-up:
              name: Wrap-up
        edit-code:
          title: Edit Code
          description: Edit Code
          description_short: Edit Code
          description_audience: ''
          lesson_groups: {}
          lessons:
            Applab:
              name: Applab
            Hoc2015 Blockly:
              name: Hoc2015 Blockly
            Play Lab:
              name: Play Lab
            The Artist:
              name: The Artist
            The Maze:
              name: The Maze
        events:
          title: Events
          description: Events
          description_short: Events
          description_audience: ''
          lesson_groups: {}
          lessons:
            Bounce:
              name: Bounce
            Calc:
              name: Calc
            Eval:
              name: Eval
            Studio:
              name: Studio
        flappy:
          title: Flappy Code
          description: Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial!
          description_short: Write your own Flappy game!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Flappy Code:
              name: Flappy Code
        jigsaw:
          title: Jigsaw
          description: Try our Jigsaw tutorial.
          description_short: Try our Jigsaw tutorial.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Jigsaw:
              name: Jigsaw
        step:
          title: Step
          description: Step tutorial
          description_short: Step tutorial
          description_audience: ''
          lesson_groups: {}
          lessons:
            Step:
              name: Step
        Hour of Code:
          title: Hour of Code 2013
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2013:
              name: Hour of Code 2013
        CodeStudioPuzzleChallenge:
          title: Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Puzzles:
              name: Puzzles
        Tutorial Video - Code Studio Puzzle Challenge:
          title: Tutorial - Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Puzzles:
              name: Puzzles
        cspunit1:
          title: "(old) CS Principles Unit 1 - Digital Information"
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Binary Numbers:
              name: Binary Numbers
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Encode a Complex Thing:
              name: Encode an Experience
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Encoding Numbers in the Real World:
              name: Encoding Numbers in the Real World
            Encoding and Sending Text:
              name: Encoding and Sending Text
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Number Systems:
              name: Number Systems
            Personal Innovations:
              name: Personal Innovations
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Bits in the Real World:
              name: Sending Bits in the Real World
            Sending Complex Messages:
              name: Sending Complex Messages
            Sending Formatted Text:
              name: Sending Formatted Text
            Sending Numbers:
              name: Sending Numbers
            Text Compression:
              name: Text Compression
        algebraPD:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        algPDmiami:
          title: Computer Science in Algebra PD
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          lesson_groups: {}
          lessons:
            Booleans:
              name: Booleans
            Design Recipe Practice:
              name: Design Recipe Practice
            Evaluation Blocks:
              name: Evaluation Blocks
            Luigi's Pizza:
              name: Luigi's Pizza
            Rocket-Height:
              name: Rocket-Height
            Sam the Bat:
              name: Sam the Bat
            Strings and Images:
              name: Strings and Images
            Your Game - Animation:
              name: Your Game - Animation
            Your Game - Booleans:
              name: Your Game - Booleans
            Your Game - Collision Detection:
              name: Your Game - Collision Detection
            Your Game - Player Movement:
              name: Your Game - Player Movement
        text-compression:
          title: Text Compression
          description: Compress text by identifying repeated patterns.
          description_short: Compress text by identifying repeated patterns.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Text Compression:
              name: Text Compression
        CSPPD:
          title: Computer Science Principles PD
          description: 'Phase 1: Online Introduction for CSP'
          description_short: 'Phase 1: Online Introduction for CSP'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Exploring CSP Instructional Materials:
              name: Exploring CSP Instructional Materials
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is CSP?:
              name: What is CSP?
        CSPLessonSamples:
          title: CSP Lesson Samples
          description: Lesson samples for CSP
          description_short: Lesson samples for CSP
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson 14:
              name: Lesson 14
            Lesson 15:
              name: Lesson 15
        ECSPD:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          lesson_groups: {}
          lessons:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
        sciencePD:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        rbo-reference:
          title: rbo-reference
          description: rbo-reference
          description_short: rbo-reference
          description_audience: ''
          lesson_groups: {}
          lessons:
            reference:
              name: reference
        Test Wednesday:
          title: Test Wednesday
          description: Test Wednesday
          description_short: Test Wednesay
          lesson_groups: {}
          lessons:
            PDK5 Intro:
              name: PDK5 Intro
        cspunit3:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            Creating Functions:
              name: Creating Functions
            Creating functions with Parameters:
              name: Creating Functions with Parameters
            Digital Assistant Project:
              name: Digital Assistant Project
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: Introducing Design Mode
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: Introduction to Conditional Logic
            Introduction to Digital Assistants:
              name: Introduction to Digital Assistants
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Loops and Simulations:
              name: Loops and Simulations
            Multi-screen Apps:
              name: Multi-screen Apps
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            The Need For Programming Languages:
              name: The Need For Programming Languages
            Understanding Program Flow and Logic:
              name: Understanding Program Flow and Logic
            User Input and Strings:
              name: User Input and Strings
            Using Simple Commands:
              name: Using Simple Commands
            Using Variables in Apps:
              name: Using Variables in Apps
            While Loops:
              name: While Loops
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
        algebraPD3:
          title: Phase 3 PD
          description: Teach Algebra through block-based Functional Programming
          description_short: Teach Algebra through block-based Functional Programming
          description_audience: ''
          lesson_groups: {}
          lessons:
            Computer Science Pedagogy:
              name: Computer Science Pedagogy
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Next Steps:
              name: Next Steps
            Strings and Images:
              name: Strings and Images
            Teacher Dashboard:
              name: Teacher Dashboard
            The Big Game:
              name: The Big Game
            The Design Recipe:
              name: The Design Recipe
        ECSPD-NexTech:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          lesson_groups: {}
          lessons:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
        ECSPD-iZone:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          lesson_groups: {}
          lessons:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
        algebraPD-NexTech:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        algebraPD-iZone:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        sciencePD-NexTech:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        sciencePD-iZone:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        sciencePD2:
          title: 'CS in Science: Part 2'
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          lesson_groups: {}
          lessons:
            Creating Breeds in Starlogo Nova:
              name: Creating Breeds in Starlogo Nova
            Epidemic Model Extensions:
              name: Epidemic Model Extensions
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Revisiting Agent Movement:
              name: Revisiting Agent Movement
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        sciencePD3:
          title: 'CS in Science: Part 3'
          description: Academic Year Support - Semester 1
          description_short: Academic Year Support - Semester 1
          lesson_groups: {}
          lessons:
            Decode and Share:
              name: Decode and Share
            Mystery Model:
              name: Mystery Model
            Welcome Back!:
              name: Welcome Back!
        Testing:
          title: Testing
          description: Testing
          description_short: Testing
          description_audience: ''
          lesson_groups: {}
          lessons:
            Testing:
              name: Testing
        cspunit2:
          title: "(old) CS Principles Unit 2 - The Internet"
          description: In this unit, students extend their understanding of the internet and how it functions by building off the concepts learned when sending bits in Unit 1. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Algorithms Detour - Hard Problems TSP:
              name: Hard Problems - The Traveling Salesperson Problem
            Algorithms Detour - How Routers Learn:
              name: How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Alice and Bob and Asymmetric Keys:
              name: Asymmetric Keys - Cups and Beans
            Cracking the Code:
              name: Cracking the Code
            DNS in the Real World:
              name: DNS in the Real World
            Encryption Algorithms:
              name: Keys and Passwords
            HTTP and Abstraction:
              name: HTTP and Abstraction on the Internet
            Invent an Addressing Protocol:
              name: Invent an Addressing Protocol
            One Way Functions - Ice Cream Vans:
              name: One-Way Functions - The WiFi Hotspot Problem
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Public Key Crypto:
              name: Public Key Cryptography
            Routers and Redundancy:
              name: Routers and Redundancy
            Tell Me a Secret - Encrypting Text:
              name: The Need for Encryption
            The Internet:
              name: The Internet Is for Everyone
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
        algebraPD2a:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Big Game - Animation:
              name: Big Game - Animation
            Big Game - Booleans:
              name: Big Game - Booleans
            Big Game - Collision Detection:
              name: Big Game - Collision Detection
            Big Game - Player Movement:
              name: Big Game - Player Movement
            Big Game - Variables:
              name: Big Game - Variables
            Booleans:
              name: Booleans
            Defining Variables:
              name: Defining Variables
            Evaluation Blocks:
              name: Evaluation Blocks
            Free Play:
              name: Free Play
            Luigi's Pizza:
              name: Luigi's Pizza
            Rocket-Height:
              name: Rocket-Height
            Sam the Bat:
              name: Sam the Bat
            Strings and Images:
              name: Strings and Images
            The Design Recipe:
              name: The Design Recipe
        allthethings:
          title: All the Things!
          description: All the level types for UI testing. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for this script).
          description_short: All the level types for UI testing
          description_audience: ''
          lesson_groups: {}
          lessons:
            Anonymous student survey:
              name: Anonymous student survey
            Anonymous student survey 2:
              name: Anonymous student survey 2
            AppLab:
              name: AppLab
            Artist:
              name: Artist
            Bee:
              name: Bee
            Bounce:
              name: Bounce
            CSinA:
              name: CSinA
            Farmer:
              name: Farmer
            Flappy:
              name: Flappy
            Free Response:
              name: Free Response
            Gamelab:
              name: Gamelab
            Jigsaw:
              name: Jigsaw
            Long assessment:
              name: Long assessment
            Markdown Details:
              name: Markdown Details
            Match:
              name: Match
            Maze:
              name: Maze
            Minecraft:
              name: Minecraft
            Multi:
              name: Multi
            Multi2:
              name: Multi2
            Netsim:
              name: Netsim
            Odometer:
              name: Odometer
            Online PD:
              name: Online PD
            Pixelation:
              name: Pixelation
            PlayLab:
              name: PlayLab
            Public Key Cryptography:
              name: Public Key Cryptography
            Rich long assessment:
              name: Rich long assessment
            Sample PLC Assessment:
              name: Sample PLC Assessment
            Star wars:
              name: Star wars
            Studio:
              name: Studio
            Swapped Levels:
              name: Swapped Levels
            Text Compression:
              name: Text Compression
            TextMatch:
              name: TextMatch
            Web Lab:
              name: Web Lab
            Multi page assessment:
              name: Multi page assessment
            Single page assessment:
              name: Single page assessment
            Standalone video:
              name: Standalone video
            Curriculum Reference:
              name: Curriculum Reference
            Sprite Lab:
              name: Sprite Lab
            Dance Lab:
              name: Dance Lab
            Mini Rubric:
              name: Mini Rubric
            Pluralsight Test:
              name: Pluralsight Test
            Externals Optionally Displayed as Unplugged:
              name: Externals Optionally Displayed as Unplugged
            Bubble Choice:
              name: Bubble Choice
            Contained Levels:
              name: Contained Levels
            ML Fish:
              name: ML Fish
            AI Lab:
              name: AI Lab
        algebraPD2b:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Booleans:
              name: Booleans
            Course Overview:
              name: Course Overview
            Defining Functions:
              name: Defining Functions
            Defining Variables:
              name: Defining Variables
            'Eval: Conditionals':
              name: 'Eval: Conditionals'
            Evaluation Blocks:
              name: Evaluation Blocks
            Next Steps:
              name: Next Steps
            Rocket-Height:
              name: Rocket-Height
            Strings and Images:
              name: Strings and Images
            Teacher Dashboard:
              name: Teacher Dashboard
            Writing Contracts:
              name: Writing Contracts
        cspfacilitator:
          title: 'CS Principles Facilitator Workshop '
          description: Online levels for PD workshop
          description_short: Online levels for PD workshop
          description_audience: ''
          lesson_groups: {}
          lessons:
            App Lab:
              name: App Lab
            Broadcast Lesson:
              name: Broadcast Lesson
            Internet Simulator:
              name: Internet Simulator
            Pixelation Widget:
              name: Pixelation Widget
            Text Compression Lesson:
              name: Text Compression Lesson
            Text Compression Widget:
              name: Text Compression Widget
            Welcome!:
              name: Welcome!
        K5-OnlinePD:
          title: Teaching Computer Science Fundamentals
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Computer Science Fundamentals:
              name: Computer Science Fundamentals
            Getting Started:
              name: Getting Started
            Looking Ahead:
              name: Looking Ahead
            'Mastering the Basics: Conditionals':
              name: 'Mastering the Basics: Conditionals'
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
            'Mastering the Basics: Functions':
              name: 'Mastering the Basics: Functions'
            'Mastering the Basics: Loops':
              name: 'Mastering the Basics: Loops'
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
            Next Steps:
              name: Next Steps
            Planning:
              name: Planning
        ECSPD2:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
        equityPD:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          lesson_groups: {}
          lessons:
            Equity PD:
              name: Equity PD
            Necessary Background:
              name: Necessary Background
        algebraPD2:
          title: CS in Algebra Part 2
          description: Academic Year Support
          description_short: Academic Year Support
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson Prep:
              name: Lesson Prep
            Teacher Dashboard:
              name: Teacher Dashboard
            Teaching with Puzzles:
              name: Teaching with Puzzles
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: The Design Recipe
            Welcome!:
              name: Welcome!
        sciencePD2b:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        equity-pd:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          description_audience: ''
          lesson_groups: {}
          lessons:
            Code.org Equity PD:
              name: Code.org Equity PD
            Necessary Background:
              name: Necessary Background
        science-PD2:
          title: Computer Science in Science PD Phase 2b
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          description_audience: ''
          lesson_groups: {}
          lessons:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        Equity-OnlinePD:
          title: Creating More Equitable Computer Science Classrooms
          description: Develop strategies for creating equity in your classroom with this free, self-paced online course.
          description_short: Develop equitable teaching strategies with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Creating Equitable Learning Environments:
              name: Creating Equitable Learning Environments
            Getting Started:
              name: Getting Started
            Introduction to Equity:
              name: Introduction to Equity
            Next Steps:
              name: Next Steps
        sciencePD2b-iZone:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        ECSPD2-iZone:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
          description_audience: ''
        ECSPD2-NexTech:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
          description_audience: ''
        CSPPD2:
          title: 'Computer Science Principles PD: Blended Summer Study'
          description: 8-hour online PD that builds on the 5-day in-person experience and helps teachers prepare for the beginning of the semester
          description_short: 'Blended Summer Study: 8 hour online'
          lesson_groups: {}
          lessons:
            Getting Started:
              name: Getting Started
            Lesson Chunk 1- Sending Binary Messages:
              name: Lesson Chunk 1- Sending Binary Messages
            Lesson Chunk 2- Encoding and Sending Numbers:
              name: Lesson Chunk 2- Encoding and Sending Numbers
            Lesson Chunk 3- Encoding and Sending Text:
              name: Lesson Chunk 3- Encoding and Sending Text
            Lesson Chunk 4- Compressing and Storing Information:
              name: Lesson Chunk 4- Compressing and Storing Information
            Practice PT:
              name: Practice PT
            Welcome to the Course!:
              name: Welcome to the Course!
            Wrap Up and Next Steps:
              name: Wrap Up and Next Steps
        odometer:
          title: Odometer Widget
          description: Use the Odometer widget to control odometers with various number bases. Binary, Decimal and Hexadecimal are the most common number systems to see in computer science.
          description_short: Use the Odometer widget to control odometers with various number bases.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Odometer Widget:
              name: Odometer Widget
        asUnplugged:
          title: Afterschool Unplugged
          description: Afterschool Unplugged is designed to teach computational thinking and computer science ideas through offline games and crafts. Created with informal classrooms in mind, these lessons are fantastic on their own, or in combination with Afterschool 1 . This course focuses on learning through entertainment. Recommended for grades K-8.
          description_short: Short unplugged course designed for informal learning
          description_audience: Ages 6-13
          lesson_groups: {}
          lessons:
            Binary Bracelets:
              name: Binary Bracelets
            Building a Foundation:
              name: Building a Foundation
            Getting Loopy:
              name: Getting Loopy
            Graph Paper Programming:
              name: Graph Paper Programming
            Happy Maps:
              name: Happy Maps
            Move it, Move it:
              name: Move it, Move it
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Songwriting:
              name: Songwriting
            The Big Event:
              name: The Big Event
        afterschool1:
          title: Afterschool 1
          description: Afterschool 1 is designed to for informal classrooms where students vary in age and assessment is not required. This course focuses on learning through entertainment, with varying options for implementation, all in 10 sessions or less. Use alone or with Afterschool Unplugged. Recommended for grades 3-8.
          description_short: Short course designed for informal learning
          description_audience: Ages 7-13
          stage: {}
          lessons: {}
        vigenere:
          title: Vigenere Cipher Widget
          description: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_short: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Vigenere:
              name: Vigenere
        algebraPD3a:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra blended online school year study'
          description_short: 'Phase 3 (Part 1): CS in Algebra blended online school year study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson Prep:
              name: Lesson Prep
            Updates - The Big Game and Projects:
              name: Updates - The Big Game and Projects
            Updates - The Design Recipe:
              name: Updates - The Design Recipe
            Updates - Tweaks and Polish:
              name: Updates - Tweaks and Polish
        sciencePD3_pre1:
          title: CS in Science PD3 Before 1st In-Person
          description: 'Phase 3: Academic Year Development (Segment One)'
          description_short: 'Phase 3: Academic Year Development Pre 1'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Prep With Your Modules:
              name: Prep With Your Modules
            The TLO:
              name: The TLO
            Welcome Back!:
              name: Welcome Back!
        frequency_analysis:
          title: Frequency Analysis Widget
          description: Use the Frequency Analysis Widget to analyze letter frequencies in an input text compared to expected frequencies for standard English. Use that comparison to explore cracking Shift and Substitution Ciphers.
          description_short: Use the Frequency Analysis Widget to analyze letter frequencies in a text compared to expected frequencies. Crack Shift and Substitution Ciphers.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Frequency Analysis:
              name: Frequency Analysis
        ECSPD3-Unit2:
          title: 'Exploring Computer Science: Unit 2'
          description: Online Professional Development Course
          description_short: Unit 2 Online PD
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 2:
              name: Intro to Unit 2
            Lesson Overviews:
              name: Lesson Overviews
            Teaching Strategies:
              name: Teaching Strategies
            Unit 2 Challenge:
              name: Unit 2 Challenge
        ECSPD3-Unit3:
          title: 'Exploring Computer Science: Unit 3'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 3:
              name: Intro to Unit 3
            Teaching Strategies:
              name: Teaching Strategies
            Unit 3 Challenge:
              name: Unit 3 Challenge
            Unit 3 Day-by-Day:
              name: Unit 3 Day-by-Day
        ECSPD3-Unit4:
          title: 'Exploring Computer Science: Unit 4'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 4:
              name: Intro to Unit 4
            Teaching Strategies:
              name: Teaching Strategies
            Unit 4 Challenge:
              name: Unit 4 Challenge
            Unit 4 Day-by-Day:
              name: Unit 4 Day-by-Day
        ECSPD3-Unit5:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Introduction to the Unit 5 Challenge:
              name: Introduction to the Unit 5 Challenge
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
            Unit 5 lessons:
              name: Unit 5 lessons
        ECSPD3-Unit6:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Alternative Ideas for Unit 6:
              name: Alternative Ideas for Unit 6
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: Unit 6 Challenge
            Unit 6 Overview:
              name: Unit 6 Overview
            Unit 6 lessons:
              name: Unit 6 lessons
        cspunit4draft:
          title: CS Principles Unit 4 - Data
          description: "Collect, analyze, and extract knowledge from data by programming and\r\nbuilding apps. Process data imported from other sources and also pull\r\ndata from live data APIs."
          description_short: Data
          description_audience: ''
          lesson_groups: {}
          lessons:
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Compiling Data:
              name: Compiling Data
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Creating Summary Tables:
              name: Creating Summary Tables
            Data, Security, and Privacy:
              name: Data, Security, and Privacy
            Designing Data Collection:
              name: Designing Data Collection
            Designing for Your User:
              name: Designing for Your User
            Discover a Data Story:
              name: Discover a Data Story
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            How is Data Collected?:
              name: How is Data Collected?
            Import, Export, and Visualize Data:
              name: Import, Export, and Visualize Data
            Interpreting Data Visualizations:
              name: Interpreting Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Permanent Data Storage:
              name: Permanent Data Storage
            Permanent Data Storage and Clicker Completion:
              name: Permanent Data Storage and Clicker Completion
            'Practice Create PT: Data App':
              name: 'Practice Create PT: Data App'
            Privacy in a Digital World:
              name: Privacy in a Digital World
            Privacy vs Utility:
              name: Privacy vs Utility
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Reading Records:
              name: Reading Records
            Search Terms:
              name: Search Terms
            Unique IDs, Delete and Update Records:
              name: Unique IDs, Delete and Update Records
            Using Data in the Real World:
              name: Using Data in the Real World
            Web Requests and APIs:
              name: Web Requests and APIs
            What Data Can Tell Us:
              name: What Data Can Tell Us
            Why Make Apps?:
              name: Why Make Apps?
        ScienceP3OLPT2:
          title: Computer Science in Science PD Phase 3A Post Work
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          lessons:
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Thinking About Implementation:
              name: Thinking About Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        algebraPD3b:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_short: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close and Next Steps:
              name: Close and Next Steps
            Getting Started:
              name: Getting Started
            Teaching Support - Lessons 1-3:
              name: Teaching Support - Lessons 1-3
            Teaching Support - Lessons 13-16:
              name: Teaching Support - Lessons 13-16
            Teaching Support - Lessons 17-20:
              name: Teaching Support - Lessons 17-20
            Teaching Support - Lessons 4-7:
              name: Teaching Support - Lessons 4-7
            Teaching Support - Lessons 8-12:
              name: Teaching Support - Lessons 8-12
        CSPPD3-Unit2:
          title: 'Computer Science Principles: Unit 2 PD'
          description: Online Exploration of CSP Unit 2
          description_short: Online Exploration of CSP Unit 2
          description_audience: ''
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 2 Overview:
              name: Unit 2 Overview
        duino:
          title: Experimenting with Arduino stuff
          description: Testing some tools for teaching with Arduinos
          lesson_groups: {}
          lessons:
            Basic Circuits:
              name: Basic Circuits
            Blinky Lights:
              name: Blinky Lights
            JunkBot:
              name: JunkBot
            Making Music:
              name: Making Music
        Special Fun:
          title: Special Fun
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          description: ''
          lesson_groups: {}
          lessons:
            Halloween 2015:
              name: Halloween 2015
        SpecialSeries:
          title: Special Levels
          description: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          lesson_groups: {}
          lessons:
            Spring 2016:
              name: Spring 2016
            Halloween 2015:
              name: Halloween 2015
        iceage:
          title: Ice Age Play Lab
          description: Create a story or make a game with Ice Age Play Lab!
          description_short: Create a story or make a game with Ice Age Play Lab!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Ice Age Play Lab:
              name: Ice Age Play Lab
        CSPPD3-Unit3:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Chunk 1 Overview:
              name: Chunk 1 Overview
            Chunk 2 Overview:
              name: Chunk 2 Overview
            Chunk 3 Overview:
              name: Chunk 3 Overview
            Chunk 4 Overview:
              name: Chunk 4 Overview
            Chunk 5 Overview:
              name: Chunk 5 Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Practice Performance Task:
              name: Practice Performance Task
            Share out and Submit:
              name: Share out and Submit
            Unit 3 Overview:
              name: Unit 3 Overview
        cspunit3temp:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introduction to Arrays:
              name: Introduction to Arrays
            Loops and Simulations:
              name: Loops and Simulations
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            While Loops:
              name: While Loops
        CSP-Unit3-Support:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          lesson_groups: {}
          lessons:
            Chunk 1 Overview:
              name: Chunk 1 Overview
            Chunk 2 Overview:
              name: Chunk 2 Overview
            Chunk 3 Overview:
              name: Chunk 3 Overview
            Chunk 4 Overview:
              name: Chunk 4 Overview
            Chunk 5 Overview:
              name: Chunk 5 Overview
            Practice Performance Task:
              name: Practice Performance Task
            Unit 3 Overview:
              name: Unit 3 Overview
        gumball:
          title: Gumball Play Lab
          description: Create a story or make a game with Gumball Play Lab!
          description_short: Create a story or make a game with Gumball Play Lab!
          lesson_groups: {}
          lessons:
            Gumball Play Lab:
              name: Gumball Play Lab
          description_audience: ''
        starwars:
          title: 'Star Wars: Building a Galaxy With Code (Javascript)'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2015:
              name: Hour of Code 2015
        starwarsblocks:
          title: 'Star Wars: Building a Galaxy With Code (Blockly)'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2015:
              name: Hour of Code 2015
        mc:
          title: Minecraft Hour of Code
          description: Use blocks of code to take Steve or Alex on an adventure through this Minecraft world.
          description_short: Explore a Minecraft world through code.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2015:
              name: Hour of Code 2015
        oceans:
          title: AI for Oceans
          description: Learn how AI and machine learning can be used to address world problems.
          description_short: Learn how AI and machine learning can be used to address world problems.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Oceans:
              name: Oceans
        CSPPD3-Unit3-pt2:
          title: 'Computer Science Principles: Unit 3 PD Challenges'
          description: Online Exploration of CSP Unit 3-- Lesson Challenges
          description_short: Online Exploration of CSP Unit 3-- Lesson Challenges
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Share out and Submit:
              name: Share out and Submit
        ScienceP3OLPT3:
          title: Computer Science in Science PD Pre-Phase 3B
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            "(optional) Refresh your connection to Complex Adaptive Systems":
              name: "(optional) Refresh your connection to Complex Adaptive Systems"
            Assessing Computer Models:
              name: Assessing Computer Models
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        cspunit5:
          title: "(old) CS Principles Unit 5 - Performance Tasks"
          description: This unit covers the preparation and completion of the Explore and Create Performance Tasks.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
        cspunit4:
          title: "(old) CS Principles Unit 4 - Data"
          description: Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. The data-rich world we live in also introduces many complex questions related to public policy, law, ethics and societal impact. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Discover a Data Story:
              name: Discover a Data Story
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Identifying People with Data:
              name: Identifying People with Data
            Intro to Data:
              name: Introduction to Data
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            The Cost of Free:
              name: The Cost of Free
            What is Big Data?:
              name: What is Big Data?
        CSPPD3-Unit4:
          title: 'Computer Science Principles: Unit 4 PD'
          description: Online Support for CSP Unit 4
          description_short: Support for CSP Unit 4
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Chapter 1 Overview:
              name: Chapter 1 Overview
            Chapter 2 Overview:
              name: Chapter 2 Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Practice Performance Tasks:
              name: Practice Performance Tasks
            Share out and Submit:
              name: Share out and Submit
            Unit 4 Overview:
              name: Unit 4 Overview
        cspunit6draft:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, and it concludes with a sampling of example projects that can be built using these tools.
          description_short: Data Apps
          description_audience: ''
          lesson_groups: {}
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Deleting Records:
              name: Deleting Records
            Final Project:
              name: Final Project
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Sample Apps:
              name: Sample Apps
            Updating Records:
              name: Updating Records
            Visualizing Data:
              name: Visualizing Data
        CSPPD3-Unit5:
          title: 'Computer Science Principles: Unit 5 PD'
          description: Online Support for CSP Unit 5
          description_short: Support for CSP Unit 5
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Create PT Breakdown:
              name: Create PT Breakdown
            Explore PT Breakdown:
              name: Explore PT Breakdown
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
        cspunit6:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Deleting Records:
              name: Deleting Records
            Final Project:
              name: Final Project
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Sample Apps:
              name: Sample Apps
            Updating Records:
              name: Updating Records
            Visualizing Data:
              name: Visualizing Data
        AlgebraA:
          title: 'Computer Science in Algebra: Course A'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Calc: Defining Variables':
              name: 'Calc: Defining Variables'
            'Calc: Evaluation Blocks':
              name: 'Calc: Evaluation Blocks'
            'Eval: Defining Functions':
              name: 'Eval: Defining Functions'
            'Eval: Functions':
              name: 'Eval: Functions'
            'Eval: Strings and Images':
              name: 'Eval: Strings and Images'
            'Eval: Writing Contracts':
              name: 'Eval: Writing Contracts'
            'Play Lab: Defining Functions':
              name: 'Play Lab: Defining Functions'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts'
            'Unplugged: Fast Functions':
              name: 'Unplugged: Fast Functions'
            'Unplugged: The Design Recipe':
              name: 'Unplugged: The Design Recipe'
        AlgebraB:
          title: 'Computer Science in Algebra: Course B'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Eval: Boolean Operators':
              name: 'Eval: Boolean Operators'
            'Eval: Conditionals':
              name: 'Eval: Conditionals'
            'Play Lab: Animation (Big Game)':
              name: 'Play Lab: Animation (Big Game)'
            'Play Lab: Boolean (Big Game)':
              name: 'Play Lab: Boolean (Big Game)'
            'Play Lab: Booleans':
              name: 'Play Lab: Booleans'
            'Play Lab: Collision Detection (Big Game)':
              name: 'Play Lab: Collision Detection (Big Game)'
            'Play Lab: Defining Variables (Big Game)':
              name: 'Play Lab: Defining Variables (Big Game)'
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Distance Formula'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'Unplugged: Conditionals and Piecewise Functions'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'Unplugged: Video Games and Coordinate Planes'
        gamelab-hackathon:
          title: Gamelab Hackathon
          description: A place to try things out in Game Lab
          description_short: Gamelab Hackathon
          lesson_groups: {}
          lessons:
            Middle_School_Hackathon:
              name: Middle_School_Hackathon
        algebraPD1:
          title: CS in Algebra Part 1
          description: Teach Algebra through Functional Programming
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        algebraPD3c:
          title: Computer Science in Algebra PD
          description: CS in Algebra end of year reflection
          description_short: CS in Algebra end of year reflection
          description_audience: ''
          lesson_groups: {}
          lessons:
            Getting Started:
              name: Getting Started
            Planning For the Future:
              name: Planning For the Future
            Sharing Student Work:
              name: Sharing Student Work
        csp1-2017:
          title: CSP Unit 1 - The Internet ('17-'18)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          lessons:
            Binary Numbers:
              name: Binary Numbers
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Encoding and Sending Formatted Text:
              name: Encoding and Sending Formatted Text
            HTTP and Abstraction:
              name: HTTP and Abstraction
            Number Systems:
              name: Number Systems
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Personal Innovations:
              name: Personal Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Routers and Redundancy:
              name: Routers and Redundancy
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Numbers:
              name: Sending Numbers
            The Internet:
              name: The Internet
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Post-Course Survey:
              name: Post-Course Survey
        csp2-2017:
          title: CSP Unit 2 - Digital Information ('17-'18)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1:
              display_name: 'Chapter 1: Encoding and Compressing Complex Information'
            csp2_2:
              display_name: 'Chapter 2: Manipulating and Visualizing Data'
            cspSurvey:
              display_name: Survey
          lessons:
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Discover a Data Story:
              name: Discover a Data Story
            Encode a Complex Thing:
              name: Encode a Complex Thing
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Intro to Data:
              name: Intro to Data
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Text Compression:
              name: Text Compression
            Unit 2 Chapter 1 Assessment:
              name: Unit 2 Chapter 1 Assessment
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Practice PT - Encode an Experience:
              name: Practice PT - Encode an Experience
            Post-Course Survey:
              name: Post-Course Survey
        csp3-2017:
          title: CSP Unit 3 - Intro to Programming ('17-'18)
          description: "This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.\r\n\r\nThis unit was last updated October 30th, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating Functions:
              name: Creating Functions
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
            CSP End-of-Semester Mid-course survey:
              name: CSP End-of-Semester Mid-course survey
            CSP Mid-course survey:
              name: CSP Mid-course survey
            Please complete the CSP Mid-course survey!:
              name: Please complete the CSP Mid-course survey!
            Post-Course Survey:
              name: Post-Course Survey
        csp4-2017:
          title: CSP Unit 4 - Big Data and Privacy ('17-'18)
          description: "The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1:
              display_name: 'Chapter 1: The World of Big Data and Encryption'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            Alice and Bob and Asymmetric Keys:
              name: Alice and Bob and Asymmetric Keys
            Cracking the Code:
              name: Cracking the Code
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
            Identifying People with Data:
              name: Identifying People with Data
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Public Key Crypto:
              name: Public Key Crypto
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Simple Encryption:
              name: Simple Encryption
            The Cost of Free:
              name: The Cost of Free
            What is Big Data?:
              name: What is Big Data?
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
            Practice PT - Big Data and Security Dilemmas:
              name: Practice PT - Big Data and Security Dilemmas
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Post-Course Survey:
              name: Post-Course Survey
            Student Post-Course Survey:
              name: Student Post-Course Survey
        csp5-2017:
          title: CSP Unit 5 - Building Apps ('17-'18)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          lessons:
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            Digital Assistant Project:
              name: Digital Assistant Project
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: Introducing Design Mode
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: Introduction to Conditional Logic
            Introduction to Digital Assistants:
              name: Introduction to Digital Assistants
            Loops and Simulations:
              name: Loops and Simulations
            Multi-screen Apps:
              name: Multi-screen Apps
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            Understanding Program Flow and Logic:
              name: Understanding Program Flow and Logic
            User Input and Strings:
              name: User Input and Strings
            Using Variables in Apps:
              name: Using Variables in Apps
            While Loops:
              name: While Loops
            Edited lessons ABOVE this line:
              name: Edited lessons ABOVE this line
            Buttons and Events:
              name: Buttons and Events
            Make Your Own Multi-Screen App:
              name: Make Your Own Multi-Screen App
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            "'If' Statements Unplugged":
              name: "'If' Statements Unplugged"
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Getting started with If Statements:
              name: Getting started with If Statements
            Unit 3 Chapter 1 Assessment 3:
              name: Unit 3 Chapter 1 Assessment 3
            If statements:
              name: If statements
            Unit 3 Assessment 3:
              name: Unit 3 Assessment 3
            Unit 3 Assessment 4:
              name: Unit 3 Assessment 4
            If-else-if and Conditional Logic:
              name: If-else-if and Conditional Logic
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Possibly use later:
              name: Possibly use later
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 5 - Practice AP questions:
              name: Unit 5 Assessment 5 - Practice AP questions
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Multi-Screen Apps:
              name: Multi-Screen Apps
            '"if" Statements Unplugged':
              name: '"if" Statements Unplugged'
            Boolean Expressions and "if" Statements:
              name: Boolean Expressions and "if" Statements
            Post-Course Survey:
              name: Post-Course Survey
        csp6:
          title: CSP Unit 6 - AP Performance Tasks
          description: This unit covers the preparation and completion of the Create and Explore Performance Tasks.
          description_short: Lessons guide students to prepare for and complete the AP Performance Tasks.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        CSDU3-Draft:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: Temp place to work on U3 of Disco
          description_short: Programming
          description_audience: ''
          lessons:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Collision Detection:
              name: Collision Detection
            Collisions:
              name: Collisions
            Complex Conditionals:
              name: Complex Conditionals
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Drawing in Game Lab:
              name: Drawing in Game Lab
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Sprite Movement Methods:
              name: Sprite Movement Methods
            Sprites and Images:
              name: Sprites and Images
            Sprites and Properties:
              name: Sprites and Properties
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Functions:
              name: Functions
            Platform Jumper:
              name: Platform Jumper
            Defender:
              name: Defender
            'Project: Build a Game':
              name: 'Project: Build a Game'
            Velocity:
              name: Velocity
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
        2016_sciencePD_phase1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: In Partnership with Project GUTS
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        TEMP CSD Unit 3:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: ''
          description_short: Programming
          description_audience: ''
          lessons:
            Drawing in Game Lab:
              name: Drawing in Game Lab
        CSF_Secret_Sample:
          title: Secret Sample
          description: Test of new educational philosophy
          description_short: This is a secret...shhhhh
          description_audience: Ages 8-18
          lesson_groups: {}
          lessons:
            Sample Stage:
              name: Sample Stage
        ECSPD1:
          title: ECS Part 1
          description: Two hour introduction to your Professional Learning Program for the ECS Version 5 curriculum
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Background and Context:
              name: Background and Context
            'Classroom and Workshop Style ':
              name: 'Classroom and Workshop Style '
            ECS Curriculum:
              name: ECS Curriculum
            Welcome to Phase 1!:
              name: Welcome to Phase 1!
            Wrap Up:
              name: Wrap Up
            Classroom and workshop style:
              name: Classroom and workshop style
            'Classroom and workshop style ':
              name: 'Classroom and workshop style '
        algebraFacilitator:
          title: Computer Science in Algebra Facilitator Pre Work
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          lesson_groups: {}
          lessons:
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        sciencePD1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        cspoptional:
          title: CS Principles Optional Lessons
          description: Optional lessons and content across all of the CS Principles units are listed here
          description_short: Optional
          description_audience: ''
          lesson_groups: {}
          lessons:
            Algorithms Detour - How Routers Learn:
              name: Algorithms Detour - How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Unit 1 - Encoding Numbers in the Real World:
              name: Unit 1 - Encoding Numbers in the Real World
            Unit 1 - Sending Bits in the Real World:
              name: Unit 1 - Sending Bits in the Real World
            Unit 1 - Algorithms Detour - Minimum Spanning Tree:
              name: Unit 1 - Algorithms Detour - Minimum Spanning Tree
            Unit 1 - Algorithms Detour - Shortest Path:
              name: Unit 1 - Algorithms Detour - Shortest Path
            Unit 1 - How Routers Learn:
              name: Unit 1 - How Routers Learn
            Unit 4 - Hard Problems - The Traveling Salesperson Problem:
              name: Unit 4 - Hard Problems - The Traveling Salesperson Problem
            Unit 4 - One-Way Functions - The WiFi Hotspot Problem:
              name: Unit 4 - One-Way Functions - The WiFi Hotspot Problem
        cspunit1-support:
          title: Online Support for CSP Unit 1
          description: This is a test Professional Learning Course
          description_audience: ''
          description_short: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Chapter Overviews:
              name: Chapter Overviews
            Encoding and Sending Numbers:
              name: Encoding and Sending Numbers
            Intro to the Unit:
              name: Intro to the Unit
            Running a Constructive Classroom:
              name: Running a Constructive Classroom
            Sending Binary Messages:
              name: Sending Binary Messages
            Strategies for Student Writing:
              name: Strategies for Student Writing
            Supporting Peer Learning:
              name: Supporting Peer Learning
            'Tool Talk: Intro to Netsim':
              name: 'Tool Talk: Intro to Netsim'
        test-teaching-ap-cs-unit-1:
          title: Test CPS PD
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            test Unit 1 content module Alpha:
              name: test Unit 1 content module Alpha
            test Unit 1 content module Bravo:
              name: test Unit 1 content module Bravo
            test Unit 1 content module Charlie:
              name: test Unit 1 content module Charlie
            test Unit 1 practice module Delta:
              name: test Unit 1 practice module Delta
            test Unit 1 practice module Echo:
              name: test Unit 1 practice module Echo
            test Unit 1 practice module Foxtrot:
              name: test Unit 1 practice module Foxtrot
            test Unit 1 required reading:
              name: test Unit 1 required reading
        allthehiddenthings:
          title: All the Hidden Things!
          description: Unreleased level types for UI testing as admin
          description_short: Unreleased level types for UI testing as admin
          lesson_groups: {}
          lessons:
            Contained Levels:
              name: Contained Levels
            Game Lab:
              name: Game Lab
        cspunit1-support-test:
          title: CSP Unit 1 teacher support
          description: Online Supports for CSP Unit 1
          description_audience: ''
          description_short: ''
          lesson_groups: {}
          lessons:
            Unit 1 Overview:
              name: Unit 1 Overview
        cspunit1-tools:
          title: netsim task completion
          description: introduction to the internet simulator and a discussion of how we use it to teach the internet
          lesson_groups: {}
          lessons:
            netsim:
              name: netsim
        csp-facilitators:
          title: CSP Tool Overview
          description: A collection of tools from the CS Principles course. These levels provide a glimpse into the tools we use throughout the curriculum to
          description_short: Introduction to CS Principles for new Facilitators
          description_audience: ''
          lesson_groups: {}
          lessons:
            Introduction to Events:
              name: Introduction to Events
            Introduction to Text Compression:
              name: Introduction to Text Compression
            Turtle Programming:
              name: Turtle Programming
        cspassessment:
          title: "[Deprecated] CS Principles Culminating Assessment"
          description: 'This assessment has been deprecated and is scheduled for removal in Summer of 2017.  Students may complete the test and see their own results, but a teacher will not be able to see results for students in a section.  Please use the official CSP practice exam from the College Board.  [This 55-question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.]'
          description_short: This assessment has been deprecated and is scheduled for removal in Summer of 2017.
          description_audience: ''
          lesson_groups: {}
          lessons:
            CS Principles Culminating Assessment:
              name: CS Principles Culminating Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            CSP Longitudinal Contact Request:
              name: CSP Longitudinal Contact Request
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            "[Deprecated - teacher cannot see results] CSP Culminating Assessment":
              name: "[Deprecated - teacher cannot see results] CSP Culminating Assessment"
            'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment'
            'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment'
            RQB Questions test:
              name: RQB Questions test
        cspexam1-mWU7ilDYM9:
          title: CS Principles Culminating Assessment - Part 1
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 1 of a two-part 50 question exam.
          description_audience: ''
          lesson_groups: {}
          lessons:
            CS Principles Culminating Assessment Part 1:
              name: CS Principles Culminating Assessment Part 1
        cspexam2-AKwgAh1ac5:
          title: CS Principles Culminating Assessment - Part 2
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.  It is part 2 of a two-part 50 question exam'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 2 of a two-part 50 question exam.
          description_audience: ''
          lesson_groups: {}
          lessons:
            CS Principles Culminating Assessment Part 2:
              name: CS Principles Culminating Assessment Part 2
        CSDU4-Draft:
          title: " TEMP CSD Unit 4 - The Design Process"
          description: Temp place to work on U4 of Disco
          description_short: Design Process and App Lab
          description_audience: ''
          lessons:
            Adding Functionality (optional):
              name: Adding Functionality (optional)
            Design Mode:
              name: Design Mode
            Making it Interactive:
              name: Making it Interactive
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            Discovering Users:
              name: Discovering Users
            UCD Micro Activity:
              name: UCD Micro Activity
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Re-designing a Space:
              name: Re-designing a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            User Research:
              name: User Research
            Low Fidelity Prototyping:
              name: Low Fidelity Prototyping
            Preparing for Prototype Testing:
              name: Preparing for Prototype Testing
            Prototype Testing:
              name: Prototype Testing
            Preparing for App Testing:
              name: Preparing for App Testing
            App Testing:
              name: App Testing
            Planning for Improvements:
              name: Planning for Improvements
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation Prep:
              name: App Presentation Prep
            App Presentation:
              name: App Presentation
        CSDU1-Draft:
          title: " TEMP CSD Unit 1"
          description: Temp place to work on U1 of Disco
          description_short: Problem Solving
          lessons:
            Exploring Apps:
              name: Exploring Apps
            Processing Information:
              name: Processing Information
        CSDU2-Draft:
          title: " TEMP CSD Unit 2"
          description: Temp place to work on U2 of Disco
          description_short: Web Development
          description_audience: ''
          lessons:
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Describing Webpages:
              name: Describing Webpages
            Designing Code for Computers:
              name: Designing Code for Computers
            Digital Footprint:
              name: Digital Footprint
            Images on the Web:
              name: Images on the Web
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            Quality Websites:
              name: Quality Websites
            Text on the Web:
              name: Text on the Web
            Website Design:
              name: Website Design
            Intellectual Property:
              name: Intellectual Property
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            'Personal Website: Connecting Pages':
              name: 'Personal Website: Connecting Pages'
            Classes and External Style Sheets:
              name: Classes and External Style Sheets
            Box Model and Page Layout:
              name: Box Model and Page Layout
            'Personal Website: Midway Check':
              name: 'Personal Website: Midway Check'
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Introduction to HTML:
              name: Introduction to HTML
            Headers and Lists:
              name: Headers and Lists
            Designing Web Pages:
              name: Designing Web Pages
            Holding:
              name: Holding
            Describing Web pages:
              name: Describing Web pages
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            External Style Sheets:
              name: External Style Sheets
            Usability and Accessibility:
              name: Usability and Accessibility
            Peer Review:
              name: Peer Review
            Describing Web Pages:
              name: Describing Web Pages
        CSDU5-Draft:
          title: " TEMP CSD Unit 5"
          description: Temp place to work on U5 of Disco
          description_short: Data
          stage: {}
          lessons: {}
        CSDU6-Draft:
          title: " TEMP CSD Unit 6 "
          description: Temp place to work on U6 of Disco
          description_short: Makerlab
          stage: {}
          lessons: {}
        CSF_Secret_Sample_Story:
          title: Secret Sample with Story
          description: Test of new educational philosophy with guiding storyline
          description_short: This is a secret...shhhh
          description_audience: Ages 8-18+
          lesson_groups: {}
          lessons:
            Sample Stage:
              name: Sample Stage
        MikeTest:
          title: MikeTest
          description: Trying not to break anything
          description_short: Just a script for playing around
          description_audience: Ages 8-98
          lesson_groups: {}
          lessons:
            Artist Functions:
              name: Artist Functions
            Sample Stage:
              name: Sample Stage
            The same thing with named levels:
              name: The same thing with named levels
            You are a coding STAR:
              name: You are a coding STAR
        artistExemplar:
          title: Artist Exemplar
          description: These artist levels will knock the socks off of third graders
          description_short: How can we make the artist levels really hum?
          description_audience: Ages 8-18
          lesson_groups: {}
          lessons:
            Artist Exemplar:
              name: Artist Exemplar
        teachercon:
          title: TeacherCon Supports
          description: We will use this during TeacherCon to deliver supports and materials for sessions
          description_short: We will use this during TeacherCon to deliver supports and materials for sessions
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: Introduction to Teachercon
            Lesson 1,10:
              name: 'Lesson 1.10: Routers and Redundancy'
            Lesson 1,11:
              name: 'Lesson 1.11: Packets and Making a Reliable Internet'
            Lesson 1,4:
              name: 'Lesson 1.4: Number Systems (Circle Triangle Square)'
            Lesson 1,6:
              name: 'Lesson 1.6: Sending Numbers'
            Lesson 1,9:
              name: 'Lesson 1.9: Internet Addressing (Battleship)'
            Lesson 2,10:
              name: 'Lesson 2.10: Good and Bad Data Visualizations'
            Lesson 2,2:
              name: 'Lesson 2.2: Text Compression'
            Lesson 2,3:
              name: 'Lesson 2.3: Black and White Pixelation'
            Measuring Student Learning:
              name: Measuring Student Learning
        kinderTest:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            Kindergarten Stage 1:
              name: Kindergarten Stage 1
        gradeKinder:
          title: Kindergarten
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: Debugging
            Events:
              name: Events
            Events Unplugged:
              name: Events Unplugged
            Fuzz Fiesta:
              name: Fuzz Fiesta
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            Loops:
              name: Loops
            Loops Intro:
              name: Loops Intro
            Loops Unplugged:
              name: Loops Unplugged
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: Programming
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: Sequences & Algorithms
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            'Programming Unplugged: Happy Maps':
              name: 'Programming Unplugged: Happy Maps'
        grade4:
          title: Grade 4
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 9-99
          lessons:
            'Bee: Determine the Concept':
              name: 'Bee: Determine the Concept'
            'Bee: Functions (Course 3)':
              name: 'Bee: Functions (Course 3)'
            Build a Star Wars Game!:
              name: Build a Star Wars Game!
            Digital Citizenship:
              name: Digital Citizenship
            Explore project ideas:
              name: Explore project ideas
            'Farmer: Functions (New)':
              name: 'Farmer: Functions (New)'
            Final Project - Presentation Day:
              name: Final Project - Presentation Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            More Programming with Scratch:
              name: More Programming with Scratch
            'New Artist: Functions':
              name: 'New Artist: Functions'
            Scaffolded Project Stage (Loops, Events, Conditionals, Functions):
              name: Scaffolded Project Stage (Loops, Events, Conditionals, Functions)
            Songwriting:
              name: Songwriting
            'Unplugged: Funky Functions':
              name: 'Unplugged: Funky Functions'
        grade1:
          title: Grade 1
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: Debugging
            Events:
              name: Events
            Events Unplugged:
              name: Events Unplugged
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            Loops:
              name: Loops
            Loops Intro:
              name: Loops Intro
            Loops Unplugged:
              name: Loops Unplugged
            More Computer Science:
              name: More Computer Science
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: Programming
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: Sequences & Algorithms
            Unspotted Bugs:
              name: Unspotted Bugs
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Events Unplugged: The Big Event':
              name: 'Events Unplugged: The Big Event'
        grade5:
          title: Grade 5
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 10-110
          lesson_groups: {}
          lessons:
            'Artist: For Loops':
              name: 'Artist: For Loops'
            'Artist: Functions with Parameters':
              name: 'Artist: Functions with Parameters'
            'Artist: Variables':
              name: 'Artist: Variables'
            'Bee: For Loops':
              name: 'Bee: For Loops'
            'Bee: Functions with Parameters':
              name: 'Bee: Functions with Parameters'
            Digital Citizenship:
              name: Digital Citizenship
            Explore project ideas:
              name: Explore project ideas
            Final Project - Presentation Day:
              name: Final Project - Presentation Day
            Final Project - Review/Revise Day:
              name: Final Project - Review/Revise Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            'Play Lab: Variables':
              name: 'Play Lab: Variables'
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            'Unplugged: Envelope Variables':
              name: 'Unplugged: Envelope Variables'
            'Unplugged: For Loop Fun':
              name: 'Unplugged: For Loop Fun'
            'Unplugged: Songwriting with Parameters':
              name: 'Unplugged: Songwriting with Parameters'
        ecs-unit1:
          title: ECS Unit 1
          description: 'Unit 1: Human-Computer Interaction'
          description_short: 'Unit 1: Human-Computer Interaction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
        ecs-unit2:
          title: ECS Unit 2
          description: 'Unit 2: Problem Solving'
          description_short: 'Unit 2: Problem Solving'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 2:
              name: Intro to Unit 2
            Lesson Overviews:
              name: Lesson Overviews
            Teaching Strategies:
              name: Teaching Strategies
            Unit 2 Challenge:
              name: Unit 2 Challenge
        ecs-unit3:
          title: ECS Unit 3
          description: 'Unit 3: Web Design'
          description_short: 'Unit 3: Web Design'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 3:
              name: Intro to Unit 3
            Teaching Strategies:
              name: Teaching Strategies
            Unit 3 Challenge:
              name: Unit 3 Challenge
            Unit 3 Day-by-Day:
              name: Unit 3 Day-by-Day
        ecs-unit4:
          title: ECS Unit 4
          description: 'Unit 4: Programming'
          description_short: 'Unit 4: Programming'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 4:
              name: Intro to Unit 4
            Teaching Strategies:
              name: Teaching Strategies
            Unit 4 Challenge:
              name: Unit 4 Challenge
            Unit 4 Day-by-Day:
              name: Unit 4 Day-by-Day
        ecs-unit5:
          title: ECS Unit 5
          description: 'Unit 5: Computer and Data Analysis'
          description_short: 'Unit 5: Computer and Data Analysis'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Introduction to the Unit 5 Challenge:
              name: Introduction to the Unit 5 Challenge
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
            Unit 5 lessons:
              name: Unit 5 lessons
            Unit 5 Challenge:
              name: Unit 5 Challenge
            Close & Next Steps:
              name: Close & Next Steps
        ecs-unit6:
          title: ECS Unit 6
          description: 'Unit 6: Robotics'
          description_short: 'Unit 6: Robotics'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Alternative Ideas for Unit 6:
              name: Alternative Ideas for Unit 6
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: Unit 6 Challenge
            Unit 6 Overview:
              name: Unit 6 Overview
            Unit 6 lessons:
              name: Unit 6 lessons
            Close & Next Steps:
              name: Close & Next Steps
        grade3:
          title: Grade 3
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            " Bee: Conditionals":
              name: " Bee: Conditionals"
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            Bee Debugging:
              name: Bee Debugging
            Bounce:
              name: Bounce
            Build a Game:
              name: Build a Game
            Farmer Conditional with Cards:
              name: Farmer Conditional with Cards
            Farmer Debug Relay Programming:
              name: Farmer Debug Relay Programming
            Farmer Graph Paper Programming:
              name: Farmer Graph Paper Programming
            Farmer Impacts of Computing:
              name: Farmer Impacts of Computing
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            'Maze: Conditionals with Loops':
              name: 'Maze: Conditionals with Loops'
            'Maze: Nested Loops':
              name: 'Maze: Nested Loops'
            More Programming with CS4FN:
              name: More Programming with CS4FN
            Robot Running the Farm:
              name: Robot Running the Farm
            Unplugged Conditionals with Loops:
              name: Unplugged Conditionals with Loops
        alltheplcthings:
          title: Sample course for PLC things
          description: This is a sample course that has all of the plc special things. Enrollment in this course does nothing. Right now, it's just a copy of TeacherCon
          description_short: This is a sample course that has all of the plc special things
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: Introduction to Teachercon
            Lesson 1,10:
              name: Lesson 1,10
            Lesson 1,11:
              name: Lesson 1,11
            Lesson 1,4:
              name: Lesson 1,4
            Lesson 1,6:
              name: Lesson 1,6
            Lesson 1,9:
              name: Lesson 1,9
            Lesson 2,10:
              name: Lesson 2,10
            Lesson 2,2:
              name: Lesson 2,2
            Lesson 2,3:
              name: Lesson 2,3
            Test stage with bubbles:
              name: Test stage with bubbles
        csd3-2017:
          title: CSD Unit 3 - Animations and Games ('17-'18)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: Programación
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Complex Conditionals:
              name: Complex Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Sprites and Images:
              name: Sprites and Images
            Sprites and Properties:
              name: Sprites and Properties
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Velocity:
              name: Velocity
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: Collision Detection
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: Collisions
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: Functions
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: The Game Design Process
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            'Project: Build a Game':
              name: 'Project: Build a Game'
            'Project: Design a Game':
              name: 'Project: Design a Game'
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Shapes and Randomness:
              name: Shapes and Randomness
              description_student: This lesson extends the drawing skills to include width and height and introduces the concept of random number generation. The class learns to draw with versions of ellipse() and rect() that include width and height parameters and to use the background() block to fill the screen with color. At the end of the progression the class is introduced to the randomNumber() block and uses the new blocks to draw a randomized rainbow snake.
              description_teacher: In this lesson students continue to develop their drawing skills. At the beginning of the lesson a teacher-led discussion connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or "parameters". Students learn to draw with versions of `ellipse()` and `rect()` that include width and height parameters. They also learn to use the `background()` block. At the end of the progression students are introduced to the `randomNumber()` block. Combining all of these skills students will draw a randomized rainbow snake at the end of the lesson.
            Variables:
              name: Variables
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Sprites:
              name: Sprites
              description_student: In order to create more interesting and detailed images, the class is introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.  At the end of the lesson, everyone creates a scene using sprites.
              description_teacher: In order to create more interesting and detailed images, students are introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.
            The Draw Loop:
              name: The Draw Loop
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables through an unplugged activity. Using notecards and string to simulate variables within a program, students implement a few short programs. Once comfortable with this syntax, students use the same process with sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: Sprite Movement
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Conditionals:
              name: Conditionals
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: Keyboard Input
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the simple `keyDown()` command learned yesterday, students will learn about several other keyboard input commands as well as ways to take mouse input.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Project - Design a Game:
              name: Project - Design a Game
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
            Parameters and Randomization:
              name: Parameters and Randomization
            Shapes and Randomization:
              name: Shapes and Randomization
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
        grade2:
          title: Grade 2
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            At The Dog Park:
              name: At The Dog Park
            Caring for My New Pet:
              name: Caring for My New Pet
            Exploring the Neighborhood:
              name: Exploring the Neighborhood
            Flappy:
              name: Flappy
            Getting Loopy with Puppy:
              name: Getting Loopy with Puppy
            Make a Dog Tag:
              name: Make a Dog Tag
            More CS with Run Marco:
              name: More CS with Run Marco
            New Home for My Pet:
              name: New Home for My Pet
            Online Internet Safety:
              name: Online Internet Safety
            Online My New Pet Jigsaw:
              name: Online My New Pet Jigsaw
            Puppy Event:
              name: Puppy Event
            Puppy Introduction:
              name: Puppy Introduction
            Puppy Loops:
              name: Puppy Loops
            How to behave in the lab_How to use Code_org puzzles:
              name: How to behave in the lab/How to use Code.org puzzles
            Programming at home with my pet:
              name: Programming at home with my pet
            Binary Bracelets:
              name: Binary Bracelets
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            The Big Event:
              name: The Big Event
        transferring-over:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            20-hr Stage 2:
              name: 20-hr Stage 2
            20-hr Stage 9:
              name: 20-hr Stage 9
            Course 2 Stage 17:
              name: Course 2 Stage 17
            Course 3 Stage 16:
              name: Course 3 Stage 16
            Course 3 Stage 17:
              name: Course 3 Stage 17
        k5concepts:
          title: K5 Concepts
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Binary:
              name: Binary
            Conditionals:
              name: Conditionals
            Events:
              name: Events
            For Loops:
              name: For Loops
            Functions:
              name: Functions
            Functions with Parameters:
              name: Functions with Parameters
            Loops:
              name: Loops
            Nested Loops:
              name: Nested Loops
            Variables:
              name: Variables
            While Loops:
              name: While Loops
        algebrapdnext:
          title: Computer Science in Algebra PD Phase 2
          description: Teach Algebra through Functional Programming
          description_short: "\tPhase 3: School Year Support"
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson Prep:
              name: Lesson Prep
            Teacher Dashboard:
              name: Teacher Dashboard
            Teaching with Puzzles:
              name: Teaching with Puzzles
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: The Design Recipe
            Welcome!:
              name: Welcome!
        csp-pre-survey:
          title: CS Principles Pre-Survey
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Anonymous student pre-survey:
              name: Anonymous student pre-survey
            NEW Unit 1 Chapter 1 Assessment:
              name: NEW Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
        csd1-2017:
          title: CSD Unit 1 - Problem Solving ('17-'18)
          description_short: "  Learn how humans work with computers to solve problems."
          description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            Intro to Problem Solving:
              name: Intro to Problem Solving
              description_student: 'The class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
              description_teacher: 'In this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: This lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
              description_teacher: This lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: 'In this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems.'
              description_teacher: |-
                In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.

                This lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day.
            What is a Computer?:
              name: What is a Computer?
              description_student: In this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition.
              description_teacher: 'In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.

'
            Representing Information:
              name: Representing Information
            Processing with Bits:
              name: Processing with Bits
            Human vs. Computer Processing:
              name: Human vs. Computer Processing
            Processing with Apps:
              name: Processing with Apps
            'Project: Apps and Problem Solving':
              name: 'Project: Apps and Problem Solving'
            Human vs Computer Processing:
              name: Human vs Computer Processing
            Input and Output:
              name: Input and Output
              description_student: In this the class students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device.  To conclude the lesson the class examines common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device. Earlier in the activity students are prompted to focus on more obvious physical inputs and outputs (e.g. a keyboard as an input or a screen as an output) but later discussions lead students to consider less obvious examples (e.g. that a touch screen is both an input and output, or the fact that the Internet can serve as both input and output). Throughout the lesson the teacher records inputs and outputs that are identified on a T-Chart at the front of the room. To conclude the lesson students examine common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
            Processing:
              name: Processing
              description_student: This lesson dives deeper into the concept of processing that was introduced as part of the definition of a computer.  Pairs work together to puta deck of cards in order, a form of processing information.  In the end, the class discusses what processing means within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that forces students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Storage:
              name: Storage
              description_student: This lesson focuses on the storage component of the definition of a computer, within the content of processing information. The class spends the majority of the lesson developing and sharing algorithms to process information, with an emphasis on how much storage is needed for any particular algorithm. The lesson concludes with a discussion of the importance of storage while processing information.
              description_teacher: Students explore the importance of storage within the Input-Storage-Processing-Output model of a computer. The warm-up activity asks students to reflect on the types of information they have seen computers store in the past, like documents, photographs, or videos. The unplugged main activity has students develop an algorithm to process a small pile of cards in search of specific cards within the deck. Constraints on how students can move the cards force them to consider the importance of storage even while they are processing the deck. The lesson concludes with a discussion of the two types of storage students saw in this lesson and the importance of storage while processing information.
            Apps and Problem Solving:
              name: Apps and Problem Solving
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. In pairs, students evaluate various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
            Project - Propose an App:
              name: Project - Propose an App
              description_student: To conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            CS Discoveries Rapid Survey:
              name: CS Discoveries Rapid Survey
        csp-online-test:
          title: test space for csp online support
          description_short: This is a sample course for testing csp online pd
          description: This is a test space for online pd. Enrollment in this course does nothing.
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 1 Overview:
              name: Unit 1 Overview
            'Lessons 2-3: Binary Messages':
              name: 'Lessons 2-3: Binary Messages'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            'Lessons 4-6: Encoding and Sending Numbers':
              name: 'Lessons 4-6: Encoding and Sending Numbers'
            'Lesson 7: Encoding and Sending Text':
              name: 'Lesson 7: Encoding and Sending Text'
            'lessons 9: Internet Addressing':
              name: 'lessons 9: Internet Addressing'
            'lessons 10: Routers and Redundancy':
              name: 'lessons 10: Routers and Redundancy'
            'lessons 11-12: Protocols and Abstraction':
              name: 'lessons 11-12: Protocols and Abstraction'
            'Lessons 2 - 3: Binary Messages':
              name: 'Lessons 2 - 3: Binary Messages'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'Lessons 4 - 6: Encoding and Sending Numbers'
            'Lesson 9: Internet Addressing':
              name: 'Lesson 9: Internet Addressing'
            'Lessons 10 - 11: Redundancy and Packets':
              name: 'Lessons 10 - 11: Redundancy and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'Lessons 1 - 2: Bytes, File Sizes, and Text Compression'
            'Lessons 3 - 4 : Encoding Images':
              name: 'Lessons 3 - 4 : Encoding Images'
            'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            'Lessons 7 - 11: Interpreting Visual Data':
              name: 'Lessons 7 - 11: Interpreting Visual Data'
            'Lessons 12 - 15: Communicating with Visualizations':
              name: 'Lessons 12 - 15: Communicating with Visualizations'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'Lessons 7 - 10: Interpreting Visual Data'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'Lessons 11 - 15: Communicating with Visualizations'
            Unit 2 Overview:
              name: Unit 2 Overview
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 3: Algorithms':
              name: 'Lessons 1 - 3: Algorithms'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers'
            Event Driven Programming:
              name: Event Driven Programming
            Variables and Strings:
              name: Variables and Strings
            Conditionals and Boolean Logic:
              name: Conditionals and Boolean Logic
            While Loops and Introduction to Arrays:
              name: While Loops and Introduction to Arrays
            Processing Arrays and Functions with Return Values:
              name: Processing Arrays and Functions with Return Values
            Unit 5 Overview:
              name: Unit 5 Overview
        csp1-support:
          title: Unit 1 Online Professional Learning Course
          description_short: Teacher Professional Learning Course for CSP Unit 1
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 1.
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 1 Overview:
              name: Unit 1 Overview
            'Lessons 2 - 3: Binary Messages':
              name: 'Lessons 2 - 3: Binary Messages'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'Lessons 4 - 6: Encoding and Sending Numbers'
            'Lesson 7: Encoding and Sending Text':
              name: 'Lesson 7: Encoding and Sending Text'
            'Lesson 9: Internet Addressing':
              name: 'Lesson 9: Internet Addressing'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        basketball:
          title: Choose your team and make a basketball game
          description_audience: ''
          description_short: Choose your team and make a basketball game
          description: Choose your team and make a basketball game
          lesson_groups: {}
          lessons:
            Bounce:
              name: Bounce
        sample-csp5:
          lessons:
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
        hoc-encryption:
          title: 'Hour of Code: Simple Encryption'
          description_audience: ''
          description_short: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          description: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          lesson_groups: {}
          lessons:
            Simple Encryption:
              name: Simple Encryption
        csd2-2017:
          title: CSD Unit 2 - Web Development ('17-'18)
          description_audience: ''
          description_short: "  Learn to build your own web site in Web Lab."
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Quality Websites:
              name: Quality Websites
            Website Design:
              name: Website Design
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: Text on the Web
            Images on the Web:
              name: Images on the Web
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: In this lesson covers common issues that arise when designing web pages in HTML. The class will correct errors in a sequence of increasingly complex web pages found on Code Studio and learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read.
              description_teacher: Students deal with common issues that arise when designing web pages in HTML. Students will correct errors in a sequence of increasingly complex web pages. In the process they will learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read. At the end of the lesson students create a list of strategies for debugging web pages and ensuring they are easy to read and maintain.
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            External Style Sheets:
              name: External Style Sheets
            Peer Review:
              name: Peer Review
            Box Model and Page Layout:
              name: Box Model and Page Layout
            Digital Footprint:
              name: Digital Footprint
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: "As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r\n\r\nStudents begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r\n\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt, the class learns about the inner workings of search engines and has an opportunity to flex their analytical skills in a search for strange and unlikely animals.
              description_teacher: This lesson encourages students to think more critically about how web searches work and how to find relevant and trustworthy information online. After viewing and discussion a video about how search engines work, students will search for information about several unlikely animals. They'll need to analyze the sites they find for reliability in order to identify which of the animals is actually a hoax.
            Intellectual Property:
              name: Intellectual Property
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            'Project: Personal Portfolio Website':
              name: 'Project: Personal Portfolio Website'
            Images in HTML:
              name: Images in HTML
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: "This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\r\n\r\n"
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Exploring Websites:
              name: Exploring Websites
              description_student: This lesson covers the purposes that a website might serve, both for the users and the creators. The class explores a handful of the most-used websites in the United States and discusses how each of those sites is useful for users and how it might also serve its creators.
              description_teacher: Every website has a purpose, a reason someone created it and others use it. In this lesson, students will start to consider the purposes a website might serve, both for the users and the creators. Students will explore a handful of the most-used websites in the United States and try to figure out how each of those sites is useful for users and how they might also serve their creators.
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Intro to HTML:
              name: Intro to HTML
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headers:
              name: Headers
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headers.  Students learn how the different header elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Lists:
              name: Lists
              description_student: This lesson introduces ordered and unordered lists and the associated  &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; HTML tags.  The class practices using the tags, then goes back to the personal web page project to add a new HTML page that includes the new tags.
              description_teacher: Students are introduced to ordered and unordered lists in HTML and work through a few levels in which they use the &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to their project, where they add a new HTML page.  Inside the new page, they write the HTML to display a recipe, top ten list, or any other content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: Intellectual Property and Images
              description_student: This lesson covers how to use media such as images, video, or music created by others a website while respecting the rights of the creator of that media. After first studying Creative Commons licensing, the class learns how to add images to web pages, and how to give proper attribution when doing so.
              description_teacher: "Starting with an discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \r\n\r\nFinally, with a common understanding of the restrictions of various Creative Commons licenses, students learn how to add images to their web pages using the &lt;img&gt; tag."
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
              description_student: 'This lesson covers hyperlinks, which allow web developers to connect pages together into one website.  The class will link together all the previous pages into one project, and create navigation bars for each page before publishing the entire site to the Web.  '
              description_teacher: "After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \r\n\r\n"
            RGB Colors and Classes:
              name: RGB Colors and Classes
              description_student: This lesson covers classes and custom colors. The class first learns how to specify custom colors using RGB (red, green, blue) values, then applies these colors to a new Four Seasons web page, which uses CSS classes.  Using classes, the class adds more styles to the Four Seasons web page, then use them to style their personal websites.
              description_teacher: In this lesson, students first learn how to specify custom colors using their RGB (red, green, blue) values.  They then apply these colors to a new Four Seasons web page, which uses CSS classes.  CSS classes allow web developers to treat groups of elements they want styled differently than other elements of the same type. Using classes, students add more styles to the Four Seasons web page, then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
              description_student: In the last few days of the unit, the class finalizes their personal websites, working with peers to get feedback, review the rubric, and put the finishing touches on the site. To cap off the unit, everyone shares their projects and how they were developed.
              description_teacher: "Students have spent a lot of time throughout the unit working on their Personal Website. In the final couple of days students finalize their websites.  They work with peers to get feedback, put the finishing touches on the websites, review the rubric and reflect on their process. To cap off the unit, they will share their projects and also a overview of the process they took to get to that final design.\r\n"
            Headings:
              name: Headings
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headings.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
        csp2-support:
          title: Unit 2 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 2
          description: 'This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 2. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 2 Overview:
              name: Unit 2 Overview
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'Lessons 1 - 2: Bytes, File Sizes, and Text Compression'
            'Lessons 3 - 4 : Encoding Images':
              name: 'Lessons 3 - 4 : Encoding Images'
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'Lessons 7 - 10: Interpreting Visual Data'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'Lessons 11 - 15: Communicating with Visualizations'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        csd4-2017:
          title: CSD Unit 4 - The Design Process ('17-'18)
          description_audience: ''
          description_short: "  Learn how to design a program that meets the needs of your users."
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
              description_student: The class explores a variety of different teapot designs to consider how design choices or made and why. Using the teapots as an example, the class will explore the relationship between users, their needs, and the design of objects they use.
              description_teacher: To kick off a unit devoted to group problem solving and developing products for other users, students begin by investigating the design of various teapots. Students analyze each teapot, attempting to identify how specific user needs might have informed its design. By considering these design choices, and attempting to match each teapot with a potential user, students can begin to see how taking a user-centered approach to designing products (both physical and digital) can make those products more useful and usable. To conclude the activity, students are asked to propose some changes to one of the teapots that would make it more useful or usable.
            Understanding Your User:
              name: Understanding Your User
              description_student: Using user profiles, the class explores how different users might react to a variety of products. Role playing as a different person, each member of the class will get to experience designs through someone else's eyes.
              description_teacher: "Designers need to understand their users’ needs in order to create useful products.  This lesson encourages students to think about how to design for another person by role-playing as someone else using a user profile and reacting as that user to a series of products.  Each student is assigned a user profile describing a person, which they then use to choose appropriate products, critique product design, and suggest improvements to design.\r\n"
            Discovering Users:
              name: Discovering Users
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
              description_student: In small groups, the class uses the design process to come up with ideas for smart clothing. From brainstorming, to identifying users, to finally proposing a design, this is the first of several opportunities in this unit to practicing designing a solution for the needs of others.
              description_teacher: This lesson guides students through an abbreviated version of the design process they will be seeing throughout this unit. Students first brainstorm a list of potential users of smart clothing. As a class, they then group these ideas into broad categories and each group will choose one category of user. Groups repeat this process to brainstorm needs or concerns of their user, eventually categorizing these needs and choosing one to focus on. Finally, students design a piece of smart clothing, using the specific needs and concerns they brainstormed to guide their decision making. At the end of the class students quickly share their decision-making process and get feedback on how well their product addresses the user need they selected.
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Redesigning a Space:
              name: Redesigning a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
              description_student: To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.
              description_teacher: To kick off the app design project that lasts through the end of the unit, students first explore a number of apps designed for social impact that have been created by other students. The class then reviews the Define, Prepare, Try, and Reflect steps of the Problem Solving process as they develop an idea for an app of their own with social impact. Finally, students will form project teams and lay out a contract for how the team will function throughout the development of their app.
            Market Research:
              name: Market Research
              description_student: Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.
              description_teacher: In this lesson students research apps similar to the one they intend on creating to better understand the needs of their users. Students work within their teams to search the Internet for other apps, then evaluate the ones they find interesting. By the end of the lesson, each team will have a clearer idea about the type of app they want to create and further refine who their target users are. Each team will maintain a list of citations for all the apps they examined for use in their final presentation.
            Paper Prototypes:
              name: Paper Prototypes
              description_student: Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
              description_teacher: "Before starting to design apps, we need to help students to better scope their expectations. Because students will eventually be prototyping these apps in App Lab, they will be in better shape if their ideas align with the kinds of apps that are easily prototyped in App Lab. Teams start this scoping by looking through several example apps designed to demonstrate apps that can be created with App Lab. Teams then can chose one (or more) of the apps as a basis for their own. From there, teams have some time to discuss the basic functionality of their app before using 3x5 index cards to develop paper prototypes.\r\n"
            Prototype Testing:
              name: Prototype Testing
              description_student: In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.
              description_teacher: The primary purpose of developing paper prototypes is that they allow for quick testing and iteration before any code is written. This lesson is focused on giving teams a chance to test their prototypes before moving to App Lab. Teams develop a plan to test with users before running prototype tests with multiple other students in the class (and potentially outside the class). In order to test the prototype with the users, the students will have to assign roles in the testing (the “narrator”, the “computer” and the “observers”) as well as have some questions prepared for the user to answer after the test is complete.
            Digital Design:
              name: Digital Design
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin work on an interactive digital version based on the paper prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital versions of a paper prototype. From there, each group member builds out at least one page of their app in App Lab, to be later combined into a single app.
            Event Driven Programming:
              name: Event Driven Programming
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they then begin to program using simple events. Students learn basic event driven programming by making several small apps that respond to users clicking buttons. Following that, group members share the screens they've developed and each group member imports all of the screens into their own copy of the app, which they will make interactive by connecting buttons to events.
            Basic App Functionality:
              name: Basic App Functionality
              description_student: Teams add a bit more polish and functionality to their apps before testing. Several examples are provided to demonstrate simple code that adds cool features.
              description_teacher: At this point in the development process, each student should have what is essentially a digital version of the paper prototype - static screens that are linked together with buttons. For many apps this is all you really need to start testing with users, but this lesson will give students a chance to explore simple ways to add a bit more functionality to their apps before moving into the testing phase. The programming concepts introduced in this lesson are **not necessary** to successfully complete the project, and can be omitted at your discretion.
            Testing the App:
              name: Testing the App
              description_student: Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.
              description_teacher: 'By the end of the previous lesson each team should have a minimum viable prototype of their app. The primary purpose of this lesson is to have the team actually test the app with other people, preferably from the target audience the app is intended for, or from different teams in the class while observers from the team will record the results on the worksheets they used in the planning phase. As with testing the paper prototypes, teams will start by planning for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              name: Improving and Iterating
              description_student: Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
              description_teacher: Teams have at this point developed an app prototype that has gone through multiple iterations and rounds of user testing. With the information and guidance gained from the last round of user testing, each student has the opportunity to plan for and implement improvements to the team app. Depending on the time you have available, and student interest, you can run the cycle of testing and iteration as many times as you see fit.
            App Presentation:
              name: App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Prototypes:
              name: Feedback and Prototypes
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Identifying User Needs:
              name: Identifying User Needs
              description_student: Up to this point the users that the class has considered have all been remote, and the only information from users has come through text or role playing. Now the class will rely on each other as potential users, and pairs will get to interview each other to identify needs that could be addressed by developing an app.
              description_teacher: 'Up to this point students have focused on designing for users who are, to some degree, distanced from them. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. This is distance is designed to help students get outside their own head when thinking about users, but in order to get information more directly from an actual user, students need to rely on their classmates. In this lesson students pair up to become users (and designers) for each other, allowing everyone to directly interview their end user and ask questions to better inform their design. Each student pair interviews each other, attempting to identify a specific need that could be addressed by an app. '
            Project - Paper Prototype:
              name: Project - Paper Prototype
              description_student: Using the interview information from the previous lesson, the class comes up with app ideas to address the needs of their users. To express those ideas, and test out their effectiveness, each student creates and tests paper prototypes of their own.
              description_teacher: Based on the peer interview from the previous lesson, each student comes up with an idea for an app that will address their user's problem. Students then get to create their own paper prototype of their app ideas by drawing "screens" on individual notecards. A project guide directs students through the process including building the app and testing it with their user to see if their assumptions about the user interfaces they created are accurate.
            Linking Screens:
              name: Linking Screens
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they can then link together using code. Students learn basic event driven programming by building up the model app that they started in the previous lesson. In addition to the screen that students designed yesterday, they'll learn how to create additional screens and even import screens made by others.
            User Interfaces:
              name: User Interfaces
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Testing:
              name: Feedback and Testing
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Project - App Presentation:
              name: Project - App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
        minecraft:
          title: Minecraft Hour of Code Designer
          description_audience: ''
          description_short: Program animals and other Minecraft creatures in your own version of Minecraft.
          description: Program animals and other Minecraft creatures in your own version of Minecraft.
          lesson_groups: {}
          lessons:
            Minecraft Hour of Code Designer:
              name: Minecraft Hour of Code Designer
        flappy-impact-study:
          title: Flappy Code with Survey
          description_audience: ''
          description_short: 'Write your own Flappy game in less than 10 minutes! '
          description: Want to write your own game in less than 10 minutes? Try our Flappy Code tutorial! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lesson_groups: {}
          lessons:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Flappy Code:
              name: Flappy Code
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        coursea-draft:
          title: 'CS Fundamentals: Course A'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: "Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \r\nRecommended for grade K."
          lesson_groups: {}
          lessons:
            'Debugging: Bugs in Codeville':
              name: 'Debugging: Bugs in Codeville'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: 'Programming: Happy Maps'
            Programming in Maze:
              name: Programming in Maze
            Being Safe Online:
              name: Being Safe Online
            'Loops: Happy Loops':
              name: 'Loops: Happy Loops'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            Fuzz Fiesta:
              name: Fuzz Fiesta
            Going Places Safely:
              name: Going Places Safely
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
        courseb-draft:
          title: 'CS Fundamentals: Course B'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for 1st grade.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            Sequence & Algorithms:
              name: Sequence & Algorithms
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Being Safe Online:
              name: Being Safe Online
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            More Computer Science:
              name: More Computer Science
            Keep it Private:
              name: Keep it Private
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Your Digital Footprint:
              name: Your Digital Footprint
        coursec-draft:
          title: 'CS Fundamentals: Course C'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 2nd grade.
          lesson_groups: {}
          lessons:
            Programming in Maze:
              name: Programming in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: Loops in Maze
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Puppy Introduction:
              name: Puppy Introduction
            Online Internet Safety:
              name: Online Internet Safety
            Build a Flappy Game:
              name: Build a Flappy Game
            More CS with Run Marco:
              name: More CS with Run Marco
            Binary Bracelets:
              name: Binary Bracelets
            Events in Play Lab:
              name: Events in Play Lab
            Your Digital Footprint:
              name: Your Digital Footprint
            Building a Foundation:
              name: Building a Foundation
            Screen Out the Mean:
              name: Screen Out the Mean
            Debugging in Maze:
              name: Debugging in Maze
            Loops in Harvester:
              name: Loops in Harvester
        coursed-draft:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 3rd grade.
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Events in Bounce:
              name: Events in Bounce
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Nested Loops in Artist
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Bee:
              name: Debugging in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals with Bee:
              name: Conditionals with Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Harvester
            Impacts of Computing:
              name: Impacts of Computing
            More Programming with CS4FN:
              name: More Programming with CS4FN
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Conditionals in Bee:
              name: Conditionals in Bee
            Digital Citizenship:
              name: Digital Citizenship
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops:
              name: Nested Loops
            Introduction:
              name: Introduction
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
            Debugging in Collector:
              name: Debugging in Collector
        coursee-draft:
          title: 'CS Fundamentals: Course E'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 4th grade.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            Digital Citizenship:
              name: Digital Citizenship
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept in Bee:
              name: Determine the Concept in Bee
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            More Programming with Scratch:
              name: More Programming with Scratch
            Private and Personal Information:
              name: Private and Personal Information
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Determine the Concept:
              name: Determine the Concept
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
        coursef-draft:
          title: 'CS Fundamentals: Course F'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 5th grade.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Digital Citizenship:
              name: Digital Citizenship
            Envelope Variables:
              name: Envelope Variables
            Variables in Play Lab:
              name: Variables in Play Lab
            Variables in Artist:
              name: Variables in Artist
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            'Functions with Parameters: Songwriting with Parameters':
              name: 'Functions with Parameters: Songwriting with Parameters'
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Present Your Project
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            The Power of Words:
              name: The Power of Words
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Introduction:
              name: Introduction
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
        classic-hoc-impact-study:
          title: Hour of Code with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lessons:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        hoc-impact-study:
          title: Classic Maze with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lesson_groups: {}
          lessons:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        sports:
          title: Code your own sports game
          description_audience: ''
          description_short: Mix and match across sports
          description: Mix and match across sports
          lesson_groups: {}
          lessons:
            Sports:
              name: Sports
        2016_sciencePD-phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: Wrap-Up
        2016_sciencePD_phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: Wrap-Up
        sciencepd3-2016:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Welcome Back!:
              name: Welcome Back!
            The TLO:
              name: The TLO
            Prep With Your Modules:
              name: Prep With Your Modules
        csp3-support:
          title: Unit 3 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 3
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 3.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 3: Algorithms':
              name: 'Lessons 1 - 3: Algorithms'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        csdgraveyard:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Introduction to Styling with CSS (2.7):
              name: Introduction to Styling with CSS (2.7)
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            External Style Sheets:
              name: External Style Sheets
        csp4-support:
          title: Unit 4 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 4
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 4.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 2: Data in the Real World':
              name: 'Lessons 1 - 2: Data in the Real World'
            'Lessons 1 - 4: Data in the Real World':
              name: 'Lessons 1 - 4: Data in the Real World'
            'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption':
              name: 'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption'
            'Lessons 8 - 9: Practice PT':
              name: 'Lessons 8 - 9: Practice PT'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            Unit 4 Overview:
              name: Unit 4 Overview
        sciencepd4:
          title: 'CS in Science: Part 4'
          description_audience: ''
          description_short: 'Phase 3: Reflect on semester 1 workshop'
          description: 'Phase 3: Reflect on semester 1 workshop'
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Revisiting Complex Adaptive Systems:
              name: Revisiting Complex Adaptive Systems
            Thinking About Implementation:
              name: Thinking About Implementation
            Wrap-Up:
              name: Wrap-Up
        csp-ca-a:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Commutative Assessment A:
              name: Commutative Assessment A
        science-pd-ol-pt-5:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Welcome!:
              name: Welcome!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Wrap-Up:
              name: Wrap-Up
        csf2harvey:
          title: Mr. Harvey's Class
          description_audience: ''
          description_short: ''
          description: Special bubbles just for our class!
          lesson_groups:
            end_of_course_project:
              display_name: End of Course Project
            content:
              display_name: Content
          lessons:
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Prepare your snowflake for 3D printing:
              name: Prepare your snowflake for 3D printing
            Binary:
              name: Binary
            Snowflakes:
              name: Snowflakes
        sciencepd5:
          title: 'CS in Science: Part 5'
          description_audience: ''
          description_short: 'Phase 3: Prepare for semester 2 workshop'
          description: 'Phase 3: Prepare for semester 2 workshop'
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Wrap-Up:
              name: Wrap-Up
        csp5-support:
          title: Unit 5 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 5
          description: "####  **This course is associated with a version of the course that is no longer supported.  Please visit our Courses Overview page (https://studio.code.org/courses) to see our most current curricula.**\r\n\r\nThis is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 5."
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 5 Overview:
              name: Unit 5 Overview
            Event Driven Programming:
              name: Event Driven Programming
            Variables and Strings:
              name: Variables and Strings
            Conditionals and Boolean Logic:
              name: Conditionals and Boolean Logic
            While Loops and Introduction to Arrays:
              name: While Loops and Introduction to Arrays
            Processing Arrays and Functions with Return Values:
              name: Processing Arrays and Functions with Return Values
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
        csp6-support:
          stage: {}
          title: AP Preparation and Resources for Teachers
          description_audience: ''
          description_short: ''
          description: 'COMING SOON: soon this page will host a set of resources for teachers preparing for the AP exam'
          lesson_groups: {}
          lessons: {}
        csppostap-2017:
          title: CSP Post-AP - Databases and Using Data in Your Apps ('17-'18)
          description_audience: ''
          description_short: Learn to collect and use data in App Lab apps.
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          lesson_groups:
            content:
              display_name: Content
            cspSurvey:
              display_name: Survey
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Deleting Records:
              name: Deleting Records
            Updating Records:
              name: Updating Records
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Visualizing Data:
              name: Visualizing Data
            Sample Apps:
              name: Sample Apps
            Final Project:
              name: Final Project
            Post-Course Survey:
              name: Post-Course Survey
        unit6-csd-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            '':
              name: ''
        gamelab-demo:
          lesson_groups: {}
          lessons:
            Simple Sprite Movement:
              name: Simple Sprite Movement
        csd6-draft:
          title: CSD Unit 6 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
          lessons:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Uplugged:
              name: Input Uplugged
            The Circuit Playground:
              name: The Circuit Playground
            Foo:
              name: Foo
            Lists:
              name: Lists
            Lights:
              name: Lights
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            Input Unplugged:
              name: Input Unplugged
            Timed Loop:
              name: Timed Loop
            Timed Loops:
              name: Timed Loops
            For Loops:
              name: For Loops
            Physical Input:
              name: Physical Input
            List and For Loops:
              name: List and For Loops
            'Project: Board Output':
              name: 'Project: Board Output'
            For Loops with UI and Board:
              name: For Loops with UI and Board
            Lists and For Loops:
              name: Lists and For Loops
            Analog Input:
              name: Analog Input
            Polling Events:
              name: Polling Events
            Sensor Applications:
              name: Sensor Applications
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Map:
              name: Map
            Board Events:
              name: Board Events
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Getting and Setting Properties:
              name: Getting and Setting Properties
            The Program Design Process:
              name: The Program Design Process
            Getters:
              name: Getters
            Getting Properties:
              name: Getting Properties
            Designing Screens with Code:
              name: Designing Screens with Code
            Arrays:
              name: Arrays
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
        workshop-gamelab:
          title: Game Lab Workshop
          description_audience: Teachers attending an in-person Game Lab Workshop
          description_short: Level progression to accompany an in-person Game Lab Workshop
          description: This level progression is intended to accompany an in-person Game Lab Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of Game Lab.
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction
            Sprites:
              name: Sprites
            Input:
              name: Input
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
        csd5-draft:
          title: Draft of CSD5
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
          lessons:
            new stage:
              name: new stage
            Interpreting Data:
              name: Interpreting Data
            Data in the Real World:
              name: Data in the Real World
            Combining Representations:
              name: Combining Representations
            Representing Images:
              name: Representing Images
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Numbers Part 1:
              name: Representing Numbers Part 1
            Representing Numbers Part 2:
              name: Representing Numbers Part 2
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
            Representing Numbers:
              name: Representing Numbers
            8-bit Numbers:
              name: 8-bit Numbers
            Encryption:
              name: Encryption
            Structuring Data:
              name: Structuring Data
        applab-1hour:
          title: App Lab 1 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 1 hour. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          lesson_groups: {}
          lessons:
            App Lab Workshop:
              name: App Lab Workshop
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            Room Escape:
              name: Room Escape
            Extra:
              name: Extra
        applab-2hour:
          title: App Lab 2 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 2 hours. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
        coursed-ramp:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction
        workshop-maker:
          title: Maker Toolkit Workshop
          description_audience: Teachers attending an in-person Maker Toolkit Workshop
          description_short: Level progression to accompany an in-person Maker Toolkit Workshop
          description: This level progression is intended to accompany an in-person Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of App Lab and the Maker Toolkit.
          lesson_groups: {}
          lessons:
            App Lab Basics:
              name: App Lab Basics
            The Circuit Playground:
              name: The Circuit Playground
            Physical Input:
              name: Physical Input
            Analog Input:
              name: Analog Input
        coursee-ramp:
          title: coursee-ramp
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            'Real Life Algorithms: Dice Race':
              name: 'Real Life Algorithms: Dice Race'
        csd6-2017:
          title: CSD Unit 6 - Physical Computing ('17-'18)
          description_audience: ''
          description_short: Learn to program with physical devices.
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Computing Innovations:
              name: Computing Innovations
              description_student: Explore a wide variety of new and innovative computing platforms while expanding your understanding of what a computer can be.
              description_teacher: To kick off the final unit of this course, students will do some research into interesting innovations in computing. This lesson will expose students to wider variety of computing form factors (what a computer looks like) and fields that are impacted by computing. Later in this unit students will look back on the devices they encountered in this lesson as they develop their own physical computing devices.
            Input Unplugged:
              name: Input Unplugged
              description_student: Experience two different ways that an app can take input from a user, while learning more about the event-driven programming model used in App Lab.
              description_teacher: In preparation for delving deeper into programming with App Lab, students will explore how a handful of different programs written in both Game Lab and App Lab handle taking input from the user. After comparing and contrasting the approaches they saw in the example apps, students group up to act out the two different models for input (conditionals in an infinite loop and asynchronous events) to gain a better understanding of how they work.
            Event Types:
              name: Event Types
              description_student: Review the basics of programming in App Lab and explore some new event types that can be used in your programs.
              description_teacher: In this lesson students review the material they learned about creating apps in App Lab from Unit 4 in order to prepare for a return to App Lab in this unit. This review should be modified to best meet the needs of your students and their experience and familiarity with programming in App Lab. In addition to the review the students will also experiment with a variety of new event types that they likely have not seen before.
            Getters and Setters:
              name: Getters and Setters
              description_student: By reading and changing the content on the screen of an app, the class starts to build apps that only need a single screen. Even with just one screen, these techniques allow for lots of user interaction and functionality.
              description_teacher: In Unit 4 students learned a very simple approach to app development in App Lab that required a separate screen for most interactions. To expand the kinds of apps that students can make, and to encourage them to think in new ways about how users interact with apps, we introduce the concept of "getters" and "setters". These are commands which can get and set (or change) the content and properties of various design elements. In this lesson students build up simple apps that only require a single screen, the content of which is changed using getters and setters.
            The Circuit Playground:
              name: The Circuit Playground
              description_student: Get to know the Circuit Playground, the circuit board that will be used throughout the rest of this unit. Using App Lab, develop programs that use the Circuit Playground for output.
              description_teacher: In this lesson students get their first opportunity to write programs that use the Circuit Playground. After first inspecting the board visually and hypothesizing possibly functionalities, students move online where they will learn to write applications that control an LED. By combining App Lab screens with the Circuit Playgrounds, students can gradually start to integrate elements of the board as an ouput device while relying on App Lab for user input.
            Lists:
              name: Lists
              description_student: Learn how lists can be used to store multiple values in a single variable name.
              description_teacher: A list, also commonly known as an array, is a type of variable that can store many values at once. In this lesson, students learn to create lists which store a series of related values in a single variable. After creating lists of their own, students will learn about ways to extract either a specific or random value from a list using its index.
            Lights:
              name: Lights
              description_student: Using the concept of lists from the previous lesson, the class writes programs that control the ten color LEDs on the Circuit Playground.
              description_teacher: The Circuit Playground includes 10 color LEDs in a ring around the outside edge. These LEDs are accessible in code as a list called `colorLeds`. Building on the understanding of lists from the previous lesson, students write programs that control the color LEDs by accessing them from a list.
            For Loops:
              name: For Loops
              description_student: The class learns about repeating instructions using a _for loop_, first by controlling a "robot" through a grid, and then in App Lab.
              description_teacher: Students are introduced to the _for loop_ in this lesson as a way to repeat some code a certain numbers of times. Students start with an unplugged activity where they use for loops to navigate a robot across a grid. Once complete, students then take their knowledge into App Lab where they write programs that rely on iteration using a _for loop_.
            Lists and For Loops:
              name: Lists and For Loops
              description_student: Combining _lists_ and _for loops_ allows you to write code that impacts every element of a list, regardless of how long it is. The class uses this structure to write programs that process all of the elements in lists, include the list of color LEDs.
              description_teacher: 'Using a _for loop_ to iterate over all of the elements in an array is a really useful construct in most programming languages. In this lesson, students combine what they have learned about lists and for loops in order to start learning this pattern. Students use for loops to go through each element in a list one at a time without having to write code for each element. Towards the end of the lesson students will apply this with the `colorLed` list on the board. '
            Timed Loops:
              name: Timed Loops
              description_student: In this lesson we build on students understanding of for loops to learn about a more sophisticated structure called a timed loop. Unlike for loops, you can control how quickly a timed loop repeats, and other code (such as event handlers) can be run between iterations of the loop. This allows us to create interesting animations that repeat infinitely, while still allowing other code to run alongside it.
              description_teacher: In this lesson we build on students understanding of _for loops_ to learn about a more sophisticated structure called a _timed loop_. Unlike _for loops_, you can control how quickly a _timed loop_ repeats, and other code (such as event handlers) can be run between iterations of the loop. This allows us to create interesting animations that repeat infinitely, while still allowing other code to run alongside it.
            'Project: Board Output':
              name: 'Project: Board Output'
              description_student: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
              description_teacher: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
            Physical Input:
              name: Physical Input
              description_student: Using the hardware buttons and switch, the class develops programs that use the Circuit Playground as an input.
              description_teacher: This lesson transitions students from consider the Circuit Playground as strictly an output device towards using it as a tool for both input and output. Starting with the hardware buttons and switch,sing the hardware buttons and switch, students learn to use `onBoardEvent()`, analogously to `onEvent()`, in order to take input from their Circuit Playgrounds.
            Analog Input:
              name: Analog Input
              description_student: Explore the analog inputs on the Circuit Playground, writing programs that respond to the environment through sensors.
              description_teacher: In this lesson, students explore how the three analog sensors (sound, light, and temperature) can be used to write programs that respond to changes in the environment. The use of these sensors marks a transition in terms of how users interact with a program. By using sensors as an input, the user of an app doesn't have to directly interact with it at all, or may interact without actually realizing they are doing so.
            Sensor Applications:
              name: Sensor Applications
              description_student: Work through three small apps to better understand the uses of the sensors from the previous lesson.
              description_teacher: To follow up on the sensors that students learned about in the previous lesson, we walk through a three apps, each of which relies on a different sensor. These three apps can serve as jumping off points for students in the final project that follows.
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
              description_student: Develop innovative computing devices of your own design, using everything you've learned throughout this course.
              description_teacher: 'In this final project for the course, students team to develop and test a prototype for an innovative computing device based on the Circuit Playground. Using the inputs and outputs available on the board, groups will create programs that allow for interesting and unique user interactions. '
            Designing Screens with Code:
              name: Designing Screens with Code
              description_student: By reading and changing the content on the screen of an app, the class starts to build apps that only need a single screen. Even with just one screen, these techniques allow for lots of user interaction and functionality.
              description_teacher: In Unit 4 students learned a very simple approach to app development in App Lab that required a separate screen for most interactions. To expand the kinds of apps that students can make, and to encourage them to think in new ways about how users interact with apps, we introduce the `setProperty()` block. This command can be used to set the content and properties of various UI elements, allowing students to write programs that update information on a single screen, instead of manually creating duplicate screens. In this lesson students build up simple apps that only require a single screen, the content of which is changed using `setProperty()`.
            Board Events:
              name: Board Events
              description_student: Using the hardware buttons and switch, the class develops programs that use the Circuit Playground as an input.
              description_teacher: This lesson transitions students from consider the Circuit Playground as strictly an output device towards using it as a tool for both input and output. Starting with the hardware buttons and switch,sing the hardware buttons and switch, students learn to use `onBoardEvent()`, analogously to `onEvent()`, in order to take input from their Circuit Playgrounds.
            Getting Properties:
              name: Getting Properties
              description_student: This lesson introduces students to the getProperty block, which allows them to access the properties of different elements with code.  Students first practice using the block to determine what the user has input in various user interface elements. Students later use getProperty and setProperty together with the counter patters to make elements move across the screen.  A new screen element, the slider, and a new event trigger, onChange, are also introduced.
              description_teacher: This lesson introduces students to the `getProperty` block, which allows them to access the properties of different elements with code.  Students first practice using the block to determine what the user has input in various user interface elements. Students later use `getProperty` and `setProperty` together with the counter patters to make elements move across the screen.  A new screen element, the slider, and a new event trigger, `onChange`, are also introduced.
            The Program Design Process:
              name: The Program Design Process
              description_student: This lesson introduces students to the process they will use to design programs of their own throughout this unit. This process is centered around a project guide which asks students to sketch out their screens, identify elements of the Circuit Playground to be used, define variables, and describe events before they begin programming. This process is similar to the Game Design Process that we used in Unit 3. In this lesson students begin by playing a tug o' war style game where the code is hidden. They discuss what they think the board components, events, and variables would need to be to make the program. They are then given a completed project guide which shows one way to implement the project. Students are then walked through this process through a series of levels. At the end of the lesson students have an opportunity to make improvements to the program to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design programs of their own throughout this unit. This process is centered around a project guide which asks students to sketch out their screens, identify elements of the Circuit Playground to be used, define variables, and describe events before they begin programming. This process is similar to the Game Design Process that we used in Unit 3. In this lesson students begin by playing a tug o' war style game where the code is hidden. They discuss what they think the board components, events, and variables would need to be to make the program. They are then given a completed project guide which shows one way to implement the project. Students are then walked through this process through a series of levels. At the end of the lesson students have an opportunity to make improvements to the program to make it their own.
            'Project: Make a Game':
              name: 'Project: Make a Game'
              description_student: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
              description_teacher: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
            Arrays:
              name: Arrays
              description_student: Learn how lists can be used to store multiple values in a single variable name.
              description_teacher: An array is an ordered collection of items, usually of the same type. In this lesson, students learn ways to access either a specific or random value from a list using its index.  They then learn how to access the colorLEDs array that controls the behavior of the color LEDs on the Circuit Playground.  Students will control the color and intensity of each LED, then use what they have learned to program light patterns to create a light show on their Circuit Playground.
            Making Music:
              name: Making Music
              description_student: In this lesson students will use the buzzer to its full extent by producing sounds, notes, and songs with the buzzer. Students start with a short review of the buzzer's frequency and duration parameters, then move on to the concept of notes.  Notes allow students to constrain themselves to frequencies that are used in Western music and provide a layer of abstraction that helps them to understand which frequencies might sound good together.  Onces students are able to play notes on the buzzer, they use arrays to hold and play sequences of notes, forming simple songs.
              description_teacher: In this lesson students will use the buzzer to its full extent by producing sounds, notes, and songs with the buzzer. Students start with a short review of the buzzer's frequency and duration parameters, then move on to the concept of notes.  Notes allow students to constrain themselves to frequencies that are used in Western music and provide a layer of abstraction that helps them to understand which frequencies might sound good together.  Onces students are able to play notes on the buzzer, they use arrays to hold and play sequences of notes, forming simple songs.
            Arrays and For Loops:
              name: Arrays and For Loops
              description_student: Combining _lists_ and _for loops_ allows you to write code that impacts every element of a list, regardless of how long it is. The class uses this structure to write programs that process all of the elements in lists, include the list of color LEDs.
              description_teacher: Using a _for loop_ to iterate over all of the elements in an array is a really useful construct in most programming languages. In this lesson, students learn the basics of how a _for loop_ can be used to repeat code, and then combine it with what they've already learned about arrays to write programs that process all elements in an array. Students use for loops to go through each element in a list one at a time without having to write code for each element. Towards the end of the lesson students will apply this with the `colorLed` list on the board to create an app that changes all of the LEDs each time a button is clicked.
            Accelerometer:
              name: Accelerometer
              description_student: In this lesson, students will explore the accelerometer and its capabilities. They’ll become familiar with its events and properties, as well as create multiple programs utilizing the accelerometer similar to those they’ve likely come across in real world applications.
              description_teacher: In this lesson, students will explore the accelerometer and its capabilities. They’ll become familiar with its events and properties, as well as create multiple programs utilizing the accelerometer similar to those they’ve likely come across in real world applications.
            Functions with Parameters:
              name: Functions with Parameters
              description_student: The lesson starts with a quick review of parameters, in the context of App Lab blocks that they students have seen recently.  Students then look at examples of parameters within user-created functions in App Lab and create and call functions with parameters for themselves, using them to control multiple elements on a screen.  Afterwards, students use for loops to iterate over an array, passing each element into a function.  Last, students use what they have learned to create a star catching game.
              description_teacher: The lesson starts with a quick review of parameters, in the context of App Lab blocks that they students have seen recently.  Students then look at examples of parameters within user-created functions in App Lab and create and call functions with parameters for themselves, using them to control multiple elements on a screen.  Afterwards, students use for loops to iterate over an array, passing each element into a function.  Last, students use what they have learned to create a star catching game.
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
              description_student: Wire simple circuits to create a physical prototype using cheap and easily found materials.
              description_teacher: In preparation for this chapter's final project, students will learn how to develop a prototype of a physical object that includes a Circuit Playground. Using a modelled project planning guide, students will learn how to wire a couple of simple circuits and to build prototypes that can communicate the intended design of a product, using cheap and easily found materials such as cardboard and duct tape.
            Innovations in Computing:
              name: Innovations in Computing
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Innovations in Computing_:
              name: Innovations in Computing
              description_student: Explore a wide variety of new and innovative computing platforms while expanding your understanding of what a computer can be.
              description_teacher: To kick off the final unit of this course, students will do some research into interesting innovations in computing. This lesson will expose students to wider variety of computing form factors (what a computer looks like) and fields that are impacted by computing. Later in this unit students will look back on the devices they encountered in this lesson as they develop their own physical computing devices.
            Designing Screens with Code_:
              name: Designing Screens with Code
              description_student: By reading and changing the content on the screen of an app, the class starts to build apps that only need a single screen. Even with just one screen, these techniques allow for lots of user interaction and functionality.
              description_teacher: In Unit 4 students learned a very simple approach to app development in App Lab that required a separate screen for most interactions. To expand the kinds of apps that students can make, and to encourage them to think in new ways about how users interact with apps, we introduce the `setProperty()` block. This command can be used to set the content and properties of various UI elements, allowing students to write programs that update information on a single screen, instead of manually creating duplicate screens. In this lesson students build up simple apps that only require a single screen, the content of which is changed using `setProperty()`.
            The Circuit Playground_:
              name: The Circuit Playground
              description_student: Get to know the Circuit Playground, the circuit board that will be used throughout the rest of this unit. Using App Lab, develop programs that use the Circuit Playground for output.
              description_teacher: In this lesson students get their first opportunity to write programs that use the Circuit Playground. After first inspecting the board visually and hypothesizing possibly functionalities, students move online where they will learn to write applications that control an LED. By combining App Lab screens with the Circuit Playgrounds, students can gradually start to integrate elements of the board as an ouput device while relying on App Lab for user input.
            Input Unplugged_:
              name: Input Unplugged
              description_student: Experience two different ways that an app can take input from a user, while learning more about the event-driven programming model used in App Lab.
              description_teacher: In preparation for delving deeper into programming with App Lab, students will explore how a handful of different programs written in both Game Lab and App Lab handle taking input from the user. After comparing and contrasting the approaches they saw in the example apps, students group up to act out the two different models for input (conditionals in an infinite loop and asynchronous events) to gain a better understanding of how they work.
            Board Events_:
              name: Board Events
              description_student: Using the hardware buttons and switch, the class develops programs that use the Circuit Playground as an input.
              description_teacher: This lesson transitions students from consider the Circuit Playground as strictly an output device towards using it as a tool for both input and output. Starting with the hardware buttons and switch,sing the hardware buttons and switch, students learn to use `onBoardEvent()`, analogously to `onEvent()`, in order to take input from their Circuit Playgrounds.
            Getting Properties_:
              name: Getting Properties
              description_student: This lesson introduces students to the getProperty block, which allows them to access the properties of different elements with code.  Students first practice using the block to determine what the user has input in various user interface elements. Students later use getProperty and setProperty together with the counter pattern to make elements move across the screen.  A new screen element, the slider, and a new event trigger, onChange, are also introduced.
              description_teacher: This lesson introduces students to the `getProperty` block, which allows them to access the properties of different elements with code.  Students first practice using the block to determine what the user has input in various user interface elements. Students later use `getProperty` and `setProperty` together with the counter pattern to make elements move across the screen.  A new screen element, the slider, and a new event trigger, `onChange`, are also introduced.
            Analog Input_:
              name: Analog Input
              description_student: Explore the analog inputs on the Circuit Playground, writing programs that respond to the environment through sensors.
              description_teacher: In this lesson, students explore how the three analog sensors (sound, light, and temperature) can be used to write programs that respond to changes in the environment. The use of these sensors marks a transition in terms of how users interact with a program. By using sensors as an input, the user of an app doesn't have to directly interact with it at all, or may interact without actually realizing they are doing so.
            The Program Design Process_:
              name: The Program Design Process
              description_student: This lesson introduces students to the process they will use to design programs of their own throughout this unit. This process is centered around a project guide which asks students to sketch out their screens, identify elements of the Circuit Playground to be used, define variables, and describe events before they begin programming. This process is similar to the Game Design Process that we used in Unit 3. In this lesson students begin by playing a tug o' war style game where the code is hidden. They discuss what they think the board components, events, and variables would need to be to make the program. They are then given a completed project guide which shows one way to implement the project. Students are then walked through this process through a series of levels. At the end of the lesson students have an opportunity to make improvements to the program to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design programs of their own throughout this unit. This process is centered around a project guide which asks students to sketch out their screens, identify elements of the Circuit Playground to be used, define variables, and describe events before they begin programming. This process is similar to the Game Design Process that we used in Unit 3. In this lesson students begin by playing a tug o' war style game where the code is hidden. They discuss what they think the board components, events, and variables would need to be to make the program. They are then given a completed project guide which shows one way to implement the project. Students are then walked through this process through a series of levels. At the end of the lesson students have an opportunity to make improvements to the program to make it their own.
            Arrays and Color LEDs_:
              name: Arrays and Color LEDs
            'Project: Make a Game_':
              name: 'Project: Make a Game'
            Making Music_:
              name: Making Music
              description_student: In this lesson students will use the buzzer to its full extent by producing sounds, notes, and songs with the buzzer. Students start with a short review of the buzzer's frequency and duration parameters, then move on to the concept of notes.  Notes allow students to constrain themselves to frequencies that are used in Western music and provide a layer of abstraction that helps them to understand which frequencies might sound good together.  Onces students are able to play notes on the buzzer, they use arrays to hold and play sequences of notes, forming simple songs.
              description_teacher: In this lesson students will use the buzzer to its full extent by producing sounds, notes, and songs with the buzzer. Students start with a short review of the buzzer's frequency and duration parameters, then move on to the concept of notes.  Notes allow students to constrain themselves to frequencies that are used in Western music and provide a layer of abstraction that helps them to understand which frequencies might sound good together.  Onces students are able to play notes on the buzzer, they use arrays to hold and play sequences of notes, forming simple songs.
            Arrays and For Loops_:
              name: Arrays and For Loops
              description_student: Combining _lists_ and _for loops_ allows you to write code that impacts every element of a list, regardless of how long it is. The class uses this structure to write programs that process all of the elements in lists, include the list of color LEDs.
              description_teacher: Using a _for loop_ to iterate over all of the elements in an array is a really useful construct in most programming languages. In this lesson, students learn the basics of how a _for loop_ can be used to repeat code, and then combine it with what they've already learned about arrays to write programs that process all elements in an array. Students use for loops to go through each element in a list one at a time without having to write code for each element. Towards the end of the lesson students will apply this with the `colorLed` list on the board to create an app that changes all of the LEDs each time a button is clicked.
            Accelerometer_:
              name: Accelerometer
              description_student: In this lesson, students will explore the accelerometer and its capabilities. They’ll become familiar with its events and properties, as well as create multiple programs utilizing the accelerometer similar to those they’ve likely come across in real world applications.
              description_teacher: In this lesson, students will explore the accelerometer and its capabilities. They’ll become familiar with its events and properties, as well as create multiple programs utilizing the accelerometer similar to those they’ve likely come across in real world applications.
            Functions with Parameters_:
              name: Functions with Parameters
              description_student: The lesson starts with a quick review of parameters, in the context of App Lab blocks that they students have seen recently.  Students then look at examples of parameters within user-created functions in App Lab and create and call functions with parameters for themselves, using them to control multiple elements on a screen.  Afterwards, students use for loops to iterate over an array, passing each element into a function.  Last, students use what they have learned to create a star catching game.
              description_teacher: The lesson starts with a quick review of parameters, in the context of App Lab blocks that they students have seen recently.  Students then look at examples of parameters within user-created functions in App Lab and create and call functions with parameters for themselves, using them to control multiple elements on a screen.  Afterwards, students use for loops to iterate over an array, passing each element into a function.  Last, students use what they have learned to create a star catching game.
            Circuits and Physical Prototypes_:
              name: Circuits and Physical Prototypes
              description_student: Wire simple circuits to create a physical prototype using cheap and easily found materials.
              description_teacher: In preparation for this chapter's final project, students will learn how to develop a prototype of a physical object that includes a Circuit Playground. Using a modelled project planning guide, students will learn how to wire a couple of simple circuits and to build prototypes that can communicate the intended design of a product, using cheap and easily found materials such as cardboard and duct tape.
            'Project: Prototype an Innovation_':
              name: 'Project: Prototype an Innovation'
              description_student: Develop innovative computing devices of your own design, using everything you've learned throughout this course.
              description_teacher: 'In this final project for the course, students team to develop and test a prototype for an innovative computing device based on the Circuit Playground. Using the inputs and outputs available on the board, groups will create programs that allow for interesting and unique user interactions. '
            'Project: Make a Game__':
              name: 'Project: Make a Game'
              description_student: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
              description_teacher: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
            Arrays and Color LEDs__:
              name: Arrays and Color LEDs
              description_student: Learn how lists can be used to store multiple values in a single variable name.
              description_teacher: An array is an ordered collection of items, usually of the same type. In this lesson, students learn ways to access either a specific or random value from a list using its index.  They then learn how to access the colorLEDs array that controls the behavior of the color LEDs on the Circuit Playground.  Students will control the color and intensity of each LED, then use what they have learned to program light patterns to create a light show on their Circuit Playground.
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
        csd3-draft:
          title: 'CSD Unit 3 - Programming: Animations and Games'
          description_audience: ''
          description_short: Animations and Games
          description: ''
          lessons:
            Shapes and Randomess:
              name: Shapes and Randomess
            Shapes and Randomness:
              name: Shapes and Randomness
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Variables:
              name: Variables
            Programming for Entertainment:
              name: Programming for Entertainment
            Sprites:
              name: Sprites
            Plotting Shapes:
              name: Plotting Shapes
            Sprite Movement:
              name: Sprite Movement
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: Conditionals
            Taking Input:
              name: Taking Input
            Complex Conditionals:
              name: Complex Conditionals
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
        csd5-2017:
          title: CSD Unit 5 - Data and Society ('17-'18)
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Representation Matters:
              name: Representation Matters
              description_student: This first lesson provides an overview of what data is and how it is used to solve problems.  Groups use a data set to make a series of meal recommendations for people with various criteria.   Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
              description_teacher: In the first lesson of the data unit, students get an overview of what data is and how it is used to solve problems.  Students start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
            Patterns and Representation:
              name: Patterns and Representation
              description_student: This lesson looks closer at what is needed to create a system of representation.  Groups create systems that can represent any letter in the alphabet using only a single stack of cards, then create messages with their systems and exchange with other groups to ensure the system worked as intended.   The class discusses commonalities between working systems while recognizing that there are many possible working solutions.
              description_teacher: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class  reviews any pros and cons of the different systems. They discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
              description_student: This lesson introduces a formal binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". The class is then introduced to the ASCII system for representing text using binary symbols and practices using this system before encoding their own messages using ASCII.
              description_teacher: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
            Representing Images:
              name: Representing Images
              description_student: This lesson continues the study of binary representation systems, this time with images. The class is introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. After doing a short set of challenges using the Pixelation Widget, the class makes connections between the system for representing images and the system for representing text they learned in the previous lesson.
              description_teacher: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
            Representing Numbers Part 1:
              name: Representing Numbers Part 1
            Representing Numbers Part 2:
              name: Representing Numbers Part 2
            Combining Representations:
              name: Combining Representations
              description_student: This lesson combines all three types of binary representation systems (ASCII characters, binary number, and images) to allow for the encode of more complex types information in a record.  After seeing a series of bits and being asked to decode them, the class is introduced to the idea that  understanding binary information requires understanding both the system that is being used and the meaning of the information encoded.
              description_teacher: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
            Project - Create a Representation:
              name: Project - Create a Representation
              description_student: The class designs structure to represent their perfect day using the binary representation systems they've learned in this chapter. After deciding which pieces of information the record should capture, the class will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Afterwards, everyone will use the ASCII, binary number, and image formats they have learned to represent their perfect days try to decipher what a partner's perfect day is like.
              description_teacher: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
            Problem Solving and Data:
              name: Problem Solving and Data
              description_student: This lesson covers how the problem solving process can be tailored to deal with data problems, in particular.  The class is tasked with deciding what a city most needs to spend resources on.  They must find and use data from the Internet to support their decision.
              description_teacher: 'In this lesson, students use the problem solving process from earlier in the course to solve a data problem.  After reviewing the process, the class is presented with a decision: whether a city should build a library, pet shelter, or fire department.  Students work in teams to collect information on the Internet to help them decide what should be built, then use this information build an argument that will convince the city council of their choice.  They then map what they have done to the problem solving process that they have been using throughout the course, comparing the general problem solving process to its specific application to data problems.'
            Making Decisions with Data:
              name: Making Decisions with Data
              description_student: This lesson gives the class a chance to practice the data problem solving process introduced in the last lesson.  Not all questions have right answers and in some cases the class can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
            Interpreting Data:
              name: Interpreting Data
              description_student: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
              description_teacher: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
            Automating Data Decisions:
              name: Automating Data Decisions
              description_student: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
              description_student: This lesson covers how data is collected and used by a organizations to solve problems in the real world. The class looks at three scenarios that could be solved using data and brainstorms the types of data they would want to solve them and how they could collect the data.  Each scenario also includes a video about a real-world service that has solved a similar problem with data.
              description_teacher: In this lesson, students look at how data is collected and used by organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they  explored in the last lesson. Then students are presented three scenarios that could be solved using data and brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming, students watch a video about a real-world service and record notes about what data is collected by the real-world service and how it is used. At the end of the lesson, students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
              description_student: To conclude this unit the class designs ways to use data to make a recommendations or predictions to help solve a problem.  In the first several steps the class brainstorms problems, performs simple research, and defines a problem of their choosing. They then decide what kind of data they want to collect, how it could be collected, and how it could be used, before exchanging feedback and giving a final presentation.
              description_teacher: To conclude this unit, students design a recommendation engine based on data that they collect and analyze from their classmates. After looking at an example of a recommendation app, students follow a project guide to complete this multi-day activity. In the first several steps, students choose what choice they want to help the user to make, what data they need to give the recommendation, create a survey, and collect information about their classmates' choices. They then interpret the data and use what they have learned to create the recommendation algorithm.  Last, they use their algorithms to make recommendations to a few classmates. Students perform a peer review and make any necessary updates to their projects before preparing a presentation to the class.
            Representing Numbers:
              name: Representing Numbers
              description_student: This lesson introduces the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system, the class turns bits "on" or "off" by turning cards face up and face down, then observes the numbers that result from these different patterns.  Eventually, the pattern is extended to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, students extend the pattern to a generic 4-bit system.
            8-bit Numbers:
              name: 8-bit Numbers
              description_student: Students review the concept of binary numbers, and discuss that they need to know the bit-length of each number in order to decode a series of bits.  They then made a flippy-do, a paper manipulative that will help them to encode and decode 8-bit numbers (0-255).  After practicing with the flippy-do, students discuss how they could extend that standardization to the other types of data.
              description_teacher: Students review the concept of binary numbers, and discuss that they need to know the bit-length of each number in order to decode a series of bits.  They then made a flippy-do, a paper manipulative that will help them to encode and decode 8-bit numbers (0-255).  After practicing with the flippy-do, students discuss how they could extend that standardization to the other types of data.
            Encryption:
              name: Encryption
              description_student: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
              description_teacher: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
            Structuring Data:
              name: Structuring Data
              description_student: This lesson goes further into the interpretation of data, including cleaning and visualizing raw data sets.  The class first looks at the how presenting data in different ways can help people to understand it better.  After seeing how cleaning and visualization can help people make better decisions, the class looks at what parts of this process can be automated, and what need a human.
              description_teacher: In this lesson, students go further into the collection and interpretation of data, including cleaning and visualizing data.  Students first look at the how presenting data in different ways can help people to understand it better, and they then create visualizations of their own data. Using a the results of a preferred pizza topping survey, students must decide what to do with data that does not easily fit into the visualization scheme that they have chosen.  Finally, students look at which parts of this process can be automated by a computer and which need a human to make decisions.
            Keeping Data Secret:
              name: Keeping Data Secret
              description_student: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
              description_teacher: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
        csd3-old:
          title: CSD Unit 3 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 3
          description: This is the original draft of CSD Unit 3, released in the fall of 2016. Unless you have students currently using this course, you should instead use the updated version of this unit at studio.code.org/s/csd3-2019 - this original draft will remain available until July 1, 2017.
          lesson_groups: {}
          lessons:
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Sprites and Properties:
              name: Sprites and Properties
            Sprites and Images:
              name: Sprites and Images
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Complex Conditionals:
              name: Complex Conditionals
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
        csd1-old:
          title: CSD Unit 1 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 1
          description: This is the original draft of CSD Unit 1, originally published in the fall of 2016. This version has been replaced with an updated unit at studio.code.org/s/csd1-2019 and will only remain available until July 1, 2017.
          lesson_groups: {}
          lessons:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Representing Information:
              name: Representing Information
            Processing with Bits:
              name: Processing with Bits
            Human vs Computer Processing:
              name: Human vs Computer Processing
            Processing with Apps:
              name: Processing with Apps
            'Project: Apps and Problem Solving':
              name: 'Project: Apps and Problem Solving'
        csd2-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Text on the Web:
              name: Text on the Web
            Digital Footprint:
              name: Digital Footprint
            Images in HTML:
              name: Images in HTML
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headers and Lists:
              name: Headers and Lists
            Intellectual Property:
              name: Intellectual Property
            Images:
              name: Images
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            Headers:
              name: Headers
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Lists:
              name: Lists
        csd1-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Inputs and Outputs:
              name: Inputs and Outputs
            Processing:
              name: Processing
            Storage:
              name: Storage
            Apps and Problem Solving:
              name: Apps and Problem Solving
            Project - Propose an App:
              name: Project - Propose an App
            Input and Output:
              name: Input and Output
        csd3-chapters:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomness:
              name: Shapes and Randomness
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
            'Chapter 1: Images and Animation':
              name: 'Chapter 1: Images and Animation'
            'null':
              name: 'null'
            temp:
              name: temp
        coursef-ramp:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Functions in Farmer:
              name: Functions in Farmer
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
        csppostsurvey-staging:
          title: "[Deprecated] CSP post survey staging area"
          description_audience: ''
          description_short: ''
          description: Moved to /s/csp-post-survey.  Destory after 05.05.17
          lessons:
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        fmscsd3preview:
          title: CSD - Drawing in Game Lab
          description_audience: Falmouth Middle School (Mike Harvey)
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
        csppostsurvey:
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 10 minutes to complete.  Your responses are private and anonymous.  '
          lessons:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        csp-post-survey:
          title: CSP Student Post-Course Survey ('17-'18)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Post-Course Survey:
              name: CSP Post-Course Survey
            CSP post survey 2018 staging:
              name: CSP post survey 2018 staging
            CSP post-course survey:
              name: CSP post-course survey
        public-key-cryptography:
          title: Public Key Cryptography Widgets
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Public Key Crypto Widgets:
              name: Public Key Crypto Widgets
        csd2-old:
          title: CSD Unit 2 (DEPRECATED)
          description_audience: ''
          description_short: Web Development
          description: ''
          lesson_groups: {}
          lessons:
            Quality Websites:
              name: Quality Websites
            Website Design:
              name: Website Design
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: Text on the Web
            Images in HTML:
              name: Images in HTML
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            Peer Review:
              name: Peer Review
            Digital Footprint:
              name: Digital Footprint
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Intellectual Property:
              name: Intellectual Property
            'Project: Personal Portfolio Website':
              name: 'Project: Personal Portfolio Website'
        artist-and-bb8:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            B8 New BB8:
              name: B8 New BB8
            c8 to BB8:
              name: c8 to BB8
            B8 BB8:
              name: B8 BB8
            C9 Artist Loops:
              name: C9 Artist Loops
            C8 to BB8:
              name: C8 to BB8
            D7 to Laurel:
              name: D7 to Laurel
            D6 Frozen Artist:
              name: D6 Frozen Artist
            F7 add Conditionals:
              name: F7 add Conditionals
            F5 Minecraft:
              name: F5 Minecraft
            Programming with BB-8:
              name: Programming with BB-8
            Loops with BB-8:
              name: Loops with BB-8
            D13 no If/While:
              name: D13 no If/While
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Bounce:
              name: Bounce
            NewBounce:
              name: NewBounce
            F PlayLab Variables:
              name: F PlayLab Variables
        coursea-2017:
          title: Course A
          assignment_family_title: Course A
          description_audience: 'Ages: 4-7'
          description_short: An introduction to computer science for pre-readers.
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
              description_student: ''
              description_teacher: 'This lesson will guide students through the steps of debugging.  Students will learn the mantra: "What happened?  What was supposed to happen? What does that tell you?"'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence: Stevie and the Big Project'
              description_student: ''
              description_teacher: "When students run into a barrier while answering a question or working on a project, it’s so easy for them to get frustrated and give up.  This lesson will introduce students to the idea that frustration can be an important part of learning. Here, frustration is presented as a step in the creative process, rather than a sign of failure.\r\n\r\nThis lession can be done over one or two class sessions.  If you have more time, feel free to draw out the building and revising phase of the Marble Run activity."
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
              description_student: ''
              description_teacher: "In this lesson, students will relate the concept of algorithms back to everyday, real-life activities by planting an actual seed. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.\r\n"
            Learn to Drag and Drop:
              name: Sequencing with Drag and Drop
              description_student: ''
              description_teacher: This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.
            'Programming: Happy Maps':
              name: 'Programming: Happy Maps'
              description_student: ''
              description_teacher: The bridge from algorithms to programming can be a short one if students understand the difference between planning out a sequence and encoding that sequence into the appropriate language.  This activity will help students gain experience reading and writing in shorthand code.
            Programming in Maze:
              name: Programming in Maze
              description_student: ''
              description_teacher: In this series of online puzzles, students will build on the understanding of algorithms, debugging, and general computer literacy. Featuring characters from the game Angry Birds, students will develop sequential algorithms to get the bird to the pig without crashing into walls or TNT. Debugging puzzles have also been mixed into this stage for added practice with problem solving and critical thinking.
            Going Places Safely:
              name: 'Digital Citizenship: Going Places Safely'
              description_student: ''
              description_teacher: In collaboration with [r common-sense-media], this lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests. Students also find out that they can go to exciting places online, but they need to follow certain rules to remain safe.
            'Loops: Happy Loops':
              name: 'Loops: Happy Loops'
              description_student: ''
              description_teacher: Loops are a very helpful and powerful tool in programming. To understand how helpful loops can be, students will need to be driven to want an easier way to solve mundane problems.
            Loops in Collector:
              name: Loops in Collector
              description_student: ''
              description_teacher: Building on the concept of repeating instructions from "Happy Loops," this stage will have students using loops to collect treasure more efficiently on Code.org.
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous plugged lesson, loops were used to traverse a maze and collect treasure. Here, loops are creating patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: 'Events: The Big Event'
              description_student: ''
              description_teacher: Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
            Events in Play Lab:
              name: Events in Play Lab
              description_student: ''
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all of the coding skills they've learned to create an animated game. It's time to get creative and make a story in the Play Lab!
        courseb-2017:
          title: Course B
          assignment_family_title: Course B
          description_audience: 'Ages: 5-8'
          description_short: An introduction to computer science for pre-readers. (Similar to Course A, but with more variety for older students.)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Sequencing with Drag and Drop
            Your Digital Footprint:
              name: 'Digital Citizenship: My Digital Footprint'
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            More Programming in Maze:
              name: More Programming in Maze
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
        coursec-2017:
          title: Course C
          assignment_family_title: Course C
          description_audience: 'Ages: 6-10'
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          lesson_groups: {}
          lessons:
            Building a Foundation:
              name: 'Persistence: Building a Foundation'
            Programming in Maze:
              name: Programming in Maze
            Debugging in Maze:
              name: Debugging in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: Loops in Maze
            Loops in Harvester:
              name: Loops in Harvester
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Build a Flappy Game:
              name: Build a Flappy Game
            Events in Play Lab:
              name: Events in Play Lab
            Screen Out the Mean:
              name: 'Digital Citizenship: Screen Out the Mean'
            Binary Bracelets:
              name: 'Beyond Programming: Binary Bracelets'
            Loops in Artist:
              name: Loops in Artist
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
        coursed-2017:
          title: Course D
          assignment_family_title: Course D
          description_audience: 'Ages: 7-11'
          description_short: Quickly cover concepts from Course C, then go further with algorithms, nested loops, conditionals, and more.
          description: Learn new coding concepts including algorithms, nested loops, while loops, conditionals, and events. Get an introduction to digital citizenship before creating your very own game or story that you can share.
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction to Online Puzzles
              description_student: This lesson will give you practice in the skills you will need for this course.
              description_teacher: 'In this set of puzzles, students will begin with an introduction (or review depending on the experience of your class) of Code.org''s online workspace. There will be videos pointing out the basic functionality of the workspace including the `Run`, `Reset`, and `Step` buttons. Also discussed in these videos: dragging Blockly blocks, deleting Blockly blocks, and connecting Blockly blocks. Next, students will practice their _sequencing_ and _debugging_ skills in maze. From there, students will see new types of puzzles like Collector, Artist, and Harvester when they learn the very basics of _loops_.'
            'Algorithms: Graph Paper Programming':
              name: 'Programming: Graph Paper Programming'
              description_student: In this lesson, you will program your friend to draw pictures!
              description_teacher: By "programming" one another to draw pictures, students will begin to understand what coding is really about. The class will begin by having students instruct each other to color squares on graph paper in an effort to reproduce an existing picture. If there’s time, the lesson can conclude with images that the students create themselves.
            Events in Bounce:
              name: Events in Bounce
              description_student: Ever wish you could play video games in school? In this lesson, you will get to make your own!
              description_teacher: In this online activity, students will learn what events are, and how computers use them in programs like video games. Students will work through puzzles making the program react to events (like arrow buttons being pressed.) At the end of the puzzle, students will have the opportunity to customize their game with different speeds and sounds.
            Nested Loops:
              name: Nested Loops
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you place a loop inside another loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Nested Loops in Artist:
              name: Nested Loops in Artist
              description_student: Here you will be using nested loops to make cool drawings to show to your family and friends.
              description_teacher: Now that students know how to layer their loops, they can create so many beautiful things.  This lesson will take students through a series of exercises to help them create their own portfolio-ready images.
            'Algorithms: Relay Programming':
              name: 'Debugging: Relay Programming'
              description_student: Remember at the beginning of the course when you made drawings with code? In this lesson, you will be working with a team to do something very similar!
              description_teacher: This activity will begin with a short review of "Graph Paper Programming," then will quickly move to a race against the clock, as students break into teams and work together to write a program one instruction at a time.
            Debugging in Bee:
              name: Debugging in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
              description_student: 'Loops are so useful in coding. This lesson will teach you about a new kind of loop: while loops!'
              description_teacher: "By the time students reach this lesson, they should already have plenty of practice using `repeat` loops, so now it's time to mix things up. \n\n_While loops_ are loops that continue to repeat commands while a condition is met. While loops are used when the programmer doesn't know the exact number of times commands need to be repeated, but does know what condition needs to be true in order for the loop to continue repeating. For example, students will be working to fill holes and dig dirt in Farmer. They will not know the size of the holes or the height of the mountains of dirt, but the students will know they need to keep filling the holes and digging the dirt as long as the ground is not flat."
            Conditionals with Cards:
              name: 'If/Else: Conditionals with Cards'
              description_student: It's time to play a game where you earn points only under certain conditions!
              description_teacher: "This lesson demonstrates how conditionals can be used to tailor a program to specific information. We don’t always have all of the information we need when writing a program. Sometimes you will want to do something different in one situation than in another, even if you don't know what situation will be true when your code runs. That is where conditionals come in. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.\n\n"
            Conditionals in Bee:
              name: Conditionals in Bee
              description_student: 'Now that you understand conditionals, it''s time to program Bee to use them when collecting honey and nectar. '
              description_teacher: Up until this point students have been writing code that executes exactly the same way each time it is run - reliable, but not very flexible. In this lesson, your class will begin to code with conditionals, allowing them to write code that functions differently depending on the specific conditions the program encounters.
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
              description_student: You can do some amazing things when you use conditionals and loops together!
              description_teacher: 'In this lesson, students will be pairing together two key concepts: loops and conditionals. This set of puzzles bridges the gaps in understanding that occur when working on puzzles that use multiple kinds of blocks. By bringing two ideas together, students will create more complex code that shows both impressive creativity and critical thinking!'
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Harvester
              description_student: It's not always clear when to use each conditional.  This lesson will help you get practice deciding what to do.
              description_teacher: Students will practice `while` loops, `until` loops, and `if / else` statements. All of these blocks use conditionals. By practicing all three, students will learn to write complex and flexible code.
            Digital Citizenship:
              name: 'Digital Citizenship: Practicing Digital Citizenship'
              description_student: Some information is not safe to share online. This lesson will help you learn the difference between safe and private information.
              description_teacher: |-
                In collaboration with Common Sense Education, this lesson helps students learn to think critically about the user information that some websites request or require. Students learn the difference between private information and personal information, distinguishing what is safe and unsafe to share online.

                Students will also explore what it means to be responsible and respectful to their offline and online communities as a step toward learning how to be good digital citizens.
            Build a Play Lab Game:
              name: Build a Play Lab Game
              description_student: This lesson will guide you through making your very own video game.
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all of the coding skills they've learned to create an animated game. It's time to get creative and make a game in Play Lab!
            'Unplugged: Binary':
              name: 'Beyond Programming: Binary Images'
              description_student: 'Learn how computers store pictures using simple ideas like on and off. '
              description_teacher: Though many people think of binary as strictly zeros and ones, students will be introduced to the idea that information can be represented in a variety of binary options. This lesson takes that concept one step further as it illustrates how a computer can store even more complex information (such as images and colors) in binary, as well.
            Artist Binary:
              name: Binary in Artist
              description_student: Direct your own artist to create a binary image using only commands to turn pixels on and off.
              description_teacher: Binary is extremely important in the world of computers. The majority of computers today store all sorts of information in binary form. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs. Students will build binary images in Artist by translating 0s and 1s to offs and ons (or blacks and whites).
            Nested Loops Project in Artist:
              name: Nested Loops in Frozen
              description_student: More nested loops! This time, you get to make some AMAZING drawing with nested loops.
              description_teacher: Students will create intricate designs using Artist in today's set of puzzles. By continuing to practice nested loops with new goals, students will see more uses of loops in general. This set of puzzles also offers a lot more potential for creativity with an opportunity for students to create their own design at the end of the stage.
            Debugging in Collector:
              name: Debugging in Collector
              description_student: Have you ever run into problems while coding? In this lesson, you will learn about the secrets of debugging. Debugging is the process of finding and fixing problems in your code.
              description_teacher: In this online activity, students will practice debugging in the "collector" environment. Students will get to practice reading and editing code to fix puzzles with simple algorithms, loops and nested loops.
        coursee-2017:
          title: Course E
          assignment_family_title: Course E
          description_audience: 'Ages: 8-12'
          description_short: Quickly cover concepts in Course C & D and then go further with functions.
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction to Online Puzzles
              description_student: This fast-paced introduction will give you the chance to practice most of the skills that you will need to solve the puzzles in this course.
              description_teacher: In this progression, students will begin with an introduction (or review depending on the experience of your class) of Code.org's online workspace. Students will learn the basic functionality of the interface including the `Run`, `Reset`, and `Step` buttons. Dragging, deleting, and connecting Blockly blocks is also introduced in the beginning video. In the puzzles, students will practice their sequencing and debugging skills in Maze and Artist.
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: Here are several games and drawings. Play with each of them to get ideas for projects of your own!
              description_teacher: "The next four lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. Intended to be a multi-lesson or multi-week experience, students will spend time exploring brainstorming, learning about the design process, building, and presenting their final work. \n\nIn the explore stage, students will be able to view pre-built examples of projects in both Artist and Play Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in either Artist or Play Lab (this is likely the longest stage of the project). Finally, students will be able to present their finished work to their peers."
            The Design Process:
              name: The Design Process
              description_student: Projects this big take time and plenty planning. Here, you will learn about the design process that you'll use to build your own creation.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. In this portion of the project, students will learn about the design process and how to implement it in their own projects. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Build Your Project:
              name: Build Your Project
              description_student: Get those hands ready for plenty of coding! It's time to start building your project.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. Now the students will be given their own space to create their project with either Artist or Play Lab. This is likely to be the longest stage of the project. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Presentation Your Project
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
              description_student: Learn how to describe a game from the computer's point of view in this lesson on algorithms.
              description_teacher: In this lesson, students will relate the concept of algorithms back to real-life activities by playing the Dice Race game. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.
            Conditionals:
              name: Conditionals in Farmer
              description_student: You will get to tell the computer what to do under certain conditions in this fun and challenging series.
              description_teacher: This lesson introduces students to `while` loops and `if / else` statements. _While loops_ are loops that continue to repeat commands as long as a condition is true. While loops are used when the programmer doesn't know the exact number of times the commands need to be repeated, but the programmer does know what condition needs to be true in order for the loop to continue looping. `If / Else` statements offer flexibility in programming by running entire sections of code only if something is true, otherwise it runs something else.
            Private and Personal Information:
              name: 'Digital Citizenship: Private and Personal Information'
              description_student: The internet is fun and exciting, but it's important to stay safe too. This lesson teaches you the difference between information that is safe to share and information that is private.
              description_teacher: |-
                Developed by Common Sense Education, this lesson is about the difference between information that is safe to share online and information that is not.

                As students visit sites that request information about their identities, they learn to adopt a critical inquiry process that empowers them to protect themselves and their families from identity theft. In this lesson, students learn to think critically about the user information that some websites request or require. They learn the difference between private information and personal information, as well as how to distinguish what is safe or unsafe to share online.
            Build a Star Wars Game:
              name: Build a Star Wars Game
              description_student: Feel the force as you build your own Star Wars game in this lesson.
              description_teacher: In this lesson, students will practice using events to build a game that they can share online. Featuring R2-D2 and other Star Wars characters, students will be guided through events, then given space to create their own game.
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
              description_student: Even rockstars need programming skills. This lesson will teach you about functions using lyrics from songs.
              description_teacher: One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.
            Functions in Artist:
              name: Functions in Artist
              description_student: Make complex drawings more easily with functions!
              description_teacher: Students will be introduced to using functions on Code.org. Magnificent images will be created and modified with functions in Artist. For more complicated patterns, students will learn about nesting functions by calling one function from inside another.
            Functions in Bee:
              name: Functions in Bee
              description_student: Don't write too much code to gather all of the nectar and honey. Use functions instead!
              description_teacher: In the second round of practice with online functions, students will navigate complex paths, collect plenty of nectar, and make lots of honey.
            Functions in Farmer:
              name: Functions in Farmer
              description_student: Functions will save you lots of work as you help the farmer with her harvest!
              description_teacher: Students have practiced creating impressive designs in Artist and navigating mazes in Bee, but today they will use functions to harvest crops in Farmer. This lesson will push students to use functions in the new ways by combining them with `while` loops and `if / else` statements.
            Determine the Concept:
              name: Determine the Concept
              description_student: "We aren't giving away any secrets! \nThis lesson could use any of the skills you've learned so far."
              description_teacher: This lesson brings together concepts from the previous lessons and gives students a chance to think critically about how they would solve each problem, but without telling them which concept to apply. Students will review basic algorithms, debugging, `repeat` loops, conditionals, `while` loops, and functions.
            Build a Play Lab Game:
              name: Build a Play Lab Game
              description_student: Practice making games to share with your friends and family.
              description_teacher: This lesson features Play Lab, a platform where students can create their own games and have interactions between characters and user input. Students will work with events to create keyboard controls. This set of puzzles will also loosely guide students through game development, but with freedom to add their own ideas.
            Present Your Project:
              name: Present Your Project
              description_student: Get ready to show off! It's time to present your finished project to your peers.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. Finally, students will be able to present their finished work to their peers or share with their loved ones with a special link. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Internet:
              name: 'Beyond Programming: The Internet'
              description_student: Ever wondered how information travels across the internet? It's not magic! This lesson will teach you the basics of how the internet works.
              description_teacher: Even though many people use the internet daily, not very many know how it works. In this lesson, students will pretend to flow through the internet, all the while learning about connections, URLs, IP Addresses, and the DNS.
            Crowdsourcing:
              name: 'Beyond Programming: Crowdsourcing'
              description_student: This lesson will teach you about crowdsourcing, the process of building a project with a team.
              description_teacher: In computer science, we face some big, daunting problems. Challenges such as finding large prime numbers or sequencing DNA are almost impossible to do as an individual. Adding the power of others makes these tasks manageable. This lesson will show your students how helpful teamwork can be in the industry of computer science.
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Nested Loops:
              name: Nested Loops
            Functions in Harvester:
              name: Functions in Harvester
        coursef-2017:
          title: Course F
          assignment_family_title: Course F
          description_audience: 'Ages: 9-13'
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
              description_student: Here you will learn about algorithms using puzzles called tangrams!
              description_teacher: This lesson shows us something important about algorithms. As long as you keep an algorithm simple, there are lots of ways to use it. However, if you want to make sure everyone produces the same outcome, then your algorithm needs more detail. Students will learn the difference between a detailed and general algorithm while playing with tangrams.
            Introduction:
              name: Introduction to Online Puzzles
              description_student: This lesson will give you a brief introduction to some of the amazing things you will learn in this course!
              description_teacher: 'In this lesson, students will be introduced to sequences, loops, and nested loops to prepare them for more complicated concepts in the later part of the course. This "ramp up" lesson equalizes the playing field between the experts and the beginners in your class. '
            The Power of Words:
              name: 'Digital Citizenship: The Power of Words'
              description_student: Bullying is never okay. This lesson will teach you about what is and isn't okay to say online.
              description_teacher: "Students consider that while they are enjoying their favorite websites they may encounter messages from other kids that can make them feel angry, hurt, sad, or fearful. They explore ways to handle cyberbullying and how to respond in the face of upsetting language online.\n\nStudents discuss all the ways they use technology for communication and explore the similarities and differences between in-person and online communication. Students then brainstorm ways to respond to cyberbullying. "
            Ice Age Play Lab:
              name: Events in Ice Age
              description_student: Think of your favorite video game. Ever wondered how it was made? In these puzzles you will develop a video game of your own with friends from Ice Age!
              description_teacher: In this lesson, students are guided through a story featuring characters from Ice Age. Students will work with events and loops to make characters move on the screen, and will get the chance to create their own game or story after the guided levels.
            Envelope Variables:
              name: 'Variables: Envelope Variables'
              description_student: 'Envelopes and variables have something in common: both can hold valuable things. Here you will learn what variables are and the awesome things they can do.'
              description_teacher: Variables are used as placeholders for values such as numbers or words. Variables allow for a lot of freedom in programming. Instead of having to type out a phrase many times or remember an obscure number, computer scientists can use variables to reference them. This lesson helps to explain what variables are and how we can use them in many different ways. The idea of variables isn't an easy concept to grasp, so we recommend allowing plenty of time for discussion at the end of the lesson.
            Variables in Artist:
              name: Variables in Artist
              description_student: Don't forget to bring creativity to class! In these puzzles you will be making fantastic drawings using variables.
              description_teacher: In this lesson, students will explore the creation of repetitive designs using variables in the Artist environment. Students will learn how variables can be used to make code easier to write and easier to read. After guided puzzles, students will end in a freeplay level to show what they have learned and create their own designs.
            Variables in Play Lab:
              name: Variables in Play Lab
              description_student: Soon you will learn about making characters interact in a game using variables!
              description_teacher: Students will get further practice with variables in this lesson by creating scenes in Play Lab. Students will work with user input to set the values of their variables, then get space to create their own mini-project with variables.
            For Loop Fun:
              name: 'For Loops: For Loop Fun'
              description_student: You're going to have loads of fun learning about `for` loops!
              description_teacher: 'We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic. '
            For Loops in Bee:
              name: For Loops in Bee
              description_student: Buzz buzz. In these puzzles you will be guiding a bee to nectar and honey using `for` loops!
              description_teacher: Featuring Bee, this lesson focuses on for loops and using an incrementing variable to solve more complicated puzzles. Students will begin by reviewing loops from previous lessons, then walked through using for loops to more effectively solve complicated problems.
            For Loops in Artist:
              name: For Loops in Artist
              description_student: Get ready to make your next masterpiece. Here you will be using `for` loops to make some jaw-dropping pictures.
              description_teacher: In this lesson, students continue to practice for loops, this time with Artist. Students will complete puzzles combining the ideas of variables, loops, and for loops to create complex designs. At the end, they will have a chance to create their own art in a freeplay level.
            Songwriting with Parameters:
              name: 'Functions: Songwriting with Parameters'
              description_student: You just might release the next big hit single! In this lesson, you will be learning what parameters are and how they make some fantastic songs!
              description_teacher: One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions is such a helpful practice, and how they can use those structures even when chunks of code are slightly different.
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
              description_student: The bee needs your help again! Here you will be using functions to get nectar and make honey!
              description_teacher: 'This lesson teaches students how to create simple functions using our sophisticated “modal” function editor, preparing the way for them to incorporate parameters in future lessons. '
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
              description_student: Get your programming fingers ready. In these puzzles you will make impressive drawings in Artist using functions with parameters.
              description_teacher: In this lesson, students continue working with functions with and without parameters. Students will get the chance to create their own drawings with and without parameters, before modifying functions in a freeplay level.
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
              description_student: You've had a little practice using functions with parameters. This lesson will continue your practice with Bee!
              description_teacher: This lesson features the bee environment, and continues along the concept of functions with parameters from the previous Artist stage. Students will practice writing and using functions to follow complex paths and collect patterns of nectar and honey.
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: Time to get some inspiration! These puzzles will show you a handful of pre-built games and illustrations to help develop your plan for your BIG project.
              description_teacher: "The next five lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. This is intended to be a multi-lesson or multi-week project where students spend time brainstorming, learning about the design process, building, and then presenting their final work. \n\nIn the explore stage, students will be able to view examples of projects in both Artist and Play Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in either Artist or Play Lab (this is most likely the longest stage of the project). Students will then revise their projects, after testing and extra thought. Finally, students will be able to present their finished work to their peers."
            The Design Process:
              name: The Design Process
              description_student: Projects this big take time and plenty planning. Here, you will learn about the design process that you'll use to build your own creation.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. In this portion of the project, students will learn about the design process and how to implement it in their own projects. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Build Your Project:
              name: Build Your Project
              description_student: Finally you can start building your project!
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Now the students will be given their own space to create their project with either Artist or Play Lab. This will be the longest portion of the project. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Revise Your Project:
              name: Revise Your Project
              description_student: Rome wasn't built in a day and your project shouldn't be, either. Take time to edit and revise your project to make it the best it can be.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Now that the projects are built, students are given the opportunity to get feedback from peers and revise their projects. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Presentation Your Project:
              name: Presentation Your Project
            Present Your Project:
              name: Present Your Project
              description_student: Time to show your work! Here you will be presenting your awesome project to your peers.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Finally, students will be able to present their finished work to their peers or share with their loved ones with a special link. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
              description_student: Avoid the lava! Here you will learn about conditionals in the world of Minecraft.
              description_teacher: This lesson gives students a chance to learn and practice conditionals. It features characters and settings from Minecraft, and students will complete tasks such as mining and building structures using their programs.
            Functions in Bee:
              name: Functions in Bee
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
        csdnovice:
          title: CS Discoveries TeacherCon Novice Facilitators
          description_audience: CSD Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
          lesson_groups: {}
          lessons:
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Welcome:
              name: Welcome
            Congrats:
              name: Congrats
            Wrap Up:
              name: Wrap Up
        csp-explore-task:
          title: CSP Explore PT Prep
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
        csp-create-task:
          title: ''
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
          lessons:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
        csp-ap-tech-setup:
          title: CSP AP Digital Portfolio and Other Tools
          description_audience: ''
          description_short: ''
          description: Covers AP Digital Portfolio setup and other technical tools required for completing and submitting the AP Performance Tasks.
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
        csp-ap:
          title: CSP AP Exam and Performance Tasks
          description_audience: ''
          description_short: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          description: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          lesson_groups:
            csp_ap_1:
              display_name: 'Chapter 1: AP Tech Setup'
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        cspnovice:
          title: CS Principles TeacherCon Novice Facilitator Reflection
          description_audience: CSP Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Welcome:
              name: Welcome
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
        novice-view:
          title: view novice responses
          description_audience: brook, dani, mal
          description_short: NA
          description: NA
          lesson_groups: {}
          lessons:
            CSP Tuesday:
              name: CSP Tuesday
            CSP Wednesday:
              name: CSP Wednesday
            CSP Thursday:
              name: CSP Thursday
            CSD Tuesday:
              name: CSD Tuesday
            CSD Wednesday:
              name: CSD Wednesday
            CSD Thursday:
              name: CSD Thursday
        csp1-dlp:
          title: CSP Unit 1 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete your Deeper Learning:
              name: Complete your Deeper Learning
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
        csp2-dlp:
          title: CSP Unit 2 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 2 Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning:
              name: Complete Unit 2 Deeper Learning
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
        csp3-dlp:
          title: CSP Unit 3 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 3 Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
        csp4-dlp:
          title: CSP Unit 4 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
        csp5-dlp:
          title: CSP Unit 5 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
        csd1-dlp:
          title: CS Discoveries Unit 1 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
        csd6-dlp:
          title: CS Discoveries Unit 6 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
        csd5-dlp:
          title: CS Discoveries Unit 5 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
        csd4-dlp:
          title: CS Discoveries Unit 4 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
        csd3-dlp:
          title: CS Discoveries Unit 3 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
        csd2-dlp:
          title: CS Discoveries Unit 2 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
        allthettsthings:
          lesson_groups: {}
          lessons:
            TTS:
              name: TTS
        express-2017:
          title: Express Course
          assignment_family_title: Express Course
          description_audience: 'Ages: 9-18'
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming Unplugged: My Robotic Friends':
              name: 'Programming Unplugged: My Robotic Friends'
            Introduction:
              name: Introduction
            'Algorithms: Graph Paper Programming':
              name: 'Programming: Graph Paper Programming'
            'Algorithms: Relay Programming':
              name: 'Debugging: Relay Programming'
            Debugging in Collector:
              name: Introduction to Debugging
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
            Internet:
              name: Internet
            Digital Citizenship:
              name: Digital Citizenship
            Screen Out the Mean:
              name: Screen Out the Mean
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Events in Bounce:
              name: Events in Bounce
            Build a Flappy Game:
              name: Build a Flappy Game
            Conditionals with Cards:
              name: Conditionals with Cards
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Nested Loops Project in Frozen:
              name: Nested Loops in Frozen
            'How it Works: The Internet':
              name: 'Beyond Programming: The Internet'
            'Common Sense Education: Digital Citizenship':
              name: 'Digital Citizenship: Practicing Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Digital Citizenship: Screen Out the Mean'
            Events in Star Wars:
              name: Events in Star Wars
            Events with Flappy:
              name: Events with Flappy
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            Conditional Loops in Maze:
              name: Conditionals & Loops in Maze
            'Variables: Envelope Variables':
              name: 'Variables: Envelope Variables'
            'For Loops: For Loop Fun':
              name: 'For Loops: For Loop Fun'
            'Functions: Songwriting with Parameters':
              name: 'Functions: Songwriting with Parameters'
            Building a Foundation:
              name: Building a Foundation
            Nested Loops:
              name: Nested Loops
            Conditionals & Loops in Harvester:
              name: Conditionals & Loops in Harvester
            Until Loops in Maze:
              name: Until Loops in Maze
        pre-express-2017:
          title: Pre-reader Express
          assignment_family_title: Pre-reader Express
          description_audience: 'Ages: 4-8'
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Sequencing with Drag and Drop
            'Online Safety: Your Digital Footprint':
              name: 'Digital Citizenship: My Digital Footprint'
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Programming: Star Wars':
              name: 'Programming: Star Wars'
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            Spelling Bee:
              name: Spelling Bee
        subgoal-labels-opt-in:
          title: Subgoal Labels Study Opt-in
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Subgoal Labels Study Opt-In:
              name: Subgoal Labels Study Opt-In
            deprecated:
              name: deprecated
            other:
              name: other
            Thanks:
              name: Thanks
            '':
              name: ''
            " ":
              name: " "
        csp-pre-survey-test-2017:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
            test satge:
              name: test satge
            CSP pre survey Test:
              name: CSP pre survey Test
            CSD pre survey test:
              name: CSD pre survey test
            CSD pulse check survey:
              name: CSD pulse check survey
        csp3-research-mxghyt:
          title: CSP Unit 3 - Intro to Programming (subgoals)
          description_audience: ''
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            new stage:
              name: new stage
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            foo:
              name: foo
            CSP Mid-course survey:
              name: CSP Mid-course survey
            Please complete the CSP Mid-course survey:
              name: Please complete the CSP Mid-course survey
        csd4-draft:
          title: CSD Unit 4 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: App Presentation
            Linking Screens:
              name: Linking Screens
        craft17:
          title: Craft17 Development Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            craft17 stage:
              name: craft17 stage
        applab-intro:
          title: Intro to App Lab
          description_audience: ''
          description_short: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          description: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          lesson_groups: {}
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: Intro to AppLab - Choose Your Own Adventure
            Intro to AppLab - Choose Your Own Adventure 2:
              name: Intro to AppLab - Choose Your Own Adventure 2
            Intro to AppLab - Your First App:
              name: Intro to AppLab - Your First App
            Intro to AppLab - Your First App 2:
              name: Intro to AppLab - Your First App 2
            Intro to AppLab - Your First App 3:
              name: Intro to AppLab - Your First App 3
            Intro to AppLab - Your First App 4:
              name: Intro to AppLab - Your First App 4
            Intro to AppLab - Getting Started:
              name: Intro to AppLab - Getting Started
            Intro to App Lab:
              name: Intro to App Lab
            'Lesson 1: App Lab Intro':
              name: 'Lesson 1: App Lab Intro'
        e-f-ramp:
          title: Course E & F Ramp
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence and Preview in Maze:
              name: Sequence and Preview in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Intro to Conditionals with Farmer:
              name: Intro to Conditionals with Farmer
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Course E Introduction:
              name: Course E Introduction
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Sequence in Maze:
              name: Sequence in Maze
        new-d:
          title: New Course D Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Introduction:
              name: Introduction
            Events in Bounce:
              name: Events in Bounce
            Nested Loops:
              name: Nested Loops
            Nested Loops in Artist:
              name: Nested Loops in Artist
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: Debugging in Collector
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: Conditionals in Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Digital Citizenship:
              name: Digital Citizenship
            Build a Play Lab Game:
              name: Build a Play Lab Game
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
            Building a Foundation:
              name: Building a Foundation
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Loops in Ice Age:
              name: Loops in Ice Age
        csp3-a:
          title: CSP Unit 3 - Subgoals Group A
          description_audience: ''
          description_short: Alternate version of CSP Unit 3 for subgoal labels experiment group A.
          description: This unit introduces the foundational concepts of computer programming, for students in Subgoals Group A.
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
          lessons:
            new stage:
              name: new stage
            'CSP3A: Using Simple Commands':
              name: 'CSP3A: Using Simple Commands'
        new-express:
          title: New Express Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Introduction:
              name: Introduction
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: Debugging in Collector
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            'How it Works: The Internet':
              name: 'How it Works: The Internet'
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Star Wars:
              name: Events in Star Wars
            Events with Flappy:
              name: Events with Flappy
            Events in Bounce:
              name: Events in Bounce
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditional Loops in Maze:
              name: Conditional Loops in Maze
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            'Variables: Envelope Variables':
              name: 'Variables: Envelope Variables'
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            'For Loops: For Loop Fun':
              name: 'For Loops: For Loop Fun'
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            'Functions: Songwriting with Parameters':
              name: 'Functions: Songwriting with Parameters'
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Nested Loops:
              name: Nested Loops
            Loops in Artist (UPDATED!):
              name: Loops in Artist (UPDATED!)
            Sarah test stage:
              name: Sarah test stage
        new-stages-sept-2017:
          title: New stages for 9/17
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Loops in Artist:
              name: Loops in Artist
            Sequences with Scrat:
              name: Sequences with Scrat
            Testing Template:
              name: Testing Template
        new-e:
          title: New Script for E
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Course E Introduction:
              name: Course E Introduction
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Bee:
              name: Functions in Bee
            Functions in Artist:
              name: Functions in Artist
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
        new-f:
          title: New Script for F
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Course E Introduction:
              name: Course E Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
        csd5-old:
          title: CSD Unit 5 - Data and Society
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of the your choosing.
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            8-bit Numbers:
              name: 8-bit Numbers
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
        subgoals-assessment-staging:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            subgoal assessments:
              name: subgoal assessments
            lg by itself:
              name: lg by itself
            test of single level lg:
              name: test of single level lg
            submittable question at end of lessson:
              name: submittable question at end of lessson
            all assessment items as standalone assessment levels:
              name: all assessment items as standalone assessment levels
            all assessment items clustered in levelgroup:
              name: all assessment items clustered in levelgroup
            submittable if last assessment item:
              name: submittable if last assessment item
            assessment sandwiched between app lab levels:
              name: assessment sandwiched between app lab levels
            all assessment items clustered in levelgroup as a single "test":
              name: all assessment items clustered in levelgroup as a single "test"
            dummy:
              name: dummy
            CSP 3 updates staging ground:
              name: CSP 3 updates staging ground
        hocali:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
        colehoc2017:
          title: 'HoC 17 - Cole '
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            colehoc2017 stage:
              name: colehoc2017 stage
        craft17-kiki:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            craft17 stage:
              name: craft17 stage
        csd4-old:
          title: "(DEPRECATED) CSD Unit 4 - The Design Process"
          description_audience: ''
          description_short: 2016/17 Beta version of CSD Unit 4
          description: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: App Presentation
        csp3-staging:
          title: CSP 3 Proposed Changes Temporary Staging Ground
          description_audience: ''
          description_short: Temporary staging ground for Oct. changes to csp3
          description: "This is a replica of live levels in /s/csp3-2017 with new and modified stages added.  DO NOT EDIT LIVE LEVELS.\r\n"
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
        pwc:
          title: PwC's Access Your Potential curriculum
          description_audience: ''
          description_short: ''
          description: At PwC, we believe that all students have the potential to be tomorrow’s leaders and tech-driven workforce. Access Your Potential is our commitment to help close the opportunity gap by equipping young people, especially those from disadvantaged communities, with the financial, technology and career-selection skills they need to change the trajectory of their lives. As part of our commitment, we’re excited to launch our Access Your Potential middle school technology and careers curriculum.
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            'Problem Solving: Personal Innovations':
              name: 'Problem Solving: Personal Innovations'
            'Technology Foundations: What is a Computer?':
              name: 'Technology Foundations: What is a Computer?'
            'Data Science: Problem Solving with Big Data':
              name: 'Data Science: Problem Solving with Big Data'
            Personal Innovations:
              name: Personal Innovations
            What is a Computer?:
              name: What is a Computer?
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Programming - Hour of Code:
              name: Programming - Hour of Code
            Simple Encryption:
              name: Simple Encryption
            Web Development - Creating Webpages:
              name: Web Development - Creating Webpages
            App Development Unplugged - User Interfaces:
              name: App Development Unplugged - User Interfaces
            App Development - Intro to App Lab:
              name: App Development - Intro to App Lab
            Creating Webpages:
              name: Creating Webpages
            User Interfaces:
              name: User Interfaces
            Intro to App Lab:
              name: Intro to App Lab
            Smart Clothing Design:
              name: Smart Clothing Design
            Intro to App Lab (13+):
              name: Intro to App Lab (13+)
        allthesurveys:
          title: All the surveys
          description_audience: ''
          description_short: Place to stage and test Code.org surveys
          description: ''
          lesson_groups: {}
          lessons:
            CSP pre survey Test:
              name: CSP pre survey Test
            CSD pre survey test:
              name: CSD pre survey test
            CSD pulse check survey:
              name: CSD pulse check survey
            CSD mid-post survey staging:
              name: CSD mid-post survey staging
            CSP pre survey Test 2017:
              name: CSP pre survey Test 2017
            CSD mid-post survey 2017 staging:
              name: CSD mid-post survey 2017 staging
            CSP pre survey 2017 staging:
              name: CSP pre survey 2017 staging
            CSD pre survey 2017 staging:
              name: CSD pre survey 2017 staging
            CSD/P pulse check survey 2017:
              name: CSD/P pulse check survey 2017
            CSD mid and post survey 2017 staging:
              name: CSD mid and post survey 2017 staging
            CSP mid and post survey 2017 staging:
              name: CSP mid and post survey 2017 staging
            CSP post survey 2018 staging:
              name: CSP post survey 2018 staging
            CSD post survey 2018 staging:
              name: CSD post survey 2018 staging
            CSD pre survey 2018 staging:
              name: CSD pre survey 2018 staging
            CSP pre survey 2018 staging:
              name: CSP pre survey 2018 staging
            CSP mid survey 2018 stagin:
              name: CSP mid survey 2018 stagin
            CSP mid survey 2018 staging:
              name: CSP mid survey 2018 staging
            CSP post course survey 2019 staging:
              name: CSP post course survey 2019 staging
            CSD post course survey 2019 staging:
              name: CSD post course survey 2019 staging
            Place for testing crazy stuff:
              name: Place for testing crazy stuff
        k1hoc2017:
          title: K-1 Hour of Code 2017
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Collector Hour of Code 2017:
              name: Collector Hour of Code 2017
        hero:
          title: 'Minecraft: Hero''s Journey'
          description_audience: ''
          description_short: Minecraft is back with a brand new activity for Hour of Code!
          description: Minecraft is back for the Hour of Code with a brand new activity! Journey through Minecraft with code.
          lesson_groups: {}
          lessons:
            'Minecraft\: Hero''s Journey Hour of Code':
              name: 'Minecraft\: Hero''s Journey Hour of Code'
            Minecraft Hour of Code:
              name: Minecraft Hour of Code
        applab-intro-staging:
          title: Intro to App Lab Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: Intro to AppLab - Choose Your Own Adventure
            Intro to AppLab - Choose Your Own Adventure 2:
              name: Intro to AppLab - Choose Your Own Adventure 2
            Intro to AppLab - Your First App:
              name: Intro to AppLab - Your First App
            Intro to AppLab - Your First App 2:
              name: Intro to AppLab - Your First App 2
            Intro to AppLab - Your First App 3:
              name: Intro to AppLab - Your First App 3
            Intro to AppLab - Your First App 4:
              name: Intro to AppLab - Your First App 4
            Intro to AppLab - Getting Started:
              name: Intro to AppLab - Getting Started
            Intro to App Lab:
              name: Intro to App Lab
        csp-explore-2017:
          title: Explore - AP Performance Task Prep ('17-'18)
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description: "These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            new stage:
              name: new stage
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            'Setup: Digital Portfolio and Other Tools':
              name: 'Setup: Digital Portfolio and Other Tools'
            Post-Course Survey:
              name: Post-Course Survey
        csp-create-2017:
          title: Create - AP Performance Task Prep ('17-'18)
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description: "These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated December, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Post-Course Survey:
              name: Post-Course Survey
        csp3-reovery:
          title: 'csp3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Under the sea recovery:
              name: Under the sea recovery
        csp3-recovery:
          title: 'CSP3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Under the sea recovery:
              name: Under the sea recovery
            standalone template:
              name: standalone template
        aws-demo:
          title: AWS Demo
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
        halloween:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Halloween Artist:
              name: Halloween Artist
        valentine:
          title: Valentine Special
          description_audience: ''
          description_short: Have fun creating valentines
          description: ''
          lesson_groups: {}
          lessons:
            special valentine:
              name: special valentine
            Valentine Puzzles:
              name: Valentine Puzzles
        colehoc17:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
        course-e-2018:
          title: Course E 2018 (Outdated!)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            courseB_unplugged_MRF_2018:
              name: courseB_unplugged_MRF_2018
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            MINECRAFT STAGE GOES HERE:
              name: MINECRAFT STAGE GOES HERE
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Functions in Harvester:
              name: Functions in Harvester
        course-f-2018:
          title: Course F 2018 (Outdated)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
        csd6-old:
          title: "(DEPRECATED) CSD Unit 6 - Physical Computing"
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
          lessons:
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            The Circuit Playground:
              name: The Circuit Playground
            Lists:
              name: Lists
            Lights:
              name: Lights
            For Loops:
              name: For Loops
            Lists and For Loops:
              name: Lists and For Loops
            Timed Loops:
              name: Timed Loops
            'Project: Board Output':
              name: 'Project: Board Output'
            Physical Input:
              name: Physical Input
            Analog Input:
              name: Analog Input
            Sensor Applications:
              name: Sensor Applications
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
        unembeddedlevels:
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            CSD U3 Plotting Shapes Shape Lab - unembed:
              name: CSD U3 Plotting Shapes Shape Lab - unembed
            CSD U3 Entertainment Sample 1 - unembed:
              name: CSD U3 Entertainment Sample 1 - unembed
            Only Stage:
              name: Only Stage
        unembedded:
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Only Stage:
              name: Only Stage
        csd3-1819draft:
          title: CSD Unit 3 - Animations and Games
          description_audience: ''
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomization:
              name: Shapes and Randomization
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
        textbook:
          title: CSF Textbook Pages
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Test Map Level:
              name: Test Map Level
            new stage:
              name: new stage
        glj-behavior-test:
          title: Game Lab Jr. Test - Behavior
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Cats and Dogs:
              name: Cats and Dogs
        csd3-2018:
          title: CSD Unit 3 - Animations and Games ('18-'19)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            Shapes and Randomization:
              name: Shapes and Randomization
              description_student: ''
              description_teacher: ''
            Variables:
              name: Variables
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Sprites:
              name: Sprites
              description_student: In order to create more interesting and detailed images, the class is introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.  At the end of the lesson, everyone creates a scene using sprites.
              description_teacher: In order to create more interesting and detailed images, students are introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.
            The Draw Loop:
              name: The Draw Loop
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables through an unplugged activity. Using notecards and string to simulate variables within a program, students implement a few short programs. Once comfortable with this syntax, students use the same process with sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: Sprite Movement
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Conditionals:
              name: Conditionals
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: Keyboard Input
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the simple `keyDown()` command learned yesterday, students will learn about several other keyboard input commands as well as ways to take mouse input.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Velocity:
              name: Velocity
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: Collision Detection
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: Collisions
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: Functions
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: The Game Design Process
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            Project - Design a Game:
              name: Project - Design a Game
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
              description_student: ''
              description_teacher: ''
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
        csd2-2018:
          title: CSD Unit 2 - Web Development ('18-'19)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          lessons:
            Exploring Websites:
              name: Exploring Websites
              description_student: This lesson covers the purposes that a website might serve, both for the users and the creators. The class explores a handful of the most-used websites in the United States and discusses how each of those sites is useful for users and how it might also serve its creators.
              description_teacher: Every website has a purpose, a reason someone created it and others use it. In this lesson, students will start to consider the purposes a website might serve, both for the users and the creators. Students will explore a handful of the most-used websites in the United States and try to figure out how each of those sites is useful for users and how they might also serve their creators.
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Intro to HTML:
              name: Intro to HTML
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headings:
              name: Headings
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headings.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Digital Footprint:
              name: Digital Footprint
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: "As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r\n\r\nStudents begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r\n\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Lists:
              name: Lists
              description_student: This lesson introduces ordered and unordered lists and the associated  &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; HTML tags.  The class practices using the tags, then goes back to the personal web page project to add a new HTML page that includes the new tags.
              description_teacher: Students are introduced to ordered and unordered lists in HTML and work through a few levels in which they use the &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to their project, where they add a new HTML page.  Inside the new page, they write the HTML to display a recipe, top ten list, or any other content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: Intellectual Property and Images
              description_student: This lesson covers how to use media such as images, video, or music created by others a website while respecting the rights of the creator of that media. After first studying Creative Commons licensing, the class learns how to add images to web pages, and how to give proper attribution when doing so.
              description_teacher: "Starting with a discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \n\nFinally, with a common understanding of the restrictions of various Creative Commons licenses, students learn how to add images to their web pages using the &lt;img&gt; tag."
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: In this lesson covers common issues that arise when designing web pages in HTML. The class will correct errors in a sequence of increasingly complex web pages found on Code Studio and learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read.
              description_teacher: Students deal with common issues that arise when designing web pages in HTML. Students will correct errors in a sequence of increasingly complex web pages. In the process they will learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read. At the end of the lesson students create a list of strategies for debugging web pages and ensuring they are easy to read and maintain.
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
              description_student: 'This lesson covers hyperlinks, which allow web developers to connect pages together into one website.  The class will link together all the previous pages into one project, and create navigation bars for each page before publishing the entire site to the Web.  '
              description_teacher: "After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \r\n\r\n"
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: "This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\r\n\r\n"
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt, the class learns about the inner workings of search engines and has an opportunity to flex their analytical skills in a search for strange and unlikely animals.
              description_teacher: This lesson encourages students to think more critically about how web searches work and how to find relevant and trustworthy information online. After viewing and discussion a video about how search engines work, students will search for information about several unlikely animals. They'll need to analyze the sites they find for reliability in order to identify which of the animals is actually a hoax.
            RGB Colors and Classes:
              name: RGB Colors and Classes
              description_student: This lesson covers classes and custom colors. The class first learns how to specify custom colors using RGB (red, green, blue) values, then applies these colors to a new Four Seasons web page, which uses CSS classes.  Using classes, the class adds more styles to the Four Seasons web page, then use them to style their personal websites.
              description_teacher: In this lesson, students first learn how to specify custom colors using their RGB (red, green, blue) values.  They then apply these colors to a new Four Seasons web page, which uses CSS classes.  CSS classes allow web developers to treat groups of elements they want styled differently than other elements of the same type. Using classes, students add more styles to the Four Seasons web page, then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
              description_student: In the last few days of the unit, the class finalizes their personal websites, working with peers to get feedback, review the rubric, and put the finishing touches on the site. To cap off the unit, everyone shares their projects and how they were developed.
              description_teacher: "Students have spent a lot of time throughout the unit working on their Personal Website. In the final couple of days students finalize their websites.  They work with peers to get feedback, put the finishing touches on the websites, review the rubric and reflect on their process. To cap off the unit, they will share their projects and also a overview of the process they took to get to that final design.\r\n"
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
        coursea-2018:
          title: Course A (2018)
          assignment_family_title: Course A
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: Unspotted Bugs
              description_student: ''
              description_teacher: 'This lesson will guide students through the steps of debugging.  Students will learn the mantra: "What happened?  What was supposed to happen? What does that tell you?"'
            'Persistence & Frustration: Stevie and the Marbles':
              name: Stevie and the Big Project
              description_student: ''
              description_teacher: "When students run into a barrier while answering a question or working on a project, it’s so easy for them to get frustrated and give up.  This lesson will introduce students to the idea that frustration can be an important part of learning. Here, frustration is presented as a step in the creative process, rather than a sign of failure.\r\n\r\nThis lession can be done over one or two class sessions.  If you have more time, feel free to draw out the building and revising phase of the Marble Run activity."
            'Real-life Algorithms: Plant a Seed':
              name: Plant a Seed
              description_student: ''
              description_teacher: "In this lesson, students will relate the concept of algorithms back to everyday, real-life activities by planting an actual seed. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.\r\n"
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.
            'Programming: Happy Maps':
              name: Happy Maps
              description_student: ''
              description_teacher: The bridge from algorithms to programming can be a short one if students understand the difference between planning out a sequence and encoding that sequence into the appropriate language.  This activity will help students gain experience reading and writing in shorthand code.
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: ''
              description_teacher: In this series of online puzzles, students will build on the understanding of algorithms, debugging, and general computer literacy. Featuring characters from the game Angry Birds, students will develop sequential algorithms to get the bird to the pig without crashing into walls or TNT. Debugging puzzles have also been mixed into this stage for added practice with problem solving and critical thinking.
            Going Places Safely:
              name: Going Places Safely
              description_student: ''
              description_teacher: In collaboration with [r common-sense-media], this lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests. Students also find out that they can go to exciting places online, but they need to follow certain rules to remain safe.
            'Loops: Happy Loops':
              name: Happy Loops
              description_student: ''
              description_teacher: Loops are a very helpful and powerful tool in programming. To understand how helpful loops can be, students will need to be driven to want an easier way to solve mundane problems.
            Loops in Collector:
              name: Loops with Laurel
              description_student: ''
              description_teacher: Building on the concept of repeating instructions from "Happy Loops," this stage will have students using loops to collect treasure more efficiently on Code.org.
            Loops in Artist:
              name: Ocean Scene with Loops
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous plugged lesson, loops were used to traverse a maze and collect treasure. Here, loops are creating patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: ''
              description_teacher: Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
            Events in Play Lab:
              name: On the Move with Events
              description_student: ''
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all of the coding skills they've learned to create an animated game. It's time to get creative and make a story in the Play Lab!
            Programming in Bee:
              name: Programming in Bee
            Programming in Harvester:
              name: Programming with Harvester
            Loops in Harvester:
              name: Loops with Harvester
            Sequencing in Maze:
              name: Sequencing with Angry Birds
            'Persistence & Frustration: Stevie and the Big Project':
              name: Stevie and the Big Project
        express-2018:
          title: Express Course
          assignment_family_title: Express Course
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
              description_student: ''
              description_teacher: ''
            Introduction:
              name: Introduction
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Debugging in Collector:
              name: Debugging in Collector
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Sticker Art with Loops
              description_student: ''
              description_teacher: ''
            Nested Loops:
              name: Nested Loops
              description_student: ''
              description_teacher: ''
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
              description_student: ''
              description_teacher: ''
            'How it Works: The Internet':
              name: 'How it Works: The Internet'
              description_student: ''
              description_teacher: ''
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
              description_student: ''
              description_teacher: ''
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: The Big Event
              description_student: ''
              description_teacher: ''
            Events in Star Wars:
              name: Events in Star Wars
              description_student: ''
              description_teacher: ''
            Events with Flappy:
              name: Events with Flappy
              description_student: ''
              description_teacher: ''
            Events in Bounce:
              name: Events in Bounce
              description_student: ''
              description_teacher: ''
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While Loops with the Farmer
              description_student: ''
              description_teacher: ''
            Conditional Loops in Maze:
              name: Conditional Loops in Maze
              description_student: ''
              description_teacher: ''
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
              description_student: ''
              description_teacher: ''
            'Variables: Envelope Variables':
              name: 'Variables: Envelope Variables'
              description_student: ''
              description_teacher: ''
            Variables in Artist:
              name: Variables in Artist
              description_student: ''
              description_teacher: ''
            Variables in Play Lab:
              name: Variables in Play Lab
              description_student: ''
              description_teacher: ''
            'For Loops: For Loop Fun':
              name: 'For Loops: For Loop Fun'
              description_student: ''
              description_teacher: ''
            For Loops in Bee:
              name: For Loops with Bee
              description_student: ''
              description_teacher: ''
            For Loops in Artist:
              name: For Loops with Artist
              description_student: ''
              description_teacher: ''
            'Functions: Songwriting with Parameters':
              name: 'Functions: Songwriting with Parameters'
              description_student: ''
              description_teacher: ''
            Functions in Bee:
              name: Functions in Bee
              description_student: ''
              description_teacher: ''
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
              description_student: ''
              description_teacher: ''
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
              description_student: ''
              description_teacher: ''
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: ''
              description_teacher: ''
            The Design Process:
              name: The Design Process
              description_student: ''
              description_teacher: ''
            Build Your Project:
              name: Build Your Project
              description_student: ''
              description_teacher: ''
            Revise Your Project:
              name: Revise Your Project
              description_student: ''
              description_teacher: ''
            Present Your Project:
              name: Present Your Project
              description_student: ''
              description_teacher: ''
            Conditionals in Bee:
              name: If/Else with Bee
            Until Loops in Maze:
              name: Until Loops in Maze
            Programming in Maze:
              name: Coding with Angry Birds
            Debugging in Maze:
              name: Debugging with Scrat
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            'Loops: Getting Loopy':
              name: Getting Loopy
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Copyright and Creativity:
              name: Copyright and Creativity
            'Concept Practice with Minecraft ':
              name: Looking Ahead with Minecraft
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Frozen:
              name: Nested Loops with Anna and Elsa
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            'Functions: Songwriting':
              name: Songwriting
            Functions in Minecraft:
              name: Functions with Minecraft
            Functions in Harvester:
              name: Functions with the Harvester
            Functions in Artist:
              name: Functions in Artist
            Screen Out the Mean:
              name: Screen Out the Mean
            Determine the Concept:
              name: Determine the Concept
            Build a Flappy Game:
              name: Build a Flappy Game
            The Power of Words:
              name: The Power of Words
            Envelope Variables:
              name: Envelope Variables
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            For Loop Fun:
              name: For Loop Fun
            Learning Sprites with Sprite Lab:
              name: Learning Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe
            Binary Bracelets:
              name: Binary Bracelets
            'Unplugged: Binary':
              name: Binary Images
            Artist Binary:
              name: Binary Images with Artist
            Internet:
              name: The Internet
            Crowdsourcing:
              name: Crowdsourcing
            Relay Programming:
              name: Relay Programming
            Graph Paper Programming:
              name: Graph Paper Programming
        courseb-2018:
          title: Course B (2018)
          assignment_family_title: Course B
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
              description_student: ''
              description_teacher: ''
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
              description_student: ''
              description_teacher: ''
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
              description_student: ''
              description_teacher: ''
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: ''
            Your Digital Footprint:
              name: Your Digital Footprint
              description_student: ''
              description_teacher: ''
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: Programming in Maze
              description_student: ''
              description_teacher: ''
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
              description_student: ''
              description_teacher: ''
            Loops in Collector:
              name: Loops with Laurel
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Drawing Gardens with Loops
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: ''
              description_teacher: ''
            Events in Play Lab:
              name: A Royal Battle with Events
              description_student: ''
              description_teacher: ''
            Programming in Ice Age:
              name: Programming with Scrat
            Loops in Ice Age:
              name: Loops with Scrat
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Move It, Move It:
              name: Move It, Move It
            Copyright and Creativity:
              name: It's Great to Create and Play Fair
        coursed-2018:
          title: Course D (2018)
          assignment_family_title: Course D
          description: Students develop their understanding of nested loops, while loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements and create your own art, story or game.
          description_audience: 'Ages: 7-11'
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
              description_student: ''
              description_teacher: ''
            Introduction:
              name: Introduction
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Debugging in Collector:
              name: Debugging with Laurel
              description_student: ''
              description_teacher: ''
            Events in Bounce:
              name: Events in Bounce
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Drawing Shapes with Loops
              description_student: ''
              description_teacher: ''
            Nested Loops in Bee:
              name: Nested Loops in Maze
              description_student: ''
              description_teacher: ''
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While Loops in Farmer
              description_student: ''
              description_teacher: ''
            Conditionals with Cards:
              name: Conditionals with Cards
              description_student: ''
              description_teacher: ''
            Conditionals in Bee:
              name: If/Else with Bee
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
              description_student: ''
              description_teacher: ''
            Digital Citizenship:
              name: Digital Citizenship
              description_student: ''
              description_teacher: ''
            Build a Play Lab Game:
              name: Ninjas vs. Pirates Game
              description_student: ''
              description_teacher: ''
            'Unplugged: Binary':
              name: Binary Images
              description_student: ''
              description_teacher: ''
            Artist Binary:
              name: Binary Images with Artist
              description_student: ''
              description_teacher: ''
            Loops in Ice Age:
              name: Loops in Ice Age
            Nested Loops in Frozen:
              name: Snowflakes with Anna and Elsa
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals in Maze:
              name: Conditionals in Maze
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            Graph Paper Programming:
              name: Graph Paper Programming
            Relay Programming:
              name: Relay Programming
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
            Events in Bouncey:
              name: Events in Bouncey
            Nested Loops in Bees:
              name: Nested Loops in Bees
            Nested Loops in Maze:
              name: Nested Loops in Maze
        jr-test:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Programming with Behaviors:
              name: Programming with Behaviors
            Programming with Forever:
              name: Programming with Forever
            Using Behaviors:
              name: Using Behaviors
            Using Forever Loops:
              name: Using Forever Loops
            Virtual Pet - Behaviors:
              name: Virtual Pet - Behaviors
            Fish Tank:
              name: Fish Tank
            Virtual Pet - Forever:
              name: Virtual Pet - Forever
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
        petgame:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            pet game:
              name: pet game
        csp-exam:
          title: CS Principles AP Exam Prep
          description_audience: ''
          description_short: CS Principles AP Exam Prep
          description: 'This page contains copies of all the multiple choice assessment questions that appeared in Units 1-5 in the course.  Students may want to practice for the multiple choice exam by re-taking these little tests.  '
          lesson_groups: {}
          lessons:
            Unit 1 - Assessment 1:
              name: Unit 1 - Assessment 1
            Unit 1 - Assessment 2:
              name: Unit 1 - Assessment 2
            Unit 2 - Assessment 1:
              name: Unit 2 - Assessment 1
            Unit 2 - Assessment 2:
              name: Unit 2 - Assessment 2
            Unit 3 - Assessment 1:
              name: Unit 3 - Assessment 1
            Unit 4 - Assessment 1:
              name: Unit 4 - Assessment 1
            Unit 5 - Assessment 1:
              name: Unit 5 - Assessment 1
            Unit 5 - Assessment 2:
              name: Unit 5 - Assessment 2
            Unit 2 - Assessment 3:
              name: Unit 2 - Assessment 3
            Unit 2 - Assessment 4:
              name: Unit 2 - Assessment 4
            Unit 2 - Assessment 5 - Practice AP Pseudocode Questions:
              name: Unit 2 - Assessment 5 - Practice AP Pseudocode Questions
            'Unit 1.1 - Binary and Ascii ':
              name: 'Unit 1.1 - Binary and Ascii '
            Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.:
              name: Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.
            Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression
            Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction:
              name: Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction
            Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction:
              name: Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction
            'Unit 1 Assessment 1 - Binary and Ascii ':
              name: 'Unit 1 Assessment 1 - Binary and Ascii '
            Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc:
              name: Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc
            Unit 2-1 - Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2-1 - Bits, Bytes, Hexadecimal and Compression
            Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction
            Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression
            Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction
            Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption:
              name: Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption
            Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review:
              name: Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review
            Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings:
              name: Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings
            Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists:
              name: Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists
            Unit 5 Assessment 4 - List Algorithms, Functions with Return Values:
              name: Unit 5 Assessment 4 - List Algorithms, Functions with Return Values
            Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals):
              name: Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals)
        coursec-2018:
          title: Course C (2018)
          assignment_family_title: Course C
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups: {}
          lessons:
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: ''
              description_teacher: ''
            Debugging in Maze:
              name: Debugging in Maze
              description_student: ''
              description_teacher: ''
            'Real-life Algorithms: Paper Planes':
              name: Paper Planes
              description_student: ''
              description_teacher: ''
            Programming in Collector:
              name: Collecting Treasure with Laurel
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Creating Art with Code
              description_student: ''
              description_teacher: ''
            'Loops: Getting Loopy':
              name: Getting Loopy
              description_student: ''
              description_teacher: ''
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Sticker Art with Loops
              description_student: ''
              description_teacher: ''
            Loops in Harvester:
              name: Harvesting Crops with Loops
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: The Big Event
              description_student: ''
              description_teacher: ''
            Build a Flappy Game:
              name: Build a Flappy Game
              description_student: ''
              description_teacher: ''
            Events in Play Lab:
              name: Chase Game with Events
              description_student: ''
              description_teacher: ''
            Screen Out the Mean:
              name: Screen Out the Mean
              description_student: ''
              description_teacher: ''
            Binary Bracelets:
              name: Binary Bracelets
              description_student: ''
              description_teacher: ''
            Looking Ahead:
              name: Looking Ahead with Minecraft
        csd6-2018:
          title: CSD Unit 6 - Physical Computing ('18-'19)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          lessons:
            Innovations in Computing_:
              name: Innovations in Computing_
              description_student: ''
              description_teacher: ''
            Designing Screens with Code_:
              name: Designing Screens with Code_
              description_student: ''
              description_teacher: ''
            The Circuit Playground_:
              name: The Circuit Playground_
              description_student: ''
              description_teacher: ''
            Input Unplugged_:
              name: Input Unplugged_
              description_student: ''
              description_teacher: ''
            Board Events_:
              name: Board Events_
              description_student: ''
              description_teacher: ''
            Getting Properties_:
              name: Getting Properties_
              description_student: ''
              description_teacher: ''
            Analog Input_:
              name: Analog Input_
              description_student: ''
              description_teacher: ''
            The Program Design Process_:
              name: The Program Design Process_
              description_student: ''
              description_teacher: ''
            'Project: Make a Game__':
              name: 'Project: Make a Game__'
              description_student: ''
              description_teacher: ''
            Arrays and Color LEDs__:
              name: Arrays and Color LEDs__
              description_student: ''
              description_teacher: ''
            Making Music_:
              name: Making Music_
              description_student: ''
              description_teacher: ''
            Arrays and For Loops_:
              name: Arrays and For Loops_
              description_student: ''
              description_teacher: ''
            Accelerometer_:
              name: Accelerometer_
              description_student: ''
              description_teacher: ''
            Functions with Parameters_:
              name: Functions with Parameters_
              description_student: ''
              description_teacher: ''
            Circuits and Physical Prototypes_:
              name: Circuits and Physical Prototypes_
              description_student: ''
              description_teacher: ''
            'Project: Prototype an Innovation_':
              name: 'Project: Prototype an Innovation_'
              description_student: ''
              description_teacher: ''
            Innovations in Computing:
              name: Innovations in Computing
            Designing Screens with Code:
              name: Designing Screens with Code
            The Circuit Playground:
              name: The Circuit Playground
            Input Unplugged:
              name: Input Unplugged
            Board Events:
              name: Board Events
            Getting Properties:
              name: Getting Properties
            Analog Input:
              name: Analog Input
            The Program Design Process:
              name: The Program Design Process
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
        coursee-2018:
          title: Course E (2018)
          assignment_family_title: Course E
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Programming: My Robotic Friends':
              name: My Robotic Friends
              description_student: ''
              description_teacher: ''
            Sequence in Maze:
              name: Coding with Comments
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Debugging with Scrat:
              name: Debugging with Scrat
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Creating Art with Code
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Drawing Shapes with Loops
              description_student: ''
              description_teacher: ''
            Nested Loops:
              name: Nested Loops in Maze
              description_student: ''
              description_teacher: ''
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
              description_student: ''
              description_teacher: ''
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
              description_student: Learn how to describe a game from the computer's point of view in this lesson on algorithms.
              description_teacher: In this lesson, students will relate the concept of algorithms back to real-life activities by playing the Dice Race game. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.
            Introduction:
              name: Introduction
              description_student: This fast-paced introduction will give you the chance to practice most of the skills that you will need to solve the puzzles in this course.
              description_teacher: In this progression, students will begin with an introduction (or review depending on the experience of your class) of Code.org's online workspace. Students will learn the basic functionality of the interface including the `Run`, `Reset`, and `Step` buttons. Dragging, deleting, and connecting Blockly blocks is also introduced in the beginning video. In the puzzles, students will practice their sequencing and debugging skills in Maze and Artist.
            Conditionals:
              name: Conditionals with the Farmer
              description_student: You will get to tell the computer what to do under certain conditions in this fun and challenging series.
              description_teacher: This lesson introduces students to `while` loops and `if / else` statements. _While loops_ are loops that continue to repeat commands as long as a condition is true. While loops are used when the programmer doesn't know the exact number of times the commands need to be repeated, but the programmer does know what condition needs to be true in order for the loop to continue looping. `If / Else` statements offer flexibility in programming by running entire sections of code only if something is true, otherwise it runs something else.
            Private and Personal Information:
              name: Private and Personal Information
              description_student: The internet is fun and exciting, but it's important to stay safe too. This lesson teaches you the difference between information that is safe to share and information that is private.
              description_teacher: |-
                Developed by Common Sense Education, this lesson is about the difference between information that is safe to share online and information that is not.

                As students visit sites that request information about their identities, they learn to adopt a critical inquiry process that empowers them to protect themselves and their families from identity theft. In this lesson, students learn to think critically about the user information that some websites request or require. They learn the difference between private information and personal information, as well as how to distinguish what is safe or unsafe to share online.
            Build a Star Wars Game:
              name: Build a Star Wars Game
              description_student: Feel the force as you build your own Star Wars game in this lesson.
              description_teacher: In this lesson, students will practice using events to build a game that they can share online. Featuring R2-D2 and other Star Wars characters, students will be guided through events, then given space to create their own game.
            'Functions: Songwriting':
              name: Songwriting
              description_student: Even rockstars need programming skills. This lesson will teach you about functions using lyrics from songs.
              description_teacher: One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.
            Functions in Artist:
              name: Functions with Artist
              description_student: Make complex drawings more easily with functions!
              description_teacher: Students will be introduced to using functions on Code.org. Magnificent images will be created and modified with functions in Artist. For more complicated patterns, students will learn about nesting functions by calling one function from inside another.
            Functions in Bee:
              name: Functions with Bee
              description_student: Don't write too much code to gather all of the nectar and honey. Use functions instead!
              description_teacher: In the second round of practice with online functions, students will navigate complex paths, collect plenty of nectar, and make lots of honey.
            Functions in Harvester:
              name: Functions with Harvester
              description_student: ''
              description_teacher: ''
            Determine the Concept:
              name: Determine the Concept
              description_student: "We aren't giving away any secrets! \nThis lesson could use any of the skills you've learned so far."
              description_teacher: This lesson brings together concepts from the previous lessons and gives students a chance to think critically about how they would solve each problem, but without telling them which concept to apply. Students will review basic algorithms, debugging, `repeat` loops, conditionals, `while` loops, and functions.
            Build a Play Lab Game:
              name: Build a Play Lab Game
              description_student: Practice making games to share with your friends and family.
              description_teacher: This lesson features Play Lab, a platform where students can create their own games and have interactions between characters and user input. Students will work with events to create keyboard controls. This set of puzzles will also loosely guide students through game development, but with freedom to add their own ideas.
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: Here are several games and drawings. Play with each of them to get ideas for projects of your own!
              description_teacher: "The next four lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. Intended to be a multi-lesson or multi-week experience, students will spend time exploring brainstorming, learning about the design process, building, and presenting their final work. \n\nIn the explore stage, students will be able to view pre-built examples of projects in both Artist and Play Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in either Artist or Play Lab (this is likely the longest stage of the project). Finally, students will be able to present their finished work to their peers."
            The Design Process:
              name: The Design Process
              description_student: Projects this big take time and plenty planning. Here, you will learn about the design process that you'll use to build your own creation.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. In this portion of the project, students will learn about the design process and how to implement it in their own projects. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Build Your Project:
              name: Build Your Project
              description_student: Get those hands ready for plenty of coding! It's time to start building your project.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. Now the students will be given their own space to create their project with either Artist or Play Lab. This is likely to be the longest stage of the project. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Present Your Project:
              name: Present Your Project
              description_student: Get ready to show off! It's time to present your finished project to your peers.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. Finally, students will be able to present their finished work to their peers or share with their loved ones with a special link. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Internet:
              name: The Internet
              description_student: Ever wondered how information travels across the internet? It's not magic! This lesson will teach you the basics of how the internet works.
              description_teacher: Even though many people use the internet daily, not very many know how it works. In this lesson, students will pretend to flow through the internet, all the while learning about connections, URLs, IP Addresses, and the DNS.
            Crowdsourcing:
              name: Crowdsourcing
              description_student: This lesson will teach you about crowdsourcing, the process of building a project with a team.
              description_teacher: In computer science, we face some big, daunting problems. Challenges such as finding large prime numbers or sequencing DNA are almost impossible to do as an individual. Adding the power of others makes these tasks manageable. This lesson will show your students how helpful teamwork can be in the industry of computer science.
            Conditionals with Cards:
              name: Conditionals with Cards
            Minecraft Hour of Code:
              name: Minecraft Hour of Code
            Functions in Minecraft:
              name: Functions in Minecraft
            Learning Sprites with Sprite Lab:
              name: Learning Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe
            Copyright and Creativity:
              name: Digital Sharing
        coursef-2018:
          title: Course F (2018)
          assignment_family_title: Course F
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: My Robotic Friends
              description_student: ''
              description_teacher: ''
            Sequence in Maze:
              name: Coding with Comments
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Debugging with Scrat:
              name: Debugging with Scrat
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Creating Art with Code
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Drawing Shapes with Loops
              description_student: ''
              description_teacher: ''
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Maze
              description_student: ''
              description_teacher: ''
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
              description_student: ''
              description_teacher: ''
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
              description_student: Here you will learn about algorithms using puzzles called tangrams!
              description_teacher: This lesson shows us something important about algorithms. As long as you keep an algorithm simple, there are lots of ways to use it. However, if you want to make sure everyone produces the same outcome, then your algorithm needs more detail. Students will learn the difference between a detailed and general algorithm while playing with tangrams.
            Introduction:
              name: Introduction
              description_student: This lesson will give you a brief introduction to some of the amazing things you will learn in this course!
              description_teacher: 'In this lesson, students will be introduced to sequences, loops, and nested loops to prepare them for more complicated concepts in the later part of the course. This "ramp up" lesson equalizes the playing field between the experts and the beginners in your class. '
            The Power of Words:
              name: The Power of Words
              description_student: Bullying is never okay. This lesson will teach you about what is and isn't okay to say online.
              description_teacher: "Students consider that while they are enjoying their favorite websites they may encounter messages from other kids that can make them feel angry, hurt, sad, or fearful. They explore ways to handle cyberbullying and how to respond in the face of upsetting language online.\n\nStudents discuss all the ways they use technology for communication and explore the similarities and differences between in-person and online communication. Students then brainstorm ways to respond to cyberbullying. "
            Ice Age Play Lab:
              name: Ice Age Play Lab
              description_student: Think of your favorite video game. Ever wondered how it was made? In these puzzles you will develop a video game of your own with friends from Ice Age!
              description_teacher: In this lesson, students are guided through a story featuring characters from Ice Age. Students will work with events and loops to make characters move on the screen, and will get the chance to create their own game or story after the guided levels.
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
              description_student: Avoid the lava! Here you will learn about conditionals in the world of Minecraft.
              description_teacher: This lesson gives students a chance to learn and practice conditionals. It features characters and settings from Minecraft, and students will complete tasks such as mining and building structures using their programs.
            Envelope Variables:
              name: Envelope Variables
              description_student: 'Envelopes and variables have something in common: both can hold valuable things. Here you will learn what variables are and the awesome things they can do.'
              description_teacher: Variables are used as placeholders for values such as numbers or words. Variables allow for a lot of freedom in programming. Instead of having to type out a phrase many times or remember an obscure number, computer scientists can use variables to reference them. This lesson helps to explain what variables are and how we can use them in many different ways. The idea of variables isn't an easy concept to grasp, so we recommend allowing plenty of time for discussion at the end of the lesson.
            Variables in Artist:
              name: Variables in Artist
              description_student: Don't forget to bring creativity to class! In these puzzles you will be making fantastic drawings using variables.
              description_teacher: In this lesson, students will explore the creation of repetitive designs using variables in the Artist environment. Students will learn how variables can be used to make code easier to write and easier to read. After guided puzzles, students will end in a freeplay level to show what they have learned and create their own designs.
            Variables in Play Lab:
              name: Variables in Play Lab
              description_student: Soon you will learn about making characters interact in a game using variables!
              description_teacher: Students will get further practice with variables in this lesson by creating scenes in Play Lab. Students will work with user input to set the values of their variables, then get space to create their own mini-project with variables.
            For Loop Fun:
              name: For Loop Fun
              description_student: You're going to have loads of fun learning about `for` loops!
              description_teacher: 'We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic. '
            For Loops in Bee:
              name: For Loops with Bee
              description_student: Buzz buzz. In these puzzles you will be guiding a bee to nectar and honey using `for` loops!
              description_teacher: Featuring Bee, this lesson focuses on for loops and using an incrementing variable to solve more complicated puzzles. Students will begin by reviewing loops from previous lessons, then walked through using for loops to more effectively solve complicated problems.
            For Loops in Artist:
              name: For Loops with Artist
              description_student: Get ready to make your next masterpiece. Here you will be using `for` loops to make some jaw-dropping pictures.
              description_teacher: In this lesson, students continue to practice for loops, this time with Artist. Students will complete puzzles combining the ideas of variables, loops, and for loops to create complex designs. At the end, they will have a chance to create their own art in a freeplay level.
            Songwriting with Parameters:
              name: Songwriting with Parameters
              description_student: You just might release the next big hit single! In this lesson, you will be learning what parameters are and how they make some fantastic songs!
              description_teacher: One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions is such a helpful practice, and how they can use those structures even when chunks of code are slightly different.
            Functions in Bee:
              name: Functions in Bee
              description_student: ''
              description_teacher: ''
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
              description_student: Get your programming fingers ready. In these puzzles you will make impressive drawings in Artist using functions with parameters.
              description_teacher: In this lesson, students continue working with functions with and without parameters. Students will get the chance to create their own drawings with and without parameters, before modifying functions in a freeplay level.
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
              description_student: You've had a little practice using functions with parameters. This lesson will continue your practice with Bee!
              description_teacher: This lesson features the bee environment, and continues along the concept of functions with parameters from the previous Artist stage. Students will practice writing and using functions to follow complex paths and collect patterns of nectar and honey.
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: Time to get some inspiration! These puzzles will show you a handful of pre-built games and illustrations to help develop your plan for your BIG project.
              description_teacher: "The next five lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. This is intended to be a multi-lesson or multi-week project where students spend time brainstorming, learning about the design process, building, and then presenting their final work. \n\nIn the explore stage, students will be able to view examples of projects in both Artist and Play Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in either Artist or Play Lab (this is most likely the longest stage of the project). Students will then revise their projects, after testing and extra thought. Finally, students will be able to present their finished work to their peers."
            The Design Process:
              name: The Design Process
              description_student: Projects this big take time and plenty planning. Here, you will learn about the design process that you'll use to build your own creation.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. In this portion of the project, students will learn about the design process and how to implement it in their own projects. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Build Your Project:
              name: Build Your Project
              description_student: Finally you can start building your project!
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Now the students will be given their own space to create their project with either Artist or Play Lab. This will be the longest portion of the project. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Revise Your Project:
              name: Revise Your Project
              description_student: Rome wasn't built in a day and your project shouldn't be, either. Take time to edit and revise your project to make it the best it can be.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Now that the projects are built, students are given the opportunity to get feedback from peers and revise their projects. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Present Your Project:
              name: Present Your Project
              description_student: Time to show your work! Here you will be presenting your awesome project to your peers.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Finally, students will be able to present their finished work to their peers or share with their loved ones with a special link. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals:
              name: Conditionals with the Farmer
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            Learning Sprites with Sprite Lab:
              name: Learning Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe
            Functions in Minecraft:
              name: Functions with Minecraft
            Conditionals in Farmer:
              name: Conditionals with the Farmer
        csp1-2018:
          title: CSP Unit 1 - The Internet ('18-'19)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          lessons:
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
              description_student: ''
              description_teacher: ''
            Personal Innovations:
              name: Personal Innovations
              description_student: ''
              description_teacher: ''
            Sending Binary Messages:
              name: Sending Binary Messages
              description_student: ''
              description_teacher: ''
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
              description_student: ''
              description_teacher: ''
            Number Systems:
              name: Number Systems
              description_student: ''
              description_teacher: ''
            Binary Numbers:
              name: Binary Numbers
              description_student: ''
              description_teacher: ''
            Sending Numbers:
              name: Sending Numbers
              description_student: ''
              description_teacher: ''
            Encoding and Sending Formatted Text:
              name: Encoding and Sending Formatted Text
              description_student: ''
              description_teacher: ''
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            The Internet:
              name: The Internet
              description_student: ''
              description_teacher: ''
            The Need for Addressing:
              name: The Need for Addressing
              description_student: ''
              description_teacher: ''
            Routers and Redundancy:
              name: Routers and Redundancy
              description_student: ''
              description_teacher: ''
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
              description_student: ''
              description_teacher: ''
            The Need for DNS:
              name: The Need for DNS
              description_student: ''
              description_teacher: ''
            HTTP and Abstraction:
              name: HTTP and Abstraction
              description_student: ''
              description_teacher: ''
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
              description_student: ''
              description_teacher: ''
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
              description_student: ''
              description_teacher: ''
            Sending Text:
              name: Sending Text
        csd1-2018:
          title: CSD Unit 1 - Problem Solving ('18-'19)
          description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
              description_student: ''
              description_teacher: ''
            Intro to Problem Solving:
              name: Intro to Problem Solving
              description_student: 'The class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
              description_teacher: In this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: This lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
              description_teacher: This lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: 'In this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems.'
              description_teacher: "In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\r\n\r\nThis lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day."
            What is a Computer?:
              name: What is a Computer?
              description_student: In this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition.
              description_teacher: "In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.\r\n"
            Input and Output:
              name: Input and Output
              description_student: In this the class students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device.  To conclude the lesson the class examines common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device. Earlier in the activity students are prompted to focus on more obvious physical inputs and outputs (e.g. a keyboard as an input or a screen as an output) but later discussions lead students to consider less obvious examples (e.g. that a touch screen is both an input and output, or the fact that the Internet can serve as both input and output). Throughout the lesson the teacher records inputs and outputs that are identified on a T-Chart at the front of the room. To conclude the lesson students examine common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
            Processing:
              name: Processing
              description_student: This lesson dives deeper into the concept of processing that was introduced as part of the definition of a computer.  Pairs work together to put a deck of cards in order, a form of processing information.  In the end, the class discusses what processing means within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first activity has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that force students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Storage:
              name: Storage
              description_student: This lesson focuses on the storage component of the definition of a computer, within the content of processing information. The class spends the majority of the lesson developing and sharing algorithms to process information, with an emphasis on how much storage is needed for any particular algorithm. The lesson concludes with a discussion of the importance of storage while processing information.
              description_teacher: Students explore the importance of storage within the Input-Storage-Processing-Output model of a computer. The warm-up activity asks students to reflect on the types of information they have seen computers store in the past, like documents, photographs, or videos. The unplugged main activity has students develop an algorithm to process a small pile of cards in search of specific cards within the deck. Constraints on how students can move the cards force them to consider the importance of storage even while they are processing the deck. The lesson concludes with a discussion of the two types of storage students saw in this lesson and the importance of storage while processing information.
            Apps and Problem Solving:
              name: Apps and Problem Solving
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. In pairs, students evaluate various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
            Project - Propose an App:
              name: Project - Propose an App
              description_student: To conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
            Apps and Storage:
              name: Apps and Storage
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson reviews the input, output, storage, and processing aspects of a computer in a context that is relevant and familiar to students: apps. In pairs, students evaluate smartphone applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the processing that turns those inputs into the desired output, and what information they would want to store for later. The class concludes with a discussion that connects the lesson to apps students are more familiar with. '
        csd4-2018:
          title: CSD Unit 4 - The Design Process ('18-'19)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            cspSurvey:
              display_name: Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
              description_student: The class explores a variety of different teapot designs to consider how design choices or made and why. Using the teapots as an example, the class will explore the relationship between users, their needs, and the design of objects they use.
              description_teacher: To kick off a unit devoted to group problem solving and developing products for other users, students begin by investigating the design of various teapots. Students analyze each teapot, attempting to identify how specific user needs might have informed its design. By considering these design choices, and attempting to match each teapot with a potential user, students can begin to see how taking a user-centered approach to designing products (both physical and digital) can make those products more useful and usable. To conclude the activity, students are asked to propose some changes to one of the teapots that would make it more useful or usable.
            Understanding Your User:
              name: Understanding Your User
              description_student: Using user profiles, the class explores how different users might react to a variety of products. Role playing as a different person, each member of the class will get to experience designs through someone else's eyes.
              description_teacher: "Designers need to understand their users’ needs in order to create useful products.  This lesson encourages students to think about how to design for another person by role-playing as someone else using a user profile and reacting as that user to a series of products.  Each student is assigned a user profile describing a person, which they then use to choose appropriate products, critique product design, and suggest improvements to design.\r\n"
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
              description_student: In small groups, the class uses the design process to come up with ideas for smart clothing. From brainstorming, to identifying users, to finally proposing a design, this is the first of several opportunities in this unit to practicing designing a solution for the needs of others.
              description_teacher: This lesson guides students through an abbreviated version of the design process they will be seeing throughout this unit. Students first brainstorm a list of potential users of smart clothing. As a class, they then group these ideas into broad categories and each group will choose one category of user. Groups repeat this process to brainstorm needs or concerns of their user, eventually categorizing these needs and choosing one to focus on. Finally, students design a piece of smart clothing, using the specific needs and concerns they brainstormed to guide their decision making. At the end of the class students quickly share their decision-making process and get feedback on how well their product addresses the user need they selected.
            User Interfaces:
              name: User Interfaces
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Testing:
              name: Feedback and Testing
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Identifying User Needs:
              name: Identifying User Needs
              description_student: Up to this point the users that the class has considered have all been remote, and the only information from users has come through text or role playing. Now the class will rely on each other as potential users, and pairs will get to interview each other to identify needs that could be addressed by developing an app.
              description_teacher: 'Up to this point students have focused on designing for users who are, to some degree, distanced from them. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. This is distance is designed to help students get outside their own head when thinking about users, but in order to get information more directly from an actual user, students need to rely on their classmates. In this lesson students pair up to become users (and designers) for each other, allowing everyone to directly interview their end user and ask questions to better inform their design. Each student pair interviews each other, attempting to identify a specific need that could be addressed by an app. '
            Project - Paper Prototype:
              name: Project - Paper Prototype
              description_student: Using the interview information from the previous lesson, the class comes up with app ideas to address the needs of their users. To express those ideas, and test out their effectiveness, each student creates and tests paper prototypes of their own.
              description_teacher: Based on the peer interview from the previous lesson, each student comes up with an idea for an app that will address their user's problem. Students then get to create their own paper prototype of their app ideas by drawing "screens" on individual notecards. A project guide directs students through the process including building the app and testing it with their user to see if their assumptions about the user interfaces they created are accurate.
            Designing Apps for Good:
              name: Designing Apps for Good
              description_student: To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.
              description_teacher: To kick off the app design project that lasts through the end of the unit, students first explore a number of apps designed for social impact that have been created by other students. The class then reviews the Define, Prepare, Try, and Reflect steps of the Problem Solving process as they develop an idea for an app of their own with social impact. Finally, students will form project teams and lay out a contract for how the team will function throughout the development of their app.
            Market Research:
              name: Market Research
              description_student: Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.
              description_teacher: In this lesson students research apps similar to the one they intend on creating to better understand the needs of their users. Students work within their teams to search the Internet for other apps, then evaluate the ones they find interesting. By the end of the lesson, each team will have a clearer idea about the type of app they want to create and further refine who their target users are. Each team will maintain a list of citations for all the apps they examined for use in their final presentation.
            Paper Prototypes:
              name: Paper Prototypes
              description_student: Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
              description_teacher: "Before starting to design apps, we need to help students to better scope their expectations. Because students will eventually be prototyping these apps in App Lab, they will be in better shape if their ideas align with the kinds of apps that are easily prototyped in App Lab. Teams start this scoping by looking through several example apps designed to demonstrate apps that can be created with App Lab. Teams then can chose one (or more) of the apps as a basis for their own. From there, teams have some time to discuss the basic functionality of their app before using 3x5 index cards to develop paper prototypes.\r\n"
            Prototype Testing:
              name: Prototype Testing
              description_student: In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.
              description_teacher: The primary purpose of developing paper prototypes is that they allow for quick testing and iteration before any code is written. This lesson is focused on giving teams a chance to test their prototypes before moving to App Lab. Teams develop a plan to test with users before running prototype tests with multiple other students in the class (and potentially outside the class). In order to test the prototype with the users, the students will have to assign roles in the testing (the “narrator”, the “computer” and the “observers”) as well as have some questions prepared for the user to answer after the test is complete.
            Digital Design:
              name: Digital Design
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin work on an interactive digital version based on the paper prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital versions of a paper prototype. From there, each group member builds out at least one page of their app in App Lab, to be later combined into a single app.
            Linking Screens:
              name: Linking Screens
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they can then link together using code. Students learn basic event driven programming by building up the model app that they started in the previous lesson. In addition to the screen that students designed yesterday, they'll learn how to create additional screens and even import screens made by others.
            Testing the App:
              name: Testing the App
              description_student: Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.
              description_teacher: 'By the end of the previous lesson each team should have a minimum viable prototype of their app. The primary purpose of this lesson is to have the team actually test the app with other people, preferably from the target audience the app is intended for, or from different teams in the class while observers from the team will record the results on the worksheets they used in the planning phase. As with testing the paper prototypes, teams will start by planning for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              name: Improving and Iterating
              description_student: Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
              description_teacher: Teams have at this point developed an app prototype that has gone through multiple iterations and rounds of user testing. With the information and guidance gained from the last round of user testing, each student has the opportunity to plan for and implement improvements to the team app. Depending on the time you have available, and student interest, you can run the cycle of testing and iteration as many times as you see fit.
            Project - App Presentation:
              name: Project - App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
        csd5-2018:
          title: CSD Unit 5 - Data and Society ('18-'19)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Representation Matters:
              name: Representation Matters
              description_student: This first lesson provides an overview of what data is and how it is used to solve problems.  Groups use a data set to make a series of meal recommendations for people with various criteria.   Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
              description_teacher: In the first lesson of the data unit, students get an overview of what data is and how it is used to solve problems.  Students start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
            Patterns and Representation:
              name: Patterns and Representation
              description_student: This lesson looks closer at what is needed to create a system of representation.  Groups create systems that can represent any letter in the alphabet using only a single stack of cards, then create messages with their systems and exchange with other groups to ensure the system worked as intended.   The class discusses commonalities between working systems while recognizing that there are many possible working solutions.
              description_teacher: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class  reviews any pros and cons of the different systems. They discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
              description_student: This lesson introduces a formal binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". The class is then introduced to the ASCII system for representing text using binary symbols and practices using this system before encoding their own messages using ASCII.
              description_teacher: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
            Representing Images:
              name: Representing Images
              description_student: This lesson continues the study of binary representation systems, this time with images. The class is introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. After doing a short set of challenges using the Pixelation Widget, the class makes connections between the system for representing images and the system for representing text they learned in the previous lesson.
              description_teacher: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
            Representing Numbers:
              name: Representing Numbers
              description_student: This lesson introduces the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system, the class turns bits "on" or "off" by turning cards face up and face down, then observes the numbers that result from these different patterns.  Eventually, the pattern is extended to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, students extend the pattern to a generic 4-bit system.
            Keeping Data Secret:
              name: Keeping Data Secret
              description_student: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
              description_teacher: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
            Combining Representations:
              name: Combining Representations
              description_student: This lesson combines all three types of binary representation systems (ASCII characters, binary number, and images) to allow for the encode of more complex types information in a record.  After seeing a series of bits and being asked to decode them, the class is introduced to the idea that  understanding binary information requires understanding both the system that is being used and the meaning of the information encoded.
              description_teacher: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
            Project - Create a Representation:
              name: Project - Create a Representation
              description_student: The class designs structure to represent their perfect day using the binary representation systems they've learned in this chapter. After deciding which pieces of information the record should capture, the class will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Afterwards, everyone will use the ASCII, binary number, and image formats they have learned to represent their perfect days try to decipher what a partner's perfect day is like.
              description_teacher: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
            Problem Solving and Data:
              name: Problem Solving and Data
              description_student: This lesson covers how the problem solving process can be tailored to deal with data problems, in particular.  The class is tasked with deciding what a city most needs to spend resources on.  They must find and use data from the Internet to support their decision.
              description_teacher: 'In this lesson, students use the problem solving process from earlier in the course to solve a data problem.  After reviewing the process, the class is presented with a decision: whether a city should build a library, pet shelter, or fire department.  Students work in teams to collect information on the Internet to help them decide what should be built, then use this information build an argument that will convince the city council of their choice.  They then map what they have done to the problem solving process that they have been using throughout the course, comparing the general problem solving process to its specific application to data problems.'
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
              description_student: This lesson covers how data is collected and used by a organizations to solve problems in the real world. The class looks at three scenarios that could be solved using data and brainstorms the types of data they would want to solve them and how they could collect the data.  Each scenario also includes a video about a real-world service that has solved a similar problem with data.
              description_teacher: In this lesson, students look at how data is collected and used by organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they  explored in the last lesson. Then students are presented three scenarios that could be solved using data and brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming, students watch a video about a real-world service and record notes about what data is collected by the real-world service and how it is used. At the end of the lesson, students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
            Structuring Data:
              name: Structuring Data
              description_student: This lesson goes further into the interpretation of data, including cleaning and visualizing raw data sets.  The class first looks at the how presenting data in different ways can help people to understand it better.  After seeing how cleaning and visualization can help people make better decisions, the class looks at what parts of this process can be automated, and what need a human.
              description_teacher: In this lesson, students go further into the collection and interpretation of data, including cleaning and visualizing data.  Students first look at the how presenting data in different ways can help people to understand it better, and they then create visualizations of their own data. Using a the results of a preferred pizza topping survey, students must decide what to do with data that does not easily fit into the visualization scheme that they have chosen.  Finally, students look at which parts of this process can be automated by a computer and which need a human to make decisions.
            Making Decisions with Data:
              name: Making Decisions with Data
              description_student: This lesson gives the class a chance to practice the data problem solving process introduced in the last lesson.  Not all questions have right answers and in some cases the class can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
            Interpreting Data:
              name: Interpreting Data
              description_student: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
              description_teacher: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
            Automating Data Decisions:
              name: Automating Data Decisions
              description_student: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
              description_student: To conclude this unit the class designs ways to use data to make a recommendations or predictions to help solve a problem.  In the first several steps the class brainstorms problems, performs simple research, and defines a problem of their choosing. They then decide what kind of data they want to collect, how it could be collected, and how it could be used, before exchanging feedback and giving a final presentation.
              description_teacher: To conclude this unit, students design a recommendation engine based on data that they collect and analyze from their classmates. After looking at an example of a recommendation app, students follow a project guide to complete this multi-day activity. In the first several steps, students choose what choice they want to help the user to make, what data they need to give the recommendation, create a survey, and collect information about their classmates' choices. They then interpret the data and use what they have learned to create the recommendation algorithm.  Last, they use their algorithms to make recommendations to a few classmates. Students perform a peer review and make any necessary updates to their projects before preparing a presentation to the class.
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
        csp2-2018:
          title: CSP Unit 2 - Digital Information ('18-'19)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1_2018:
              display_name: 'Unit 2: Digital Information'
            cspAssessment:
              display_name: Chapter Assessment
          lessons:
            Bytes and File Sizes:
              name: Bytes and File Sizes
              description_student: ''
              description_teacher: ''
            Text Compression:
              name: Text Compression
              description_student: ''
              description_teacher: ''
            Encoding B&W Images:
              name: Encoding B&W Images
              description_student: ''
              description_teacher: ''
            Encoding Color Images:
              name: Encoding Color Images
              description_student: ''
              description_teacher: ''
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
              description_student: ''
              description_teacher: ''
            Practice PT - Encode an Experience:
              name: Practice PT - Encode an Experience
              description_student: ''
              description_teacher: ''
            Unit 2 Chapter 1 Assessment:
              name: Unit 2 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            Intro to Data:
              name: Intro to Data
              description_student: ''
              description_teacher: ''
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
              description_student: ''
              description_teacher: ''
            Check Your Assumptions:
              name: Check Your Assumptions
              description_student: ''
              description_teacher: ''
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
              description_student: ''
              description_teacher: ''
            Making Data Visualizations:
              name: Making Data Visualizations
              description_student: ''
              description_teacher: ''
            Discover a Data Story:
              name: Discover a Data Story
              description_student: ''
              description_teacher: ''
            Cleaning Data:
              name: Cleaning Data
              description_student: ''
              description_teacher: ''
            Creating Summary Tables:
              name: Creating Summary Tables
              description_student: ''
              description_teacher: ''
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
              description_student: ''
              description_teacher: ''
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
              description_student: ''
              description_teacher: ''
            Lossy vs. Lossless Compression:
              name: Lossy vs. Lossless Compression
            Rapid Research - Format Showdown:
              name: Rapid Research - Format Showdown
            Lossy vs Lossless Compression:
              name: Lossy vs Lossless Compression
            Unit 2 Assessment:
              name: Unit 2 Assessment
        csp3-2018:
          title: CSP Unit 3 - Intro to Programming ('18-'19)
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
              description_student: ''
              description_teacher: ''
            The Need for Algorithms:
              name: The Need for Algorithms
              description_student: ''
              description_teacher: ''
            Creativity in Algorithms:
              name: Creativity in Algorithms
              description_student: ''
              description_teacher: ''
            Using Simple Commands:
              name: Using Simple Commands
              description_student: ''
              description_teacher: ''
            Creating Functions:
              name: Creating Functions
              description_student: ''
              description_teacher: ''
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
              description_student: ''
              description_teacher: ''
            APIs and Function Parameters:
              name: APIs and Function Parameters
              description_student: ''
              description_teacher: ''
            Creating functions with Parameters:
              name: Creating functions with Parameters
              description_student: ''
              description_teacher: ''
            Looping and Random Numbers:
              name: Looping and Random Numbers
              description_student: ''
              description_teacher: ''
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
              description_student: ''
              description_teacher: ''
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            Please complete the CSP Mid-course survey!:
              name: Please complete the CSP Mid-course survey!
              description_student: ''
              description_teacher: ''
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
        csp-explore-2018:
          title: Explore - AP Performance Task Prep ('18-'19)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
              description_student: ''
              description_teacher: ''
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
              description_student: ''
              description_teacher: ''
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
              description_student: ''
              description_teacher: ''
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
        csp-create-2018:
          title: Create - AP Performance Task Prep ('18-'19)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
              description_student: ''
              description_teacher: ''
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
              description_student: ''
              description_teacher: ''
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
              description_student: ''
              description_teacher: ''
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
        csp4-2018:
          title: CSP Unit 4 - Big Data and Privacy ('18-'19)
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1_2018:
              display_name: 'Unit 4: Big Data and Privacy'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            What is Big Data?:
              name: What is Big Data?
              description_student: ''
              description_teacher: ''
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
              description_student: ''
              description_teacher: ''
            Identifying People with Data:
              name: Identifying People with Data
              description_student: ''
              description_teacher: ''
            The Cost of Free:
              name: The Cost of Free
              description_student: ''
              description_teacher: ''
            Simple Encryption:
              name: Simple Encryption
              description_student: ''
              description_teacher: ''
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
              description_student: ''
              description_teacher: ''
            Public Key Crypto:
              name: Public Key Crypto
              description_student: ''
              description_teacher: ''
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
              description_student: ''
              description_teacher: ''
            Practice PT - Big Data and Security Dilemmas:
              name: Practice PT - Big Data and Security Dilemmas
              description_student: ''
              description_teacher: ''
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
              description_student: ''
              description_teacher: ''
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Check Your Assumptions:
              name: Check Your Assumptions
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
        csp5-2018:
          title: CSP Unit 5 - Building Apps ('18-'19)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          lessons:
            Buttons and Events:
              name: Buttons and Events
              description_student: ''
              description_teacher: ''
            Multi-screen Apps:
              name: Multi-screen Apps
              description_student: ''
              description_teacher: ''
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
              description_student: ''
              description_teacher: ''
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
              description_student: ''
              description_teacher: ''
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
              description_student: ''
              description_teacher: ''
            User Input and Strings:
              name: User Input and Strings
              description_student: ''
              description_teacher: ''
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
              description_student: ''
              description_teacher: ''
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
              description_student: ''
              description_teacher: ''
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
              description_student: ''
              description_teacher: ''
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
              description_student: ''
              description_teacher: ''
            While Loops:
              name: While Loops
              description_student: ''
              description_teacher: ''
            Loops and Simulations:
              name: Loops and Simulations
              description_student: ''
              description_teacher: ''
            Introduction to Arrays:
              name: Introduction to Arrays
              description_student: ''
              description_teacher: ''
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
              description_student: ''
              description_teacher: ''
            Processing Arrays:
              name: Processing Arrays
              description_student: ''
              description_teacher: ''
            Functions with Return Values:
              name: Functions with Return Values
              description_student: ''
              description_teacher: ''
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
              description_student: ''
              description_teacher: ''
            'Practice PT: Create':
              name: 'Practice PT: Create'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
              description_student: ''
              description_teacher: ''
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
              description_student: ''
              description_teacher: ''
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
        csppostap-2018:
          title: Post AP - Data Tools ('18-'19)
          description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups:
            csp_postap_1:
              display_name: 'Chapter 1: Manipulating and Visualizing Data'
            csp_postap_2:
              display_name: 'Chapter 2: Apps and Databases'
            cspSurvey:
              display_name: Survey
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
              description_student: ''
              description_teacher: ''
            Permanent Data Storage:
              name: Permanent Data Storage
              description_student: ''
              description_teacher: ''
            Reading Records:
              name: Reading Records
              description_student: ''
              description_teacher: ''
            Deleting Records:
              name: Deleting Records
              description_student: ''
              description_teacher: ''
            Updating Records:
              name: Updating Records
              description_student: ''
              description_teacher: ''
            Importing and Exporting Data:
              name: Importing and Exporting Data
              description_student: ''
              description_teacher: ''
            Visualizing Data:
              name: Visualizing Data
              description_student: ''
              description_teacher: ''
            Sample Apps:
              name: Sample Apps
              description_student: ''
              description_teacher: ''
            Final Project:
              name: Final Project
              description_student: ''
              description_teacher: ''
            Intro to Data:
              name: Intro to Data
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Check Your Assumptions:
              name: Check Your Assumptions
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Discover a Data Story:
              name: Discover a Data Story
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Project - Tell a Data Story:
              name: Project - Tell a Data Story
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            Chapter 1 Assessment:
              name: Chapter 1 Assessment
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
        spritelab:
          title: Introduction to Sprite Lab (PILOT)
          description_audience: Course E/F Students
          description_short: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          lesson_groups: {}
          lessons:
            'Fish Tank: Creating Sprites':
              name: 'Fish Tank: Creating Sprites'
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
        csd1-dlp-18:
          title: CS Discoveries Unit 1 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
        csd2-dlp-18:
          title: CS Discoveries Unit 2 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
        csd3-dlp-18:
          title: CS Discoveries Unit 3 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
        csd4-dlp-18:
          title: CS Discoveries Unit 4 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
        csd5-dlp-18:
          title: CS Discoveries Unit 5 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
        csd6-dlp-18:
          title: CS Discoveries Unit 6 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
        csp1-dlp-18:
          title: CS Principles Unit 1 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
        csp2-dlp-18:
          title: CS Principles Unit 2 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
        csp3-dlp-18:
          title: CS Principles Unit 3 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
        csp4-dlp-18:
          title: CS Principles Unit 4 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
        csp5-dlp-18:
          title: CS Principles Unit 5 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
        csp-explore-dlp-18:
          title: CS Principles Explore Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is the Explore AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Explore AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
            Complete Explore AP Unit Deeper Learning Reflections:
              name: Complete Explore AP Unit Deeper Learning Reflections
            Complete Explore Deeper Learning Reflections:
              name: Complete Explore Deeper Learning Reflections
        csp-create-dlp-18:
          title: CS Principles Create Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is the Create AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Create AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Create Deeper Learning Reflections:
              name: Complete Create Deeper Learning Reflections
        csd-post-survey:
          title: CSD Student Post-Course Survey ('18-'19)
          description_audience: CSD Students
          description_short: CSD Student Post-Course Survey
          description: Welcome to the Code.org CS Discoveries Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            CSD post-course survey:
              name: CSD post-course survey
        csd-novice-18:
          title: CS Discoveries Novice Reflections 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Novice reflection materials for CS Discoveries facilitators in training '
          description: This is the set of novice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflections Overview:
              name: Novice Reflections Overview
            Welcome:
              name: Welcome
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Friday:
              name: Friday
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Monday:
              name: Monday
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
        csd-apprentice-18:
          title: CS Discoveries Apprentice Reflections 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Apprentice reflection materials for CS Discoveries facilitators in training '
          description: This is the set of apprentice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Apprentice Reflection Overview:
              name: Apprentice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
        csp-novice-18:
          title: CS Principles Novice Reflections 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Novice reflection materials for CS Principles facilitators in training '
          description: This is the set of novice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Monday:
              name: Monday
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
        csp-apprentice-18:
          title: CS Principles Apprentice Reflections 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Apprentice reflection materials for CS Principles facilitators in training '
          description: This is the set of apprentice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Apprentice Reflection Overview:
              name: Apprentice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
        pre-express-2018:
          title: Pre-reader Express (2018)
          assignment_family_title: Pre-reader Express
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: Unspotted Bugs
              description_student: ''
              description_teacher: ''
            'Persistence & Frustration: Stevie and the Marbles':
              name: Stevie and the Big Project
              description_student: ''
              description_teacher: ''
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
              description_student: ''
              description_teacher: ''
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: ''
            'Online Safety: Your Digital Footprint':
              name: 'Online Safety: Your Digital Footprint'
              description_student: ''
              description_teacher: ''
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: Programming in Maze
              description_student: ''
              description_teacher: ''
            'Programming: Star Wars':
              name: 'Programming: Star Wars'
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
              description_student: ''
              description_teacher: ''
            Loops in Collector:
              name: Loops with Laurel
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Drawing Gardens with Loops
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: ''
              description_teacher: ''
            Events in Play Lab:
              name: A Royal Battle with Events
              description_student: ''
              description_teacher: ''
            Spelling Bee:
              name: Spelling Bee
              description_student: ''
              description_teacher: ''
            Move It, Move It:
              name: Move It, Move It
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Your Digital Footprint:
              name: Your Digital Footprint
            Programming in Ice Age:
              name: Programming with Scrat
            Copyright and Creativity:
              name: It's Great to Create and Play Fair
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Loops in Ice Age:
              name: Loops with Scrat
            'Persistence & Frustration: Stevie and the Big Project':
              name: Stevie and the Big Project
        spritelab-validated:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
        2018hoc-ab:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Labyrinth:
              name: Labyrinth
        deepdive-debugging:
          title: Debugging Lessons for Educators
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Debugging for AB Educators:
              name: Debugging for AB Educators
            Debugging for CDEF Educators:
              name: Debugging for CDEF Educators
        fit-test:
          title: FIT Training Practice PLC Course
          description_audience: Facilitators in Training
          description_short: FIT Training Course
          description: To be used to demonstrate how the PLC courses work.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Practice Question:
              name: Complete Practice Question
        spritelab-simple:
          title: Introduction to Sprite Lab (EE)
          description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description_short: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description_audience: Course E/F Students
          lesson_groups: {}
          lessons:
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
              description_student: ''
              description_teacher: ''
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
              description_student: ''
              description_teacher: ''
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
              description_student: ''
              description_teacher: ''
        spritelab-ee:
          title: Introduction to Sprite Lab (EE)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
        craft18:
          title: craft18 test script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            craft18 levels:
              name: craft18 levels
        frozen-2018:
          title: New Frozen Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
        frozen-2018-test:
          title: New Frozen Script
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
              description_student: ''
              description_teacher: ''
        dance:
          title: Dance Party (2018)
          description_audience: ''
          description_short: Featuring Katy Perry, Madonna, J. Balvin, Sia, Keith Urban, Ciara, and 25 more!
          description: Code your own dance party to share with your friends!
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Dance Party:
              name: Dance Party
        frozen-2018-test-b:
          title: New Frozen Script
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
              description_student: ''
              description_teacher: ''
        aquatic:
          title: 'Minecraft: Voyage Aquatic'
          description_audience: ''
          description_short: Use your creativity and problem solving skills to explore and build underwater worlds with code!
          description: Minecraft is back with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code.
          lesson_groups: {}
          lessons:
            Aquatic:
              name: Aquatic
        sconyers:
          title: Tracey's Playground
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Lesson the first:
              name: Lesson the first
            Digital Design:
              name: Digital Design
            Linking Screens:
              name: Linking Screens
            Test Lesson:
              name: Test Lesson
        dance--draft:
          title: ''
          description: ''
          description_short: ''
          description_audience: ''
          lessons:
            Dance Party:
              name: Dance Party
              description_student: ''
              description_teacher: ''
        dance-draft:
          title: DO NOT USE
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Dance Party:
              name: Dance Party
              description_student: ''
              description_teacher: ''
        cspplayground:
          title: CSP Playground
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Hannah's Test Stage:
              name: Hannah's Test Stage
            Hannah Test Stage:
              name: Hannah Test Stage
            U4 L02 Variables Investigate:
              name: U4 L02 Variables Investigate
            Variables Investigate:
              name: Variables Investigate
            Variables Explore:
              name: Variables Explore
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey:
              name: Student Survey
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Teacher Surveys:
              name: Teacher Surveys
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Lists Explore:
              name: Lists Explore
        dance-extras:
          title: Keep On Dancing (2018)
          description_audience: ''
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description: Go beyond the first hour with extended project ideas.
          lesson_groups: {}
          lessons:
            Dance Party - Go Further:
              name: Dance Party - Go Further
        coursef-2019:
          title: Course F (2019)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_internet:
              display_name: Internet
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
              description_student: ''
              description_teacher: ''
            Sequence in Maze:
              name: Sequence in Maze
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Debugging with Scrat:
              name: Debugging with Scrat
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Programming in Artist
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: ''
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
              description_student: ''
              description_teacher: ''
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
              description_student: ''
              description_teacher: ''
            Conditionals with Cards:
              name: Conditionals with Cards
              description_student: ''
              description_teacher: ''
            Conditionals in Farmer:
              name: Conditionals in Farmer
              description_student: ''
              description_teacher: ''
            Functions in Minecraft:
              name: Functions in Minecraft
              description_student: Can you figure out how to use functions for the most efficient code?
              description_teacher: Students will begin to understand how functions can be helpful in this fun and interactive Minecraft adventure!
            The Power of Words:
              name: The Power of Words
              description_student: Bullying is never okay. This lesson will teach you about what is and isn't okay to say online.
              description_teacher: "Students consider that while they are enjoying their favorite websites they may encounter messages from other kids that can make them feel angry, hurt, sad, or fearful. They explore ways to handle cyberbullying and how to respond in the face of upsetting language online.\r\n\r\nStudents discuss all the ways they use technology for communication and explore the similarities and differences between in-person and online communication. Students then brainstorm ways to respond to cyberbullying. \r\n\r\nFor more information, please visit: [r common-sense-media-power-of-words]"
            Envelope Variables:
              name: Envelope Variables
              description_student: 'Envelopes and variables have something in common: both can hold valuable things. Here you will learn what variables are and the awesome things they can do.'
              description_teacher: Variables are used as placeholders for values such as numbers or words. Variables allow for a lot of freedom in programming. Instead of having to type out a phrase many times or remember an obscure number, computer scientists can use variables to reference them. This lesson helps to explain what variables are and how we can use them in many different ways. The idea of variables isn't an easy concept to grasp, so we recommend allowing plenty of time for discussion at the end of the lesson.
            Variables as Constant in Artist:
              name: Variables with Artist
              description_student: Don't forget to bring creativity to class! In these puzzles you will be making fantastic drawings using variables.
              description_teacher: In this lesson, students will explore the creation of repetitive designs using variables in the Artist environment. Students will learn how variables can be used to make code easier to write and easier to read, even when the values don't change at runtime.
            Variables that Change in Bee:
              name: Changing Variables with Bee
              description_student: This bee loves variables!
              description_teacher: 'This lesson will help illustrate how variables can make programs more powerful by allowing values to change while the code is running. '
            Variables that Change in Artist:
              name: Changing Variables with Artist
              description_student: In this lesson, you'll make drawings using variables that change as the program runs.
              description_teacher: In this lesson, students will explore the creation of repetitive designs using variables in the Artist environment. Students will learn how variables can be used to make code easier to write and easier to read. After guided puzzles, students will end in a freeplay level to show what they have learned and create their own designs.
            For Loop Fun:
              name: For Loop Fun
              description_student: You're going to have loads of fun learning about `for` loops!
              description_teacher: 'We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic. '
            For Loops in Bee:
              name: For Loops with Bee
              description_student: Buzz buzz. In these puzzles you will be guiding a bee to nectar and honey using `for` loops!
              description_teacher: Featuring Bee, this lesson focuses on `for` loops and using an incrementing variable to solve more complicated puzzles. Students will begin by reviewing loops from previous lessons, then they'll walk through an introduction to `for` loops so they can more effectively solve complicated problems.
            For Loops in Artist:
              name: For Loops with Artist
              description_student: Get ready to make your next masterpiece. Here you will be using `for` loops to make some jaw-dropping pictures.
              description_teacher: In this lesson, students continue to practice `for` loops, but this time with Artist. Students will complete puzzles combining the ideas of variables, loops, and `for` loops to create complex designs. At the end, they will have a chance to create their own art in a freeplay level.
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
              description_student: Learn how to create and edit sprites.
              description_teacher: 'In this lesson, students will learn about the two concepts at the heart of Sprite Lab: sprites and behaviors. Sprites are characters or objects on the screen that students can move, change, and manipulate. Behaviors are actions that sprites will take continuously until they are stopped.'
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: ''
              description_teacher: ''
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
              description_student: ''
              description_teacher: ''
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: Time to get some inspiration! These puzzles will show you a handful of pre-built games and illustrations to help develop your plan for your BIG project.
              description_teacher: "The next five lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. This is intended to be a multi-lesson or multi-week project where students spend time brainstorming, learning about the design process, building, and then presenting their final work. \n\nIn the explore stage, students will be able to view examples of projects in both Artist and Play Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in either Artist or Play Lab (this is most likely the longest stage of the project). Students will then revise their projects, after testing and extra thought. Finally, students will be able to present their finished work to their peers."
            The Design Process:
              name: The Design Process
              description_student: Projects this big take time and plenty planning. Here, you will learn about the design process that you'll use to build your own creation.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. In this portion of the project, students will learn about the design process and how to implement it in their own projects. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Build Your Project:
              name: Build Your Project
              description_student: Finally you can start building your project!
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Now the students will be given their own space to create their project with either Artist or Play Lab. This will be the longest portion of the project. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Revise Your Project:
              name: Revise Your Project
              description_student: Rome wasn't built in a day and your project shouldn't be, either. Take time to edit and revise your project to make it the best it can be.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Now that the projects are built, students are given the opportunity to get feedback from peers and revise their projects. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Present Your Project:
              name: Present Your Project
              description_student: Time to show your work! Here you will be presenting your awesome project to your peers.
              description_teacher: Over the course of five lessons, students will be building up to building a project of their own design using either Play Lab or Artist as their programming environment. Finally, students will be able to present their finished work to their peers or share with their loved ones with a special link. The lesson guide overviewing all five stages of the process can be found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            The Artist:
              name: The Artist
            Nested Loops in the Maze:
              name: Nested Loops in Maze
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you place a loop inside another loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Sequencing in the Maze:
              name: Sequencing in the Maze
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
            Events with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: Create an interactive project that can be shared with classmates.
              description_teacher: 'This lesson features Sprite Lab, a platform where students can create their own interactive animations and games. In addition to behaviors, today students will incorporate user input as events to create an "alien dance party".   '
            Loops with the Artist:
              name: Drawing with Loops
              description_student: In this lesson, loops make it easy to make even cooler images with Artist!
              description_teacher: Watch student faces light up as they make their own gorgeous designs using a small number of blocks and digital stickers! This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity is fantastic for producing artifacts for portfolios or parent/teacher conferences.
            Sprite Lab Behaviors:
              name: Sprite Lab Behaviors
            Editing Behaviors:
              name: Behaviors in Sprite Lab
              description_student: Learn to program your own sprite behaviors!
              description_teacher: Here, students will use Sprite Lab to create their own customized behaviors.
            Virtual Pet:
              name: Virtual Pet with Sprite Lab
              description_student: In this lesson, students will create an interactive Virtual Pet that looks and behaves how they wish. Students will use Sprite Lab's "Costumes" tool to customize their pet's appearance. They will then use events, behaviors, and other concepts they have learned to give their pet a life of its own!
              description_teacher: In this lesson, students will create an interactive Virtual Pet that looks and behaves how they wish. Students will use Sprite Lab's "Costumes" tool to customize their pet's appearance. They will then use events, behaviors, and other concepts they have learned to give their pet a life of its own!
            Data from Sprite Lab:
              name: Data from Sprite Lab
            End of Course Project:
              name: End of Course Project
              description_student: Projects this big take time and plenty of planning. Find your inspiration, develop a plan, and unleash your creativity!
              description_teacher: "The next five lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. This is intended to be a multi-lesson or multi-week project where students spend time brainstorming, learning about the design process, building, and then presenting their final work. \r\n\r\nIn the \"Explore\" stage, students will play around with pre-built Artist and Sprite Lab programs for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in Artist, Sprite Lab, or any other interface that you are comfortable providing. (This is likely the longest stage of the project.) Students will then revise their code after testing and peer review. Finally, students will be able to present their finished work to their classmates."
            Copyright and Creativity:
              name: Copyright and Creativity
            Internet:
              name: The Internet
              description_student: Ever wondered how information travels across the internet? It's not magic! This lesson will teach you the basics of how the internet works.
              description_teacher: Even though many people use the internet daily, not very many know how it works. In this lesson, students will pretend to flow through the internet, all the while learning about connections, URLs, IP Addresses, and the DNS.
            Crowdsourcing:
              name: Crowdsourcing
              description_student: This lesson will teach you about crowdsourcing, the process of building a project with a team.
              description_teacher: In computer science, we face some big, daunting problems. Challenges such as finding large prime numbers or sequencing DNA are almost impossible to do as an individual. Adding the power of others makes these tasks manageable. This lesson will show your students how helpful teamwork can be in the industry of computer science.
            Digital Sharing:
              name: Digital Sharing
              description_student: 'In this lesson, you''ll learn about the challenges and benefits of ownership and copyright. '
              description_teacher: Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.
            Running Simulations:
              name: Running Simulations
            Simulating Experiments:
              name: Simulating Experiments
              description_student: Run simulations on the computer and experiment by changing variables.
              description_teacher: By running a simple simulation in Sprite Lab, students will experience how computing can be used to collect data that identify trends or patterns. After running the simulation multiple times, students will have an opportunity to make a prediction about how changing a variable in the simulation might impact the outcome, and then test that hypothesis.
        dance-low:
          title: Dance Party (Low Bandwidth)
          description_audience: ''
          description_short: Code your own dance party to share with your friends! (This version is for slow connections)
          description: ''
          lesson_groups: {}
          lessons:
            Dance Party:
              name: Dance Party
        coursed-2019:
          title: Course D (2019)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
              description_student: In this lesson, you will program your classmate to draw pictures!
              description_teacher: 'By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. The class will start by having students use symbols to instruct each other to color squares on graph paper in an effort to reproduce an existing picture. If there’s time, the lesson can conclude with images that the students create themselves.  '
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
              description_student: This lesson will give you practice in the skills you will need for this course.
              description_teacher: 'In this set of puzzles, students will begin with an introduction (or review depending on the experience of your class) of Code.org''s online workspace. There will be videos pointing out the basic functionality of the workspace including the `Run`, `Reset`, and `Step` buttons. Also discussed in these videos: dragging Blockly blocks, deleting Blockly blocks, and connecting Blockly blocks. Next, students will practice their _sequencing_ and _debugging_ skills in maze. From there, students will see new types of puzzles like Collector, Artist, and Harvester when they learn the very basics of _loops_.'
            Relay Programming:
              name: Relay Programming
              description_student: Remember at the beginning of the course when you made drawings with code? In this lesson, you will be working with a team to do something very similar!
              description_teacher: This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.
            Debugging in Collector:
              name: Debugging with Laurel
              description_student: Have you ever run into problems while coding? In this lesson, you will learn about the secrets of debugging. Debugging is the process of finding and fixing problems in your code.
              description_teacher: In this online activity, students will practice debugging in the "collector" environment. Students will get to practice reading and editing code to fix puzzles with simple algorithms, loops and nested loops.
            Events in Bounce:
              name: Events in Bounce
              description_student: Ever wish you could play video games in school? In this lesson, you will get to make your own!
              description_teacher: In this online activity, students will learn what events are, and how computers use them in programs like video games. Students will work through puzzles making the program react to events (like arrow buttons being pressed.) At the end of the puzzle, students will have the opportunity to customize their game with different speeds and sounds.
            Loops in Ice Age:
              name: Loops in Ice Age
              description_student: In this lesson you'll use the repeat block to help Scrat reach the acorn as efficiently as possible.
              description_teacher: As a quick update (or introduction) to using loops, this stage will have students using the `repeat` block to get Scrat to the acorn more efficiently.
            Loops in Artist:
              name: Drawing Shapes with Loops
              description_student: In this lesson, loops make it easy to make cool images with the Artist!
              description_teacher: This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity doubles as a debugging exercise for extra problem-solving practice.
            Nested Loops in Bee:
              name: Nested Loops in Maze
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you create a nested loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Nested Loops in Artist:
              name: Nested Loops in Artist
              description_student: ''
              description_teacher: ''
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While Loops in Farmer
              description_student: 'Loops are so useful in coding. This lesson will teach you about a new kind of loop: while loops!'
              description_teacher: "By the time students reach this lesson, they should already have plenty of practice using `repeat` loops, so now it's time to mix things up. \r\n\r\n_While loops_ are loops that continue to repeat commands while a condition is met. `While` loops are used when the programmer doesn't know the exact number of times commands need to be repeated, but does know what condition needs to be true in order for the loop to continue repeating. For example, students will be working to fill holes and dig dirt in Farmer. They will not know the size of the holes or the height of the mountains of dirt, but the students will know they need to keep filling the holes and digging the dirt as long as the ground is not flat."
            Until Loops in Maze:
              name: Until Loops in Maze
              description_student: You can do some amazing things when you use `until` loops!
              description_teacher: In this lesson, students will learn about `until` loops. Students will build programs that have the main character repeat actions `until` they reach their desired stopping point.
            Conditionals with Cards:
              name: Conditionals with Cards
              description_student: It's time to play a game where you earn points only under certain conditions!
              description_teacher: "This lesson demonstrates how conditionals can be used to tailor a program to specific information. We don’t always have all of the information we need when writing a program. Sometimes you will want to do something different in one situation than in another, even if you don't know what situation will be true when your code runs. That is where conditionals come in. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.\r\n\r\n"
            Conditionals in Bee:
              name: If/Else with Bee
              description_student: 'Now that you understand conditionals, it''s time to program Bee to use them when collecting honey and nectar. '
              description_teacher: Up until this point students have been writing code that executes exactly the same way each time it is run - reliable, but not very flexible. In this lesson, your class will begin to code with conditionals, allowing them to write code that functions differently depending on the specific conditions the program encounters.
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
              description_student: It's not always clear when to use each conditional.  This lesson will help you get practice deciding what to do.
              description_teacher: Students will practice `while` loops, `until` loops, and `if / else` statements. All of these blocks use conditionals. By practicing all three, students will learn to write complex and flexible code.
            Digital Citizenship:
              name: Digital Citizenship
              description_student: Some information is not safe to share online. This lesson will help you learn the difference between safe and private information.
              description_teacher: "In collaboration with Common Sense Education, this lesson helps students learn to think critically about the user information that some websites request or require. Students learn the difference between private information and personal information, distinguishing what is safe and unsafe to share online.\r\n\r\nStudents will also explore what it means to be responsible and respectful to their offline and online communities as a step toward learning how to be good digital citizens."
            Build a Play Lab Game:
              name: Build a Play Lab Game
              description_student: ''
              description_teacher: ''
            'Unplugged: Binary':
              name: Binary Images
              description_student: Learn how computers store pictures using a language with only two options.
              description_teacher: Though many people think of binary as strictly zeros and ones, students will be introduced to the idea that information can be represented in a variety of binary options. This lesson takes that concept one step further as it illustrates how a computer can store even more complex information (such as images and colors) in binary, as well.
            Artist Binary:
              name: Binary Images with Artist
              description_student: In this lesson, you will learn how to make images using only 0s and 1s.
              description_teacher: This series of online lessons will have students learning to make images using on and off.
            Build a Star Wars Game:
              name: Build a Star Wars Game
              description_student: Feel the force as you build your own Star Wars game in this lesson.
              description_teacher: In this lesson, students will practice using events to build a game that they can share online. Featuring R2-D2 and other Star Wars characters, students will be guided through events, then given space to create their own game.
            Dance Party:
              name: Dance Party
              description_student: Time to celebrate! In this lesson, you will program your own interactive dance party.
              description_teacher: In this lesson, students will program their own interactive dance party. This activity requires sound as the tool was built to respond to music.
        coursee-2019:
          title: Course E (2019)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
              description_student: ''
              description_teacher: ''
            Sequence in Maze:
              name: Sequence in Maze
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: Building a Foundation
              description_student: ''
              description_teacher: ''
            Debugging with Scrat:
              name: Debugging with Scrat
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Programming in Artist
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: ''
            Nested Loops:
              name: Nested Loops
              description_student: ''
              description_teacher: ''
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
              description_student: ''
              description_teacher: ''
            Conditionals with Cards:
              name: Conditionals with Cards
              description_student: ''
              description_teacher: ''
            Conditionals:
              name: Conditionals with the Farmer
              description_student: You will get to tell the computer what to do under certain conditions in this fun and challenging series.
              description_teacher: This lesson introduces students to `while` loops and `if / else` statements. _While loops_ are loops that continue to repeat commands as long as a condition is true. While loops are used when the programmer doesn't know the exact number of times the commands need to be repeated, but the programmer does know what condition needs to be true in order for the loop to continue looping. `If / Else` statements offer flexibility in programming by running entire sections of code only if something is true, otherwise it runs something else.
            Private and Personal Information:
              name: Private and Personal Information
              description_student: The internet is fun and exciting, but it's important to stay safe too. This lesson teaches you the difference between information that is safe to share and information that is private.
              description_teacher: "Developed by Common Sense Education, this lesson is about the difference between information that is safe to share online and information that is not.\r\n\r\nAs students visit sites that request information about their identities, they learn to adopt a critical inquiry process that empowers them to protect themselves and their families from identity theft. In this lesson, students learn to think critically about the user information that some websites request or require. They learn the difference between private information and personal information, as well as how to distinguish what is safe or unsafe to share online."
            Build a Star Wars Game:
              name: Build a Star Wars Game
              description_student: Feel the force as you build your own Star Wars game in this lesson.
              description_teacher: In this lesson, students will practice using events to build a game that they can share online. Featuring R2-D2 and other Star Wars characters, students will be guided through events, then given space to create their own game.
            'Functions: Songwriting':
              name: Songwriting
              description_student: Even rockstars need programming skills. This lesson will teach you about functions using lyrics from songs.
              description_teacher: One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.
            Functions in Minecraft:
              name: Functions in Minecraft
              description_student: Can you figure out how to use functions for the most efficient code?
              description_teacher: Students will begin to understand how functions can be helpful in this fun and interactive Minecraft adventure!
            Functions in Harvester:
              name: Functions with Harvester
              description_student: Functions will save you lots of work as you help the farmer with her harvest!
              description_teacher: Students have practiced creating impressive designs in Artist and navigating mazes in Bee, but today they will use functions to harvest crops in Harvester. This lesson will push students to use functions in the new ways by combining them with `while` loops and `if / else` statements.
            Copyright and Creativity:
              name: Copyright and Creativity
              description_student: ''
              description_teacher: ''
            Functions in Artist:
              name: Functions with Artist
              description_student: Make complex drawings more easily with functions!
              description_teacher: Students will be introduced to using functions with the Artist. Magnificent images will be created and modified. For more complicated patterns, students will learn about nesting functions by calling one function from inside another.
            Determine the Concept:
              name: Determine the Concept
              description_student: "We aren't giving away any secrets! \nThis lesson could use any of the skills you've learned so far."
              description_teacher: This lesson brings together concepts from the previous lessons and gives students a chance to think critically about how they would solve each problem, but without telling them which concept to apply. Students will review basic algorithms, debugging, `repeat` loops, conditionals, `while` loops, and functions.
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
              description_student: Learn how to create and edit sprites.
              description_teacher: 'In this lesson, students will learn about the two concepts at the heart of Sprite Lab: sprites and behaviors. Sprites are characters or objects on the screen that students can move, change, and manipulate. Behaviors are actions that sprites will take continuously until they are stopped.'
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: Create an interactive project that can be shared with classmates.
              description_teacher: 'This lesson features Sprite Lab, a platform where students can create their own interactive animations and games. In addition to behaviors, today students will incorporate user input as events to create an "alien dance party".  '
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
              description_student: ''
              description_teacher: ''
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: Here are several games and drawings. Play with each of them to get ideas for projects of your own!
              description_teacher: "The next four lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. Intended to be a multi-lesson or multi-week experience, students will spend time exploring brainstorming, learning about the design process, building, and presenting their final work. \n\nIn the explore stage, students will be able to view pre-built examples of projects in both Artist and Play Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in either Artist or Play Lab (this is likely the longest stage of the project). Finally, students will be able to present their finished work to their peers."
            The Design Process:
              name: The Design Process
              description_student: Projects this big take time and plenty planning. Here, you will learn about the design process that you'll use to build your own creation.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. In this portion of the project, students will learn about the design process and how to implement it in their own projects. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Build Your Project:
              name: Build Your Project
              description_student: Get those hands ready for plenty of coding! It's time to start building your project.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. Now the students will be given their own space to create their project with either Artist or Play Lab. This is likely to be the longest stage of the project. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Present Your Project:
              name: Present Your Project
              description_student: Get ready to show off! It's time to present your finished project to your peers.
              description_teacher: Over the course of four lessons, students will be building up to programming a project of their own design using either Play Lab or Artist as their programming environment. Finally, students will be able to present their finished work to their peers or share with their loved ones with a special link. The lesson guide for all four stages of the process can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Internet:
              name: Internet
              description_student: Ever wondered how information travels across the internet? It's not magic! This lesson will teach you the basics of how the internet works.
              description_teacher: Even though many people use the internet daily, not very many know how it works. In this lesson, students will pretend to flow through the internet, all the while learning about connections, URLs, IP Addresses, and the DNS.
            Crowdsourcing:
              name: Crowdsourcing
              description_student: This lesson will teach you about crowdsourcing, the process of building a project with a team.
              description_teacher: In computer science, we face some big, daunting problems. Challenges such as finding large prime numbers or sequencing DNA are almost impossible to do as an individual. Adding the power of others makes these tasks manageable. This lesson will show your students how helpful teamwork can be in the industry of computer science.
            Nested Loops in Bee:
              name: Nested Loops in Maze
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you place a loop inside another loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
              description_student: More nested loops! This time, you get to make some AMAZING drawing with nested loops.
              description_teacher: Students will create intricate designs using Artist in today's set of puzzles. By continuing to practice nested loops with new goals, students will see more uses of loops in general. This set of puzzles also offers a lot more potential for creativity with an opportunity for students to create their own design at the end of the stage.
            Nested Loops in Frozen:
              name: Nested Loops with Frozen
              description_student: 'Anna and Elsa have excellent ice-skating skills, but need your help to create patterns in the ice. Use nested loops to create something super COOL. '
              description_teacher: Now that students know how to layer their loops, they can create so many beautiful things.  This lesson will take students through a series of exercises to help them create their own portfolio-ready images using Anna and Elsa's excellent ice-skating skills!
            Sequencing in the Maze:
              name: Sequencing in the Maze
              description_student: In this lesson, you will learn how to write your very own programs!
              description_teacher: "In this set of puzzles, students will begin with an introduction (or review depending on the experience of your class) of Code.org's online workspace. There will be videos pointing out the basic functionality of the workspace including the `Run`, `Reset`, and `Step` buttons. Also discussed in these videos: dragging Blockly blocks, deleting Blockly blocks, and connecting Blockly blocks. Next, students will practice their _sequencing_ and _debugging_ skills in the maze. \r\nDebugging is an essential element of learning to program. Students will encounter some puzzles that have been solved incorrectly. They will need to step through the existing code to identify errors, including incorrect loops, missing blocks, extra blocks, and blocks that are out of order."
            Programming and Loops with the Artist:
              name: Drawing with Loops
              description_student: In this lesson, loops make it easy to make even cooler images with Artist!
              description_teacher: Watch student faces light up as they make their own gorgeous designs using a small number of blocks and digital stickers! This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity is fantastic for producing artifacts for portfolios or parent/teacher conferences.
            End of Course Project:
              name: End of Course Project
              description_student: Projects this big take time and plenty of planning. Find your inspiration, develop a plan, and unleash your creativity!
              description_teacher: "The next four lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. Intended to be a multi-lesson or multi-week experience, students will spend time exploring brainstorming, learning about the design process, building, and presenting their final work. \r\n\r\nIn the explore stage, students will play with pre-built examples of projects in both Artist and Sprite Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in Artist, Sprite Lab, or another interface that they have become familiar with (this is likely the longest stage of the project). Finally, students will be able to present their finished work to their peers."
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            About Me:
              name: About Me with Sprite Lab
              description_student: By creating an interactive poster with SpriteLab, students will apply their understanding of sharing personal and private information on the web.
              description_teacher: "By creating an interactive poster with SpriteLab, students will apply their understanding of sharing personal and private information on the web.\r\n"
            Aquatic Conditionals in Minecraft:
              name: Aquatic Conditionals in Minecraft
            Access Ability:
              name: Designing for Accessibility
              description_student: 'In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps. '
              description_teacher: 'In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps. '
            Digital Sharing:
              name: Digital Sharing
            Simon Says:
              name: Simon Says
              description_student: Play a game and think about what commands are needed to get the right result.
              description_teacher: 'In this lesson, students will play a game intended to get them thinking about the way commands need to be given to produce the right result. This will help them more easily carry over to Sprite Lab in the upcoming lessons. '
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
              description_student: Here you will learn about conditionals in the world of Minecraft.
              description_teacher: This lesson was originally created for the Hour of Code, alongside the Minecraft team. Students will get the chance to practice ideas that they have learned up to this point, as well as getting a sneak peek at conditionals!
            Swimming Fish with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Designing for Accessibility:
              name: Designing for Accessibility
            Songwriting:
              name: Songwriting
        express-2019:
          title: Express Course (2019)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm-Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: ''
              description_teacher: ''
            Relay Programming:
              name: Relay Programming
              description_student: ''
              description_teacher: ''
            Debugging in Maze:
              name: Debugging with Scrat
              description_student: ''
              description_teacher: ''
            Programming in Collector:
              name: Collecting Treasure with Laurel
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Creating Art with Code
              description_student: ''
              description_teacher: ''
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
              description_student: ''
              description_teacher: ''
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Sticker Art with Loops
              description_student: ''
              description_teacher: ''
            Copyright and Creativity:
              name: Copyright and Creativity
              description_student: ''
              description_teacher: ''
            'Concept Practice with Minecraft ':
              name: Looking Ahead with Minecraft
            Nested Loops in Bee:
              name: Nested Loops in Maze
              description_student: ''
              description_teacher: ''
            Nested Loops in Frozen:
              name: Snowflakes with Anna and Elsa
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While Loops with the Farmer
              description_student: ''
              description_teacher: ''
            Until Loops in Maze:
              name: Until Loops in Maze
              description_student: ''
              description_teacher: ''
            Conditionals with Cards:
              name: Conditionals with Cards
              description_student: ''
              description_teacher: ''
            Conditionals in Bee:
              name: If/Else with Bee
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
              description_student: ''
              description_teacher: ''
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
              description_student: ''
              description_teacher: ''
            Functions in Minecraft:
              name: Functions in Minecraft
              description_student: ''
              description_teacher: ''
            Functions in Harvester:
              name: Functions with Harvester
              description_student: ''
              description_teacher: ''
            Functions in Artist:
              name: Functions with Artist
              description_student: ''
              description_teacher: ''
            Screen Out the Mean:
              name: Screen Out the Mean
              description_student: ''
              description_teacher: ''
            Determine the Concept:
              name: Determine the Concept
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'Events: The Big Event'
              description_student: ''
              description_teacher: ''
            Build a Flappy Game:
              name: Build a Flappy Game
              description_student: ''
              description_teacher: ''
            The Power of Words:
              name: The Power of Words
              description_student: ''
              description_teacher: ''
            Envelope Variables:
              name: Envelope Variables
              description_student: ''
              description_teacher: ''
            Variables as Constant in Artist:
              name: Variables with Artist
              description_student: ''
              description_teacher: ''
            Variables that Change in Bee:
              name: Changing Variables with Bee
              description_student: ''
              description_teacher: ''
            Variables that Change in Artist:
              name: Changing Variables with Artist
              description_student: ''
              description_teacher: ''
            For Loop Fun:
              name: For Loop Fun
              description_student: ''
              description_teacher: ''
            For Loops in Bee:
              name: For Loops with Bee
              description_student: ''
              description_teacher: ''
            For Loops in Artist:
              name: For Loops with Artist
              description_student: ''
              description_teacher: ''
            Learning Sprites with Sprite Lab:
              name: Swimming Fish in Sprite Lab
              description_student: ''
              description_teacher: ''
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
              description_student: ''
              description_teacher: ''
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
              description_student: ''
              description_teacher: ''
            Explore Project Ideas:
              name: Explore Project Ideas
              description_student: ''
              description_teacher: ''
            The Design Process:
              name: The Design Process
              description_student: ''
              description_teacher: ''
            Build Your Project:
              name: Build Your Project
              description_student: ''
              description_teacher: ''
            Revise Your Project:
              name: Revise Your Project
              description_student: ''
              description_teacher: ''
            Present Your Project:
              name: Present Your Project
              description_student: ''
              description_teacher: ''
            Binary Bracelets:
              name: Binary Bracelets
              description_student: ''
              description_teacher: ''
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
              description_student: ''
              description_teacher: ''
            Artist Binary:
              name: Artist Binary
              description_student: ''
              description_teacher: ''
            Internet:
              name: Internet
              description_student: ''
              description_teacher: ''
            Crowdsourcing:
              name: Crowdsourcing
              description_student: ''
              description_teacher: ''
            Editing Behaviors:
              name: Behaviors in Sprite Lab
            Virtual Pet with Sprite Lab:
              name: Virtual Pet with Sprite Lab
            Build A Project:
              name: End of Course Project
            Dance Party:
              name: Dance Party
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Concept Practice with Minecraft:
              name: Concept Practice with Minecraft
        csd1-2019:
          title: CSD Unit 1 - Problem Solving and Computing ('19-'20)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
              description_student: ''
              description_teacher: ''
            Intro to Problem Solving:
              name: Intro to Problem Solving
              description_student: 'The class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
              description_teacher: In this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: This lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
              description_teacher: This lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: 'In this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems.'
              description_teacher: "In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\r\n\r\nThis lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day."
            What is a Computer?:
              name: What is a Computer?
              description_student: In this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition.
              description_teacher: "In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.\r\n"
            Input and Output:
              name: Input and Output
              description_student: In this the class students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device.  To conclude the lesson the class examines common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device. Earlier in the activity students are prompted to focus on more obvious physical inputs and outputs (e.g. a keyboard as an input or a screen as an output) but later discussions lead students to consider less obvious examples (e.g. that a touch screen is both an input and output, or the fact that the Internet can serve as both input and output). Throughout the lesson the teacher records inputs and outputs that are identified on a T-Chart at the front of the room. To conclude the lesson students examine common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
            Processing:
              name: Processing
              description_student: This lesson dives deeper into the concept of processing that was introduced as part of the definition of a computer.  Pairs work together to put a deck of cards in order, a form of processing information.  In the end, the class discusses what processing means within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first activity has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that force students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Apps and Storage:
              name: Apps and Storage
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson reviews the input, output, storage, and processing aspects of a computer in a context that is relevant and familiar to students: apps. In pairs, students evaluate smartphone applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the processing that turns those inputs into the desired output, and what information they would want to store for later. The class concludes with a discussion that connects the lesson to apps students are more familiar with. '
            Project - Propose an App:
              name: Project - Propose an App
              description_student: To conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
            Post-Project Test:
              name: Post-Project Test
        andrea-test:
          title: andrea-test
          description_audience: 6-12 Facilitators-in-Training
          description_short: this is to test my skills in making a course
          description: longer description on my attempt to create a course....   stilling wondering where overview, content came from....
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            new stage:
              name: new stage
            module1:
              name: module1
            module2:
              name: module2
            andrea-g1:
              name: andrea-g1
            andrea-g2:
              name: andrea-g2
            andrea-g3:
              name: andrea-g3
            andrea-s1:
              name: andrea-s1
            andrea-s3:
              name: andrea-s3
            'null':
              name: 'null'
            andrea-stage1:
              name: andrea-stage1
            andrea-test-stage1:
              name: andrea-test-stage1
            andrea-test-stage2:
              name: andrea-test-stage2
            andrea-test-stage3:
              name: andrea-test-stage3
            Deeper Learning Overview:
              name: Deeper Learning Overview
            andrea-test-stage4:
              name: andrea-test-stage4
            Part 1:
              name: Part 1
            Part 2:
              name: Part 2
            part 3:
              name: part 3
          name: andrea-test
        dance-extras-gallery:
          title: Keep On Dancing
          description_audience: ''
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description: Go beyond the first hour with extended project ideas.
          lesson_groups: {}
          lessons:
            Dance Party - Go Further:
              name: Dance Party - Go Further
        coursec-2019:
          title: Course C (2019)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: Learn about sequences and algorithms with Angry Birds.
              description_teacher: Using characters from the game Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence, making them move straight, turn left, or turn right.
            Debugging in Maze:
              name: Debugging in Maze
              description_student: Find problems in puzzles and practice your debugging skills.
              description_teacher: Debugging is an essential element of learning to program. In this lesson, students will encounter puzzles that have been solved incorrectly. They will need to step through the existing code to identify errors, including incorrect loops, missing blocks, extra blocks, and blocks that are out of order.
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
              description_student: ''
              description_teacher: ''
            Programming in Collector:
              name: Collecting Treasure with Laurel
              description_student: Write algorithms to help Laurel the Adventurer collect lots of gems!
              description_teacher: In this series of puzzles, students will continue to develop their understanding of algorithms and debugging. With a new character, Laurel the Adventurer, students will create sequential algorithms to get Laurel to pick up treasure as she walks along a path.
            Programming in Artist:
              name: Creating Art with Code
              description_student: Create beautiful images by programming the Artist.
              description_teacher: In this lesson, students will take control of the Artist to complete drawings on the screen. This Artist stage will allow students to create images of increasing complexity using new blocks like `move forward by 100 pixels` and `turn right by 90 degrees`.
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
              description_student: ''
              description_teacher: ''
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
              description_student: 'Help BB-8 through mazes using loops! '
              description_teacher: Building on the concept of repeating instructions from "Getting Loopy," this stage will have students using loops to help BB-8 traverse a maze more efficiently than before.
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: ''
            Loops in Harvester:
              name: Harvesting Crops with Loops
              description_student: Let's use loops to help the harvester collect some veggies!
              description_teacher: "In the preceding stage, students used loops to create fantastic drawings. Now they're going to loop new actions in order to help the harvester collect multiple veggies growing in large bunches.\r\n"
            'Events: The Big Event':
              name: The Big Event
              description_student: 'Play a fun game to learn about events. '
              description_teacher: Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. Events can make your program more interesting and interactive.
            Build a Flappy Game:
              name: Build a Flappy Game
              description_student: Build you own Flappy Bird game however you like, then share it with your friends!
              description_teacher: In this special stage, students get to build their own Flappy Bird game by using event handlers to detect mouse clicks and object collisions. At the end of the level, students will be able to customize their game by changing the visuals or rules.
            Screen Out the Mean:
              name: Screen Out the Mean
              description_student: In this lesson, you'll learn what to do if something online makes you feel angry, sad, or scared.
              description_teacher: "This lesson helps children to recognize that it is essential to tell a trusted adult if something online makes them feel angry, sad, or scared. \r\n\r\nStudents learn that other people can sometimes act like bullies when they are online. They will explore what cyberbullying means and what they can do when they encounter it. After reading a scenario about mean online behavior, students discuss what cyberbullying is, how it can make people feel, and how to respond. Finally, they use their knowledge to create a simple tip sheet on cyberbullying in their journal.\r\n"
            Events in Play Lab:
              name: Chase Game with Events
              description_student: It's time to get creative and make a game in Play Lab!
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all the coding skills they've learned to create an animated game. It's time to get creative and make a game in Play Lab!
            Looking Ahead:
              name: Looking Ahead with Minecraft
              description_student: Avoid the lava! Here you will start to learn about conditionals in the world of Minecraft.
              description_teacher: This lesson was originally created for the Hour of Code, alongside the Minecraft team. Students will get the chance to practice ideas that they have learned up to this point, as well as getting a sneak peek at conditionals!
            Binary Bracelets:
              name: Binary Bracelets
              description_student: Create your very own binary bracelet and learn how computers remember information!
              description_teacher: Binary is extremely important in the world of computers. The majority of computers today store all sorts of information in binary form. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.
            Create a Design with Loops:
              name: Create a Design with Loops
            'End of Course Project: Create a Play Lab Game':
              name: End of Course Project
              description_student: Get those hands ready for plenty of coding! It's time to start building your project.
              description_teacher: 'This capstone lesson takes students through the process of designing, developing, and showcasing their own Play Lab projects! To ensure this process goes smoothly, we have provided a step-by-step structure for students to follow, from planning on paper to coding on our website. In addition, we offer ideas to help teachers facilitate a showcase finale! '
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
              description_student: In this lesson, you'll pretend your classmates are robots and program them to build patterns of stacked cups.
              description_teacher: Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Students will take turns participating as the robot, responding only to the algorithm defined by their peers. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
              description_student: In this lesson, you'll program your classmates again, but using loops you'll be able to solve bigger and more complicated problems.
              description_teacher: Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.
            Graphing Data:
              name: Graphing Data
            Powerful Passwords:
              name: Powerful Passwords
              description_student: In this lesson, you'll learn about how passwords protect your information, and how to make a good password.
              description_teacher: "In collaboration with **Common Sense Education**, this lesson has students explore why people use passwords, learn the benefits of using passwords, and discover strategies for creating and keeping strong, secure passwords.\r\n\r\nStudents learn password tips, test their existing passwords with an interactive game, and create new passwords using guidelines for powerful passwords.\r\n"
            Sticker Art with Loops:
              name: Sticker Art with Loops
              description_student: In this lesson, loops make it easy to make even cooler images with Artist!
              description_teacher: Watch student faces light up as they make their own gorgeous designs using a small number of blocks and digital stickers! This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity is fantastic for producing artifacts for portfolios or parent/teacher conferences.
            Picturing Data:
              name: Picturing Data
              description_student: Data can be used to help students understand their world and answer interesting questions. In this lesson, students will collect data from a Play Lab project and visualize it using different kinds of graphs.
              description_teacher: Data can be used to help students understand their world and answer interesting questions. In this lesson, students will collect data from a Play Lab project and visualize it using different kinds of graphs.
        csp-mid-survey:
          title: CSP Student Mid-year Survey
          description_audience: CSP Students
          description_short: CSP Student Mid-year Survey
          description: Welcome to the Code.org CS Principles Mid-Year Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSP Mid-year survey:
              name: CSP Mid-year survey
        gamelab:
          title: Game Lab
          description_audience: ''
          description_short: ''
          description: Teacher-facing tutorials for development in Game Lab.  These tutorials go beyond the concepts covered in CSD.
          lesson_groups: {}
          lessons:
            Start and End Screens:
              name: Start and End Screens
            Start and End Screens2:
              name: Start and End Screens2
        coursea-2019:
          title: Course A (2019)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
              description_student: ''
              description_teacher: ''
            'Programming: Happy Maps':
              name: Happy Maps
              description_student: Write instructions to get the Flurb to the fruit.
              description_teacher: 'This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Students will practice writing precise instructions as they work to translate instructions into the symbols provided. If problems arise in the code, students should also work together to recognize bugs and build solutions.'
            Programming in Maze:
              name: Programming in Maze
              description_student: ''
              description_teacher: In this series of online puzzles, students will build on the understanding of algorithms, debugging, and general computer literacy. Featuring characters from the game Angry Birds, students will develop sequential algorithms to get the bird to the pig without crashing into walls or TNT. Debugging puzzles have also been mixed into this stage for added practice with problem solving and critical thinking.
            Programming in Harvester:
              name: Programming in Harvester
              description_student: ''
              description_teacher: ''
            Going Places Safely:
              name: Going Places Safely
              description_student: Learn the rules to safely visit places online.
              description_teacher: In collaboration with Common Sense Media, this lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests. Students also find out that they can go to exciting places online, but they need to follow certain rules to remain safe.
            'Loops: Happy Loops':
              name: Happy Loops
              description_student: Help the Flurb solve bigger problems using loops.
              description_teacher: This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.
            Loops in Collector:
              name: Loops with Laurel
              description_student: Help Laurel the adventurer collect the treasure underground.
              description_teacher: In this lesson, students continue learning the concept of loops. In the previous lesson, students were introduced to loops by moving through a maze and picking corn. Here, loops are used to collect treasure in open cave spaces.
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous plugged lesson, loops were used to traverse a maze and collect treasure. Here, loops are creating patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: Move and shout when your teachers presses buttons on a giant remote.
              description_teacher: Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
            Events in Play Lab:
              name: On the Move with Events
              description_student: Create your own game or story.
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all of the coding skills they've learned to create an animated game. It's time to get creative and make a story in the Play Lab!
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
              description_student: Use loops and patterns to finish the images.
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous plugged lesson, loops were used to traverse a maze and collect treasure. Here, loops are creating patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: Click and drag to finish the puzzles.
              description_teacher: This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.
            Loops in Ice Age:
              name: Loops with Scrat
              description_student: Help Scrat cover more ground using loops.
              description_teacher: Building on the concept of repeating instructions from "Happy Loops," this stage will have students using loops to get to the acorn more efficiently on Code.org.
            Programming in Ice Age:
              name: Programming with Scrat
              description_student: Write programs to help Scrat reach the acorn.
              description_teacher: Using characters from the Ice Age, students will develop sequential algorithms to move Scrat from one side of a maze to the acorn at the other side. To do this they will stack code blocks together in a linear sequence, making them move straight, turn left, or turn right.
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
              description_student: Help BB-8 collect the scrap metal.
              description_teacher: In this lesson, students will use their newfound programming skills in more complicated ways to navigate a tricky course with BB-8.
            Sequencing with Scrat:
              name: Sequencing with Scrat
              description_student: Program Scrat to reach the acorn.
              description_teacher: Using Scrat from the Ice Age franchise, students will develop sequential algorithms to move a squirrel character from one side of a maze to the acorn at the other side. To do this they will stack code blocks together in a linear sequence.
        courseb-2019:
          title: Course B (2019)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          lessons:
            Move It, Move It:
              name: Move It, Move It
              description_student: Program your classmates to step carefully from place to place.
              description_teacher: This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course.  In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.
            Sequencing with Scrat:
              name: Sequencing with Scrat
              description_student: ''
              description_teacher: ''
            Your Digital Footprint:
              name: Your Digital Footprint
              description_student: 'Learn about your digital footprint and how to stay safe when visiting websites. '
              description_teacher: In collaboration with **Common Sense Education**, this lesson helps students learn about the similarities of staying safe in the real world and when visiting websites. Students will also learn that the information they put online leaves a digital footprint or “trail.” This trail can be big or small, helpful or hurtful, depending on how they manage it.
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
              description_student: ''
              description_teacher: ''
            Programming in Ice Age:
              name: Programming in Ice Age
              description_student: ''
              description_teacher: ''
            Copyright and Creativity:
              name: Copyright and Creativity
              description_student: ''
              description_teacher: ''
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
              description_student: ''
              description_teacher: ''
            Loops in Ice Age:
              name: Loops in Ice Age
              description_student: ''
              description_teacher: ''
            Loops in Collector:
              name: Loops with Laurel
              description_student: Program Laurel the adventurer to collect treasure in an open cave.
              description_teacher: In this lesson, students continue learning the concept of loops. Here, Laurel the Adventurer uses loops to collect treasure in open cave spaces. A new `get treasure` block is introduced to help her on her journey.
            Loops in Artist:
              name: Drawing Gardens with Loops
              description_student: Use patterns and loops to finish the images.
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous online lesson, loops were used to traverse a maze and collect treasure. Here, students use loops to create patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: Move or shout when your teacher presses buttons on a giant remote.
              description_teacher: Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
            Events in Play Lab:
              name: A Royal Battle with Events
              description_student: Use events to create a story or make an interactive game.
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and apply all of the coding skills that they've learned to create an animated game. It's time to get creative and make a game in Play Lab!
            'Loops: Getting Loopy':
              name: Getting Loopy
              description_student: In this lesson, we'll have a dance party using repeat loops!
              description_teacher: As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.
            The Right App:
              name: The Right App
              description_student: Sketch your own smartphone app.
              description_teacher: 'This lesson has students recognize that computer science can help people in real life. First, students empathize with several fictional smartphone users in order to help them find the “right app” that addresses their needs. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user. '
            Loops in Harvester:
              name: Loops with Harvester
              description_student: Help the Harvester collect even more, using loops!
              description_teacher: Building on the concept of repeating instructions from "Getting Loopy," this stage will have students using loops to pick corn more efficiently on Code.org.
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: Create programs to help the Angry Bird move through the maze.
              description_teacher: Using characters from the game Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence.
            Programming in Harvester:
              name: Programming with Harvester
              description_student: Help the Harvester collect vegetables along a path.
              description_teacher: 'Students will apply the programming concepts that they have learned to the Harvester environment. Now, instead of just getting the character to a goal, students have to collect corn using a new block. Students will continue to develop sequential algorithm skills and start using the debugging process. '
            Sequencing in Maze:
              name: Sequencing with Angry Birds
              description_student: Help Red the Angry Bird follow the path to the naughty pig.
              description_teacher: Using characters from Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence.
        pre-express-2019:
          title: Pre-reader Express (2019)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
              description_student: ''
              description_teacher: ''
            'Persistence & Frustration: Stevie and the Big Project':
              name: 'Persistence & Frustration: Stevie and the Big Project'
              description_student: ''
              description_teacher: ''
            Move It, Move It:
              name: Move It, Move It
              description_student: ''
              description_teacher: ''
            Sequencing with Scrat:
              name: Sequencing with Scrat
              description_student: ''
              description_teacher: ''
            Your Digital Footprint:
              name: Your Digital Footprint
              description_student: ''
              description_teacher: ''
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
              description_student: ''
              description_teacher: ''
            Programming in Ice Age:
              name: Programming in Ice Age
              description_student: ''
              description_teacher: ''
            Copyright and Creativity:
              name: Copyright and Creativity
              description_student: ''
              description_teacher: ''
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
              description_student: ''
              description_teacher: ''
            Loops in Ice Age:
              name: Loops with Scrat
              description_student: ''
              description_teacher: ''
            Loops in Collector:
              name: Loops with Laurel
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Drawing Gardens with Loops
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'Events: The Big Event'
              description_student: ''
              description_teacher: ''
            Events in Play Lab:
              name: Events in Play Lab
              description_student: ''
              description_teacher: ''
            Spelling Bee:
              name: Spelling Bee
              description_student: ''
              description_teacher: ''
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
            Tell a Story in Play Lab:
              name: On the Move with Events
            Make a Game in Play Lab:
              name: A Royal Battle with Events
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
        removed19:
          title: Removed from CSF for 2019
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Big Project':
              name: 'Persistence & Frustration: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
        dani-test-script:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
        csd2-2019:
          title: CSD Unit 2 - Web Development ('19-'20)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          lessons:
            Exploring Websites:
              name: Exploring Websites
              description_student: This lesson covers the purposes that a website might serve, both for the users and the creators. The class explores a handful of the most-used websites in the United States and discusses how each of those sites is useful for users and how it might also serve its creators.
              description_teacher: Every website has a purpose, a reason someone created it and others use it. In this lesson, students will start to consider the purposes a website might serve, both for the users and the creators. Students will explore a handful of the most-used websites in the United States and try to figure out how each of those sites is useful for users and how they might also serve their creators.
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Intro to HTML:
              name: Intro to HTML
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headings:
              name: Headings
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headings.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Digital Footprint:
              name: Digital Footprint
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: "As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r\n\r\nStudents begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r\n\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Lists:
              name: Lists
              description_student: This lesson introduces ordered and unordered lists and the associated  &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; HTML tags.  The class practices using the tags, then goes back to the personal web page project to add a new HTML page that includes the new tags.
              description_teacher: Students are introduced to ordered and unordered lists in HTML and work through a few levels in which they use the &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to their project, where they add a new HTML page.  Inside the new page, they write the HTML to display a recipe, top ten list, or any other content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: Intellectual Property and Images
              description_student: This lesson covers how to use media such as images, video, or music created by others a website while respecting the rights of the creator of that media. After first studying Creative Commons licensing, the class learns how to add images to web pages, and how to give proper attribution when doing so.
              description_teacher: "Starting with a discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \n\nFinally, with a common understanding of the restrictions of various Creative Commons licenses, students learn how to add images to their web pages using the &lt;img&gt; tag."
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: In this lesson covers common issues that arise when designing web pages in HTML. The class will correct errors in a sequence of increasingly complex web pages found on Code Studio and learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read.
              description_teacher: Students deal with common issues that arise when designing web pages in HTML. Students will correct errors in a sequence of increasingly complex web pages. In the process they will learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read. At the end of the lesson students create a list of strategies for debugging web pages and ensuring they are easy to read and maintain.
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
              description_student: 'This lesson covers hyperlinks, which allow web developers to connect pages together into one website.  The class will link together all the previous pages into one project, and create navigation bars for each page before publishing the entire site to the Web.  '
              description_teacher: "After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \r\n\r\n"
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: "This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\r\n\r\n"
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt, the class learns about the inner workings of search engines and has an opportunity to flex their analytical skills in a search for strange and unlikely animals.
              description_teacher: This lesson encourages students to think more critically about how web searches work and how to find relevant and trustworthy information online. After viewing and discussion a video about how search engines work, students will search for information about several unlikely animals. They'll need to analyze the sites they find for reliability in order to identify which of the animals is actually a hoax.
            RGB Colors and Classes:
              name: RGB Colors and Classes
              description_student: This lesson covers classes and custom colors. The class first learns how to specify custom colors using RGB (red, green, blue) values, then applies these colors to a new Four Seasons web page, which uses CSS classes.  Using classes, the class adds more styles to the Four Seasons web page, then use them to style their personal websites.
              description_teacher: In this lesson, students first learn how to specify custom colors using their RGB (red, green, blue) values.  They then apply these colors to a new Four Seasons web page, which uses CSS classes.  CSS classes allow web developers to treat groups of elements they want styled differently than other elements of the same type. Using classes, students add more styles to the Four Seasons web page, then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
              description_student: In the last few days of the unit, the class finalizes their personal websites, working with peers to get feedback, review the rubric, and put the finishing touches on the site. To cap off the unit, everyone shares their projects and how they were developed.
              description_teacher: "Students have spent a lot of time throughout the unit working on their Personal Website. In the final couple of days students finalize their websites.  They work with peers to get feedback, put the finishing touches on the websites, review the rubric and reflect on their process. To cap off the unit, they will share their projects and also a overview of the process they took to get to that final design.\r\n"
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
        csd3-2019:
          title: CSD Unit 3 - Animations and Games ('19-'20)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            Shapes and Randomization:
              name: Shapes and Randomization
              description_student: ''
              description_teacher: ''
            Variables:
              name: Variables
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Sprites:
              name: Sprites
              description_student: In order to create more interesting and detailed images, the class is introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.  At the end of the lesson, everyone creates a scene using sprites.
              description_teacher: In order to create more interesting and detailed images, students are introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.
            The Draw Loop:
              name: The Draw Loop
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables through an unplugged activity. Using notecards and string to simulate variables within a program, students implement a few short programs. Once comfortable with this syntax, students use the same process with sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: Sprite Movement
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Conditionals:
              name: Conditionals
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: Keyboard Input
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the simple `keyDown()` command learned yesterday, students will learn about several other keyboard input commands as well as ways to take mouse input.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Velocity:
              name: Velocity
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: Collision Detection
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: Collisions
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: Functions
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: The Game Design Process
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            Project - Design a Game:
              name: Project - Design a Game
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
              description_student: ''
              description_teacher: ''
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
        csd4-2019:
          title: CSD Unit 4 - The Design Process ('19-'20)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
              description_student: The class explores a variety of different teapot designs to consider how design choices or made and why. Using the teapots as an example, the class will explore the relationship between users, their needs, and the design of objects they use.
              description_teacher: To kick off a unit devoted to group problem solving and developing products for other users, students begin by investigating the design of various teapots. Students analyze each teapot, attempting to identify how specific user needs might have informed its design. By considering these design choices, and attempting to match each teapot with a potential user, students can begin to see how taking a user-centered approach to designing products (both physical and digital) can make those products more useful and usable. To conclude the activity, students are asked to propose some changes to one of the teapots that would make it more useful or usable.
            Understanding Your User:
              name: Understanding Your User
              description_student: Using user profiles, the class explores how different users might react to a variety of products. Role playing as a different person, each member of the class will get to experience designs through someone else's eyes.
              description_teacher: "Designers need to understand their users’ needs in order to create useful products.  This lesson encourages students to think about how to design for another person by role-playing as someone else using a user profile and reacting as that user to a series of products.  Each student is assigned a user profile describing a person, which they then use to choose appropriate products, critique product design, and suggest improvements to design.\r\n"
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
              description_student: In small groups, the class uses the design process to come up with ideas for smart clothing. From brainstorming, to identifying users, to finally proposing a design, this is the first of several opportunities in this unit to practicing designing a solution for the needs of others.
              description_teacher: This lesson guides students through an abbreviated version of the design process they will be seeing throughout this unit. Students first brainstorm a list of potential users of smart clothing. As a class, they then group these ideas into broad categories and each group will choose one category of user. Groups repeat this process to brainstorm needs or concerns of their user, eventually categorizing these needs and choosing one to focus on. Finally, students design a piece of smart clothing, using the specific needs and concerns they brainstormed to guide their decision making. At the end of the class students quickly share their decision-making process and get feedback on how well their product addresses the user need they selected.
            User Interfaces:
              name: User Interfaces
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Testing:
              name: Feedback and Testing
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Identifying User Needs:
              name: Identifying User Needs
              description_student: Up to this point the users that the class has considered have all been remote, and the only information from users has come through text or role playing. Now the class will rely on each other as potential users, and pairs will get to interview each other to identify needs that could be addressed by developing an app.
              description_teacher: 'Up to this point students have focused on designing for users who are, to some degree, distanced from them. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. This is distance is designed to help students get outside their own head when thinking about users, but in order to get information more directly from an actual user, students need to rely on their classmates. In this lesson students pair up to become users (and designers) for each other, allowing everyone to directly interview their end user and ask questions to better inform their design. Each student pair interviews each other, attempting to identify a specific need that could be addressed by an app. '
            Project - Paper Prototype:
              name: Project - Paper Prototype
              description_student: Using the interview information from the previous lesson, the class comes up with app ideas to address the needs of their users. To express those ideas, and test out their effectiveness, each student creates and tests paper prototypes of their own.
              description_teacher: Based on the peer interview from the previous lesson, each student comes up with an idea for an app that will address their user's problem. Students then get to create their own paper prototype of their app ideas by drawing "screens" on individual notecards. A project guide directs students through the process including building the app and testing it with their user to see if their assumptions about the user interfaces they created are accurate.
            Designing Apps for Good:
              name: Designing Apps for Good
              description_student: To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.
              description_teacher: To kick off the app design project that lasts through the end of the unit, students first explore a number of apps designed for social impact that have been created by other students. The class then reviews the Define, Prepare, Try, and Reflect steps of the Problem Solving process as they develop an idea for an app of their own with social impact. Finally, students will form project teams and lay out a contract for how the team will function throughout the development of their app.
            Market Research:
              name: Market Research
              description_student: Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.
              description_teacher: In this lesson students research apps similar to the one they intend on creating to better understand the needs of their users. Students work within their teams to search the Internet for other apps, then evaluate the ones they find interesting. By the end of the lesson, each team will have a clearer idea about the type of app they want to create and further refine who their target users are. Each team will maintain a list of citations for all the apps they examined for use in their final presentation.
            Paper Prototypes:
              name: Paper Prototypes
              description_student: Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
              description_teacher: "Before starting to design apps, we need to help students to better scope their expectations. Because students will eventually be prototyping these apps in App Lab, they will be in better shape if their ideas align with the kinds of apps that are easily prototyped in App Lab. Teams start this scoping by looking through several example apps designed to demonstrate apps that can be created with App Lab. Teams then can chose one (or more) of the apps as a basis for their own. From there, teams have some time to discuss the basic functionality of their app before using 3x5 index cards to develop paper prototypes.\r\n"
            Prototype Testing:
              name: Prototype Testing
              description_student: In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.
              description_teacher: The primary purpose of developing paper prototypes is that they allow for quick testing and iteration before any code is written. This lesson is focused on giving teams a chance to test their prototypes before moving to App Lab. Teams develop a plan to test with users before running prototype tests with multiple other students in the class (and potentially outside the class). In order to test the prototype with the users, the students will have to assign roles in the testing (the “narrator”, the “computer” and the “observers”) as well as have some questions prepared for the user to answer after the test is complete.
            Digital Design:
              name: Digital Design
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin work on an interactive digital version based on the paper prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital versions of a paper prototype. From there, each group member builds out at least one page of their app in App Lab, to be later combined into a single app.
            Linking Screens:
              name: Linking Screens
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they can then link together using code. Students learn basic event driven programming by building up the model app that they started in the previous lesson. In addition to the screen that students designed yesterday, they'll learn how to create additional screens and even import screens made by others.
            Testing the App:
              name: Testing the App
              description_student: Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.
              description_teacher: 'By the end of the previous lesson each team should have a minimum viable prototype of their app. The primary purpose of this lesson is to have the team actually test the app with other people, preferably from the target audience the app is intended for, or from different teams in the class while observers from the team will record the results on the worksheets they used in the planning phase. As with testing the paper prototypes, teams will start by planning for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              name: Improving and Iterating
              description_student: Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
              description_teacher: Teams have at this point developed an app prototype that has gone through multiple iterations and rounds of user testing. With the information and guidance gained from the last round of user testing, each student has the opportunity to plan for and implement improvements to the team app. Depending on the time you have available, and student interest, you can run the cycle of testing and iteration as many times as you see fit.
            Project - App Presentation:
              name: Project - App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Post-Project Test:
              name: Post-Project Test
        csd5-2019:
          title: CSD Unit 5 - Data and Society ('19-'20)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Representation Matters:
              name: Representation Matters
              description_student: This first lesson provides an overview of what data is and how it is used to solve problems.  Groups use a data set to make a series of meal recommendations for people with various criteria.   Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
              description_teacher: In the first lesson of the data unit, students get an overview of what data is and how it is used to solve problems.  Students start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
            Patterns and Representation:
              name: Patterns and Representation
              description_student: This lesson looks closer at what is needed to create a system of representation.  Groups create systems that can represent any letter in the alphabet using only a single stack of cards, then create messages with their systems and exchange with other groups to ensure the system worked as intended.   The class discusses commonalities between working systems while recognizing that there are many possible working solutions.
              description_teacher: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class  reviews any pros and cons of the different systems. They discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
              description_student: This lesson introduces a formal binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". The class is then introduced to the ASCII system for representing text using binary symbols and practices using this system before encoding their own messages using ASCII.
              description_teacher: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
            Representing Images:
              name: Representing Images
              description_student: This lesson continues the study of binary representation systems, this time with images. The class is introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. After doing a short set of challenges using the Pixelation Widget, the class makes connections between the system for representing images and the system for representing text they learned in the previous lesson.
              description_teacher: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
            Representing Numbers:
              name: Representing Numbers
              description_student: This lesson introduces the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system, the class turns bits "on" or "off" by turning cards face up and face down, then observes the numbers that result from these different patterns.  Eventually, the pattern is extended to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, students extend the pattern to a generic 4-bit system.
            Keeping Data Secret:
              name: Keeping Data Secret
              description_student: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
              description_teacher: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
            Combining Representations:
              name: Combining Representations
              description_student: This lesson combines all three types of binary representation systems (ASCII characters, binary number, and images) to allow for the encode of more complex types information in a record.  After seeing a series of bits and being asked to decode them, the class is introduced to the idea that  understanding binary information requires understanding both the system that is being used and the meaning of the information encoded.
              description_teacher: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
            Project - Create a Representation:
              name: Project - Create a Representation
              description_student: The class designs structure to represent their perfect day using the binary representation systems they've learned in this chapter. After deciding which pieces of information the record should capture, the class will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Afterwards, everyone will use the ASCII, binary number, and image formats they have learned to represent their perfect days try to decipher what a partner's perfect day is like.
              description_teacher: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
            Problem Solving and Data:
              name: Problem Solving and Data
              description_student: This lesson covers how the problem solving process can be tailored to deal with data problems, in particular.  The class is tasked with deciding what a city most needs to spend resources on.  They must find and use data from the Internet to support their decision.
              description_teacher: 'In this lesson, students use the problem solving process from earlier in the course to solve a data problem.  After reviewing the process, the class is presented with a decision: whether a city should build a library, pet shelter, or fire department.  Students work in teams to collect information on the Internet to help them decide what should be built, then use this information build an argument that will convince the city council of their choice.  They then map what they have done to the problem solving process that they have been using throughout the course, comparing the general problem solving process to its specific application to data problems.'
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
              description_student: This lesson covers how data is collected and used by a organizations to solve problems in the real world. The class looks at three scenarios that could be solved using data and brainstorms the types of data they would want to solve them and how they could collect the data.  Each scenario also includes a video about a real-world service that has solved a similar problem with data.
              description_teacher: In this lesson, students look at how data is collected and used by organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they  explored in the last lesson. Then students are presented three scenarios that could be solved using data and brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming, students watch a video about a real-world service and record notes about what data is collected by the real-world service and how it is used. At the end of the lesson, students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
            Structuring Data:
              name: Structuring Data
              description_student: This lesson goes further into the interpretation of data, including cleaning and visualizing raw data sets.  The class first looks at the how presenting data in different ways can help people to understand it better.  After seeing how cleaning and visualization can help people make better decisions, the class looks at what parts of this process can be automated, and what need a human.
              description_teacher: In this lesson, students go further into the collection and interpretation of data, including cleaning and visualizing data.  Students first look at the how presenting data in different ways can help people to understand it better, and they then create visualizations of their own data. Using a the results of a preferred pizza topping survey, students must decide what to do with data that does not easily fit into the visualization scheme that they have chosen.  Finally, students look at which parts of this process can be automated by a computer and which need a human to make decisions.
            Making Decisions with Data:
              name: Making Decisions with Data
              description_student: This lesson gives the class a chance to practice the data problem solving process introduced in the last lesson.  Not all questions have right answers and in some cases the class can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
            Interpreting Data:
              name: Interpreting Data
              description_student: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
              description_teacher: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
            Automating Data Decisions:
              name: Automating Data Decisions
              description_student: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
              description_student: To conclude this unit the class designs ways to use data to make a recommendations or predictions to help solve a problem.  In the first several steps the class brainstorms problems, performs simple research, and defines a problem of their choosing. They then decide what kind of data they want to collect, how it could be collected, and how it could be used, before exchanging feedback and giving a final presentation.
              description_teacher: To conclude this unit, students design a recommendation engine based on data that they collect and analyze from their classmates. After looking at an example of a recommendation app, students follow a project guide to complete this multi-day activity. In the first several steps, students choose what choice they want to help the user to make, what data they need to give the recommendation, create a survey, and collect information about their classmates' choices. They then interpret the data and use what they have learned to create the recommendation algorithm.  Last, they use their algorithms to make recommendations to a few classmates. Students perform a peer review and make any necessary updates to their projects before preparing a presentation to the class.
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
        csd6-2019:
          title: CSD Unit 6 - Physical Computing ('19-'20)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          lessons:
            Innovations in Computing:
              name: Innovations in Computing
              description_student: ''
              description_teacher: ''
            Designing Screens with Code:
              name: Designing Screens with Code
              description_student: ''
              description_teacher: ''
            The Circuit Playground:
              name: The Circuit Playground
              description_student: ''
              description_teacher: ''
            Input Unplugged:
              name: Input Unplugged
              description_student: ''
              description_teacher: ''
            Board Events:
              name: Board Events
              description_student: ''
              description_teacher: ''
            Getting Properties:
              name: Getting Properties
              description_student: ''
              description_teacher: ''
            Analog Input:
              name: Analog Input
              description_student: ''
              description_teacher: ''
            The Program Design Process:
              name: The Program Design Process
              description_student: ''
              description_teacher: ''
            'Project: Make a Game':
              name: 'Project: Make a Game'
              description_student: ''
              description_teacher: ''
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
              description_student: ''
              description_teacher: ''
            Making Music:
              name: Making Music
              description_student: ''
              description_teacher: ''
            Arrays and For Loops:
              name: Arrays and For Loops
              description_student: ''
              description_teacher: ''
            Accelerometer:
              name: Accelerometer
              description_student: ''
              description_teacher: ''
            Functions with Parameters:
              name: Functions with Parameters
              description_student: ''
              description_teacher: ''
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
              description_student: ''
              description_teacher: ''
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
              description_student: ''
              description_teacher: ''
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
        csp4-pilot:
          title: CSP Unit 4 Pilot - Variables, Conditionals, and Functions
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey:
              name: Student Survey
            Surveys:
              name: Surveys
            Student Surveys:
              name: Student Surveys
            'Teacher Surveys: HIDE':
              name: 'Teacher Surveys: HIDE'
            Teacher Surveys:
              name: Teacher Surveys
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            'Lesson 15: Unit 4 Assessment':
              name: 'Lesson 15: Unit 4 Assessment'
            Unit 4 STUDENT Survey:
              name: Unit 4 STUDENT Survey
            Unit 4 TEACHER Survey:
              name: Unit 4 TEACHER Survey
            'Lesson 15: Assessment Day':
              name: 'Lesson 15: Assessment Day'
            Project - Decision Maker App - Part 1:
              name: Project - Decision Maker App - Part 1
            Project - Decision Maker App - Part 2:
              name: Project - Decision Maker App - Part 2
            Project - Decision Maker App - Part 3:
              name: Project - Decision Maker App - Part 3
            Project - Decision Maker App Part 1:
              name: Project - Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              name: Project - Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              name: Project - Decision Maker App Part 3
            "[OLD] Variables Make":
              name: "[OLD] Variables Make"
            "[OLD] Conditionals Make":
              name: "[OLD] Conditionals Make"
            "[OLD] Functions Make":
              name: "[OLD] Functions Make"
        csp1-2019:
          title: CSP Unit 1 - The Internet ('19-'20)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          lessons:
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
              description_student: ''
              description_teacher: ''
            Personal Innovations:
              name: Personal Innovations
              description_student: ''
              description_teacher: ''
            Sending Binary Messages:
              name: Sending Binary Messages
              description_student: ''
              description_teacher: ''
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
              description_student: ''
              description_teacher: ''
            Number Systems:
              name: Number Systems
              description_student: ''
              description_teacher: ''
            Binary Numbers:
              name: Binary Numbers
              description_student: ''
              description_teacher: ''
            Sending Numbers:
              name: Sending Numbers
              description_student: ''
              description_teacher: ''
            Sending Text:
              name: Sending Text
              description_student: ''
              description_teacher: ''
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            The Internet:
              name: The Internet
              description_student: ''
              description_teacher: ''
            The Need for Addressing:
              name: The Need for Addressing
              description_student: ''
              description_teacher: ''
            Routers and Redundancy:
              name: Routers and Redundancy
              description_student: ''
              description_teacher: ''
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
              description_student: ''
              description_teacher: ''
            The Need for DNS:
              name: The Need for DNS
              description_student: ''
              description_teacher: ''
            HTTP and Abstraction:
              name: HTTP and Abstraction
              description_student: ''
              description_teacher: ''
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
              description_student: ''
              description_teacher: ''
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
              description_student: ''
              description_teacher: ''
        csp2-2019:
          title: CSP Unit 2 - Digital Information ('19-'20)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1_2018:
              display_name: 'Unit 2: Digital Information'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            Bytes and File Sizes:
              name: Bytes and File Sizes
              description_student: ''
              description_teacher: ''
            Text Compression:
              name: Text Compression
              description_student: ''
              description_teacher: ''
            Encoding B&W Images:
              name: Encoding B&W Images
              description_student: ''
              description_teacher: ''
            Encoding Color Images:
              name: Encoding Color Images
              description_student: ''
              description_teacher: ''
            Lossy vs Lossless Compression:
              name: Lossy vs Lossless Compression
              description_student: ''
              description_teacher: ''
            Rapid Research - Format Showdown:
              name: Rapid Research - Format Showdown
              description_student: ''
              description_teacher: ''
            Unit 2 Assessment:
              name: Unit 2 Assessment
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csp3-2019:
          title: CSP Unit 3 - Intro to Programming ('19-'20)
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
              description_student: ''
              description_teacher: ''
            The Need for Algorithms:
              name: The Need for Algorithms
              description_student: ''
              description_teacher: ''
            Creativity in Algorithms:
              name: Creativity in Algorithms
              description_student: ''
              description_teacher: ''
            Using Simple Commands:
              name: Using Simple Commands
              description_student: ''
              description_teacher: ''
            Creating Functions:
              name: Creating Functions
              description_student: ''
              description_teacher: ''
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
              description_student: ''
              description_teacher: ''
            APIs and Function Parameters:
              name: APIs and Function Parameters
              description_student: ''
              description_teacher: ''
            Creating functions with Parameters:
              name: Creating functions with Parameters
              description_student: ''
              description_teacher: ''
            Looping and Random Numbers:
              name: Looping and Random Numbers
              description_student: ''
              description_teacher: ''
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
              description_student: ''
              description_teacher: ''
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            Mid-Year Survey:
              name: Mid-Year Survey
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csp4-2019:
          title: CSP Unit 4 - Big Data and Privacy ('19-'20)
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1_2018:
              display_name: 'Unit 4: Big Data and Privacy'
            cspAssessment:
              display_name: Chapter Assessment
            optional:
              display_name: Optional
            cspSurvey:
              display_name: Survey
          lessons:
            What is Big Data?:
              name: What is Big Data?
              description_student: ''
              description_teacher: ''
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
              description_student: ''
              description_teacher: ''
            Check Your Assumptions:
              name: Check Your Assumptions
              description_student: ''
              description_teacher: ''
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
              description_student: ''
              description_teacher: ''
            Identifying People with Data:
              name: Identifying People with Data
              description_student: ''
              description_teacher: ''
            The Cost of Free:
              name: The Cost of Free
              description_student: ''
              description_teacher: ''
            Simple Encryption:
              name: Simple Encryption
              description_student: ''
              description_teacher: ''
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
              description_student: ''
              description_teacher: ''
            Public Key Crypto:
              name: Public Key Crypto
              description_student: ''
              description_teacher: ''
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
              description_student: ''
              description_teacher: ''
            Unit 4 Assessment:
              name: Unit 4 Assessment
              description_student: ''
              description_teacher: ''
            Mid-Year Survey:
              name: Mid-Year Survey
              description_student: ''
              description_teacher: ''
            'Optional: Data Questions':
              name: 'Optional: Data Questions'
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csp5-2019:
          title: CSP Unit 5 - Building Apps ('19-'20)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          lessons:
            Buttons and Events:
              name: Buttons and Events
              description_student: ''
              description_teacher: ''
            Multi-screen Apps:
              name: Multi-screen Apps
              description_student: ''
              description_teacher: ''
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
              description_student: ''
              description_teacher: ''
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
              description_student: ''
              description_teacher: ''
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
              description_student: ''
              description_teacher: ''
            User Input and Strings:
              name: User Input and Strings
              description_student: ''
              description_teacher: ''
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
              description_student: ''
              description_teacher: ''
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
              description_student: ''
              description_teacher: ''
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
              description_student: ''
              description_teacher: ''
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
              description_student: ''
              description_teacher: ''
            While Loops:
              name: While Loops
              description_student: ''
              description_teacher: ''
            Loops and Simulations:
              name: Loops and Simulations
              description_student: ''
              description_teacher: ''
            Introduction to Arrays:
              name: Introduction to Arrays
              description_student: ''
              description_teacher: ''
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
              description_student: ''
              description_teacher: ''
            Processing Arrays:
              name: Processing Arrays
              description_student: ''
              description_teacher: ''
            Functions with Return Values:
              name: Functions with Return Values
              description_student: ''
              description_teacher: ''
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
              description_student: ''
              description_teacher: ''
            Mid-Year Survey:
              name: Mid-Year Survey
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csp-explore-2019:
          title: Explore - AP Performance Task Prep ('19-'20)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
              description_student: ''
              description_teacher: ''
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
              description_student: ''
              description_teacher: ''
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
              description_student: ''
              description_teacher: ''
            Mid-Year Survey:
              name: Mid-Year Survey
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csp-create-2019:
          title: Create - AP Performance Task Prep ('19-'20)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
              description_student: ''
              description_teacher: ''
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
              description_student: ''
              description_teacher: ''
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csppostap-2019:
          title: Post AP - Data Tools ('19-'20)
          description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups:
            csp_postap_1:
              display_name: 'Chapter 1: Manipulating and Visualizing Data'
            csp_postap_2:
              display_name: 'Chapter 2: Apps and Databases'
            cspSurvey:
              display_name: Survey
          lessons:
            Intro to Data:
              name: Intro to Data
              description_student: ''
              description_teacher: ''
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
              description_student: ''
              description_teacher: ''
            Making Data Visualizations:
              name: Making Data Visualizations
              description_student: ''
              description_teacher: ''
            Discover a Data Story:
              name: Discover a Data Story
              description_student: ''
              description_teacher: ''
            Cleaning Data:
              name: Cleaning Data
              description_student: ''
              description_teacher: ''
            Creating Summary Tables:
              name: Creating Summary Tables
              description_student: ''
              description_teacher: ''
            Project - Tell a Data Story:
              name: Project - Tell a Data Story
              description_student: ''
              description_teacher: ''
            Chapter 1 Assessment:
              name: Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            Creating Javascript Objects:
              name: Creating Javascript Objects
              description_student: ''
              description_teacher: ''
            Permanent Data Storage:
              name: Permanent Data Storage
              description_student: ''
              description_teacher: ''
            Reading Records:
              name: Reading Records
              description_student: ''
              description_teacher: ''
            Deleting Records:
              name: Deleting Records
              description_student: ''
              description_teacher: ''
            Updating Records:
              name: Updating Records
              description_student: ''
              description_teacher: ''
            Importing and Exporting Data:
              name: Importing and Exporting Data
              description_student: ''
              description_teacher: ''
            Visualizing Data:
              name: Visualizing Data
              description_student: ''
              description_teacher: ''
            Sample Apps:
              name: Sample Apps
              description_student: ''
              description_teacher: ''
            Final Project:
              name: Final Project
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
        csp1-pilot:
          title: CSP Unit 1 Pilot - Digital Information
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            required:
              display_name: Overview
          lessons:
            new stage:
              name: new stage
            Number Systems:
              name: Number Systems
            Bit Sending Device:
              name: Bit Sending Device
            Flippy Do Pt 1:
              name: Flippy Do Pt 1
            Flippy Do Pt 2:
              name: Flippy Do Pt 2
            Sending Text:
              name: Sending Text
            Black and White Images:
              name: Black and White Images
            Color Images:
              name: Color Images
            Lossless Compression:
              name: Lossless Compression
            Welcome to CSP:
              name: Welcome to CSP
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            AB Patterns:
              name: AB Patterns
            Flippy Do, pt. 1:
              name: Flippy Do, pt. 1
            Flippy Do, pt. 2:
              name: Flippy Do, pt. 2
            Lossy Compression:
              name: Lossy Compression
            Intellectual Property:
              name: Intellectual Property
            'Project: Digital Information Dilemmas, pt. 1':
              name: 'Project: Digital Information Dilemmas, pt. 1'
            'Project: Digital Information Dilemmas, pt. 2':
              name: 'Project: Digital Information Dilemmas, pt. 2'
            Unit Assessment:
              name: Unit Assessment
            Flippy Do, pt 1:
              name: Flippy Do, pt 1
            Flippy Do, pt 2:
              name: Flippy Do, pt 2
            'Project: Digital Information Dilemmas, pt 1':
              name: 'Project: Digital Information Dilemmas, pt 1'
            'Project: Digital Information Dilemmas, pt 2':
              name: 'Project: Digital Information Dilemmas, pt 2'
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Binary Numbers:
              name: Binary Numbers
            Overflow and Rounding:
              name: Overflow and Rounding
            CS Principles Unit 1 Survey:
              name: CS Principles Unit 1 Survey
            Unit 1 Survey:
              name: Unit 1 Survey
            'Lesson 15: Unit Assessment':
              name: 'Lesson 15: Unit Assessment'
            Unit 1 STUDENT Survey:
              name: Unit 1 STUDENT Survey
            Unit 1 TEACHER Survey:
              name: Unit 1 TEACHER Survey
            'Lesson 14: Unit Assessment':
              name: 'Lesson 14: Unit Assessment'
            Representing Information:
              name: Representing Information
            Representing Text:
              name: Representing Text
            Circle Square Patterns:
              name: Circle Square Patterns
            'Lesson 14: Assessment Day':
              name: 'Lesson 14: Assessment Day'
            'Project: Digital Information Dilemmas Part 1':
              name: 'Project: Digital Information Dilemmas Part 1'
            'Project: Digital Information Dilemmas Part 2':
              name: 'Project: Digital Information Dilemmas Part 2'
            Project - Digital Information Dilemmas Part 1:
              name: Project - Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              name: Project - Digital Information Dilemmas Part 2
        csd-tests:
          title: Post-Project Tests for CSD
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Computers and Problem Solving:
              name: Computers and Problem Solving
            Web Development:
              name: Web Development
            Interactive Animations and Games:
              name: Interactive Animations and Games
        csd-videos:
          title: CSD Videos
          description_audience: ''
          description_short: All the Videos in CS Discoveries
          description: All the Videos in CS Discoveries
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Problem Solving and Computers:
              name: Problem Solving and Computers
            Web Development:
              name: Web Development
            Games and Animations:
              name: Games and Animations
            User Centered Design:
              name: User Centered Design
            Data and Society:
              name: Data and Society
            Physical Computing:
              name: Physical Computing
        time4csdemo:
          title: Time4CS Florida's Diversity
          description_audience: 4th grade
          description_short: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
          description: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            time4cs_c1:
              display_name: 'Collection 1: The Everglades & its Ecosystems'
            time4cs_c2:
              display_name: 'Collection 2: Food Chains (in the Everglades)'
            time4cs_c3:
              display_name: 'Collection 3: Native Species (in the Everglades)'
            time4cs_c4:
              display_name: 'Collection 4: Impact of Invasive Species (on the Everglades)'
            time4cs_c5:
              display_name: 'Collection 5: Citizens Take Action'
          lessons:
            Introduction to the Problem:
              name: Introduction to the Problem
            Crowdsourcing:
              name: Crowdsourcing
            Everglades Habitats:
              name: Everglades Habitats
            Reviewing Projects:
              name: Reviewing Projects
            Food Chains:
              name: Food Chains
            Conditionals with Cards:
              name: Conditionals with Cards
            Alligator Holes:
              name: Alligator Holes
            Conditionals in Sprite Lab:
              name: Conditionals in Sprite Lab
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
            Build a Flappy Game:
              name: Build a Flappy Game
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Invasive Species:
              name: Invasive Species
            'Events: The Big Event':
              name: 'Events: The Big Event'
            I'm in Big Trouble:
              name: I'm in Big Trouble
            Events in Sprite Lab:
              name: Events in Sprite Lab
            Fishy Business:
              name: Fishy Business
            Broadcast a Message:
              name: Broadcast a Message
            Pythons & Mammals:
              name: Pythons & Mammals
            Broadcast in Scratch:
              name: Broadcast in Scratch
            Current Solutions:
              name: Current Solutions
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions in Harvester
            Functions in Artist:
              name: Functions in Artist
            Determine the Concept:
              name: Determine the Concept
            Debate:
              name: Debate
            Functions in Sprite Lab:
              name: Functions in Sprite Lab
            I'm in Big Trouble!:
              name: I'm in Big Trouble!
            I am in Big Trouble:
              name: I am in Big Trouble
        csp1-pilot-staging:
          title: 'Unit 1: Bits & Bytes'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        csp2-pilot-staging:
          title: 'Unit 2: The Internet'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        csp3-pilot-staging:
          title: 'Unit 3: Intro to App Development'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            'Project: Designing an App, pt. 1':
              name: 'Project: Designing an App, pt. 1'
            'Project: Designing an App, pt. 2':
              name: 'Project: Designing an App, pt. 2'
            Programs Investigate:
              name: Programs Investigate
            Programs Practice:
              name: Programs Practice
            'Project: Designing an App, pt. 3':
              name: 'Project: Designing an App, pt. 3'
            'Project: Designing an App, pt. 4':
              name: 'Project: Designing an App, pt. 4'
            'Project: Share Your App':
              name: 'Project: Share Your App'
            'Project: Designing an App pt. 1':
              name: 'Project: Designing an App pt. 1'
            'Project: Designing an App pt. 2':
              name: 'Project: Designing an App pt. 2'
            Project - Designing an App Part 1:
              name: Project - Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project - Designing an App Part 2
            Project - Designing an App Part 3:
              name: Project - Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project - Designing an App Part 4
            The Need for Programming Languages:
              name: The Need for Programming Languages
        csp4-pilot-staging:
          title: 'Unit 4: Variables, Conditionals, and Functions'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        csp5-pilot-staging:
          title: 'Unit 5: Lists, Loops, and Traversals'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            csp_libraries:
              display_name: Libraries
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Loops Explore:
              name: Loops Explore
            Traversals Explore:
              name: Traversals Explore
            Lists Practice:
              name: Lists Practice
            'Loops Practice: While Loops':
              name: 'Loops Practice: While Loops'
            'Loops Practice: Simulations':
              name: 'Loops Practice: Simulations'
            Lists Make:
              name: Lists Make
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Unit 5 Mini Assessment:
              name: Unit 5 Mini Assessment
            Mini PT:
              name: Mini PT
            Student Survey (Lists):
              name: Student Survey (Lists)
            Teacher Survey (Lists):
              name: Teacher Survey (Lists)
            Student Survey (Traversals):
              name: Student Survey (Traversals)
            Teacher Survey (Traversals):
              name: Teacher Survey (Traversals)
            Student Survey (Mini PT):
              name: Student Survey (Mini PT)
            Loops Investigate and Practice:
              name: Loops Investigate and Practice
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Student Survey (Libraries):
              name: Student Survey (Libraries)
            Teacher Survey (Libraries):
              name: Teacher Survey (Libraries)
        csp6-pilot-staging:
          title: 'Unit 6: Algorithms'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        csp7-pilot-staging:
          title: 'Unit 7: Functions and Libraries'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
          lessons:
            new stage:
              name: new stage
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Functions with Parameters and Return Explore:
              name: Functions with Parameters and Return Explore
            Libraries:
              name: Libraries
            Parameters and Return Values Explore:
              name: Parameters and Return Values Explore
            Parameters and Return Values Investigate:
              name: Parameters and Return Values Investigate
            Parameters and Return Values Practice:
              name: Parameters and Return Values Practice
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Mini PT:
              name: Libraries Mini PT
            Student Survey (Lists):
              name: Student Survey (Lists)
            Teacher Survey (Lists):
              name: Teacher Survey (Lists)
            Student Survey (Libraries):
              name: Student Survey (Libraries)
            Teacher Survey (Libraries):
              name: Teacher Survey (Libraries)
            Libraries Project:
              name: Libraries Project
        csp8-pilot-staging:
          title: 'Unit 8: Create PT'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        csp9-pilot-staging:
          title: 'Unit 9: Data'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        csp10-pilot-staging:
          title: 'Unit 10: Global Impact'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
        pluralsight:
          title: Get access to Pluralsight One
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Pluralsight LevelGroup:
              name: Pluralsight LevelGroup
        express-2018-vn:
          title: Express For Vietnam (2018)
          description_audience: ''
          description_short: Giới thiệu Khoa học máy tính cơ bản cho học sinh Việt Nam.
          description: "Khoa Học Máy Tính (Computer Science) \x1Dlà môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô động cho phù hợp với học sinh Việt Nam.\r\n"
          lessons:
            Graph Paper Programming:
              name: Graph Paper Programming
            Programming in Maze:
              name: Programming in Maze
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
        csd-post-survey-2018:
          title: CSD Student Post-Course Survey ('18-'19)
          description_audience: CSD Students
          description_short: CSD Student Post-Course Survey 2018
          description: "The CS Discoveries Post-Course Survey is an important tool we use to get feedback from you and make improvements to the course. \r\n The survey is private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration."
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSD post-course survey:
              name: CSD post-course survey
        csp-post-survey-2018:
          title: CSP Student Post-Course Survey ('18-'19)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSP post-course survey:
              name: CSP post-course survey
        csp5-pilot:
          title: CSP Unit 5 Pilot - Lists, Loops, and Traversals
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          lessons:
            new stage:
              name: new stage
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Lists Practice:
              name: Lists Practice
            Lists Make:
              name: Lists Make
            Loops Explore:
              name: Loops Explore
            'Loops Practice: While Loops':
              name: 'Loops Practice: While Loops'
            'Loops Practice: Simulations':
              name: 'Loops Practice: Simulations'
            Traversals Explore:
              name: Traversals Explore
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Student Survey (Lists):
              name: Student Survey (Lists)
            Student Survey (Traversals):
              name: Student Survey (Traversals)
            Unit 5 Mini Assessment:
              name: Unit 5 Mini Assessment
            Mini PT:
              name: Mini PT
            Teacher Survey (Lists):
              name: Teacher Survey (Lists)
            Teacher Survey (Traversals):
              name: Teacher Survey (Traversals)
            Student Survey (Mini PT):
              name: Student Survey (Mini PT)
            Loops Investigate and Practice:
              name: Loops Investigate and Practice
            Parameters and Return Values Explore:
              name: Parameters and Return Values Explore
            Parameters and Return Values Investigate:
              name: Parameters and Return Values Investigate
            Parameters and Return Values Practice:
              name: Parameters and Return Values Practice
            App Lab Experiments Dashboard:
              name: App Lab Experiments Dashboard
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Project:
              name: Libraries Project
            Student Survey (Libraries):
              name: Student Survey (Libraries)
            Teacher Survey (Libraries):
              name: Teacher Survey (Libraries)
            Loops Investigate:
              name: Loops Investigate
            Loops Practice:
              name: Loops Practice
            Loops Make:
              name: Loops Make
            Semester Hackathon Part 1:
              name: Semester Hackathon Part 1
            Semester Hackathon Part 2:
              name: Semester Hackathon Part 2
            Semester Hackathon Part 3:
              name: Semester Hackathon Part 3
            Semester Hackathon Part 4:
              name: Semester Hackathon Part 4
            Semester Hackathon Part 5:
              name: Semester Hackathon Part 5
            Unit 5 Assessment:
              name: Unit 5 Assessment
            Semester Exam:
              name: Semester Exam
            'Lesson 13: Assessment Day':
              name: 'Lesson 13: Assessment Day'
            Unit 5 STUDENT Survey:
              name: Unit 5 STUDENT Survey
            Unit 5 TEACHER Survey:
              name: Unit 5 TEACHER Survey
            'Lesson 18: Assessment Day':
              name: 'Lesson 18: Assessment Day'
            "[OLD] Lists Make":
              name: "[OLD] Lists Make"
            "[OLD] Loops Make":
              name: "[OLD] Loops Make"
            "[OLD] Traversals Make":
              name: "[OLD] Traversals Make"
        fit2019-novice:
          title: Novice Reflections for Summer Workshop 2019
          description_audience: 6 - 12 Novice Facilitators in Training
          description_short: 'Novice reflection materials for 2019 facilitators in training '
          description: This is the set of novice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
            Wrap Up:
              name: Wrap Up
        csd-test-saving-state:
          title: Sample of online activities
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            csd digital unplugged WIAC L1:
              name: csd digital unplugged WIAC L1
            csd digital unplugged WIAC L2:
              name: csd digital unplugged WIAC L2
            csd digital unplugged WIAC L3:
              name: csd digital unplugged WIAC L3
            What is a Computer?:
              name: What is a Computer?
            Problem Solving Process:
              name: Problem Solving Process
        fit2019-apprentice:
          title: Apprentice Reflections for Summer Workshop 2019
          description_audience: 6 - 12 Apprentice Facilitators in Training
          description_short: 'Apprentice reflection materials for 2019 facilitators in training '
          description: This is the set of apprentice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Apprentice Reflection Overview:
              name: Apprentice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
            Wrap Up:
              name: Wrap Up
        csd-sample-online:
          title: Sample of online activities for CS Discoveries
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            What is a Computer? - sample progression:
              name: What is a Computer? - sample progression
            Problem Solving Process - sample activities:
              name: Problem Solving Process - sample activities
        csd1-pilot:
          title: CSD Unit 1 - Problem Solving (Pilot Version)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
              description_student: ''
              description_teacher: ''
            Intro to Problem Solving:
              name: Intro to Problem Solving
              description_student: 'The class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
              description_teacher: In this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: This lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
              description_teacher: This lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: 'In this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems.'
              description_teacher: "In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\r\n\r\nThis lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day."
            What is a Computer?:
              name: What is a Computer?
              description_student: In this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition.
              description_teacher: "In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.\r\n"
            Input and Output:
              name: Input and Output
              description_student: In this the class students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device.  To conclude the lesson the class examines common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device. Earlier in the activity students are prompted to focus on more obvious physical inputs and outputs (e.g. a keyboard as an input or a screen as an output) but later discussions lead students to consider less obvious examples (e.g. that a touch screen is both an input and output, or the fact that the Internet can serve as both input and output). Throughout the lesson the teacher records inputs and outputs that are identified on a T-Chart at the front of the room. To conclude the lesson students examine common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
            Processing:
              name: Processing
              description_student: This lesson dives deeper into the concept of processing that was introduced as part of the definition of a computer.  Pairs work together to put a deck of cards in order, a form of processing information.  In the end, the class discusses what processing means within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first activity has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that force students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Apps and Storage:
              name: Apps and Storage
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson reviews the input, output, storage, and processing aspects of a computer in a context that is relevant and familiar to students: apps. In pairs, students evaluate smartphone applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the processing that turns those inputs into the desired output, and what information they would want to store for later. The class concludes with a discussion that connects the lesson to apps students are more familiar with. '
            Project - Propose an App:
              name: Project - Propose an App
              description_student: To conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
        csd2-pilot:
          title: CSD Unit 2 - Web Development (Pilot Version)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          lessons:
            Exploring Websites:
              name: Exploring Websites
              description_student: This lesson covers the purposes that a website might serve, both for the users and the creators. The class explores a handful of the most-used websites in the United States and discusses how each of those sites is useful for users and how it might also serve its creators.
              description_teacher: Every website has a purpose, a reason someone created it and others use it. In this lesson, students will start to consider the purposes a website might serve, both for the users and the creators. Students will explore a handful of the most-used websites in the United States and try to figure out how each of those sites is useful for users and how they might also serve their creators.
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Intro to HTML:
              name: Intro to HTML
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headings:
              name: Headings
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headings.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Digital Footprint:
              name: Digital Footprint
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: "As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r\n\r\nStudents begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r\n\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Lists:
              name: Lists
              description_student: This lesson introduces ordered and unordered lists and the associated  &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; HTML tags.  The class practices using the tags, then goes back to the personal web page project to add a new HTML page that includes the new tags.
              description_teacher: Students are introduced to ordered and unordered lists in HTML and work through a few levels in which they use the &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to their project, where they add a new HTML page.  Inside the new page, they write the HTML to display a recipe, top ten list, or any other content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: Intellectual Property and Images
              description_student: This lesson covers how to use media such as images, video, or music created by others a website while respecting the rights of the creator of that media. After first studying Creative Commons licensing, the class learns how to add images to web pages, and how to give proper attribution when doing so.
              description_teacher: "Starting with a discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \n\nFinally, with a common understanding of the restrictions of various Creative Commons licenses, students learn how to add images to their web pages using the &lt;img&gt; tag."
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: In this lesson covers common issues that arise when designing web pages in HTML. The class will correct errors in a sequence of increasingly complex web pages found on Code Studio and learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read.
              description_teacher: Students deal with common issues that arise when designing web pages in HTML. Students will correct errors in a sequence of increasingly complex web pages. In the process they will learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read. At the end of the lesson students create a list of strategies for debugging web pages and ensuring they are easy to read and maintain.
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
              description_student: 'This lesson covers hyperlinks, which allow web developers to connect pages together into one website.  The class will link together all the previous pages into one project, and create navigation bars for each page before publishing the entire site to the Web.  '
              description_teacher: "After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \r\n\r\n"
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: "This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\r\n\r\n"
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt, the class learns about the inner workings of search engines and has an opportunity to flex their analytical skills in a search for strange and unlikely animals.
              description_teacher: This lesson encourages students to think more critically about how web searches work and how to find relevant and trustworthy information online. After viewing and discussion a video about how search engines work, students will search for information about several unlikely animals. They'll need to analyze the sites they find for reliability in order to identify which of the animals is actually a hoax.
            RGB Colors and Classes:
              name: RGB Colors and Classes
              description_student: This lesson covers classes and custom colors. The class first learns how to specify custom colors using RGB (red, green, blue) values, then applies these colors to a new Four Seasons web page, which uses CSS classes.  Using classes, the class adds more styles to the Four Seasons web page, then use them to style their personal websites.
              description_teacher: In this lesson, students first learn how to specify custom colors using their RGB (red, green, blue) values.  They then apply these colors to a new Four Seasons web page, which uses CSS classes.  CSS classes allow web developers to treat groups of elements they want styled differently than other elements of the same type. Using classes, students add more styles to the Four Seasons web page, then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
              description_student: In the last few days of the unit, the class finalizes their personal websites, working with peers to get feedback, review the rubric, and put the finishing touches on the site. To cap off the unit, everyone shares their projects and how they were developed.
              description_teacher: "Students have spent a lot of time throughout the unit working on their Personal Website. In the final couple of days students finalize their websites.  They work with peers to get feedback, put the finishing touches on the websites, review the rubric and reflect on their process. To cap off the unit, they will share their projects and also a overview of the process they took to get to that final design.\r\n"
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            Intellectual Property:
              name: Intellectual Property
            Project - Planning Layout and Style:
              name: Project - Planning Layout and Style
            Project - Building a Webpage:
              name: Project - Building a Webpage
            Purpose of a  Websites:
              name: Purpose of a  Websites
            Images:
              name: Images
            Exploring Web Pages:
              name: Exploring Web Pages
            CSS Classes:
              name: CSS Classes
            Searching and Research:
              name: Searching and Research
            Sources and Research:
              name: Sources and Research
            Team Problem Solving:
              name: Team Problem Solving
            Wireframes and Planning:
              name: Wireframes and Planning
            Linking Pages:
              name: Linking Pages
            Planning a Multi-page Website:
              name: Planning a Multi-page Website
            Linking and Navigation:
              name: Linking and Navigation
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
        csd3-pilot:
          title: CSD Unit 3 - Animations and Games (Pilot Version)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            Shapes and Randomization:
              name: Shapes and Randomization
              description_student: ''
              description_teacher: ''
            Variables:
              name: Variables
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Sprites:
              name: Sprites
              description_student: In order to create more interesting and detailed images, the class is introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.  At the end of the lesson, everyone creates a scene using sprites.
              description_teacher: In order to create more interesting and detailed images, students are introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.
            The Draw Loop:
              name: The Draw Loop
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables through an unplugged activity. Using notecards and string to simulate variables within a program, students implement a few short programs. Once comfortable with this syntax, students use the same process with sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: Sprite Movement
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Conditionals:
              name: Conditionals
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: Keyboard Input
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the simple `keyDown()` command learned yesterday, students will learn about several other keyboard input commands as well as ways to take mouse input.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Velocity:
              name: Velocity
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: Collision Detection
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: Collisions
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: Functions
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: The Game Design Process
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            Project - Design a Game:
              name: Project - Design a Game
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            Shapes and Parameters:
              name: Shapes and Parameters
            Random Numbers:
              name: Random Numbers
            Sprites and Animations:
              name: Sprites and Animations
            Create a Scene:
              name: Create a Scene
            Text and Captioned Scenes:
              name: Text and Captioned Scenes
            Sprite Properties:
              name: Sprite Properties
        csd-bugs:
          title: Example of Bugs for CSD Teachers
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Game Lab Bugs:
              name: Game Lab Bugs
            Immovable Crab:
              name: Immovable Crab
        maddie-test:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            stage 1:
              name: stage 1
            new stage:
              name: new stage
        csp3-pilot:
          title: CSP Unit 3 Pilot - Intro to App Design
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          lessons:
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            Project - Designing an App Part 1:
              name: Project - Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project - Designing an App Part 2
            Programs Investigate:
              name: Programs Investigate
            Programs Practice:
              name: Programs Practice
            Project - Designing an App Part 3:
              name: Project - Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project - Designing an App Part 4
            'Project: Share Your App':
              name: 'Project: Share Your App'
            The Need for Programming Languages:
              name: The Need for Programming Languages
            'Project: Finish Your App':
              name: 'Project: Finish Your App'
            Programs Explore:
              name: Programs Explore
            Unit 3 STUDENT Survey:
              name: Unit 3 STUDENT Survey
            Unit 3 TEACHER Survey:
              name: Unit 3 TEACHER Survey
            'Lesson 11: Unit Assessment':
              name: 'Lesson 11: Unit Assessment'
            'Lesson 11: Assessment Day':
              name: 'Lesson 11: Assessment Day'
            Project - Designing an App Part 5:
              name: Project - Designing an App Part 5
            Intro to Programming:
              name: Intro to Programming
            Debugging:
              name: Debugging
        csl-vn:
          title: Computer Science Literacy for Vietnam
          description_audience: Tuổi 5-10
          description_short: Khoa học máy tính cơ bản cho học sinh Việt Nam
          description: 'Khoa Học Máy Tính (Computer Science) là môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô đọng cho phù hợp với học sinh Việt Nam. '
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming in Maze:
              name: Programming in Maze
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Loops in Ice Age:
              name: Loops in Ice Age
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            Tell a Story in Play Lab:
              name: Tell a Story in Play Lab
        dlp19-csd-mod-fit:
          title: CS Discoveries Deeper Learning 2019 Module for FiT
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: Background information and practice prompt for FiT workshop
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Understanding the Curriculum:
              name: 'Understanding the Curriculum: Pre Work'
            Demonstrating Understanding:
              name: Demonstrating Understanding
            Focus Area 1:
              name: Curriculum
            Focus Area 2:
              name: Learning Platform
          name: dlp19-csd-mod-fit
        dlp19-csp-mod-fit:
          title: CS Principles Deeper Learning 2019 FiT Workshop
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Understanding the Curriculum:
              name: Understanding the Curriculum
            Demonstrating Understanding:
              name: Demonstrating Understanding
        pl-csd-bugs:
          title: CSD Workshop 1 Bugs
          description_audience: ''
          description_short: Debugging in Game Lab - Academic Year Workshop 1
          description: ''
          lesson_groups: {}
          lessons:
            CSD Workshop 1 Bugs:
              name: CSD Workshop 1 Bugs
        dlp19-csd-mod-w1:
          title: 'CS Discoveries Deeper Learning 2019 Module for Workshop 1 '
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: Academic Year Workshop 1
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Module 1:
              name: Module 1
            Step 1:
              name: Step 1
            Step 2:
              name: Step 2
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
            Deeper Learning Overview:
              name: Deeper Learning Overview
        dlp19-csd-mod-w2:
          title: CS Discoveries Deeper Learning Module for Workshop 2
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            new stage:
              name: new stage
            CS Discoveries Deeper Learning Module 2:
              name: CS Discoveries Deeper Learning Module 2
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
        dlp19-csd-mod-w3:
          title: CS Discoveries Deeper Learning Module for Workshop 3
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Discoveries Deeper Learning Module 3:
              name: CS Discoveries Deeper Learning Module 3
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
        dlp19-csd-mod-w4:
          title: CS Discoveries Deeper Learning Module for Workshop 4
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Discoveries Deeper Learning Module 4:
              name: CS Discoveries Deeper Learning Module 4
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
        dlp19-csp-mod-w1:
          title: CS Principles Deeper Learning Module for Workshop 1
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 1:
              name: CS Principles Deeper Learning Module 1
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
            Deeper Learning Overview:
              name: Deeper Learning Overview
        dlp19-csp-mod-w2:
          title: CS Principles Deeper Learning Module for Workshop 2
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 2:
              name: CS Principles Deeper Learning Module 2
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
        dlp19-csp-mod-w3:
          title: CS Principles Deeper Learning Module for Workshop 3
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 3:
              name: CS Principles Deeper Learning Module 3
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
        dlp19-csp-mod-w4:
          title: CS Principles Deeper Learning Module for Workshop 4
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 4:
              name: CS Principles Deeper Learning Module 4
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
        csd-pilot:
          title: CSD Pilot Course
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Pilot Information:
              name: Pilot Information
            Pilot Information 1:
              name: Pilot Information 1
            Pilot Information 2:
              name: Pilot Information 2
            Pilot Information 3:
              name: Pilot Information 3
            Pilot Information 4:
              name: Pilot Information 4
            Pilot Information 5:
              name: Pilot Information 5
            Pilot Information 6:
              name: Pilot Information 6
            Pilot Information 7:
              name: Pilot Information 7
            Pilot Information 8:
              name: Pilot Information 8
            Pilot Information 9:
              name: Pilot Information 9
            Pilot Information 10:
              name: Pilot Information 10
            Pilot Information 11:
              name: Pilot Information 11
            Pilot Information 12:
              name: Pilot Information 12
            Pilot Information 13:
              name: Pilot Information 13
            Pilot Information 14:
              name: Pilot Information 14
            Pilot Information 15:
              name: Pilot Information 15
            Pilot Information 16:
              name: Pilot Information 16
            Pilot Information 17:
              name: Pilot Information 17
            Pilot Information 18:
              name: Pilot Information 18
            Pilot Information 19:
              name: Pilot Information 19
            Pilot Information 20:
              name: Pilot Information 20
            Pilot Information 21:
              name: Pilot Information 21
            Pilot Information 22:
              name: Pilot Information 22
            Pilot Information 23:
              name: Pilot Information 23
            Pilot Information 24:
              name: Pilot Information 24
            Pilot Information 25:
              name: Pilot Information 25
            Pilot Information 26:
              name: Pilot Information 26
            Pilot Information 27:
              name: Pilot Information 27
            Pilot Information 28:
              name: Pilot Information 28
            Pilot Information 29:
              name: Pilot Information 29
        csd4-pilot:
          title: Computing and Problem Solving
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Apps and Storage:
              name: Apps and Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
        csp2-pilot:
          title: CSP Unit 2 Pilot - The Internet
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          lessons:
            new stage:
              name: new stage
            Building a Network:
              name: Building a Network
            IP Addresses:
              name: IP Addresses
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets:
              name: Packets
            The Growing Internet:
              name: The Growing Internet
            Internet Dilemmas pt 1:
              name: Internet Dilemmas pt 1
            Internet Dilemmas, pt 2:
              name: Internet Dilemmas, pt 2
            Unit 2 Assessment:
              name: Unit 2 Assessment
            Unit Assessment:
              name: Unit Assessment
            'Lesson 8: Unit Assessment':
              name: 'Lesson 8: Unit Assessment'
            Unit 2 STUDENT Survey:
              name: Unit 2 STUDENT Survey
            Unit 2 TEACHER Survey:
              name: Unit 2 TEACHER Survey
            DNS and HTTP:
              name: DNS and HTTP
            Welcome to the Internet:
              name: Welcome to the Internet
            'Lesson 9: Assessment Day':
              name: 'Lesson 9: Assessment Day'
            The Need for Addressing:
              name: The Need for Addressing
            Project - Internet Dilemmas Part 1:
              name: Project - Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              name: Project - Internet Dilemmas Part 2
        denny-science:
          title: Earthquake Detector
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Earthquake Detector:
              name: Earthquake Detector
            'Earthquake Detector: Designing Screens':
              name: 'Earthquake Detector: Designing Screens'
            'Earthquake Detector: Processing with Events':
              name: 'Earthquake Detector: Processing with Events'
        peru-2019:
          title: Hora del Código Perú 2019
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Introduction:
              name: Introduction
            Debugging in Collector:
              name: Debugging in Collector
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            Events in Star Wars:
              name: Events in Star Wars
            Introduction to Debugging:
              name: Introduction to Debugging
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
        csp6-pilot:
          title: CSP Unit 6 Pilot - Algorithms
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          lessons:
            Algorithms Solve Problems:
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              name: Algorithm Efficiency
            Unreasonable Time:
              name: Unreasonable Time
            Traveling Salesman:
              name: Traveling Salesman
            Parallel and Distributed Algorithms:
              name: Parallel and Distributed Algorithms
            The Limits of Algorithms:
              name: The Limits of Algorithms
            Unit 6 STUDENT Survey:
              name: Unit 6 STUDENT Survey
            Unit 6 TEACHER Survey:
              name: Unit 6 TEACHER Survey
            'Lesson 6: Assessment Day':
              name: 'Lesson 6: Assessment Day'
        denny-science-8:
          title: Collision Detector
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Earthquake Detector: Designing Screens':
              name: 'Earthquake Detector: Designing Screens'
              description_student: ''
              description_teacher: ''
            'Earthquake Detector: Processing with Events':
              name: 'Earthquake Detector: Processing with Events'
              description_student: ''
              description_teacher: ''
            'Collision Detector: Designing Screens':
              name: 'Collision Detector: Designing Screens'
            'Collision Detector: Processing with Events':
              name: 'Collision Detector: Processing with Events'
        denny-science-copy:
          lesson_groups: {}
          lessons:
            'Collision Detector: Designing Screens':
              name: 'Collision Detector: Designing Screens'
            'Collision Detector: Processing with Events':
              name: 'Collision Detector: Processing with Events'
        dance-2019:
          title: Dance Party (2019)
          description_audience: ''
          description_short: Featuring Katy Perry, Shawn Mendes, Panic! At The Disco, Lil Nas X, Jonas Brothers, Nicki Minaj, and 34 more!
          description: Code your own dance party to share with your friends!
          lesson_groups: {}
          lessons:
            Dance Party:
              name: Dance Party
        k5-onlinepd-2019:
          title: Teaching Computer Science Fundamentals
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups:
            k5_getting_started:
              display_name: Getting Started
            k5_basic_concepts:
              display_name: Basic Coding Concepts and Teaching Practices
            k5_diving_deeper:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps:
              display_name: Next Steps
          lessons:
            Getting Started:
              name: Getting Started
              description_student: ''
              description_teacher: ''
            Computer Science Fundamentals:
              name: Computer Science Fundamentals
              description_student: ''
              description_teacher: ''
            Looking Ahead:
              name: Looking Ahead
              description_student: ''
              description_teacher: ''
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
              description_student: ''
              description_teacher: ''
            'Mastering the Basics: Loops':
              name: 'Mastering the Basics: Loops'
              description_student: ''
              description_teacher: ''
            'Mastering the Basics: Conditionals':
              name: 'Mastering the Basics: Conditionals'
              description_student: ''
              description_teacher: ''
            'Mastering the Basics: Functions':
              name: 'Mastering the Basics: Functions'
              description_student: ''
              description_teacher: ''
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
              description_student: ''
              description_teacher: ''
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
              description_student: ''
              description_teacher: ''
            Planning:
              name: Planning
              description_student: ''
              description_teacher: ''
            Next Steps:
              name: Next Steps
              description_student: ''
              description_teacher: ''
            Understanding the Computer Science Fundamentals Courses:
              name: Understanding the Computer Science Fundamentals Courses
            extra:
              name: extra
            Welcome to this online course:
              name: Welcome to this online course
            Understanding the Computer Science Fundamentals courses:
              name: Understanding the Computer Science Fundamentals courses
            Best practices for teaching computer science:
              name: Best practices for teaching computer science
            Sequencing:
              name: Sequencing
            Loops:
              name: Loops
            Conditionals:
              name: Conditionals
            Events:
              name: Events
            Functions:
              name: Functions
            Diving Deeper:
              name: Diving Deeper
            Next steps:
              name: Next steps
            Diving deeper:
              name: Diving deeper
            Diving deeper (for Courses E and F):
              name: Diving deeper (for Courses E and F)
            Welcome to "Teaching Computer Science Fundamentals":
              name: Welcome to "Teaching Computer Science Fundamentals"
            Diving Deeper (for Courses E and F):
              name: Diving Deeper (for Courses E and F)
            'Diving Deeper: Courses E and F':
              name: 'Diving Deeper: Courses E and F'
            Sprite Lab:
              name: Sprite Lab
            Variables:
              name: Variables
            For Loops:
              name: For Loops
            End-of-course projects:
              name: End-of-course projects
            Who is this section for?:
              name: Who is this section for?
            Reviewing reflections:
              name: Reviewing reflections
            Reviewing your reflections:
              name: Reviewing your reflections
            End of Course projects:
              name: End of Course projects
        dance-extras-2019:
          title: Keep On Dancing (2019)
          description: Go beyond the first hour with extended project ideas.
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Dance Party - Go Further:
              name: Dance Party - Go Further
              description_student: ''
              description_teacher: ''
        csp10-pilot:
          title: Cybersecurity and Global Impacts
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            'Project: Innovation Simulation Part 1':
              name: 'Project: Innovation Simulation Part 1'
            'Project: Innovation Simulation Part 2':
              name: 'Project: Innovation Simulation Part 2'
            Security Risks Part 1:
              name: Security Risks Part 1
            Security Risks Part 2:
              name: Security Risks Part 2
            Data Policies and Privacy:
              name: Data Policies and Privacy
            The Value of Privacy:
              name: The Value of Privacy
            'Project: Innovation Simulation Part 3':
              name: 'Project: Innovation Simulation Part 3'
            Protecting Data Part 1:
              name: Protecting Data Part 1
            Protecting Data Part 2:
              name: Protecting Data Part 2
            'Lesson 14: Unit Assessment Day':
              name: 'Lesson 14: Unit Assessment Day'
            'Project: Innovation Simulation Part 4':
              name: 'Project: Innovation Simulation Part 4'
            'Project: Innovation Simulation Part 5':
              name: 'Project: Innovation Simulation Part 5'
            'Project: Innovation Simulation Part 6':
              name: 'Project: Innovation Simulation Part 6'
            'Project: Innovation Simulation Part 7':
              name: 'Project: Innovation Simulation Part 7'
            Project - Innovation Simulation Part 1:
              name: Project - Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              name: Project - Innovation Simulation Part 2
            Project - Innovation Simulation Part 3:
              name: Project - Innovation Simulation Part 3
            Project - Innovation Simulation Part 4:
              name: Project - Innovation Simulation Part 4
            Project - Innovation Simulation Part 6:
              name: Project - Innovation Simulation Part 6
            Project - Innovation Simulation Part 7:
              name: Project - Innovation Simulation Part 7
        csp4-preview:
          title: 'CSP Preview: Variables, Conditionals, and Functions'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            new stage:
              name: new stage
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            'Lesson 15: Unit 4 Assessment':
              name: 'Lesson 15: Unit 4 Assessment'
            'Lesson 15: Assessment Day':
              name: 'Lesson 15: Assessment Day'
        time4cs-original-unit-1:
          title: Time4CS Original Unit 1
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              name: Conditionals
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Simon Says:
              name: Simon Says
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              name: Private and Personal Information
            About Me:
              name: About Me
            Access Ability:
              name: Access Ability
            Conditionals Review:
              name: Conditionals Review
            Drawing with Loops:
              name: Drawing with Loops
        time4cs-control-unit-2:
          title: Time4CS Control Unit 2
          description_audience: ''
          description_short: ''
          description: Description for the unit goes here
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_conditionals:
              display_name: Conditionals
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Crowdsourcing:
              name: Crowdsourcing
            Conditionals with Cards:
              name: Conditionals with Cards
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Artist:
              name: Nested Loops in Artist
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions in Harvester
            Functions in Artist:
              name: Functions in Artist
            End of Course Project:
              name: End of Course Project
            Nested Loops in the Maze:
              name: Nested Loops in the Maze
        time4cs-experiment-unit-2:
          title: Time4CS Experiment Unit 2
          description_audience: ''
          description_short: "[Add description]"
          description: "[Add description]"
          lesson_groups:
            time4cs_c1:
              display_name: 'Collection 1: The Everglades & its Ecosystems'
            time4cs_c2:
              display_name: 'Collection 2: Food Chains (in the Everglades)'
            time4cs_c3:
              display_name: 'Collection 3: Native Species (in the Everglades)'
            time4cs_c4:
              display_name: 'Collection 4: Impact of Invasive Species (on the Everglades)'
            time4cs_c5:
              display_name: 'Collection 5: Citizens Take Action'
          lessons:
            Introduction to the Problem:
              name: Introduction to the Problem
            Crowdsourcing (Integrated lesson):
              name: Crowdsourcing (Integrated lesson)
            Everglades Habitats:
              name: Everglades Habitats
            Evaluating a Project in Sprite Lab:
              name: Evaluating a Project in Sprite Lab
            Food Chains:
              name: Food Chains
            Conditionals with Cards (Integrated Lesson)- Part 1:
              name: Conditionals with Cards (Integrated Lesson)- Part 1
            Alligator Holes:
              name: Alligator Holes
            Food Chain Game:
              name: Food Chain Game
            Invasive Species:
              name: Invasive Species
            Conditionals with Cards (Integrated Lesson)- Part 2:
              name: Conditionals with Cards (Integrated Lesson)- Part 2
            I am in Big Trouble:
              name: I am in Big Trouble
            Conditionals in Sprite Lab:
              name: Conditionals in Sprite Lab
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Fancy Shapes using Nested Loops:
              name: Fancy Shapes using Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Fishy Business:
              name: Fishy Business
            Songwriting (Integrated Lesson):
              name: Songwriting (Integrated Lesson)
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions with Harvester:
              name: Functions with Harvester
            Functions with Artist:
              name: Functions with Artist
            Pythons impacting native populations:
              name: Pythons impacting native populations
            Functions in Sprite Lab:
              name: Functions in Sprite Lab
            Python Problem- Current Solutions:
              name: Python Problem- Current Solutions
            End of Course Project (integrated- project planning lesson):
              name: End of Course Project (integrated- project planning lesson)
            Debate- Pythons impacting native populations:
              name: Debate- Pythons impacting native populations
            Work on Project:
              name: Work on Project
        time4cs-control-unit-1:
          title: Time4CS Control Unit 1
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_events:
              display_name: Events
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            ramp_up:
              display_name: Ramp-Up
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
              description_student: ''
              description_teacher: ''
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
              description_student: ''
              description_teacher: ''
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
              description_student: ''
              description_teacher: ''
            Conditionals:
              name: Conditionals
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'Events: The Big Event'
              description_student: ''
              description_teacher: ''
            Simon Says:
              name: Simon Says
              description_student: ''
              description_teacher: ''
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
              description_student: ''
              description_teacher: ''
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: ''
              description_teacher: ''
            Private and Personal Information:
              name: Private and Personal Information
              description_student: ''
              description_teacher: ''
            About Me:
              name: About Me
              description_student: ''
              description_teacher: ''
            Access Ability:
              name: Access Ability
              description_student: ''
              description_teacher: ''
            Conditionals Review:
              name: Conditionals Review
              description_student: ''
              description_teacher: ''
        time4cs-experiment-unit-1:
          title: Time4CS Experiment Unit 1
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_events:
              display_name: Events
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            ramp_up:
              display_name: Ramp-Up
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
              description_student: ''
              description_teacher: ''
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
              description_student: ''
              description_teacher: ''
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
              description_student: ''
              description_teacher: ''
            Conditionals:
              name: Conditionals
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'Events: The Big Event'
              description_student: ''
              description_teacher: ''
            Simon Says:
              name: Simon Says
              description_student: ''
              description_teacher: ''
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
              description_student: ''
              description_teacher: ''
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: ''
              description_teacher: ''
            Private and Personal Information:
              name: Private and Personal Information
              description_student: ''
              description_teacher: ''
            About Me:
              name: About Me
              description_student: ''
              description_teacher: ''
            Access Ability:
              name: Access Ability
              description_student: ''
              description_teacher: ''
            Conditionals Review:
              name: Conditionals Review
              description_student: ''
              description_teacher: ''
        csp7-pilot:
          title: CSP Unit 7 Pilot - Parameters, Return, and Libraries
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          lessons:
            Parameters and Returns Explore:
              name: Parameters and Returns Explore
            Parameters and Returns Investigate:
              name: Parameters and Returns Investigate
            Parameters and Returns Practice:
              name: Parameters and Returns Practice
            Parameters and Returns Make:
              name: Parameters and Returns Make
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Practice:
              name: Libraries Practice
            Libraries Make:
              name: Libraries Make
            Project - Libraries Part 1:
              name: Project - Libraries Part 1
            Project - Libraries Part 2:
              name: Project - Libraries Part 2
            Project - Libraries Part 3:
              name: Project - Libraries Part 3
            Assessment Day:
              name: Assessment Day
            Parameters and Return Explore:
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              name: Parameters and Return Practice
            Parameters and Return Make:
              name: Parameters and Return Make
            Libraries Make Part 1:
              name: Libraries Make Part 1
            Libraries Make Part  2:
              name: Libraries Make Part  2
            Libraries Make Part 3:
              name: Libraries Make Part 3
            Project - Make a Library Part 1:
              name: Project - Make a Library Part 1
            Project - Make a Library Part 2:
              name: Project - Make a Library Part 2
            Project - Make a Library Part 3:
              name: Project - Make a Library Part 3
            Variables Make Demo:
              name: Variables Make Demo
            Unit 7 STUDENT Survey:
              name: Unit 7 STUDENT Survey
            Unit 7 TEACHER Survey:
              name: Unit 7 TEACHER Survey
            'Lesson 11: Assessment Day':
              name: 'Lesson 11: Assessment Day'
            "[OLD] Parameters and Return Make":
              name: "[OLD] Parameters and Return Make"
        csp8-pilot:
          title: CSP Unit 8 Pilot - Create PT Prep
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Create PT - Review the Task:
              name: Create PT - Review the Task
            Create PT - Make a Plan:
              name: Create PT - Make a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
        csp4-2020:
          title: CSP Unit 4 - Variables, Conditionals, and Functions ('20-'21)
          description_audience: ''
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Project - Decision Maker App Part 1:
              name: Project - Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              name: Project - Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              name: Project - Decision Maker App Part 3
            'Lesson 15: Assessment Day':
              name: 'Lesson 15: Assessment Day'
        csp5-2020:
          title: CSP Unit 5 - Lists, Loops, and Traversals ('20-'21)
          description_audience: ''
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
          lessons:
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Lists Practice:
              name: Lists Practice
            Lists Make:
              name: Lists Make
            Loops Explore:
              name: Loops Explore
            Loops Investigate:
              name: Loops Investigate
            Loops Practice:
              name: Loops Practice
            Loops Make:
              name: Loops Make
            Traversals Explore:
              name: Traversals Explore
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Semester Hackathon Part 1:
              name: Semester Hackathon Part 1
            Semester Hackathon Part 2:
              name: Semester Hackathon Part 2
            Semester Hackathon Part 3:
              name: Semester Hackathon Part 3
            Semester Hackathon Part 4:
              name: Semester Hackathon Part 4
            Semester Hackathon Part 5:
              name: Semester Hackathon Part 5
            'Lesson 18: Assessment Day':
              name: 'Lesson 18: Assessment Day'
            Unit 5 STUDENT Survey:
              name: Unit 5 STUDENT Survey
            Unit 5 TEACHER Survey:
              name: Unit 5 TEACHER Survey
        csp7-2020:
          title: CSP Unit 7 - Parameters, Return, and Libraries ('20-'21)
          description_audience: ''
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
          lessons:
            Parameters and Return Explore:
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              name: Parameters and Return Practice
            Parameters and Return Make:
              name: Parameters and Return Make
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Practice:
              name: Libraries Practice
            Project - Make a Library Part 1:
              name: Project - Make a Library Part 1
            Project - Make a Library Part 2:
              name: Project - Make a Library Part 2
            Project - Make a Library Part 3:
              name: Project - Make a Library Part 3
            Assessment Day:
              name: Assessment Day
            Unit 7 STUDENT Survey:
              name: Unit 7 STUDENT Survey
            Unit 7 TEACHER Survey:
              name: Unit 7 TEACHER Survey
            Variables Make Demo:
              name: Variables Make Demo
            'Lesson 11: Assessment Day':
              name: 'Lesson 11: Assessment Day'
          name: csp7-2020
        csd2-projects-temp:
          title: CSD Web Projects - TEMP
          description_audience: ''
          description_short: ''
          description: Temporary place to hold the new mini-projects for CSD Web Development
          lesson_groups: {}
          lessons:
            HTML  Project:
              name: HTML  Project
            CSS Project:
              name: CSS Project
        csp9-pilot:
          title: CSP Unit 9 Pilot - Data
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Learning From Data:
              name: Learning From Data
            Exploring One Column:
              name: Exploring One Column
            Filtering and Cleaning Data:
              name: Filtering and Cleaning Data
            Exploring Two Columns - Discrete:
              name: Exploring Two Columns - Discrete
            Exploring Two Columns - Continuous:
              name: Exploring Two Columns - Continuous
            Big Data, Crowdsourcing, and Machine Learning:
              name: Big Data, Crowdsourcing, and Machine Learning
            Machine Learning and Bias:
              name: Machine Learning and Bias
            Project - Tell a Data Story - Part 1:
              name: Project - Tell a Data Story - Part 1
            Project - Tell a Data Story - Part 2:
              name: Project - Tell a Data Story - Part 2
            'Lesson 10: Assessment Day':
              name: 'Lesson 10: Assessment Day'
            Exploring Two Columns:
              name: Exploring Two Columns
            'Lesson 9: Assessment Day':
              name: 'Lesson 9: Assessment Day'
        csd2-2020:
          title: CSD Unit 2 - Web Development ('20-'21)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
          lessons:
            Exploring Web Pages:
              name: Exploring Web Pages
              description_student: "**Question of the Day:  Why do people create web pages?**\r\n\r\nThis lesson covers the purposes that a web page might serve, both for the users and the creators. The class explores a handful of sample web pages how each of those pages is useful for users and how it might also serve its creators."
              description_teacher: "**Question of the Day:  Why do people create web pages?**\r\n\r\n\r\nEvery website has a purpose, a reason someone created it and others use it. In this lesson, students will start to consider the purposes a website might serve, both for the users and the creators. Students will explore a some sample websites and discuss the purpose it serves for its creator, then they are asked to reflect on reasons that someone might want to create websites."
            Intro to HTML:
              name: Intro to HTML
              description_student: "**Question of the Day: How can we tell the computer both *what* to put on the web page, and *how* to organize it?**\r\n\r\n\r\nThis lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit."
              description_teacher: "**Question of the Day: How can we tell the computer both *what* to put on the web page, and *how* to organize it?**\r\n\r\nIn this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson."
            Headings:
              name: Headings
              description_student: "**Question of the Day: How can we work together to fix problems with our websites?**\r\n\r\n\r\nThis lesson continues the introduction to HTML tags, this time with headings.  The class practices using heading tags to create page and section titles and learns how the different heading elements are displayed by default. "
              description_teacher: "**Question of the Day: How can we work together to fix problems with our websites?**\r\n\r\nIn this lesson, students continue to use HTML to structure text on web pages, this time in pairs and with a focus on working together and debugging problems with their sites.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  "
            Digital Footprint:
              name: Digital Footprint
              description_student: "**Question of the Day: How can you make sure that your private information stays private?**\r\n\r\nThis lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information they have shared on various websites, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online."
              description_teacher: "**Question of the Day: How can you make sure that your private information stays private?**\r\n\r\nThis lesson takes a step back from developing web pages to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r\n\r\nStudents look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r\n\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: "**Question of the Day: How can we change the style of text on a web page?**\r\n\r\n\r\nThis lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements, then discusses the differences between content, structure, and style when making a personal web page."
              description_teacher: "**Question of the Day: How can we change the style of text on a web page?**\r\n\r\nThis lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. "
            Intellectual Property:
              name: Intellectual Property
              description_student: "**Question of the Day: What kind of rules protect everyone's rights when we use each other's content?**\r\n\r\nStarting with a discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. "
              description_teacher: "**Question of the Day: What kind of rules protect everyone's rights when we use each other's content?**\r\n\r\nStarting with a discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. "
            Images:
              name: Images
              description_student: "**Question of the Day: How can we add images on our websites, while making sure we respect everyone's rights?**\r\n\r\nThe class starts by considering the ethical implications of using images on websites, specifically in terms of intellectual property.   They then learn how to add images to their web pages using the &lt;img&gt; tag and how to cite the image sources appropriately."
              description_teacher: "**Question of the Day: How can we add images on our websites, while making sure we respect everyone's rights?**\r\n\r\nStudents start the class by considering the ethical implications of using images on their websites, specifically in terms of intellectual property.   They then learn how to add images to their web pages using the &lt;img&gt; tag and how to cite the image sources appropriately.."
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: "**Question of the Day: How can we use websites to express ourselves?**\r\n\r\nThis lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. "
              description_teacher: "**Question of the Day: How can we use websites to express ourselves?**\r\n\r\nIn this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit."
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: "**Question of the Day: How can we style the images and layouts of our pages?**\r\n\r\nThis lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites."
              description_teacher: "**Question of the Day: How can we style the images and layouts of our pages?**\r\n\r\nThis lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to their personal websites."
            Project - Planning Layout and Style:
              name: Project - Planning Layout and Style
              description_student: ''
              description_teacher: ''
            Project - Building a Webpage:
              name: Project - Building a Webpage
              description_student: "**Question of the Day: What skills and practices help when we code web pages?**\r\n\r\nAfter quickly reviewing the debugging process, the class goes online to create the pages that they have planned out in previous lessons, with the project guides as a reference.  Afterwards, they engage in a structured reflection and feedback process before making any final updates.\r\n\r\n"
              description_teacher: "**Question of the Day: What skills and practices help when we code web pages?**\r\n\r\nAfter quickly reviewing their debugging process, students go online to create the pages that they have planned out in previous lessons, with the project guides as a reference.  Once they have finished with their pages, they complete a short reflection on the process, what they are most proud of, and what they would like feedback on.  They then engage in a structured peer feedback process before making final edits to the pages.  Afterwards, they reflect on the skills and practices that helped them to be successful.\r\n\r\n"
            Purpose of a  Websites:
              name: Purpose of a  Websites
              description_student: "**Question of the Day: What are the different reasons people make websites?**\r\n\r\nIn this lesson, the class explores the different reasons people make websites.  After brainstorming various reasons that they visit websites, they investigate sample web sites that have been created to address a particular problem and decide what different purposes those websites might serve for the creators.  The class then thinks of problems they might want to solve with their own websites."
              description_teacher: "**Question of the Day: What are the different reasons people make websites?**\r\n\r\n\r\nIn this lesson, students explore the different reasons people make websites.  They first think of different reasons that they visit websites, then investigate web sites that have been created to address a particular problem.  After deciding what different purposes those websites might serve for the creators, they begin to think about the problem that they might want to solve with a web site.  At the end of the lesson, students form the groups that they will be in for their chapter projects."
            Team Problem Solving:
              name: Team Problem Solving
              description_student: "**Question of the Day: How can we work together to make a great team?**\r\n\r\nTeams work together to set group norms and brainstorm what features they would like their websites to have.  The class starts by reflecting on what makes teams successful. Teams then make plans for how they will interact and reach success in their own projects before brainstorming ideas for their website projects."
              description_teacher: "**Question of the Day: How can we work together to make a great team?**\r\n\r\nStudents work together to set group norms and brainstorm what features they would like their websites to have.  The class starts by thinking of some popular teams in different contexts, then reflects on what makes teams successful.  They then get into their own teams and make a plan for how they will interact and reach success in their own projects.  Afterwards, the teams begin to brainstorm ideas for their website project."
            Sources and Research:
              name: Sources and Research
              description_student: "**Question of the Day: How do we find relevant and trustworthy information on the Internet?**\r\n\r\nThis lesson covers how to find relevant and trustworthy information online. After viewing and discussing a video about how search engines work, the classes searches search for information relevant to their sites, then analyzes the sites for credibility to decide which are appropriate to use on their own website."
              description_teacher: "**Question of the Day: How do we find relevant and trustworthy information on the Internet?**\r\n\r\nThis lesson encourages students to think more about how to find relevant and trustworthy information online. After viewing and discussing a video about how search engines work, students will search for information relevant to their site. They'll need to analyze the sites they find for credibility to decide which are appropriate to use on their own website."
            CSS Classes:
              name: CSS Classes
              description_student: "**Question of the Day:  How can we create different styles for the same type of element?**\r\n\r\nThis lesson introduces CSS classes, which allow web developers to treat groups of elements they want styled differently than other elements of the same type. The class first investigates and modifies classes on various pages, then creates their own classes and uses them to better control the appearance of their pages.  Teams then reflect on how they could use this skill to improve their websites."
              description_teacher: "**Question of the Day:  How can we create different styles for the same type of element?**\r\n\r\nThis lesson expands on the CSS that students have already learned by introducing classes, which allow web developers to treat groups of elements they want styled differently than other elements of the same type. Students first investigate and modify classes on various pages, then create their own classes and use them to better control the appearance of their pages.  They then reflect on how they could use this skill to improve their team websites."
            Planning a Multi-page Website:
              name: Planning a Multi-page Website
              description_student: "**Question of the Day:  How do we plan a web page as a group?**\r\n\r\nThe class works in teams to plan out the final web sites, including a sketch of each page.  They then download the media that they will need for their sites.  At the end of the activity, they decide how the work will be distributed among them and report whether the entire team agreed to the plan."
              description_teacher: "**Question of the Day:  How do we plan a web page as a group?**\r\n\r\nStudents work in teams to plan out their web sites, including a sketch of each page.  They then download the media that they will need for their sites.  At the end of the activity, they decide how the work will be distributed among them and report whether the entire group agreed to the plan."
            Linking and Navigation:
              name: Linking and Navigation
              description_student: "**Question of the Day: How can we combine several different web pages into one website?**\r\n\r\nThe class begins by looking online for the first web page and discussing how its use of links was what started the web.  They then transition to Web Lab where they learn how to make their own links, as well as good conventions that make it easier for users to navigate on a page.  Last, they reflect on their team project and what their personal goals are for the final stretch."
              description_teacher: "**Question of the Day: How can we combine several different web pages into one website?**\r\n\r\nStudents begin the lesson by looking online for the first web page and discussing how its use of links was what started the web.  They then transition to Web Lab where they learn how to make their own links, as well as good conventions that make it easier for users to navigate on a page.  Last, they reflect on their group project and what their personal goals are for the final stretch."
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
              description_student: "**Question of the Day: What skills and practices will help us work together to make a great website?**\r\n\r\nIn this lesson team are finally able to code the pages that they have been planning.  Using the project guide, the team works together and individually to code all of the pages, then puts all of the work together into a single site."
              description_teacher: "**Question of the Day: What skills and practices will help us work together to make a great website?**\r\n\r\nTeams have spent a lot of time throughout the chapter planning their websites.  In this lesson they are finally able to code their pages.  Using the project guide, the team works together and individually to code all of the pages, then puts all of the work together into a single site."
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
              description_student: "**Question of the Day:  How can we use feedback to make our websites better?**\r\n\r\nThis lesson focuses on the value of peer feedback.  The class first reflects on what they are proud of, and what they would like feedback on, then give and get that feedback though a structured process that includes the project rubric criteria.  Afterwards, everyone puts the finishing touches on their sites and reflects on the process before a final showcase."
              description_teacher: "**Question of the Day:  How can we use feedback to make our websites better?**\r\n\r\nThis lesson focuses on the value of peer feedback.  Students first reflect on what they are proud of, and what they would like feedback on.  Teams then work with peers to get that feedback though a structured process that includes the project rubric criteria.  Afterwards, students decide how they would like to respond to the feedback and put the finishing touches on their sites.  After a final review of the rubric, they reflect on their process. To cap off the unit, they will share their projects and also a overview of the process they took to get to that final design.\r\n"
            Post-Project Test:
              name: Post-Project Test
              description_student: 
              description_teacher: 
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: 
              description_teacher: 
            'Mini-Project: HTML Web Page':
              name: 'Mini-Project: HTML Web Page'
              description_student: "**Question of the Day: How can I use HTML to express a personal value?**\r\n\r\nIn this lesson, the class creates personal web page on a topic of their choice.  The lesson starts with a review of HTML tags.  Next, the class designs web pages, identifying the tags needed to implement them, and creates the pages in Web Lab."
              description_teacher: "**Question of the Day: How can I use HTML to express a personal value?**\r\n\r\nIn this optional mini-project, students use what they have learned to created their own personal web page on a topic of their choice.  The lesson starts with a review of the HTML that students have learned.  They then begin their project by designing a web page and identifying which tags they will use to implement it.  They then create their web pages in Web Lab and share with the class.  Optionally, after engaging in a formal feedback process, they may make final changes to their websites before reflecting on their process and turning in the site itself and their design and reflection.  This project can be completed in one day or expanded over several days, depending on the scheduling needs of the class."
            'Mini-Project: Your Personal Style':
              name: 'Mini-Project: Your Personal Style'
              description_student: "**Question of the Day: How can you express your personal style on a web page?**\r\n\r\nIn this lesson, the class creates their own styled web pages.  The lesson starts with a review of the CSS.  The class then designs the web page, identifies which CSS properties they will need, and create their web pages in Web Lab."
              description_teacher: "**How can we use web pages to express personal style?**\r\n\r\nIn this optional mini-project, student use what they have learned to created their own styled web page on a topic of their choice.  The lesson starts with a review of the CSS that students have learned.  They then begin their project by designing a web page and identifying which properties they will use to implement it.  They then create their web pages in Web Lab and share with the class.  After engaging in a formal feedback process, they make final changes to their websites before reflecting on their process and turning in the site itself and their design and reflection.  This project can be completed in one day or expanded over several days, depending on the scheduling needs of the class."
            'Your Web Page - Define ':
              name: 'Your Web Page - Define '
            Your Web Page - Prepare:
              name: Your Web Page - Prepare
              description_student: "**Question of the Day: What do we need to do to prepare to build our web pages?**\r\n\r\nIn this lesson, the class engages in the \"prepare\" stage of the problem solving process, deciding what elements and style their web pages will have.  They review the different HTML, CSS, and digital citizenship guidelines, then design and plan their pages, downloading and documenting the images they will need. Afterwards, they reflect on how their plan will ensure that the website does what it is designed to do."
              description_teacher: "**Question of the Day: What do we need to do to prepare to build our web pages?**\r\n\r\nIn this lesson, students engage in the \"prepare\" stage of the problem solving process, deciding what elements and style their web page will have.  They begin by reviewing the different HTML, CSS, and digital citizenship guidelines they will need in building their web pages.  They then describe and sketch their pages, listing the tags and styles they will use to get the layout and design that they decided on.  Then then move online to find and download the images they will need for their pages.  Afterwards, they reflect on how their plan will ensure that the website does what it is designed to do."
            Project - Personal Web Page:
              name: Project - Personal Web Page
            Websites for a Purpose:
              name: Websites for a Purpose
            Linking Pages:
              name: Linking Pages
            Using Images:
              name: Using Images
        csd1-2020:
          title: CSD Unit 1 - Problem Solving and Computing ('20-'21)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
            csd1_3:
              display_name: Alternate Lessons
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
              description_student: ''
              description_teacher: ''
            Intro to Problem Solving:
              name: Intro to Problem Solving
              description_student: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\nThe class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. "
              description_teacher: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\nIn this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.\r\n\r\n**Alternate versions of this lesson are also available.** \r\n\r\n* [Newspaper Table](../4/)\r\n* [Spaghetti Bridge](../5/)\r\n* [Paper Tower](../6/)"
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: "**Question of the Day: What are some common steps we can use to solve many different types of problems?**\r\n\r\nThis lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year."
              description_teacher: "**Question of the Day: What are some common steps we can use to solve many different types of problems?**\r\n\r\nThis lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year."
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: "**Question of the Day: How can we apply the problem solving process to many different kinds of problems?**\r\n\r\nIn this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems."
              description_teacher: "**Question of the Day: How can we apply the problem solving process to many different kinds of problems?**\r\n\r\nIn this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and redesign a classroom. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\r\n\r\nThis lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day."
            What is a Computer?:
              name: What is a Computer?
              description_student: "**Question of the Day: What is a computer?**\r\n\r\nIn this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition."
              description_teacher: "**Question of the Day: What is a computer?**\r\n\r\nIn this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.\r\n"
            Input and Output:
              name: Input and Output
              description_student: "**Question of the Day: How do computers use input and output to get and give the information that they need to solve problems?**\r\n\r\n\r\nIn this lesson the class considers how computers get and give information to the user through inputs and outputs.  After first considering what information the would need to solve a \"thinking problem\" the class identifies the inputs and outputs to that process.  Afterwards, they explore a a series of apps and determine the inputs and outputs for each one."
              description_teacher: "**Question of the Day: How do computers use input and output to get and give the information that they need to solve problems?**\r\n\r\nIn this lesson students consider how computers get and give information to the user through inputs and outputs.  Students first consider what information the would need to solve a \"thinking problem\", then use that information to produce a recommendation.  They then identify the inputs and outputs to that process.  Afterwards, students consider an app that engages in the same process and determine how that app inputs and outputs information.  Last, they consider other types of inputs and outputs that computers can use to help solve problems."
            Processing:
              name: Processing
              description_student: "**Question of the Day: What are the different ways computers can process information?**\r\n\r\nThis lesson introduces four types of processing that the class will use throughout the course.  Through a series of apps, the class explores how processing is used to turn input into output.  In the end, the class  brainstorms more types of app processing that would be useful."
              description_teacher: "**Question of the Day: What are the different ways computers can process information?**\r\n\r\nThis lesson introduces students to four common types of processing: if/then (conditionals), finding a match (searching), counting, and comparing.  Students are first introduced to the types of processing through several sample apps.  They then investigate more apps to determine what sorts of processing each uses.  They then think of their own app and decide what types of processing it would need to work.  Finally, they brainstorm other types of processing that may be useful but were not included in the main lesson."
            Apps and Storage:
              name: Apps and Storage
              description_student: "**Question of the Day: Why is storage an important part of the computing process?**\r\n\r\nThis lesson covers last part of the chapter's model of computing: storage.  The class interacts with several different apps, determining which information should be stored for later and why.  The input-output-storage-processing model of computing is then presented in full, and the class reflects on how various apps use each of the components, and how it impacts whether or not something should be considered a computer."
              description_teacher: "**Question of the Day: Why is storage an important part of the computing process?**\r\n\r\nThis lesson introduces the final component of the unit's model of computing: storage.  After trying out an \"outfit picker\" app, students discuss what information should be stored in the app versus input every time the app is run.  They then look at a series of apps and use their decisions about what shoulg be stored to create guidelines for deciding what information to store.  They then review the four components of this chapter's model of computing: input, output, storage, and processing.  Afterwards, they have one last opportunity to revise their decisions about which items should be classified as a \"computer\" from earlier in the chapter.  The lesson ends with a reflection on their own app ideas and how storage could be used."
            Project - Propose an App:
              name: Project - Propose an App
              description_student: "**Question of the Day:  How can the IOSP model help us to design an app that solves a problem?**\r\n\r\nTo conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually."
              description_teacher: "**Question of the Day:  How can the IOSP model help us to design an app that solves a problem?**\r\n\r\nTo conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually."
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            'Alternate Versions of Lesson 1: Intro to Problem Solving':
              name: 'Alternate Versions of Lesson 1: Intro to Problem Solving'
            'Alternate Versions of Lesson 3: Exploring Problem Solving':
              name: 'Alternate Versions of Lesson 3: Exploring Problem Solving'
            'Lesson 1: Intro to Problem Solving - Newspaper Table':
              name: 'Lesson 1: Intro to Problem Solving - Newspaper Table'
            'Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: 'Lesson 1: Intro to Problem Solving - Spaghetti Bridge'
            'Lesson 1: Intro to Problem Solving - Paper Tower':
              name: 'Lesson 1: Intro to Problem Solving - Paper Tower'
            'Lesson 3: Exploring Problem Solving - Games Theme':
              name: 'Lesson 3: Exploring Problem Solving - Games Theme'
            'Lesson 3: Exploring Problem Solving - Animals Theme':
              name: 'Lesson 3: Exploring Problem Solving - Animals Theme'
            \"Alt Lesson 1:\" Intro to Problem Solving - Newspaper Table:
              name: \"Alt Lesson 1:\" Intro to Problem Solving - Newspaper Table
            'Alt Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: 'Alt Lesson 1: Intro to Problem Solving - Spaghetti Bridge'
            '"Alt Lesson 1:" Intro to Problem Solving - Newspaper Table':
              name: '"Alt Lesson 1:" Intro to Problem Solving - Newspaper Table'
            " Newspaper Table (Alt Lesson 1: Intro to Problem Solving -)":
              name: " Newspaper Table (Alt Lesson 1: Intro to Problem Solving -)"
            'Spaghetti Bridge - "Alt Lesson 1: Intro to Problem Solving "':
              name: 'Spaghetti Bridge - "Alt Lesson 1: Intro to Problem Solving "'
            " Newspaper Table (Alternative Lesson 1: Intro to Problem Solving)":
              name: " Newspaper Table (Alternative Lesson 1: Intro to Problem Solving)"
            'Spaghetti Bridge - (Alt Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge - (Alt Lesson 1: Intro to Problem Solving)'
            'Spaghetti Bridge (Alt Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge (Alt Lesson 1: Intro to Problem Solving)'
            'Paper Tower (Lesson 1: Intro to Problem Solving)':
              name: 'Paper Tower (Lesson 1: Intro to Problem Solving)'
            " Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)":
              name: " Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)"
            'Spaghetti Bridge (Alt. Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge (Alt. Lesson 1: Intro to Problem Solving)'
            'Games Theme (Lesson 3: Exploring Problem Solving)':
              name: 'Games Theme (Lesson 3: Exploring Problem Solving)'
            'Exploring Problem Solving (Lesson 3: Exploring Problem Solving)':
              name: 'Exploring Problem Solving (Lesson 3: Exploring Problem Solving)'
            'Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)'
            'Spaghetti Bridge (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge (Alternate Lesson 1: Intro to Problem Solving)'
            'Games Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'Games Theme (Alternate Lesson 3: Exploring Problem Solving)'
            'Exploring Problem Solving (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'Exploring Problem Solving (Alternate Lesson 3: Exploring Problem Solving)'
            'Paper Tower (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'Paper Tower (Alternate Lesson 1: Intro to Problem Solving)'
            'Animals Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'Animals Theme (Alternate Lesson 3: Exploring Problem Solving)'
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              name: Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)
              description_student: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\nThe class works in groups to design newspaper tables that will support as many books as possible.  At the end of the lesson, groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. "
              description_teacher: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\n\r\nIn this lesson, students work in groups to design newspaper tables that will hold as many books as possible. Groups have two rounds to work on their tables, with the goal of trying to hold more books than they did in the first round. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.\r\n\r\n**This is an alternate activity to [Intro to Problem Solving - Aluminum Boats](../1/)**"
            Spaghetti Bridge (Alternate Lesson 1):
              name: Spaghetti Bridge (Alternate Lesson 1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              name: Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)
              description_student: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\nThe class works in groups to design spaghetti bridges that will support as many books as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. "
              description_teacher: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\n\r\nIn this lesson, students work in groups to design spaghetti bridges that will support as many books as possible. Groups have two rounds to work on their bridges, with the goal of trying to hold more books than they did in Round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.\r\n\r\n**This is an alternate activity to [Intro to Problem Solving - Aluminum Boats](../1/)**"
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              name: Intro to Problem Solving - Paper Tower (Alternate Lesson 1)
              description_student: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\nThe class works in groups to design paper towers that will be as tall as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. "
              description_teacher: "**Question of the Day: What can help us to work together and solve problems as a team?**\r\n\r\n\r\nIn this lesson, students work in groups to design paper towers that can stand as high as possible. Groups have two rounds to work on their towers, with the goal of trying to go higher than they did in Round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.\r\n\r\n**This is an alternate activity to [Intro to Problem Solving - Aluminum Boats](../1/)**"
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Games Theme (Alternate Lesson 3)
              description_student: "**Question of the Day: How can we apply the problem solving process to many different kinds of problems?**\r\n\r\nIn this lesson the class applies the problem solving process to three different problems: a maze, a logic puzzle, and planning field day activity. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems."
              description_teacher: "**Question of the Day: How can we apply the problem solving process to many different kinds of problems?**\r\n\r\nIn this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a maze, organizing a team to race as fast as possible, and design a game. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\r\n\r\nThis lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day."
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Animals Theme (Alternate Lesson 3)
              description_student: "**Question of the Day: How can we apply the problem solving process to many different kinds of problems?**\r\n\r\nIn this lesson the class applies the problem solving process to three different problems: a tangram puzzle, choosing a pet according to criteria, and planning a pet adoption event. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems."
              description_teacher: "**Question of the Day: How can we apply the problem solving process to many different kinds of problems?**\r\n\r\nIn this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve tangrams, choose a pet for several people, and plan a pet adoption event. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\r\n\r\nThis lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day."
            Storage:
              name: Storage
        csd4-2020:
          title: CSD Unit 4 - The Design Process ('20-'21)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
              description_student: The class explores a variety of different teapot designs to consider how design choices or made and why. Using the teapots as an example, the class will explore the relationship between users, their needs, and the design of objects they use.
              description_teacher: To kick off a unit devoted to group problem solving and developing products for other users, students begin by investigating the design of various teapots. Students analyze each teapot, attempting to identify how specific user needs might have informed its design. By considering these design choices, and attempting to match each teapot with a potential user, students can begin to see how taking a user-centered approach to designing products (both physical and digital) can make those products more useful and usable. To conclude the activity, students are asked to propose some changes to one of the teapots that would make it more useful or usable.
            Understanding Your User:
              name: Understanding Your User
              description_student: Using user profiles, the class explores how different users might react to a variety of products. Role playing as a different person, each member of the class will get to experience designs through someone else's eyes.
              description_teacher: "Designers need to understand their users’ needs in order to create useful products.  This lesson encourages students to think about how to design for another person by role-playing as someone else using a user profile and reacting as that user to a series of products.  Each student is assigned a user profile describing a person, which they then use to choose appropriate products, critique product design, and suggest improvements to design.\r\n"
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
              description_student: In small groups, the class uses the design process to come up with ideas for smart clothing. From brainstorming, to identifying users, to finally proposing a design, this is the first of several opportunities in this unit to practicing designing a solution for the needs of others.
              description_teacher: This lesson guides students through an abbreviated version of the design process they will be seeing throughout this unit. Students first brainstorm a list of potential users of smart clothing. As a class, they then group these ideas into broad categories and each group will choose one category of user. Groups repeat this process to brainstorm needs or concerns of their user, eventually categorizing these needs and choosing one to focus on. Finally, students design a piece of smart clothing, using the specific needs and concerns they brainstormed to guide their decision making. At the end of the class students quickly share their decision-making process and get feedback on how well their product addresses the user need they selected.
            User Interfaces:
              name: User Interfaces
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Testing:
              name: Feedback and Testing
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Identifying User Needs:
              name: Identifying User Needs
              description_student: Up to this point the users that the class has considered have all been remote, and the only information from users has come through text or role playing. Now the class will rely on each other as potential users, and pairs will get to interview each other to identify needs that could be addressed by developing an app.
              description_teacher: 'Up to this point students have focused on designing for users who are, to some degree, distanced from them. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. This is distance is designed to help students get outside their own head when thinking about users, but in order to get information more directly from an actual user, students need to rely on their classmates. In this lesson students pair up to become users (and designers) for each other, allowing everyone to directly interview their end user and ask questions to better inform their design. Each student pair interviews each other, attempting to identify a specific need that could be addressed by an app. '
            Project - Paper Prototype:
              name: Project - Paper Prototype
              description_student: Using the interview information from the previous lesson, the class comes up with app ideas to address the needs of their users. To express those ideas, and test out their effectiveness, each student creates and tests paper prototypes of their own.
              description_teacher: Based on the peer interview from the previous lesson, each student comes up with an idea for an app that will address their user's problem. Students then get to create their own paper prototype of their app ideas by drawing "screens" on individual notecards. A project guide directs students through the process including building the app and testing it with their user to see if their assumptions about the user interfaces they created are accurate.
            Designing Apps for Good:
              name: Designing Apps for Good
              description_student: To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.
              description_teacher: To kick off the app design project that lasts through the end of the unit, students first explore a number of apps designed for social impact that have been created by other students. The class then reviews the Define, Prepare, Try, and Reflect steps of the Problem Solving process as they develop an idea for an app of their own with social impact. Finally, students will form project teams and lay out a contract for how the team will function throughout the development of their app.
            Market Research:
              name: Market Research
              description_student: Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.
              description_teacher: In this lesson students research apps similar to the one they intend on creating to better understand the needs of their users. Students work within their teams to search the Internet for other apps, then evaluate the ones they find interesting. By the end of the lesson, each team will have a clearer idea about the type of app they want to create and further refine who their target users are. Each team will maintain a list of citations for all the apps they examined for use in their final presentation.
            Paper Prototypes:
              name: Paper Prototypes
              description_student: Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
              description_teacher: "Before starting to design apps, we need to help students to better scope their expectations. Because students will eventually be prototyping these apps in App Lab, they will be in better shape if their ideas align with the kinds of apps that are easily prototyped in App Lab. Teams start this scoping by looking through several example apps designed to demonstrate apps that can be created with App Lab. Teams then can chose one (or more) of the apps as a basis for their own. From there, teams have some time to discuss the basic functionality of their app before using 3x5 index cards to develop paper prototypes.\r\n"
            Prototype Testing:
              name: Prototype Testing
              description_student: In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.
              description_teacher: The primary purpose of developing paper prototypes is that they allow for quick testing and iteration before any code is written. This lesson is focused on giving teams a chance to test their prototypes before moving to App Lab. Teams develop a plan to test with users before running prototype tests with multiple other students in the class (and potentially outside the class). In order to test the prototype with the users, the students will have to assign roles in the testing (the “narrator”, the “computer” and the “observers”) as well as have some questions prepared for the user to answer after the test is complete.
            Digital Design:
              name: Digital Design
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin work on an interactive digital version based on the paper prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital versions of a paper prototype. From there, each group member builds out at least one page of their app in App Lab, to be later combined into a single app.
            Linking Screens:
              name: Linking Screens
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they can then link together using code. Students learn basic event driven programming by building up the model app that they started in the previous lesson. In addition to the screen that students designed yesterday, they'll learn how to create additional screens and even import screens made by others.
            Testing the App:
              name: Testing the App
              description_student: Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.
              description_teacher: 'By the end of the previous lesson each team should have a minimum viable prototype of their app. The primary purpose of this lesson is to have the team actually test the app with other people, preferably from the target audience the app is intended for, or from different teams in the class while observers from the team will record the results on the worksheets they used in the planning phase. As with testing the paper prototypes, teams will start by planning for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              name: Improving and Iterating
              description_student: Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
              description_teacher: Teams have at this point developed an app prototype that has gone through multiple iterations and rounds of user testing. With the information and guidance gained from the last round of user testing, each student has the opportunity to plan for and implement improvements to the team app. Depending on the time you have available, and student interest, you can run the cycle of testing and iteration as many times as you see fit.
            Project - App Presentation:
              name: Project - App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
        csd5-2020:
          title: CSD Unit 5 - Data and Society ('20-'21)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Representation Matters:
              name: Representation Matters
              description_student: This first lesson provides an overview of what data is and how it is used to solve problems.  Groups use a data set to make a series of meal recommendations for people with various criteria.   Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
              description_teacher: In the first lesson of the data unit, students get an overview of what data is and how it is used to solve problems.  Students start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
            Patterns and Representation:
              name: Patterns and Representation
              description_student: This lesson looks closer at what is needed to create a system of representation.  Groups create systems that can represent any letter in the alphabet using only a single stack of cards, then create messages with their systems and exchange with other groups to ensure the system worked as intended.   The class discusses commonalities between working systems while recognizing that there are many possible working solutions.
              description_teacher: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class  reviews any pros and cons of the different systems. They discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
              description_student: This lesson introduces a formal binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". The class is then introduced to the ASCII system for representing text using binary symbols and practices using this system before encoding their own messages using ASCII.
              description_teacher: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
            Representing Images:
              name: Representing Images
              description_student: This lesson continues the study of binary representation systems, this time with images. The class is introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. After doing a short set of challenges using the Pixelation Widget, the class makes connections between the system for representing images and the system for representing text they learned in the previous lesson.
              description_teacher: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
            Representing Numbers:
              name: Representing Numbers
              description_student: This lesson introduces the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system, the class turns bits "on" or "off" by turning cards face up and face down, then observes the numbers that result from these different patterns.  Eventually, the pattern is extended to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, students extend the pattern to a generic 4-bit system.
            Keeping Data Secret:
              name: Keeping Data Secret
              description_student: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
              description_teacher: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
            Combining Representations:
              name: Combining Representations
              description_student: This lesson combines all three types of binary representation systems (ASCII characters, binary number, and images) to allow for the encode of more complex types information in a record.  After seeing a series of bits and being asked to decode them, the class is introduced to the idea that  understanding binary information requires understanding both the system that is being used and the meaning of the information encoded.
              description_teacher: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
            Project - Create a Representation:
              name: Project - Create a Representation
              description_student: The class designs structure to represent their perfect day using the binary representation systems they've learned in this chapter. After deciding which pieces of information the record should capture, the class will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Afterwards, everyone will use the ASCII, binary number, and image formats they have learned to represent their perfect days try to decipher what a partner's perfect day is like.
              description_teacher: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
            Problem Solving and Data:
              name: Problem Solving and Data
              description_student: This lesson covers how the problem solving process can be tailored to deal with data problems, in particular.  The class is tasked with deciding what a city most needs to spend resources on.  They must find and use data from the Internet to support their decision.
              description_teacher: 'In this lesson, students use the problem solving process from earlier in the course to solve a data problem.  After reviewing the process, the class is presented with a decision: whether a city should build a library, pet shelter, or fire department.  Students work in teams to collect information on the Internet to help them decide what should be built, then use this information build an argument that will convince the city council of their choice.  They then map what they have done to the problem solving process that they have been using throughout the course, comparing the general problem solving process to its specific application to data problems.'
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
              description_student: This lesson covers how data is collected and used by a organizations to solve problems in the real world. The class looks at three scenarios that could be solved using data and brainstorms the types of data they would want to solve them and how they could collect the data.  Each scenario also includes a video about a real-world service that has solved a similar problem with data.
              description_teacher: In this lesson, students look at how data is collected and used by organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they  explored in the last lesson. Then students are presented three scenarios that could be solved using data and brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming, students watch a video about a real-world service and record notes about what data is collected by the real-world service and how it is used. At the end of the lesson, students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
            Structuring Data:
              name: Structuring Data
              description_student: This lesson goes further into the interpretation of data, including cleaning and visualizing raw data sets.  The class first looks at the how presenting data in different ways can help people to understand it better.  After seeing how cleaning and visualization can help people make better decisions, the class looks at what parts of this process can be automated, and what need a human.
              description_teacher: In this lesson, students go further into the collection and interpretation of data, including cleaning and visualizing data.  Students first look at the how presenting data in different ways can help people to understand it better, and they then create visualizations of their own data. Using a the results of a preferred pizza topping survey, students must decide what to do with data that does not easily fit into the visualization scheme that they have chosen.  Finally, students look at which parts of this process can be automated by a computer and which need a human to make decisions.
            Making Decisions with Data:
              name: Making Decisions with Data
              description_student: This lesson gives the class a chance to practice the data problem solving process introduced in the last lesson.  Not all questions have right answers and in some cases the class can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
            Interpreting Data:
              name: Interpreting Data
              description_student: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
              description_teacher: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
            Automating Data Decisions:
              name: Automating Data Decisions
              description_student: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
              description_student: To conclude this unit the class designs ways to use data to make a recommendations or predictions to help solve a problem.  In the first several steps the class brainstorms problems, performs simple research, and defines a problem of their choosing. They then decide what kind of data they want to collect, how it could be collected, and how it could be used, before exchanging feedback and giving a final presentation.
              description_teacher: To conclude this unit, students design a recommendation engine based on data that they collect and analyze from their classmates. After looking at an example of a recommendation app, students follow a project guide to complete this multi-day activity. In the first several steps, students choose what choice they want to help the user to make, what data they need to give the recommendation, create a survey, and collect information about their classmates' choices. They then interpret the data and use what they have learned to create the recommendation algorithm.  Last, they use their algorithms to make recommendations to a few classmates. Students perform a peer review and make any necessary updates to their projects before preparing a presentation to the class.
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            Project - Make a Recommendation:
              name: Project - Make a Recommendation
        csd6-2020:
          title: CSD Unit 6 - Physical Computing ('20-'21)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          lessons:
            Innovations in Computing:
              name: Innovations in Computing
              description_student: ''
              description_teacher: ''
            Designing Screens with Code:
              name: Designing Screens with Code
              description_student: ''
              description_teacher: ''
            The Circuit Playground:
              name: The Circuit Playground
              description_student: ''
              description_teacher: ''
            Input Unplugged:
              name: Input Unplugged
              description_student: ''
              description_teacher: ''
            Board Events:
              name: Board Events
              description_student: ''
              description_teacher: ''
            Getting Properties:
              name: Getting Properties
              description_student: ''
              description_teacher: ''
            Analog Input:
              name: Analog Input
              description_student: ''
              description_teacher: ''
            The Program Design Process:
              name: The Program Design Process
              description_student: ''
              description_teacher: ''
            'Project: Make a Game':
              name: 'Project: Make a Game'
              description_student: ''
              description_teacher: ''
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
              description_student: ''
              description_teacher: ''
            Making Music:
              name: Making Music
              description_student: ''
              description_teacher: ''
            Arrays and For Loops:
              name: Arrays and For Loops
              description_student: ''
              description_teacher: ''
            Accelerometer:
              name: Accelerometer
              description_student: ''
              description_teacher: ''
            Functions with Parameters:
              name: Functions with Parameters
              description_student: ''
              description_teacher: ''
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
              description_student: ''
              description_teacher: ''
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
              description_student: ''
              description_teacher: ''
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
        csd3-2020:
          title: CSD Unit 3 - Interactive Animations and Games ('20-'21)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: "**Question of the Day: How is computer science used in entertainment?**\r\n\r\nThe class is asked to consider the \"problems\" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression."
              description_teacher: "**Question of the Day: How is computer science used in entertainment?**\r\n\r\nStudents are asked to consider the \"problems\" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression."
            Plotting Shapes:
              name: Plotting Shapes
              description_student: "**Question of the Day: How can we clearly communicate how to draw something on a screen?**\r\n\r\nThis lesson explores the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab.The class uses a Game Lab tool  to interactively place shapes on Game Lab's 400 by 400 grid. Partners then take turns instructing each other how to draw a hidden image using this tool, accounting for many of the challenges of programming in Game Lab."
              description_teacher: "**Question of the Day: How can we clearly communicate how to draw something on a screen?**\r\n\r\nStudents explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion."
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: "**Question of the Day: How can we communicate to a computer how to draw shapes on the screen?**\r\n\r\nThe class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. The lesson covers the basics of sequencing and debugging, as well as a few simple commands.  At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson."
              description_teacher: "**Question of the Day: How can we communicate to a computer how to draw shapes on the screen?**\r\n\r\nStudents are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson."
            Shapes and Parameters:
              name: Shapes and Parameters
              description_student: "**Question of the Day:  How can we use parameters to give the computer more specific instructions?**\r\n\r\nIn this lesson the class continues to develop a familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or \"parameters\". The class learns to draw with versions of `ellipse()` and `rect()` that include width and height parameters and to use the `background()` block."
              description_teacher: "**Question of the Day:  How can we use parameters to give the computer more specific instructions?**\r\n\r\nIn this lesson students continue to develop their familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or \"parameters\". Students learn to draw with versions of `ellipse()` and `rect()` that include width and height parameters. They also learn to use the `background()` block."
            Variables:
              name: Variables
              description_student: "**Question of the Day:  How can we use variables to store information in our programs?**\r\n\r\nThis lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks, then completes a level progression that reinforces the model of a variable as a way to label or name a number."
              description_teacher: |-
                **Question of the Day:  How can we use variables to store information in our programs?**

                In this lesson students learn how to use variables to label a number. Students begin the lesson with a very basic description of the purpose of a variable within the context of the storage component of the input-output-storage-processing model. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number.
            Random Numbers:
              name: Random Numbers
              description_student: "**Question of the Day: How can we make our programs behave differently each time they are run?** \r\n\r\nThe class is introduced to the `randomNumber()` block and how it can be used to create new behaviors in their programs.  They then learn how to update variables during a program and use those skills to draw randomized images."
              description_teacher: "**Question of the Day: How can we make our programs behave differently each time they are run?** \r\n\r\nStudents are introduced to the `randomNumber()` block and how it can be used to create new behaviors in their programs.  They then learn how to update variables during a program.  Combining all of these skills students draw randomized images."
            Sprites and Animations:
              name: Sprites and Animations
              description_student: "**Question of the Day:  How can we use sprites to help us keep track of lots of information in our programs?**\r\n\r\nIn order to create more interesting and detailed images, the class is introduced to the sprite object. The lesson starts with a discussion of the various information that programs must keep track of, then presents sprites as a way to keep track of that information.  The class then learns how to assign each sprite an image, which will greatly increase the complexity of what can be drawn on the screen. "
              description_teacher: "**Question of the Day:  How can we use sprites to help us keep track of lots of information in our programs?**\r\n\r\nIn order to create more interesting and detailed images, students are introduced to the sprite object. The lesson starts with a discussion of the various information that programs must keep track of, then presents sprites as a way to keep track of that information.  Students then learn how to assign each sprite an image, which will greatly increase the complexity of what they can draw on the screen. "
            Sprite Properties:
              name: Sprite Properties
              description_student: "**Question of the Day: How can we use sprite properties to change their appearance on the screen?**\r\n\r\nThe class extends its understanding of sprites by interacting with sprite properties.  The lesson starts with a review of what a sprite is, then moves on to Game Lab for more practice with sprites, using their properties to change their appearance.  The class then reflects on the connections between properties and variables."
              description_teacher: "**Question of the Day: How can we use sprite properties to change their appearance on the screen?**\r\n\r\nStudents extend their understanding of sprites by interacting with sprite properties.  Students start with a review of what a sprite is, then move on to Game Lab to practice more with sprites, using their properties to change their appearance.  They then reflect on the connections between properties and variables."
            Text and Captioned Scenes:
              name: Text and Captioned Scenes
              description_student: ''
              description_teacher: ''
            The Draw Loop:
              name: The Draw Loop
              description_student: "**Question of the Day: How can we animate our images in Game Lab?**\r\n\r\nThis lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. "
              description_teacher: "**Question of the Day: How can we animate our images in Game Lab?**\r\n\r\nIn this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites."
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables through an unplugged activity. Using notecards and string to simulate variables within a program, students implement a few short programs. Once comfortable with this syntax, students use the same process with sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: Sprite Movement
              description_student: "**Question of the Day: How can we control sprite movement in Game Lab?**\r\n\r\nIn this lesson, the class learns how to control sprite movement using a construct called the counter pattern, which incrementally changes a sprite's properties.  After brainstorming different ways that they could animate sprites by controlling their properties, the class explores the counter pattern in Code Studio, using the counter pattern to create various types of sprite movements."
              description_teacher: "**Question of the Day: How can we control sprite movement in Game Lab?**\r\n\r\nIn this lesson, students learn how to control sprite movement using a construct called the counter pattern, which incrementally changes a sprite's properties.  Students first brainstorm different ways that they could animate sprites by controlling their properties, then explore the counter pattern in Code Studio.  After examining working code, students try using the counter pattern to create various types of sprite movements."
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Conditionals:
              name: Conditionals
              description_student: "**Question of the Day:  How can programs react to changes as they are running?**\r\n\r\nThis lesson introduces booleans and conditionals, which allow a program to run differently depending on whether a condition is true.  The class starts by playing a short game in which they respond according to whether particular conditions are met.  They then move to Code Studio where they learn how the computer evaluates Boolean expressions, and how they can be used to structure a program."
              description_teacher: "**Question of the Day:  How can programs react to changes as they are running?**\r\n\r\nThis lesson introduces booleans and conditionals, which allow a program to run differently depending on whether a condition is true.  Students start by playing a short game in which they respond according to whether particular conditions are met.  They then move to Code Studio where they learn how the computer evaluates Boolean expressions, and how they can be used to structure a program."
            Keyboard Input:
              name: Keyboard Input
              description_student: "**Question of the Day: How can our programs react to user input?**\r\n\r\nFollowing the introduction to booleans and _if_ statements in the previous lesson, the class is introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson the class will have written programs that take keyboard input from the user to control sprites on the screen."
              description_teacher: "**Question of the Day: How can our programs react to user input?**\r\n\r\nFollowing the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen."
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the simple `keyDown()` command learned yesterday, students will learn about several other keyboard input commands as well as ways to take mouse input.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: "**Question of the Day:  What skills and practices are important when creating an interactive program?**\r\n\r\nIn this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point."
              description_teacher: "**Question of the Day:  What skills and practices are important when creating an interactive program?**\r\n\r\nIn this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point."
            Velocity:
              name: Velocity
              description_student: "**Question of the Day:  How can programming languages hide complicated patterns so that it is easier to program?**\r\n\r\nAfter a brief review of how the counter pattern is used to move sprites, the class is introduced to the idea of hiding those patterns in a single block, in order to help manage the complexity of programs.  They then head to Code Studio to try out new blocks that set a sprite's velocity directly, and look at various ways that they are able to code more complex behaviors in their sprites.  "
              description_teacher: "**Question of the Day:  How can programming languages hide complicated patterns so that it is easier to program?**\r\n\r\nAfter a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the idea of hiding those patterns in a single block.  Students then head to Code Studio to try out new blocks that set a sprite's velocity directly, and look at various ways that they are able to code more complex behaviors in their sprites.  "
            Collision Detection:
              name: Collision Detection
              description_student: "**Question of the Day: How can programming help make complicated problems more simple?**\r\n\r\nThe class learns about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide and practice using the block to model various interactions."
              description_teacher: "**Question of the Day: How can programming help make complicated problems more simple?**\r\n\r\nStudents learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide and practice using the block to model various interactions."
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: "**Question of the Day: How can previous blocks be combined in new patterns to make interesting movements?**\r\n\r\nThe class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. After reviewing the two concepts, they explore various scenarios in which velocity is used in the counter pattern, and observe the different types of movement that result.  In particular, the class learns how to simulate gravity.  They then reflect on how they were able to get new behaviors by combining blocks and patterns that they already knew."
              description_teacher: "**Question of the Day: How can previous blocks be combined in new patterns to make interesting movements?**\r\n\r\nStudents learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. After reviewing the two concepts, they explore various scenarios in which velocity is used in the counter pattern, and observe the different types of movement that result.  In particular, students learn how to simulate gravity.  They then reflect on how they were able to get new behaviors by combining blocks and patterns that they already knew."
            Collisions:
              name: Collisions
              description_student: "**Question of the Day: How can programmers build on abstractions to create further abstractions?**\r\n\r\nIn this lesson, the class programs their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`)."
              description_teacher: "**Question of the Day: How can programmers build on abstractions to create further abstractions?**\r\n\r\nIn this lessson, students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`)."
            Functions:
              name: Functions
              description_student: "**Question of the Day: How can programmers use functions to create their own abstractions?**\r\n\r\nThis lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab. "
              description_teacher: "**Question of the Day: How can programmers use functions to create their own abstractions?**\r\n\r\nStudents learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. Students first think about what sorts of new blocks they would like in Game Lab, and what code those blocks would contain inside. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function."
            The Game Design Process:
              name: The Game Design Process
              description_student: "**Question of the Day:  How does having a plan help to make a large project easier?**\r\n\r\n\r\nThis lesson introduces the process the class will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. The class walks through this process in a series of levels.   At the end of the lesson they have an opportunity to make improvements to the game to make it their own."
              description_teacher: "**Question of the Day:  How does having a plan help to make a large project easier?**\r\n\r\nThis lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels.  At the end of the lesson students have an opportunity to make improvements to the game to make it their own."
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: "**Question of the Day:  How can the problem solving process help programmers to manage large projects?**\r\n\r\n\r\nIn this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes."
              description_teacher: "**Question of the Day:  How can the problem solving process help programmers to manage large projects?**\r\n\r\nIn this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes."
            Project - Design a Game:
              name: Project - Design a Game
              description_student: "**Question of the Day: How can the five CS practices (problem solving, persistence, communication, collaboration, and creativity) help programmers to complete large projects?**\r\n\r\nThe class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class members share out their completed games."
              description_teacher: "**Question of the Day: How can the five CS practices (problem solving, persistence, communication, collaboration, and creativity) help programmers to complete large projects?**\r\n\r\nStudents will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods."
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            Text:
              name: Text
              description_student: "**Question of the Day: How can we use text to improve our scenes and animations?**\r\n\r\nThis lesson introduces Game Lab's text commands, giving the class more practice using the coordinate plane and parameters.  At the beginning of the lesson, the class is asked to caption a cartoon created in Game Lab.  They then move onto Code Studio where they practice placing text on the screen and controlling other text properties, such as size."
              description_teacher: "**Question of the Day: How can we use text to improve our scenes and animations?**\r\n\r\nThis lesson introduces Game Lab's text commands, giving students more practice using the coordinate plane and parameters.  At the beginning of the lesson, students are asked to caption a cartoon created in Game Lab.  They then move onto Code Studio where they practice placing text on the screen and controlling other text properties, such as size.  Students who complete the assessment early may go on to learn more challenging blocks related to text properties. "
            'Mini-Project: Captioned Scenes':
              name: 'Mini-Project: Captioned Scenes'
              description_student: "**Question of the Day: How can we use Game Lab to express our creativity?**\r\n\r\nAfter a quick review of the code learned so far, the class is introduced to the first creative project of the unit.  Using the problem solving process as a model, students define the scene that they want to create, prepare by thinking of the different code they will need, try their plan in Game Lab, then reflect on what they have created.  In the end, they also have a chance to share their creations with their peers."
              description_teacher: "**Question of the Day: How can we use Game Lab to express our creativity?**\r\n\r\nAfter a quick review of the code they have learned so far, students are introduced to their first creative project of the unit.  Using the problem solving process as a model, students define the scene that they want to create, prepare by thinking of the different code they will need, try their plan in Game Lab, then reflect on what they have created.  In the end, they also have a chance to share their creations with their peers."
            'Mini-Project: Animation':
              name: 'Mini-Project: Animation'
              description_student: "**Question of the Day: How can we combine different programming patterns to make a complete animation?**\r\n\r\nIn this lesson, the class is asked to combine different methods from previous lessons to create an animated scene.  They first review the types of movement and animation that they have learned, and brainstorm what types of scenes might need that movement.  They then begin to plan out their own animated scenes, which they create in Game Lab."
              description_teacher: "**Question of the Day: How can we combine different programming patterns to make a complete animation?**\r\n\r\nIn this lesson, students are asked to combine different methods that they have learned to create an animated scene.  Students first review the types of movement and animation that they have learned, and brainstorm what types of scenes might need that movement.  They then begin to plan out their own animated scenes, which they create in Game Lab."
            Mouse Input:
              name: Mouse Input
              description_student: "**Question of the Day: What are more ways that the computer can react to user input?**\r\n\r\nThe class continues to explore ways to use conditional statements to take user input. In addition to the keyboard commands learned yesterday, they will learn about several ways to take mouse input.  They will also expand their understanding of conditional to include `else`, which allows for the computer to run a certain section of code when a condition is true, and a different section of code when it is not."
              description_teacher: |-
                **Question of the Day: What are more ways that the computer can react to user input?**

                In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the keyboard commands learned yesterday, students will learn about several ways to take mouse input.  They will also expand their understanding of conditionals to include `else`, which allows for the computer to run a certain section of code when a condition is true, and a different section of code when it is not.
            'Mini-Project: Side Scroller':
              name: 'Mini-Project: Side Scroller'
              description_student: "**Question of the Day:  How can the new types of sprite movement and collision detection be used to create a game?**\r\n\r\nThe class uses what it has learned about collision detection and setting velocity to create simple side scroller games.  After looking at a sample side scroller game, students brainstorm what sort of side scroller they would like, then use a structured process to program the game in Code Studio."
              description_teacher: "**Question of the Day:  How can the new types of sprite movement and collision detection be used to create a game?**\r\n\r\nStudents use what they have learned about collision detection and setting velocity to create a simple side scroller game.  After looking at a sample side scroller game, students brainstorm what sort of side scroller they would like, then use a structured process to program the game in Code Studio."
            'Mini-Project: Platform Jumper':
              name: 'Mini-Project: Platform Jumper'
            'Mini-Project: Flyer Game':
              name: 'Mini-Project: Flyer Game'
              description_student: "**Question of the Day:  How can the new types collisions and modeling movement be used to create a game?**\r\n\r\nThe class uses what it has learned about simulating gravity and the different types of collisions  to create simple flyer games.  After looking at a sample flyer game, students brainstorm what sort of flyer they would like, then use a structured process to program the game in Code Studio."
              description_teacher: "**Question of the Day:  How can the new types of collisions and modeling movement be used to create a game?**\r\n\r\nStudents use what they have learned about simulating gravity and the different types of collisions to create simple flyer games.  After looking at a sample flyer game, students brainstorm what sort of flyer games they would like, then use a structured process to program the game in Code Studio."
            Sprites:
              name: Sprites
          name: csd3-2020
        moneppo-1:
          lesson_groups: {}
          lessons: {}
        coursea-2020:
          title: Course A (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Going Places Safely:
              name: Going Places Safely
              description_student: Learn the rules to safely visit places online.
              description_teacher: In collaboration with Common Sense Media, this lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests. Students also find out that they can go to exciting places online, but they need to follow certain rules to remain safe.
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: Click and drag to finish the puzzles.
              description_teacher: This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.
            'Programming: Happy Maps':
              name: Happy Maps
              description_student: Write instructions to get the Flurb to the fruit.
              description_teacher: 'This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Students will practice writing precise instructions as they work to translate instructions into the symbols provided. If problems arise in the code, students should also work together to recognize bugs and build solutions.'
            Sequencing with Scrat:
              name: Sequencing with Scrat
              description_student: Program Scrat to reach the acorn.
              description_teacher: Using Scrat from the Ice Age franchise, students will develop sequential algorithms to move a squirrel character from one side of a maze to the acorn at the other side. To do this they will stack code blocks together in a linear sequence.
            Programming in Ice Age:
              name: Programming with Scrat
              description_student: Write programs to help Scrat reach the acorn.
              description_teacher: Using characters from the Ice Age, students will develop sequential algorithms to move Scrat from one side of a maze to the acorn at the other side. To do this they will stack code blocks together in a linear sequence, making them move straight, turn left, or turn right.
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
              description_student: Help BB-8 collect the scrap metal.
              description_teacher: In this lesson, students will use their newfound programming skills in more complicated ways to navigate a tricky course with BB-8.
            'Loops: Happy Loops':
              name: Happy Loops
              description_student: Help the Flurb solve bigger problems using loops.
              description_teacher: This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.
            Loops in Ice Age:
              name: Loops with Scrat
              description_student: Help Scrat cover more ground using loops.
              description_teacher: Building on the concept of repeating instructions from "Happy Loops," this stage will have students using loops to get to the acorn more efficiently on Code.org.
            Loops in Collector:
              name: Loops with Laurel
              description_student: Help Laurel the adventurer collect the treasure underground.
              description_teacher: In this lesson, students continue learning the concept of loops. In the previous lesson, students were introduced to loops by moving through a maze and picking corn. Here, loops are used to collect treasure in open cave spaces.
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
              description_student: Use loops and patterns to finish the images.
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous plugged lesson, loops were used to traverse a maze and collect treasure. Here, loops are creating patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: Move and shout when your teachers presses buttons on a giant remote.
              description_teacher: Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
            Events in Play Lab:
              name: On the Move with Events
              description_student: Create your own game or story.
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all of the coding skills they've learned to create an animated game. It's time to get creative and make a story in the Play Lab!
            Safety in My Online Neighborhood:
              name: Safety in My Online Neighborhood
              description_student: Learn how to go places safely online.
              description_teacher: |-
                ![](https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png){: style="padding:10px 0"}

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                The power of the internet allows students to experience and visit places they might not be able to see in person. But, just like traveling in the real world, it's important to be safe when traveling online. On this virtual field trip, kids can practice staying safe on online adventures.
        courseb-2020:
          title: Course B (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          lessons:
            Your Digital Footprint:
              name: Your Digital Footprint
              description_student: 'Learn about your digital footprint and how to stay safe when visiting websites. '
              description_teacher: In collaboration with [r common-sense-media], this lesson helps students learn about the similarities of staying safe in the real world and when visiting websites. Students will also learn that the information they put online leaves a digital footprint or “trail.” This trail can be big or small, helpful or hurtful, depending on how they manage it.
            Move It, Move It:
              name: Move It, Move It
              description_student: Program your classmates to step carefully from place to place.
              description_teacher: This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course.  In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.
            Sequencing in Maze:
              name: Sequencing with Angry Birds
              description_student: Help Red the Angry Bird follow the path to the naughty pig.
              description_teacher: Using characters from Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence.
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: Create programs to help the Angry Bird move through the maze.
              description_teacher: Using characters from the game Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence.
            Programming in Harvester:
              name: Programming with Harvester
              description_student: Help the Harvester collect vegetables along a path.
              description_teacher: 'Students will apply the programming concepts that they have learned to the Harvester environment. Now, instead of just getting the character to a goal, students have to collect corn using a new block. Students will continue to develop sequential algorithm skills and start using the debugging process. '
            'Loops: Getting Loopy':
              name: Getting Loopy
              description_student: In this lesson, we'll have a dance party using repeat loops!
              description_teacher: As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.
            Loops in Harvester:
              name: Loops with Harvester
              description_student: Help the Harvester collect even more, using loops!
              description_teacher: Building on the concept of repeating instructions from "Getting Loopy," this stage will have students using loops to pick corn more efficiently on Code.org.
            Loops in Collector:
              name: Loops with Laurel
              description_student: Program Laurel the adventurer to collect treasure in an open cave.
              description_teacher: In this lesson, students continue learning the concept of loops. Here, Laurel the Adventurer uses loops to collect treasure in open cave spaces. A new `get treasure` block is introduced to help her on her journey.
            Loops in Artist:
              name: Drawing Gardens with Loops
              description_student: Use patterns and loops to finish the images.
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous online lesson, loops were used to traverse a maze and collect treasure. Here, students use loops to create patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            The Right App:
              name: The Right App
              description_student: Sketch your own smartphone app.
              description_teacher: 'This lesson has students recognize that computer science can help people in real life. First, students empathize with several fictional smartphone users in order to help them find the “right app” that addresses their needs. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user. '
            'Events: The Big Event':
              name: The Big Event Jr.
              description_student: Move or shout when your teacher presses buttons on a giant remote.
              description_teacher: Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
            Events in Play Lab:
              name: A Royal Battle with Events
              description_student: Use events to create a story or make an interactive game.
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and apply all of the coding skills that they've learned to create an animated game. It's time to get creative and make a game in Play Lab!
            Digital Trails:
              name: Digital Trails
              description_student: 'Learn about your digital footprint and how to stay safe when visiting websites. '
              description_teacher: |-
                ![](https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png){: style="padding:10px 0"}

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                Does what you do online always stay online? Students learn that the information they share online leaves a digital footprint or "trail." Depending on how they manage it, this trail can be big or small, and harmful or helpful. Students compare different trails and think critically about what kinds of information they want to leave behind.
        coursec-2020:
          title: Course C (2020)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Screen Out the Mean:
              name: Screen Out the Mean
              description_student: In this lesson, you'll learn what to do if something online makes you feel angry, sad, or scared.
              description_teacher: "This lesson helps children to recognize that it is essential to tell a trusted adult if something online makes them feel angry, sad, or scared. \r\n\r\nStudents learn that other people can sometimes act like bullies when they are online. They will explore what cyberbullying means and what they can do when they encounter it. After reading a scenario about mean online behavior, students discuss what cyberbullying is, how it can make people feel, and how to respond. Finally, they use their knowledge to create a simple tip sheet on cyberbullying in their journal.\r\n"
            Powerful Passwords:
              name: Powerful Passwords
              description_student: In this lesson, you'll learn about how passwords protect your information, and how to make a good password.
              description_teacher: "Students explore why people use passwords, learn the benefits of using passwords, and discover strategies for creating and keeping strong, secure passwords.\r\n\r\nStudents learn password tips, test their existing passwords with an interactive game, and create new passwords using guidelines for powerful passwords.\r\n"
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
              description_student: In this lesson, you'll pretend your classmates are robots and program them to build patterns of stacked cups.
              description_teacher: Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Students will take turns participating as the robot, responding only to the algorithm defined by their peers. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.
            Programming in Maze:
              name: Programming with Angry Birds
              description_student: Learn about sequences and algorithms with Angry Birds.
              description_teacher: Using characters from the game Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence, making them move straight, turn left, or turn right.
            Debugging in Maze:
              name: Debugging in Maze
              description_student: Find problems in puzzles and practice your debugging skills.
              description_teacher: Debugging is an essential element of learning to program. In this lesson, students will encounter puzzles that have been solved incorrectly. They will need to step through the existing code to identify errors, including incorrect loops, missing blocks, extra blocks, and blocks that are out of order.
            Programming in Collector:
              name: Collecting Treasure with Laurel
              description_student: Write algorithms to help Laurel the Adventurer collect lots of gems!
              description_teacher: In this series of puzzles, students will continue to develop their understanding of algorithms and debugging. With a new character, Laurel the Adventurer, students will create sequential algorithms to get Laurel to pick up treasure as she walks along a path.
            Programming in Artist:
              name: Creating Art with Code
              description_student: Create beautiful images by programming the Artist.
              description_teacher: In this lesson, students will take control of the Artist to complete drawings on the screen. This Artist stage will allow students to create images of increasing complexity using new blocks like `move forward by 100 pixels` and `turn right by 90 degrees`.
            Binary Bracelets:
              name: Binary Bracelets
              description_student: Create your very own binary bracelet and learn how computers remember information!
              description_teacher: Binary is extremely important in the world of computers. The majority of computers today store all sorts of information in binary form. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
              description_student: In this lesson, you'll program your classmates again, but using loops you'll be able to solve bigger and more complicated problems.
              description_teacher: Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
              description_student: 'Help BB-8 through mazes using loops! '
              description_teacher: Building on the concept of repeating instructions from "Getting Loopy," this stage will have students using loops to help BB-8 traverse a maze more efficiently than before.
            Loops in Harvester:
              name: Harvesting Crops with Loops
              description_student: Let's use loops to help the harvester collect some veggies!
              description_teacher: "In the preceding stage, students used loops to create fantastic drawings. Now they're going to loop new actions in order to help the harvester collect multiple veggies growing in large bunches.\r\n"
            Looking Ahead:
              name: Looking Ahead with Minecraft
              description_student: Avoid the lava! Here you will start to learn about conditionals in the world of Minecraft.
              description_teacher: This lesson was originally created for the Hour of Code, alongside the Minecraft team. Students will get the chance to practice ideas that they have learned up to this point, as well as getting a sneak peek at conditionals!
            Sticker Art with Loops:
              name: Sticker Art with Loops
              description_student: In this lesson, loops make it easy to make even cooler images with Artist!
              description_teacher: Watch student faces light up as they make their own gorgeous designs using a small number of blocks and digital stickers! This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity is fantastic for producing artifacts for portfolios or parent/teacher conferences.
            'Events: The Big Event':
              name: The Big Event
              description_student: 'Play a fun game to learn about events. '
              description_teacher: Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. Events can make your program more interesting and interactive.
            Build a Flappy Game:
              name: Build a Flappy Game
              description_student: Build you own Flappy Bird game however you like, then share it with your friends!
              description_teacher: In this special stage, students get to build their own Flappy Bird game by using event handlers to detect mouse clicks and object collisions. At the end of the level, students will be able to customize their game by changing the visuals or rules.
            Events in Play Lab:
              name: Chase Game with Events
              description_student: It's time to get creative and make a game in Play Lab!
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all the coding skills they've learned to create an animated game. It's time to get creative and make a game in Play Lab!
            Picturing Data:
              name: Picturing Data
              description_student: Data can be used to help students understand their world and answer interesting questions. In this lesson, students will collect data from a Play Lab project and visualize it using different kinds of graphs.
              description_teacher: Data can be used to help students understand their world and answer interesting questions. In this lesson, students will collect data from a Play Lab project and visualize it using different kinds of graphs.
            'End of Course Project: Create a Play Lab Game':
              name: End of Course Project
              description_student: Get those hands ready for plenty of coding! It's time to start building your project.
              description_teacher: 'This capstone lesson takes students through the process of designing, developing, and showcasing their own Play Lab projects! To ensure this process goes smoothly, we have provided a step-by-step structure for students to follow, from planning on paper to coding on our website. In addition, we offer ideas to help teachers facilitate a showcase finale! '
            Putting a STOP to Online Meanness:
              name: Putting a STOP to Online Meanness
              description_student: In this lesson, you'll learn about meanness and what to do if you encounter it online.
              description_teacher: |-
                <img alt="" src="https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png" style="padding: 10px 0;">

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                The internet is filled with all kinds of interesting people, but sometimes, some of them can be mean to each other. With this role play, help your students understand why it's often easier to be mean online than in person, and how to deal with online meanness when they see it.
            Password Power-Up:
              name: Password Power-Up
              description_student: In this lesson, you'll learn about how passwords protect your information, and how to make a good password.
              description_teacher: |-
                <img alt="" src="https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png" style="padding: 10px 0;">

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                Stronger, more secure online passwords are a good idea for everyone. But how can we help kids create better passwords and actually remember them? Use the tips in this lesson to help kids make passwords that are both secure and memorable.
        coursed-2020:
          title: Course D (2020)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
              description_student: In this lesson, you will program your classmate to draw pictures!
              description_teacher: 'By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. The class will start by having students use symbols to instruct each other to color squares on graph paper in an effort to reproduce an existing picture. If there’s time, the lesson can conclude with images that the students create themselves.  '
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
              description_student: This lesson will give you practice in the skills you will need for this course.
              description_teacher: 'In this set of puzzles, students will begin with an introduction (or review depending on the experience of your class) of Code.org''s online workspace. There will be videos pointing out the basic functionality of the workspace including the `Run`, `Reset`, and `Step` buttons. Also discussed in these videos: dragging Blockly blocks, deleting Blockly blocks, and connecting Blockly blocks. Next, students will practice their _sequencing_ and _debugging_ skills in maze. From there, students will see new types of puzzles like Collector, Artist, and Harvester when they learn the very basics of _loops_.'
            Relay Programming:
              name: Relay Programming
              description_student: Remember at the beginning of the course when you made drawings with code? In this lesson, you will be working with a team to do something very similar!
              description_teacher: This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.
            Debugging in Collector:
              name: Debugging with Laurel
              description_student: Have you ever run into problems while coding? In this lesson, you will learn about the secrets of debugging. Debugging is the process of finding and fixing problems in your code.
              description_teacher: In this online activity, students will practice debugging in the "collector" environment. Students will get to practice reading and editing code to fix puzzles with simple algorithms, loops and nested loops.
            Events in Bounce:
              name: Events in Bounce
              description_student: Ever wish you could play video games in school? In this lesson, you will get to make your own!
              description_teacher: In this online activity, students will learn what events are, and how computers use them in programs like video games. Students will work through puzzles making the program react to events (like arrow buttons being pressed.) At the end of the puzzle, students will have the opportunity to customize their game with different speeds and sounds.
            Build a Star Wars Game:
              name: Build a Star Wars Game
              description_student: Feel the force as you build your own Star Wars game in this lesson.
              description_teacher: In this lesson, students will practice using events to build a game that they can share online. Featuring R2-D2 and other Star Wars characters, students will be guided through events, then given space to create their own game.
            Loops in Ice Age:
              name: Loops in Ice Age
              description_student: In this lesson you'll use the repeat block to help Scrat reach the acorn as efficiently as possible.
              description_teacher: As a quick update (or introduction) to using loops, this stage will have students using the `repeat` block to get Scrat to the acorn more efficiently.
            Loops in Artist:
              name: Drawing Shapes with Loops
              description_student: In this lesson, loops make it easy to make cool images with the Artist!
              description_teacher: This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity doubles as a debugging exercise for extra problem-solving practice.
            Nested Loops in Bee:
              name: Nested Loops in Maze
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you create a nested loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Conditionals with Cards:
              name: Conditionals with Cards
              description_student: It's time to play a game where you earn points only under certain conditions!
              description_teacher: "This lesson demonstrates how conditionals can be used to tailor a program to specific information. We don’t always have all of the information we need when writing a program. Sometimes you will want to do something different in one situation than in another, even if you don't know what situation will be true when your code runs. That is where conditionals come in. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.\r\n\r\n"
            Conditionals in Bee:
              name: If/Else with Bee
              description_student: 'Now that you understand conditionals, it''s time to program Bee to use them when collecting honey and nectar. '
              description_teacher: Up until this point students have been writing code that executes exactly the same way each time it is run - reliable, but not very flexible. In this lesson, your class will begin to code with conditionals, allowing them to write code that functions differently depending on the specific conditions the program encounters.
            While Loops in Farmer:
              name: While Loops in Farmer
              description_student: 'Loops are so useful in coding. This lesson will teach you about a new kind of loop: while loops!'
              description_teacher: "By the time students reach this lesson, they should already have plenty of practice using `repeat` loops, so now it's time to mix things up. \r\n\r\n_While loops_ are loops that continue to repeat commands while a condition is met. `While` loops are used when the programmer doesn't know the exact number of times commands need to be repeated, but does know what condition needs to be true in order for the loop to continue repeating. For example, students will be working to fill holes and dig dirt in Farmer. They will not know the size of the holes or the height of the mountains of dirt, but the students will know they need to keep filling the holes and digging the dirt as long as the ground is not flat."
            Until Loops in Maze:
              name: Until Loops in Maze
              description_student: You can do some amazing things when you use `until` loops!
              description_teacher: In this lesson, students will learn about `until` loops. Students will build programs that have the main character repeat actions `until` they reach their desired stopping point.
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
              description_student: It's not always clear when to use each conditional.  This lesson will help you get practice deciding what to do.
              description_teacher: Students will practice `while` loops, `until` loops, and `if / else` statements. All of these blocks use conditionals. By practicing all three, students will learn to write complex and flexible code.
            'Unplugged: Binary':
              name: Binary Images
              description_student: Learn how computers store pictures using a language with only two options.
              description_teacher: Though many people think of binary as strictly zeros and ones, students will be introduced to the idea that information can be represented in a variety of binary options. This lesson takes that concept one step further as it illustrates how a computer can store even more complex information (such as images and colors) in binary, as well.
            Artist Binary:
              name: Binary Images with Artist
              description_student: In this lesson, you will learn how to make images using only 0s and 1s.
              description_teacher: This series of online lessons will have students learning to make images using on and off.
            Digital Citizenship:
              name: Digital Citizenship
              description_student: Some information is not safe to share online. This lesson will help you learn the difference between safe and private information.
              description_teacher: "In collaboration with Common Sense Education, this lesson helps students learn to think critically about the user information that some websites request or require. Students learn the difference between private information and personal information, distinguishing what is safe and unsafe to share online.\r\n\r\nStudents will also explore what it means to be responsible and respectful to their offline and online communities as a step toward learning how to be good digital citizens."
            Dance Party:
              name: Dance Party
              description_student: Time to celebrate! In this lesson, you will program your own interactive dance party.
              description_teacher: In this lesson, students will program their own interactive dance party. This activity requires sound as the tool was built to respond to music.
            Dance Part:
              name: Dance Part
            End of Course Project:
              name: End of Course Project
              description_student: Get those hands ready for plenty of coding! It's time to start building your project.
              description_teacher: 'This capstone lesson takes students through the process of designing, developing, and showcasing their own projects! '
            Be A Super Digital Citizen:
              name: Be A Super Digital Citizen
              description_student: Learn how you can be an upstander when you see cyberbullying.
              description_teacher: |-
                ![](https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png){: style="padding:10px 0"}

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                Online tools are empowering for kids, and they also come with big responsibilities. But do kids always know what to do when they encounter cyberbullying? Show your students appropriate ways to take action and resolve conflicts, from being upstanders to helping others in need.
        coursee-2020:
          title: Course E (2020)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            csf_impacts:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Sequencing in the Maze:
              name: Sequencing in the Maze
              description_student: In this lesson, you will learn how to write your very own programs!
              description_teacher: "In this set of puzzles, students will begin with an introduction (or review depending on the experience of your class) of Code.org's online workspace. There will be videos pointing out the basic functionality of the workspace including the `Run`, `Reset`, and `Step` buttons. Also discussed in these videos: dragging Blockly blocks, deleting Blockly blocks, and connecting Blockly blocks. Next, students will practice their _sequencing_ and _debugging_ skills in the maze. \r\nDebugging is an essential element of learning to program. Students will encounter some puzzles that have been solved incorrectly. They will need to step through the existing code to identify errors, including incorrect loops, missing blocks, extra blocks, and blocks that are out of order."
            Programming and Loops with the Artist:
              name: Drawing with Loops
              description_student: In this lesson, loops make it easy to make even cooler images with Artist!
              description_teacher: Watch student faces light up as they make their own gorgeous designs using a small number of blocks and digital stickers! This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity is fantastic for producing artifacts for portfolios or parent/teacher conferences.
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
              description_student: Here you will learn about conditionals in the world of Minecraft.
              description_teacher: This lesson was originally created for the Hour of Code, alongside the Minecraft team. Students will get the chance to practice ideas that they have learned up to this point, as well as getting a sneak peek at conditionals!
            Conditionals:
              name: Conditionals with the Farmer
              description_student: You will get to tell the computer what to do under certain conditions in this fun and challenging series.
              description_teacher: This lesson introduces students to `while` loops and `if / else` statements. _While loops_ are loops that continue to repeat commands as long as a condition is true. While loops are used when the programmer doesn't know the exact number of times the commands need to be repeated, but the programmer does know what condition needs to be true in order for the loop to continue looping. `If / Else` statements offer flexibility in programming by running entire sections of code only if something is true, otherwise it runs something else.
            Simon Says:
              name: Simon Says
              description_student: Play a game and think about what commands are needed to get the right result.
              description_teacher: 'In this lesson, students will play a game intended to get them thinking about the way commands need to be given to produce the right result. This will help them more easily carry over to Sprite Lab in the upcoming lessons. '
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
              description_student: Learn how to create and edit sprites.
              description_teacher: 'In this lesson, students will learn about the two concepts at the heart of Sprite Lab: sprites and behaviors. Sprites are characters or objects on the screen that students can move, change, and manipulate. Behaviors are actions that sprites will take continuously until they are stopped.'
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: Create an interactive project that can be shared with classmates.
              description_teacher: 'This lesson features Sprite Lab, a platform where students can create their own interactive animations and games. In addition to behaviors, today students will incorporate user input as events to create an "alien dance party".  '
            Private and Personal Information:
              name: Private and Personal Information
              description_student: The internet is fun and exciting, but it's important to stay safe too. This lesson teaches you the difference between information that is safe to share and information that is private.
              description_teacher: |-
                ![](https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png){: style="padding:10px 0"}

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                It's in our students' nature to share and connect with others. But sharing online comes with some risks. How can we help kids build strong, positive, and safe relationships online? Help your students learn the difference between what's personal and what's best left private.
            About Me:
              name: About Me with Sprite Lab
              description_student: By creating an interactive poster with SpriteLab, students will apply their understanding of sharing personal and private information on the web.
              description_teacher: "By creating an interactive poster with SpriteLab, students will apply their understanding of sharing personal and private information on the web.\r\n"
            Access Ability:
              name: Designing for Accessibility
              description_student: 'In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps. '
              description_teacher: 'In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps. '
            Nested Loops in Bee:
              name: Nested Loops in Maze
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you place a loop inside another loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
              description_student: More nested loops! This time, you get to make some AMAZING drawing with nested loops.
              description_teacher: Students will create intricate designs using Artist in today's set of puzzles. By continuing to practice nested loops with new goals, students will see more uses of loops in general. This set of puzzles also offers a lot more potential for creativity with an opportunity for students to create their own design at the end of the stage.
            Nested Loops in Frozen:
              name: Nested Loops with Frozen
              description_student: 'Anna and Elsa have excellent ice-skating skills, but need your help to create patterns in the ice. Use nested loops to create something super COOL. '
              description_teacher: Now that students know how to layer their loops, they can create so many beautiful things.  This lesson will take students through a series of exercises to help them create their own portfolio-ready images using Anna and Elsa's excellent ice-skating skills!
            'Functions: Songwriting':
              name: Songwriting
              description_student: Even rockstars need programming skills. This lesson will teach you about functions using lyrics from songs.
              description_teacher: One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.
            Functions in Minecraft:
              name: Functions in Minecraft
              description_student: Can you figure out how to use functions for the most efficient code?
              description_teacher: Students will begin to understand how functions can be helpful in this fun and interactive Minecraft adventure!
            Functions in Harvester:
              name: Functions with Harvester
              description_student: Functions will save you lots of work as you help the farmer with her harvest!
              description_teacher: Students have practiced creating impressive designs in Artist and navigating mazes in Bee, but today they will use functions to harvest crops in Harvester. This lesson will push students to use functions in the new ways by combining them with `while` loops and `if / else` statements.
            Functions in Artist:
              name: Functions with Artist
              description_student: Make complex drawings more easily with functions!
              description_teacher: Students will be introduced to using functions with the Artist. Magnificent images will be created and modified. For more complicated patterns, students will learn about nesting functions by calling one function from inside another.
            End of Course Project:
              name: End of Course Project
              description_student: Projects this big take time and plenty of planning. Find your inspiration, develop a plan, and unleash your creativity!
              description_teacher: "The next four lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. Intended to be a multi-lesson or multi-week experience, students will spend time exploring brainstorming, learning about the design process, building, and presenting their final work. \r\n\r\nIn the explore stage, students will play with pre-built examples of projects in both Artist and Sprite Lab for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in Artist, Sprite Lab, or another interface that they have become familiar with (this is likely the longest stage of the project). Finally, students will be able to present their finished work to their peers."
            Digital Sharing:
              name: Digital Sharing
              description_student: 'In this lesson, you''ll learn about the challenges and benefits of ownership and copyright. '
              description_teacher: Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.
            Designing for Accessibility:
              name: Designing for Accessibility
              description_student: 'In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps. '
              description_teacher: 'In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps. '
        coursef-2020:
          title: Course F (2020)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_digcit:
              display_name: Digital Citizenship
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Functions in Minecraft:
              name: Functions in Minecraft
              description_student: Can you figure out how to use functions for the most efficient code?
              description_teacher: Students will begin to understand how functions can be helpful in this fun and interactive Minecraft adventure!
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
              description_student: Learn how to create and edit sprites.
              description_teacher: 'In this lesson, students will learn about the two concepts at the heart of Sprite Lab: sprites and behaviors. Sprites are characters or objects on the screen that students can move, change, and manipulate. Behaviors are actions that sprites will take continuously until they are stopped.'
            Events with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: Create an interactive project that can be shared with classmates.
              description_teacher: 'This lesson features Sprite Lab, a platform where students can create their own interactive animations and games. In addition to behaviors, today students will incorporate user input as events to create an "alien dance party".   '
            Loops with the Artist:
              name: Drawing with Loops
              description_student: In this lesson, loops make it easy to make even cooler images with Artist!
              description_teacher: Watch student faces light up as they make their own gorgeous designs using a small number of blocks and digital stickers! This lesson builds on the understanding of loops from previous lessons and gives students a chance to be truly creative.  This activity is fantastic for producing artifacts for portfolios or parent/teacher conferences.
            Nested Loops in the Maze:
              name: Nested Loops in Maze
              description_student: Loops inside loops inside loops. What does this mean? This lesson will teach you what happens when you place a loop inside another loop.
              description_teacher: In this online activity, students will have the opportunity to push their understanding of loops to a whole new level. Playing with the Bee and Plants vs Zombies, students will learn how to program a loop to be inside of another loop. They will also be encouraged to figure out how little changes in either loop will affect their program when they click `Run`.
            Envelope Variables:
              name: Envelope Variables
              description_student: 'Envelopes and variables have something in common: both can hold valuable things. Here you will learn what variables are and the awesome things they can do.'
              description_teacher: Variables are used as placeholders for values such as numbers or words. Variables allow for a lot of freedom in programming. Instead of having to type out a phrase many times or remember an obscure number, computer scientists can use variables to reference them. This lesson helps to explain what variables are and how we can use them in many different ways. The idea of variables isn't an easy concept to grasp, so we recommend allowing plenty of time for discussion at the end of the lesson.
            Variables as Constant in Artist:
              name: Variables with Artist
              description_student: Don't forget to bring creativity to class! In these puzzles you will be making fantastic drawings using variables.
              description_teacher: In this lesson, students will explore the creation of repetitive designs using variables in the Artist environment. Students will learn how variables can be used to make code easier to write and easier to read, even when the values don't change at runtime.
            Variables that Change in Bee:
              name: Changing Variables with Bee
              description_student: This bee loves variables!
              description_teacher: 'This lesson will help illustrate how variables can make programs more powerful by allowing values to change while the code is running. '
            Variables that Change in Artist:
              name: Changing Variables with Artist
              description_student: In this lesson, you'll make drawings using variables that change as the program runs.
              description_teacher: In this lesson, students will explore the creation of repetitive designs using variables in the Artist environment. Students will learn how variables can be used to make code easier to write and easier to read. After guided puzzles, students will end in a freeplay level to show what they have learned and create their own designs.
            Simulating Experiments:
              name: Simulating Experiments
              description_student: Run simulations on the computer and experiment by changing variables.
              description_teacher: By running a simple simulation in Sprite Lab, students will experience how computing can be used to collect data that identify trends or patterns. After running the simulation multiple times, students will have an opportunity to make a prediction about how changing a variable in the simulation might impact the outcome, and then test that hypothesis.
            For Loop Fun:
              name: For Loop Fun
              description_student: You're going to have loads of fun learning about `for` loops!
              description_teacher: 'We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic. '
            For Loops in Bee:
              name: For Loops with Bee
              description_student: Buzz buzz. In these puzzles you will be guiding a bee to nectar and honey using `for` loops!
              description_teacher: Featuring Bee, this lesson focuses on `for` loops and using an incrementing variable to solve more complicated puzzles. Students will begin by reviewing loops from previous lessons, then they'll walk through an introduction to `for` loops so they can more effectively solve complicated problems.
            For Loops in Artist:
              name: For Loops with Artist
              description_student: Get ready to make your next masterpiece. Here you will be using `for` loops to make some jaw-dropping pictures.
              description_teacher: In this lesson, students continue to practice `for` loops, but this time with Artist. Students will complete puzzles combining the ideas of variables, loops, and `for` loops to create complex designs. At the end, they will have a chance to create their own art in a freeplay level.
            Internet:
              name: The Internet
              description_student: Ever wondered how information travels across the internet? It's not magic! This lesson will teach you the basics of how the internet works.
              description_teacher: Even though many people use the internet daily, not very many know how it works. In this lesson, students will pretend to flow through the internet, all the while learning about connections, URLs, IP Addresses, and the DNS.
            Editing Behaviors:
              name: Behaviors in Sprite Lab
              description_student: Learn to program your own sprite behaviors!
              description_teacher: Here, students will use Sprite Lab to create their own customized behaviors.
            Virtual Pet:
              name: Virtual Pet with Sprite Lab
              description_student: In this lesson, students will create an interactive Virtual Pet that looks and behaves how they wish. Students will use Sprite Lab's "Costumes" tool to customize their pet's appearance. They will then use events, behaviors, and other concepts they have learned to give their pet a life of its own!
              description_teacher: In this lesson, students will create an interactive Virtual Pet that looks and behaves how they wish. Students will use Sprite Lab's "Costumes" tool to customize their pet's appearance. They will then use events, behaviors, and other concepts they have learned to give their pet a life of its own!
            The Power of Words:
              name: The Power of Words
              description_student: Bullying is never okay. This lesson will teach you about what is and isn't okay to say online.
              description_teacher: |-
                ![](https://curriculum.code.org/media/uploads/CommonSenseEducationShort400px.png){: style="padding:10px 0"}

                This lesson was originally created by [Common Sense Education](https://www.commonsense.org/education/digital-citizenship/curriculum).

                As kids grow, they'll naturally start to communicate more online. But some of what they see could make them feel hurt, sad, angry, or even fearful. Help your students build empathy for others and learn strategies to use when confronted with cyberbullying.
            Crowdsourcing:
              name: Crowdsourcing
              description_student: This lesson will teach you about crowdsourcing, the process of building a project with a team.
              description_teacher: In computer science, we face some big, daunting problems. Challenges such as finding large prime numbers or sequencing DNA are almost impossible to do as an individual. Adding the power of others makes these tasks manageable. This lesson will show your students how helpful teamwork can be in the industry of computer science.
            Digital Sharing:
              name: Digital Sharing
              description_student: 'In this lesson, you''ll learn about the challenges and benefits of ownership and copyright. '
              description_teacher: Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.
            End of Course Project:
              name: End of Course Project
              description_student: Projects this big take time and plenty of planning. Find your inspiration, develop a plan, and unleash your creativity!
              description_teacher: "The next five lessons provide an opportunity for students to put their coding skills to use in a capstone project. This project will help individuals gain experience with coding and produce an exemplar to share with peers and loved ones. This is intended to be a multi-lesson or multi-week project where students spend time brainstorming, learning about the design process, building, and then presenting their final work. \r\n\r\nIn the \"Explore\" stage, students will play around with pre-built Artist and Sprite Lab programs for inspiration. Next, students will learn about the design process and how to implement it in their own projects. They will then be given the space to create their own project in Artist, Sprite Lab, or any other interface that you are comfortable providing. (This is likely the longest stage of the project.) Students will then revise their code after testing and peer review. Finally, students will be able to present their finished work to their classmates."
            AI for Oceans:
              name: AI for Oceans
              description_student: 'Tutorial Summary: First students classify objects as either "fish" or "not fish" to attempt to remove trash from the ocean. Then, students will need to expand their training data set to include other sea creatures that belong in the water. In the second part of the activity, students will choose their own labels to apply to images of randomly generated fish. This training data is used for a machine learning model that should then be able to label new images on its own.'
              description_teacher: "**Tutorial Summary:** First students classify objects as either \"fish\" or \"not fish\" to attempt to remove trash from the ocean. Then, students will need to expand their training data set to include other sea creatures that belong in the water. In the second part of the activity, students will choose their own labels to apply to images of randomly generated fish. This training data is used for a machine learning model that should then be able to label new images on its own.\r\n\r\n\r\n**Checking Correctness:** This tutorial will not tell students whether they completed the level correctly. It is possible to skip through the different parts of the activity quickly. Encourage students to watch the videos, read the instructions, and try different things along the way. At any time, they can share their findings with you or a classmate.\r\n"
        express-2020:
          title: Express Course (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm-Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Dance Party:
              name: Dance Party
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: Programming in Maze
              description_student: ''
              description_teacher: ''
            Debugging in Maze:
              name: Debugging in Maze
              description_student: ''
              description_teacher: ''
            Programming in Collector:
              name: Programming in Collector
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: Programming in Artist
              description_student: ''
              description_teacher: ''
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: ''
            Nested Loops in Bee:
              name: Nested Loops in Bee
              description_student: ''
              description_teacher: ''
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
              description_student: ''
              description_teacher: ''
            'Concept Practice with Minecraft ':
              name: 'Concept Practice with Minecraft '
              description_student: ''
              description_teacher: ''
            Conditionals in Bee:
              name: Conditionals in Bee
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While Loops in Farmer
              description_student: ''
              description_teacher: ''
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
              description_student: ''
              description_teacher: ''
            Until Loops in Maze:
              name: Until Loops in Maze
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Harvester:
              name: Conditionals & Loops in Harvester
              description_student: ''
              description_teacher: ''
            Functions in Minecraft:
              name: Functions in Minecraft
              description_student: ''
              description_teacher: ''
            Functions in Harvester:
              name: Functions in Harvester
              description_student: ''
              description_teacher: ''
            Functions in Artist:
              name: Functions in Artist
              description_student: ''
              description_teacher: ''
            Variables as Constant in Artist:
              name: Variables as Constant in Artist
              description_student: ''
              description_teacher: ''
            Variables that Change in Bee:
              name: Variables that Change in Bee
              description_student: ''
              description_teacher: ''
            Variables that Change in Artist:
              name: Variables that Change in Artist
              description_student: ''
              description_teacher: ''
            For Loops in Bee:
              name: For Loops in Bee
              description_student: ''
              description_teacher: ''
            For Loops in Artist:
              name: For Loops in Artist
              description_student: ''
              description_teacher: ''
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
              description_student: ''
              description_teacher: ''
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
              description_student: ''
              description_teacher: ''
            Editing Behaviors:
              name: Editing Behaviors
              description_student: ''
              description_teacher: ''
            Virtual Pet with Sprite Lab:
              name: Virtual Pet with Sprite Lab
              description_student: ''
              description_teacher: ''
            Build A Project:
              name: Build A Project
              description_student: ''
              description_teacher: ''
            Swimming Fish with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Behaviors with Sprite Lab:
              name: Behaviors with Sprite Lab
            End of Course Project:
              name: End of Course Project
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Debugging with Scrat:
              name: Debugging with Scrat
            Collecting Treasure with Laurel:
              name: Collecting Treasure with Laurel
            Creating Art with Code:
              name: Creating Art with Code
            Sticker Art with Loops:
              name: Sticker Art with Loops
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Snowflakes with Anna and Elsa:
              name: Snowflakes with Anna and Elsa
            'Looking Ahead with Minecraft ':
              name: 'Looking Ahead with Minecraft '
            If/Else with Bee:
              name: If/Else with Bee
            While Loops with the Farmer:
              name: While Loops with the Farmer
            Harvesting with Conditionals:
              name: Harvesting with Conditionals
            Functions with Harvester:
              name: Functions with Harvester
            Functions with Artist:
              name: Functions with Artist
            Variables with Artist:
              name: Variables with Artist
            Changing Variables with Bee:
              name: Changing Variables with Bee
            Changing Variables with Artist:
              name: Changing Variables with Artist
            For Loops with Bee:
              name: For Loops with Bee
            For Loops with Artist:
              name: For Loops with Artist
            Swimming Fish in Sprite Lab:
              name: Swimming Fish in Sprite Lab
            Alien Dance Party:
              name: Alien Dance Party
            Behaviors in Sprite Lab:
              name: Behaviors in Sprite Lab
        pre-express-2020:
          title: Pre-reader Express (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.
            Sequencing with Scrat:
              name: Sequencing with Scrat
              description_student: ''
              description_teacher: Using Scrat from the Ice Age franchise, students will develop sequential algorithms to move a squirrel character from one side of a maze to the acorn at the other side. To do this they will stack code blocks together in a linear sequence.
            Programming in Maze:
              name: Programming in Maze
              description_student: ''
              description_teacher: Using characters from the game Angry Birds, students will develop sequential algorithms to move a bird from one side of a maze to the pig at the other side. To do this they will stack code blocks together in a linear sequence.
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
              description_student: ''
              description_teacher: In this lesson, students will use their newfound programming skills in more complicated ways to navigate a tricky course with BB-8.
            Programming in Harvester:
              name: Programming in Harvester
              description_student: ''
              description_teacher: 'Students will apply the programming concepts that they have learned to the Harvester environment. Now, instead of just getting the character to a goal, students have to collect corn using a new block. Students will continue to develop sequential algorithm skills and start using the debugging process. '
            Spelling Bee:
              name: Spelling Bee
              description_student: ''
              description_teacher: ''
            Loops in Ice Age:
              name: Loops in Ice Age
              description_student: ''
              description_teacher: Building on the concept of repeating instructions from "My Loopy Robotic Friends," this stage will have students using loops to get to the acorn more efficiently on Code.org.
            Loops in Collector:
              name: Loops in Collector
              description_student: ''
              description_teacher: In this lesson, students continue learning the concept of loops. Here, Laurel the Adventurer uses loops to collect treasure in open cave spaces. A new `get treasure` block is introduced to help her on her journey.
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous plugged lesson, loops were used to traverse a maze and collect treasure. Here, loops are creating patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            Loops in Artist:
              name: Loops in Artist
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images by looping simple sequences of instructions. In the previous online lesson, loops were used to traverse a maze and collect treasure. Here, students use loops to create patterns. At the end of this stage, students will be given the opportunity to create their own images using loops.
            Tell a Story in Play Lab:
              name: Tell a Story in Play Lab
              description_student: ''
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and to apply all of the coding skills they've learned to create an animated game. It's time to get creative and make a story in the Play Lab!
            Make a Game in Play Lab:
              name: Make a Game in Play Lab
              description_student: ''
              description_teacher: In this online activity, students will have the opportunity to learn how to use events in Play Lab and apply all of the coding skills that they've learned to create an animated game. It's time to get creative and make a game in Play Lab!
            Programming in with Angry Birds:
              name: Programming in with Angry Birds
            Loops with Scrat:
              name: Loops with Scrat
            Loops with Laurel:
              name: Loops with Laurel
            Drawing Gardens with Loops:
              name: Drawing Gardens with Loops
            On the Move with Events:
              name: On the Move with Events
            A Royal Battle with Events:
              name: A Royal Battle with Events
        csp1-2020:
          title: CSP Unit 1 - Digital Information ('20-'21)
          description_audience: ''
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          lesson_groups:
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
            cspSurvey:
              display_name: Survey
          lessons:
            new stage:
              name: new stage
            Welcome to CSP:
              name: Welcome to CSP
            Representing Information:
              name: Representing Information
            Circle Square Patterns:
              name: Circle Square Patterns
            Binary Numbers:
              name: Binary Numbers
            Overflow and Rounding:
              name: Overflow and Rounding
            Representing Text:
              name: Representing Text
            Black and White Images:
              name: Black and White Images
            Color Images:
              name: Color Images
            Lossless Compression:
              name: Lossless Compression
            Lossy Compression:
              name: Lossy Compression
            Intellectual Property:
              name: Intellectual Property
            Project - Digital Information Dilemmas Part 1:
              name: Project - Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              name: Project - Digital Information Dilemmas Part 2
            'Lesson 14: Assessment Day':
              name: 'Lesson 14: Assessment Day'
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
        csp2-2020:
          title: CSP Unit 2 - The Internet ('20-'21)
          description_audience: ''
          description_short: Build the internet from the ground up using the Internet Simulator.
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
          lessons:
            new stage:
              name: new stage
            Welcome to the Internet:
              name: Welcome to the Internet
            Building a Network:
              name: Building a Network
            The Need for Addressing:
              name: The Need for Addressing
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets:
              name: Packets
            DNS and HTTP:
              name: DNS and HTTP
            Project - Internet Dilemmas Part 1:
              name: Project - Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              name: Project - Internet Dilemmas Part 2
            'Lesson 9: Assessment Day':
              name: 'Lesson 9: Assessment Day'
        csp3-2020:
          title: CSP Unit 3 - Intro to App Design ('20-'21)
          description_audience: ''
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
          lessons:
            new stage:
              name: new stage
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            Project - Designing an App Part 1:
              name: Project - Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project - Designing an App Part 2
            The Need for Programming Languages:
              name: The Need for Programming Languages
            Intro to Programming:
              name: Intro to Programming
            Debugging:
              name: Debugging
            Project - Designing an App Part 3:
              name: Project - Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project - Designing an App Part 4
            Project - Designing an App Part 5:
              name: Project - Designing an App Part 5
            'Lesson 11: Assessment Day':
              name: 'Lesson 11: Assessment Day'
          name: csp3-2020
        csp6-2020:
          title: CSP Unit 6 - Algorithms ('20-'21)
          description_audience: ''
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          lesson_groups:
            csp_unit6_2020:
              display_name: 'Unit 6: Algorithms'
          lessons:
            new stage:
              name: new stage
            Algorithms Solve Problems:
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              name: Algorithm Efficiency
            Unreasonable Time:
              name: Unreasonable Time
            The Limits of Algorithms:
              name: The Limits of Algorithms
            Parallel and Distributed Algorithms:
              name: Parallel and Distributed Algorithms
            'Lesson 6: Assessment Day':
              name: 'Lesson 6: Assessment Day'
        csp8-2020:
          title: CSP Unit 8 - Create PT Prep ('20-'21)
          description_audience: ''
          description_short: Practice and complete the Create Performance Task (PT).
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Create PT - Review the Task:
              name: Create PT - Review the Task
            Create PT - Make a Plan:
              name: Create PT - Make a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
        csp9-2020:
          title: CSP Unit 9 - Data ('20-'21)
          description_audience: ''
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project you''ll analyze a dataset of your choosing and present your findings. '
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
          lessons:
            new stage:
              name: new stage
            Learning From Data:
              name: Learning From Data
            Exploring One Column:
              name: Exploring One Column
            Filtering and Cleaning Data:
              name: Filtering and Cleaning Data
            Exploring Two Columns:
              name: Exploring Two Columns
            Big Data, Crowdsourcing, and Machine Learning:
              name: Big Data, Crowdsourcing, and Machine Learning
            Machine Learning and Bias:
              name: Machine Learning and Bias
            Project - Tell a Data Story - Part 1:
              name: Project - Tell a Data Story - Part 1
            Project - Tell a Data Story - Part 2:
              name: Project - Tell a Data Story - Part 2
            'Lesson 9: Assessment Day':
              name: 'Lesson 9: Assessment Day'
        csp10-2020:
          title: CSP Unit 10 - Cybersecurity and Global Impacts ('20-'21)
          description_audience: ''
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security, and the ways that encryption and other techniques are used to complete it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\r\n\r\n"
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
          lessons:
            new stage:
              name: new stage
            Project - Innovation Simulation Part 1:
              name: Project - Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              name: Project - Innovation Simulation Part 2
            Project - Innovation Simulation Part 3:
              name: Project - Innovation Simulation Part 3
            Data Policies and Privacy:
              name: Data Policies and Privacy
            The Value of Privacy:
              name: The Value of Privacy
            Project - Innovation Simulation Part 4:
              name: Project - Innovation Simulation Part 4
            Security Risks Part 1:
              name: Security Risks Part 1
            Security Risks Part 2:
              name: Security Risks Part 2
            'Project: Innovation Simulation Part 4':
              name: 'Project: Innovation Simulation Part 4'
            Project - Innovation Simulation Part 6:
              name: Project - Innovation Simulation Part 6
            Project - Innovation Simulation Part 7:
              name: Project - Innovation Simulation Part 7
            Protecting Data Part 1:
              name: Protecting Data Part 1
            Protecting Data Part 2:
              name: Protecting Data Part 2
            'Project: Innovation Simulation Part 5':
              name: 'Project: Innovation Simulation Part 5'
            'Project: Innovation Simulation Part 6':
              name: 'Project: Innovation Simulation Part 6'
            'Project: Innovation Simulation Part 7':
              name: 'Project: Innovation Simulation Part 7'
            'Lesson 14: Unit Assessment Day':
              name: 'Lesson 14: Unit Assessment Day'
        csp-march-virtual:
          title: CS Principles 20-21 Curriculum Training for Facilitators
          description_audience: CS Principles Facilitators
          description_short: ''
          description: Welcome to the CSP Facilitator Pre-work for the April call! This will be focused on deepening the understanding of EIPM, content in Unit 5, and the new datasets available in the course. This work is essential to completing before the April call since we will be processing and discussing the work together in the call.
          lesson_groups: {}
          lessons:
            Kick-off:
              name: Kick-off
            Changes:
              name: Changes
            Curriculum Investigations:
              name: Curriculum Investigations
            Wrap up:
              name: Wrap up
            new stage:
              name: new stage
            Pre-work:
              name: Pre-work
            Reflections:
              name: Reflections
            Part 1:
              name: Part 1
            Part 2:
              name: Part 2
            Getting Familiar with Traversals EIPM:
              name: Getting Familiar with Traversals EIPM
            Comparing Make Lessons:
              name: Comparing Make Lessons
            Prework and Saturday Session Resources:
              name: Prework and Saturday Session Resources
            Saturday Session Resources:
              name: Saturday Session Resources
        csp3-virtual:
          title: Self Paced Introduction to Turtle Programming In App Lab
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
              description_student: ''
              description_teacher: ''
            The Need for Algorithms:
              name: The Need for Algorithms
              description_student: ''
              description_teacher: ''
            Creativity in Algorithms:
              name: Creativity in Algorithms
              description_student: ''
              description_teacher: ''
            Using Simple Commands:
              name: Using Simple Commands
              description_student: ''
              description_teacher: ''
            Creating Functions:
              name: Creating Functions
              description_student: ''
              description_teacher: ''
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
              description_student: ''
              description_teacher: ''
            APIs and Function Parameters:
              name: APIs and Function Parameters
              description_student: ''
              description_teacher: ''
            Creating functions with Parameters:
              name: Creating functions with Parameters
              description_student: ''
              description_teacher: ''
            Looping and Random Numbers:
              name: Looping and Random Numbers
              description_student: ''
              description_teacher: ''
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
              description_student: ''
              description_teacher: ''
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
              description_student: ''
              description_teacher: ''
            Make your own Digital Scene:
              name: Make your own Digital Scene
        jess-test-script:
          title: Jess's Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Our First Stage:
              name: Our First Stage
            new stage:
              name: new stage
            newer stage:
              name: newer stage
            Welcome to CSD Virtual Professional Learning:
              name: Welcome to CSD Virtual Professional Learning
            Introduction to CSD:
              name: Introduction to CSD
            Tools:
              name: Tools
            Curriculum Components:
              name: Curriculum Components
            Course Resources:
              name: Course Resources
            Debugging:
              name: Debugging
            Virtual Professional Learning Overview:
              name: Virtual Professional Learning Overview
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 8:
              name: Module 8
            Module 7:
              name: Module 7
        csd2-virtual:
          title: Self Paced Introduction to Web Lab
          description: You’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
          description_short: Learn to build your own web site in Web Lab.
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
          lessons:
            Exploring Web Pages:
              name: Exploring Web Pages
              description_student: ''
              description_teacher: ''
            Intro to HTML:
              name: Intro to HTML
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headings:
              name: Headings
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headings.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Digital Footprint:
              name: Digital Footprint
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: "As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r\n\r\nStudents begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r\n\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: "This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\r\n\r\n"
            Intellectual Property:
              name: Intellectual Property
              description_student: ''
              description_teacher: ''
            Images:
              name: Images
              description_student: ''
              description_teacher: ''
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Project - Planning Layout and Style:
              name: Project - Planning Layout and Style
              description_student: ''
              description_teacher: ''
            Project - Building a Webpage:
              name: Project - Building a Webpage
              description_student: ''
              description_teacher: ''
            Purpose of a  Websites:
              name: Purpose of a  Websites
              description_student: ''
              description_teacher: ''
            Team Problem Solving:
              name: Team Problem Solving
              description_student: ''
              description_teacher: ''
            Sources and Research:
              name: Sources and Research
              description_student: ''
              description_teacher: ''
            CSS Classes:
              name: CSS Classes
              description_student: ''
              description_teacher: ''
            Planning a Multi-page Website:
              name: Planning a Multi-page Website
              description_student: ''
              description_teacher: ''
            Linking and Navigation:
              name: Linking and Navigation
              description_student: ''
              description_teacher: ''
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
              description_student: ''
              description_teacher: ''
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
              description_student: ''
              description_teacher: ''
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            Purpose of a Websites:
              name: Purpose of a Websites
        csp5-virtual:
          title: Event-Driven Programming in App Lab
          description: This self-paced module introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This unit uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Buttons and Events:
              name: Buttons and Events
              description_student: ''
              description_teacher: ''
            Multi-screen Apps:
              name: Multi-screen Apps
              description_student: ''
              description_teacher: ''
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
              description_student: ''
              description_teacher: ''
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
              description_student: ''
              description_teacher: ''
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
              description_student: ''
              description_teacher: ''
            User Input and Strings:
              name: User Input and Strings
              description_student: ''
              description_teacher: ''
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
              description_student: ''
              description_teacher: ''
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
              description_student: ''
              description_teacher: ''
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
              description_student: ''
              description_teacher: ''
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
              description_student: ''
              description_teacher: ''
            While Loops:
              name: While Loops
              description_student: ''
              description_teacher: ''
            Loops and Simulations:
              name: Loops and Simulations
              description_student: ''
              description_teacher: ''
            Introduction to Arrays:
              name: Introduction to Arrays
              description_student: ''
              description_teacher: ''
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
              description_student: ''
              description_teacher: ''
            Processing Arrays:
              name: Processing Arrays
              description_student: ''
              description_teacher: ''
            Functions with Return Values:
              name: Functions with Return Values
              description_student: ''
              description_teacher: ''
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
              description_student: ''
              description_teacher: ''
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
              description_student: ''
              description_teacher: ''
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
              description_student: ''
              description_teacher: ''
            Intro to App Lab:
              name: Intro to App Lab
            Console.log and Multi-screen Apps:
              name: Console.log and Multi-screen Apps
            Variables:
              name: Variables
            Moving Memory Challenges:
              name: Moving Memory Challenges
            If-Statements:
              name: If-Statements
            Keep Going:
              name: Keep Going
            Keep Going!:
              name: Keep Going!
        virtual-holding-place:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            csd3_2:
              display_name: 'Chapter 2: Building Games'
          lessons:
            Example Projects:
              name: Example Projects
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
        code-break:
          title: Code Break
          description_audience: ''
          description_short: ''
          description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 13+. '
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Beginner Challenges:
              name: Beginner Challenges
            Intermediate Challenges:
              name: Intermediate Challenges
            'Episode 1: Algorithms':
              name: 'Episode 1: Algorithms'
            'Episode 2: Events':
              name: 'Episode 2: Events'
            Algorithms:
              name: Algorithms
            Events:
              name: Events
            'Episode 1: Algorithms with Hill Harper':
              name: 'Episode 1: Algorithms with Hill Harper'
            'Episode 2: Events with Ciara':
              name: 'Episode 2: Events with Ciara'
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Placeholder:
              name: Episode 2 - Placeholder
            Episode 2 - Coming Soon!:
              name: Episode 2 - Coming Soon!
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Conditionals with Sal Khan & Flo Vaughn:
              name: Conditionals with Sal Khan & Flo Vaughn
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            AI with Kat Graham & Cody Simpson:
              name: AI with Kat Graham & Cody Simpson
            AI with Kat Graham & Kate Park:
              name: AI with Kat Graham & Kate Park
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia
        code-break-staging:
          title: Code Break Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epson:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epson
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            Episode 6 - The Internet with Vint Cerf and Keegan-Michael Key:
              name: Episode 6 - The Internet with Vint Cerf and Keegan-Michael Key
            Episode 6 - The Internet with Keegan-Michael Key & Vint Cerf:
              name: Episode 6 - The Internet with Keegan-Michael Key & Vint Cerf
            Algorithms with Hill Harper:
              name: Algorithms with Hill Harper
            Prototypes with Mark Cuban & Lyndsey Scott:
              name: Prototypes with Mark Cuban & Lyndsey Scott
            Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Encryption with Ashton Kutcher & Mia Gil Epner
            Digital Information with Mike Krieger & Alice Keeler:
              name: Digital Information with Mike Krieger & Alice Keeler
            Simulations & Data with Bill Gates:
              name: Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Conditionals with Sal Khan & Flo Vaughn:
              name: Conditionals with Sal Khan & Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            AI with Kat Graham & Cody Simpson:
              name: AI with Kat Graham & Cody Simpson
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
        code-break-younger-staging:
          title: Code Break Younger Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
        code-break-younger:
          title: Code Break for Younger Students
          description_audience: ''
          description_short: ''
          description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 6-12. '
          lesson_groups: {}
          lessons:
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Coming Soon!:
              name: Episode 2 - Coming Soon!
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            AI with Kat Graham & Cody Simpson:
              name: AI with Kat Graham & Cody Simpson
            AI with Kat Graham & Kate Park:
              name: AI with Kat Graham & Kate Park
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia
        no-lg:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
        csp5-virtual-part2:
          title: Self Paced Introduction to App Lab
          description_audience: ''
          description_short: Learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description: This unit introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This uni uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
          lessons:
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            While Loops:
              name: While Loops
            Loops and Simulations:
              name: Loops and Simulations
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Processing Arrays:
              name: Processing Arrays
            Functions with Return Values:
              name: Functions with Return Values
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
        gamelabprojects:
          lessons: {}
          lesson_groups: {}
        k5-onlinepd-2020:
          title: Teaching Computer Science Fundamentals
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              name: Welcome to "Teaching Computer Science Fundamentals"
              description_student: ''
              description_teacher: ''
            Understanding the Computer Science Fundamentals Courses:
              name: Understanding the Computer Science Fundamentals Courses
              description_student: ''
              description_teacher: ''
            Sequencing:
              name: Sequencing
              description_student: ''
              description_teacher: ''
            Loops:
              name: Loops
              description_student: ''
              description_teacher: ''
            Events:
              name: Events
              description_student: ''
              description_teacher: ''
            Conditionals:
              name: Conditionals
              description_student: ''
              description_teacher: ''
            End of Course projects:
              name: End of Course projects
              description_student: ''
              description_teacher: ''
            Functions:
              name: Functions
              description_student: ''
              description_teacher: ''
            Variables:
              name: Variables
              description_student: ''
              description_teacher: ''
            For Loops:
              name: For Loops
              description_student: ''
              description_teacher: ''
            Sprite Lab:
              name: Sprite Lab
              description_student: ''
              description_teacher: ''
            Reviewing your reflections:
              name: Reviewing your reflections
              description_student: ''
              description_teacher: ''
            Next steps:
              name: Next steps
              description_student: ''
              description_teacher: ''
          lesson_groups:
            k5_getting_started_1:
              display_name: Getting Started
            k5_basic_concepts_1:
              display_name: Basic Coding Concepts and Teaching Practices
            k5_diving_deeper_1:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps_1:
              display_name: Next Steps
        dani-test-2020:
          lessons:
            new lesson:
              name: new lesson
          lesson_groups:
            lesson group:
              display_name: display name
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dani-june-2020-test:
          lessons:
            new lesson:
              name: new lesson
            lesson 2:
              name: lesson 2
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Buttons and Events:
              name: Buttons and Events
          lesson_groups:
            lesson group:
              display_name: display name
            lg_1:
              display_name: DISPLAYNAME
            cspSurvey:
              display_name: Survey
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            cs_lg:
              display_name: LG GOOD
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csd3-virtual:
          title: Self Paced Introduction to Game Lab
          description: You’ll program animations, interactive art, and games in Game Lab. Start off with simple shapes and build up to more sophisticated sprite-based animations and games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: "**Question of the Day: How is computer science used in entertainment?**\r\n\r\nThe class is asked to consider the \"problems\" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression."
              description_teacher: "**Question of the Day: How is computer science used in entertainment?**\r\n\r\nStudents are asked to consider the \"problems\" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression."
            Plotting Shapes:
              name: Plotting Shapes
              description_student: "**Question of the Day: How can we clearly communicate how to draw something on a screen?**\r\n\r\nThis lesson explores the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab.The class uses a Game Lab tool  to interactively place shapes on Game Lab's 400 by 400 grid. Partners then take turns instructing each other how to draw a hidden image using this tool, accounting for many of the challenges of programming in Game Lab."
              description_teacher: "**Question of the Day: How can we clearly communicate how to draw something on a screen?**\r\n\r\nStudents explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion."
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: "**Question of the Day: How can we communicate to a computer how to draw shapes on the screen?**\r\n\r\nThe class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. The lesson covers the basics of sequencing and debugging, as well as a few simple commands.  At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson."
              description_teacher: "**Question of the Day: How can we communicate to a computer how to draw shapes on the screen?**\r\n\r\nStudents are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson."
            Shapes and Parameters:
              name: Shapes and Parameters
              description_student: "**Question of the Day:  How can we use parameters to give the computer more specific instructions?**\r\n\r\nIn this lesson the class continues to develop a familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or \"parameters\". The class learns to draw with versions of `ellipse()` and `rect()` that include width and height parameters and to use the `background()` block."
              description_teacher: "**Question of the Day:  How can we use parameters to give the computer more specific instructions?**\r\n\r\nIn this lesson students continue to develop their familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or \"parameters\". Students learn to draw with versions of `ellipse()` and `rect()` that include width and height parameters. They also learn to use the `background()` block."
            Variables:
              name: Variables
              description_student: "**Question of the Day:  How can we use variables to store information in our programs?**\r\n\r\nThis lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks, then completes a level progression that reinforces the model of a variable as a way to label or name a number."
              description_teacher: |-
                **Question of the Day:  How can we use variables to store information in our programs?**

                In this lesson students learn how to use variables to label a number. Students begin the lesson with a very basic description of the purpose of a variable within the context of the storage component of the input-output-storage-processing model. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number.
            Random Numbers:
              name: Random Numbers
              description_student: "**Question of the Day: How can we make our programs behave differently each time they are run?** \r\n\r\nThe class is introduced to the `randomNumber()` block and how it can be used to create new behaviors in their programs.  They then learn how to update variables during a program and use those skills to draw randomized images."
              description_teacher: "**Question of the Day: How can we make our programs behave differently each time they are run?** \r\n\r\nStudents are introduced to the `randomNumber()` block and how it can be used to create new behaviors in their programs.  They then learn how to update variables during a program.  Combining all of these skills students draw randomized images."
            Sprites:
              name: Sprites
              description_student: ''
              description_teacher: ''
            Sprite Properties:
              name: Sprite Properties
              description_student: "**Question of the Day: How can we use sprite properties to change their appearance on the screen?**\r\n\r\nThe class extends its understanding of sprites by interacting with sprite properties.  The lesson starts with a review of what a sprite is, then moves on to Game Lab for more practice with sprites, using their properties to change their appearance.  The class then reflects on the connections between properties and variables."
              description_teacher: "**Question of the Day: How can we use sprite properties to change their appearance on the screen?**\r\n\r\nStudents extend their understanding of sprites by interacting with sprite properties.  Students start with a review of what a sprite is, then move on to Game Lab to practice more with sprites, using their properties to change their appearance.  They then reflect on the connections between properties and variables."
            Text:
              name: Text
              description_student: "**Question of the Day: How can we use text to improve our scenes and animations?**\r\n\r\nThis lesson introduces Game Lab's text commands, giving the class more practice using the coordinate plane and parameters.  At the beginning of the lesson, the class is asked to caption a cartoon created in Game Lab.  They then move onto Code Studio where they practice placing text on the screen and controlling other text properties, such as size."
              description_teacher: "**Question of the Day: How can we use text to improve our scenes and animations?**\r\n\r\nThis lesson introduces Game Lab's text commands, giving students more practice using the coordinate plane and parameters.  At the beginning of the lesson, students are asked to caption a cartoon created in Game Lab.  They then move onto Code Studio where they practice placing text on the screen and controlling other text properties, such as size.  Students who complete the assessment early may go on to learn more challenging blocks related to text properties. "
            'Mini-Project: Captioned Scenes':
              name: 'Mini-Project: Captioned Scenes'
              description_student: "**Question of the Day: How can we use Game Lab to express our creativity?**\r\n\r\nAfter a quick review of the code learned so far, the class is introduced to the first creative project of the unit.  Using the problem solving process as a model, students define the scene that they want to create, prepare by thinking of the different code they will need, try their plan in Game Lab, then reflect on what they have created.  In the end, they also have a chance to share their creations with their peers."
              description_teacher: "**Question of the Day: How can we use Game Lab to express our creativity?**\r\n\r\nAfter a quick review of the code they have learned so far, students are introduced to their first creative project of the unit.  Using the problem solving process as a model, students define the scene that they want to create, prepare by thinking of the different code they will need, try their plan in Game Lab, then reflect on what they have created.  In the end, they also have a chance to share their creations with their peers."
            The Draw Loop:
              name: The Draw Loop
              description_student: "**Question of the Day: How can we animate our images in Game Lab?**\r\n\r\nThis lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. "
              description_teacher: "**Question of the Day: How can we animate our images in Game Lab?**\r\n\r\nIn this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites."
            Sprite Movement:
              name: Sprite Movement
              description_student: "**Question of the Day: How can we control sprite movement in Game Lab?**\r\n\r\nIn this lesson, the class learns how to control sprite movement using a construct called the counter pattern, which incrementally changes a sprite's properties.  After brainstorming different ways that they could animate sprites by controlling their properties, the class explores the counter pattern in Code Studio, using the counter pattern to create various types of sprite movements."
              description_teacher: "**Question of the Day: How can we control sprite movement in Game Lab?**\r\n\r\nIn this lesson, students learn how to control sprite movement using a construct called the counter pattern, which incrementally changes a sprite's properties.  Students first brainstorm different ways that they could animate sprites by controlling their properties, then explore the counter pattern in Code Studio.  After examining working code, students try using the counter pattern to create various types of sprite movements."
            'Mini-Project: Animation':
              name: 'Mini-Project: Animation'
              description_student: "**Question of the Day: How can we combine different programming patterns to make a complete animation?**\r\n\r\nIn this lesson, the class is asked to combine different methods from previous lessons to create an animated scene.  They first review the types of movement and animation that they have learned, and brainstorm what types of scenes might need that movement.  They then begin to plan out their own animated scenes, which they create in Game Lab."
              description_teacher: "**Question of the Day: How can we combine different programming patterns to make a complete animation?**\r\n\r\nIn this lesson, students are asked to combine different methods that they have learned to create an animated scene.  Students first review the types of movement and animation that they have learned, and brainstorm what types of scenes might need that movement.  They then begin to plan out their own animated scenes, which they create in Game Lab."
            Conditionals:
              name: Conditionals
              description_student: "**Question of the Day:  How can programs react to changes as they are running?**\r\n\r\nThis lesson introduces booleans and conditionals, which allow a program to run differently depending on whether a condition is true.  The class starts by playing a short game in which they respond according to whether particular conditions are met.  They then move to Code Studio where they learn how the computer evaluates Boolean expressions, and how they can be used to structure a program."
              description_teacher: "**Question of the Day:  How can programs react to changes as they are running?**\r\n\r\nThis lesson introduces booleans and conditionals, which allow a program to run differently depending on whether a condition is true.  Students start by playing a short game in which they respond according to whether particular conditions are met.  They then move to Code Studio where they learn how the computer evaluates Boolean expressions, and how they can be used to structure a program."
            Keyboard Input:
              name: Keyboard Input
              description_student: "**Question of the Day: How can our programs react to user input?**\r\n\r\nFollowing the introduction to booleans and _if_ statements in the previous lesson, the class is introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson the class will have written programs that take keyboard input from the user to control sprites on the screen."
              description_teacher: "**Question of the Day: How can our programs react to user input?**\r\n\r\nFollowing the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen."
            Mouse Input:
              name: Mouse Input
              description_student: "**Question of the Day: What are more ways that the computer can react to user input?**\r\n\r\nThe class continues to explore ways to use conditional statements to take user input. In addition to the keyboard commands learned yesterday, they will learn about several ways to take mouse input.  They will also expand their understanding of conditional to include `else`, which allows for the computer to run a certain section of code when a condition is true, and a different section of code when it is not."
              description_teacher: |-
                **Question of the Day: What are more ways that the computer can react to user input?**

                In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the keyboard commands learned yesterday, students will learn about several ways to take mouse input.  They will also expand their understanding of conditionals to include `else`, which allows for the computer to run a certain section of code when a condition is true, and a different section of code when it is not.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: "**Question of the Day:  What skills and practices are important when creating an interactive program?**\r\n\r\nIn this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point."
              description_teacher: "**Question of the Day:  What skills and practices are important when creating an interactive program?**\r\n\r\nIn this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point."
            Velocity:
              name: Velocity
              description_student: "**Question of the Day:  How can programming languages hide complicated patterns so that it is easier to program?**\r\n\r\nAfter a brief review of how the counter pattern is used to move sprites, the class is introduced to the idea of hiding those patterns in a single block, in order to help manage the complexity of programs.  They then head to Code Studio to try out new blocks that set a sprite's velocity directly, and look at various ways that they are able to code more complex behaviors in their sprites.  "
              description_teacher: "**Question of the Day:  How can programming languages hide complicated patterns so that it is easier to program?**\r\n\r\nAfter a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the idea of hiding those patterns in a single block.  Students then head to Code Studio to try out new blocks that set a sprite's velocity directly, and look at various ways that they are able to code more complex behaviors in their sprites.  "
            Collision Detection:
              name: Collision Detection
              description_student: "**Question of the Day: How can programming help make complicated problems more simple?**\r\n\r\nThe class learns about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide and practice using the block to model various interactions."
              description_teacher: "**Question of the Day: How can programming help make complicated problems more simple?**\r\n\r\nStudents learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide and practice using the block to model various interactions."
            'Mini-Project: Side Scroller':
              name: 'Mini-Project: Side Scroller'
              description_student: "**Question of the Day:  How can the new types of sprite movement and collision detection be used to create a game?**\r\n\r\nThe class uses what it has learned about collision detection and setting velocity to create simple side scroller games.  After looking at a sample side scroller game, students brainstorm what sort of side scroller they would like, then use a structured process to program the game in Code Studio."
              description_teacher: "**Question of the Day:  How can the new types of sprite movement and collision detection be used to create a game?**\r\n\r\nStudents use what they have learned about collision detection and setting velocity to create a simple side scroller game.  After looking at a sample side scroller game, students brainstorm what sort of side scroller they would like, then use a structured process to program the game in Code Studio."
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: "**Question of the Day: How can previous blocks be combined in new patterns to make interesting movements?**\r\n\r\nThe class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. After reviewing the two concepts, they explore various scenarios in which velocity is used in the counter pattern, and observe the different types of movement that result.  In particular, the class learns how to simulate gravity.  They then reflect on how they were able to get new behaviors by combining blocks and patterns that they already knew."
              description_teacher: "**Question of the Day: How can previous blocks be combined in new patterns to make interesting movements?**\r\n\r\nStudents learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. After reviewing the two concepts, they explore various scenarios in which velocity is used in the counter pattern, and observe the different types of movement that result.  In particular, students learn how to simulate gravity.  They then reflect on how they were able to get new behaviors by combining blocks and patterns that they already knew."
            Collisions:
              name: Collisions
              description_student: "**Question of the Day: How can programmers build on abstractions to create further abstractions?**\r\n\r\nIn this lesson, the class programs their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`)."
              description_teacher: "**Question of the Day: How can programmers build on abstractions to create further abstractions?**\r\n\r\nIn this lessson, students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`)."
            'Mini-Project: Flyer Game':
              name: 'Mini-Project: Flyer Game'
              description_student: "**Question of the Day:  How can the new types collisions and modeling movement be used to create a game?**\r\n\r\nThe class uses what it has learned about simulating gravity and the different types of collisions  to create simple flyer games.  After looking at a sample flyer game, students brainstorm what sort of flyer they would like, then use a structured process to program the game in Code Studio."
              description_teacher: "**Question of the Day:  How can the new types of collisions and modeling movement be used to create a game?**\r\n\r\nStudents use what they have learned about simulating gravity and the different types of collisions to create simple flyer games.  After looking at a sample flyer game, students brainstorm what sort of flyer games they would like, then use a structured process to program the game in Code Studio."
            Functions:
              name: Functions
              description_student: "**Question of the Day: How can programmers use functions to create their own abstractions?**\r\n\r\nThis lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab. "
              description_teacher: "**Question of the Day: How can programmers use functions to create their own abstractions?**\r\n\r\nStudents learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. Students first think about what sorts of new blocks they would like in Game Lab, and what code those blocks would contain inside. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function."
            The Game Design Process:
              name: The Game Design Process
              description_student: "**Question of the Day:  How does having a plan help to make a large project easier?**\r\n\r\n\r\nThis lesson introduces the process the class will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. The class walks through this process in a series of levels.   At the end of the lesson they have an opportunity to make improvements to the game to make it their own."
              description_teacher: "**Question of the Day:  How does having a plan help to make a large project easier?**\r\n\r\nThis lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels.  At the end of the lesson students have an opportunity to make improvements to the game to make it their own."
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: "**Question of the Day:  How can the problem solving process help programmers to manage large projects?**\r\n\r\n\r\nIn this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes."
              description_teacher: "**Question of the Day:  How can the problem solving process help programmers to manage large projects?**\r\n\r\nIn this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes."
            Project - Design a Game:
              name: Project - Design a Game
              description_student: "**Question of the Day: How can the five CS practices (problem solving, persistence, communication, collaboration, and creativity) help programmers to complete large projects?**\r\n\r\nThe class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class members share out their completed games."
              description_teacher: "**Question of the Day: How can the five CS practices (problem solving, persistence, communication, collaboration, and creativity) help programmers to complete large projects?**\r\n\r\nStudents will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods."
            Post-Project Test:
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
          lesson_groups:
            csd3_1:
              display_name: Content
            csd3_2:
              display_name: Content
            cspSurvey:
              display_name: Content
        ui-test-script-in-course-2017:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-script-in-course-2019:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-versioned-script-2017:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-versioned-script-2019:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        kaitie-test-script:
          lessons:
            new lesson:
              name: new lesson
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 7:
              name: Module 7
            Module 8:
              name: Module 8
          lesson_groups:
            lesson group:
              display_name: display name
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        vpl-csd-2020:
          lessons:
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 7:
              name: Module 7
            Module 8:
              name: Module 8
          lesson_groups: {}
          title: CS Discoveries Virtual Professional Learning 2020 - 21
          description_audience: ''
          description_short: ''
          description: ''
        vpl-csp-2020:
          lessons:
            Module 1:
              name: 'Module 1: Introducing Unit 4 and new pedagogy for teaching programming'
            Module 2:
              name: 'Module 2: Variables in Unit 4 and the role of collaboration'
            Module 3:
              name: 'Module 3: Unit 5, using lists in apps, and recognizing CS skills in the classroom'
            Module 4:
              name: 'Module 4: Unit 5 and using datasets in apps'
            Module 5:
              name: 'Module 5: Unit 7 and understanding functions with parameters and return'
            Module 6:
              name: 'Module 6: Introduction to the Create Performance Task'
            Module 7:
              name: 'Module 7: Tools and structure in Unit 9 - Data'
            Module 8:
              name: 'Module 8: Building community and preparing students for the AP Exam'
          lesson_groups: {}
          title: CS Principles Virtual Professional Learning
          description_audience: ''
          description_short: ''
          description: ''
          name: vpl-csp-2020
        curriculum-sandbox-levels:
          lessons:
            Course A:
              name: Course A
            Course B:
              name: Course B
            Course E/F:
              name: Course E/F
            CS Discoveries:
              name: CS Discoveries
          lesson_groups:
            lesson group:
              display_name: display name
          title: Curriculum Sandbox Levels
          description_audience: Internal
          description_short: 'Levels that are linked directly in lesson plans but do not appear in other scripts. '
          description: ''
        virustest:
          lessons:
            Virus Simulation for Code Bytes:
              name: Virus Simulation for Code Bytes
          lesson_groups:
            csf_data:
              display_name: Virus Simulation for Code Bytes
          title: Simulating an Outbreak
          description_audience: ''
          description_short: 'Use Sprite Lab to create a simulation out of a virus outbreak. '
          description: ''
        ml-playground:
          lessons:
            Variables:
              name: Example I Stole From CSD
            ML Playground:
              name: ML Playground
            ML Playground 2:
              name: ML Playground 2
            USE Projects:
              name: USE Projects
            MODIFY Projects:
              name: MODIFY Projects
            CREATE Projects:
              name: CREATE Projects
            USE Programs:
              name: USE Programs (AppLab Only)
            MODIFY Programs:
              name: MODIFY Programs (AppLab -> Widget -> AppLab)
            Does Code.org Like Your Dog?:
              name: Does Code.org Like Your Dog?
            dog:
              name: Does Code.org Like Your Dog?
            AI for Oceans:
              name: AI for Oceans
            oceans:
              name: Machine Learning with AI for Oceans
            intro:
              name: Introduction to Machine Learning
            society:
              name: Machine Learning & Societal Impact
            decisions:
              name: Decision Making with Models
            visualizing:
              name: Visualizing Data
            knn-train:
              name: Train a model with continuous labels (KNN)
            knn-use:
              name: Act out model with continuous labels (KNN)
            knn-app:
              name: Make an app with continuous labels (KNN)
            svm-train:
              name: Train a model with categorical labels (SVM)
            svm-use:
              name: Act out model with categorical labels (SVM)
            svm-app:
              name: Make an app with categorical labels (SVM)
            model:
              name: Model Card
            data:
              name: Explore datasets & choose one for your app
            project-app:
              name: 'Mini-Project: Make an ML App'
            miseducation:
              name: Mis-education of the Machine
            ethics:
              name: Using ML Ethically
            ethics-hoc2020:
              name: AI & Ethics Hour of Code 2020
            hypothesis:
              name: Creating a Data Hypothesis
            goldilocks:
              name: Goldilocks Principles
            collection:
              name: Collecting Your Own Data
            project:
              name: Final project
            KNN:
              name: Feature Selection with Continuous Labels
            SVM:
              name: Data Investigations with Categorical Labels
            App:
              name: Using Models in the Real-World
            Ethics:
              name: Ethics
            Project:
              name: Final project
            appendix:
              name: Appendix
          lesson_groups: {}
          title: ML/AI Unit - CSD
          description_audience: ''
          description_short: ML/AI Unit
          description: Brainstorm / Playground area for ML/AI Unit Development for CSD. For future questions about this, ask Dan Schneider.
          name: ml-playground
        outbreak:
          lessons:
            Virus Simulation for Code Bytes:
              name: Coding a Simulation
          lesson_groups:
            outbreak:
              display_name: Outbreak Simulation
          title: Outbreak Simulator
          description_audience: ''
          description_short: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          name: outbreak
        apps-for-good:
          lessons:
            Build an App for Good:
              name: Build an App for Good
          lesson_groups: {}
          title: Apps for Good
          description_audience: ''
          description_short: ''
          description: ''
        2021drafting:
          lessons:
            Sprite Lab:
              name: Sprite Lab Blocks
            Course F Introduction:
              name: Introducing Sprite Lab
            Learning Sprites with Sprite Lab:
              name: Programming with Sprite Lab
            lesson-1:
              name: Envelope Variables
            lesson-2:
              name: Storing and Retrieving Text
            lesson-3:
              name: Create a Chat-Bot
            lesson-4:
              name: Counting with Variables
            lesson-5:
              name: Groups of Sprites
            lesson-6:
              name: Create a Collector Game
            Virus Simulation for Code Bytes:
              name: Coding a Simulation
          lesson_groups:
            Toolbox Levels:
              display_name: Toolbox Levels
            introduction:
              display_name: Introduction
              description: Explore projects created with Sprite Lab. Learn the basics of coding with sprites and events!
            lessonGroup-3:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
            outbreak:
              display_name: Outbreak Simulation
          title: Planning script for CI and CSF 2021
          description_audience: Internal
          description_short: Internal
          name: 2021drafting
          description: ''
        csd1-2021:
          title: CSD Unit 1 - Problem Solving and Computing ('20-'21)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lessons:
            CS Discoveries Pre-survey:
              key: CS Discoveries Pre-survey
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              key: Intro to Problem Solving
              name: Intro to Problem Solving
            The Problem Solving Process:
              key: The Problem Solving Process
              name: The Problem Solving Process
            Exploring Problem Solving:
              key: Exploring Problem Solving
              name: Exploring Problem Solving
            What is a Computer?:
              key: What is a Computer?
              name: What is a Computer?
            Input and Output:
              key: Input and Output
              name: Input and Output
            Processing:
              key: Processing
              name: Processing
            Storage:
              key: Storage
              name: Storage
            Project - Propose an App:
              key: Project - Propose an App
              name: Project - Propose an App
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              key: Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)
              name: Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              key: Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)
              name: Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              key: Intro to Problem Solving - Paper Tower (Alternate Lesson 1)
              name: Intro to Problem Solving - Paper Tower (Alternate Lesson 1)
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              key: Exploring Problem Solving - Animals Theme (Alternate Lesson 3)
              name: Exploring Problem Solving   Animals Theme (Alternate Lesson 3)
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              key: Exploring Problem Solving - Games Theme (Alternate Lesson 3)
              name: Exploring Problem Solving   Games Theme (Alternate Lesson 3)
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
              big_questions: "* What strategies and processes can I use to become a more effective problem solver?"
              description: This chapter guides students to develop and adopt a more formal structured problem solving process by reflecting on problems they have problems they have encountered, both in the classroom and everyday life. By working through a diverse set of problems, such as logic puzzles, engineering challenges, and planning a trip, students learn to identify different classes of problems, decompose large problems, and develop their personal problem solving skills.
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
              big_questions: |-
                * How do computers help people to solve problems?
                * How do people and computers approach problems differently?
                * What does a computer need from people in order to solve problems effectively?
              description: This chapter presents computers as machines that solve information problems. Students begin by building a common definition for a computer that focuses on functionality instead of specific hardware. They then explore the ways that computers approach problems. For their final project, students propose an app that could be used to solve a problem of their choosing.
            csd1_3:
              display_name: Alternate Lessons
              description: 'This chapter provides alternate lessons for this unit.  '
          name: csd1-2021
        csd2-2021:
          title: CSD Unit 2 - Web Development ('20-'21)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lessons:
            Exploring Web Pages:
              key: Exploring Web Pages
              name: Exploring Web Pages
            Intro to HTML:
              key: Intro to HTML
              name: Intro to HTML
            Headings:
              key: Headings
              name: Headings
            'Mini-Project: HTML Web Page':
              key: 'Mini-Project: HTML Web Page'
              name: 'Mini-Project: HTML Web Page'
            Digital Footprint:
              key: Digital Footprint
              name: Digital Footprint
            Styling Text with CSS:
              key: Styling Text with CSS
              name: Styling Text with CSS
            'Mini-Project: Your Personal Style':
              key: 'Mini-Project: Your Personal Style'
              name: 'Mini-Project: Your Personal Style'
            Intellectual Property:
              key: Intellectual Property
              name: Intellectual Property
            Using Images:
              key: Using Images
              name: Using Images
            'Websites for Expression ':
              key: 'Websites for Expression '
              name: Websites for Expression
            Styling Elements with CSS:
              key: Styling Elements with CSS
              name: Styling Elements with CSS
            Your Web Page - Prepare:
              key: Your Web Page - Prepare
              name: Your Web Page - Prepare
            Project - Personal Web Page:
              key: Project - Personal Web Page
              name: Project - Personal Web Page
            Websites for a Purpose:
              key: Websites for a Purpose
              name: Websites for a Purpose
            Team Problem Solving:
              key: Team Problem Solving
              name: Team Problem Solving
            Sources and Research:
              key: Sources and Research
              name: Sources and Research
            CSS Classes:
              key: CSS Classes
              name: CSS Classes
            Planning a Multi-page Website:
              key: Planning a Multi-page Website
              name: Planning a Multi-Page Site
            Linking Pages:
              key: Linking Pages
              name: Linking Pages
            Project - Website for a Purpose:
              key: Project - Website for a Purpose
              name: Project - Website for a Purpose
            Peer Review and Final Touches:
              key: Peer Review and Final Touches
              name: Peer Review and Final Touches
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
          lesson_groups:
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
              big_questions: |-
                * Why do people create websites?
                * How can text communicate content, structure, and style on a web page?
                * How do I safely and appropriately make use of the content published on the Internet?
                * What strategies can I use when coding to find and fix issues?
              description: Students use computing as a form of self expression as they design and develop basic web pages.   Focusing on the tags, keywords, and syntax used to communicate instructions to the computer, students use HTML to structure the content of a web page. They also explore the privacy and intellectual property implications of publishing their work online.
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
              big_questions: |-
                * How can websites be used to address problems in the world?
                * What strategies can teams use to work better together?
                * How do I know what information can be trusted online?
              description: Students expand their ideas of websites beyond personal expression and begin to see them as a way to solve problems.  Students build on their collaborative skills and work in teams to create multi-page websites that solve a problem.
            cspSurvey:
              display_name: Survey
          name: csd2-2021
        csd3-2021:
          title: CSD Unit 3 - Interactive Animations and Games ('21-'22)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lessons:
            Programming for Entertainment:
              key: Programming for Entertainment
              name: Programming for Entertainment
            Plotting Shapes:
              key: Plotting Shapes
              name: Plotting Shapes
            Drawing in Game Lab:
              key: Drawing in Game Lab
              name: Drawing in Game Lab
            Shapes and Parameters:
              key: Shapes and Parameters
              name: Shapes and Parameters
            Variables:
              key: Variables
              name: Variables
            Random Numbers:
              key: Random Numbers
              name: Random Numbers
            Sprites:
              key: Sprites
              name: Sprites
            Sprite Properties:
              key: Sprite Properties
              name: Sprite Properties
            Text:
              key: Text
              name: Text
            'Mini-Project: Captioned Scenes':
              key: 'Mini-Project: Captioned Scenes'
              name: Mini-Project - Captioned Scenes
            The Draw Loop:
              key: The Draw Loop
              name: The Draw Loop
            Sprite Movement:
              key: Sprite Movement
              name: Sprite Movement
            'Mini-Project: Animation':
              key: 'Mini-Project: Animation'
              name: Mini-Project - Animation
            Conditionals:
              key: Conditionals
              name: Conditionals
            Keyboard Input:
              key: Keyboard Input
              name: Keyboard Input
            Mouse Input:
              key: Mouse Input
              name: Mouse Input
            Project - Interactive Card:
              key: Project - Interactive Card
              name: Project - Interactive Card
            Velocity:
              key: Velocity
              name: Velocity
            Collision Detection:
              key: Collision Detection
              name: Collision Detection
            'Mini-Project: Side Scroller':
              key: 'Mini-Project: Side Scroller'
              name: Mini-Project - Side Scroller
            Complex Sprite Movement:
              key: Complex Sprite Movement
              name: Complex Sprite Movement
            Collisions:
              key: Collisions
              name: Collisions
            'Mini-Project: Flyer Game':
              key: 'Mini-Project: Flyer Game'
              name: Mini-Project - Flyer Game
            Functions:
              key: Functions
              name: Functions
            The Game Design Process:
              key: The Game Design Process
              name: The Game Design Process
            Using the Game Design Process:
              key: Using the Game Design Process
              name: Using the Game Design Process
            Project - Design a Game:
              key: Project - Design a Game
              name: Project - Design a Game
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
              big_questions: |
                * What is a computer program?
                * What are the core features of most programming languages?
                * How does programming enable creativity and individual expression?
                * What practices and strategies will help me as I write programs?
              description: Students build up toward programming interactive animations in the Game Lab environment.  They begin with simple shapes and sprite objects, then use loops to create flipbook style animations.  Next, they learn to use booleans and conditionals to respond to user input.  At the end of the chapter, students design and create an interactive animation that they can share with the world.
            csd3_2:
              display_name: 'Chapter 2: Building Games'
              big_questions: |-
                * How do software developers manage complexity and scale?
                * How can programs be organized so that common problems only need to be solved once?
                * How can I build on previous solutions to create even more complex behavior?
              description: In this chapter students combine the constructs that they learned in the first chapter to program more complex movement and collisions in their sprites.  As they create more complex programs, they begin to use functions to organize their code.  In the end, students use a design process to create an original game.
            cspSurvey:
              display_name: Survey
          name: csd3-2021
        csd4-2021:
          title: CSD Unit 4 - The Design Process ('21-'22)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lessons:
            Analysis of Design:
              key: Analysis of Design
              name: Analysis of Design
            Understanding Your User:
              key: Understanding Your User
              name: Understanding Your User
            User-Centered Design Micro Activity:
              key: User-Centered Design Micro Activity
              name: User-Centered Design Micro Activity
            User Interfaces:
              key: User Interfaces
              name: User Interfaces
            Feedback and Testing:
              key: Feedback and Testing
              name: Feedback and Testing
            Identifying User Needs:
              key: Identifying User Needs
              name: Identifying User Needs
            Project - Paper Prototype:
              key: Project - Paper Prototype
              name: Project - Paper Prototype
            Designing Apps for Good:
              key: Designing Apps for Good
              name: Designing Apps for Good
            Market Research:
              key: Market Research
              name: Market Research
            Paper Prototypes:
              key: Paper Prototypes
              name: Build a Paper Prototype
            Prototype Testing:
              key: Prototype Testing
              name: Prototype Testing
            Digital Design:
              key: Digital Design
              name: Design Mode in App Lab
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin work on an interactive digital version based on the paper prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital versions of a paper prototype. From there, each group member builds out at least one page of their app in App Lab, to be later combined into a single app.
            Linking Screens:
              key: Linking Screens
              name: Linking Prototype Screens
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they can then link together using code. Students learn basic event driven programming by building up the model app that they started in the previous lesson. In addition to the screen that students designed yesterday, they'll learn how to create additional screens and even import screens made by others.
            Testing the App:
              key: Testing the App
              name: Testing the App
            Improving and Iterating:
              key: Improving and Iterating
              name: Improving and Iterating
            Project - App Presentation:
              key: Project - App Presentation
              name: Project - App Presentation
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            User-Centered Design 1:
              name: User Centered Design   Define and Prepare
            User-Centered Design 2:
              name: User Centered Design   Try and Reflect
            Exploring UI Elements:
              name: Exploring UI Elements
            Build a Digital Prototype:
              name: Build a Digital Prototype
            Events In AppLab:
              name: Events in AppLab
            Bugs and Features:
              name: Bugs and Features
            Updating Your Prototype:
              name: Updating Your Prototype
            Build a Paper Prototype:
              name: Build a Paper Prototype
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
              big_questions: |-
                * How do designers identify the needs of their user?
                * How can we ensure that a user's needs are met by our designs?
                * What processes will best allow us to efficiently create, test, and iterate upon our designs?
              description: This chapter introduces the design process as a specific version of the problem solving process in which empathy for a user's needs is consistently integrated. Students learn strategies for identifying user needs and assessing how well different designs address them. In particular they learn how to develop a paper prototype, how to gather and respond to feedback about a prototype, and consider ways different user interfaces do or do not affect the usability of their apps.
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
              big_questions: |-
                * How do teams effectively work together to develop software?
                * What roles beyond programming are necessary to design and develop software?
                * How do designers incorporate feedback into multiple iterations of a product?
              description: This chapter is focused on a long running group project that allows students to apply all they've learned about User-Centered Design to develop an app prototype.  Working in teams, students identify a social issue that they care about and design and prototype an app to address that issue.  This is an opportunity for students to explore other roles in software development, such as product management, marketing, design, and testing.
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd4-2021
        csd5-2021:
          title: CSD Unit 5 - Data and Society ('20-'21)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lessons:
            Representation Matters:
              key: Representation Matters
              name: Representation Matters
            Patterns and Representation:
              key: Patterns and Representation
              name: Patterns and Representation
            ASCII and Binary Representation:
              key: ASCII and Binary Representation
              name: ASCII and Binary Representation
            Representing Images:
              key: Representing Images
              name: Representing Images
            Representing Numbers:
              key: Representing Numbers
              name: Representing Numbers
            Keeping Data Secret:
              key: Keeping Data Secret
              name: Keeping Data Secret
            Combining Representations:
              key: Combining Representations
              name: Combining Representations
            Project - Create a Representation:
              key: Project - Create a Representation
              name: Create a Representation
            Problem Solving and Data:
              key: Problem Solving and Data
              name: Problem Solving and Data
            Problem Solving with Big Data:
              key: Problem Solving with Big Data
              name: Problem Solving with Big Data
            Structuring Data:
              key: Structuring Data
              name: Structuring Data
            Making Decisions with Data:
              key: Making Decisions with Data
              name: Making Decisions with Data
            Interpreting Data:
              key: Interpreting Data
              name: Interpreting Data
            Automating Data Decisions:
              key: Automating Data Decisions
              name: Automating Data Decisions
            Project - Make a Recommendation:
              key: Project - Make a Recommendation
              name: Project - Make a Recommendation
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
            Data and Machine Learning:
              name: Data and Machine Learning
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
              big_questions: |
                * Why is representation important in problem solving?
                * What features does a representation system need to be useful?
                * What is necessary to create usable binary representation systems?
                * How can we combine systems together to get more complex information?
              description: This chapter focuses on data representation and its role in solving information problems.  Students learn what a representation system needs to be useful, and how computers are able to represent different types of information using binary systems.  For the chapter project, students represent their perfect day in a binary punch card and trade with classmates to decipher.
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
              big_questions: |-
                * How does data help us to solve problems?
                * How do computers and humans use data differently?
                * What parts of the data problem solving process can be automated?
                * What kinds of problems do computers use data to solve in the real world?
              description: Students explore how data can be used to answer interesting questions and solve problems.  Using a modified version of the general Problem Solving Process, students look at how computers and humans use data differently and the pros and cons of automating problem solving.  After learning ways that computers use data in the real world, students choose their own problem and use data to address it.
            cspSurvey:
              display_name: Survey
          name: csd5-2021
        csd6-2021:
          title: CSD Unit 6 - Physical Computing ('20-'21)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lessons:
            Innovations in Computing:
              key: Innovations in Computing
              name: Innovations in Computing
            Designing Screens with Code:
              key: Designing Screens with Code
              name: Designing Screens with Code
            The Circuit Playground:
              key: The Circuit Playground
              name: The Circuit Playground
            Input Unplugged:
              key: Input Unplugged
              name: Input Unplugged
            Board Events:
              key: Board Events
              name: Board Events
            Getting Properties:
              key: Getting Properties
              name: Getting Properties
            Analog Input:
              key: Analog Input
              name: Analog Input
            The Program Design Process:
              key: The Program Design Process
              name: The Program Design Process
            'Project: Make a Game':
              key: 'Project: Make a Game'
              name: Project - Make a Game
            Arrays and Color LEDs:
              key: Arrays and Color LEDs
              name: Arrays and Color LEDs
            Making Music:
              key: Making Music
              name: Making Music
            Arrays and For Loops:
              key: Arrays and For Loops
              name: Arrays and For Loops
            Accelerometer:
              key: Accelerometer
              name: Accelerometer
            Functions with Parameters:
              key: Functions with Parameters
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              key: Circuits and Physical Prototypes
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation':
              key: 'Project: Prototype an Innovation'
              name: Project - Prototype an Innovation
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
              big_questions: |-
                * How does software interact with hardware?
                * How can computers sense and respond to their environment?
                * What kind of information can be communicated with simple hardware outputs?
              description: This unit begins with an activity that encourages students to explore a wide variety of non-traditional computing platforms, before kicking off a review of programming in App Lab, with a particular focus on better understanding the event-driven programming model that was first introduced in Unit 4. Students learn techniques to make the apps they write more flexible by modifying design elements through code instead of always relying on design mode. Using the Circuit Playground, they then explore different approaches to taking input and producing output using hardware. By the end of this chapter, students will design a develop a game that uses physical hardware for input and output.
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
              big_questions: |-
                * How do programmers work with larger amounts of similar values?
                * How can complex real-world information be represented in code?
                * How can simple hardware be used to develop innovative new products?
              description: With an understanding of how to use hardware to take input and produce output, students move to thinking about more complex programs that integrate hardware and software. Using the color LEDs as an example of a a group of like objects, students learn how to use arrays to keep track of lists of values. From there we introduce the for loop, first simply as a way to repeat a block of code, and then as a way to run code on each element of an array. By the end of this chapter students will have explored all components of their boards while learning to structure their code using arrays, loops, and parametric functions. In the final two lessons students have an opportunity to dig into building physical prototypes using their boards.
            cspSurvey:
              display_name: Survey
          name: csd6-2021
        csp1-2021:
          title: CSP Unit 1 - Digital Information ('20-'21)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description_audience: ''
          lessons:
            CS Principles Pre-survey:
              key: CS Principles Pre-survey
              name: CS Principles Pre-survey
            Welcome to CSP:
              key: Welcome to CSP
              name: Welcome to CSP
            Representing Information:
              key: Representing Information
              name: Representing Information
            Circle Square Patterns:
              key: Circle Square Patterns
              name: Circle Square Patterns
            Binary Numbers:
              key: Binary Numbers
              name: Binary Numbers
            Overflow and Rounding:
              key: Overflow and Rounding
              name: Overflow and Rounding
            Representing Text:
              key: Representing Text
              name: Representing Text
            Black and White Images:
              key: Black and White Images
              name: Black and White Images
            Color Images:
              key: Color Images
              name: Color Images
            Lossless Compression:
              key: Lossless Compression
              name: Lossless Compression
            Lossy Compression:
              key: Lossy Compression
              name: Lossy Compression
            Intellectual Property:
              key: Intellectual Property
              name: Intellectual Property
            Project - Digital Information Dilemmas Part 1:
              key: Project - Digital Information Dilemmas Part 1
              name: Project   Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              key: Project - Digital Information Dilemmas Part 2
              name: Project   Digital Information Dilemmas Part 2
            'Lesson 14: Assessment Day':
              key: 'Lesson 14: Assessment Day'
              name: Assessment Day
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
          name: csp1-2021
        csp2-2021:
          title: CSP Unit 2 - The Internet ('20-'21)
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          description_short: Build the internet from the ground up using the Internet Simulator.
          description_audience: ''
          lessons:
            Welcome to the Internet:
              key: Welcome to the Internet
              name: Welcome to the Internet
            Building a Network:
              key: Building a Network
              name: Building a Network
            The Need for Addressing:
              key: The Need for Addressing
              name: The Need for Addressing
            Routers and Redundancy:
              key: Routers and Redundancy
              name: Routers and Redundancy
            Packets:
              key: Packets
              name: Packets
            DNS and HTTP:
              key: DNS and HTTP
              name: HTTP and DNS
            Project - Internet Dilemmas Part 1:
              key: Project - Internet Dilemmas Part 1
              name: Project   Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              key: Project - Internet Dilemmas Part 2
              name: Project   Internet Dilemmas Part 2
            'Lesson 9: Assessment Day':
              key: 'Lesson 9: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
          name: csp2-2021
        csp3-2021:
          title: CSP Unit 3 - Intro to App Design ('20-'21)
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description_audience: ''
          lessons:
            Introduction to Apps:
              key: Introduction to Apps
              name: Introduction to Apps
            Introduction to Design Mode:
              key: Introduction to Design Mode
              name: Introduction to Design Mode
            Project - Designing an App Part 1:
              key: Project - Designing an App Part 1
              name: Project   Designing an App Part 1
            Project - Designing an App Part 2:
              key: Project - Designing an App Part 2
              name: Project   Designing an App Part 2
            The Need for Programming Languages:
              key: The Need for Programming Languages
              name: The Need for Programming Languages
            Intro to Programming:
              key: Intro to Programming
              name: Intro to Programming
            Debugging:
              key: Debugging
              name: Debugging
            Project - Designing an App Part 3:
              key: Project - Designing an App Part 3
              name: Project   Designing an App Part 3
            Project - Designing an App Part 4:
              key: Project - Designing an App Part 4
              name: Project   Designing an App Part 4
            Project - Designing an App Part 5:
              key: Project - Designing an App Part 5
              name: Project   Designing an App Part 5
            'Lesson 11: Assessment Day':
              key: 'Lesson 11: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
          name: csp3-2021
        csp4-2021:
          title: CSP Unit 4 - Variables, Conditionals, and Functions ('20-'21)
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description_audience: ''
          lessons:
            Variables Explore:
              key: Variables Explore
              name: Variables Explore
            Variables Investigate:
              key: Variables Investigate
              name: Variables Investigate
            Variables Practice:
              key: Variables Practice
              name: Variables Practice
            Variables Make:
              key: Variables Make
              name: Variables Make
            Conditionals Explore:
              key: Conditionals Explore
              name: Conditionals Explore
            Conditionals Investigate:
              key: Conditionals Investigate
              name: Conditionals Investigate
            Conditionals Practice:
              key: Conditionals Practice
              name: Conditionals Practice
            Conditional Make:
              key: Conditional Make
              name: Conditionals Make
            Functions Explore / Investigate:
              key: Functions Explore / Investigate
              name: Functions Explore / Investigate
            Functions Practice:
              key: Functions Practice
              name: Functions Practice
            Functions Make:
              key: Functions Make
              name: Functions Make
            Project - Decision Maker App Part 1:
              key: Project - Decision Maker App Part 1
              name: Project   Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              key: Project - Decision Maker App Part 2
              name: Project   Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              key: Project - Decision Maker App Part 3
              name: Project   Decision Maker App Part 3
            'Lesson 15: Assessment Day':
              key: 'Lesson 15: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          name: csp4-2021
        csp5-2021:
          title: CSP Unit 5 - Lists, Loops, and Traversals ('20-'21)
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description_audience: ''
          lessons:
            Lists Explore:
              key: Lists Explore
              name: Lists Explore
            Lists Investigate:
              key: Lists Investigate
              name: Lists Investigate
            Lists Practice:
              key: Lists Practice
              name: Lists Practice
            Lists Make:
              key: Lists Make
              name: Lists Make
            Loops Explore:
              key: Loops Explore
              name: Loops Explore
            Loops Investigate:
              key: Loops Investigate
              name: Loops Investigate
            Loops Practice:
              key: Loops Practice
              name: Loops Practice
            Loops Make:
              key: Loops Make
              name: Loops Make
            Traversals Explore:
              key: Traversals Explore
              name: Traversals Explore
            Traversals Investigate:
              key: Traversals Investigate
              name: Traversals Investigate
            Traversals Practice:
              key: Traversals Practice
              name: Traversals Practice
            Traversals Make:
              key: Traversals Make
              name: Traversals Make
            Semester Hackathon Part 1:
              key: Semester Hackathon Part 1
              name: Project   Hackathon Part 1
            Semester Hackathon Part 2:
              key: Semester Hackathon Part 2
              name: Project   Hackathon Part 2
            Semester Hackathon Part 3:
              key: Semester Hackathon Part 3
              name: Project   Hackathon Part 3
            Semester Hackathon Part 4:
              key: Semester Hackathon Part 4
              name: Project   Hackathon Part 4
            Semester Hackathon Part 5:
              key: Semester Hackathon Part 5
              name: Project   Hackathon Part 5
            'Lesson 18: Assessment Day':
              key: 'Lesson 18: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
          name: csp5-2021
        csp6-2021:
          title: CSP Unit 6 - Algorithms ('20-'21)
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description_audience: ''
          lessons:
            Algorithms Solve Problems:
              key: Algorithms Solve Problems
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              key: Algorithm Efficiency
              name: Algorithm Efficiency
            Unreasonable Time:
              key: Unreasonable Time
              name: Unreasonable Time
            The Limits of Algorithms:
              key: The Limits of Algorithms
              name: The Limits of Algorithms
            Parallel and Distributed Algorithms:
              key: Parallel and Distributed Algorithms
              name: Parallel and Distributed Algorithms
            'Lesson 6: Assessment Day':
              key: 'Lesson 6: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_unit6_2020:
              display_name: 'Unit 6: Algorithms'
          name: csp6-2021
        csp7-2021:
          title: CSP Unit 7 - Parameters, Return, and Libraries ('20-'21)
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description_audience: ''
          lessons:
            Parameters and Return Explore:
              key: Parameters and Return Explore
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              key: Parameters and Return Investigate
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              key: Parameters and Return Practice
              name: Parameters and Return Practice
            Parameters and Return Make:
              key: Parameters and Return Make
              name: Parameters and Return Make
            Libraries Explore:
              key: Libraries Explore
              name: Libraries Explore
            Libraries Investigate:
              key: Libraries Investigate
              name: Libraries Investigate
            Libraries Practice:
              key: Libraries Practice
              name: Libraries Practice
            Project - Make a Library Part 1:
              key: Project - Make a Library Part 1
              name: Project   Make a Library Part 1
            Project - Make a Library Part 2:
              key: Project - Make a Library Part 2
              name: Project   Make a Library Part 2
            Project - Make a Library Part 3:
              key: Project - Make a Library Part 3
              name: Project   Make a Library Part 3
            'Lesson 11: Assessment Day':
              key: 'Lesson 11: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
          name: csp7-2021
        csp8-2021:
          title: CSP Unit 8 - Create PT Prep ('20-'21)
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          description_short: Practice and complete the Create Performance Task (PT).
          description_audience: ''
          lessons:
            Create PT - Review the Task:
              key: Create PT - Review the Task
              name: Create PT   Review the Task
            Create PT - Make a Plan:
              key: Create PT - Make a Plan
              name: Create PT   Make a Plan
            Create PT - Complete the Task:
              key: Create PT - Complete the Task
              name: Create PT - Complete the Task (12 hrs)
          lesson_groups: {}
          name: csp8-2021
        csp9-2021:
          title: CSP Unit 9 - Data ('20-'21)
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project you''ll analyze a dataset of your choosing and present your findings. '
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description_audience: ''
          lessons:
            Learning From Data:
              key: Learning From Data
              name: Learning from Data
            Exploring One Column:
              key: Exploring One Column
              name: Exploring One Column
            Filtering and Cleaning Data:
              key: Filtering and Cleaning Data
              name: Filtering and Cleaning Data
            Exploring Two Columns:
              key: Exploring Two Columns
              name: Exploring Two Columns
            Big Data, Crowdsourcing, and Machine Learning:
              key: Big Data, Crowdsourcing, and Machine Learning
              name: Big, Open, and Crowdsourced Data
            Machine Learning and Bias:
              key: Machine Learning and Bias
              name: Machine Learning and Bias
            Project - Tell a Data Story - Part 1:
              key: Project - Tell a Data Story - Part 1
              name: Project   Tell a Data Story Part 1
            Project - Tell a Data Story - Part 2:
              key: Project - Tell a Data Story - Part 2
              name: Project   Tell a Data Story Part 2
            'Lesson 9: Assessment Day':
              key: 'Lesson 9: Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
          name: csp9-2021
        csp10-2021:
          title: CSP Unit 10 - Cybersecurity and Global Impacts ('20-'21)
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security, and the ways that encryption and other techniques are used to complete it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\r\n\r\n"
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description_audience: ''
          lessons:
            Project - Innovation Simulation Part 1:
              key: Project - Innovation Simulation Part 1
              name: Project   Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              key: Project - Innovation Simulation Part 2
              name: Project   Innovation Simulation Part 2
            Data Policies and Privacy:
              key: Data Policies and Privacy
              name: Data Policies and Privacy
            The Value of Privacy:
              key: The Value of Privacy
              name: The Value of Privacy
            Project - Innovation Simulation Part 3:
              key: Project - Innovation Simulation Part 3
              name: Project   Innovation Simulation Part 3
            Security Risks Part 1:
              key: Security Risks Part 1
              name: Security Risks Part 1
            Security Risks Part 2:
              key: Security Risks Part 2
              name: Security Risks Part 2
            'Project: Innovation Simulation Part 4':
              key: 'Project: Innovation Simulation Part 4'
              name: Project   Innovation Simulation Part 4
            Protecting Data Part 1:
              key: Protecting Data Part 1
              name: Protecting Data Part 1
            Protecting Data Part 2:
              key: Protecting Data Part 2
              name: Protecting Data Part 2
            'Project: Innovation Simulation Part 5':
              key: 'Project: Innovation Simulation Part 5'
              name: Project   Innovation Simulation Part 5
            'Project: Innovation Simulation Part 6':
              key: 'Project: Innovation Simulation Part 6'
              name: Project   Innovation Simulation Part 6
            'Project: Innovation Simulation Part 7':
              key: 'Project: Innovation Simulation Part 7'
              name: Project   Innovation Simulation Part 7
            'Lesson 14: Unit Assessment Day':
              key: 'Lesson 14: Unit Assessment Day'
              name: Assessment Day
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
          name: csp10-2021
        coursea-2021:
          title: Course A (2021)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lessons:
            Safety in My Online Neighborhood:
              key: Safety in My Online Neighborhood
              name: Safety in My Online Neighborhood
            Learn to Drag and Drop:
              key: Learn to Drag and Drop
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              key: 'Programming: Happy Maps'
              name: Happy Maps
            Sequencing with Scrat:
              key: Sequencing with Scrat
              name: Sequencing with Scrat
            Programming in Ice Age:
              key: Programming in Ice Age
              name: Programming with Scrat
            Programming with Rey and BB-8:
              key: Programming with Rey and BB-8
              name: Programming with Rey and BB-8
            'Loops: Happy Loops':
              key: 'Loops: Happy Loops'
              name: Happy Loops
            Loops in Ice Age:
              key: Loops in Ice Age
              name: Loops with Scrat
            Loops in Collector:
              key: Loops in Collector
              name: Loops with Laurel
            Ocean Scene with Loops:
              key: Ocean Scene with Loops
              name: Ocean Scene with Loops
            'Events: The Big Event':
              key: 'Events: The Big Event'
              name: The Big Event Jr.
            Events in Play Lab:
              key: Events in Play Lab
              name: On the Move with Events
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          name: coursea-2021
        courseb-2021:
          title: Course B (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lessons:
            Digital Trails:
              key: Digital Trails
              name: Digital Trails
            Move It, Move It:
              key: Move It, Move It
              name: Move It, Move It
            Sequencing in Maze:
              key: Sequencing in Maze
              name: Sequencing with Angry Birds
            Programming in Maze:
              key: Programming in Maze
              name: Programming with Angry Birds
            Programming in Harvester:
              key: Programming in Harvester
              name: Programming with Harvester
            'Loops: Getting Loopy':
              key: 'Loops: Getting Loopy'
              name: Getting Loopy
            Loops in Harvester:
              key: Loops in Harvester
              name: Loops with Harvester
            Loops in Collector:
              key: Loops in Collector
              name: Loops with Laurel
            Loops in Artist:
              key: Loops in Artist
              name: Drawing Gardens with Loops
            The Right App:
              key: The Right App
              name: The Right App
            'Events: The Big Event':
              key: 'Events: The Big Event'
              name: The Big Event Jr.
            Events in Play Lab:
              key: Events in Play Lab
              name: A Royal Battle with Events
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          name: courseb-2021
        coursec-2021:
          title: Course C (2020)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lessons:
            Putting a STOP to Online Meanness:
              key: Putting a STOP to Online Meanness
              name: Putting a STOP to Online Meanness
            Password Power-Up:
              key: Password Power-Up
              name: Password Power-Up
            'Programming: My Robotic Friends':
              key: 'Programming: My Robotic Friends'
              name: My Robotic Friends Jr.
            Programming in Maze:
              key: Programming in Maze
              name: Programming with Angry Birds
            Debugging in Maze:
              key: Debugging in Maze
              name: Debugging in Maze
            Programming in Collector:
              key: Programming in Collector
              name: Collecting Treasure with Laurel
            Programming in Artist:
              key: Programming in Artist
              name: Creating Art with Code
            Binary Bracelets:
              key: Binary Bracelets
              name: Binary Bracelets
            'Loops: My Loopy Robotic Friends':
              key: 'Loops: My Loopy Robotic Friends'
              name: My Loopy Robotic Friends Jr.
            Loops with Rey and BB-8:
              key: Loops with Rey and BB-8
              name: Loops with Rey and BB-8
            Loops in Harvester:
              key: Loops in Harvester
              name: Harvesting Crops with Loops
            Looking Ahead:
              key: Looking Ahead
              name: Looking Ahead with Minecraft
            Sticker Art with Loops:
              key: Sticker Art with Loops
              name: Sticker Art with Loops
            'Events: The Big Event':
              key: 'Events: The Big Event'
              name: The Big Event
            Build a Flappy Game:
              key: Build a Flappy Game
              name: Build a Flappy Game
            Events in Play Lab:
              key: Events in Play Lab
              name: Chase Game with Events
            Picturing Data:
              key: Picturing Data
              name: Picturing Data
            'End of Course Project: Create a Play Lab Game':
              key: 'End of Course Project: Create a Play Lab Game'
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          name: coursec-2021
        coursed-2021:
          title: Course D (2020)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lessons:
            'Algorithms: Graph Paper Programming':
              key: 'Algorithms: Graph Paper Programming'
              name: Graph Paper Programming
            Introduction to Online Puzzles:
              key: Introduction to Online Puzzles
              name: Introduction to Online Puzzles
            Relay Programming:
              key: Relay Programming
              name: Relay Programming
            Debugging in Collector:
              key: Debugging in Collector
              name: Debugging with Laurel
            Events in Bounce:
              key: Events in Bounce
              name: Events in Bounce
            Build a Star Wars Game:
              key: Build a Star Wars Game
              name: Build a Star Wars Game
            Dance Party:
              key: Dance Party
              name: Dance Party
            Loops in Ice Age:
              key: Loops in Ice Age
              name: Loops in Ice Age
            Loops in Artist:
              key: Loops in Artist
              name: Drawing Shapes with Loops
            Nested Loops in Bee:
              key: Nested Loops in Bee
              name: Nested Loops in Maze
            Conditionals with Cards:
              key: Conditionals with Cards
              name: Conditionals with Cards
            Conditionals in Bee:
              key: Conditionals in Bee
              name: If/Else with Bee
            While Loops in Farmer:
              key: While Loops in Farmer
              name: While Loops in Farmer
            Until Loops in Maze:
              key: Until Loops in Maze
              name: Until Loops in Maze
            Conditionals & Loops in Harvester:
              key: Conditionals & Loops in Harvester
              name: Harvesting with Conditionals
            'Unplugged: Binary':
              key: 'Unplugged: Binary'
              name: Binary Images
            Artist Binary:
              key: Artist Binary
              name: Binary Images with Artist
            Be A Super Digital Citizen:
              key: Be A Super Digital Citizen
              name: Be A Super Digital Citizen
            End of Course Project:
              key: End of Course Project
              name: End of Course Project
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          name: coursed-2021
        coursee-2021:
          title: Course E (2020)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lessons:
            Sequencing in the Maze:
              key: Sequencing in the Maze
              name: Sequencing in the Maze
            Programming and Loops with the Artist:
              key: Programming and Loops with the Artist
              name: Drawing with Loops
            'Conditionals in Minecraft: Voyage Aquatic':
              key: 'Conditionals in Minecraft: Voyage Aquatic'
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              key: Conditionals
              name: Conditionals with the Farmer
            Simon Says:
              key: Simon Says
              name: Simon Says
            Learning Sprites with Sprite Lab:
              key: Learning Sprites with Sprite Lab
              name: Swimming Fish with Sprite Lab
            Alien Dance Party with Sprite Lab:
              key: Alien Dance Party with Sprite Lab
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              key: Private and Personal Information
              name: Private and Personal Information
            About Me:
              key: About Me
              name: About Me with Sprite Lab
            Digital Sharing:
              key: Digital Sharing
              name: Digital Sharing
            Nested Loops in Bee:
              key: Nested Loops in Bee
              name: Nested Loops in Maze
            Nested Loops in Artist:
              key: Nested Loops in Artist
              name: Fancy Shapes using Nested Loops
            Nested Loops in Frozen:
              key: Nested Loops in Frozen
              name: Nested Loops with Frozen
            'Functions: Songwriting':
              key: 'Functions: Songwriting'
              name: Songwriting
            Functions in Minecraft:
              key: Functions in Minecraft
              name: Functions in Minecraft
            Functions in Harvester:
              key: Functions in Harvester
              name: Functions with Harvester
            Functions in Artist:
              key: Functions in Artist
              name: Functions with Artist
            Designing for Accessibility:
              key: Designing for Accessibility
              name: Designing for Accessibility
            End of Course Project:
              key: End of Course Project
              name: End of Course Project
          lesson_groups:
            ramp_up:
              display_name: Ramp Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            csf_impacts:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
          name: coursee-2021
        coursef-2021:
          title: Course F (2021)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lessons:
            Functions in Minecraft:
              key: Functions in Minecraft
              name: Functions in Minecraft
            Learning Sprites with Sprite Lab:
              key: Learning Sprites with Sprite Lab
              name: Swimming Fish with Sprite Lab
            Events with Sprite Lab:
              key: Events with Sprite Lab
              name: Alien Dance Party with Sprite Lab
            Loops with the Artist:
              key: Loops with the Artist
              name: Drawing with Loops
            Nested Loops in the Maze:
              key: Nested Loops in the Maze
              name: Nested Loops in Maze
            The Power of Words:
              key: The Power of Words
              name: The Power of Words
            Envelope Variables:
              key: Envelope Variables
              name: Envelope Variables
            Variables as Constant in Artist:
              key: Variables as Constant in Artist
              name: Variables with Artist
            Variables that Change in Bee:
              key: Variables that Change in Bee
              name: Changing Variables with Bee
            Variables that Change in Artist:
              key: Variables that Change in Artist
              name: Changing Variables with Artist
            Simulating Experiments:
              key: Simulating Experiments
              name: Simulating Experiments
            AI for Oceans:
              key: AI for Oceans
              name: AI For Oceans
            Internet:
              key: Internet
              name: The Internet
            For Loop Fun:
              key: For Loop Fun
              name: For Loop Fun
            For Loops in Bee:
              key: For Loops in Bee
              name: For Loops with Bee
            For Loops in Artist:
              key: For Loops in Artist
              name: For Loops with Artist
            Editing Behaviors:
              key: Editing Behaviors
              name: Behaviors in Sprite Lab
            Virtual Pet:
              key: Virtual Pet
              name: Virtual Pet with Sprite Lab
            End of Course Project:
              key: End of Course Project
              name: End of Course Project
          lesson_groups:
            ramp_up:
              display_name: Ramp Up
            csf_digcit:
              display_name: Digital Citizenship
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          name: coursef-2021
        express-2021:
          title: Express Course (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lessons:
            Dance Party:
              key: Dance Party
              name: Dance Party
            Programming with Angry Birds:
              key: Programming with Angry Birds
              name: Programming with Angry Birds
            Debugging with Scrat:
              key: Debugging with Scrat
              name: Debugging with Scrat
            Collecting Treasure with Laurel:
              key: Collecting Treasure with Laurel
              name: Collecting Treasure with Laurel
            Creating Art with Code:
              key: Creating Art with Code
              name: Creating Art with Code
            Loops with Rey and BB-8:
              key: Loops with Rey and BB-8
              name: Loops with Rey and BB-8
            Sticker Art with Loops:
              key: Sticker Art with Loops
              name: Sticker Art with Loops
            Nested Loops in Maze:
              key: Nested Loops in Maze
              name: Nested Loops in Maze
            Snowflakes with Anna and Elsa:
              key: Snowflakes with Anna and Elsa
              name: Snowflakes with Anna and Elsa
            'Looking Ahead with Minecraft ':
              key: 'Looking Ahead with Minecraft '
              name: Looking Ahead with Minecraft
            If/Else with Bee:
              key: If/Else with Bee
              name: If/Else with Bee
            While Loops with the Farmer:
              key: While Loops with the Farmer
              name: While Loops with the Farmer
            'Conditionals in Minecraft: Voyage Aquatic':
              key: 'Conditionals in Minecraft: Voyage Aquatic'
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Until Loops in Maze:
              key: Until Loops in Maze
              name: Until Loops in Maze
            Harvesting with Conditionals:
              key: Harvesting with Conditionals
              name: Harvesting with Conditionals
            Functions in Minecraft:
              key: Functions in Minecraft
              name: Functions in Minecraft
            Functions with Harvester:
              key: Functions with Harvester
              name: Functions with Harvester
            Functions with Artist:
              key: Functions with Artist
              name: Functions with Artist
            Variables with Artist:
              key: Variables with Artist
              name: Variables with Artist
            Changing Variables with Bee:
              key: Changing Variables with Bee
              name: Changing Variables with Bee
            Changing Variables with Artist:
              key: Changing Variables with Artist
              name: Changing Variables with Artist
            For Loops with Bee:
              key: For Loops with Bee
              name: For Loops with Bee
            For Loops with Artist:
              key: For Loops with Artist
              name: For Loops with Artist
            Swimming Fish in Sprite Lab:
              key: Swimming Fish in Sprite Lab
              name: Swimming Fish in Sprite Lab
            Alien Dance Party:
              key: Alien Dance Party
              name: Alien Dance Party
            Behaviors in Sprite Lab:
              key: Behaviors in Sprite Lab
              name: Behaviors in Sprite Lab
            Virtual Pet with Sprite Lab:
              key: Virtual Pet with Sprite Lab
              name: Virtual Pet with Sprite Lab
            End of Course Project:
              key: End of Course Project
              name: End of Course Project
          lesson_groups:
            csf_warmup:
              display_name: Warm Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          name: express-2021
        pre-express-2021:
          title: Pre-reader Express (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lessons:
            Learn to Drag and Drop:
              key: Learn to Drag and Drop
              name: Learn to Drag and Drop
            Sequencing with Scrat:
              key: Sequencing with Scrat
              name: Sequencing with Scrat
            Programming in with Angry Birds:
              key: Programming in with Angry Birds
              name: Programming with Angry Birds
            Programming with Rey and BB-8:
              key: Programming with Rey and BB-8
              name: Programming with Rey and BB-8
            Programming in Harvester:
              key: Programming in Harvester
              name: Programming with Harvester
            Loops with Scrat:
              key: Loops with Scrat
              name: Loops with Scrat
            Loops with Laurel:
              key: Loops with Laurel
              name: Loops with Laurel
            Ocean Scene with Loops:
              key: Ocean Scene with Loops
              name: Ocean Scene with Loops
            Drawing Gardens with Loops:
              key: Drawing Gardens with Loops
              name: Drawing Gardens with Loops
            On the Move with Events:
              key: On the Move with Events
              name: On the Move with Events
            A Royal Battle with Events:
              key: A Royal Battle with Events
              name: A Royal Battle with Events
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          name: pre-express-2021
        csf-2021-pilot:
          lessons:
            Introduction to Course F:
              name: Introduction to Course F
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Virus Simulation for Code Bytes:
              name: Coding a Simulation
            Course F Introduction:
              name: Introduction to Course F
            lesson-1:
              name: Envelope Variables
            lesson-2:
              name: Storing and Retrieving Text
            lesson-3:
              name: Create a Chat-Bot
            lesson-4:
              name: Counting with Variables
            lesson-5:
              name: Groups of Sprites
            lesson-6:
              name: Create a Collector Game
          lesson_groups:
            ramp_up:
              display_name: Introduction
            outbreak:
              display_name: Outbreak Simulation
            introduction:
              display_name: Introduction to Sprite Lab
              description: Explore projects created with Sprite Lab. Learn the basics of coding with sprites and events!
            lessonGroup-3:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
          name: csf-2021-pilot
          title: CS Fundamentals 2021 Pilot
          description_audience: Upper Elementary
          description_short: Learn about events, variables, and conditionals, and create your own animations, games, and simulations.
          description: "Learn to use events by programming in Sprite Lab. Investigate different design techniques and discuss societal impacts of computing. \n\n**Pilot 2021**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June, 2021 only."
        csd4-preview-2021:
          title: CSD Unit 4 - The Design Process ('21-'22 Beta Preview)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lessons:
            Analysis of Design:
              key: Analysis of Design
              name: Analysis of Design
              description_student: The class explores a variety of different teapot designs to consider how design choices or made and why. Using the teapots as an example, the class will explore the relationship between users, their needs, and the design of objects they use.
              description_teacher: To kick off a unit devoted to group problem solving and developing products for other users, students begin by investigating the design of various teapots. Students analyze each teapot, attempting to identify how specific user needs might have informed its design. By considering these design choices, and attempting to match each teapot with a potential user, students can begin to see how taking a user-centered approach to designing products (both physical and digital) can make those products more useful and usable. To conclude the activity, students are asked to propose some changes to one of the teapots that would make it more useful or usable.
            Understanding Your User:
              key: Understanding Your User
              name: Understanding Your User
              description_student: Using user profiles, the class explores how different users might react to a variety of products. Role playing as a different person, each member of the class will get to experience designs through someone else's eyes.
              description_teacher: "Designers need to understand their users’ needs in order to create useful products.  This lesson encourages students to think about how to design for another person by role-playing as someone else using a user profile and reacting as that user to a series of products.  Each student is assigned a user profile describing a person, which they then use to choose appropriate products, critique product design, and suggest improvements to design.\r\n"
            User-Centered Design Micro Activity:
              key: User-Centered Design Micro Activity
              name: User-Centered Design Micro Activity
              description_student: In small groups, the class uses the design process to come up with ideas for smart clothing. From brainstorming, to identifying users, to finally proposing a design, this is the first of several opportunities in this unit to practicing designing a solution for the needs of others.
              description_teacher: This lesson guides students through an abbreviated version of the design process they will be seeing throughout this unit. Students first brainstorm a list of potential users of smart clothing. As a class, they then group these ideas into broad categories and each group will choose one category of user. Groups repeat this process to brainstorm needs or concerns of their user, eventually categorizing these needs and choosing one to focus on. Finally, students design a piece of smart clothing, using the specific needs and concerns they brainstormed to guide their decision making. At the end of the class students quickly share their decision-making process and get feedback on how well their product addresses the user need they selected.
            User Interfaces:
              key: User Interfaces
              name: User Interfaces
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Testing:
              key: Feedback and Testing
              name: Feedback and Testing
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Identifying User Needs:
              key: Identifying User Needs
              name: Identifying User Needs
              description_student: Up to this point the users that the class has considered have all been remote, and the only information from users has come through text or role playing. Now the class will rely on each other as potential users, and pairs will get to interview each other to identify needs that could be addressed by developing an app.
              description_teacher: 'Up to this point students have focused on designing for users who are, to some degree, distanced from them. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. This is distance is designed to help students get outside their own head when thinking about users, but in order to get information more directly from an actual user, students need to rely on their classmates. In this lesson students pair up to become users (and designers) for each other, allowing everyone to directly interview their end user and ask questions to better inform their design. Each student pair interviews each other, attempting to identify a specific need that could be addressed by an app. '
            Project - Paper Prototype:
              key: Project - Paper Prototype
              name: Project - Paper Prototype
              description_student: Using the interview information from the previous lesson, the class comes up with app ideas to address the needs of their users. To express those ideas, and test out their effectiveness, each student creates and tests paper prototypes of their own.
              description_teacher: Based on the peer interview from the previous lesson, each student comes up with an idea for an app that will address their user's problem. Students then get to create their own paper prototype of their app ideas by drawing "screens" on individual notecards. A project guide directs students through the process including building the app and testing it with their user to see if their assumptions about the user interfaces they created are accurate.
            Designing Apps for Good:
              key: Designing Apps for Good
              name: Designing Apps for Good
              description_student: To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.
              description_teacher: To kick off the app design project that lasts through the end of the unit, students first explore a number of apps designed for social impact that have been created by other students. The class then reviews the Define, Prepare, Try, and Reflect steps of the Problem Solving process as they develop an idea for an app of their own with social impact. Finally, students will form project teams and lay out a contract for how the team will function throughout the development of their app.
            Market Research:
              key: Market Research
              name: Market Research
              description_student: Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.
              description_teacher: In this lesson students research apps similar to the one they intend on creating to better understand the needs of their users. Students work within their teams to search the Internet for other apps, then evaluate the ones they find interesting. By the end of the lesson, each team will have a clearer idea about the type of app they want to create and further refine who their target users are. Each team will maintain a list of citations for all the apps they examined for use in their final presentation.
            Paper Prototypes:
              key: Paper Prototypes
              name: Paper Prototypes
              description_student: Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
              description_teacher: "Before starting to design apps, we need to help students to better scope their expectations. Because students will eventually be prototyping these apps in App Lab, they will be in better shape if their ideas align with the kinds of apps that are easily prototyped in App Lab. Teams start this scoping by looking through several example apps designed to demonstrate apps that can be created with App Lab. Teams then can chose one (or more) of the apps as a basis for their own. From there, teams have some time to discuss the basic functionality of their app before using 3x5 index cards to develop paper prototypes.\r\n"
            Prototype Testing:
              key: Prototype Testing
              name: Prototype Testing
              description_student: In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.
              description_teacher: The primary purpose of developing paper prototypes is that they allow for quick testing and iteration before any code is written. This lesson is focused on giving teams a chance to test their prototypes before moving to App Lab. Teams develop a plan to test with users before running prototype tests with multiple other students in the class (and potentially outside the class). In order to test the prototype with the users, the students will have to assign roles in the testing (the “narrator”, the “computer” and the “observers”) as well as have some questions prepared for the user to answer after the test is complete.
            Digital Design:
              key: Digital Design
              name: Digital Design
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin work on an interactive digital version based on the paper prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital versions of a paper prototype. From there, each group member builds out at least one page of their app in App Lab, to be later combined into a single app.
            Linking Screens:
              key: Linking Screens
              name: Linking Screens
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they can then link together using code. Students learn basic event driven programming by building up the model app that they started in the previous lesson. In addition to the screen that students designed yesterday, they'll learn how to create additional screens and even import screens made by others.
            Testing the App:
              key: Testing the App
              name: Testing the App
              description_student: Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.
              description_teacher: 'By the end of the previous lesson each team should have a minimum viable prototype of their app. The primary purpose of this lesson is to have the team actually test the app with other people, preferably from the target audience the app is intended for, or from different teams in the class while observers from the team will record the results on the worksheets they used in the planning phase. As with testing the paper prototypes, teams will start by planning for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              key: Improving and Iterating
              name: Improving and Iterating
              description_student: Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
              description_teacher: Teams have at this point developed an app prototype that has gone through multiple iterations and rounds of user testing. With the information and guidance gained from the last round of user testing, each student has the opportunity to plan for and implement improvements to the team app. Depending on the time you have available, and student interest, you can run the cycle of testing and iteration as many times as you see fit.
            Project - App Presentation:
              key: Project - App Presentation
              name: Project - App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd4-preview-2021
        csd5-preview-2021:
          title: CSD Unit 5 - Data and Society ('20-'21)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lessons:
            Representation Matters:
              key: Representation Matters
              name: Representation Matters
              description_student: This first lesson provides an overview of what data is and how it is used to solve problems.  Groups use a data set to make a series of meal recommendations for people with various criteria.   Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
              description_teacher: In the first lesson of the data unit, students get an overview of what data is and how it is used to solve problems.  Students start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
            Patterns and Representation:
              key: Patterns and Representation
              name: Patterns and Representation
              description_student: This lesson looks closer at what is needed to create a system of representation.  Groups create systems that can represent any letter in the alphabet using only a single stack of cards, then create messages with their systems and exchange with other groups to ensure the system worked as intended.   The class discusses commonalities between working systems while recognizing that there are many possible working solutions.
              description_teacher: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class  reviews any pros and cons of the different systems. They discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              key: ASCII and Binary Representation
              name: ASCII and Binary Representation
              description_student: This lesson introduces a formal binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". The class is then introduced to the ASCII system for representing text using binary symbols and practices using this system before encoding their own messages using ASCII.
              description_teacher: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
            Representing Images:
              key: Representing Images
              name: Representing Images
              description_student: This lesson continues the study of binary representation systems, this time with images. The class is introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. After doing a short set of challenges using the Pixelation Widget, the class makes connections between the system for representing images and the system for representing text they learned in the previous lesson.
              description_teacher: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
            Representing Numbers:
              key: Representing Numbers
              name: Representing Numbers
              description_student: This lesson introduces the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system, the class turns bits "on" or "off" by turning cards face up and face down, then observes the numbers that result from these different patterns.  Eventually, the pattern is extended to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, students extend the pattern to a generic 4-bit system.
            Keeping Data Secret:
              key: Keeping Data Secret
              name: Keeping Data Secret
              description_student: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
              description_teacher: Students have a discussion on the different levels of security they would like for personal data.  Once the class has developed an understanding of the importance of privacy, they learn about the process of encrypting information by enciphering a note for a partner and deciphering the partner's note.  The class concludes with a discussion about the importance of both physical and digital security.
            Combining Representations:
              key: Combining Representations
              name: Combining Representations
              description_student: This lesson combines all three types of binary representation systems (ASCII characters, binary number, and images) to allow for the encode of more complex types information in a record.  After seeing a series of bits and being asked to decode them, the class is introduced to the idea that  understanding binary information requires understanding both the system that is being used and the meaning of the information encoded.
              description_teacher: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
            Project - Create a Representation:
              key: Project - Create a Representation
              name: Project - Create a Representation
              description_student: The class designs structure to represent their perfect day using the binary representation systems they've learned in this chapter. After deciding which pieces of information the record should capture, the class will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Afterwards, everyone will use the ASCII, binary number, and image formats they have learned to represent their perfect days try to decipher what a partner's perfect day is like.
              description_teacher: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
            Problem Solving and Data:
              key: Problem Solving and Data
              name: Problem Solving and Data
              description_student: This lesson covers how the problem solving process can be tailored to deal with data problems, in particular.  The class is tasked with deciding what a city most needs to spend resources on.  They must find and use data from the Internet to support their decision.
              description_teacher: 'In this lesson, students use the problem solving process from earlier in the course to solve a data problem.  After reviewing the process, the class is presented with a decision: whether a city should build a library, pet shelter, or fire department.  Students work in teams to collect information on the Internet to help them decide what should be built, then use this information build an argument that will convince the city council of their choice.  They then map what they have done to the problem solving process that they have been using throughout the course, comparing the general problem solving process to its specific application to data problems.'
            Problem Solving with Big Data:
              key: Problem Solving with Big Data
              name: Problem Solving with Big Data
              description_student: This lesson covers how data is collected and used by a organizations to solve problems in the real world. The class looks at three scenarios that could be solved using data and brainstorms the types of data they would want to solve them and how they could collect the data.  Each scenario also includes a video about a real-world service that has solved a similar problem with data.
              description_teacher: In this lesson, students look at how data is collected and used by organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they  explored in the last lesson. Then students are presented three scenarios that could be solved using data and brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming, students watch a video about a real-world service and record notes about what data is collected by the real-world service and how it is used. At the end of the lesson, students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
            Structuring Data:
              key: Structuring Data
              name: Structuring Data
              description_student: This lesson goes further into the interpretation of data, including cleaning and visualizing raw data sets.  The class first looks at the how presenting data in different ways can help people to understand it better.  After seeing how cleaning and visualization can help people make better decisions, the class looks at what parts of this process can be automated, and what need a human.
              description_teacher: In this lesson, students go further into the collection and interpretation of data, including cleaning and visualizing data.  Students first look at the how presenting data in different ways can help people to understand it better, and they then create visualizations of their own data. Using a the results of a preferred pizza topping survey, students must decide what to do with data that does not easily fit into the visualization scheme that they have chosen.  Finally, students look at which parts of this process can be automated by a computer and which need a human to make decisions.
            Making Decisions with Data:
              key: Making Decisions with Data
              name: Making Decisions with Data
              description_student: This lesson gives the class a chance to practice the data problem solving process introduced in the last lesson.  Not all questions have right answers and in some cases the class can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
            Interpreting Data:
              key: Interpreting Data
              name: Interpreting Data
              description_student: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
              description_teacher: Students begin the lesson by looking at a cake preference survey that allows respondents to specify both a cake and an icing flavor.  They discuss how knowing the relationship between cake and icing preference helps them better decide which combination to recommend.  They are then introduced to cross tabulation, which allows them to graph relationships to different preferences.  They use this technique to find relationships in a preference survey, then brainstorm the different types of problems that this process could help solve.
            Automating Data Decisions:
              key: Automating Data Decisions
              name: Automating Data Decisions
              description_student: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example of how a computer could be used to complete the decision making step of the data problem solving process. Students are given the task of creating an algorithm that could suggest a vacation spot.  Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Students share their rules and what choices their rules would make with the class data. They then use their rules on data from their classmates to test whether their rules would make the same decision that  a person would. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
            Project - Make a Recommendation:
              key: Project - Make a Recommendation
              name: Project - Make a Recommendation
              description_student: ''
              description_teacher: ''
            Post-Project Test:
              key: Post-Project Test
              name: Post-Project Test
              description_student: ''
              description_teacher: ''
            CS Discoveries Post Course survey:
              key: CS Discoveries Post Course survey
              name: CS Discoveries Post Course survey
              description_student: ''
              description_teacher: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd5-preview-2021
