# Autogenerated scripts locale file.
---
en:
  data:
    script:
      name:
        course1:
          title: Course 1
          description: Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1.
          description_short: Introduction to computer science for early readers.
          description_audience: Ages 4-6
          lesson_groups: {}
          lessons:
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Artist: Shapes':
              name: 'Artist: Shapes'
            'Bee: Loops':
              name: 'Bee: Loops'
            'Bee: Sequence':
              name: 'Bee: Sequence'
            Building a Foundation:
              name: Building a Foundation
            Getting Loopy:
              name: Getting Loopy
            Going Places Safely:
              name: Going Places Safely
            Happy Maps:
              name: Happy Maps
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            'Maze: Debugging':
              name: 'Maze: Debugging'
            'Maze: Loops':
              name: 'Maze: Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
            Move it, Move it:
              name: Move it, Move it
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Spelling Bee:
              name: Spelling Bee
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
            The Big Event:
              name: The Big Event
          student_description: Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1.
        course2:
          title: Course 2
          description: Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5.
          description_short: Introduction to computer science for students who can read.
          description_audience: Ages 6+ (reading required)
          lesson_groups: {}
          lessons:
            'Artist: Debugging':
              name: 'Artist: Debugging'
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Loops':
              name: 'Bee: Loops'
            Binary Bracelets:
              name: Binary Bracelets
            Conditionals:
              name: Conditionals
            Flappy:
              name: Flappy
            Getting Loopy:
              name: Getting Loopy
            Graph Paper Programming:
              name: Graph Paper Programming
            'Maze: Loops':
              name: 'Maze: Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Relay programming:
              name: Relay programming
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
            The Big Event:
              name: The Big Event
            Your Digital Footprint:
              name: Your Digital Footprint
          student_description: Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5.
        course3:
          title: Course 3
          description: Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5.
          description_short: Delve even deeper into programming while building games and interactive stories. This is a follow-up to Course 2.
          description_audience: Ages 8-18
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Patterns':
              name: 'Artist: Patterns'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Functions':
              name: 'Bee: Functions'
            'Bee: Nested Loops':
              name: 'Bee: Nested Loops'
            Bounce:
              name: Bounce
            Computational Thinking:
              name: Computational Thinking
            Crowdsourcing:
              name: Crowdsourcing
            Dice Race:
              name: Dice Race
            Digital Citizenship:
              name: Digital Citizenship
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            Functional Suncatchers:
              name: Functional Suncatchers
            Internet:
              name: Internet
            Maze:
              name: Maze
            'Maze: Conditionals':
              name: 'Maze: Conditionals'
            Songwriting:
              name: Songwriting
            'Studio: Create a Game':
              name: 'Play Lab: Create a Game'
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
          student_description: Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5.
        playlab:
          title: Play Lab
          description: Create a story or make a game with Play Lab!
          description_short: Create a story or make a game with Play Lab!
          lesson_groups: {}
          lessons:
            Play Lab:
              name: Play Lab
          description_audience: ''
          student_description: Create a story or make a game with Play Lab!
          name: playlab
        artist:
          title: Artist
          description: Draw cool pictures and designs with the Artist!
          description_short: Draw cool pictures and designs with the Artist!
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
          student_description: Draw cool pictures and designs with the Artist!
          name: artist
          description_audience: ''
        hourofcode:
          title: Classic Maze
          description: Try the basics of computer science with characters from Angry Birds, Plants vs. Zombies, and Scrat from Ice Age!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Maze:
              name: Maze
          student_description: Try the basics of computer science with characters from Angry Birds, Plants vs. Zombies, and Scrat from Ice Age!
          name: hourofcode
        frozen:
          title: Code with Anna and Elsa
          description: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. You will create snowflakes and patterns as you ice-skate and make a winter wonderland that you can then share with your friends!
          description_short: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice.
          lesson_groups: {}
          lessons:
            Artist:
              name: Code with Anna and Elsa
          student_description: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. You will create snowflakes and patterns as you ice-skate and make a winter wonderland that you can then share with your friends!
          name: frozen
          description_audience: ''
        course4:
          title: Course 4
          description: Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8.
          description_short: Build more complex programs with concepts such as for loops and functions with parameters. This is a follow-up to Course 3.
          description_audience: Ages 9-18
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
            Artist Binary:
              name: Artist Binary
            'Artist: For Loops':
              name: 'Artist: For Loops'
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Functions with Parameters':
              name: 'Artist: Functions with Parameters'
            'Artist: Variables':
              name: 'Artist: Variables'
            'Bee: For Loops':
              name: 'Bee: For Loops'
            'Bee: Functions with Parameters':
              name: 'Bee: Functions with Parameters'
            Extreme Challenge - Comprehensive:
              name: Extreme Challenge - Comprehensive
            Maze and Bee:
              name: Maze and Bee
            'Play Lab: For Loops':
              name: 'Play Lab: For Loops'
            'Play Lab: Functions with Parameters':
              name: 'Play Lab: Functions with Parameters'
            'Play Lab: Variables':
              name: 'Play Lab: Variables'
            Super Challenge - For Loops:
              name: Super Challenge - For Loops
            Super Challenge - Functions and Parameters:
              name: Super Challenge - Functions and Parameters
            Super Challenge - Variables:
              name: Super Challenge - Variables
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            'Unplugged: Envelope Variables':
              name: 'Unplugged: Envelope Variables'
            'Unplugged: For Loop Fun':
              name: 'Unplugged: For Loop Fun'
            'Unplugged: Madlibs':
              name: 'Unplugged: Madlibs'
            'Unplugged: Songwriting with Parameters':
              name: 'Unplugged: Songwriting with Parameters'
            'Unplugged: Tangrams':
              name: 'Unplugged: Tangrams'
          student_description: Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8.
        Course4pre:
          title: Course 4 Prerequisite
          description: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_short: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Nested Loops':
              name: 'Bee: Nested Loops'
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
          student_description: A brief rampup of concepts for students who have not taken Course 2 and 3.
        usability:
          title: Usability Testing
          description: A selection of Course 4 levels for usability testing.
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Binary:
              name: Binary
            For Loops:
              name: For Loops
            Functions and Functions with Parameters:
              name: Functions and Functions with Parameters
            Intro:
              name: Intro
            Variables:
              name: Variables
          student_description: A selection of Course 4 levels for usability testing.
        algebra:
          title: Computer Science in Algebra
          description: Learn Functional Programming through Algebra.
          description_short: Learn Functional Programming through Algebra.
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Calc: Defining Variables':
              name: Defining Variables and Substitution
            'Calc: Evaluation Blocks':
              name: Evaluation Blocks and Arithmetic Expressions
            'Eval: Boolean Operators':
              name: Boolean Operators
            'Eval: Conditionals':
              name: Conditionals
            'Eval: Defining Functions':
              name: Composite Functions
            'Eval: Functions':
              name: Solving Word Problems with the Design Recipe
            'Eval: Strings and Images':
              name: Strings and Images
            'Eval: Writing Contracts':
              name: Writing Contracts
            'Play Lab: Animation (Big Game)':
              name: The Big Game - Animation
            'Play Lab: Boolean (Big Game)':
              name: The Big Game - Booleans
            'Play Lab: Booleans':
              name: Sam the Bat
            'Play Lab: Collision Detection (Big Game)':
              name: The Big Game - Collision Detection
            'Play Lab: Defining Functions':
              name: Rocket Height
            'Play Lab: Defining Variables (Big Game)':
              name: The Big Game - Variables
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans and Logic'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Pythagorean Theorem'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'Unplugged: Conditionals and Piecewise Functions'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts, Domain, and Range'
            'Unplugged: The Design Recipe':
              name: 'Unplugged: The Design Recipe'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'Unplugged: Video Games and Coordinate Planes'
          student_description: Learn Functional Programming through Algebra.
        infinity:
          title: Disney Infinity Play Lab
          description: Use Play Lab to create a story or game starring Disney Infinity characters.
          description_short: Use Play Lab to create a story or game starring Disney Infinity characters.
          lesson_groups: {}
          lessons:
            Infinity:
              name: Disney Infinity Play Lab
          student_description: Use Play Lab to create a story or game starring Disney Infinity characters.
          name: infinity
          description_audience: ''
        algebrademo:
          title: Algebra Demo
          description: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          description_short: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          lesson_groups: {}
          lessons:
            Defining Simple Functions:
              name: Defining Simple Functions
            Defining Variables:
              name: Defining Variables
            Evaluation Blocks:
              name: Evaluation Blocks
            Making Pictures:
              name: Making Pictures
            The Design Recipe:
              name: The Design Recipe
          student_description: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
        K5PD:
          title: K5 Professional Development (old)
          description: 'For the latest online Professional Development resources for elementary school teachers here: https://studio.code.org/s/k5-onlinepd'
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Computer Science Pedagogy:
              name: Computer Science Pedagogy
            Introduction to PD:
              name: Introduction to PD
            K-5 Courses:
              name: K-5 Courses
            Next Steps:
              name: Next Steps
            'Programming Concept: Conditionals':
              name: 'Programming Concept: Conditionals'
            'Programming Concept: Events':
              name: 'Programming Concept: Events'
            'Programming Concept: Functions':
              name: 'Programming Concept: Functions'
            'Programming Concept: Loops':
              name: 'Programming Concept: Loops'
            Reflection:
              name: Reflection
            Teacher Dashboard:
              name: Teacher Dashboard
            Unplugged lessons:
              name: Unplugged lessons
            Writing computer programs:
              name: Writing computer programs
            new stage:
              name: new stage
          student_description: 'For the latest online Professional Development resources for elementary school teachers here: https://studio.code.org/s/k5-onlinepd'
        netsim:
          title: Internet Simulator
          description: Learn about how the Internet works.
          description_short: Learn about how the Internet works.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Automatic DNS node:
              name: Automatic DNS node
            Broadcasting messages:
              name: Broadcasting messages
            Internet Simulator Freeplay:
              name: Internet Simulator Freeplay
            Manual DNS:
              name: Manual DNS
            Overview and Setup Instructions:
              name: Overview and Setup Instructions
            Packets and Reliability:
              name: Packets and Reliability
            Peer to Peer - Sending Ascii:
              name: Peer to Peer - Sending Ascii
            Peer to Peer - Sending Bits on a Shared Wire:
              name: Peer to Peer - Sending Bits on a Shared Wire
            Peer to Peer - Sending Numbers:
              name: Peer to Peer - Sending Numbers
            Routers and addresses:
              name: Routers and addresses
          student_description: Learn about how the Internet works.
        pixelation:
          title: Pixelation
          description: Create images with bits and bytes.
          description_short: Create images with bits and bytes.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Black & White Pixelation Freeplay:
              name: Black & White Pixelation Freeplay
            Black & White Pixelation Tutorial:
              name: Black & White Pixelation Tutorial
            Color Pixelation Examples:
              name: Color Pixelation Examples
            Color Pixelation Freeplay:
              name: Color Pixelation Freeplay
            Color Pixelation Tutorial:
              name: Color Pixelation Tutorial
          student_description: Create images with bits and bytes.
        20-hour:
          title: Accelerated Intro to CS Course
          description: This 20-hour course covers the core computer science and programming concepts in courses 2-4. The course is designed for use with ages 10-18. Check out courses 2-4 for a more complete experience!
          description_short: This 20-hour course covers the core computer science and programming concepts in courses 2-4.
          description_audience: Ages 10-18
          lesson_groups: {}
          lessons:
            Abstraction:
              name: Abstraction
            Algorithms:
              name: Algorithms
            Computational Thinking:
              name: Computational Thinking
            Conditionals:
              name: Conditionals
            Functions:
              name: Functions
            Graph Paper Programming:
              name: Graph Paper Programming
            Introduction to Computer Science:
              name: Introduction to Computer Science
            Relay Programming:
              name: Relay Programming
            Song Writing:
              name: Song Writing
            The Artist:
              name: The Artist
            The Artist 2:
              name: The Artist 2
            The Artist 3:
              name: The Artist 3
            The Artist 4:
              name: The Artist 4
            The Artist 5:
              name: The Artist 5
            The Farmer:
              name: The Farmer
            The Farmer 2:
              name: The Farmer 2
            The Farmer 3:
              name: The Farmer 3
            The Internet:
              name: The Internet
            The Maze:
              name: The Maze
            Wrap-up:
              name: Wrap-up
          student_description: This 20-hour course covers the core computer science and programming concepts in courses 2-4. The course is designed for use with ages 10-18. Check out courses 2-4 for a more complete experience!
        edit-code:
          title: Edit Code
          description: Edit Code
          description_short: Edit Code
          description_audience: ''
          lesson_groups: {}
          lessons:
            Applab:
              name: Applab
            Hoc2015 Blockly:
              name: Hoc2015 Blockly
            Play Lab:
              name: Play Lab
            The Artist:
              name: The Artist
            The Maze:
              name: The Maze
          student_description: Edit Code
        events:
          title: Events
          description: Events
          description_short: Events
          description_audience: ''
          lesson_groups: {}
          lessons:
            Bounce:
              name: Bounce
            Calc:
              name: Calc
            Eval:
              name: Eval
            Studio:
              name: Studio
          student_description: Events
        flappy:
          title: Flappy Code
          description: Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial!
          description_short: Write your own Flappy game!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Flappy Code:
              name: Flappy Code
          student_description: Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial!
          name: flappy
        jigsaw:
          title: Jigsaw
          description: Try our Jigsaw tutorial.
          description_short: Try our Jigsaw tutorial.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Jigsaw:
              name: Jigsaw
          student_description: Try our Jigsaw tutorial.
          name: jigsaw
        step:
          title: Step
          description: Step tutorial
          description_short: Step tutorial
          description_audience: ''
          lesson_groups: {}
          lessons:
            Step:
              name: Step
          student_description: Step tutorial
        Hour of Code:
          title: Hour of Code 2013
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2013:
              name: Hour of Code 2013
          student_description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies!
        CodeStudioPuzzleChallenge:
          title: Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Puzzles:
              name: Puzzles
          student_description: Try out these fun coding puzzles. Do your best!
        Tutorial Video - Code Studio Puzzle Challenge:
          title: Tutorial - Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Puzzles:
              name: Puzzles
          student_description: Try out these fun coding puzzles. Do your best!
        cspunit1:
          title: "(old) CS Principles Unit 1 - Digital Information"
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Binary Numbers:
              name: Binary Numbers
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Encode a Complex Thing:
              name: Encode an Experience
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Encoding Numbers in the Real World:
              name: Encoding Numbers in the Real World
            Encoding and Sending Text:
              name: Encoding and Sending Text
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Number Systems:
              name: Number Systems
            Personal Innovations:
              name: Personal Innovations
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Bits in the Real World:
              name: Sending Bits in the Real World
            Sending Complex Messages:
              name: Sending Complex Messages
            Sending Formatted Text:
              name: Sending Formatted Text
            Sending Numbers:
              name: Sending Numbers
            Text Compression:
              name: Text Compression
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
        algebraPD:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
          student_description: 'Phase 1: Online Introduction'
        algPDmiami:
          title: Computer Science in Algebra PD
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          lesson_groups: {}
          lessons:
            Booleans:
              name: Booleans
            Design Recipe Practice:
              name: Design Recipe Practice
            Evaluation Blocks:
              name: Evaluation Blocks
            Luigi's Pizza:
              name: Luigi's Pizza
            Rocket-Height:
              name: Rocket-Height
            Sam the Bat:
              name: Sam the Bat
            Strings and Images:
              name: Strings and Images
            Your Game - Animation:
              name: Your Game - Animation
            Your Game - Booleans:
              name: Your Game - Booleans
            Your Game - Collision Detection:
              name: Your Game - Collision Detection
            Your Game - Player Movement:
              name: Your Game - Player Movement
          student_description: Teach Algebra through Functional Programming
        text-compression:
          title: Text Compression
          description: Compress text by identifying repeated patterns.
          description_short: Compress text by identifying repeated patterns.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Text Compression:
              name: Text Compression
          student_description: Compress text by identifying repeated patterns.
          name: text-compression
        CSPPD:
          title: Computer Science Principles PD
          description: 'Phase 1: Online Introduction for CSP'
          description_short: 'Phase 1: Online Introduction for CSP'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Exploring CSP Instructional Materials:
              name: Exploring CSP Instructional Materials
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is CSP?:
              name: What is CSP?
          student_description: 'Phase 1: Online Introduction for CSP'
        CSPLessonSamples:
          title: CSP Lesson Samples
          description: Lesson samples for CSP
          description_short: Lesson samples for CSP
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson 14:
              name: Lesson 14
            Lesson 15:
              name: Lesson 15
          student_description: Lesson samples for CSP
        ECSPD:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          lesson_groups: {}
          lessons:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
          student_description: 'Phase 1: Online Introduction'
          name: ECSPD
          description_audience: ''
        sciencePD:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
          student_description: 'Phase 1: Online Introduction'
        rbo-reference:
          title: rbo-reference
          description: rbo-reference
          description_short: rbo-reference
          description_audience: ''
          lesson_groups: {}
          lessons:
            reference:
              name: reference
          student_description: rbo-reference
        Test Wednesday:
          title: Test Wednesday
          description: Test Wednesday
          description_short: Test Wednesay
          lesson_groups: {}
          lessons:
            PDK5 Intro:
              name: PDK5 Intro
          student_description: Test Wednesday
        cspunit3:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            Creating Functions:
              name: Creating Functions
            Creating functions with Parameters:
              name: Creating Functions with Parameters
            Digital Assistant Project:
              name: Digital Assistant Project
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: Introducing Design Mode
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: Introduction to Conditional Logic
            Introduction to Digital Assistants:
              name: Introduction to Digital Assistants
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Loops and Simulations:
              name: Loops and Simulations
            Multi-screen Apps:
              name: Multi-screen Apps
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            The Need For Programming Languages:
              name: The Need For Programming Languages
            Understanding Program Flow and Logic:
              name: Understanding Program Flow and Logic
            User Input and Strings:
              name: User Input and Strings
            Using Simple Commands:
              name: Using Simple Commands
            Using Variables in Apps:
              name: Using Variables in Apps
            While Loops:
              name: While Loops
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        algebraPD3:
          title: Phase 3 PD
          description: Teach Algebra through block-based Functional Programming
          description_short: Teach Algebra through block-based Functional Programming
          description_audience: ''
          lesson_groups: {}
          lessons:
            Computer Science Pedagogy:
              name: Computer Science Pedagogy
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Next Steps:
              name: Next Steps
            Strings and Images:
              name: Strings and Images
            Teacher Dashboard:
              name: Teacher Dashboard
            The Big Game:
              name: The Big Game
            The Design Recipe:
              name: The Design Recipe
          student_description: Teach Algebra through block-based Functional Programming
        ECSPD-NexTech:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          lesson_groups: {}
          lessons:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
          student_description: 'Phase 1: Online Introduction'
        ECSPD-iZone:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          lesson_groups: {}
          lessons:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
          student_description: 'Phase 1: Online Introduction'
        algebraPD-NexTech:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
          student_description: 'Phase 1: Online Introduction'
        algebraPD-iZone:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
          student_description: 'Phase 1: Online Introduction'
        sciencePD-NexTech:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
          student_description: 'Phase 1: Online Introduction'
        sciencePD-iZone:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
          student_description: 'Phase 1: Online Introduction'
        sciencePD2:
          title: 'CS in Science: Part 2'
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          lesson_groups: {}
          lessons:
            Creating Breeds in Starlogo Nova:
              name: Creating Breeds in Starlogo Nova
            Epidemic Model Extensions:
              name: Epidemic Model Extensions
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Revisiting Agent Movement:
              name: Revisiting Agent Movement
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
          student_description: Phase 2 Online Blended Summer Study
        sciencePD3:
          title: 'CS in Science: Part 3'
          description: Academic Year Support - Semester 1
          description_short: Academic Year Support - Semester 1
          lesson_groups: {}
          lessons:
            Decode and Share:
              name: Decode and Share
            Mystery Model:
              name: Mystery Model
            Welcome Back!:
              name: Welcome Back!
          student_description: Academic Year Support - Semester 1
        Testing:
          title: Testing
          description: Testing
          description_short: Testing
          description_audience: ''
          lesson_groups: {}
          lessons:
            Testing:
              name: Testing
          student_description: Testing
        cspunit2:
          title: "(old) CS Principles Unit 2 - The Internet"
          description: In this unit, students extend their understanding of the internet and how it functions by building off the concepts learned when sending bits in Unit 1. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Algorithms Detour - Hard Problems TSP:
              name: Hard Problems - The Traveling Salesperson Problem
            Algorithms Detour - How Routers Learn:
              name: How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Alice and Bob and Asymmetric Keys:
              name: Asymmetric Keys - Cups and Beans
            Cracking the Code:
              name: Cracking the Code
            DNS in the Real World:
              name: DNS in the Real World
            Encryption Algorithms:
              name: Keys and Passwords
            HTTP and Abstraction:
              name: HTTP and Abstraction on the Internet
            Invent an Addressing Protocol:
              name: Invent an Addressing Protocol
            One Way Functions - Ice Cream Vans:
              name: One-Way Functions - The WiFi Hotspot Problem
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Public Key Crypto:
              name: Public Key Cryptography
            Routers and Redundancy:
              name: Routers and Redundancy
            Tell Me a Secret - Encrypting Text:
              name: The Need for Encryption
            The Internet:
              name: The Internet Is for Everyone
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
          student_description: In this unit, students extend their understanding of the internet and how it functions by building off the concepts learned when sending bits in Unit 1. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
        algebraPD2a:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Big Game - Animation:
              name: Big Game - Animation
            Big Game - Booleans:
              name: Big Game - Booleans
            Big Game - Collision Detection:
              name: Big Game - Collision Detection
            Big Game - Player Movement:
              name: Big Game - Player Movement
            Big Game - Variables:
              name: Big Game - Variables
            Booleans:
              name: Booleans
            Defining Variables:
              name: Defining Variables
            Evaluation Blocks:
              name: Evaluation Blocks
            Free Play:
              name: Free Play
            Luigi's Pizza:
              name: Luigi's Pizza
            Rocket-Height:
              name: Rocket-Height
            Sam the Bat:
              name: Sam the Bat
            Strings and Images:
              name: Strings and Images
            The Design Recipe:
              name: The Design Recipe
            Big GAme - Collision Detection:
              name: Big Game - Collision Detection
          student_description: 'Phase 2 Online: Blended Summer Study'
        allthethings:
          title: All the Things!
          description: All the level types for UI testing. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for this script).
          description_short: All the level types for UI testing
          description_audience: ''
          lesson_groups: {}
          lessons:
            Anonymous student survey:
              name: Anonymous student survey
            Anonymous student survey 2:
              name: Anonymous student survey 2
            AppLab:
              name: AppLab
            Artist:
              name: Artist
            Bee:
              name: Bee
            Bounce:
              name: Bounce
            CSinA:
              name: CSinA
            Farmer:
              name: Farmer
            Flappy:
              name: Flappy
            Free Response:
              name: Free Response
            Gamelab:
              name: Gamelab
            Jigsaw:
              name: Jigsaw
            Long assessment:
              name: Long assessment
            Markdown Details:
              name: Markdown Details
            Match:
              name: Match
            Maze:
              name: Maze
            Minecraft:
              name: Minecraft
            Multi:
              name: Multi
            Multi2:
              name: Multi2
            Netsim:
              name: Netsim
            Odometer:
              name: Odometer
            Online PD:
              name: Online PD
            Pixelation:
              name: Pixelation
            PlayLab:
              name: PlayLab
            Public Key Cryptography:
              name: Public Key Cryptography
            Rich long assessment:
              name: Rich long assessment
            Sample PLC Assessment:
              name: Sample PLC Assessment
            Star wars:
              name: Star wars
            Studio:
              name: Studio
            Swapped Levels:
              name: Swapped Levels
            Text Compression:
              name: Text Compression
            TextMatch:
              name: TextMatch
            Web Lab:
              name: Web Lab
            Multi page assessment:
              name: Multi page assessment
            Single page assessment:
              name: Single page assessment
            Standalone video:
              name: Standalone video
            Curriculum Reference:
              name: Curriculum Reference
            Sprite Lab:
              name: Sprite Lab
            Dance Lab:
              name: Dance Lab
            Mini Rubric:
              name: Mini Rubric
            Pluralsight Test:
              name: Pluralsight Test
            Externals Optionally Displayed as Unplugged:
              name: Externals Optionally Displayed as Unplugged
            Bubble Choice:
              name: Bubble Choice
            Contained Levels:
              name: Contained Levels
            ML Fish:
              name: ML Fish
            AI Lab:
              name: AI Lab
            Java Lab:
              name: Java Lab
            lesson-47:
              name: Example CSP Assessment
          student_description: All the level types for UI testing. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for this script).
          name: allthethings
        algebraPD2b:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Booleans:
              name: Booleans
            Course Overview:
              name: Course Overview
            Defining Functions:
              name: Defining Functions
            Defining Variables:
              name: Defining Variables
            'Eval: Conditionals':
              name: 'Eval: Conditionals'
            Evaluation Blocks:
              name: Evaluation Blocks
            Next Steps:
              name: Next Steps
            Rocket-Height:
              name: Rocket-Height
            Strings and Images:
              name: Strings and Images
            Teacher Dashboard:
              name: Teacher Dashboard
            Writing Contracts:
              name: Writing Contracts
          student_description: 'Phase 2 Online: Blended Summer Study'
        cspfacilitator:
          title: 'CS Principles Facilitator Workshop '
          description: Online levels for PD workshop
          description_short: Online levels for PD workshop
          description_audience: ''
          lesson_groups: {}
          lessons:
            App Lab:
              name: App Lab
            Broadcast Lesson:
              name: Broadcast Lesson
            Internet Simulator:
              name: Internet Simulator
            Pixelation Widget:
              name: Pixelation Widget
            Text Compression Lesson:
              name: Text Compression Lesson
            Text Compression Widget:
              name: Text Compression Widget
            Welcome!:
              name: Welcome!
          student_description: Online levels for PD workshop
        K5-OnlinePD:
          title: Teaching Computer Science Fundamentals (2017)
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Computer Science Fundamentals:
              name: Computer Science Fundamentals
            Getting Started:
              name: Getting Started
            Looking Ahead:
              name: Looking Ahead
            'Mastering the Basics: Conditionals':
              name: 'Mastering the Basics: Conditionals'
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
            'Mastering the Basics: Functions':
              name: 'Mastering the Basics: Functions'
            'Mastering the Basics: Loops':
              name: 'Mastering the Basics: Loops'
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
            Next Steps:
              name: Next Steps
            Planning:
              name: Planning
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          name: K5-OnlinePD
        ECSPD2:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
          student_description: 'Phase 2 Online: Blended Summer Study'
        equityPD:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          lesson_groups: {}
          lessons:
            Equity PD:
              name: Equity PD
            Necessary Background:
              name: Necessary Background
          student_description: How to lead a discussion on equity in a Code.org PD
        algebraPD2:
          title: CS in Algebra Part 2
          description: Academic Year Support
          description_short: Academic Year Support
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson Prep:
              name: Lesson Prep
            Teacher Dashboard:
              name: Teacher Dashboard
            Teaching with Puzzles:
              name: Teaching with Puzzles
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: The Design Recipe
            Welcome!:
              name: Welcome!
          student_description: Academic Year Support
        sciencePD2b:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
          student_description: 'Phase 2 Online: Blended Summer Study'
        equity-pd:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          description_audience: ''
          lesson_groups: {}
          lessons:
            Codeorg Equity PD:
              name: Code.org Equity PD
            Necessary Background:
              name: Necessary Background
          student_description: How to lead a discussion on equity in a Code.org PD
        science-PD2:
          title: Computer Science in Science PD Phase 2b
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          description_audience: ''
          lesson_groups: {}
          lessons:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
          student_description: Phase 2 Online Blended Summer Study
        Equity-OnlinePD:
          title: Creating More Equitable Computer Science Classrooms
          description: Develop strategies for creating equity in your classroom with this free, self-paced online course.
          description_short: Develop equitable teaching strategies with this free, self-paced online course.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Creating Equitable Learning Environments:
              name: Creating Equitable Learning Environments
            Getting Started:
              name: Getting Started
            Introduction to Equity:
              name: Introduction to Equity
            Next Steps:
              name: Next Steps
          student_description: Develop strategies for creating equity in your classroom with this free, self-paced online course.
        sciencePD2b-iZone:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
          student_description: 'Phase 2 Online: Blended Summer Study'
        ECSPD2-iZone:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
          description_audience: ''
          student_description: 'Phase 2 Online: Blended Summer Study'
        ECSPD2-NexTech:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
          description_audience: ''
          student_description: 'Phase 2 Online: Blended Summer Study'
        CSPPD2:
          title: 'Computer Science Principles PD: Blended Summer Study'
          description: 8-hour online PD that builds on the 5-day in-person experience and helps teachers prepare for the beginning of the semester
          description_short: 'Blended Summer Study: 8 hour online'
          lesson_groups: {}
          lessons:
            Getting Started:
              name: Getting Started
            Lesson Chunk 1- Sending Binary Messages:
              name: Lesson Chunk 1- Sending Binary Messages
            Lesson Chunk 2- Encoding and Sending Numbers:
              name: Lesson Chunk 2- Encoding and Sending Numbers
            Lesson Chunk 3- Encoding and Sending Text:
              name: Lesson Chunk 3- Encoding and Sending Text
            Lesson Chunk 4- Compressing and Storing Information:
              name: Lesson Chunk 4- Compressing and Storing Information
            Practice PT:
              name: Practice PT
            Welcome to the Course!:
              name: Welcome to the Course!
            Wrap Up and Next Steps:
              name: Wrap Up and Next Steps
          student_description: 8-hour online PD that builds on the 5-day in-person experience and helps teachers prepare for the beginning of the semester
        odometer:
          title: Odometer Widget
          description: Use the Odometer widget to control odometers with various number bases. Binary, Decimal and Hexadecimal are the most common number systems to see in computer science.
          description_short: Use the Odometer widget to control odometers with various number bases.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Odometer Widget:
              name: Odometer Widget
          student_description: Use the Odometer widget to control odometers with various number bases. Binary, Decimal and Hexadecimal are the most common number systems to see in computer science.
        asUnplugged:
          title: Afterschool Unplugged
          description: Afterschool Unplugged is designed to teach computational thinking and computer science ideas through offline games and crafts. Created with informal classrooms in mind, these lessons are fantastic on their own, or in combination with Afterschool 1 . This course focuses on learning through entertainment. Recommended for grades K-8.
          description_short: Short unplugged course designed for informal learning
          description_audience: Ages 6-13
          lesson_groups: {}
          lessons:
            Binary Bracelets:
              name: Binary Bracelets
            Building a Foundation:
              name: Building a Foundation
            Getting Loopy:
              name: Getting Loopy
            Graph Paper Programming:
              name: Graph Paper Programming
            Happy Maps:
              name: Happy Maps
            Move it, Move it:
              name: Move it, Move it
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Songwriting:
              name: Songwriting
            The Big Event:
              name: The Big Event
          student_description: Afterschool Unplugged is designed to teach computational thinking and computer science ideas through offline games and crafts. Created with informal classrooms in mind, these lessons are fantastic on their own, or in combination with Afterschool 1 . This course focuses on learning through entertainment. Recommended for grades K-8.
        afterschool1:
          title: Afterschool 1
          description: Afterschool 1 is designed to for informal classrooms where students vary in age and assessment is not required. This course focuses on learning through entertainment, with varying options for implementation, all in 10 sessions or less. Use alone or with Afterschool Unplugged. Recommended for grades 3-8.
          description_short: Short course designed for informal learning
          description_audience: Ages 7-13
          stage: {}
          lessons: {}
        vigenere:
          title: Vigenere Cipher Widget
          description: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_short: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Vigenere:
              name: Vigenere
          student_description: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
        algebraPD3a:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra blended online school year study'
          description_short: 'Phase 3 (Part 1): CS in Algebra blended online school year study'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson Prep:
              name: Lesson Prep
            Updates - The Big Game and Projects:
              name: Updates - The Big Game and Projects
            Updates - The Design Recipe:
              name: Updates - The Design Recipe
            Updates - Tweaks and Polish:
              name: Updates - Tweaks and Polish
          student_description: 'Phase 3 (Part 2): CS in Algebra blended online school year study'
        sciencePD3_pre1:
          title: CS in Science PD3 Before 1st In-Person
          description: 'Phase 3: Academic Year Development (Segment One)'
          description_short: 'Phase 3: Academic Year Development Pre 1'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Prep With Your Modules:
              name: Prep With Your Modules
            The TLO:
              name: The TLO
            Welcome Back!:
              name: Welcome Back!
          student_description: 'Phase 3: Academic Year Development (Segment One)'
        frequency_analysis:
          title: Frequency Analysis Widget
          description: Use the Frequency Analysis Widget to analyze letter frequencies in an input text compared to expected frequencies for standard English. Use that comparison to explore cracking Shift and Substitution Ciphers.
          description_short: Use the Frequency Analysis Widget to analyze letter frequencies in a text compared to expected frequencies. Crack Shift and Substitution Ciphers.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Frequency Analysis:
              name: Frequency Analysis
          student_description: Use the Frequency Analysis Widget to analyze letter frequencies in an input text compared to expected frequencies for standard English. Use that comparison to explore cracking Shift and Substitution Ciphers.
        ECSPD3-Unit2:
          title: 'Exploring Computer Science: Unit 2'
          description: Online Professional Development Course
          description_short: Unit 2 Online PD
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 2:
              name: Intro to Unit 2
            Lesson Overviews:
              name: Lesson Overviews
            Teaching Strategies:
              name: Teaching Strategies
            Unit 2 Challenge:
              name: Unit 2 Challenge
          student_description: Online Professional Development Course
        ECSPD3-Unit3:
          title: 'Exploring Computer Science: Unit 3'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 3:
              name: Intro to Unit 3
            Teaching Strategies:
              name: Teaching Strategies
            Unit 3 Challenge:
              name: Unit 3 Challenge
            Unit 3 Day-by-Day:
              name: Unit 3 Day-by-Day
          student_description: Academic Year Development
        ECSPD3-Unit4:
          title: 'Exploring Computer Science: Unit 4'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 4:
              name: Intro to Unit 4
            Teaching Strategies:
              name: Teaching Strategies
            Unit 4 Challenge:
              name: Unit 4 Challenge
            Unit 4 Day-by-Day:
              name: Unit 4 Day-by-Day
          student_description: Academic Year Development
        ECSPD3-Unit5:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Introduction to the Unit 5 Challenge:
              name: Introduction to the Unit 5 Challenge
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
            Unit 5 lessons:
              name: Unit 5 lessons
          student_description: Academic Year Development
        ECSPD3-Unit6:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            Alternative Ideas for Unit 6:
              name: Alternative Ideas for Unit 6
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: Unit 6 Challenge
            Unit 6 Overview:
              name: Unit 6 Overview
            Unit 6 lessons:
              name: Unit 6 lessons
          student_description: Academic Year Development
        cspunit4draft:
          title: CS Principles Unit 4 - Data
          description: "Collect, analyze, and extract knowledge from data by programming and\r\nbuilding apps. Process data imported from other sources and also pull\r\ndata from live data APIs."
          description_short: Data
          description_audience: ''
          lesson_groups: {}
          lessons:
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Compiling Data:
              name: Compiling Data
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Creating Summary Tables:
              name: Creating Summary Tables
            Data, Security, and Privacy:
              name: Data, Security, and Privacy
            Designing Data Collection:
              name: Designing Data Collection
            Designing for Your User:
              name: Designing for Your User
            Discover a Data Story:
              name: Discover a Data Story
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            How is Data Collected?:
              name: How is Data Collected?
            Import, Export, and Visualize Data:
              name: Import, Export, and Visualize Data
            Interpreting Data Visualizations:
              name: Interpreting Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Permanent Data Storage:
              name: Permanent Data Storage
            Permanent Data Storage and Clicker Completion:
              name: Permanent Data Storage and Clicker Completion
            'Practice Create PT: Data App':
              name: 'Practice Create PT: Data App'
            Privacy in a Digital World:
              name: Privacy in a Digital World
            Privacy vs Utility:
              name: Privacy vs Utility
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Reading Records:
              name: Reading Records
            Search Terms:
              name: Search Terms
            Unique IDs, Delete and Update Records:
              name: Unique IDs, Delete and Update Records
            Using Data in the Real World:
              name: Using Data in the Real World
            Web Requests and APIs:
              name: Web Requests and APIs
            What Data Can Tell Us:
              name: What Data Can Tell Us
            Why Make Apps?:
              name: Why Make Apps?
          student_description: "Collect, analyze, and extract knowledge from data by programming and\r\nbuilding apps. Process data imported from other sources and also pull\r\ndata from live data APIs."
        ScienceP3OLPT2:
          title: Computer Science in Science PD Phase 3A Post Work
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          lessons:
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Thinking About Implementation:
              name: Thinking About Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        algebraPD3b:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_short: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close and Next Steps:
              name: Close and Next Steps
            Getting Started:
              name: Getting Started
            Teaching Support - Lessons 1-3:
              name: Teaching Support - Lessons 1-3
            Teaching Support - Lessons 13-16:
              name: Teaching Support - Lessons 13-16
            Teaching Support - Lessons 17-20:
              name: Teaching Support - Lessons 17-20
            Teaching Support - Lessons 4-7:
              name: Teaching Support - Lessons 4-7
            Teaching Support - Lessons 8-12:
              name: Teaching Support - Lessons 8-12
          student_description: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
        CSPPD3-Unit2:
          title: 'Computer Science Principles: Unit 2 PD'
          description: Online Exploration of CSP Unit 2
          description_short: Online Exploration of CSP Unit 2
          description_audience: ''
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 2 Overview:
              name: Unit 2 Overview
          student_description: Online Exploration of CSP Unit 2
        duino:
          title: Experimenting with Arduino stuff
          description: Testing some tools for teaching with Arduinos
          lesson_groups: {}
          lessons:
            Basic Circuits:
              name: Basic Circuits
            Blinky Lights:
              name: Blinky Lights
            JunkBot:
              name: JunkBot
            Making Music:
              name: Making Music
          student_description: Testing some tools for teaching with Arduinos
        Special Fun:
          title: Special Fun
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          description: ''
          lesson_groups: {}
          lessons:
            Halloween 2015:
              name: Halloween 2015
          student_description: ''
        SpecialSeries:
          title: Special Levels
          description: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          lesson_groups: {}
          lessons:
            Spring 2016:
              name: Spring 2016
            Halloween 2015:
              name: Halloween 2015
          student_description: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
        iceage:
          title: Ice Age Play Lab
          description: Create a story or make a game with Ice Age Play Lab!
          description_short: Create a story or make a game with Ice Age Play Lab!
          description_audience: ''
          lesson_groups: {}
          lessons:
            Ice Age Play Lab:
              name: Ice Age Play Lab
          student_description: Create a story or make a game with Ice Age Play Lab!
          name: iceage
        CSPPD3-Unit3:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Chunk 1 Overview:
              name: Chunk 1 Overview
            Chunk 2 Overview:
              name: Chunk 2 Overview
            Chunk 3 Overview:
              name: Chunk 3 Overview
            Chunk 4 Overview:
              name: Chunk 4 Overview
            Chunk 5 Overview:
              name: Chunk 5 Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Practice Performance Task:
              name: Practice Performance Task
            Share out and Submit:
              name: Share out and Submit
            Unit 3 Overview:
              name: Unit 3 Overview
          student_description: Online Exploration of CSP Unit 3
        cspunit3temp:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introduction to Arrays:
              name: Introduction to Arrays
            Loops and Simulations:
              name: Loops and Simulations
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            While Loops:
              name: While Loops
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        CSP-Unit3-Support:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          lesson_groups: {}
          lessons:
            Chunk 1 Overview:
              name: Chunk 1 Overview
            Chunk 2 Overview:
              name: Chunk 2 Overview
            Chunk 3 Overview:
              name: Chunk 3 Overview
            Chunk 4 Overview:
              name: Chunk 4 Overview
            Chunk 5 Overview:
              name: Chunk 5 Overview
            Practice Performance Task:
              name: Practice Performance Task
            Unit 3 Overview:
              name: Unit 3 Overview
          student_description: Online Exploration of CSP Unit 3
        gumball:
          title: Gumball Play Lab
          description: Create a story or make a game with Gumball Play Lab!
          description_short: Create a story or make a game with Gumball Play Lab!
          lesson_groups: {}
          lessons:
            Gumball Play Lab:
              name: Gumball Play Lab
          description_audience: ''
          student_description: Create a story or make a game with Gumball Play Lab!
          name: gumball
        starwars:
          title: 'Star Wars: Building a Galaxy With Code (Javascript)'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2015:
              name: 'Star Wars: Building a Galaxy With Code (JavaScript)'
          student_description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          name: starwars
        starwarsblocks:
          title: 'Star Wars: Building a Galaxy With Code (Blockly)'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2015:
              name: 'Star Wars: Building a Galaxy With Code (Blockly)'
          student_description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          name: starwarsblocks
        mc:
          title: Minecraft Hour of Code
          description: Use blocks of code to take Steve or Alex on an adventure through this Minecraft world.
          description_short: Explore a Minecraft world through code.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Hour of Code 2015:
              name: Minecraft Hour of Code
          student_description: Use blocks of code to take Steve or Alex on an adventure through this Minecraft world.
          name: mc
        oceans:
          title: AI for Oceans
          description: Learn how AI and machine learning can be used to address world problems.
          description_short: Learn how AI and machine learning can be used to address world problems.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Oceans:
              name: AI for Oceans
          student_description: Learn how AI and machine learning can be used to address world problems.
          name: oceans
        CSPPD3-Unit3-pt2:
          title: 'Computer Science Principles: Unit 3 PD Challenges'
          description: Online Exploration of CSP Unit 3-- Lesson Challenges
          description_short: Online Exploration of CSP Unit 3-- Lesson Challenges
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Share out and Submit:
              name: Share out and Submit
          student_description: Online Exploration of CSP Unit 3-- Lesson Challenges
        ScienceP3OLPT3:
          title: Computer Science in Science PD Pre-Phase 3B
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          lesson_groups: {}
          lessons:
            "(optional) Refresh your connection to Complex Adaptive Systems":
              name: "(optional) Refresh your connection to Complex Adaptive Systems"
            Assessing Computer Models:
              name: Assessing Computer Models
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
          student_description: Phase 3 Academic Year Development
        cspunit5:
          title: "(old) CS Principles Unit 5 - Performance Tasks"
          description: This unit covers the preparation and completion of the Explore and Create Performance Tasks.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
          student_description: This unit covers the preparation and completion of the Explore and Create Performance Tasks.
        cspunit4:
          title: "(old) CS Principles Unit 4 - Data"
          description: Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. The data-rich world we live in also introduces many complex questions related to public policy, law, ethics and societal impact. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Discover a Data Story:
              name: Discover a Data Story
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Identifying People with Data:
              name: Identifying People with Data
            Intro to Data:
              name: Introduction to Data
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            The Cost of Free:
              name: The Cost of Free
            What is Big Data?:
              name: What is Big Data?
          student_description: Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. The data-rich world we live in also introduces many complex questions related to public policy, law, ethics and societal impact. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        CSPPD3-Unit4:
          title: 'Computer Science Principles: Unit 4 PD'
          description: Online Support for CSP Unit 4
          description_short: Support for CSP Unit 4
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Chapter 1 Overview:
              name: Chapter 1 Overview
            Chapter 2 Overview:
              name: Chapter 2 Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Practice Performance Tasks:
              name: Practice Performance Tasks
            Share out and Submit:
              name: Share out and Submit
            Unit 4 Overview:
              name: Unit 4 Overview
          student_description: Online Support for CSP Unit 4
        cspunit6draft:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, and it concludes with a sampling of example projects that can be built using these tools.
          description_short: Data Apps
          description_audience: ''
          lesson_groups: {}
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Deleting Records:
              name: Deleting Records
            Final Project:
              name: Final Project
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Sample Apps:
              name: Sample Apps
            Updating Records:
              name: Updating Records
            Visualizing Data:
              name: Visualizing Data
          student_description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, and it concludes with a sampling of example projects that can be built using these tools.
        CSPPD3-Unit5:
          title: 'Computer Science Principles: Unit 5 PD'
          description: Online Support for CSP Unit 5
          description_short: Support for CSP Unit 5
          lesson_groups: {}
          lessons:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Create PT Breakdown:
              name: Create PT Breakdown
            Explore PT Breakdown:
              name: Explore PT Breakdown
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
          student_description: Online Support for CSP Unit 5
        cspunit6:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Deleting Records:
              name: Deleting Records
            Final Project:
              name: Final Project
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Sample Apps:
              name: Sample Apps
            Updating Records:
              name: Updating Records
            Visualizing Data:
              name: Visualizing Data
          student_description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
        AlgebraA:
          title: 'Computer Science in Algebra: Course A'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Calc: Defining Variables':
              name: 'Calc: Defining Variables'
            'Calc: Evaluation Blocks':
              name: 'Calc: Evaluation Blocks'
            'Eval: Defining Functions':
              name: 'Eval: Defining Functions'
            'Eval: Functions':
              name: 'Eval: Functions'
            'Eval: Strings and Images':
              name: 'Eval: Strings and Images'
            'Eval: Writing Contracts':
              name: 'Eval: Writing Contracts'
            'Play Lab: Defining Functions':
              name: 'Play Lab: Defining Functions'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts'
            'Unplugged: Fast Functions':
              name: 'Unplugged: Fast Functions'
            'Unplugged: The Design Recipe':
              name: 'Unplugged: The Design Recipe'
          student_description: Learn Functional Programming through Algebra
        AlgebraB:
          title: 'Computer Science in Algebra: Course B'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Eval: Boolean Operators':
              name: 'Eval: Boolean Operators'
            'Eval: Conditionals':
              name: 'Eval: Conditionals'
            'Play Lab: Animation (Big Game)':
              name: 'Play Lab: Animation (Big Game)'
            'Play Lab: Boolean (Big Game)':
              name: 'Play Lab: Boolean (Big Game)'
            'Play Lab: Booleans':
              name: 'Play Lab: Booleans'
            'Play Lab: Collision Detection (Big Game)':
              name: 'Play Lab: Collision Detection (Big Game)'
            'Play Lab: Defining Variables (Big Game)':
              name: 'Play Lab: Defining Variables (Big Game)'
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Distance Formula'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'Unplugged: Conditionals and Piecewise Functions'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'Unplugged: Video Games and Coordinate Planes'
          student_description: Learn Functional Programming through Algebra
        gamelab-hackathon:
          title: Gamelab Hackathon
          description: A place to try things out in Game Lab
          description_short: Gamelab Hackathon
          lesson_groups: {}
          lessons:
            Middle_School_Hackathon:
              name: Middle_School_Hackathon
          student_description: A place to try things out in Game Lab
        algebraPD1:
          title: CS in Algebra Part 1
          description: Teach Algebra through Functional Programming
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
          student_description: Teach Algebra through Functional Programming
        algebraPD3c:
          title: Computer Science in Algebra PD
          description: CS in Algebra end of year reflection
          description_short: CS in Algebra end of year reflection
          description_audience: ''
          lesson_groups: {}
          lessons:
            Getting Started:
              name: Getting Started
            Planning For the Future:
              name: Planning For the Future
            Sharing Student Work:
              name: Sharing Student Work
          student_description: CS in Algebra end of year reflection
        csp1-2017:
          title: CSP Unit 1 - The Internet ('17-'18)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          lessons:
            Binary Numbers:
              name: Binary Numbers
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Encoding and Sending Formatted Text:
              name: Encoding and Sending Formatted Text
            HTTP and Abstraction:
              name: HTTP and Abstraction
            Number Systems:
              name: Number Systems
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Personal Innovations:
              name: Personal Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Routers and Redundancy:
              name: Routers and Redundancy
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Numbers:
              name: Sending Numbers
            The Internet:
              name: The Internet
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Post-Course Survey:
              name: Post-Course Survey
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
        csp2-2017:
          title: CSP Unit 2 - Digital Information ('17-'18)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1:
              display_name: 'Chapter 1: Encoding and Compressing Complex Information'
            csp2_2:
              display_name: 'Chapter 2: Manipulating and Visualizing Data'
            cspSurvey:
              display_name: Survey
          lessons:
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Discover a Data Story:
              name: Discover a Data Story
            Encode a Complex Thing:
              name: Encode a Complex Thing
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Intro to Data:
              name: Intro to Data
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Text Compression:
              name: Text Compression
            Unit 2 Chapter 1 Assessment:
              name: Unit 2 Chapter 1 Assessment
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Practice PT - Encode an Experience:
              name: Practice PT - Encode an Experience
            Post-Course Survey:
              name: Post-Course Survey
          student_description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        csp3-2017:
          title: CSP Unit 3 - Intro to Programming ('17-'18)
          description: "This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.\r\n\r\nThis unit was last updated October 30th, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating Functions:
              name: Creating Functions
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
            CSP End-of-Semester Mid-course survey:
              name: CSP End-of-Semester Mid-course survey
            CSP Mid-course survey:
              name: CSP Mid-course survey
            Please complete the CSP Mid-course survey!:
              name: Please complete the CSP Mid-course survey!
            Post-Course Survey:
              name: Post-Course Survey
          student_description: "This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.\r\n\r\nThis unit was last updated October 30th, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp4-2017:
          title: CSP Unit 4 - Big Data and Privacy ('17-'18)
          description: "The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1:
              display_name: 'Chapter 1: The World of Big Data and Encryption'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            Alice and Bob and Asymmetric Keys:
              name: Alice and Bob and Asymmetric Keys
            Cracking the Code:
              name: Cracking the Code
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
            Identifying People with Data:
              name: Identifying People with Data
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Public Key Crypto:
              name: Public Key Crypto
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Simple Encryption:
              name: Simple Encryption
            The Cost of Free:
              name: The Cost of Free
            What is Big Data?:
              name: What is Big Data?
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
            Practice PT - Big Data and Security Dilemmas:
              name: Practice PT - Big Data and Security Dilemmas
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Post-Course Survey:
              name: Post-Course Survey
            Student Post-Course Survey:
              name: Student Post-Course Survey
          student_description: "The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp5-2017:
          title: CSP Unit 5 - Building Apps ('17-'18)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          lessons:
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            Digital Assistant Project:
              name: Digital Assistant Project
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: Introducing Design Mode
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: Introduction to Conditional Logic
            Introduction to Digital Assistants:
              name: Introduction to Digital Assistants
            Loops and Simulations:
              name: Loops and Simulations
            Multi-screen Apps:
              name: Multi-screen Apps
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            Understanding Program Flow and Logic:
              name: Understanding Program Flow and Logic
            User Input and Strings:
              name: User Input and Strings
            Using Variables in Apps:
              name: Using Variables in Apps
            While Loops:
              name: While Loops
            Edited lessons ABOVE this line:
              name: Edited lessons ABOVE this line
            Buttons and Events:
              name: Buttons and Events
            Make Your Own Multi-Screen App:
              name: Make Your Own Multi-Screen App
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            "'If' Statements Unplugged":
              name: "'If' Statements Unplugged"
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Getting started with If Statements:
              name: Getting started with If Statements
            Unit 3 Chapter 1 Assessment 3:
              name: Unit 3 Chapter 1 Assessment 3
            If statements:
              name: If statements
            Unit 3 Assessment 3:
              name: Unit 3 Assessment 3
            Unit 3 Assessment 4:
              name: Unit 3 Assessment 4
            If-else-if and Conditional Logic:
              name: If-else-if and Conditional Logic
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Possibly use later:
              name: Possibly use later
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 5 - Practice AP questions:
              name: Unit 5 Assessment 5 - Practice AP questions
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Multi-Screen Apps:
              name: Multi-Screen Apps
            '"if" Statements Unplugged':
              name: '"if" Statements Unplugged'
            Boolean Expressions and "if" Statements:
              name: Boolean Expressions and "if" Statements
            Post-Course Survey:
              name: Post-Course Survey
          student_description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csp6:
          title: CSP Unit 6 - AP Performance Tasks
          description: This unit covers the preparation and completion of the Create and Explore Performance Tasks.
          description_short: Lessons guide students to prepare for and complete the AP Performance Tasks.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
          student_description: This unit covers the preparation and completion of the Create and Explore Performance Tasks.
        CSDU3-Draft:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: Temp place to work on U3 of Disco
          description_short: Programming
          description_audience: ''
          lessons:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Collision Detection:
              name: Collision Detection
            Collisions:
              name: Collisions
            Complex Conditionals:
              name: Complex Conditionals
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Drawing in Game Lab:
              name: Drawing in Game Lab
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Sprite Movement Methods:
              name: Sprite Movement Methods
            Sprites and Images:
              name: Sprites and Images
            Sprites and Properties:
              name: Sprites and Properties
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Functions:
              name: Functions
            Platform Jumper:
              name: Platform Jumper
            Defender:
              name: Defender
            'Project: Build a Game':
              name: 'Project: Build a Game'
            Velocity:
              name: Velocity
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
        2016_sciencePD_phase1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: In Partnership with Project GUTS
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
          student_description: In Partnership with Project GUTS
        TEMP CSD Unit 3:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: ''
          description_short: Programming
          description_audience: ''
          lessons:
            Drawing in Game Lab:
              name: Drawing in Game Lab
        CSF_Secret_Sample:
          title: Secret Sample
          description: Test of new educational philosophy
          description_short: This is a secret...shhhhh
          description_audience: Ages 8-18
          lesson_groups: {}
          lessons:
            Sample Stage:
              name: Sample Stage
          student_description: Test of new educational philosophy
        ECSPD1:
          title: ECS Part 1
          description: Two hour introduction to your Professional Learning Program for the ECS Version 5 curriculum
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Background and Context:
              name: Background and Context
            'Classroom and Workshop Style ':
              name: 'Classroom and Workshop Style '
            ECS Curriculum:
              name: ECS Curriculum
            Welcome to Phase 1!:
              name: Welcome to Phase 1!
            Wrap Up:
              name: Wrap Up
            Classroom and workshop style:
              name: Classroom and workshop style
            'Classroom and workshop style ':
              name: 'Classroom and workshop style '
          student_description: Two hour introduction to your Professional Learning Program for the ECS Version 5 curriculum
        algebraFacilitator:
          title: Computer Science in Algebra Facilitator Pre Work
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          lesson_groups: {}
          lessons:
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
          student_description: Teach Algebra through Functional Programming
        sciencePD1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
          student_description: In Partnership with Project GUTS
        cspoptional:
          title: CS Principles Optional Lessons
          description: Optional lessons and content across all of the CS Principles units are listed here
          description_short: Optional
          description_audience: ''
          lesson_groups: {}
          lessons:
            Algorithms Detour - How Routers Learn:
              name: Algorithms Detour - How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Unit 1 - Encoding Numbers in the Real World:
              name: Unit 1 - Encoding Numbers in the Real World
            Unit 1 - Sending Bits in the Real World:
              name: Unit 1 - Sending Bits in the Real World
            Unit 1 - Algorithms Detour - Minimum Spanning Tree:
              name: Unit 1 - Algorithms Detour - Minimum Spanning Tree
            Unit 1 - Algorithms Detour - Shortest Path:
              name: Unit 1 - Algorithms Detour - Shortest Path
            Unit 1 - How Routers Learn:
              name: Unit 1 - How Routers Learn
            Unit 4 - Hard Problems - The Traveling Salesperson Problem:
              name: Unit 4 - Hard Problems - The Traveling Salesperson Problem
            Unit 4 - One-Way Functions - The WiFi Hotspot Problem:
              name: Unit 4 - One-Way Functions - The WiFi Hotspot Problem
          student_description: Optional lessons and content across all of the CS Principles units are listed here
        cspunit1-support:
          title: Online Support for CSP Unit 1
          description: This is a test Professional Learning Course
          description_audience: ''
          description_short: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Chapter Overviews:
              name: Chapter Overviews
            Encoding and Sending Numbers:
              name: Encoding and Sending Numbers
            Intro to the Unit:
              name: Intro to the Unit
            Running a Constructive Classroom:
              name: Running a Constructive Classroom
            Sending Binary Messages:
              name: Sending Binary Messages
            Strategies for Student Writing:
              name: Strategies for Student Writing
            Supporting Peer Learning:
              name: Supporting Peer Learning
            'Tool Talk: Intro to Netsim':
              name: 'Tool Talk: Intro to Netsim'
          student_description: This is a test Professional Learning Course
        test-teaching-ap-cs-unit-1:
          title: Test CPS PD
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            test Unit 1 content module Alpha:
              name: test Unit 1 content module Alpha
            test Unit 1 content module Bravo:
              name: test Unit 1 content module Bravo
            test Unit 1 content module Charlie:
              name: test Unit 1 content module Charlie
            test Unit 1 practice module Delta:
              name: test Unit 1 practice module Delta
            test Unit 1 practice module Echo:
              name: test Unit 1 practice module Echo
            test Unit 1 practice module Foxtrot:
              name: test Unit 1 practice module Foxtrot
            test Unit 1 required reading:
              name: test Unit 1 required reading
          student_description: ''
        allthehiddenthings:
          title: All the Hidden Things!
          description: Unreleased level types for UI testing as admin
          description_short: Unreleased level types for UI testing as admin
          lesson_groups: {}
          lessons:
            Contained Levels:
              name: Contained Levels
            Game Lab:
              name: Game Lab
          student_description: Unreleased level types for UI testing as admin
        cspunit1-support-test:
          title: CSP Unit 1 teacher support
          description: Online Supports for CSP Unit 1
          description_audience: ''
          description_short: ''
          lesson_groups: {}
          lessons:
            Unit 1 Overview:
              name: Unit 1 Overview
          student_description: Online Supports for CSP Unit 1
        cspunit1-tools:
          title: netsim task completion
          description: introduction to the internet simulator and a discussion of how we use it to teach the internet
          lesson_groups: {}
          lessons:
            netsim:
              name: netsim
          student_description: introduction to the internet simulator and a discussion of how we use it to teach the internet
        csp-facilitators:
          title: CSP Tool Overview
          description: A collection of tools from the CS Principles course. These levels provide a glimpse into the tools we use throughout the curriculum to
          description_short: Introduction to CS Principles for new Facilitators
          description_audience: ''
          lesson_groups: {}
          lessons:
            Introduction to Events:
              name: Introduction to Events
            Introduction to Text Compression:
              name: Introduction to Text Compression
            Turtle Programming:
              name: Turtle Programming
          student_description: A collection of tools from the CS Principles course. These levels provide a glimpse into the tools we use throughout the curriculum to
        cspassessment:
          title: "[Deprecated] CS Principles Culminating Assessment"
          description: 'This assessment has been deprecated and is scheduled for removal in Summer of 2017.  Students may complete the test and see their own results, but a teacher will not be able to see results for students in a section.  Please use the official CSP practice exam from the College Board.  [This 55-question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.]'
          description_short: This assessment has been deprecated and is scheduled for removal in Summer of 2017.
          description_audience: ''
          lesson_groups: {}
          lessons:
            CS Principles Culminating Assessment:
              name: CS Principles Culminating Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            CSP Longitudinal Contact Request:
              name: CSP Longitudinal Contact Request
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            "[Deprecated - teacher cannot see results] CSP Culminating Assessment":
              name: "[Deprecated - teacher cannot see results] CSP Culminating Assessment"
            'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment'
            'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment'
            RQB Questions test:
              name: RQB Questions test
          student_description: 'This assessment has been deprecated and is scheduled for removal in Summer of 2017.  Students may complete the test and see their own results, but a teacher will not be able to see results for students in a section.  Please use the official CSP practice exam from the College Board.  [This 55-question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.]'
        cspexam1-mWU7ilDYM9:
          title: CS Principles Culminating Assessment - Part 1
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 1 of a two-part 50 question exam.
          description_audience: ''
          lesson_groups: {}
          lessons:
            CS Principles Culminating Assessment Part 1:
              name: CS Principles Culminating Assessment Part 1
          student_description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.'
        cspexam2-AKwgAh1ac5:
          title: CS Principles Culminating Assessment - Part 2
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.  It is part 2 of a two-part 50 question exam'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 2 of a two-part 50 question exam.
          description_audience: ''
          lesson_groups: {}
          lessons:
            CS Principles Culminating Assessment Part 2:
              name: CS Principles Culminating Assessment Part 2
          student_description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.  It is part 2 of a two-part 50 question exam'
        CSDU4-Draft:
          title: " TEMP CSD Unit 4 - The Design Process"
          description: Temp place to work on U4 of Disco
          description_short: Design Process and App Lab
          description_audience: ''
          lessons:
            Adding Functionality (optional):
              name: Adding Functionality (optional)
            Design Mode:
              name: Design Mode
            Making it Interactive:
              name: Making it Interactive
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            Discovering Users:
              name: Discovering Users
            UCD Micro Activity:
              name: UCD Micro Activity
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Re-designing a Space:
              name: Re-designing a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            User Research:
              name: User Research
            Low Fidelity Prototyping:
              name: Low Fidelity Prototyping
            Preparing for Prototype Testing:
              name: Preparing for Prototype Testing
            Prototype Testing:
              name: Prototype Testing
            Preparing for App Testing:
              name: Preparing for App Testing
            App Testing:
              name: App Testing
            Planning for Improvements:
              name: Planning for Improvements
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation Prep:
              name: App Presentation Prep
            App Presentation:
              name: App Presentation
        CSDU1-Draft:
          title: " TEMP CSD Unit 1"
          description: Temp place to work on U1 of Disco
          description_short: Problem Solving
          lessons:
            Exploring Apps:
              name: Exploring Apps
            Processing Information:
              name: Processing Information
        CSDU2-Draft:
          title: " TEMP CSD Unit 2"
          description: Temp place to work on U2 of Disco
          description_short: Web Development
          description_audience: ''
          lessons:
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Describing Webpages:
              name: Describing Webpages
            Designing Code for Computers:
              name: Designing Code for Computers
            Digital Footprint:
              name: Digital Footprint
            Images on the Web:
              name: Images on the Web
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            Quality Websites:
              name: Quality Websites
            Text on the Web:
              name: Text on the Web
            Website Design:
              name: Website Design
            Intellectual Property:
              name: Intellectual Property
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            'Personal Website: Connecting Pages':
              name: 'Personal Website: Connecting Pages'
            Classes and External Style Sheets:
              name: Classes and External Style Sheets
            Box Model and Page Layout:
              name: Box Model and Page Layout
            'Personal Website: Midway Check':
              name: 'Personal Website: Midway Check'
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Introduction to HTML:
              name: Introduction to HTML
            Headers and Lists:
              name: Headers and Lists
            Designing Web Pages:
              name: Designing Web Pages
            Holding:
              name: Holding
            Describing Web pages:
              name: Describing Web pages
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            External Style Sheets:
              name: External Style Sheets
            Usability and Accessibility:
              name: Usability and Accessibility
            Peer Review:
              name: Peer Review
            Describing Web Pages:
              name: Describing Web Pages
        CSDU5-Draft:
          title: " TEMP CSD Unit 5"
          description: Temp place to work on U5 of Disco
          description_short: Data
          stage: {}
          lessons: {}
        CSDU6-Draft:
          title: " TEMP CSD Unit 6 "
          description: Temp place to work on U6 of Disco
          description_short: Makerlab
          stage: {}
          lessons: {}
        CSF_Secret_Sample_Story:
          title: Secret Sample with Story
          description: Test of new educational philosophy with guiding storyline
          description_short: This is a secret...shhhh
          description_audience: Ages 8-18+
          lesson_groups: {}
          lessons:
            Sample Stage:
              name: Sample Stage
          student_description: Test of new educational philosophy with guiding storyline
        MikeTest:
          title: MikeTest
          description: Trying not to break anything
          description_short: Just a script for playing around
          description_audience: Ages 8-98
          lesson_groups: {}
          lessons:
            Artist Functions:
              name: Artist Functions
            Sample Stage:
              name: Sample Stage
            The same thing with named levels:
              name: The same thing with named levels
            You are a coding STAR:
              name: You are a coding STAR
          student_description: Trying not to break anything
        artistExemplar:
          title: Artist Exemplar
          description: These artist levels will knock the socks off of third graders
          description_short: How can we make the artist levels really hum?
          description_audience: Ages 8-18
          lesson_groups: {}
          lessons:
            Artist Exemplar:
              name: Artist Exemplar
          student_description: These artist levels will knock the socks off of third graders
        teachercon:
          title: TeacherCon Supports
          description: We will use this during TeacherCon to deliver supports and materials for sessions
          description_short: We will use this during TeacherCon to deliver supports and materials for sessions
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: Introduction to Teachercon
            Lesson 1,10:
              name: 'Lesson 1.10: Routers and Redundancy'
            Lesson 1,11:
              name: 'Lesson 1.11: Packets and Making a Reliable Internet'
            Lesson 1,4:
              name: 'Lesson 1.4: Number Systems (Circle Triangle Square)'
            Lesson 1,6:
              name: 'Lesson 1.6: Sending Numbers'
            Lesson 1,9:
              name: 'Lesson 1.9: Internet Addressing (Battleship)'
            Lesson 2,10:
              name: 'Lesson 2.10: Good and Bad Data Visualizations'
            Lesson 2,2:
              name: 'Lesson 2.2: Text Compression'
            Lesson 2,3:
              name: 'Lesson 2.3: Black and White Pixelation'
            Measuring Student Learning:
              name: Measuring Student Learning
          student_description: We will use this during TeacherCon to deliver supports and materials for sessions
        kinderTest:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            Kindergarten Stage 1:
              name: Kindergarten Stage 1
          student_description: ''
        gradeKinder:
          title: Kindergarten
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: Debugging
            Events:
              name: Events
            Events Unplugged:
              name: Events Unplugged
            Fuzz Fiesta:
              name: Fuzz Fiesta
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            Loops:
              name: Loops
            Loops Intro:
              name: Loops Intro
            Loops Unplugged:
              name: Loops Unplugged
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: Programming
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: Sequences & Algorithms
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            'Programming Unplugged: Happy Maps':
              name: 'Programming Unplugged: Happy Maps'
        grade4:
          title: Grade 4
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 9-99
          lessons:
            'Bee: Determine the Concept':
              name: 'Bee: Determine the Concept'
            'Bee: Functions (Course 3)':
              name: 'Bee: Functions (Course 3)'
            Build a Star Wars Game!:
              name: Build a Star Wars Game!
            Digital Citizenship:
              name: Digital Citizenship
            Explore project ideas:
              name: Explore project ideas
            'Farmer: Functions (New)':
              name: 'Farmer: Functions (New)'
            Final Project - Presentation Day:
              name: Final Project - Presentation Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            More Programming with Scratch:
              name: More Programming with Scratch
            'New Artist: Functions':
              name: 'New Artist: Functions'
            Scaffolded Project Stage (Loops, Events, Conditionals, Functions):
              name: Scaffolded Project Stage (Loops, Events, Conditionals, Functions)
            Songwriting:
              name: Songwriting
            'Unplugged: Funky Functions':
              name: 'Unplugged: Funky Functions'
        grade1:
          title: Grade 1
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: Debugging
            Events:
              name: Events
            Events Unplugged:
              name: Events Unplugged
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            Loops:
              name: Loops
            Loops Intro:
              name: Loops Intro
            Loops Unplugged:
              name: Loops Unplugged
            More Computer Science:
              name: More Computer Science
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: Programming
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: Sequences & Algorithms
            Unspotted Bugs:
              name: Unspotted Bugs
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Events Unplugged: The Big Event':
              name: 'Events Unplugged: The Big Event'
        grade5:
          title: Grade 5
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 10-110
          lesson_groups: {}
          lessons:
            'Artist: For Loops':
              name: 'Artist: For Loops'
            'Artist: Functions with Parameters':
              name: 'Artist: Functions with Parameters'
            'Artist: Variables':
              name: 'Artist: Variables'
            'Bee: For Loops':
              name: 'Bee: For Loops'
            'Bee: Functions with Parameters':
              name: 'Bee: Functions with Parameters'
            Digital Citizenship:
              name: Digital Citizenship
            Explore project ideas:
              name: Explore project ideas
            Final Project - Presentation Day:
              name: Final Project - Presentation Day
            Final Project - Review/Revise Day:
              name: Final Project - Review/Revise Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            'Play Lab: Variables':
              name: 'Play Lab: Variables'
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            'Unplugged: Envelope Variables':
              name: 'Unplugged: Envelope Variables'
            'Unplugged: For Loop Fun':
              name: 'Unplugged: For Loop Fun'
            'Unplugged: Songwriting with Parameters':
              name: 'Unplugged: Songwriting with Parameters'
          student_description: Planning Script for CSF 2.0
        ecs-unit1:
          title: ECS Unit 1
          description: 'Unit 1: Human-Computer Interaction'
          description_short: 'Unit 1: Human-Computer Interaction'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            ? |-
              Unit 1, Days 1-2
              What Is a Computer?
            : name: |-
                Unit 1, Days 1-2
                What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
            Unit 1, Days 1-2 What Is a Computer?:
              name: Unit 1, Days 1-2 What Is a Computer?
          student_description: 'Unit 1: Human-Computer Interaction'
        ecs-unit2:
          title: ECS Unit 2
          description: 'Unit 2: Problem Solving'
          description_short: 'Unit 2: Problem Solving'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 2:
              name: Intro to Unit 2
            Lesson Overviews:
              name: Lesson Overviews
            Teaching Strategies:
              name: Teaching Strategies
            Unit 2 Challenge:
              name: Unit 2 Challenge
          student_description: 'Unit 2: Problem Solving'
        ecs-unit3:
          title: ECS Unit 3
          description: 'Unit 3: Web Design'
          description_short: 'Unit 3: Web Design'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 3:
              name: Intro to Unit 3
            Teaching Strategies:
              name: Teaching Strategies
            Unit 3 Challenge:
              name: Unit 3 Challenge
            Unit 3 Day-by-Day:
              name: Unit 3 Day-by-Day
          student_description: 'Unit 3: Web Design'
        ecs-unit4:
          title: ECS Unit 4
          description: 'Unit 4: Programming'
          description_short: 'Unit 4: Programming'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 4:
              name: Intro to Unit 4
            Teaching Strategies:
              name: Teaching Strategies
            Unit 4 Challenge:
              name: Unit 4 Challenge
            Unit 4 Day-by-Day:
              name: Unit 4 Day-by-Day
          student_description: 'Unit 4: Programming'
        ecs-unit5:
          title: ECS Unit 5
          description: 'Unit 5: Computer and Data Analysis'
          description_short: 'Unit 5: Computer and Data Analysis'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Introduction to the Unit 5 Challenge:
              name: Introduction to the Unit 5 Challenge
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
            Unit 5 lessons:
              name: Unit 5 lessons
            Unit 5 Challenge:
              name: Unit 5 Challenge
            Close & Next Steps:
              name: Close & Next Steps
          student_description: 'Unit 5: Computer and Data Analysis'
        ecs-unit6:
          title: ECS Unit 6
          description: 'Unit 6: Robotics'
          description_short: 'Unit 6: Robotics'
          description_audience: ''
          lesson_groups: {}
          lessons:
            Alternative Ideas for Unit 6:
              name: Alternative Ideas for Unit 6
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: Unit 6 Challenge
            Unit 6 Overview:
              name: Unit 6 Overview
            Unit 6 lessons:
              name: Unit 6 lessons
            Close & Next Steps:
              name: Close & Next Steps
          student_description: 'Unit 6: Robotics'
        grade3:
          title: Grade 3
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            " Bee: Conditionals":
              name: " Bee: Conditionals"
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            Bee Debugging:
              name: Bee Debugging
            Bounce:
              name: Bounce
            Build a Game:
              name: Build a Game
            Farmer Conditional with Cards:
              name: Farmer Conditional with Cards
            Farmer Debug Relay Programming:
              name: Farmer Debug Relay Programming
            Farmer Graph Paper Programming:
              name: Farmer Graph Paper Programming
            Farmer Impacts of Computing:
              name: Farmer Impacts of Computing
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            'Maze: Conditionals with Loops':
              name: 'Maze: Conditionals with Loops'
            'Maze: Nested Loops':
              name: 'Maze: Nested Loops'
            More Programming with CS4FN:
              name: More Programming with CS4FN
            Robot Running the Farm:
              name: Robot Running the Farm
            Unplugged Conditionals with Loops:
              name: Unplugged Conditionals with Loops
        alltheplcthings:
          title: Sample course for PLC things
          description: This is a sample course that has all of the plc special things. Enrollment in this course does nothing. Right now, it's just a copy of TeacherCon
          description_short: This is a sample course that has all of the plc special things
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: Introduction to Teachercon
            Lesson 1,10:
              name: Lesson 1,10
            Lesson 1,11:
              name: Lesson 1,11
            Lesson 1,4:
              name: Lesson 1,4
            Lesson 1,6:
              name: Lesson 1,6
            Lesson 1,9:
              name: Lesson 1,9
            Lesson 2,10:
              name: Lesson 2,10
            Lesson 2,2:
              name: Lesson 2,2
            Lesson 2,3:
              name: Lesson 2,3
            Test stage with bubbles:
              name: Test stage with bubbles
          student_description: This is a sample course that has all of the plc special things. Enrollment in this course does nothing. Right now, it's just a copy of TeacherCon
        csd3-2017:
          title: CSD Unit 3 - Animations and Games ('17-'18)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: Programación
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Complex Conditionals:
              name: Complex Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Drawing in Game Lab:
              name: Drawing in Game Lab
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Sprites and Images:
              name: Sprites and Images
            Sprites and Properties:
              name: Sprites and Properties
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Build a Game':
              name: 'Project: Build a Game'
            'Project: Design a Game':
              name: 'Project: Design a Game'
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Shapes and Randomness:
              name: Shapes and Randomness
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Booleans Unplugged:
              name: Booleans Unplugged
            Project - Interactive Card:
              name: Project - Interactive Card
            Project - Design a Game:
              name: Project - Design a Game
            Parameters and Randomization:
              name: Parameters and Randomization
            Shapes and Randomization:
              name: Shapes and Randomization
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        grade2:
          title: Grade 2
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          lessons:
            At The Dog Park:
              name: At The Dog Park
            Caring for My New Pet:
              name: Caring for My New Pet
            Exploring the Neighborhood:
              name: Exploring the Neighborhood
            Flappy:
              name: Flappy
            Getting Loopy with Puppy:
              name: Getting Loopy with Puppy
            Make a Dog Tag:
              name: Make a Dog Tag
            More CS with Run Marco:
              name: More CS with Run Marco
            New Home for My Pet:
              name: New Home for My Pet
            Online Internet Safety:
              name: Online Internet Safety
            Online My New Pet Jigsaw:
              name: Online My New Pet Jigsaw
            Puppy Event:
              name: Puppy Event
            Puppy Introduction:
              name: Puppy Introduction
            Puppy Loops:
              name: Puppy Loops
            How to behave in the lab_How to use Code_org puzzles:
              name: How to behave in the lab/How to use Code.org puzzles
            Programming at home with my pet:
              name: Programming at home with my pet
            Binary Bracelets:
              name: Binary Bracelets
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            The Big Event:
              name: The Big Event
        transferring-over:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            20-hr Stage 2:
              name: 20-hr Stage 2
            20-hr Stage 9:
              name: 20-hr Stage 9
            Course 2 Stage 17:
              name: Course 2 Stage 17
            Course 3 Stage 16:
              name: Course 3 Stage 16
            Course 3 Stage 17:
              name: Course 3 Stage 17
          student_description: ''
        k5concepts:
          title: K5 Concepts
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Binary:
              name: Binary
            Conditionals:
              name: Conditionals
            Events:
              name: Events
            For Loops:
              name: For Loops
            Functions:
              name: Functions
            Functions with Parameters:
              name: Functions with Parameters
            Loops:
              name: Loops
            Nested Loops:
              name: Nested Loops
            Variables:
              name: Variables
            While Loops:
              name: While Loops
          student_description: ''
        algebrapdnext:
          title: Computer Science in Algebra PD Phase 2
          description: Teach Algebra through Functional Programming
          description_short: "\tPhase 3: School Year Support"
          description_audience: ''
          lesson_groups: {}
          lessons:
            Lesson Prep:
              name: Lesson Prep
            Teacher Dashboard:
              name: Teacher Dashboard
            Teaching with Puzzles:
              name: Teaching with Puzzles
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: The Design Recipe
            Welcome!:
              name: Welcome!
          student_description: Teach Algebra through Functional Programming
        csp-pre-survey:
          title: CS Principles Pre-Survey
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Anonymous student pre-survey:
              name: Anonymous student pre-survey
            NEW Unit 1 Chapter 1 Assessment:
              name: NEW Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
          student_description: ''
          name: csp-pre-survey
        csd1-2017:
          title: CSD Unit 1 - Problem Solving ('17-'18)
          description_short: "  Learn how humans work with computers to solve problems."
          description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Representing Information:
              name: Representing Information
            Processing with Bits:
              name: Processing with Bits
            Human vs. Computer Processing:
              name: Human vs. Computer Processing
            Processing with Apps:
              name: Processing with Apps
            'Project: Apps and Problem Solving':
              name: 'Project: Apps and Problem Solving'
            Human vs Computer Processing:
              name: Human vs Computer Processing
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Storage:
              name: Storage
            Apps and Problem Solving:
              name: Apps and Problem Solving
            Project - Propose an App:
              name: Project - Propose an App
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            CS Discoveries Rapid Survey:
              name: CS Discoveries Rapid Survey
          student_description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csp-online-test:
          title: test space for csp online support
          description_short: This is a sample course for testing csp online pd
          description: This is a test space for online pd. Enrollment in this course does nothing.
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 1 Overview:
              name: Unit 1 Overview
            'Lessons 2-3: Binary Messages':
              name: 'Lessons 2-3: Binary Messages'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            'Lessons 4-6: Encoding and Sending Numbers':
              name: 'Lessons 4-6: Encoding and Sending Numbers'
            'Lesson 7: Encoding and Sending Text':
              name: 'Lesson 7: Encoding and Sending Text'
            'lessons 9: Internet Addressing':
              name: 'lessons 9: Internet Addressing'
            'lessons 10: Routers and Redundancy':
              name: 'lessons 10: Routers and Redundancy'
            'lessons 11-12: Protocols and Abstraction':
              name: 'lessons 11-12: Protocols and Abstraction'
            'Lessons 2 - 3: Binary Messages':
              name: 'Lessons 2 - 3: Binary Messages'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'Lessons 4 - 6: Encoding and Sending Numbers'
            'Lesson 9: Internet Addressing':
              name: 'Lesson 9: Internet Addressing'
            'Lessons 10 - 11: Redundancy and Packets':
              name: 'Lessons 10 - 11: Redundancy and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'Lessons 1 - 2: Bytes, File Sizes, and Text Compression'
            'Lessons 3 - 4 : Encoding Images':
              name: 'Lessons 3 - 4 : Encoding Images'
            'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            'Lessons 7 - 11: Interpreting Visual Data':
              name: 'Lessons 7 - 11: Interpreting Visual Data'
            'Lessons 12 - 15: Communicating with Visualizations':
              name: 'Lessons 12 - 15: Communicating with Visualizations'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'Lessons 7 - 10: Interpreting Visual Data'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'Lessons 11 - 15: Communicating with Visualizations'
            Unit 2 Overview:
              name: Unit 2 Overview
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 3: Algorithms':
              name: 'Lessons 1 - 3: Algorithms'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers'
            Event Driven Programming:
              name: Event Driven Programming
            Variables and Strings:
              name: Variables and Strings
            Conditionals and Boolean Logic:
              name: Conditionals and Boolean Logic
            While Loops and Introduction to Arrays:
              name: While Loops and Introduction to Arrays
            Processing Arrays and Functions with Return Values:
              name: Processing Arrays and Functions with Return Values
            Unit 5 Overview:
              name: Unit 5 Overview
          student_description: This is a test space for online pd. Enrollment in this course does nothing.
        csp1-support:
          title: Unit 1 Online Professional Learning Course
          description_short: Teacher Professional Learning Course for CSP Unit 1
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 1.
          description_audience: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 1 Overview:
              name: Unit 1 Overview
            'Lessons 2 - 3: Binary Messages':
              name: 'Lessons 2 - 3: Binary Messages'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'Lessons 4 - 6: Encoding and Sending Numbers'
            'Lesson 7: Encoding and Sending Text':
              name: 'Lesson 7: Encoding and Sending Text'
            'Lesson 9: Internet Addressing':
              name: 'Lesson 9: Internet Addressing'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 1.
        basketball:
          title: Choose your team and make a basketball game
          description_audience: ''
          description_short: Choose your team and make a basketball game
          description: Choose your team and make a basketball game
          lesson_groups: {}
          lessons:
            Bounce:
              name: Code Your Own Basketball Game
          student_description: Choose your team and make a basketball game
          name: basketball
        sample-csp5:
          lessons:
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
        hoc-encryption:
          title: 'Hour of Code: Simple Encryption'
          description_audience: ''
          description_short: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          description: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          lesson_groups: {}
          lessons:
            Simple Encryption:
              name: Simple Encryption
          student_description: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          name: hoc-encryption
        csd2-2017:
          title: CSD Unit 2 - Web Development ('17-'18)
          description_audience: ''
          description_short: "  Learn to build your own web site in Web Lab."
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Quality Websites:
              name: Quality Websites
            Website Design:
              name: Website Design
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: Text on the Web
            Images on the Web:
              name: Images on the Web
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            External Style Sheets:
              name: External Style Sheets
            Peer Review:
              name: Peer Review
            Box Model and Page Layout:
              name: Box Model and Page Layout
            Digital Footprint:
              name: Digital Footprint
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Intellectual Property:
              name: Intellectual Property
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            'Project: Personal Portfolio Website':
              name: 'Project: Personal Portfolio Website'
            Images in HTML:
              name: Images in HTML
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headers:
              name: Headers
            Lists:
              name: Lists
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            Headings:
              name: Headings
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        csp2-support:
          title: Unit 2 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 2
          description: 'This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 2. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 2 Overview:
              name: Unit 2 Overview
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'Lessons 1 - 2: Bytes, File Sizes, and Text Compression'
            'Lessons 3 - 4 : Encoding Images':
              name: 'Lessons 3 - 4 : Encoding Images'
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'Lessons 7 - 10: Interpreting Visual Data'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'Lessons 11 - 15: Communicating with Visualizations'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
          student_description: 'This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 2. '
        csd4-2017:
          title: CSD Unit 4 - The Design Process ('17-'18)
          description_audience: ''
          description_short: "  Learn how to design a program that meets the needs of your users."
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            Discovering Users:
              name: Discovering Users
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Redesigning a Space:
              name: Redesigning a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: App Presentation
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Linking Screens:
              name: Linking Screens
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Project - App Presentation:
              name: Project - App Presentation
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        minecraft:
          title: Minecraft Hour of Code Designer
          description_audience: ''
          description_short: Program animals and other Minecraft creatures in your own version of Minecraft.
          description: Program animals and other Minecraft creatures in your own version of Minecraft.
          lesson_groups: {}
          lessons:
            Minecraft Hour of Code Designer:
              name: Minecraft Hour of Code Designer
          student_description: Program animals and other Minecraft creatures in your own version of Minecraft.
          name: minecraft
        flappy-impact-study:
          title: Flappy Code with Survey
          description_audience: ''
          description_short: 'Write your own Flappy game in less than 10 minutes! '
          description: Want to write your own game in less than 10 minutes? Try our Flappy Code tutorial! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lesson_groups: {}
          lessons:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Flappy Code:
              name: Flappy Code
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
          student_description: Want to write your own game in less than 10 minutes? Try our Flappy Code tutorial! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
        coursea-draft:
          title: 'CS Fundamentals: Course A'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: "Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \r\nRecommended for grade K."
          lesson_groups: {}
          lessons:
            'Debugging: Bugs in Codeville':
              name: 'Debugging: Bugs in Codeville'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: 'Programming: Happy Maps'
            Programming in Maze:
              name: Programming in Maze
            Being Safe Online:
              name: Being Safe Online
            'Loops: Happy Loops':
              name: 'Loops: Happy Loops'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            Fuzz Fiesta:
              name: Fuzz Fiesta
            Going Places Safely:
              name: Going Places Safely
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
          student_description: "Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \r\nRecommended for grade K."
        courseb-draft:
          title: 'CS Fundamentals: Course B'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for 1st grade.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            Sequence & Algorithms:
              name: Sequence & Algorithms
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Being Safe Online:
              name: Being Safe Online
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            More Computer Science:
              name: More Computer Science
            Keep it Private:
              name: Keep it Private
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Your Digital Footprint:
              name: Your Digital Footprint
          student_description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for 1st grade.
        coursec-draft:
          title: 'CS Fundamentals: Course C'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 2nd grade.
          lesson_groups: {}
          lessons:
            Programming in Maze:
              name: Programming in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: Loops in Maze
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Puppy Introduction:
              name: Puppy Introduction
            Online Internet Safety:
              name: Online Internet Safety
            Build a Flappy Game:
              name: Build a Flappy Game
            More CS with Run Marco:
              name: More CS with Run Marco
            Binary Bracelets:
              name: Binary Bracelets
            Events in Play Lab:
              name: Events in Play Lab
            Your Digital Footprint:
              name: Your Digital Footprint
            Building a Foundation:
              name: Building a Foundation
            Screen Out the Mean:
              name: Screen Out the Mean
            Debugging in Maze:
              name: Debugging in Maze
            Loops in Harvester:
              name: Loops in Harvester
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 2nd grade.
        coursed-draft:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 3rd grade.
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Events in Bounce:
              name: Events in Bounce
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Nested Loops in Artist
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Bee:
              name: Debugging in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals with Bee:
              name: Conditionals with Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Harvester
            Impacts of Computing:
              name: Impacts of Computing
            More Programming with CS4FN:
              name: More Programming with CS4FN
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Conditionals in Bee:
              name: Conditionals in Bee
            Digital Citizenship:
              name: Digital Citizenship
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops:
              name: Nested Loops
            Introduction:
              name: Introduction
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
            Debugging in Collector:
              name: Debugging in Collector
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 3rd grade.
        coursee-draft:
          title: 'CS Fundamentals: Course E'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 4th grade.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            Digital Citizenship:
              name: Digital Citizenship
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept in Bee:
              name: Determine the Concept in Bee
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            More Programming with Scratch:
              name: More Programming with Scratch
            Private and Personal Information:
              name: Private and Personal Information
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Determine the Concept:
              name: Determine the Concept
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 4th grade.
        coursef-draft:
          title: 'CS Fundamentals: Course F'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 5th grade.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Digital Citizenship:
              name: Digital Citizenship
            Envelope Variables:
              name: Envelope Variables
            Variables in Play Lab:
              name: Variables in Play Lab
            Variables in Artist:
              name: Variables in Artist
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            'Functions with Parameters: Songwriting with Parameters':
              name: 'Functions with Parameters: Songwriting with Parameters'
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Present Your Project
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            The Power of Words:
              name: The Power of Words
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Introduction:
              name: Introduction
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
          student_description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 5th grade.
        classic-hoc-impact-study:
          title: Hour of Code with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lessons:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        hoc-impact-study:
          title: Classic Maze with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          lesson_groups: {}
          lessons:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
          student_description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
        sports:
          title: Code your own sports game
          description_audience: ''
          description_short: Mix and match across sports
          description: Mix and match across sports
          lesson_groups: {}
          lessons:
            Sports:
              name: Code Your Own Sports Game
          student_description: Mix and match across sports
          name: sports
        2016_sciencePD-phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: Wrap-Up
          student_description: ''
        2016_sciencePD_phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: Wrap-Up
          student_description: ''
        sciencepd3-2016:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Welcome Back!:
              name: Welcome Back!
            The TLO:
              name: The TLO
            Prep With Your Modules:
              name: Prep With Your Modules
          student_description: ''
        csp3-support:
          title: Unit 3 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 3
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 3.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 3: Algorithms':
              name: 'Lessons 1 - 3: Algorithms'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 3.
        csdgraveyard:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Introduction to Styling with CSS (2.7):
              name: Introduction to Styling with CSS (2.7)
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            External Style Sheets:
              name: External Style Sheets
          student_description: ''
        csp4-support:
          title: Unit 4 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 4
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 4.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 2: Data in the Real World':
              name: 'Lessons 1 - 2: Data in the Real World'
            'Lessons 1 - 4: Data in the Real World':
              name: 'Lessons 1 - 4: Data in the Real World'
            'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption':
              name: 'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption'
            'Lessons 8 - 9: Practice PT':
              name: 'Lessons 8 - 9: Practice PT'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            Unit 4 Overview:
              name: Unit 4 Overview
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 4.
        sciencepd4:
          title: 'CS in Science: Part 4'
          description_audience: ''
          description_short: 'Phase 3: Reflect on semester 1 workshop'
          description: 'Phase 3: Reflect on semester 1 workshop'
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Revisiting Complex Adaptive Systems:
              name: Revisiting Complex Adaptive Systems
            Thinking About Implementation:
              name: Thinking About Implementation
            Wrap-Up:
              name: Wrap-Up
          student_description: 'Phase 3: Reflect on semester 1 workshop'
        csp-ca-a:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Commutative Assessment A:
              name: Commutative Assessment A
          student_description: ''
        science-pd-ol-pt-5:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Welcome!:
              name: Welcome!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Wrap-Up:
              name: Wrap-Up
        csf2harvey:
          title: Mr. Harvey's Class
          description_audience: ''
          description_short: ''
          description: Special bubbles just for our class!
          lesson_groups:
            end_of_course_project:
              display_name: End of Course Project
            content:
              display_name: Content
          lessons:
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Prepare your snowflake for 3D printing:
              name: Prepare your snowflake for 3D printing
            Binary:
              name: Binary
            Snowflakes:
              name: Snowflakes
          student_description: Special bubbles just for our class!
        sciencepd5:
          title: 'CS in Science: Part 5'
          description_audience: ''
          description_short: 'Phase 3: Prepare for semester 2 workshop'
          description: 'Phase 3: Prepare for semester 2 workshop'
          lesson_groups: {}
          lessons:
            Welcome!:
              name: Welcome!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Wrap-Up:
              name: Wrap-Up
          student_description: 'Phase 3: Prepare for semester 2 workshop'
        csp5-support:
          title: Unit 5 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 5
          description: "####  **This course is associated with a version of the course that is no longer supported.  Please visit our Courses Overview page (https://studio.code.org/courses) to see our most current curricula.**\r\n\r\nThis is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 5."
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
            practice:
              display_name: Teaching Practices
          lessons:
            Unit 5 Overview:
              name: Unit 5 Overview
            Event Driven Programming:
              name: Event Driven Programming
            Variables and Strings:
              name: Variables and Strings
            Conditionals and Boolean Logic:
              name: Conditionals and Boolean Logic
            While Loops and Introduction to Arrays:
              name: While Loops and Introduction to Arrays
            Processing Arrays and Functions with Return Values:
              name: Processing Arrays and Functions with Return Values
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
          student_description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 5.
          name: csp5-support
        csp6-support:
          stage: {}
          title: AP Preparation and Resources for Teachers
          description_audience: ''
          description_short: ''
          description: 'COMING SOON: soon this page will host a set of resources for teachers preparing for the AP exam'
          lesson_groups: {}
          lessons: {}
          student_description: 'COMING SOON: soon this page will host a set of resources for teachers preparing for the AP exam'
        csppostap-2017:
          title: CSP Post-AP - Databases and Using Data in Your Apps ('17-'18)
          description_audience: ''
          description_short: Learn to collect and use data in App Lab apps.
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          lesson_groups:
            content:
              display_name: Content
            cspSurvey:
              display_name: Survey
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Deleting Records:
              name: Deleting Records
            Updating Records:
              name: Updating Records
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Visualizing Data:
              name: Visualizing Data
            Sample Apps:
              name: Sample Apps
            Final Project:
              name: Final Project
            Post-Course Survey:
              name: Post-Course Survey
          student_description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
        unit6-csd-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            '':
              name: ''
        gamelab-demo:
          lesson_groups: {}
          lessons:
            Simple Sprite Movement:
              name: Simple Sprite Movement
        csd6-draft:
          title: CSD Unit 6 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
          lessons:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Uplugged:
              name: Input Uplugged
            The Circuit Playground:
              name: The Circuit Playground
            Foo:
              name: Foo
            Lists:
              name: Lists
            Lights:
              name: Lights
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            Input Unplugged:
              name: Input Unplugged
            Timed Loop:
              name: Timed Loop
            Timed Loops:
              name: Timed Loops
            For Loops:
              name: For Loops
            Physical Input:
              name: Physical Input
            List and For Loops:
              name: List and For Loops
            'Project: Board Output':
              name: 'Project: Board Output'
            For Loops with UI and Board:
              name: For Loops with UI and Board
            Lists and For Loops:
              name: Lists and For Loops
            Analog Input:
              name: Analog Input
            Polling Events:
              name: Polling Events
            Sensor Applications:
              name: Sensor Applications
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Map:
              name: Map
            Board Events:
              name: Board Events
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Getting and Setting Properties:
              name: Getting and Setting Properties
            The Program Design Process:
              name: The Program Design Process
            Getters:
              name: Getters
            Getting Properties:
              name: Getting Properties
            Designing Screens with Code:
              name: Designing Screens with Code
            Arrays:
              name: Arrays
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
          student_description: ''
        workshop-gamelab:
          title: Game Lab Workshop
          description_audience: Teachers attending an in-person Game Lab Workshop
          description_short: Level progression to accompany an in-person Game Lab Workshop
          description: This level progression is intended to accompany an in-person Game Lab Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of Game Lab.
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction
            Sprites:
              name: Sprites
            Input:
              name: Input
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
          student_description: This level progression is intended to accompany an in-person Game Lab Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of Game Lab.
        csd5-draft:
          title: Draft of CSD5
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
          lessons:
            new stage:
              name: new stage
            Interpreting Data:
              name: Interpreting Data
            Data in the Real World:
              name: Data in the Real World
            Combining Representations:
              name: Combining Representations
            Representing Images:
              name: Representing Images
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Numbers Part 1:
              name: Representing Numbers Part 1
            Representing Numbers Part 2:
              name: Representing Numbers Part 2
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
            Representing Numbers:
              name: Representing Numbers
            8-bit Numbers:
              name: 8-bit Numbers
            Encryption:
              name: Encryption
            Structuring Data:
              name: Structuring Data
          student_description: ''
        applab-1hour:
          title: App Lab 1 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 1 hour. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          lesson_groups: {}
          lessons:
            App Lab Workshop:
              name: App Lab Workshop
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            Room Escape:
              name: Room Escape
            Extra:
              name: Extra
          student_description: This workshop is designed to give students a basic introduction to app lab in 1 hour. Students should be able to come in with different backgrounds in computer science and have fun creating something.
        applab-2hour:
          title: App Lab 2 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 2 hours. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
          student_description: This workshop is designed to give students a basic introduction to app lab in 2 hours. Students should be able to come in with different backgrounds in computer science and have fun creating something.
        coursed-ramp:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction
          student_description: ''
        workshop-maker:
          title: Maker Toolkit Workshop
          description_audience: Teachers attending an in-person Maker Toolkit Workshop
          description_short: Level progression to accompany an in-person Maker Toolkit Workshop
          description: This level progression is intended to accompany an in-person Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of App Lab and the Maker Toolkit.
          lesson_groups: {}
          lessons:
            App Lab Basics:
              name: App Lab Basics
            The Circuit Playground:
              name: The Circuit Playground
            Physical Input:
              name: Physical Input
            Analog Input:
              name: Analog Input
          student_description: This level progression is intended to accompany an in-person Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of App Lab and the Maker Toolkit.
        coursee-ramp:
          title: coursee-ramp
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            'Real Life Algorithms: Dice Race':
              name: 'Real Life Algorithms: Dice Race'
          student_description: ''
        csd6-2017:
          title: CSD Unit 6 - Physical Computing ('17-'18)
          description_audience: ''
          description_short: Learn to program with physical devices.
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            The Circuit Playground:
              name: The Circuit Playground
            Lists:
              name: Lists
            Lights:
              name: Lights
            For Loops:
              name: For Loops
            Lists and For Loops:
              name: Lists and For Loops
            Timed Loops:
              name: Timed Loops
            'Project: Board Output':
              name: 'Project: Board Output'
            Physical Input:
              name: Physical Input
            Analog Input:
              name: Analog Input
            Sensor Applications:
              name: Sensor Applications
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Designing Screens with Code:
              name: Designing Screens with Code
            Board Events:
              name: Board Events
            Getting Properties:
              name: Getting Properties
            The Program Design Process:
              name: The Program Design Process
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Arrays:
              name: Arrays
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            Innovations in Computing:
              name: Innovations in Computing
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Innovations in Computing_:
              name: Innovations in Computing
            Designing Screens with Code_:
              name: Designing Screens with Code
            The Circuit Playground_:
              name: The Circuit Playground
            Input Unplugged_:
              name: Input Unplugged
            Board Events_:
              name: Board Events
            Getting Properties_:
              name: Getting Properties
            Analog Input_:
              name: Analog Input
            The Program Design Process_:
              name: The Program Design Process
            Arrays and Color LEDs_:
              name: Arrays and Color LEDs
            'Project: Make a Game_':
              name: 'Project: Make a Game'
            Making Music_:
              name: Making Music
            Arrays and For Loops_:
              name: Arrays and For Loops
            Accelerometer_:
              name: Accelerometer
            Functions with Parameters_:
              name: Functions with Parameters
            Circuits and Physical Prototypes_:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation_':
              name: 'Project: Prototype an Innovation'
            'Project: Make a Game__':
              name: 'Project: Make a Game'
            Arrays and Color LEDs__:
              name: Arrays and Color LEDs
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csd3-draft:
          title: 'CSD Unit 3 - Programming: Animations and Games'
          description_audience: ''
          description_short: Animations and Games
          description: ''
          lessons:
            Shapes and Randomess:
              name: Shapes and Randomess
            Shapes and Randomness:
              name: Shapes and Randomness
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Variables:
              name: Variables
            Programming for Entertainment:
              name: Programming for Entertainment
            Sprites:
              name: Sprites
            Plotting Shapes:
              name: Plotting Shapes
            Sprite Movement:
              name: Sprite Movement
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: Conditionals
            Taking Input:
              name: Taking Input
            Complex Conditionals:
              name: Complex Conditionals
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
        csd5-2017:
          title: CSD Unit 5 - Data and Society ('17-'18)
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers Part 1:
              name: Representing Numbers Part 1
            Representing Numbers Part 2:
              name: Representing Numbers Part 2
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
            Representing Numbers:
              name: Representing Numbers
            8-bit Numbers:
              name: 8-bit Numbers
            Encryption:
              name: Encryption
            Structuring Data:
              name: Structuring Data
            Keeping Data Secret:
              name: Keeping Data Secret
            CSD Post-Course Survey:
              name: CSD Post-Course Survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd3-old:
          title: CSD Unit 3 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 3
          description: This is the original draft of CSD Unit 3, released in the fall of 2016. Unless you have students currently using this course, you should instead use the updated version of this unit at studio.code.org/s/csd3-2019 - this original draft will remain available until July 1, 2017.
          lesson_groups: {}
          lessons:
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Sprites and Properties:
              name: Sprites and Properties
            Sprites and Images:
              name: Sprites and Images
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Complex Conditionals:
              name: Complex Conditionals
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
          student_description: This is the original draft of CSD Unit 3, released in the fall of 2016. Unless you have students currently using this course, you should instead use the updated version of this unit at studio.code.org/s/csd3-2019 - this original draft will remain available until July 1, 2017.
        csd1-old:
          title: CSD Unit 1 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 1
          description: This is the original draft of CSD Unit 1, originally published in the fall of 2016. This version has been replaced with an updated unit at studio.code.org/s/csd1-2019 and will only remain available until July 1, 2017.
          lesson_groups: {}
          lessons:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Representing Information:
              name: Representing Information
            Processing with Bits:
              name: Processing with Bits
            Human vs Computer Processing:
              name: Human vs Computer Processing
            Processing with Apps:
              name: Processing with Apps
            'Project: Apps and Problem Solving':
              name: 'Project: Apps and Problem Solving'
          student_description: This is the original draft of CSD Unit 1, originally published in the fall of 2016. This version has been replaced with an updated unit at studio.code.org/s/csd1-2019 and will only remain available until July 1, 2017.
        csd2-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Text on the Web:
              name: Text on the Web
            Digital Footprint:
              name: Digital Footprint
            Images in HTML:
              name: Images in HTML
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headers and Lists:
              name: Headers and Lists
            Intellectual Property:
              name: Intellectual Property
            Images:
              name: Images
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            Headers:
              name: Headers
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Lists:
              name: Lists
        csd1-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Inputs and Outputs:
              name: Inputs and Outputs
            Processing:
              name: Processing
            Storage:
              name: Storage
            Apps and Problem Solving:
              name: Apps and Problem Solving
            Project - Propose an App:
              name: Project - Propose an App
            Input and Output:
              name: Input and Output
        csd3-chapters:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomness:
              name: Shapes and Randomness
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
            'Chapter 1: Images and Animation':
              name: 'Chapter 1: Images and Animation'
            'null':
              name: 'null'
            temp:
              name: temp
        coursef-ramp:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Functions in Farmer:
              name: Functions in Farmer
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
          student_description: ''
        csppostsurvey-staging:
          title: "[Deprecated] CSP post survey staging area"
          description_audience: ''
          description_short: ''
          description: Moved to /s/csp-post-survey.  Destory after 05.05.17
          lessons:
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        fmscsd3preview:
          title: CSD - Drawing in Game Lab
          description_audience: Falmouth Middle School (Mike Harvey)
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
          student_description: ''
        csppostsurvey:
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 10 minutes to complete.  Your responses are private and anonymous.  '
          lessons:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        csp-post-survey:
          title: CSP Student Post-Course Survey ('17-'18)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Post-Course Survey:
              name: CSP Post-Course Survey
            CSP post survey 2018 staging:
              name: CSP post survey 2018 staging
            CSP post-course survey:
              name: CSP Student Post-Course Survey ('17-'18)
          student_description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csp-post-survey
        public-key-cryptography:
          title: Public Key Cryptography Widgets
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Public Key Crypto Widgets:
              name: Public Key Crypto Widgets
          student_description: ''
        csd2-old:
          title: CSD Unit 2 (DEPRECATED)
          description_audience: ''
          description_short: Web Development
          description: ''
          lesson_groups: {}
          lessons:
            Quality Websites:
              name: Quality Websites
            Website Design:
              name: Website Design
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: Text on the Web
            Images in HTML:
              name: Images in HTML
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            Peer Review:
              name: Peer Review
            Digital Footprint:
              name: Digital Footprint
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Intellectual Property:
              name: Intellectual Property
            'Project: Personal Portfolio Website':
              name: 'Project: Personal Portfolio Website'
          student_description: ''
        artist-and-bb8:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            B8 New BB8:
              name: B8 New BB8
            c8 to BB8:
              name: c8 to BB8
            B8 BB8:
              name: B8 BB8
            C9 Artist Loops:
              name: C9 Artist Loops
            C8 to BB8:
              name: C8 to BB8
            D7 to Laurel:
              name: D7 to Laurel
            D6 Frozen Artist:
              name: D6 Frozen Artist
            F7 add Conditionals:
              name: F7 add Conditionals
            F5 Minecraft:
              name: F5 Minecraft
            Programming with BB-8:
              name: Programming with BB-8
            Loops with BB-8:
              name: Loops with BB-8
            D13 no If/While:
              name: D13 no If/While
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Bounce:
              name: Bounce
            NewBounce:
              name: NewBounce
            F PlayLab Variables:
              name: F PlayLab Variables
          student_description: ''
        coursea-2017:
          title: Course A
          assignment_family_title: Course A
          description_audience: 'Ages: 4-7'
          description_short: An introduction to computer science for pre-readers.
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Sequencing with Drag and Drop
            'Programming: Happy Maps':
              name: 'Programming: Happy Maps'
            Programming in Maze:
              name: Programming in Maze
            Going Places Safely:
              name: 'Digital Citizenship: Going Places Safely'
            'Loops: Happy Loops':
              name: 'Loops: Happy Loops'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: coursea-2017
        courseb-2017:
          title: Course B
          assignment_family_title: Course B
          description_audience: 'Ages: 5-8'
          description_short: An introduction to computer science for pre-readers. (Similar to Course A, but with more variety for older students.)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Sequencing with Drag and Drop
            Your Digital Footprint:
              name: 'Digital Citizenship: My Digital Footprint'
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            More Programming in Maze:
              name: More Programming in Maze
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: courseb-2017
        coursec-2017:
          title: Course C
          assignment_family_title: Course C
          description_audience: 'Ages: 6-10'
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          lesson_groups: {}
          lessons:
            Building a Foundation:
              name: 'Persistence: Building a Foundation'
            Programming in Maze:
              name: Programming in Maze
            Debugging in Maze:
              name: Debugging in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: Loops in Maze
            Loops in Harvester:
              name: Loops in Harvester
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Build a Flappy Game:
              name: Build a Flappy Game
            Events in Play Lab:
              name: Events in Play Lab
            Screen Out the Mean:
              name: 'Digital Citizenship: Screen Out the Mean'
            Binary Bracelets:
              name: 'Beyond Programming: Binary Bracelets'
            Loops in Artist:
              name: Loops in Artist
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          name: coursec-2017
        coursed-2017:
          title: Course D
          assignment_family_title: Course D
          description_audience: 'Ages: 7-11'
          description_short: Quickly cover concepts from Course C, then go further with algorithms, nested loops, conditionals, and more.
          description: Learn new coding concepts including algorithms, nested loops, while loops, conditionals, and events. Get an introduction to digital citizenship before creating your very own game or story that you can share.
          lesson_groups: {}
          lessons:
            Introduction:
              name: Introduction to Online Puzzles
            'Algorithms: Graph Paper Programming':
              name: 'Programming: Graph Paper Programming'
            Events in Bounce:
              name: Events in Bounce
            Nested Loops:
              name: Nested Loops
            Nested Loops in Artist:
              name: Nested Loops in Artist
            'Algorithms: Relay Programming':
              name: 'Debugging: Relay Programming'
            Debugging in Bee:
              name: Debugging in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: 'If/Else: Conditionals with Cards'
            Conditionals in Bee:
              name: Conditionals in Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Harvester
            Digital Citizenship:
              name: 'Digital Citizenship: Practicing Digital Citizenship'
            Build a Play Lab Game:
              name: Build a Play Lab Game
            'Unplugged: Binary':
              name: 'Beyond Programming: Binary Images'
            Artist Binary:
              name: Binary in Artist
            Nested Loops Project in Artist:
              name: Nested Loops in Frozen
            Debugging in Collector:
              name: Debugging in Collector
          student_description: Learn new coding concepts including algorithms, nested loops, while loops, conditionals, and events. Get an introduction to digital citizenship before creating your very own game or story that you can share.
          name: coursed-2017
        coursee-2017:
          title: Course E
          assignment_family_title: Course E
          description_audience: 'Ages: 8-12'
          description_short: Quickly cover concepts in Course C & D and then go further with functions.
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction to Online Puzzles
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Presentation Your Project
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Conditionals:
              name: Conditionals in Farmer
            Private and Personal Information:
              name: 'Digital Citizenship: Private and Personal Information'
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Present Your Project:
              name: Present Your Project
            Internet:
              name: 'Beyond Programming: The Internet'
            Crowdsourcing:
              name: 'Beyond Programming: Crowdsourcing'
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Nested Loops:
              name: Nested Loops
            Functions in Harvester:
              name: Functions in Harvester
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          name: coursee-2017
        coursef-2017:
          title: Course F
          assignment_family_title: Course F
          description_audience: 'Ages: 9-13'
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction to Online Puzzles
            The Power of Words:
              name: 'Digital Citizenship: The Power of Words'
            Ice Age Play Lab:
              name: Events in Ice Age
            Envelope Variables:
              name: 'Variables: Envelope Variables'
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: 'For Loops: For Loop Fun'
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: 'Functions: Songwriting with Parameters'
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Presentation Your Project
            Present Your Project:
              name: Present Your Project
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Functions in Bee:
              name: Functions in Bee
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          name: coursef-2017
        csdnovice:
          title: CS Discoveries TeacherCon Novice Facilitators
          description_audience: CSD Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
          lesson_groups: {}
          lessons:
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Welcome:
              name: Welcome
            Congrats:
              name: Congrats
            Wrap Up:
              name: Wrap Up
          student_description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
        csp-explore-task:
          title: CSP Explore PT Prep
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
        csp-create-task:
          title: ''
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
          lessons:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
        csp-ap-tech-setup:
          title: CSP AP Digital Portfolio and Other Tools
          description_audience: ''
          description_short: ''
          description: Covers AP Digital Portfolio setup and other technical tools required for completing and submitting the AP Performance Tasks.
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
        csp-ap:
          title: CSP AP Exam and Performance Tasks
          description_audience: ''
          description_short: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          description: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          lesson_groups:
            csp_ap_1:
              display_name: 'Chapter 1: AP Tech Setup'
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
          student_description: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
        cspnovice:
          title: CS Principles TeacherCon Novice Facilitator Reflection
          description_audience: CSP Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Welcome:
              name: Welcome
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
          student_description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
        novice-view:
          title: view novice responses
          description_audience: brook, dani, mal
          description_short: NA
          description: NA
          lesson_groups: {}
          lessons:
            CSP Tuesday:
              name: CSP Tuesday
            CSP Wednesday:
              name: CSP Wednesday
            CSP Thursday:
              name: CSP Thursday
            CSD Tuesday:
              name: CSD Tuesday
            CSD Wednesday:
              name: CSD Wednesday
            CSD Thursday:
              name: CSD Thursday
          student_description: NA
        csp1-dlp:
          title: CSP Unit 1 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete your Deeper Learning:
              name: Complete your Deeper Learning
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csp1-dlp
        csp2-dlp:
          title: CSP Unit 2 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 2 Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning:
              name: Complete Unit 2 Deeper Learning
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
          student_description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp3-dlp:
          title: CSP Unit 3 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 3 Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          student_description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp4-dlp:
          title: CSP Unit 4 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
          student_description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp5-dlp:
          title: CSP Unit 5 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
          student_description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CSP facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CSP Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csd1-dlp:
          title: CS Discoveries Unit 1 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csd6-dlp:
          title: CS Discoveries Unit 6 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
          student_description: This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd5-dlp:
          title: CS Discoveries Unit 5 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
          student_description: This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd4-dlp:
          title: CS Discoveries Unit 4 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
          student_description: This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd3-dlp:
          title: CS Discoveries Unit 3 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          student_description: This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        csd2-dlp:
          title: CS Discoveries Unit 2 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
          student_description: This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidances for demonstrating proficiency of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you've submitted your own reflections for the unit.
        allthettsthings:
          lesson_groups: {}
          lessons:
            TTS:
              name: TTS
        express-2017:
          title: Express Course
          assignment_family_title: Express Course
          description_audience: 'Ages: 9-18'
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming Unplugged: My Robotic Friends':
              name: 'Programming Unplugged: My Robotic Friends'
            Introduction:
              name: Introduction
            'Algorithms: Graph Paper Programming':
              name: 'Programming: Graph Paper Programming'
            'Algorithms: Relay Programming':
              name: 'Debugging: Relay Programming'
            Debugging in Collector:
              name: Introduction to Debugging
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
            Internet:
              name: Internet
            Digital Citizenship:
              name: Digital Citizenship
            Screen Out the Mean:
              name: Screen Out the Mean
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Events in Bounce:
              name: Events in Bounce
            Build a Flappy Game:
              name: Build a Flappy Game
            Conditionals with Cards:
              name: Conditionals with Cards
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Nested Loops Project in Frozen:
              name: Nested Loops in Frozen
            'How it Works: The Internet':
              name: 'Beyond Programming: The Internet'
            'Common Sense Education: Digital Citizenship':
              name: 'Digital Citizenship: Practicing Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Digital Citizenship: Screen Out the Mean'
            Events in Star Wars:
              name: Events in Star Wars
            Events with Flappy:
              name: Events with Flappy
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            Conditional Loops in Maze:
              name: Conditionals & Loops in Maze
            'Variables: Envelope Variables':
              name: 'Variables: Envelope Variables'
            'For Loops: For Loop Fun':
              name: 'For Loops: For Loop Fun'
            'Functions: Songwriting with Parameters':
              name: 'Functions: Songwriting with Parameters'
            Building a Foundation:
              name: Building a Foundation
            Nested Loops:
              name: Nested Loops
            Conditionals & Loops in Harvester:
              name: Conditionals & Loops in Harvester
            Until Loops in Maze:
              name: Until Loops in Maze
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: express-2017
        pre-express-2017:
          title: Pre-reader Express
          assignment_family_title: Pre-reader Express
          description_audience: 'Ages: 4-8'
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Sequencing with Drag and Drop
            'Online Safety: Your Digital Footprint':
              name: 'Digital Citizenship: My Digital Footprint'
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Programming: Star Wars':
              name: 'Programming: Star Wars'
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            Spelling Bee:
              name: Spelling Bee
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          name: pre-express-2017
        subgoal-labels-opt-in:
          title: Subgoal Labels Study Opt-in
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Subgoal Labels Study Opt-In:
              name: Subgoal Labels Study Opt-In
            deprecated:
              name: deprecated
            other:
              name: other
            Thanks:
              name: Thanks
            '':
              name: ''
            " ":
              name: " "
          student_description: ''
        csp-pre-survey-test-2017:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
            test satge:
              name: test satge
            CSP pre survey Test:
              name: CSP pre survey Test
            CSD pre survey test:
              name: CSD pre survey test
            CSD pulse check survey:
              name: CSD pulse check survey
        csp3-research-mxghyt:
          title: CSP Unit 3 - Intro to Programming (subgoals)
          description_audience: ''
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            new stage:
              name: new stage
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            foo:
              name: foo
            CSP Mid-course survey:
              name: CSP Mid-course survey
            Please complete the CSP Mid-course survey:
              name: Please complete the CSP Mid-course survey
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csd4-draft:
          title: CSD Unit 4 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: App Presentation
            Linking Screens:
              name: Linking Screens
          student_description: ''
        craft17:
          title: Craft17 Development Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            craft17 stage:
              name: craft17 stage
          student_description: ''
        applab-intro:
          title: Intro to App Lab
          description_audience: ''
          description_short: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          description: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          lesson_groups: {}
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: Intro to AppLab - Choose Your Own Adventure
            Intro to AppLab - Choose Your Own Adventure 2:
              name: Intro to AppLab - Choose Your Own Adventure 2
            Intro to AppLab - Your First App:
              name: Intro to AppLab - Your First App
            Intro to AppLab - Your First App 2:
              name: Intro to AppLab - Your First App 2
            Intro to AppLab - Your First App 3:
              name: Intro to AppLab - Your First App 3
            Intro to AppLab - Your First App 4:
              name: Intro to AppLab - Your First App 4
            Intro to AppLab - Getting Started:
              name: Intro to AppLab - Getting Started
            Intro to App Lab:
              name: Intro to App Lab
            'Lesson 1: App Lab Intro':
              name: 'Lesson 1: App Lab Intro'
          student_description: Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level.
          name: applab-intro
        e-f-ramp:
          title: Course E & F Ramp
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence and Preview in Maze:
              name: Sequence and Preview in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Intro to Conditionals with Farmer:
              name: Intro to Conditionals with Farmer
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Course E Introduction:
              name: Course E Introduction
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Sequence in Maze:
              name: Sequence in Maze
          student_description: ''
        new-d:
          title: New Course D Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Introduction:
              name: Introduction
            Events in Bounce:
              name: Events in Bounce
            Nested Loops:
              name: Nested Loops
            Nested Loops in Artist:
              name: Nested Loops in Artist
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: Debugging in Collector
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: Conditionals in Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Digital Citizenship:
              name: Digital Citizenship
            Build a Play Lab Game:
              name: Build a Play Lab Game
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
            Building a Foundation:
              name: Building a Foundation
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Loops in Ice Age:
              name: Loops in Ice Age
          student_description: ''
        csp3-a:
          title: CSP Unit 3 - Subgoals Group A
          description_audience: ''
          description_short: Alternate version of CSP Unit 3 for subgoal labels experiment group A.
          description: This unit introduces the foundational concepts of computer programming, for students in Subgoals Group A.
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
          lessons:
            new stage:
              name: new stage
            'CSP3A: Using Simple Commands':
              name: 'CSP3A: Using Simple Commands'
          student_description: This unit introduces the foundational concepts of computer programming, for students in Subgoals Group A.
        new-express:
          title: New Express Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Introduction:
              name: Introduction
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: Debugging in Collector
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            'How it Works: The Internet':
              name: 'How it Works: The Internet'
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Star Wars:
              name: Events in Star Wars
            Events with Flappy:
              name: Events with Flappy
            Events in Bounce:
              name: Events in Bounce
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditional Loops in Maze:
              name: Conditional Loops in Maze
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            'Variables: Envelope Variables':
              name: 'Variables: Envelope Variables'
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            'For Loops: For Loop Fun':
              name: 'For Loops: For Loop Fun'
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            'Functions: Songwriting with Parameters':
              name: 'Functions: Songwriting with Parameters'
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Nested Loops:
              name: Nested Loops
            Loops in Artist (UPDATED!):
              name: Loops in Artist (UPDATED!)
            Sarah test stage:
              name: Sarah test stage
          student_description: ''
        new-stages-sept-2017:
          title: New stages for 9/17
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Loops in Artist:
              name: Loops in Artist
            Sequences with Scrat:
              name: Sequences with Scrat
            Testing Template:
              name: Testing Template
          student_description: ''
        new-e:
          title: New Script for E
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Course E Introduction:
              name: Course E Introduction
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Bee:
              name: Functions in Bee
            Functions in Artist:
              name: Functions in Artist
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
          student_description: ''
        new-f:
          title: New Script for F
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Course E Introduction:
              name: Course E Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
          student_description: ''
        csd5-old:
          title: CSD Unit 5 - Data and Society
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of the your choosing.
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            8-bit Numbers:
              name: 8-bit Numbers
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of the your choosing.
        subgoals-assessment-staging:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            subgoal assessments:
              name: subgoal assessments
            lg by itself:
              name: lg by itself
            test of single level lg:
              name: test of single level lg
            submittable question at end of lessson:
              name: submittable question at end of lessson
            all assessment items as standalone assessment levels:
              name: all assessment items as standalone assessment levels
            all assessment items clustered in levelgroup:
              name: all assessment items clustered in levelgroup
            submittable if last assessment item:
              name: submittable if last assessment item
            assessment sandwiched between app lab levels:
              name: assessment sandwiched between app lab levels
            all assessment items clustered in levelgroup as a single "test":
              name: all assessment items clustered in levelgroup as a single "test"
            dummy:
              name: dummy
            CSP 3 updates staging ground:
              name: CSP 3 updates staging ground
          student_description: ''
        hocali:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
        colehoc2017:
          title: 'HoC 17 - Cole '
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            colehoc2017 stage:
              name: colehoc2017 stage
          student_description: ''
        craft17-kiki:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            craft17 stage:
              name: craft17 stage
          student_description: ''
        csd4-old:
          title: "(DEPRECATED) CSD Unit 4 - The Design Process"
          description_audience: ''
          description_short: 2016/17 Beta version of CSD Unit 4
          description: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: App Presentation
          student_description: ''
        csp3-staging:
          title: CSP 3 Proposed Changes Temporary Staging Ground
          description_audience: ''
          description_short: Temporary staging ground for Oct. changes to csp3
          description: "This is a replica of live levels in /s/csp3-2017 with new and modified stages added.  DO NOT EDIT LIVE LEVELS.\r\n"
          lesson_groups:
            csp3_1:
              display_name: 'Chapter 1: Programming Languages and Algorithms'
            cspAssessment:
              display_name: Chapter Assessment
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
          student_description: "This is a replica of live levels in /s/csp3-2017 with new and modified stages added.  DO NOT EDIT LIVE LEVELS.\r\n"
        pwc:
          title: PwC's Access Your Potential curriculum
          description_audience: ''
          description_short: ''
          description: At PwC, we believe that all students have the potential to be tomorrow’s leaders and tech-driven workforce. Access Your Potential is our commitment to help close the opportunity gap by equipping young people, especially those from disadvantaged communities, with the financial, technology and career-selection skills they need to change the trajectory of their lives. As part of our commitment, we’re excited to launch our Access Your Potential middle school technology and careers curriculum.
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            'Problem Solving: Personal Innovations':
              name: 'Problem Solving: Personal Innovations'
            'Technology Foundations: What is a Computer?':
              name: 'Technology Foundations: What is a Computer?'
            'Data Science: Problem Solving with Big Data':
              name: 'Data Science: Problem Solving with Big Data'
            Personal Innovations:
              name: Personal Innovations
            What is a Computer?:
              name: What is a Computer?
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Programming - Hour of Code:
              name: Programming - Hour of Code
            Simple Encryption:
              name: Simple Encryption
            Web Development - Creating Webpages:
              name: Web Development - Creating Webpages
            App Development Unplugged - User Interfaces:
              name: App Development Unplugged - User Interfaces
            App Development - Intro to App Lab:
              name: App Development - Intro to App Lab
            Creating Webpages:
              name: Creating Webpages
            User Interfaces:
              name: User Interfaces
            Intro to App Lab:
              name: Intro to App Lab
            Smart Clothing Design:
              name: Smart Clothing Design
            Intro to App Lab (13+):
              name: Intro to App Lab (13+)
          student_description: At PwC, we believe that all students have the potential to be tomorrow’s leaders and tech-driven workforce. Access Your Potential is our commitment to help close the opportunity gap by equipping young people, especially those from disadvantaged communities, with the financial, technology and career-selection skills they need to change the trajectory of their lives. As part of our commitment, we’re excited to launch our Access Your Potential middle school technology and careers curriculum.
        allthesurveys:
          title: All the surveys
          description_audience: ''
          description_short: Place to stage and test Code.org surveys
          description: ''
          lesson_groups: {}
          lessons:
            CSP pre survey Test:
              name: CSP pre survey Test
            CSD pre survey test:
              name: CSD pre survey test
            CSD pulse check survey:
              name: CSD pulse check survey
            CSD mid-post survey staging:
              name: CSD mid-post survey staging
            CSP pre survey Test 2017:
              name: CSP pre survey Test 2017
            CSD mid-post survey 2017 staging:
              name: CSD mid-post survey 2017 staging
            CSP pre survey 2017 staging:
              name: CSP pre survey 2017 staging
            CSD pre survey 2017 staging:
              name: CSD pre survey 2017 staging
            CSD/P pulse check survey 2017:
              name: CSD/P pulse check survey 2017
            CSD mid and post survey 2017 staging:
              name: CSD mid and post survey 2017 staging
            CSP mid and post survey 2017 staging:
              name: CSP mid and post survey 2017 staging
            CSP post survey 2018 staging:
              name: CSP post survey 2018 staging
            CSD post survey 2018 staging:
              name: CSD post survey 2018 staging
            CSD pre survey 2018 staging:
              name: CSD pre survey 2018 staging
            CSP pre survey 2018 staging:
              name: CSP pre survey 2018 staging
            CSP mid survey 2018 stagin:
              name: CSP mid survey 2018 stagin
            CSP mid survey 2018 staging:
              name: CSP mid survey 2018 staging
            CSP post course survey 2019 staging:
              name: CSP post course survey 2019 staging
            CSD post course survey 2019 staging:
              name: CSD post course survey 2019 staging
            Place for testing crazy stuff:
              name: Place for testing crazy stuff
            CSD pre-survey 2021:
              name: CSD pre-survey 2021
            CSD U2 U3 post-survey 2021:
              name: CSD U2 U3 post-survey 2021
            CSD U4 U5 U6 post-survey 2021:
              name: CSD U4 U5 U6 post-survey 2021
            CSP pre-survey 2021:
              name: CSP pre-survey 2021
            CSP post-survey 2020:
              name: CSP post-survey 2020
            CSP pre-survey 21-2:
              name: CSP pre-survey 21-22
            CSD pre-survey 21-2:
              name: CSD pre-survey 21-22
            lesson-20:
              name: CSP post-survey 2021
            CS Principles Pre-survey:
              name: CSA Pre-Survey Draft
            Course Survey:
              name: CSA Post-Course Survey Draft
          student_description: ''
          name: allthesurveys
        k1hoc2017:
          title: K-1 Hour of Code 2017
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Collector Hour of Code 2017:
              name: Collector Hour of Code 2017
          student_description: ''
        hero:
          title: 'Minecraft: Hero''s Journey'
          description_audience: ''
          description_short: Minecraft is back with a brand new activity for Hour of Code!
          description: Minecraft is back for the Hour of Code with a brand new activity! Journey through Minecraft with code.
          lesson_groups: {}
          lessons:
            'Minecraft\: Hero''s Journey Hour of Code':
              name: 'Minecraft\: Hero''s Journey Hour of Code'
            Minecraft Hour of Code:
              name: 'Minecraft: Hero''s Journey'
          student_description: Minecraft is back for the Hour of Code with a brand new activity! Journey through Minecraft with code.
          name: hero
        applab-intro-staging:
          title: Intro to App Lab Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: Intro to AppLab - Choose Your Own Adventure
            Intro to AppLab - Choose Your Own Adventure 2:
              name: Intro to AppLab - Choose Your Own Adventure 2
            Intro to AppLab - Your First App:
              name: Intro to AppLab - Your First App
            Intro to AppLab - Your First App 2:
              name: Intro to AppLab - Your First App 2
            Intro to AppLab - Your First App 3:
              name: Intro to AppLab - Your First App 3
            Intro to AppLab - Your First App 4:
              name: Intro to AppLab - Your First App 4
            Intro to AppLab - Getting Started:
              name: Intro to AppLab - Getting Started
            Intro to App Lab:
              name: Intro to App Lab
          student_description: ''
        csp-explore-2017:
          title: Explore - AP Performance Task Prep ('17-'18)
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description: "These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            new stage:
              name: new stage
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            'Setup: Digital Portfolio and Other Tools':
              name: 'Setup: Digital Portfolio and Other Tools'
            Post-Course Survey:
              name: Post-Course Survey
          student_description: "These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp-create-2017:
          title: Create - AP Performance Task Prep ('17-'18)
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description: "These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated December, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Post-Course Survey:
              name: Post-Course Survey
          student_description: "These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each \"lesson\" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r\n\r\nThis unit was last updated December, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates."
        csp3-reovery:
          title: 'csp3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Under the sea recovery:
              name: Under the sea recovery
        csp3-recovery:
          title: 'CSP3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Under the sea recovery:
              name: Under the sea recovery
            standalone template:
              name: standalone template
          student_description: ''
        aws-demo:
          title: AWS Demo
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
          student_description: ''
        halloween:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Halloween Artist:
              name: Halloween Artist
          student_description: ''
        valentine:
          title: Valentine Special
          description_audience: ''
          description_short: Have fun creating valentines
          description: ''
          lesson_groups: {}
          lessons:
            special valentine:
              name: special valentine
            Valentine Puzzles:
              name: Valentine Puzzles
          student_description: ''
        colehoc17:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
          student_description: ''
        course-e-2018:
          title: Course E 2018 (Outdated!)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            courseB_unplugged_MRF_2018:
              name: courseB_unplugged_MRF_2018
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            MINECRAFT STAGE GOES HERE:
              name: MINECRAFT STAGE GOES HERE
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Functions in Harvester:
              name: Functions in Harvester
          student_description: ''
        course-f-2018:
          title: Course F 2018 (Outdated)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
          student_description: ''
        csd6-old:
          title: "(DEPRECATED) CSD Unit 6 - Physical Computing"
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
          lessons:
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            The Circuit Playground:
              name: The Circuit Playground
            Lists:
              name: Lists
            Lights:
              name: Lights
            For Loops:
              name: For Loops
            Lists and For Loops:
              name: Lists and For Loops
            Timed Loops:
              name: Timed Loops
            'Project: Board Output':
              name: 'Project: Board Output'
            Physical Input:
              name: Physical Input
            Analog Input:
              name: Analog Input
            Sensor Applications:
              name: Sensor Applications
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
          student_description: ''
        unembeddedlevels:
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            CSD U3 Plotting Shapes Shape Lab - unembed:
              name: CSD U3 Plotting Shapes Shape Lab - unembed
            CSD U3 Entertainment Sample 1 - unembed:
              name: CSD U3 Entertainment Sample 1 - unembed
            Only Stage:
              name: Only Stage
        unembedded:
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Only Stage:
              name: Only Stage
        csd3-1819draft:
          title: CSD Unit 3 - Animations and Games
          description_audience: ''
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomization:
              name: Shapes and Randomization
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        textbook:
          title: CSF Textbook Pages
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Test Map Level:
              name: Test Map Level
            new stage:
              name: new stage
          student_description: ''
        glj-behavior-test:
          title: Game Lab Jr. Test - Behavior
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Cats and Dogs:
              name: Cats and Dogs
          student_description: ''
        csd3-2018:
          title: CSD Unit 3 - Animations and Games ('18-'19)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomization:
              name: Shapes and Randomization
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd2-2018:
          title: CSD Unit 2 - Web Development ('18-'19)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          lessons:
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            Digital Footprint:
              name: Digital Footprint
            Lists:
              name: Lists
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        coursea-2018:
          title: Course A (2018)
          assignment_family_title: Course A
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: Unspotted Bugs
            'Persistence & Frustration: Stevie and the Marbles':
              name: Stevie and the Big Project
            'Real-life Algorithms: Plant a Seed':
              name: Plant a Seed
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: Happy Maps
            Programming in Maze:
              name: Programming with Angry Birds
            Going Places Safely:
              name: Going Places Safely
            'Loops: Happy Loops':
              name: Happy Loops
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Ocean Scene with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: On the Move with Events
            Programming in Bee:
              name: Programming in Bee
            Programming in Harvester:
              name: Programming with Harvester
            Loops in Harvester:
              name: Loops with Harvester
            Sequencing in Maze:
              name: Sequencing with Angry Birds
            'Persistence & Frustration: Stevie and the Big Project':
              name: Stevie and the Big Project
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        express-2018:
          title: Express Course
          assignment_family_title: Express Course
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
            Introduction:
              name: Introduction
            Building a Foundation:
              name: Building a Foundation
            Debugging in Collector:
              name: Debugging in Collector
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Sticker Art with Loops
            Nested Loops:
              name: Nested Loops
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            'How it Works: The Internet':
              name: 'How it Works: The Internet'
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
            'Events: The Big Event':
              name: The Big Event
            Events in Star Wars:
              name: Events in Star Wars
            Events with Flappy:
              name: Events with Flappy
            Events in Bounce:
              name: Events in Bounce
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            While Loops in Farmer:
              name: While Loops with the Farmer
            Conditional Loops in Maze:
              name: Conditional Loops in Maze
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            'Variables: Envelope Variables':
              name: 'Variables: Envelope Variables'
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            'For Loops: For Loop Fun':
              name: 'For Loops: For Loop Fun'
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            'Functions: Songwriting with Parameters':
              name: 'Functions: Songwriting with Parameters'
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Conditionals in Bee:
              name: If/Else with Bee
            Until Loops in Maze:
              name: Until Loops in Maze
            Programming in Maze:
              name: Coding with Angry Birds
            Debugging in Maze:
              name: Debugging with Scrat
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            'Loops: Getting Loopy':
              name: Getting Loopy
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Copyright and Creativity:
              name: Copyright and Creativity
            'Concept Practice with Minecraft ':
              name: Looking Ahead with Minecraft
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Frozen:
              name: Nested Loops with Anna and Elsa
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            'Functions: Songwriting':
              name: Songwriting
            Functions in Minecraft:
              name: Functions with Minecraft
            Functions in Harvester:
              name: Functions with the Harvester
            Functions in Artist:
              name: Functions in Artist
            Screen Out the Mean:
              name: Screen Out the Mean
            Determine the Concept:
              name: Determine the Concept
            Build a Flappy Game:
              name: Build a Flappy Game
            The Power of Words:
              name: The Power of Words
            Envelope Variables:
              name: Envelope Variables
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            For Loop Fun:
              name: For Loop Fun
            Learning Sprites with Sprite Lab:
              name: Learning Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe
            Binary Bracelets:
              name: Binary Bracelets
            'Unplugged: Binary':
              name: Binary Images
            Artist Binary:
              name: Binary Images with Artist
            Internet:
              name: The Internet
            Crowdsourcing:
              name: Crowdsourcing
            Relay Programming:
              name: Relay Programming
            Graph Paper Programming:
              name: Graph Paper Programming
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2018:
          title: Course B (2018)
          assignment_family_title: Course B
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Your Digital Footprint:
              name: Your Digital Footprint
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
            Programming in Maze:
              name: Programming in Maze
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: A Royal Battle with Events
            Programming in Ice Age:
              name: Programming with Scrat
            Loops in Ice Age:
              name: Loops with Scrat
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Move It, Move It:
              name: Move It, Move It
            Copyright and Creativity:
              name: It's Great to Create and Play Fair
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        coursed-2018:
          title: Course D (2018)
          assignment_family_title: Course D
          description: Students develop their understanding of nested loops, while loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements and create your own art, story or game.
          description_audience: 'Ages: 7-11'
          lesson_groups: {}
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
            Introduction:
              name: Introduction
            Building a Foundation:
              name: Building a Foundation
            Debugging in Collector:
              name: Debugging with Laurel
            Events in Bounce:
              name: Events in Bounce
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: If/Else with Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Digital Citizenship:
              name: Digital Citizenship
            Build a Play Lab Game:
              name: Ninjas vs. Pirates Game
            'Unplugged: Binary':
              name: Binary Images
            Artist Binary:
              name: Binary Images with Artist
            Loops in Ice Age:
              name: Loops in Ice Age
            Nested Loops in Frozen:
              name: Snowflakes with Anna and Elsa
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals in Maze:
              name: Conditionals in Maze
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            Graph Paper Programming:
              name: Graph Paper Programming
            Relay Programming:
              name: Relay Programming
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
            Events in Bouncey:
              name: Events in Bouncey
            Nested Loops in Bees:
              name: Nested Loops in Bees
            Nested Loops in Maze:
              name: Nested Loops in Maze
          student_description: Students develop their understanding of nested loops, while loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
        jr-test:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Programming with Behaviors:
              name: Programming with Behaviors
            Programming with Forever:
              name: Programming with Forever
            Using Behaviors:
              name: Using Behaviors
            Using Forever Loops:
              name: Using Forever Loops
            Virtual Pet - Behaviors:
              name: Virtual Pet - Behaviors
            Fish Tank:
              name: Fish Tank
            Virtual Pet - Forever:
              name: Virtual Pet - Forever
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
          student_description: ''
        petgame:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            pet game:
              name: pet game
          student_description: ''
        csp-exam:
          title: CS Principles AP Exam Prep
          description_audience: ''
          description_short: CS Principles AP Exam Prep
          description: 'This page contains copies of all the multiple choice assessment questions that appeared in Units 1-5 in the course.  Students may want to practice for the multiple choice exam by re-taking these little tests.  '
          lesson_groups: {}
          lessons:
            Unit 1 - Assessment 1:
              name: Unit 1 - Assessment 1
            Unit 1 - Assessment 2:
              name: Unit 1 - Assessment 2
            Unit 2 - Assessment 1:
              name: Unit 2 - Assessment 1
            Unit 2 - Assessment 2:
              name: Unit 2 - Assessment 2
            Unit 3 - Assessment 1:
              name: Unit 3 - Assessment 1
            Unit 4 - Assessment 1:
              name: Unit 4 - Assessment 1
            Unit 5 - Assessment 1:
              name: Unit 5 - Assessment 1
            Unit 5 - Assessment 2:
              name: Unit 5 - Assessment 2
            Unit 2 - Assessment 3:
              name: Unit 2 - Assessment 3
            Unit 2 - Assessment 4:
              name: Unit 2 - Assessment 4
            Unit 2 - Assessment 5 - Practice AP Pseudocode Questions:
              name: Unit 2 - Assessment 5 - Practice AP Pseudocode Questions
            'Unit 1.1 - Binary and Ascii ':
              name: 'Unit 1.1 - Binary and Ascii '
            Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.:
              name: Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.
            Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression
            Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction:
              name: Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction
            Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction:
              name: Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction
            'Unit 1 Assessment 1 - Binary and Ascii ':
              name: 'Unit 1 Assessment 1 - Binary and Ascii '
            Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc:
              name: Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc
            Unit 2-1 - Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2-1 - Bits, Bytes, Hexadecimal and Compression
            Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction
            Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression
            Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction
            Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption:
              name: Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption
            Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review:
              name: Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review
            Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings:
              name: Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings
            Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists:
              name: Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists
            Unit 5 Assessment 4 - List Algorithms, Functions with Return Values:
              name: Unit 5 Assessment 4 - List Algorithms, Functions with Return Values
            Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals):
              name: Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals)
          student_description: 'This page contains copies of all the multiple choice assessment questions that appeared in Units 1-5 in the course.  Students may want to practice for the multiple choice exam by re-taking these little tests.  '
        coursec-2018:
          title: Course C (2018)
          assignment_family_title: Course C
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups: {}
          lessons:
            Building a Foundation:
              name: Building a Foundation
            Programming in Maze:
              name: Programming with Angry Birds
            Debugging in Maze:
              name: Debugging in Maze
            'Real-life Algorithms: Paper Planes':
              name: Paper Planes
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            'Loops: Getting Loopy':
              name: Getting Loopy
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Loops in Artist:
              name: Sticker Art with Loops
            Loops in Harvester:
              name: Harvesting Crops with Loops
            'Events: The Big Event':
              name: The Big Event
            Build a Flappy Game:
              name: Build a Flappy Game
            Events in Play Lab:
              name: Chase Game with Events
            Screen Out the Mean:
              name: Screen Out the Mean
            Binary Bracelets:
              name: Binary Bracelets
            Looking Ahead:
              name: Looking Ahead with Minecraft
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        csd6-2018:
          title: CSD Unit 6 - Physical Computing ('18-'19)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          lessons:
            Innovations in Computing_:
              name: Innovations in Computing_
            Designing Screens with Code_:
              name: Designing Screens with Code_
            The Circuit Playground_:
              name: The Circuit Playground_
            Input Unplugged_:
              name: Input Unplugged_
            Board Events_:
              name: Board Events_
            Getting Properties_:
              name: Getting Properties_
            Analog Input_:
              name: Analog Input_
            The Program Design Process_:
              name: The Program Design Process_
            'Project: Make a Game__':
              name: 'Project: Make a Game__'
            Arrays and Color LEDs__:
              name: Arrays and Color LEDs__
            Making Music_:
              name: Making Music_
            Arrays and For Loops_:
              name: Arrays and For Loops_
            Accelerometer_:
              name: Accelerometer_
            Functions with Parameters_:
              name: Functions with Parameters_
            Circuits and Physical Prototypes_:
              name: Circuits and Physical Prototypes_
            'Project: Prototype an Innovation_':
              name: 'Project: Prototype an Innovation_'
            Innovations in Computing:
              name: Innovations in Computing
            Designing Screens with Code:
              name: Designing Screens with Code
            The Circuit Playground:
              name: The Circuit Playground
            Input Unplugged:
              name: Input Unplugged
            Board Events:
              name: Board Events
            Getting Properties:
              name: Getting Properties
            Analog Input:
              name: Analog Input
            The Program Design Process:
              name: The Program Design Process
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        coursee-2018:
          title: Course E (2018)
          assignment_family_title: Course E
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            csf_e_1:
              display_name: Ramp Up to Course E (Optional)
            csf_e_2:
              display_name: Course E Content
            end_of_course_project:
              display_name: End of Course Project
            extra_course_content:
              display_name: Extra Course Content
          lessons:
            'Programming: My Robotic Friends':
              name: My Robotic Friends
            Sequence in Maze:
              name: Coding with Comments
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Creating Art with Code
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops:
              name: Nested Loops in Maze
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals with the Farmer
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: Songwriting
            Functions in Artist:
              name: Functions with Artist
            Functions in Bee:
              name: Functions with Bee
            Functions in Harvester:
              name: Functions with Harvester
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: The Internet
            Crowdsourcing:
              name: Crowdsourcing
            Conditionals with Cards:
              name: Conditionals with Cards
            Minecraft Hour of Code:
              name: Minecraft Hour of Code
            Functions in Minecraft:
              name: Functions in Minecraft
            Learning Sprites with Sprite Lab:
              name: Learning Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe
            Copyright and Creativity:
              name: Digital Sharing
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
        coursef-2018:
          title: Course F (2018)
          assignment_family_title: Course F
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            csf_f_1:
              display_name: Ramp Up to Course F (Optional)
            csf_f_2:
              display_name: Course F Content
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: My Robotic Friends
            Sequence in Maze:
              name: Coding with Comments
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Creating Art with Code
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Maze
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Functions in Bee:
              name: Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals:
              name: Conditionals with the Farmer
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            Learning Sprites with Sprite Lab:
              name: Learning Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe
            Functions in Minecraft:
              name: Functions with Minecraft
            Conditionals in Farmer:
              name: Conditionals with the Farmer
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
        csp1-2018:
          title: CSP Unit 1 - The Internet ('18-'19)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          lessons:
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Personal Innovations:
              name: Personal Innovations
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Number Systems:
              name: Number Systems
            Binary Numbers:
              name: Binary Numbers
            Sending Numbers:
              name: Sending Numbers
            Encoding and Sending Formatted Text:
              name: Encoding and Sending Formatted Text
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            The Internet:
              name: The Internet
            The Need for Addressing:
              name: The Need for Addressing
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            The Need for DNS:
              name: The Need for DNS
            HTTP and Abstraction:
              name: HTTP and Abstraction
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
            Sending Text:
              name: Sending Text
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
        csd1-2018:
          title: CSD Unit 1 - Problem Solving ('18-'19)
          description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Storage:
              name: Storage
            Apps and Problem Solving:
              name: Apps and Problem Solving
            Project - Propose an App:
              name: Project - Propose an App
            Apps and Storage:
              name: Apps and Storage
          student_description: " \r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd4-2018:
          title: CSD Unit 4 - The Design Process ('18-'19)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            cspSurvey:
              display_name: Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Linking Screens:
              name: Linking Screens
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            Project - App Presentation:
              name: Project - App Presentation
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-2018:
          title: CSD Unit 5 - Data and Society ('18-'19)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            Keeping Data Secret:
              name: Keeping Data Secret
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Structuring Data:
              name: Structuring Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csp2-2018:
          title: CSP Unit 2 - Digital Information ('18-'19)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1_2018:
              display_name: 'Unit 2: Digital Information'
            cspAssessment:
              display_name: Chapter Assessment
          lessons:
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Text Compression:
              name: Text Compression
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Practice PT - Encode an Experience:
              name: Practice PT - Encode an Experience
            Unit 2 Chapter 1 Assessment:
              name: Unit 2 Chapter 1 Assessment
            Intro to Data:
              name: Intro to Data
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Check Your Assumptions:
              name: Check Your Assumptions
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Discover a Data Story:
              name: Discover a Data Story
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            Lossy vs. Lossless Compression:
              name: Lossy vs. Lossless Compression
            Rapid Research - Format Showdown:
              name: Rapid Research - Format Showdown
            Lossy vs Lossless Compression:
              name: Lossy vs Lossless Compression
            Unit 2 Assessment:
              name: Unit 2 Assessment
          student_description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        csp3-2018:
          title: CSP Unit 3 - Intro to Programming ('18-'19)
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            Please complete the CSP Mid-course survey!:
              name: Please complete the CSP Mid-course survey!
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          name: csp3-2018
        csp-explore-2018:
          title: Explore - AP Performance Task Prep ('18-'19)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csp-create-2018:
          title: Create - AP Performance Task Prep ('18-'19)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csp4-2018:
          title: CSP Unit 4 - Big Data and Privacy ('18-'19)
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1_2018:
              display_name: 'Unit 4: Big Data and Privacy'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            What is Big Data?:
              name: What is Big Data?
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Identifying People with Data:
              name: Identifying People with Data
            The Cost of Free:
              name: The Cost of Free
            Simple Encryption:
              name: Simple Encryption
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
            Public Key Crypto:
              name: Public Key Crypto
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
            Practice PT - Big Data and Security Dilemmas:
              name: Practice PT - Big Data and Security Dilemmas
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Check Your Assumptions:
              name: Check Your Assumptions
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
        csp5-2018:
          title: CSP Unit 5 - Building Apps ('18-'19)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          lessons:
            Buttons and Events:
              name: Buttons and Events
            Multi-screen Apps:
              name: Multi-screen Apps
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
            User Input and Strings:
              name: User Input and Strings
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            While Loops:
              name: While Loops
            Loops and Simulations:
              name: Loops and Simulations
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Processing Arrays:
              name: Processing Arrays
            Functions with Return Values:
              name: Functions with Return Values
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csppostap-2018:
          title: Post AP - Data Tools ('18-'19)
          description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups:
            csp_postap_1:
              display_name: 'Chapter 1: Manipulating and Visualizing Data'
            csp_postap_2:
              display_name: 'Chapter 2: Apps and Databases'
            cspSurvey:
              display_name: Survey
          lessons:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Deleting Records:
              name: Deleting Records
            Updating Records:
              name: Updating Records
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Visualizing Data:
              name: Visualizing Data
            Sample Apps:
              name: Sample Apps
            Final Project:
              name: Final Project
            Intro to Data:
              name: Intro to Data
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Check Your Assumptions:
              name: Check Your Assumptions
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Discover a Data Story:
              name: Discover a Data Story
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Project - Tell a Data Story:
              name: Project - Tell a Data Story
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            Chapter 1 Assessment:
              name: Chapter 1 Assessment
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
        spritelab:
          title: Introduction to Sprite Lab (PILOT)
          description_audience: Course E/F Students
          description_short: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          lesson_groups: {}
          lessons:
            'Fish Tank: Creating Sprites':
              name: 'Fish Tank: Creating Sprites'
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
          student_description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
        csd1-dlp-18:
          title: CS Discoveries Unit 1 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd1-dlp-18
        csd2-dlp-18:
          title: CS Discoveries Unit 2 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
          student_description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd2-dlp-18
        csd3-dlp-18:
          title: CS Discoveries Unit 3 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          student_description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd3-dlp-18
        csd4-dlp-18:
          title: CS Discoveries Unit 4 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
          student_description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd4-dlp-18
        csd5-dlp-18:
          title: CS Discoveries Unit 5 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
          student_description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd5-dlp-18
        csd6-dlp-18:
          title: CS Discoveries Unit 6 Deeper Learning 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Discoveries facilitators in training '
          description: 'This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
          student_description: 'This is Unit 6 of the Deeper Learning Plan for Code.org CS Discoveries facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 6 of the Code.org CS Discoveries Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csd6-dlp-18
        csp1-dlp-18:
          title: CS Principles Unit 1 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
          student_description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 1 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csp1-dlp-18
        csp2-dlp-18:
          title: CS Principles Unit 2 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
          student_description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 2 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          name: csp2-dlp-18
        csp3-dlp-18:
          title: CS Principles Unit 3 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          student_description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 3 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp4-dlp-18:
          title: CS Principles Unit 4 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
          student_description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 4 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp5-dlp-18:
          title: CS Principles Unit 5 Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
          student_description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of Unit 5 of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp-explore-dlp-18:
          title: CS Principles Explore Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is the Explore AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Explore AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
            Complete Explore AP Unit Deeper Learning Reflections:
              name: Complete Explore AP Unit Deeper Learning Reflections
            Complete Explore Deeper Learning Reflections:
              name: Complete Explore Deeper Learning Reflections
          student_description: 'This is the Explore AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Explore AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csp-create-dlp-18:
          title: CS Principles Create Deeper Learning 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Deeper Learning materials for CS Principles facilitators in training '
          description: 'This is the Create AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Create AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Create Deeper Learning Reflections:
              name: Complete Create Deeper Learning Reflections
          student_description: 'This is the Create AP Unit of the Deeper Learning Plan for Code.org CS Principles facilitators in training. Here you will find reflection prompts and guidance for demonstrating proficiency as a facilitator of the Create AP Unit of the Code.org CS Principles Curriculum. Peer review items are available at the bottom of this page, once you''ve submitted your own reflections for the unit. '
        csd-post-survey:
          title: CSD Student Post-Course Survey ('18-'19)
          description_audience: CSD Students
          description_short: CSD Student Post-Course Survey
          description: Welcome to the Code.org CS Discoveries Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            csd_survey:
              display_name: Post-Course Survey
          lessons:
            CSD post-course survey:
              name: CSD Student Post-Course Survey ('18-'19)
          student_description: Welcome to the Code.org CS Discoveries Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csd-post-survey
        csd-novice-18:
          title: CS Discoveries Novice Reflections 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Novice reflection materials for CS Discoveries facilitators in training '
          description: This is the set of novice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflections Overview:
              name: Novice Reflections Overview
            Welcome:
              name: Welcome
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Friday:
              name: Friday
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Monday:
              name: Monday
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
          student_description: This is the set of novice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        csd-apprentice-18:
          title: CS Discoveries Apprentice Reflections 2018-2019
          description_audience: CS Discoveries Facilitators in Training 2018-2019
          description_short: 'Apprentice reflection materials for CS Discoveries facilitators in training '
          description: This is the set of apprentice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Apprentice Reflection Overview:
              name: Apprentice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
          student_description: This is the set of apprentice reflections for Code.org CS Discoveries facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        csp-novice-18:
          title: CS Principles Novice Reflections 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Novice reflection materials for CS Principles facilitators in training '
          description: This is the set of novice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Monday:
              name: Monday
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
          student_description: This is the set of novice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        csp-apprentice-18:
          title: CS Principles Apprentice Reflections 2018-2019
          description_audience: CS Principles Facilitators in Training 2018-2019
          description_short: 'Apprentice reflection materials for CS Principles facilitators in training '
          description: This is the set of apprentice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
            Apprentice Reflection Overview:
              name: Apprentice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
          student_description: This is the set of apprentice reflections for Code.org CS Principles facilitators in training during their 5-day summer workshop. Here you will find reflection prompts for each day of your in-person 5-day summer workshop. This questions will be the foundation of work we do at the Facilitator Training Weekend.
        pre-express-2018:
          title: Pre-reader Express (2018)
          assignment_family_title: Pre-reader Express
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: Unspotted Bugs
            'Persistence & Frustration: Stevie and the Marbles':
              name: Stevie and the Big Project
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Online Safety: Your Digital Footprint':
              name: 'Online Safety: Your Digital Footprint'
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
            Programming in Maze:
              name: Programming in Maze
            'Programming: Star Wars':
              name: 'Programming: Star Wars'
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: A Royal Battle with Events
            Spelling Bee:
              name: Spelling Bee
            Move It, Move It:
              name: Move It, Move It
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Your Digital Footprint:
              name: Your Digital Footprint
            Programming in Ice Age:
              name: Programming with Scrat
            Copyright and Creativity:
              name: It's Great to Create and Play Fair
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Loops in Ice Age:
              name: Loops with Scrat
            'Persistence & Frustration: Stevie and the Big Project':
              name: Stevie and the Big Project
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        spritelab-validated:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
          student_description: ''
        2018hoc-ab:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Labyrinth:
              name: Labyrinth
          student_description: ''
        deepdive-debugging:
          title: Debugging Lessons for Educators
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Debugging for AB Educators:
              name: Debugging for AB Educators
            Debugging for CDEF Educators:
              name: Debugging for CDEF Educators
          student_description: ''
        fit-test:
          title: FIT Training Practice PLC Course
          description_audience: Facilitators in Training
          description_short: FIT Training Course
          description: To be used to demonstrate how the PLC courses work.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Practice Question:
              name: Complete Practice Question
          student_description: To be used to demonstrate how the PLC courses work.
        spritelab-simple:
          title: Introduction to Sprite Lab (EE)
          description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description_short: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
          description_audience: Course E/F Students
          lesson_groups: {}
          lessons:
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
          student_description: This is a pilot course for Code.org's new Sprite Lab tool for Courses E and F
        spritelab-ee:
          title: Introduction to Sprite Lab (EE)
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Fish Tank - Creating Sprites:
              name: Fish Tank - Creating Sprites
            Alien Dance Party - Input:
              name: Alien Dance Party - Input
            Virtual Pet - Interactions:
              name: Virtual Pet - Interactions
          student_description: ''
        craft18:
          title: craft18 test script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            craft18 levels:
              name: craft18 levels
          student_description: ''
        frozen-2018:
          title: New Frozen Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
          student_description: ''
        frozen-2018-test:
          title: New Frozen Script
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
          student_description: ''
        dance:
          title: Dance Party (2018)
          description_audience: ''
          description_short: Featuring Katy Perry, Madonna, J. Balvin, Sia, Keith Urban, Ciara, and 25 more!
          description: Code your own dance party to share with your friends!
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Dance Party:
              name: Dance Party
          student_description: Code your own dance party to share with your friends!
          name: dance
        frozen-2018-test-b:
          title: New Frozen Script
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Artist:
              name: Artist
          student_description: ''
        aquatic:
          title: 'Minecraft: Voyage Aquatic'
          description_audience: ''
          description_short: Use your creativity and problem solving skills to explore and build underwater worlds with code!
          description: Minecraft is back with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code.
          lesson_groups: {}
          lessons:
            Aquatic:
              name: 'Minecraft: Voyage Aquatic'
          student_description: Minecraft is back with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code.
          name: aquatic
        sconyers:
          title: Tracey's Playground
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Lesson the first:
              name: Lesson the first
            Digital Design:
              name: Digital Design
            Linking Screens:
              name: Linking Screens
            Test Lesson:
              name: Test Lesson
          student_description: ''
        dance--draft:
          title: ''
          description: ''
          description_short: ''
          description_audience: ''
          lessons:
            Dance Party:
              name: Dance Party
        dance-draft:
          title: DO NOT USE
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            Dance Party:
              name: Dance Party
          student_description: ''
        cspplayground:
          title: CSP Playground
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Hannah's Test Stage:
              name: Hannah's Test Stage
            Hannah Test Stage:
              name: Hannah Test Stage
            U4 L02 Variables Investigate:
              name: U4 L02 Variables Investigate
            Variables Investigate:
              name: Variables Investigate
            Variables Explore:
              name: Variables Explore
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey:
              name: Student Survey
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Teacher Surveys:
              name: Teacher Surveys
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Lists Explore:
              name: Lists Explore
          student_description: ''
        dance-extras:
          title: Keep On Dancing (2018)
          description_audience: ''
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description: Go beyond the first hour with extended project ideas.
          lesson_groups: {}
          lessons:
            Dance Party - Go Further:
              name: Keep on Dancing (2018)
          student_description: Go beyond the first hour with extended project ideas.
          name: dance-extras
        coursef-2019:
          title: Course F (2019)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_internet:
              display_name: Internet
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Farmer:
              name: Conditionals in Farmer
            Functions in Minecraft:
              name: Functions in Minecraft
            The Power of Words:
              name: The Power of Words
            Envelope Variables:
              name: Envelope Variables
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            The Artist:
              name: The Artist
            Nested Loops in the Maze:
              name: Nested Loops in Maze
            Sequencing in the Maze:
              name: Sequencing in the Maze
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
            Events with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Loops with the Artist:
              name: Drawing with Loops
            Sprite Lab Behaviors:
              name: Sprite Lab Behaviors
            Editing Behaviors:
              name: Behaviors in Sprite Lab
            Virtual Pet:
              name: Virtual Pet with Sprite Lab
            Data from Sprite Lab:
              name: Data from Sprite Lab
            End of Course Project:
              name: End of Course Project
            Copyright and Creativity:
              name: Copyright and Creativity
            Internet:
              name: The Internet
            Crowdsourcing:
              name: Crowdsourcing
            Digital Sharing:
              name: Digital Sharing
            Running Simulations:
              name: Running Simulations
            Simulating Experiments:
              name: Simulating Experiments
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
        dance-low:
          title: Dance Party (Low Bandwidth)
          description_audience: ''
          description_short: Code your own dance party to share with your friends! (This version is for slow connections)
          description: ''
          lesson_groups: {}
          lessons:
            Dance Party:
              name: Dance Party
          student_description: ''
        coursed-2019:
          title: Course D (2019)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
            Relay Programming:
              name: Relay Programming
            Debugging in Collector:
              name: Debugging with Laurel
            Events in Bounce:
              name: Events in Bounce
            Loops in Ice Age:
              name: Loops in Ice Age
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Nested Loops in Artist
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
            While Loops in Farmer:
              name: While Loops in Farmer
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: If/Else with Bee
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            Digital Citizenship:
              name: Digital Citizenship
            Build a Play Lab Game:
              name: Build a Play Lab Game
            'Unplugged: Binary':
              name: Binary Images
            Artist Binary:
              name: Binary Images with Artist
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Dance Party:
              name: Dance Party
          student_description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
        coursee-2019:
          title: Course E (2019)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals:
              name: Conditionals with the Farmer
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: Songwriting
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions with Harvester
            Copyright and Creativity:
              name: Copyright and Creativity
            Functions in Artist:
              name: Functions with Artist
            Determine the Concept:
              name: Determine the Concept
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
            Nested Loops in Frozen:
              name: Nested Loops with Frozen
            Sequencing in the Maze:
              name: Sequencing in the Maze
            Programming and Loops with the Artist:
              name: Drawing with Loops
            End of Course Project:
              name: End of Course Project
            Conditionals in Minecraft:
              name: Conditionals in Minecraft
            About Me:
              name: About Me with Sprite Lab
            Aquatic Conditionals in Minecraft:
              name: Aquatic Conditionals in Minecraft
            Access Ability:
              name: Designing for Accessibility
            Digital Sharing:
              name: Digital Sharing
            Simon Says:
              name: Simon Says
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Swimming Fish with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Designing for Accessibility:
              name: Designing for Accessibility
            Songwriting:
              name: Songwriting
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
        express-2019:
          title: Express Course (2019)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm-Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Programming in Maze:
              name: Programming with Angry Birds
            Relay Programming:
              name: Relay Programming
            Debugging in Maze:
              name: Debugging with Scrat
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Loops in Artist:
              name: Sticker Art with Loops
            Copyright and Creativity:
              name: Copyright and Creativity
            'Concept Practice with Minecraft ':
              name: Looking Ahead with Minecraft
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Nested Loops in Frozen:
              name: Snowflakes with Anna and Elsa
            While Loops in Farmer:
              name: While Loops with the Farmer
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: If/Else with Bee
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions with Harvester
            Functions in Artist:
              name: Functions with Artist
            Screen Out the Mean:
              name: Screen Out the Mean
            Determine the Concept:
              name: Determine the Concept
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Build a Flappy Game:
              name: Build a Flappy Game
            The Power of Words:
              name: The Power of Words
            Envelope Variables:
              name: Envelope Variables
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            Learning Sprites with Sprite Lab:
              name: Swimming Fish in Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Present Your Project:
              name: Present Your Project
            Binary Bracelets:
              name: Binary Bracelets
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Editing Behaviors:
              name: Behaviors in Sprite Lab
            Virtual Pet with Sprite Lab:
              name: Virtual Pet with Sprite Lab
            Build A Project:
              name: End of Course Project
            Dance Party:
              name: Dance Party
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Concept Practice with Minecraft:
              name: Concept Practice with Minecraft
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          name: express-2019
        csd1-2019:
          title: CSD Unit 1 - Problem Solving and Computing ('19-'20)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Apps and Storage:
              name: Apps and Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        andrea-test:
          title: andrea-test
          description_audience: 6-12 Facilitators-in-Training
          description_short: this is to test my skills in making a course
          description: longer description on my attempt to create a course....   stilling wondering where overview, content came from....
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            new stage:
              name: new stage
            module1:
              name: module1
            module2:
              name: module2
            andrea-g1:
              name: andrea-g1
            andrea-g2:
              name: andrea-g2
            andrea-g3:
              name: andrea-g3
            andrea-s1:
              name: andrea-s1
            andrea-s3:
              name: andrea-s3
            'null':
              name: 'null'
            andrea-stage1:
              name: andrea-stage1
            andrea-test-stage1:
              name: andrea-test-stage1
            andrea-test-stage2:
              name: andrea-test-stage2
            andrea-test-stage3:
              name: andrea-test-stage3
            Deeper Learning Overview:
              name: Deeper Learning Overview
            andrea-test-stage4:
              name: andrea-test-stage4
            Part 1:
              name: Part 1
            Part 2:
              name: Part 2
            part 3:
              name: part 3
          name: andrea-test
          student_description: longer description on my attempt to create a course....   stilling wondering where overview, content came from....
        dance-extras-gallery:
          title: Keep On Dancing
          description_audience: ''
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description: Go beyond the first hour with extended project ideas.
          lesson_groups: {}
          lessons:
            Dance Party - Go Further:
              name: Dance Party - Go Further
          student_description: Go beyond the first hour with extended project ideas.
        coursec-2019:
          title: Course C (2019)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Programming in Maze:
              name: Programming with Angry Birds
            Debugging in Maze:
              name: Debugging in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Loops in Artist:
              name: Loops in Artist
            Loops in Harvester:
              name: Harvesting Crops with Loops
            'Events: The Big Event':
              name: The Big Event
            Build a Flappy Game:
              name: Build a Flappy Game
            Screen Out the Mean:
              name: Screen Out the Mean
            Events in Play Lab:
              name: Chase Game with Events
            Looking Ahead:
              name: Looking Ahead with Minecraft
            Binary Bracelets:
              name: Binary Bracelets
            Create a Design with Loops:
              name: Create a Design with Loops
            'End of Course Project: Create a Play Lab Game':
              name: End of Course Project
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
            Graphing Data:
              name: Graphing Data
            Powerful Passwords:
              name: Powerful Passwords
            Sticker Art with Loops:
              name: Sticker Art with Loops
            Picturing Data:
              name: Picturing Data
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        csp-mid-survey:
          title: CSP Student Mid-year Survey
          description_audience: CSP Students
          description_short: CSP Student Mid-year Survey
          description: Welcome to the Code.org CS Principles Mid-Year Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSP Mid-year survey:
              name: CSP Student Mid-year Survey
          student_description: Welcome to the Code.org CS Principles Mid-Year Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csp-mid-survey
        gamelab:
          title: Game Lab
          description_audience: ''
          description_short: ''
          description: Teacher-facing tutorials for development in Game Lab.  These tutorials go beyond the concepts covered in CSD.
          lesson_groups: {}
          lessons:
            Start and End Screens:
              name: Start and End Screens
            Start and End Screens2:
              name: Start and End Screens2
          student_description: Teacher-facing tutorials for development in Game Lab.  These tutorials go beyond the concepts covered in CSD.
        coursea-2019:
          title: Course A (2019)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
            'Programming: Happy Maps':
              name: Happy Maps
            Programming in Maze:
              name: Programming in Maze
            Programming in Harvester:
              name: Programming in Harvester
            Going Places Safely:
              name: Going Places Safely
            'Loops: Happy Loops':
              name: Happy Loops
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: On the Move with Events
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Loops in Ice Age:
              name: Loops with Scrat
            Programming in Ice Age:
              name: Programming with Scrat
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Sequencing with Scrat:
              name: Sequencing with Scrat
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2019:
          title: Course B (2019)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          lessons:
            Move It, Move It:
              name: Move It, Move It
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Your Digital Footprint:
              name: Your Digital Footprint
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Ice Age:
              name: Programming in Ice Age
            Copyright and Creativity:
              name: Copyright and Creativity
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Ice Age:
              name: Loops in Ice Age
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: A Royal Battle with Events
            'Loops: Getting Loopy':
              name: Getting Loopy
            The Right App:
              name: The Right App
            Loops in Harvester:
              name: Loops with Harvester
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
            Sequencing in Maze:
              name: Sequencing with Angry Birds
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        pre-express-2019:
          title: Pre-reader Express (2019)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Big Project':
              name: 'Persistence & Frustration: Stevie and the Big Project'
            Move It, Move It:
              name: Move It, Move It
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Your Digital Footprint:
              name: Your Digital Footprint
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Ice Age:
              name: Programming in Ice Age
            Copyright and Creativity:
              name: Copyright and Creativity
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Ice Age:
              name: Loops with Scrat
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            Spelling Bee:
              name: Spelling Bee
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
            Tell a Story in Play Lab:
              name: On the Move with Events
            Make a Game in Play Lab:
              name: A Royal Battle with Events
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          name: pre-express-2019
        removed19:
          title: Removed from CSF for 2019
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Big Project':
              name: 'Persistence & Frustration: Stevie and the Big Project'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
          student_description: ''
        dani-test-script:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
        csd2-2019:
          title: CSD Unit 2 - Web Development ('19-'20)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          lessons:
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            Digital Footprint:
              name: Digital Footprint
            Lists:
              name: Lists
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        csd3-2019:
          title: CSD Unit 3 - Animations and Games ('19-'20)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomization:
              name: Shapes and Randomization
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd4-2019:
          title: CSD Unit 4 - The Design Process ('19-'20)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Linking Screens:
              name: Linking Screens
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            Project - App Presentation:
              name: Project - App Presentation
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Post-Project Test:
              name: Post-Project Test
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-2019:
          title: CSD Unit 5 - Data and Society ('19-'20)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            Keeping Data Secret:
              name: Keeping Data Secret
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Structuring Data:
              name: Structuring Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd6-2019:
          title: CSD Unit 6 - Physical Computing ('19-'20)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          lessons:
            Innovations in Computing:
              name: Innovations in Computing
            Designing Screens with Code:
              name: Designing Screens with Code
            The Circuit Playground:
              name: The Circuit Playground
            Input Unplugged:
              name: Input Unplugged
            Board Events:
              name: Board Events
            Getting Properties:
              name: Getting Properties
            Analog Input:
              name: Analog Input
            The Program Design Process:
              name: The Program Design Process
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csp4-pilot:
          title: CSP Unit 4 Pilot - Variables, Conditionals, and Functions
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey:
              name: Student Survey
            Surveys:
              name: Surveys
            Student Surveys:
              name: Student Surveys
            'Teacher Surveys: HIDE':
              name: 'Teacher Surveys: HIDE'
            Teacher Surveys:
              name: Teacher Surveys
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            'Lesson 15: Unit 4 Assessment':
              name: 'Lesson 15: Unit 4 Assessment'
            Unit 4 STUDENT Survey:
              name: Unit 4 STUDENT Survey
            Unit 4 TEACHER Survey:
              name: Unit 4 TEACHER Survey
            'Lesson 15: Assessment Day':
              name: 'Lesson 15: Assessment Day'
            Project - Decision Maker App - Part 1:
              name: Project - Decision Maker App - Part 1
            Project - Decision Maker App - Part 2:
              name: Project - Decision Maker App - Part 2
            Project - Decision Maker App - Part 3:
              name: Project - Decision Maker App - Part 3
            Project - Decision Maker App Part 1:
              name: Project - Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              name: Project - Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              name: Project - Decision Maker App Part 3
            "[OLD] Variables Make":
              name: "[OLD] Variables Make"
            "[OLD] Conditionals Make":
              name: "[OLD] Conditionals Make"
            "[OLD] Functions Make":
              name: "[OLD] Functions Make"
          student_description: ''
        csp1-2019:
          title: CSP Unit 1 - The Internet ('19-'20)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp1_1:
              display_name: 'Chapter 1: Representing and Transmitting Information'
            csp1_2:
              display_name: 'Chapter 2: Inventing the Internet'
          lessons:
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Personal Innovations:
              name: Personal Innovations
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Number Systems:
              name: Number Systems
            Binary Numbers:
              name: Binary Numbers
            Sending Numbers:
              name: Sending Numbers
            Sending Text:
              name: Sending Text
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            The Internet:
              name: The Internet
            The Need for Addressing:
              name: The Need for Addressing
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            The Need for DNS:
              name: The Need for DNS
            HTTP and Abstraction:
              name: HTTP and Abstraction
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
        csp2-2019:
          title: CSP Unit 2 - Digital Information ('19-'20)
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          lesson_groups:
            csp2_1_2018:
              display_name: 'Unit 2: Digital Information'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Text Compression:
              name: Text Compression
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Lossy vs Lossless Compression:
              name: Lossy vs Lossless Compression
            Rapid Research - Format Showdown:
              name: Rapid Research - Format Showdown
            Unit 2 Assessment:
              name: Unit 2 Assessment
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
        csp3-2019:
          title: CSP Unit 3 - Intro to Programming ('19-'20)
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
            cspAssessment:
              display_name: Chapter Assessment
            cspSurvey:
              display_name: Survey
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csp4-2019:
          title: CSP Unit 4 - Big Data and Privacy ('19-'20)
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          lesson_groups:
            csp4_1_2018:
              display_name: 'Unit 4: Big Data and Privacy'
            cspAssessment:
              display_name: Chapter Assessment
            optional:
              display_name: Optional
            cspSurvey:
              display_name: Survey
          lessons:
            What is Big Data?:
              name: What is Big Data?
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Check Your Assumptions:
              name: Check Your Assumptions
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Identifying People with Data:
              name: Identifying People with Data
            The Cost of Free:
              name: The Cost of Free
            Simple Encryption:
              name: Simple Encryption
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
            Public Key Crypto:
              name: Public Key Crypto
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Mid-Year Survey:
              name: Mid-Year Survey
            'Optional: Data Questions':
              name: 'Optional: Data Questions'
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
        csp5-2019:
          title: CSP Unit 5 - Building Apps ('19-'20)
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
            cspSurvey:
              display_name: Survey
          lessons:
            Buttons and Events:
              name: Buttons and Events
            Multi-screen Apps:
              name: Multi-screen Apps
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
            User Input and Strings:
              name: User Input and Strings
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            While Loops:
              name: While Loops
            Loops and Simulations:
              name: Loops and Simulations
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Processing Arrays:
              name: Processing Arrays
            Functions with Return Values:
              name: Functions with Return Values
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        csp-explore-2019:
          title: Explore - AP Performance Task Prep ('19-'20)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Explore Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_2:
              display_name: 'Chapter 2: AP Explore Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Mid-Year Survey:
              name: Mid-Year Survey
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csp-create-2019:
          title: Create - AP Performance Task Prep ('19-'20)
          description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
          description_short: Lessons and resources to help students prepare for and complete the AP Create Performance Tasks.
          description_audience: ''
          lesson_groups:
            csp_ap_3:
              display_name: 'Chapter 3: AP Create Performance Task'
            cspSurvey:
              display_name: Survey
          lessons:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: 'These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.'
        csppostap-2019:
          title: Post AP - Data Tools ('19-'20)
          description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          lesson_groups:
            csp_postap_1:
              display_name: 'Chapter 1: Manipulating and Visualizing Data'
            csp_postap_2:
              display_name: 'Chapter 2: Apps and Databases'
            cspSurvey:
              display_name: Survey
          lessons:
            Intro to Data:
              name: Intro to Data
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Discover a Data Story:
              name: Discover a Data Story
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Project - Tell a Data Story:
              name: Project - Tell a Data Story
            Chapter 1 Assessment:
              name: Chapter 1 Assessment
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Deleting Records:
              name: Deleting Records
            Updating Records:
              name: Updating Records
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Visualizing Data:
              name: Visualizing Data
            Sample Apps:
              name: Sample Apps
            Final Project:
              name: Final Project
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
          student_description: "In the first chapter of this unit students develop skills interpreting visual data and using spreadsheet and visualization tools to create their own digital artifacts.  Through an ongoing project  - the “class data tracker” - students learn how to collect and clean data, and to use a few common tools for computing aggregations and creating visualizations. \r\n\r\nThe second chapter explores the importance of data within apps. App Lab has a number of tools that allow you to collect and use data in your apps. The second chapter provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project."
        csp1-pilot:
          title: CSP Unit 1 Pilot - Digital Information
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            required:
              display_name: Overview
          lessons:
            new stage:
              name: new stage
            Number Systems:
              name: Number Systems
            Bit Sending Device:
              name: Bit Sending Device
            Flippy Do Pt 1:
              name: Flippy Do Pt 1
            Flippy Do Pt 2:
              name: Flippy Do Pt 2
            Sending Text:
              name: Sending Text
            Black and White Images:
              name: Black and White Images
            Color Images:
              name: Color Images
            Lossless Compression:
              name: Lossless Compression
            Welcome to CSP:
              name: Welcome to CSP
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            AB Patterns:
              name: AB Patterns
            Flippy Do, pt. 1:
              name: Flippy Do, pt. 1
            Flippy Do, pt. 2:
              name: Flippy Do, pt. 2
            Lossy Compression:
              name: Lossy Compression
            Intellectual Property:
              name: Intellectual Property
            'Project: Digital Information Dilemmas, pt. 1':
              name: 'Project: Digital Information Dilemmas, pt. 1'
            'Project: Digital Information Dilemmas, pt. 2':
              name: 'Project: Digital Information Dilemmas, pt. 2'
            Unit Assessment:
              name: Unit Assessment
            Flippy Do, pt 1:
              name: Flippy Do, pt 1
            Flippy Do, pt 2:
              name: Flippy Do, pt 2
            'Project: Digital Information Dilemmas, pt 1':
              name: 'Project: Digital Information Dilemmas, pt 1'
            'Project: Digital Information Dilemmas, pt 2':
              name: 'Project: Digital Information Dilemmas, pt 2'
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Binary Numbers:
              name: Binary Numbers
            Overflow and Rounding:
              name: Overflow and Rounding
            CS Principles Unit 1 Survey:
              name: CS Principles Unit 1 Survey
            Unit 1 Survey:
              name: Unit 1 Survey
            'Lesson 15: Unit Assessment':
              name: 'Lesson 15: Unit Assessment'
            Unit 1 STUDENT Survey:
              name: Unit 1 STUDENT Survey
            Unit 1 TEACHER Survey:
              name: Unit 1 TEACHER Survey
            'Lesson 14: Unit Assessment':
              name: 'Lesson 14: Unit Assessment'
            Representing Information:
              name: Representing Information
            Representing Text:
              name: Representing Text
            Circle Square Patterns:
              name: Circle Square Patterns
            'Lesson 14: Assessment Day':
              name: 'Lesson 14: Assessment Day'
            'Project: Digital Information Dilemmas Part 1':
              name: 'Project: Digital Information Dilemmas Part 1'
            'Project: Digital Information Dilemmas Part 2':
              name: 'Project: Digital Information Dilemmas Part 2'
            Project - Digital Information Dilemmas Part 1:
              name: Project - Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              name: Project - Digital Information Dilemmas Part 2
          student_description: ''
        csd-tests:
          title: Post-Project Tests for CSD
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Computers and Problem Solving:
              name: Computers and Problem Solving
            Web Development:
              name: Web Development
            Interactive Animations and Games:
              name: Interactive Animations and Games
          student_description: ''
        csd-videos:
          title: CSD Videos
          description_audience: ''
          description_short: All the Videos in CS Discoveries
          description: All the Videos in CS Discoveries
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Problem Solving and Computers:
              name: Problem Solving and Computers
            Web Development:
              name: Web Development
            Games and Animations:
              name: Games and Animations
            User Centered Design:
              name: User Centered Design
            Data and Society:
              name: Data and Society
            Physical Computing:
              name: Physical Computing
          student_description: All the Videos in CS Discoveries
        time4csdemo:
          title: Time4CS Florida's Diversity
          description_audience: 4th grade
          description_short: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
          description: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            time4cs_c1:
              display_name: 'Collection 1: The Everglades & its Ecosystems'
            time4cs_c2:
              display_name: 'Collection 2: Food Chains (in the Everglades)'
            time4cs_c3:
              display_name: 'Collection 3: Native Species (in the Everglades)'
            time4cs_c4:
              display_name: 'Collection 4: Impact of Invasive Species (on the Everglades)'
            time4cs_c5:
              display_name: 'Collection 5: Citizens Take Action'
          lessons:
            Introduction to the Problem:
              name: Introduction to the Problem
            Crowdsourcing:
              name: Crowdsourcing
            Everglades Habitats:
              name: Everglades Habitats
            Reviewing Projects:
              name: Reviewing Projects
            Food Chains:
              name: Food Chains
            Conditionals with Cards:
              name: Conditionals with Cards
            Alligator Holes:
              name: Alligator Holes
            Conditionals in Sprite Lab:
              name: Conditionals in Sprite Lab
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: Building a Foundation
            Debugging with Scrat:
              name: Debugging with Scrat
            Programming in Artist:
              name: Programming in Artist
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee/Zombie:
              name: Nested Loops in Bee/Zombie
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Pet Giraffe with Sprite Lab:
              name: Pet Giraffe with Sprite Lab
            Build a Flappy Game:
              name: Build a Flappy Game
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Invasive Species:
              name: Invasive Species
            'Events: The Big Event':
              name: 'Events: The Big Event'
            I'm in Big Trouble:
              name: I'm in Big Trouble
            Events in Sprite Lab:
              name: Events in Sprite Lab
            Fishy Business:
              name: Fishy Business
            Broadcast a Message:
              name: Broadcast a Message
            Pythons & Mammals:
              name: Pythons & Mammals
            Broadcast in Scratch:
              name: Broadcast in Scratch
            Current Solutions:
              name: Current Solutions
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions in Harvester
            Functions in Artist:
              name: Functions in Artist
            Determine the Concept:
              name: Determine the Concept
            Debate:
              name: Debate
            Functions in Sprite Lab:
              name: Functions in Sprite Lab
            I'm in Big Trouble!:
              name: I'm in Big Trouble!
            I am in Big Trouble:
              name: I am in Big Trouble
          student_description: This module focuses on the 4th grade's science and social study standards. In science, they view life standards that encompass habitats, ecosystems, native species, and invasive species. In social studies, students contemplate the branches of Florida's government and how everyday citizens can impact local and state policies.
        csp1-pilot-staging:
          title: 'Unit 1: Bits & Bytes'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        csp2-pilot-staging:
          title: 'Unit 2: The Internet'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        csp3-pilot-staging:
          title: 'Unit 3: Intro to App Development'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            'Project: Designing an App, pt. 1':
              name: 'Project: Designing an App, pt. 1'
            'Project: Designing an App, pt. 2':
              name: 'Project: Designing an App, pt. 2'
            Programs Investigate:
              name: Programs Investigate
            Programs Practice:
              name: Programs Practice
            'Project: Designing an App, pt. 3':
              name: 'Project: Designing an App, pt. 3'
            'Project: Designing an App, pt. 4':
              name: 'Project: Designing an App, pt. 4'
            'Project: Share Your App':
              name: 'Project: Share Your App'
            'Project: Designing an App pt. 1':
              name: 'Project: Designing an App pt. 1'
            'Project: Designing an App pt. 2':
              name: 'Project: Designing an App pt. 2'
            Project - Designing an App Part 1:
              name: Project - Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project - Designing an App Part 2
            Project - Designing an App Part 3:
              name: Project - Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project - Designing an App Part 4
            The Need for Programming Languages:
              name: The Need for Programming Languages
          student_description: ''
        csp4-pilot-staging:
          title: 'Unit 4: Variables, Conditionals, and Functions'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        csp5-pilot-staging:
          title: 'Unit 5: Lists, Loops, and Traversals'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            csp_libraries:
              display_name: Libraries
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Loops Explore:
              name: Loops Explore
            Traversals Explore:
              name: Traversals Explore
            Lists Practice:
              name: Lists Practice
            'Loops Practice: While Loops':
              name: 'Loops Practice: While Loops'
            'Loops Practice: Simulations':
              name: 'Loops Practice: Simulations'
            Lists Make:
              name: Lists Make
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Unit 5 Mini Assessment:
              name: Unit 5 Mini Assessment
            Mini PT:
              name: Mini PT
            Student Survey (Lists):
              name: Student Survey (Lists)
            Teacher Survey (Lists):
              name: Teacher Survey (Lists)
            Student Survey (Traversals):
              name: Student Survey (Traversals)
            Teacher Survey (Traversals):
              name: Teacher Survey (Traversals)
            Student Survey (Mini PT):
              name: Student Survey (Mini PT)
            Loops Investigate and Practice:
              name: Loops Investigate and Practice
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Student Survey (Libraries):
              name: Student Survey (Libraries)
            Teacher Survey (Libraries):
              name: Teacher Survey (Libraries)
          student_description: ''
        csp6-pilot-staging:
          title: 'Unit 6: Algorithms'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        csp7-pilot-staging:
          title: 'Unit 7: Functions and Libraries'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
          lessons:
            new stage:
              name: new stage
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
            Functions with Parameters and Return Explore:
              name: Functions with Parameters and Return Explore
            Libraries:
              name: Libraries
            Parameters and Return Values Explore:
              name: Parameters and Return Values Explore
            Parameters and Return Values Investigate:
              name: Parameters and Return Values Investigate
            Parameters and Return Values Practice:
              name: Parameters and Return Values Practice
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Mini PT:
              name: Libraries Mini PT
            Student Survey (Lists):
              name: Student Survey (Lists)
            Teacher Survey (Lists):
              name: Teacher Survey (Lists)
            Student Survey (Libraries):
              name: Student Survey (Libraries)
            Teacher Survey (Libraries):
              name: Teacher Survey (Libraries)
            Libraries Project:
              name: Libraries Project
          student_description: ''
        csp8-pilot-staging:
          title: 'Unit 8: Create PT'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        csp9-pilot-staging:
          title: 'Unit 9: Data'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        csp10-pilot-staging:
          title: 'Unit 10: Global Impact'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Student Survey (Variables):
              name: Student Survey (Variables)
            Teacher Surveys (Variables):
              name: Teacher Surveys (Variables)
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Student Survey (Conditionals):
              name: Student Survey (Conditionals)
            Teacher Surveys (Conditionals):
              name: Teacher Surveys (Conditionals)
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            Unit 4 Assessment:
              name: Unit 4 Assessment
          student_description: ''
        pluralsight:
          title: Get access to Pluralsight One
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Pluralsight LevelGroup:
              name: Pluralsight LevelGroup
          student_description: ''
        express-2018-vn:
          title: Express For Vietnam (2018)
          description_audience: ''
          description_short: Giới thiệu Khoa học máy tính cơ bản cho học sinh Việt Nam.
          description: "Khoa Học Máy Tính (Computer Science) \x1Dlà môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô động cho phù hợp với học sinh Việt Nam.\r\n"
          lessons:
            Graph Paper Programming:
              name: Graph Paper Programming
            Programming in Maze:
              name: Programming in Maze
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
        csd-post-survey-2018:
          title: CSD Student Post-Course Survey ('18-'19)
          description_audience: CSD Students
          description_short: CSD Student Post-Course Survey 2018
          description: "The CS Discoveries Post-Course Survey is an important tool we use to get feedback from you and make improvements to the course. \r\n The survey is private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration."
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSD post-course survey:
              name: CSD Student Post-Course Survey ('18-'19)
          student_description: "The CS Discoveries Post-Course Survey is an important tool we use to get feedback from you and make improvements to the course. \r\n The survey is private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration."
          name: csd-post-survey-2018
        csp-post-survey-2018:
          title: CSP Student Post-Course Survey ('18-'19)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          lesson_groups:
            cspSurvey:
              display_name: Survey
          lessons:
            CSP post-course survey:
              name: CSP Student Post-Course Survey ('18-'19)
          student_description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          name: csp-post-survey-2018
        csp5-pilot:
          title: CSP Unit 5 Pilot - Lists, Loops, and Traversals
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          lessons:
            new stage:
              name: new stage
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Lists Practice:
              name: Lists Practice
            Lists Make:
              name: Lists Make
            Loops Explore:
              name: Loops Explore
            'Loops Practice: While Loops':
              name: 'Loops Practice: While Loops'
            'Loops Practice: Simulations':
              name: 'Loops Practice: Simulations'
            Traversals Explore:
              name: Traversals Explore
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Student Survey (Lists):
              name: Student Survey (Lists)
            Student Survey (Traversals):
              name: Student Survey (Traversals)
            Unit 5 Mini Assessment:
              name: Unit 5 Mini Assessment
            Mini PT:
              name: Mini PT
            Teacher Survey (Lists):
              name: Teacher Survey (Lists)
            Teacher Survey (Traversals):
              name: Teacher Survey (Traversals)
            Student Survey (Mini PT):
              name: Student Survey (Mini PT)
            Loops Investigate and Practice:
              name: Loops Investigate and Practice
            Parameters and Return Values Explore:
              name: Parameters and Return Values Explore
            Parameters and Return Values Investigate:
              name: Parameters and Return Values Investigate
            Parameters and Return Values Practice:
              name: Parameters and Return Values Practice
            App Lab Experiments Dashboard:
              name: App Lab Experiments Dashboard
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Project:
              name: Libraries Project
            Student Survey (Libraries):
              name: Student Survey (Libraries)
            Teacher Survey (Libraries):
              name: Teacher Survey (Libraries)
            Loops Investigate:
              name: Loops Investigate
            Loops Practice:
              name: Loops Practice
            Loops Make:
              name: Loops Make
            Semester Hackathon Part 1:
              name: Semester Hackathon Part 1
            Semester Hackathon Part 2:
              name: Semester Hackathon Part 2
            Semester Hackathon Part 3:
              name: Semester Hackathon Part 3
            Semester Hackathon Part 4:
              name: Semester Hackathon Part 4
            Semester Hackathon Part 5:
              name: Semester Hackathon Part 5
            Unit 5 Assessment:
              name: Unit 5 Assessment
            Semester Exam:
              name: Semester Exam
            'Lesson 13: Assessment Day':
              name: 'Lesson 13: Assessment Day'
            Unit 5 STUDENT Survey:
              name: Unit 5 STUDENT Survey
            Unit 5 TEACHER Survey:
              name: Unit 5 TEACHER Survey
            'Lesson 18: Assessment Day':
              name: 'Lesson 18: Assessment Day'
            "[OLD] Lists Make":
              name: "[OLD] Lists Make"
            "[OLD] Loops Make":
              name: "[OLD] Loops Make"
            "[OLD] Traversals Make":
              name: "[OLD] Traversals Make"
          student_description: ''
        fit2019-novice:
          title: Novice Reflections for Summer Workshop 2019
          description_audience: 6 - 12 Novice Facilitators in Training
          description_short: 'Novice reflection materials for 2019 facilitators in training '
          description: This is the set of novice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop.
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Novice Reflection Overview:
              name: Novice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
            Wrap Up:
              name: Wrap Up
          student_description: This is the set of novice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop.
        csd-test-saving-state:
          title: Sample of online activities
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            csd digital unplugged WIAC L1:
              name: csd digital unplugged WIAC L1
            csd digital unplugged WIAC L2:
              name: csd digital unplugged WIAC L2
            csd digital unplugged WIAC L3:
              name: csd digital unplugged WIAC L3
            What is a Computer?:
              name: What is a Computer?
            Problem Solving Process:
              name: Problem Solving Process
          student_description: ''
        fit2019-apprentice:
          title: Apprentice Reflections for Summer Workshop 2019
          description_audience: 6 - 12 Apprentice Facilitators in Training
          description_short: 'Apprentice reflection materials for 2019 facilitators in training '
          description: This is the set of apprentice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Apprentice Reflection Overview:
              name: Apprentice Reflection Overview
            Day 1:
              name: Day 1
            Day 2:
              name: Day 2
            Day 3:
              name: Day 3
            Day 4:
              name: Day 4
            Wrap Up:
              name: Wrap Up
          student_description: This is the set of apprentice reflections for Code.org facilitators in training during their 5-day summer workshop. Here, you will find reflection prompts for each day of your in-person 5-day summer workshop. These questions will be the foundation of work we do at the Facilitator Training Workshop
          name: fit2019-apprentice
        csd-sample-online:
          title: Sample of online activities for CS Discoveries
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            What is a Computer? - sample progression:
              name: What is a Computer? - sample progression
            Problem Solving Process - sample activities:
              name: Problem Solving Process - sample activities
          student_description: ''
        csd1-pilot:
          title: CSD Unit 1 - Problem Solving (Pilot Version)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Apps and Storage:
              name: Apps and Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd2-pilot:
          title: CSD Unit 2 - Web Development (Pilot Version)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
          lessons:
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            Digital Footprint:
              name: Digital Footprint
            Lists:
              name: Lists
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Intellectual Property:
              name: Intellectual Property
            Project - Planning Layout and Style:
              name: Project - Planning Layout and Style
            Project - Building a Webpage:
              name: Project - Building a Webpage
            Purpose of a  Websites:
              name: Purpose of a  Websites
            Images:
              name: Images
            Exploring Web Pages:
              name: Exploring Web Pages
            CSS Classes:
              name: CSS Classes
            Searching and Research:
              name: Searching and Research
            Sources and Research:
              name: Sources and Research
            Team Problem Solving:
              name: Team Problem Solving
            Wireframes and Planning:
              name: Wireframes and Planning
            Linking Pages:
              name: Linking Pages
            Planning a Multi-page Website:
              name: Planning a Multi-page Website
            Linking and Navigation:
              name: Linking and Navigation
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
        csd3-pilot:
          title: CSD Unit 3 - Animations and Games (Pilot Version)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomization:
              name: Shapes and Randomization
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Shapes and Parameters:
              name: Shapes and Parameters
            Random Numbers:
              name: Random Numbers
            Sprites and Animations:
              name: Sprites and Animations
            Create a Scene:
              name: Create a Scene
            Text and Captioned Scenes:
              name: Text and Captioned Scenes
            Sprite Properties:
              name: Sprite Properties
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd-bugs:
          title: Example of Bugs for CSD Teachers
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Game Lab Bugs:
              name: Game Lab Bugs
            Immovable Crab:
              name: Immovable Crab
          student_description: ''
        maddie-test:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            stage 1:
              name: stage 1
            new stage:
              name: new stage
        csp3-pilot:
          title: CSP Unit 3 Pilot - Intro to App Design
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          lessons:
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            Project - Designing an App Part 1:
              name: Project - Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project - Designing an App Part 2
            Programs Investigate:
              name: Programs Investigate
            Programs Practice:
              name: Programs Practice
            Project - Designing an App Part 3:
              name: Project - Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project - Designing an App Part 4
            'Project: Share Your App':
              name: 'Project: Share Your App'
            The Need for Programming Languages:
              name: The Need for Programming Languages
            'Project: Finish Your App':
              name: 'Project: Finish Your App'
            Programs Explore:
              name: Programs Explore
            Unit 3 STUDENT Survey:
              name: Unit 3 STUDENT Survey
            Unit 3 TEACHER Survey:
              name: Unit 3 TEACHER Survey
            'Lesson 11: Unit Assessment':
              name: 'Lesson 11: Unit Assessment'
            'Lesson 11: Assessment Day':
              name: 'Lesson 11: Assessment Day'
            Project - Designing an App Part 5:
              name: Project - Designing an App Part 5
            Intro to Programming:
              name: Intro to Programming
            Debugging:
              name: Debugging
          student_description: ''
        csl-vn:
          title: Computer Science Literacy for Vietnam
          description_audience: Tuổi 5-10
          description_short: Khoa học máy tính cơ bản cho học sinh Việt Nam
          description: 'Khoa Học Máy Tính (Computer Science) là môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô đọng cho phù hợp với học sinh Việt Nam. '
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming in Maze:
              name: Programming in Maze
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Loops in Ice Age:
              name: Loops in Ice Age
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            Tell a Story in Play Lab:
              name: Tell a Story in Play Lab
          student_description: 'Khoa Học Máy Tính (Computer Science) là môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô đọng cho phù hợp với học sinh Việt Nam. '
        dlp19-csd-mod-fit:
          title: CS Discoveries Deeper Learning 2019 Module for FiT
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: Background information and practice prompt for FiT workshop
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Understanding the Curriculum:
              name: 'Understanding the Curriculum: Pre Work'
            Demonstrating Understanding:
              name: Demonstrating Understanding
            Focus Area 1:
              name: Curriculum
            Focus Area 2:
              name: Learning Platform
          name: dlp19-csd-mod-fit
          student_description: ''
        dlp19-csp-mod-fit:
          title: CS Principles Deeper Learning 2019 FiT Workshop
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Understanding the Curriculum:
              name: Understanding the Curriculum
            Demonstrating Understanding:
              name: Demonstrating Understanding
          student_description: ''
        pl-csd-bugs:
          title: CSD Workshop 1 Bugs
          description_audience: ''
          description_short: Debugging in Game Lab - Academic Year Workshop 1
          description: ''
          lesson_groups: {}
          lessons:
            CSD Workshop 1 Bugs:
              name: CSD Workshop 1 Bugs
          student_description: ''
        dlp19-csd-mod-w1:
          title: 'CS Discoveries Deeper Learning 2019 Module for Workshop 1 '
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: Academic Year Workshop 1
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            Module 1:
              name: Module 1
            Step 1:
              name: Step 1
            Step 2:
              name: Step 2
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
            Deeper Learning Overview:
              name: Deeper Learning Overview
          student_description: ''
        dlp19-csd-mod-w2:
          title: CS Discoveries Deeper Learning Module for Workshop 2
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            new stage:
              name: new stage
            CS Discoveries Deeper Learning Module 2:
              name: CS Discoveries Deeper Learning Module 2
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
          student_description: ''
        dlp19-csd-mod-w3:
          title: CS Discoveries Deeper Learning Module for Workshop 3
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Discoveries Deeper Learning Module 3:
              name: CS Discoveries Deeper Learning Module 3
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
          student_description: ''
        dlp19-csd-mod-w4:
          title: CS Discoveries Deeper Learning Module for Workshop 4
          description_audience: CS Discoveries Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Discoveries Deeper Learning Module 4:
              name: CS Discoveries Deeper Learning Module 4
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
          student_description: ''
        dlp19-csp-mod-w1:
          title: CS Principles Deeper Learning Module for Workshop 1
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 1:
              name: CS Principles Deeper Learning Module 1
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
            Deeper Learning Overview:
              name: Deeper Learning Overview
          student_description: ''
        dlp19-csp-mod-w2:
          title: CS Principles Deeper Learning Module for Workshop 2
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 2:
              name: CS Principles Deeper Learning Module 2
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
          student_description: ''
          name: dlp19-csp-mod-w2
        dlp19-csp-mod-w3:
          title: CS Principles Deeper Learning Module for Workshop 3
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 3:
              name: CS Principles Deeper Learning Module 3
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
          student_description: ''
        dlp19-csp-mod-w4:
          title: CS Principles Deeper Learning Module for Workshop 4
          description_audience: CS Principles Facilitators in Training 2019
          description_short: ''
          description: ''
          lesson_groups:
            required:
              display_name: Overview
            content:
              display_name: Content
          lessons:
            CS Principles Deeper Learning Module 4:
              name: CS Principles Deeper Learning Module 4
            Deeper Learning Overview:
              name: Deeper Learning Overview
            'Step 1: Develop Understanding':
              name: 'Step 1: Develop Understanding'
            'Step 2: Demonstrate Understanding':
              name: 'Step 2: Demonstrate Understanding'
          student_description: ''
          name: dlp19-csp-mod-w4
        csd-pilot:
          title: CSD Pilot Course
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Pilot Information:
              name: Pilot Information
            Pilot Information 1:
              name: Pilot Information 1
            Pilot Information 2:
              name: Pilot Information 2
            Pilot Information 3:
              name: Pilot Information 3
            Pilot Information 4:
              name: Pilot Information 4
            Pilot Information 5:
              name: Pilot Information 5
            Pilot Information 6:
              name: Pilot Information 6
            Pilot Information 7:
              name: Pilot Information 7
            Pilot Information 8:
              name: Pilot Information 8
            Pilot Information 9:
              name: Pilot Information 9
            Pilot Information 10:
              name: Pilot Information 10
            Pilot Information 11:
              name: Pilot Information 11
            Pilot Information 12:
              name: Pilot Information 12
            Pilot Information 13:
              name: Pilot Information 13
            Pilot Information 14:
              name: Pilot Information 14
            Pilot Information 15:
              name: Pilot Information 15
            Pilot Information 16:
              name: Pilot Information 16
            Pilot Information 17:
              name: Pilot Information 17
            Pilot Information 18:
              name: Pilot Information 18
            Pilot Information 19:
              name: Pilot Information 19
            Pilot Information 20:
              name: Pilot Information 20
            Pilot Information 21:
              name: Pilot Information 21
            Pilot Information 22:
              name: Pilot Information 22
            Pilot Information 23:
              name: Pilot Information 23
            Pilot Information 24:
              name: Pilot Information 24
            Pilot Information 25:
              name: Pilot Information 25
            Pilot Information 26:
              name: Pilot Information 26
            Pilot Information 27:
              name: Pilot Information 27
            Pilot Information 28:
              name: Pilot Information 28
            Pilot Information 29:
              name: Pilot Information 29
          student_description: ''
        csd4-pilot:
          title: Computing and Problem Solving
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
          lessons:
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Apps and Storage:
              name: Apps and Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
          student_description: ''
        csp2-pilot:
          title: CSP Unit 2 Pilot - The Internet
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          lessons:
            new stage:
              name: new stage
            Building a Network:
              name: Building a Network
            IP Addresses:
              name: IP Addresses
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets:
              name: Packets
            The Growing Internet:
              name: The Growing Internet
            Internet Dilemmas pt 1:
              name: Internet Dilemmas pt 1
            Internet Dilemmas, pt 2:
              name: Internet Dilemmas, pt 2
            Unit 2 Assessment:
              name: Unit 2 Assessment
            Unit Assessment:
              name: Unit Assessment
            'Lesson 8: Unit Assessment':
              name: 'Lesson 8: Unit Assessment'
            Unit 2 STUDENT Survey:
              name: Unit 2 STUDENT Survey
            Unit 2 TEACHER Survey:
              name: Unit 2 TEACHER Survey
            DNS and HTTP:
              name: DNS and HTTP
            Welcome to the Internet:
              name: Welcome to the Internet
            'Lesson 9: Assessment Day':
              name: 'Lesson 9: Assessment Day'
            The Need for Addressing:
              name: The Need for Addressing
            Project - Internet Dilemmas Part 1:
              name: Project - Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              name: Project - Internet Dilemmas Part 2
          student_description: ''
        denny-science:
          title: Earthquake Detector
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Earthquake Detector:
              name: Earthquake Detector
            'Earthquake Detector: Designing Screens':
              name: 'Earthquake Detector: Designing Screens'
            'Earthquake Detector: Processing with Events':
              name: 'Earthquake Detector: Processing with Events'
          student_description: ''
        peru-2019:
          title: Hora del Código Perú 2019
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Introduction:
              name: Introduction
            Debugging in Collector:
              name: Debugging in Collector
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Artist:
              name: Loops in Artist
            Nested Loops:
              name: Nested Loops
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            Events in Star Wars:
              name: Events in Star Wars
            Introduction to Debugging:
              name: Introduction to Debugging
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
          student_description: ''
        csp6-pilot:
          title: CSP Unit 6 Pilot - Algorithms
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            required:
              display_name: Overview
          lessons:
            Algorithms Solve Problems:
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              name: Algorithm Efficiency
            Unreasonable Time:
              name: Unreasonable Time
            Traveling Salesman:
              name: Traveling Salesman
            Parallel and Distributed Algorithms:
              name: Parallel and Distributed Algorithms
            The Limits of Algorithms:
              name: The Limits of Algorithms
            Unit 6 STUDENT Survey:
              name: Unit 6 STUDENT Survey
            Unit 6 TEACHER Survey:
              name: Unit 6 TEACHER Survey
            'Lesson 6: Assessment Day':
              name: 'Lesson 6: Assessment Day'
          student_description: ''
        denny-science-8:
          title: Collision Detector
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          lessons:
            'Earthquake Detector: Designing Screens':
              name: 'Earthquake Detector: Designing Screens'
            'Earthquake Detector: Processing with Events':
              name: 'Earthquake Detector: Processing with Events'
            'Collision Detector: Designing Screens':
              name: 'Collision Detector: Designing Screens'
            'Collision Detector: Processing with Events':
              name: 'Collision Detector: Processing with Events'
          student_description: ''
        denny-science-copy:
          lesson_groups: {}
          lessons:
            'Collision Detector: Designing Screens':
              name: 'Collision Detector: Designing Screens'
            'Collision Detector: Processing with Events':
              name: 'Collision Detector: Processing with Events'
        dance-2019:
          title: Dance Party (2019)
          description_audience: ''
          description_short: Featuring Katy Perry, Shawn Mendes, Panic! At The Disco, Lil Nas X, Jonas Brothers, Nicki Minaj, and 34 more!
          description: Code your own dance party to share with your friends!
          lesson_groups: {}
          lessons:
            Dance Party:
              name: Dance Party (2019)
          student_description: Code your own dance party to share with your friends!
          name: dance-2019
        k5-onlinepd-2019:
          title: Teaching Computer Science Fundamentals (2019)
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lesson_groups:
            k5_getting_started:
              display_name: Getting Started
            k5_basic_concepts:
              display_name: Basic Coding Concepts and Teaching Practices
            k5_diving_deeper:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps:
              display_name: Next Steps
          lessons:
            Getting Started:
              name: Getting Started
            Computer Science Fundamentals:
              name: Computer Science Fundamentals
            Looking Ahead:
              name: Looking Ahead
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
            'Mastering the Basics: Loops':
              name: 'Mastering the Basics: Loops'
            'Mastering the Basics: Conditionals':
              name: 'Mastering the Basics: Conditionals'
            'Mastering the Basics: Functions':
              name: 'Mastering the Basics: Functions'
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Planning:
              name: Planning
            Next Steps:
              name: Next Steps
            Understanding the Computer Science Fundamentals Courses:
              name: Understanding the Computer Science Fundamentals Courses
            extra:
              name: extra
            Welcome to this online course:
              name: Welcome to this online course
            Understanding the Computer Science Fundamentals courses:
              name: Understanding the Computer Science Fundamentals courses
            Best practices for teaching computer science:
              name: Best practices for teaching computer science
            Sequencing:
              name: Sequencing
            Loops:
              name: Loops
            Conditionals:
              name: Conditionals
            Events:
              name: Events
            Functions:
              name: Functions
            Diving Deeper:
              name: Diving Deeper
            Next steps:
              name: Next steps
            Diving deeper:
              name: Diving deeper
            Diving deeper (for Courses E and F):
              name: Diving deeper (for Courses E and F)
            Welcome to "Teaching Computer Science Fundamentals":
              name: Welcome to "Teaching Computer Science Fundamentals"
            Diving Deeper (for Courses E and F):
              name: Diving Deeper (for Courses E and F)
            'Diving Deeper: Courses E and F':
              name: 'Diving Deeper: Courses E and F'
            Sprite Lab:
              name: Sprite Lab
            Variables:
              name: Variables
            For Loops:
              name: For Loops
            End-of-course projects:
              name: End-of-course projects
            Who is this section for?:
              name: Who is this section for?
            Reviewing reflections:
              name: Reviewing reflections
            Reviewing your reflections:
              name: Reviewing your reflections
            End of Course projects:
              name: End of Course projects
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          name: k5-onlinepd-2019
        dance-extras-2019:
          title: Keep On Dancing (2019)
          description: Go beyond the first hour with extended project ideas.
          description_short: Go beyond the Hour of Code with this follow-up activity to Code.org's Dance Party tutorial.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Dance Party - Go Further:
              name: Keep on Dancing (2019)
          student_description: Go beyond the first hour with extended project ideas.
          name: dance-extras-2019
        csp10-pilot:
          title: Cybersecurity and Global Impacts
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            'Project: Innovation Simulation Part 1':
              name: 'Project: Innovation Simulation Part 1'
            'Project: Innovation Simulation Part 2':
              name: 'Project: Innovation Simulation Part 2'
            Security Risks Part 1:
              name: Security Risks Part 1
            Security Risks Part 2:
              name: Security Risks Part 2
            Data Policies and Privacy:
              name: Data Policies and Privacy
            The Value of Privacy:
              name: The Value of Privacy
            'Project: Innovation Simulation Part 3':
              name: 'Project: Innovation Simulation Part 3'
            Protecting Data Part 1:
              name: Protecting Data Part 1
            Protecting Data Part 2:
              name: Protecting Data Part 2
            'Lesson 14: Unit Assessment Day':
              name: 'Lesson 14: Unit Assessment Day'
            'Project: Innovation Simulation Part 4':
              name: 'Project: Innovation Simulation Part 4'
            'Project: Innovation Simulation Part 5':
              name: 'Project: Innovation Simulation Part 5'
            'Project: Innovation Simulation Part 6':
              name: 'Project: Innovation Simulation Part 6'
            'Project: Innovation Simulation Part 7':
              name: 'Project: Innovation Simulation Part 7'
            Project - Innovation Simulation Part 1:
              name: Project - Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              name: Project - Innovation Simulation Part 2
            Project - Innovation Simulation Part 3:
              name: Project - Innovation Simulation Part 3
            Project - Innovation Simulation Part 4:
              name: Project - Innovation Simulation Part 4
            Project - Innovation Simulation Part 6:
              name: Project - Innovation Simulation Part 6
            Project - Innovation Simulation Part 7:
              name: Project - Innovation Simulation Part 7
          student_description: ''
        csp4-preview:
          title: 'CSP Preview: Variables, Conditionals, and Functions'
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          lessons:
            new stage:
              name: new stage
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Practice PT Part 1:
              name: Practice PT Part 1
            Practice PT Part 2:
              name: Practice PT Part 2
            Practice PT Part 3:
              name: Practice PT Part 3
            'Lesson 15: Unit 4 Assessment':
              name: 'Lesson 15: Unit 4 Assessment'
            'Lesson 15: Assessment Day':
              name: 'Lesson 15: Assessment Day'
          student_description: ''
        time4cs-original-unit-1:
          title: Time4CS Original Unit 1
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              name: Conditionals
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Simon Says:
              name: Simon Says
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              name: Private and Personal Information
            About Me:
              name: About Me
            Access Ability:
              name: Access Ability
            Conditionals Review:
              name: Conditionals Review
            Drawing with Loops:
              name: Drawing with Loops
        time4cs-control-unit-2:
          title: Time4CS Control Unit 2
          description_audience: ''
          description_short: ''
          description: Description for the unit goes here
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_conditionals:
              display_name: Conditionals
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Crowdsourcing:
              name: Crowdsourcing
            Conditionals with Cards:
              name: Conditionals with Cards
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Artist:
              name: Nested Loops in Artist
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions in Harvester
            Functions in Artist:
              name: Functions in Artist
            End of Course Project:
              name: End of Course Project
            Nested Loops in the Maze:
              name: Nested Loops in the Maze
          student_description: Description for the unit goes here
        time4cs-experiment-unit-2:
          title: Time4CS Experiment Unit 2
          description_audience: ''
          description_short: "[Add description]"
          description: "[Add description]"
          lesson_groups:
            time4cs_c1:
              display_name: 'Collection 1: The Everglades & its Ecosystems'
            time4cs_c2:
              display_name: 'Collection 2: Food Chains (in the Everglades)'
            time4cs_c3:
              display_name: 'Collection 3: Native Species (in the Everglades)'
            time4cs_c4:
              display_name: 'Collection 4: Impact of Invasive Species (on the Everglades)'
            time4cs_c5:
              display_name: 'Collection 5: Citizens Take Action'
          lessons:
            Introduction to the Problem:
              name: Introduction to the Problem
            Crowdsourcing (Integrated lesson):
              name: Crowdsourcing (Integrated lesson)
            Everglades Habitats:
              name: Everglades Habitats
            Evaluating a Project in Sprite Lab:
              name: Evaluating a Project in Sprite Lab
            Food Chains:
              name: Food Chains
            Conditionals with Cards (Integrated Lesson)- Part 1:
              name: Conditionals with Cards (Integrated Lesson)- Part 1
            Alligator Holes:
              name: Alligator Holes
            Food Chain Game:
              name: Food Chain Game
            Invasive Species:
              name: Invasive Species
            Conditionals with Cards (Integrated Lesson)- Part 2:
              name: Conditionals with Cards (Integrated Lesson)- Part 2
            I am in Big Trouble:
              name: I am in Big Trouble
            Conditionals in Sprite Lab:
              name: Conditionals in Sprite Lab
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Fancy Shapes using Nested Loops:
              name: Fancy Shapes using Nested Loops
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Fishy Business:
              name: Fishy Business
            Songwriting (Integrated Lesson):
              name: Songwriting (Integrated Lesson)
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions with Harvester:
              name: Functions with Harvester
            Functions with Artist:
              name: Functions with Artist
            Pythons impacting native populations:
              name: Pythons impacting native populations
            Functions in Sprite Lab:
              name: Functions in Sprite Lab
            Python Problem- Current Solutions:
              name: Python Problem- Current Solutions
            End of Course Project (integrated- project planning lesson):
              name: End of Course Project (integrated- project planning lesson)
            Debate- Pythons impacting native populations:
              name: Debate- Pythons impacting native populations
            Work on Project:
              name: Work on Project
          student_description: "[Add description]"
        time4cs-control-unit-1:
          title: Time4CS Control Unit 1
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_events:
              display_name: Events
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            ramp_up:
              display_name: Ramp-Up
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              name: Conditionals
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Simon Says:
              name: Simon Says
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              name: Private and Personal Information
            About Me:
              name: About Me
            Access Ability:
              name: Access Ability
            Conditionals Review:
              name: Conditionals Review
          student_description: ''
        time4cs-experiment-unit-1:
          title: Time4CS Experiment Unit 1
          description: ''
          description_short: ''
          description_audience: ''
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_events:
              display_name: Events
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_impacts:
              display_name: Impacts of Computing
            ramp_up:
              display_name: Ramp-Up
          lessons:
            Sequencing in Maze:
              name: Sequencing in Maze
            Programming and Loops with the Artist:
              name: Programming and Loops with the Artist
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              name: Conditionals
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Simon Says:
              name: Simon Says
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              name: Private and Personal Information
            About Me:
              name: About Me
            Access Ability:
              name: Access Ability
            Conditionals Review:
              name: Conditionals Review
          student_description: ''
        csp7-pilot:
          title: CSP Unit 7 Pilot - Parameters, Return, and Libraries
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            required:
              display_name: Overview
            optional_stages:
              display_name: Optional Stages
          lessons:
            Parameters and Returns Explore:
              name: Parameters and Returns Explore
            Parameters and Returns Investigate:
              name: Parameters and Returns Investigate
            Parameters and Returns Practice:
              name: Parameters and Returns Practice
            Parameters and Returns Make:
              name: Parameters and Returns Make
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Practice:
              name: Libraries Practice
            Libraries Make:
              name: Libraries Make
            Project - Libraries Part 1:
              name: Project - Libraries Part 1
            Project - Libraries Part 2:
              name: Project - Libraries Part 2
            Project - Libraries Part 3:
              name: Project - Libraries Part 3
            Assessment Day:
              name: Assessment Day
            Parameters and Return Explore:
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              name: Parameters and Return Practice
            Parameters and Return Make:
              name: Parameters and Return Make
            Libraries Make Part 1:
              name: Libraries Make Part 1
            Libraries Make Part  2:
              name: Libraries Make Part  2
            Libraries Make Part 3:
              name: Libraries Make Part 3
            Project - Make a Library Part 1:
              name: Project - Make a Library Part 1
            Project - Make a Library Part 2:
              name: Project - Make a Library Part 2
            Project - Make a Library Part 3:
              name: Project - Make a Library Part 3
            Variables Make Demo:
              name: Variables Make Demo
            Unit 7 STUDENT Survey:
              name: Unit 7 STUDENT Survey
            Unit 7 TEACHER Survey:
              name: Unit 7 TEACHER Survey
            'Lesson 11: Assessment Day':
              name: 'Lesson 11: Assessment Day'
            "[OLD] Parameters and Return Make":
              name: "[OLD] Parameters and Return Make"
          student_description: ''
        csp8-pilot:
          title: CSP Unit 8 Pilot - Create PT Prep
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Create PT - Review the Task:
              name: Create PT - Review the Task
            Create PT - Make a Plan:
              name: Create PT - Make a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
          student_description: ''
        csp4-2020:
          title: CSP Unit 4 - Variables, Conditionals, and Functions ('20-'21)
          description_audience: ''
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditional Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Project - Decision Maker App Part 1:
              name: Project - Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              name: Project - Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              name: Project - Decision Maker App Part 3
            'Lesson 15: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          name: csp4-2020
        csp5-2020:
          title: CSP Unit 5 - Lists, Loops, and Traversals ('20-'21)
          description_audience: ''
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Lists Practice:
              name: Lists Practice
            Lists Make:
              name: Lists Make
            Loops Explore:
              name: Loops Explore
            Loops Investigate:
              name: Loops Investigate
            Loops Practice:
              name: Loops Practice
            Loops Make:
              name: Loops Make
            Traversals Explore:
              name: Traversals Explore
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Semester Hackathon Part 1:
              name: Semester Hackathon Part 1
            Semester Hackathon Part 2:
              name: Semester Hackathon Part 2
            Semester Hackathon Part 3:
              name: Semester Hackathon Part 3
            Semester Hackathon Part 4:
              name: Semester Hackathon Part 4
            Semester Hackathon Part 5:
              name: Semester Hackathon Part 5
            'Lesson 18: Assessment Day':
              name: Assessment Day
            Unit 5 STUDENT Survey:
              name: Unit 5 STUDENT Survey
            Unit 5 TEACHER Survey:
              name: Unit 5 TEACHER Survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          name: csp5-2020
        csp7-2020:
          title: CSP Unit 7 - Parameters, Return, and Libraries ('20-'21)
          description_audience: ''
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            Parameters and Return Explore:
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              name: Parameters and Return Practice
            Parameters and Return Make:
              name: Parameters and Return Make
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Practice:
              name: Libraries Practice
            Project - Make a Library Part 1:
              name: Project - Make a Library Part 1
            Project - Make a Library Part 2:
              name: Project - Make a Library Part 2
            Project - Make a Library Part 3:
              name: Project - Make a Library Part 3
            Assessment Day:
              name: Assessment Day
            Unit 7 STUDENT Survey:
              name: Unit 7 STUDENT Survey
            Unit 7 TEACHER Survey:
              name: Unit 7 TEACHER Survey
            Variables Make Demo:
              name: Variables Make Demo
            'Lesson 11: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          name: csp7-2020
          student_description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
        csd2-projects-temp:
          title: CSD Web Projects - TEMP
          description_audience: ''
          description_short: ''
          description: Temporary place to hold the new mini-projects for CSD Web Development
          lesson_groups: {}
          lessons:
            HTML  Project:
              name: HTML  Project
            CSS Project:
              name: CSS Project
          student_description: Temporary place to hold the new mini-projects for CSD Web Development
        csp9-pilot:
          title: CSP Unit 9 Pilot - Data
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Learning From Data:
              name: Learning From Data
            Exploring One Column:
              name: Exploring One Column
            Filtering and Cleaning Data:
              name: Filtering and Cleaning Data
            Exploring Two Columns - Discrete:
              name: Exploring Two Columns - Discrete
            Exploring Two Columns - Continuous:
              name: Exploring Two Columns - Continuous
            Big Data, Crowdsourcing, and Machine Learning:
              name: Big Data, Crowdsourcing, and Machine Learning
            Machine Learning and Bias:
              name: Machine Learning and Bias
            Project - Tell a Data Story - Part 1:
              name: Project - Tell a Data Story - Part 1
            Project - Tell a Data Story - Part 2:
              name: Project - Tell a Data Story - Part 2
            'Lesson 10: Assessment Day':
              name: 'Lesson 10: Assessment Day'
            Exploring Two Columns:
              name: Exploring Two Columns
            'Lesson 9: Assessment Day':
              name: 'Lesson 9: Assessment Day'
          student_description: ''
        csd2-2020:
          title: CSD Unit 2 - Web Development ('20-'21)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
            cspSurvey:
              display_name: Survey
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
          lessons:
            Exploring Web Pages:
              name: Exploring Web Pages
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            Digital Footprint:
              name: Digital Footprint
            Styling Text with CSS:
              name: Styling Text with CSS
            Intellectual Property:
              name: Intellectual Property
            Images:
              name: Images
            'Websites for Expression ':
              name: 'Websites for Expression '
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Project - Planning Layout and Style:
              name: Project - Planning Layout and Style
            Project - Building a Webpage:
              name: Project - Building a Webpage
            Purpose of a  Websites:
              name: Purpose of a  Websites
            Team Problem Solving:
              name: Team Problem Solving
            Sources and Research:
              name: Sources and Research
            CSS Classes:
              name: CSS Classes
            Planning a Multi-page Website:
              name: Planning a Multi-page Website
            Linking and Navigation:
              name: Linking and Navigation
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            'Mini-Project: HTML Web Page':
              name: 'Mini-Project: HTML Web Page'
            'Mini-Project: Your Personal Style':
              name: 'Mini-Project: Your Personal Style'
            'Your Web Page - Define ':
              name: 'Your Web Page - Define '
            Your Web Page - Prepare:
              name: Your Web Page - Prepare
            Project - Personal Web Page:
              name: Project - Personal Web Page
            Websites for a Purpose:
              name: Websites for a Purpose
            Linking Pages:
              name: Linking Pages
            Using Images:
              name: Using Images
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          name: csd2-2020
        csd1-2020:
          title: CSD Unit 1 - Problem Solving and Computing ('20-'21)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
            csd1_3:
              display_name: Alternate Lessons
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Apps and Storage:
              name: Apps and Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
            'Alternate Versions of Lesson 1: Intro to Problem Solving':
              name: 'Alternate Versions of Lesson 1: Intro to Problem Solving'
            'Alternate Versions of Lesson 3: Exploring Problem Solving':
              name: 'Alternate Versions of Lesson 3: Exploring Problem Solving'
            'Lesson 1: Intro to Problem Solving - Newspaper Table':
              name: 'Lesson 1: Intro to Problem Solving - Newspaper Table'
            'Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: 'Lesson 1: Intro to Problem Solving - Spaghetti Bridge'
            'Lesson 1: Intro to Problem Solving - Paper Tower':
              name: 'Lesson 1: Intro to Problem Solving - Paper Tower'
            'Lesson 3: Exploring Problem Solving - Games Theme':
              name: 'Lesson 3: Exploring Problem Solving - Games Theme'
            'Lesson 3: Exploring Problem Solving - Animals Theme':
              name: 'Lesson 3: Exploring Problem Solving - Animals Theme'
            \"Alt Lesson 1:\" Intro to Problem Solving - Newspaper Table:
              name: \"Alt Lesson 1:\" Intro to Problem Solving - Newspaper Table
            'Alt Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: 'Alt Lesson 1: Intro to Problem Solving - Spaghetti Bridge'
            '"Alt Lesson 1:" Intro to Problem Solving - Newspaper Table':
              name: '"Alt Lesson 1:" Intro to Problem Solving - Newspaper Table'
            " Newspaper Table (Alt Lesson 1: Intro to Problem Solving -)":
              name: " Newspaper Table (Alt Lesson 1: Intro to Problem Solving -)"
            'Spaghetti Bridge - "Alt Lesson 1: Intro to Problem Solving "':
              name: 'Spaghetti Bridge - "Alt Lesson 1: Intro to Problem Solving "'
            " Newspaper Table (Alternative Lesson 1: Intro to Problem Solving)":
              name: " Newspaper Table (Alternative Lesson 1: Intro to Problem Solving)"
            'Spaghetti Bridge - (Alt Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge - (Alt Lesson 1: Intro to Problem Solving)'
            'Spaghetti Bridge (Alt Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge (Alt Lesson 1: Intro to Problem Solving)'
            'Paper Tower (Lesson 1: Intro to Problem Solving)':
              name: 'Paper Tower (Lesson 1: Intro to Problem Solving)'
            " Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)":
              name: " Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)"
            'Spaghetti Bridge (Alt. Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge (Alt. Lesson 1: Intro to Problem Solving)'
            'Games Theme (Lesson 3: Exploring Problem Solving)':
              name: 'Games Theme (Lesson 3: Exploring Problem Solving)'
            'Exploring Problem Solving (Lesson 3: Exploring Problem Solving)':
              name: 'Exploring Problem Solving (Lesson 3: Exploring Problem Solving)'
            'Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)'
            'Spaghetti Bridge (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'Spaghetti Bridge (Alternate Lesson 1: Intro to Problem Solving)'
            'Games Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'Games Theme (Alternate Lesson 3: Exploring Problem Solving)'
            'Exploring Problem Solving (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'Exploring Problem Solving (Alternate Lesson 3: Exploring Problem Solving)'
            'Paper Tower (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'Paper Tower (Alternate Lesson 1: Intro to Problem Solving)'
            'Animals Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'Animals Theme (Alternate Lesson 3: Exploring Problem Solving)'
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              name: Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)
            Spaghetti Bridge (Alternate Lesson 1):
              name: Spaghetti Bridge (Alternate Lesson 1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              name: Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              name: Intro to Problem Solving - Paper Tower (Alternate Lesson 1)
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Games Theme (Alternate Lesson 3)
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Animals Theme (Alternate Lesson 3)
            Storage:
              name: Storage
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd4-2020:
          title: CSD Unit 4 - The Design Process ('20-'21)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Linking Screens:
              name: Linking Screens
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            Project - App Presentation:
              name: Project - App Presentation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          name: csd4-2020
        csd5-2020:
          title: CSD Unit 5 - Data and Society ('20-'21)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            Keeping Data Secret:
              name: Keeping Data Secret
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Structuring Data:
              name: Structuring Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Project - Make a Recommendation:
              name: Project - Make a Recommendation
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd6-2020:
          title: CSD Unit 6 - Physical Computing ('20-'21)
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          description_short: Learn to program with physical devices.
          description_audience: ''
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
            cspSurvey:
              display_name: Survey
          lessons:
            Innovations in Computing:
              name: Innovations in Computing
            Designing Screens with Code:
              name: Designing Screens with Code
            The Circuit Playground:
              name: The Circuit Playground
            Input Unplugged:
              name: Input Unplugged
            Board Events:
              name: Board Events
            Getting Properties:
              name: Getting Properties
            Analog Input:
              name: Analog Input
            The Program Design Process:
              name: The Program Design Process
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csd3-2020:
          title: CSD Unit 3 - Interactive Animations and Games ('20-'21)
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Parameters:
              name: Shapes and Parameters
            Variables:
              name: Variables
            Random Numbers:
              name: Random Numbers
            Sprites and Animations:
              name: Sprites and Animations
            Sprite Properties:
              name: Sprite Properties
            Text and Captioned Scenes:
              name: Text and Captioned Scenes
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Text:
              name: Text
            'Mini-Project: Captioned Scenes':
              name: 'Mini-Project: Captioned Scenes'
            'Mini-Project: Animation':
              name: 'Mini-Project: Animation'
            Mouse Input:
              name: Mouse Input
            'Mini-Project: Side Scroller':
              name: 'Mini-Project: Side Scroller'
            'Mini-Project: Platform Jumper':
              name: 'Mini-Project: Platform Jumper'
            'Mini-Project: Flyer Game':
              name: 'Mini-Project: Flyer Game'
            Sprites:
              name: Sprites
          name: csd3-2020
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        moneppo-1:
          lesson_groups: {}
          lessons: {}
        coursea-2020:
          title: Course A (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Going Places Safely:
              name: Going Places Safely
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: Happy Maps
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming in Ice Age:
              name: Programming with Scrat
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            'Loops: Happy Loops':
              name: Happy Loops
            Loops in Ice Age:
              name: Loops with Scrat
            Loops in Collector:
              name: Loops with Laurel
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: On the Move with Events
            Safety in My Online Neighborhood:
              name: Safety in My Online Neighborhood
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2020:
          title: Course B (2020)
          description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
          lessons:
            Your Digital Footprint:
              name: Your Digital Footprint
            Move It, Move It:
              name: Move It, Move It
            Sequencing in Maze:
              name: Sequencing with Angry Birds
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
            'Loops: Getting Loopy':
              name: Getting Loopy
            Loops in Harvester:
              name: Loops with Harvester
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            The Right App:
              name: The Right App
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: A Royal Battle with Events
            Digital Trails:
              name: Digital Trails
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        coursec-2020:
          title: Course C (2020)
          description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Screen Out the Mean:
              name: Screen Out the Mean
            Powerful Passwords:
              name: Powerful Passwords
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
            Programming in Maze:
              name: Programming with Angry Birds
            Debugging in Maze:
              name: Debugging in Maze
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            Binary Bracelets:
              name: Binary Bracelets
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Loops in Harvester:
              name: Harvesting Crops with Loops
            Looking Ahead:
              name: Looking Ahead with Minecraft
            Sticker Art with Loops:
              name: Sticker Art with Loops
            'Events: The Big Event':
              name: The Big Event
            Build a Flappy Game:
              name: Build a Flappy Game
            Events in Play Lab:
              name: Chase Game with Events
            Picturing Data:
              name: Picturing Data
            'End of Course Project: Create a Play Lab Game':
              name: End of Course Project
            Putting a STOP to Online Meanness:
              name: Putting a STOP to Online Meanness
            Password Power-Up:
              name: Password Power-Up
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        coursed-2020:
          title: Course D (2020)
          description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
            Relay Programming:
              name: Relay Programming
            Debugging in Collector:
              name: Debugging with Laurel
            Events in Bounce:
              name: Events in Bounce
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Loops in Ice Age:
              name: Loops in Ice Age
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: If/Else with Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals
            'Unplugged: Binary':
              name: Binary Images
            Artist Binary:
              name: Binary Images with Artist
            Digital Citizenship:
              name: Digital Citizenship
            Dance Party:
              name: Dance Party
            Dance Part:
              name: Dance Part
            End of Course Project:
              name: End of Course Project
            Be A Super Digital Citizen:
              name: Be A Super Digital Citizen
          student_description: Students develop their understanding of loops, conditionals, and events. Beyond coding, students learn about digital citizenship.
        coursee-2020:
          title: Course E (2020)
          description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
          description_short: Review concepts in Courses C & D, then go further by learning functions.
          description_audience: 'Ages: 8-12'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_nested_loops:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            csf_impacts:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Sequencing in the Maze:
              name: Sequencing in the Maze
            Programming and Loops with the Artist:
              name: Drawing with Loops
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              name: Conditionals with the Farmer
            Simon Says:
              name: Simon Says
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              name: Private and Personal Information
            About Me:
              name: About Me with Sprite Lab
            Access Ability:
              name: Designing for Accessibility
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
            Nested Loops in Frozen:
              name: Nested Loops with Frozen
            'Functions: Songwriting':
              name: Songwriting
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions with Harvester
            Functions in Artist:
              name: Functions with Artist
            End of Course Project:
              name: End of Course Project
            Digital Sharing:
              name: Digital Sharing
            Designing for Accessibility:
              name: Designing for Accessibility
          student_description: Start coding with algorithms, loops, conditionals, and events and then you’ll move on functions. In the second part of this course, design and create a capstone project you can share with your friends and family.
        coursef-2020:
          title: Course F (2020)
          description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lesson_groups:
            ramp_up:
              display_name: Ramp-Up
            csf_digcit:
              display_name: Digital Citizenship
            csf_variables:
              display_name: Variables
            csf_data:
              display_name: Data
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Functions in Minecraft:
              name: Functions in Minecraft
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Events with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Loops with the Artist:
              name: Drawing with Loops
            Nested Loops in the Maze:
              name: Nested Loops in Maze
            Envelope Variables:
              name: Envelope Variables
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Changing Variables with Bee
            Variables that Change in Artist:
              name: Changing Variables with Artist
            Simulating Experiments:
              name: Simulating Experiments
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            Internet:
              name: The Internet
            Editing Behaviors:
              name: Behaviors in Sprite Lab
            Virtual Pet:
              name: Virtual Pet with Sprite Lab
            The Power of Words:
              name: The Power of Words
            Crowdsourcing:
              name: Crowdsourcing
            Digital Sharing:
              name: Digital Sharing
            End of Course Project:
              name: End of Course Project
            AI for Oceans:
              name: AI for Oceans
          student_description: Learn to use different kinds of loops, events, functions, and conditionals. Investigate different problem-solving techniques and discuss societal impacts of computing and the internet. In the second part of this course, design and create a capstone project you can share with friends and family.
          name: coursef-2020
        express-2020:
          title: Express Course (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lesson_groups:
            csf_warmup:
              display_name: Warm-Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
          lessons:
            Dance Party:
              name: Dance Party
            Programming in Maze:
              name: Programming in Maze
            Debugging in Maze:
              name: Debugging in Maze
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Loops in Artist:
              name: Loops in Artist
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
            'Concept Practice with Minecraft ':
              name: 'Concept Practice with Minecraft '
            Conditionals in Bee:
              name: Conditionals in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals & Loops in Harvester:
              name: Conditionals & Loops in Harvester
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions in Harvester
            Functions in Artist:
              name: Functions in Artist
            Variables as Constant in Artist:
              name: Variables as Constant in Artist
            Variables that Change in Bee:
              name: Variables that Change in Bee
            Variables that Change in Artist:
              name: Variables that Change in Artist
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Learning Sprites with Sprite Lab:
              name: Learning Sprites with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Editing Behaviors:
              name: Editing Behaviors
            Virtual Pet with Sprite Lab:
              name: Virtual Pet with Sprite Lab
            Build A Project:
              name: Build A Project
            Swimming Fish with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Behaviors with Sprite Lab:
              name: Behaviors with Sprite Lab
            End of Course Project:
              name: End of Course Project
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Debugging with Scrat:
              name: Debugging with Scrat
            Collecting Treasure with Laurel:
              name: Collecting Treasure with Laurel
            Creating Art with Code:
              name: Creating Art with Code
            Sticker Art with Loops:
              name: Sticker Art with Loops
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Snowflakes with Anna and Elsa:
              name: Snowflakes with Anna and Elsa
            'Looking Ahead with Minecraft ':
              name: 'Looking Ahead with Minecraft '
            If/Else with Bee:
              name: If/Else with Bee
            While Loops with the Farmer:
              name: While Loops with the Farmer
            Harvesting with Conditionals:
              name: Harvesting with Conditionals
            Functions with Harvester:
              name: Functions with Harvester
            Functions with Artist:
              name: Functions with Artist
            Variables with Artist:
              name: Variables with Artist
            Changing Variables with Bee:
              name: Changing Variables with Bee
            Changing Variables with Artist:
              name: Changing Variables with Artist
            For Loops with Bee:
              name: For Loops with Bee
            For Loops with Artist:
              name: For Loops with Artist
            Swimming Fish in Sprite Lab:
              name: Swimming Fish in Sprite Lab
            Alien Dance Party:
              name: Alien Dance Party
            Behaviors in Sprite Lab:
              name: Behaviors in Sprite Lab
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        pre-express-2020:
          title: Pre-reader Express (2020)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          lessons:
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming in Maze:
              name: Programming in Maze
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Programming in Harvester:
              name: Programming in Harvester
            Spelling Bee:
              name: Spelling Bee
            Loops in Ice Age:
              name: Loops in Ice Age
            Loops in Collector:
              name: Loops in Collector
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            Loops in Artist:
              name: Loops in Artist
            Tell a Story in Play Lab:
              name: Tell a Story in Play Lab
            Make a Game in Play Lab:
              name: Make a Game in Play Lab
            Programming in with Angry Birds:
              name: Programming in with Angry Birds
            Loops with Scrat:
              name: Loops with Scrat
            Loops with Laurel:
              name: Loops with Laurel
            Drawing Gardens with Loops:
              name: Drawing Gardens with Loops
            On the Move with Events:
              name: On the Move with Events
            A Royal Battle with Events:
              name: A Royal Battle with Events
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        csp1-2020:
          title: CSP Unit 1 - Digital Information ('20-'21)
          description_audience: ''
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          lesson_groups:
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
            cspSurvey:
              display_name: Survey
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Welcome to CSP:
              name: Welcome to CSP
            Representing Information:
              name: Representing Information
            Circle Square Patterns:
              name: Circle Square Patterns
            Binary Numbers:
              name: Binary Numbers
            Overflow and Rounding:
              name: Overflow and Rounding
            Representing Text:
              name: Representing Text
            Black and White Images:
              name: Black and White Images
            Color Images:
              name: Color Images
            Lossless Compression:
              name: Lossless Compression
            Lossy Compression:
              name: Lossy Compression
            Intellectual Property:
              name: Intellectual Property
            Project - Digital Information Dilemmas Part 1:
              name: Project - Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              name: Project - Digital Information Dilemmas Part 2
            'Lesson 14: Assessment Day':
              name: Assessment Day
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          name: csp1-2020
        csp2-2020:
          title: CSP Unit 2 - The Internet ('20-'21)
          description_audience: ''
          description_short: Build the internet from the ground up using the Internet Simulator.
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Welcome to the Internet:
              name: Welcome to the Internet
            Building a Network:
              name: Building a Network
            The Need for Addressing:
              name: The Need for Addressing
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets:
              name: Packets
            DNS and HTTP:
              name: DNS and HTTP
            Project - Internet Dilemmas Part 1:
              name: Project - Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              name: Project - Internet Dilemmas Part 2
            'Lesson 9: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          name: csp2-2020
        csp3-2020:
          title: CSP Unit 3 - Intro to App Design ('20-'21)
          description_audience: ''
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            Project - Designing an App Part 1:
              name: Project - Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project - Designing an App Part 2
            The Need for Programming Languages:
              name: The Need for Programming Languages
            Intro to Programming:
              name: Intro to Programming
            Debugging:
              name: Debugging
            Project - Designing an App Part 3:
              name: Project - Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project - Designing an App Part 4
            Project - Designing an App Part 5:
              name: Project - Designing an App Part 5
            'Lesson 11: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          name: csp3-2020
          student_description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
        csp6-2020:
          title: CSP Unit 6 - Algorithms ('20-'21)
          description_audience: ''
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          lesson_groups:
            csp_unit6_2020:
              display_name: 'Unit 6: Algorithms'
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Algorithms Solve Problems:
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              name: Algorithm Efficiency
            Unreasonable Time:
              name: Unreasonable Time
            The Limits of Algorithms:
              name: The Limits of Algorithms
            Parallel and Distributed Algorithms:
              name: Parallel and Distributed Algorithms
            'Lesson 6: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          name: csp6-2020
        csp8-2020:
          title: CSP Unit 8 - Create PT Prep ('20-'21)
          description_audience: ''
          description_short: Practice and complete the Create Performance Task (PT).
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Create PT - Review the Task:
              name: Create PT - Review the Task
            Create PT - Make a Plan:
              name: Create PT - Make a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
          student_description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          name: csp8-2020
        csp9-2020:
          title: CSP Unit 9 - Data ('20-'21)
          description_audience: ''
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project you''ll analyze a dataset of your choosing and present your findings. '
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Learning From Data:
              name: Learning From Data
            Exploring One Column:
              name: Exploring One Column
            Filtering and Cleaning Data:
              name: Filtering and Cleaning Data
            Exploring Two Columns:
              name: Exploring Two Columns
            Big Data, Crowdsourcing, and Machine Learning:
              name: Big Data, Crowdsourcing, and Machine Learning
            Machine Learning and Bias:
              name: Machine Learning and Bias
            Project - Tell a Data Story - Part 1:
              name: Project - Tell a Data Story - Part 1
            Project - Tell a Data Story - Part 2:
              name: Project - Tell a Data Story - Part 2
            'Lesson 9: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project you''ll analyze a dataset of your choosing and present your findings. '
          name: csp9-2020
        csp10-2020:
          title: CSP Unit 10 - Cybersecurity and Global Impacts ('20-'21)
          description_audience: ''
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security, and the ways that encryption and other techniques are used to complete it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\r\n\r\n"
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
            cspSurvey2020:
              display_name: Post-Course Survey
          lessons:
            new stage:
              name: new stage
            Project - Innovation Simulation Part 1:
              name: Project - Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              name: Project - Innovation Simulation Part 2
            Project - Innovation Simulation Part 3:
              name: Project - Innovation Simulation Part 3
            Data Policies and Privacy:
              name: Data Policies and Privacy
            The Value of Privacy:
              name: The Value of Privacy
            Project - Innovation Simulation Part 4:
              name: Project - Innovation Simulation Part 4
            Security Risks Part 1:
              name: Security Risks Part 1
            Security Risks Part 2:
              name: Security Risks Part 2
            'Project: Innovation Simulation Part 4':
              name: 'Project: Innovation Simulation Part 4'
            Project - Innovation Simulation Part 6:
              name: Project - Innovation Simulation Part 6
            Project - Innovation Simulation Part 7:
              name: Project - Innovation Simulation Part 7
            Protecting Data Part 1:
              name: Protecting Data Part 1
            Protecting Data Part 2:
              name: Protecting Data Part 2
            'Project: Innovation Simulation Part 5':
              name: 'Project: Innovation Simulation Part 5'
            'Project: Innovation Simulation Part 6':
              name: 'Project: Innovation Simulation Part 6'
            'Project: Innovation Simulation Part 7':
              name: 'Project: Innovation Simulation Part 7'
            'Lesson 14: Unit Assessment Day':
              name: Unit Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          student_description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security, and the ways that encryption and other techniques are used to complete it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\r\n\r\n"
          name: csp10-2020
        csp-march-virtual:
          title: CS Principles 20-21 Curriculum Training for Facilitators
          description_audience: CS Principles Facilitators
          description_short: ''
          description: Welcome to the CSP Facilitator Pre-work for the April call! This will be focused on deepening the understanding of EIPM, content in Unit 5, and the new datasets available in the course. This work is essential to completing before the April call since we will be processing and discussing the work together in the call.
          lesson_groups: {}
          lessons:
            Kick-off:
              name: Kick-off
            Changes:
              name: Changes
            Curriculum Investigations:
              name: Curriculum Investigations
            Wrap up:
              name: Wrap up
            new stage:
              name: new stage
            Pre-work:
              name: Pre-work
            Reflections:
              name: Reflections
            Part 1:
              name: Part 1
            Part 2:
              name: Part 2
            Getting Familiar with Traversals EIPM:
              name: Getting Familiar with Traversals EIPM
            Comparing Make Lessons:
              name: Comparing Make Lessons
            Prework and Saturday Session Resources:
              name: Prework and Saturday Session Resources
            Saturday Session Resources:
              name: Saturday Session Resources
          student_description: Welcome to the CSP Facilitator Pre-work for the April call! This will be focused on deepening the understanding of EIPM, content in Unit 5, and the new datasets available in the course. This work is essential to completing before the April call since we will be processing and discussing the work together in the call.
        csp3-virtual:
          title: Self Paced Introduction to Turtle Programming In App Lab
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          lesson_groups:
            csp3_1_2018:
              display_name: 'Unit 3: Intro to Programming'
          lessons:
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Creating Functions:
              name: Creating Functions
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
            Make your own Digital Scene:
              name: Make your own Digital Scene
          student_description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        jess-test-script:
          title: Jess's Script
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Our First Stage:
              name: Our First Stage
            new stage:
              name: new stage
            newer stage:
              name: newer stage
            Welcome to CSD Virtual Professional Learning:
              name: Welcome to CSD Virtual Professional Learning
            Introduction to CSD:
              name: Introduction to CSD
            Tools:
              name: Tools
            Curriculum Components:
              name: Curriculum Components
            Course Resources:
              name: Course Resources
            Debugging:
              name: Debugging
            Virtual Professional Learning Overview:
              name: Virtual Professional Learning Overview
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 8:
              name: Module 8
            Module 7:
              name: Module 7
            Self Paced Playground:
              name: Self-Paced Playground
            "[TEMPLATE] Introduction to":
              name: "[TEMPLATE] Introduction to..."
            "[TEMPLATE] Content lessons":
              name: "[TEMPLATE] Content lessons"
            "[TEMPLATE] Unit Wrap Up":
              name: "[TEMPLATE] Unit Wrap Up"
          student_description: ''
          name: jess-test-script
        csd2-virtual:
          title: Self Paced Introduction to Web Lab
          description: You’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
          description_short: Learn to build your own web site in Web Lab.
          description_audience: ''
          lesson_groups:
            csd2_1:
              display_name: 'Chapter 1: Web Content and HTML'
            csd2_2:
              display_name: 'Chapter 2: Styling and CSS'
          lessons:
            Exploring Web Pages:
              name: Exploring Web Pages
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            Digital Footprint:
              name: Digital Footprint
            Styling Text with CSS:
              name: Styling Text with CSS
            Intellectual Property:
              name: Intellectual Property
            Images:
              name: Images
            'Websites for Expression ':
              name: 'Websites for Expression '
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Project - Planning Layout and Style:
              name: Project - Planning Layout and Style
            Project - Building a Webpage:
              name: Project - Building a Webpage
            Purpose of a  Websites:
              name: Purpose of a  Websites
            Team Problem Solving:
              name: Team Problem Solving
            Sources and Research:
              name: Sources and Research
            CSS Classes:
              name: CSS Classes
            Planning a Multi-page Website:
              name: Planning a Multi-page Website
            Linking and Navigation:
              name: Linking and Navigation
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Purpose of a Websites:
              name: Purpose of a Websites
          student_description: You’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
        csp5-virtual:
          title: Event-Driven Programming in App Lab
          description: This self-paced module introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This unit uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          lesson_groups: {}
          lessons:
            Buttons and Events:
              name: Buttons and Events
            Multi-screen Apps:
              name: Multi-screen Apps
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
            User Input and Strings:
              name: User Input and Strings
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            While Loops:
              name: While Loops
            Loops and Simulations:
              name: Loops and Simulations
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Processing Arrays:
              name: Processing Arrays
            Functions with Return Values:
              name: Functions with Return Values
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            CS Principles Post Course survey:
              name: CS Principles Post Course survey
            Intro to App Lab:
              name: Intro to App Lab
            Console.log and Multi-screen Apps:
              name: Console.log and Multi-screen Apps
            Variables:
              name: Variables
            Moving Memory Challenges:
              name: Moving Memory Challenges
            If-Statements:
              name: If-Statements
            Keep Going:
              name: Keep Going
            Keep Going!:
              name: Keep Going!
          student_description: This self-paced module introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This unit uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        virtual-holding-place:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups:
            content:
              display_name: Content
            csd3_2:
              display_name: 'Chapter 2: Building Games'
          lessons:
            Example Projects:
              name: Example Projects
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
          student_description: ''
        code-break:
          title: Code Break
          description_audience: ''
          description_short: ''
          description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 13+. '
          lesson_groups: {}
          lessons:
            new stage:
              name: new stage
            Beginner Challenges:
              name: Beginner Challenges
            Intermediate Challenges:
              name: Intermediate Challenges
            'Episode 1: Algorithms':
              name: 'Episode 1: Algorithms'
            'Episode 2: Events':
              name: 'Episode 2: Events'
            Algorithms:
              name: Algorithms
            Events:
              name: Events
            'Episode 1: Algorithms with Hill Harper':
              name: 'Episode 1: Algorithms with Hill Harper'
            'Episode 2: Events with Ciara':
              name: 'Episode 2: Events with Ciara'
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Placeholder:
              name: Episode 2 - Placeholder
            Episode 2 - Coming Soon!:
              name: Episode 2 - Coming Soon!
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Conditionals with Sal Khan & Flo Vaughn:
              name: Conditionals with Sal Khan & Flo Vaughn
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            AI with Kat Graham & Cody Simpson:
              name: AI with Kat Graham & Cody Simpson
            AI with Kat Graham & Kate Park:
              name: AI with Kat Graham & Kate Park
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia
          student_description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 13+. '
        code-break-staging:
          title: Code Break Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epson:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epson
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            Episode 6 - The Internet with Vint Cerf and Keegan-Michael Key:
              name: Episode 6 - The Internet with Vint Cerf and Keegan-Michael Key
            Episode 6 - The Internet with Keegan-Michael Key & Vint Cerf:
              name: Episode 6 - The Internet with Keegan-Michael Key & Vint Cerf
            Algorithms with Hill Harper:
              name: Algorithms with Hill Harper
            Prototypes with Mark Cuban & Lyndsey Scott:
              name: Prototypes with Mark Cuban & Lyndsey Scott
            Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Encryption with Ashton Kutcher & Mia Gil Epner
            Digital Information with Mike Krieger & Alice Keeler:
              name: Digital Information with Mike Krieger & Alice Keeler
            Simulations & Data with Bill Gates:
              name: Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Conditionals with Sal Khan & Flo Vaughn:
              name: Conditionals with Sal Khan & Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            AI with Kat Graham & Cody Simpson:
              name: AI with Kat Graham & Cody Simpson
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
          student_description: ''
        code-break-younger-staging:
          title: Code Break Younger Staging
          description_audience: ''
          description_short: ''
          description: ''
          lesson_groups: {}
          lessons:
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
          student_description: ''
        code-break-younger:
          title: Code Break for Younger Students
          description_audience: ''
          description_short: ''
          description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 6-12. '
          lesson_groups: {}
          lessons:
            Episode 1 - Algorithms with Hill Harper:
              name: Episode 1 - Algorithms with Hill Harper
            Episode 2 - Coming Soon!:
              name: Episode 2 - Coming Soon!
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Building Things with Mark Cuban & Lyndsey Scott
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: Episode 4 - Digital Information with Alice Keeler & Mike Krieger
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: Episode 4 - Digital Information with Mike Krieger & Alice Keeler
            Episode 5 - Simulations & Data with Bill Gates:
              name: Episode 5 - Simulations & Data with Bill Gates
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: The Internet with Keegan-Michael Key & Vint Cerf
            Conditionals with Sal Khan and Flo Vaughn:
              name: Conditionals with Sal Khan and Flo Vaughn
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: Variables with Yara Shahidi & Fuzzy Khosrowshahi
            Events with Macklemore & Scott Forstall:
              name: Events with Macklemore & Scott Forstall
            AI with Kat Graham & Cody Simpson:
              name: AI with Kat Graham & Cody Simpson
            AI with Kat Graham & Kate Park:
              name: AI with Kat Graham & Kate Park
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: Abstraction with Susan Wojcicki & China Anne McClain
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia:
              name: Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia
          student_description: 'With schools closed and tens of millions of students at home, Code.org is launching Code Break — a live weekly interactive classroom where our team will teach your children at home while school is closed, and a weekly challenge to engage students of all abilities, even those without computers. More info at Code.org/break. Ages 6-12. '
        no-lg:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          lessons:
            new stage:
              name: new stage
        csp5-virtual-part2:
          title: Self Paced Introduction to App Lab
          description_audience: ''
          description_short: Learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description: This unit introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This uni uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          lesson_groups:
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            csp5_2:
              display_name: 'Chapter 2: Programming with Data Structures'
          lessons:
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            While Loops:
              name: While Loops
            Loops and Simulations:
              name: Loops and Simulations
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Processing Arrays:
              name: Processing Arrays
            Functions with Return Values:
              name: Functions with Return Values
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
          student_description: This unit introduces foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This uni uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
        gamelabprojects:
          lessons: {}
          lesson_groups: {}
        k5-onlinepd-2020:
          title: Teaching Computer Science Fundamentals (2020)
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              name: Welcome to "Teaching Computer Science Fundamentals"
            Understanding the Computer Science Fundamentals Courses:
              name: Understanding the Computer Science Fundamentals Courses
            Sequencing:
              name: Sequencing
            Loops:
              name: Loops
            Events:
              name: Events
            Conditionals:
              name: Conditionals
            End of Course projects:
              name: End of Course projects
            Functions:
              name: Functions
            Variables:
              name: Variables
            For Loops:
              name: For Loops
            Sprite Lab:
              name: Sprite Lab
            Reviewing your reflections:
              name: Reviewing your reflections
            Next steps:
              name: Next steps
          lesson_groups:
            k5_getting_started_1:
              display_name: Getting Started
            k5_basic_concepts_1:
              display_name: Basic Coding Concepts and Teaching Practices
            k5_diving_deeper_1:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps_1:
              display_name: Next Steps
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course!
          name: k5-onlinepd-2020
        dani-test-2020:
          lessons:
            new lesson:
              name: new lesson
          lesson_groups:
            lesson group:
              display_name: display name
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dani-june-2020-test:
          lessons:
            new lesson:
              name: new lesson
            lesson 2:
              name: lesson 2
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Buttons and Events:
              name: Buttons and Events
          lesson_groups:
            lesson group:
              display_name: display name
            lg_1:
              display_name: DISPLAYNAME
            cspSurvey:
              display_name: Survey
            csp5_1:
              display_name: 'Chapter 1: Event-Driven Programming'
            cs_lg:
              display_name: LG GOOD
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd3-virtual:
          title: Self Paced Introduction to Game Lab
          description: You’ll program animations, interactive art, and games in Game Lab. Start off with simple shapes and build up to more sophisticated sprite-based animations and games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Parameters:
              name: Shapes and Parameters
            Variables:
              name: Variables
            Random Numbers:
              name: Random Numbers
            Sprites:
              name: Sprites
            Sprite Properties:
              name: Sprite Properties
            Text:
              name: Text
            'Mini-Project: Captioned Scenes':
              name: 'Mini-Project: Captioned Scenes'
            The Draw Loop:
              name: The Draw Loop
            Sprite Movement:
              name: Sprite Movement
            'Mini-Project: Animation':
              name: 'Mini-Project: Animation'
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Mouse Input:
              name: Mouse Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            'Mini-Project: Side Scroller':
              name: 'Mini-Project: Side Scroller'
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            'Mini-Project: Flyer Game':
              name: 'Mini-Project: Flyer Game'
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
          lesson_groups:
            csd3_1:
              display_name: Content
            csd3_2:
              display_name: Content
            cspSurvey:
              display_name: Content
          student_description: You’ll program animations, interactive art, and games in Game Lab. Start off with simple shapes and build up to more sophisticated sprite-based animations and games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.
        ui-test-script-in-course-2017:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-script-in-course-2019:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-versioned-script-2017:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        ui-test-versioned-script-2019:
          lessons:
            Lesson:
              name: Lesson
          lesson_groups:
            lg_1:
              display_name: Content
        kaitie-test-script:
          lessons:
            new lesson:
              name: new lesson
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 7:
              name: Module 7
            Module 8:
              name: Module 8
            'CS Principles: Functions':
              name: 'CS Principles: Functions'
            'CS Principles: Variables Practice - Choice Test':
              name: Variables Practice - Choice Test
          lesson_groups:
            lesson group:
              display_name: display name
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
          name: kaitie-test-script
        vpl-csd-2020:
          lessons:
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 7:
              name: Module 7
            Module 8:
              name: Module 8
          lesson_groups: {}
          title: CS Discoveries Virtual Professional Learning 2020 - 21
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
          name: vpl-csd-2020
        vpl-csp-2020:
          lessons:
            Module 1:
              name: 'Module 1: Introducing Unit 4 and new pedagogy for teaching programming'
            Module 2:
              name: 'Module 2: Variables in Unit 4 and the role of collaboration'
            Module 3:
              name: 'Module 3: Unit 5, using lists in apps, and recognizing CS skills in the classroom'
            Module 4:
              name: 'Module 4: Unit 5 and using datasets in apps'
            Module 5:
              name: 'Module 5: Unit 7 and understanding functions with parameters and return'
            Module 6:
              name: 'Module 6: Introduction to the Create Performance Task'
            Module 7:
              name: 'Module 7: Tools and structure in Unit 9 - Data'
            Module 8:
              name: 'Module 8: Building community and preparing students for the AP Exam'
          lesson_groups: {}
          title: CS Principles Virtual Professional Learning
          description_audience: ''
          description_short: ''
          description: ''
          name: vpl-csp-2020
          student_description: ''
        curriculum-sandbox-levels:
          lessons:
            Course A:
              name: Course A
            Course B:
              name: Course B
            Course E/F:
              name: Course E/F
            CS Discoveries:
              name: CS Discoveries
            contagions:
              name: CS Connections
            Course E:
              name: Course E
            Course F:
              name: Course F
            csf:
              name: CS Fundamentals
            sprites_in_action_2021:
              name: 'Sprite Lab: Sprites in Action'
            text_and_prompts_2021:
              name: 'Sprite Lab: Text and Prompts'
            csp_functions_2021:
              name: 'CS Principles: Functions'
            minitoolbox_2021:
              name: 'Sprite Lab: Lots of Sprites'
            csf_slides:
              name: CS Fundamentals Slides
            playlab_2021:
              name: Play Lab Intro
          lesson_groups:
            lesson group:
              display_name: Teacher Levels
              description: These are teaching-facing levels that are linked to lesson plans. The levels do not appear in other scripts.
            slides:
              display_name: Translator Levels
              description: These levels contain editable start code that aligns to curriculum slide decks.
            video:
              display_name: Video Capture Levels
              description: These levels are for use by video creators.
          title: Curriculum Sandbox Levels
          description_audience: 'Internal - Do not delete. This script houses important curriculum levels that would otherwise not have a script. '
          description_short: 'Levels that are linked directly in lesson plans but do not appear in other scripts. '
          description: ''
          student_description: ''
          name: curriculum-sandbox-levels
        virustest:
          lessons:
            Virus Simulation for Code Bytes:
              name: Virus Simulation for Code Bytes
          lesson_groups:
            csf_data:
              display_name: Virus Simulation for Code Bytes
          title: Simulating an Outbreak
          description_audience: ''
          description_short: 'Use Sprite Lab to create a simulation out of a virus outbreak. '
          description: ''
          student_description: ''
        ml-playground:
          lessons:
            Variables:
              name: Example I Stole From CSD
            ML Playground:
              name: ML Playground
            ML Playground 2:
              name: ML Playground 2
            USE Projects:
              name: USE Projects
            MODIFY Projects:
              name: MODIFY Projects
            CREATE Projects:
              name: CREATE Projects
            USE Programs:
              name: USE Programs (AppLab Only)
            MODIFY Programs:
              name: MODIFY Programs (AppLab -> Widget -> AppLab)
            dog:
              name: Does Code.org Like Your Dog?
            AI for Oceans:
              name: AI for Oceans
            oceans:
              name: Machine Learning with AI for Oceans
            intro:
              name: Introduction to Machine Learning
            society:
              name: Machine Learning & Societal Impact
            decisions:
              name: Decision Making with Models
            visualizing:
              name: Visualizing Data
            knn-train:
              name: Train a model with continuous labels (KNN)
            knn-use:
              name: Act out model with continuous labels (KNN)
            knn-app:
              name: Make an app with continuous labels (KNN)
            svm-train:
              name: Train a model with categorical labels (SVM)
            svm-use:
              name: Act out model with categorical labels (SVM)
            svm-app:
              name: Make an app with categorical labels (SVM)
            model:
              name: Model Card
            data:
              name: Explore datasets & choose one for your app
            project-app:
              name: 'Mini-Project: Make an ML App'
            miseducation:
              name: Mis-education of the Machine
            ethics:
              name: Using ML Ethically
            ethics-hoc2020:
              name: AI & Ethics Hour of Code 2020
            hypothesis:
              name: Creating a Data Hypothesis
            goldilocks:
              name: Goldilocks Principles
            collection:
              name: Collecting Your Own Data
            project:
              name: Final project
            KNN:
              name: Feature Selection with Continuous Labels
            SVM:
              name: Data Investigations with Categorical Labels
            App:
              name: Using Models in the Real-World
            Ethics:
              name: Ethics
            Project:
              name: Final project
            appendix:
              name: Appendix
            intro-categorical:
              name: Introduction to AI Lab
            model-cards:
              name: Model Cards Playground
            bug-bash:
              name: Bug Bash Playground
            superunsuper:
              name: Unsupervised and Supervised
            exemplars:
              name: Exemplars I Accidentally Made in LB
            temp:
              name: TEMP LEVELS - DELETE LATER
            lesson1:
              name: Introduction to Machine Learning
            lesson2:
              name: How Computers Learn
            lesson3:
              name: Patterns in Data
            lesson4:
              name: Classification with Machine Learning
            lesson5:
              name: Training a Model with Features
            lesson6:
              name: Importing a Model in App Lab
            lesson7:
              name: The Need for Model Cards
            lesson8:
              name: Numerical Data in AI Lab
            lesson9:
              name: Regression With Machine Learning
            lesson10:
              name: Using Model Cards in App Lab
            lesson11:
              name: Customizing Your App
            lesson12:
              name: Making Data Decisions
            lesson13:
              name: AI for Social Good (Unplugged)
            lesson14:
              name: AI Code of Ethics (Unplugged)
            lesson15:
              name: Planning Your App
            lesson16:
              name: 'Project: App with Real-World Data'
            ailab-explore:
              name: Explore AI Lab
            videoLevels:
              name: Video Recording Levels
            CSP Tester:
              name: CSP Tester
          lesson_groups: {}
          title: ML/AI Unit - CSD
          description_audience: ''
          description_short: ML/AI Unit
          description: Brainstorm / Playground area for ML/AI Unit Development for CSD. For future questions about this, ask Dan Schneider.
          name: ml-playground
          student_description: Brainstorm / Playground area for ML/AI Unit Development for CSD. For future questions about this, ask Dan Schneider.
        outbreak:
          lessons:
            Virus Simulation for Code Bytes:
              name: Coding a Simulation
            Outbreak:
              name: Coding a Simulation
          lesson_groups:
            outbreak:
              display_name: Outbreak Simulation
          title: Outbreak Simulator
          description_audience: ''
          description_short: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          name: outbreak
          student_description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
        apps-for-good:
          lessons:
            Build an App for Good:
              name: Build an App for Good
          lesson_groups: {}
          title: Apps for Good
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        2021drafting:
          lessons:
            Sprite Lab:
              name: Sprite Lab Blocks
            Course F Introduction:
              name: Introducing Sprite Lab
            Learning Sprites with Sprite Lab:
              name: Programming with Sprite Lab
            lesson-1:
              name: Blank Space Variables
            lesson-2:
              name: Text and Prompts
            lesson-3:
              name: 'Mini-Project: User Input Programs'
            lesson-4:
              name: Debugging Prototypes
            lesson-5:
              name: Groups of Sprites
            lesson-6:
              name: Create a Collector Game
            Virus Simulation for Code Bytes:
              name: Coding a Simulation
            Making Sprites:
              name: Making Sprites
            Sprites in Action:
              name: Sprites in Action
            lesson-3-ci:
              name: Create a Haiku Bot
            video:
              name: Sprite Lab Videos
            blank space stories:
              name: Blank Space Stories
            how things spread:
              name: How Things Spread
            contagion simulator setup:
              name: Contagion Simulator Setup
            sometimes but not always:
              name: Sometimes, but Not Always
            modifying your model:
              name: Modifying Your model
            telling a data story:
              name: Telling a Data Story
            how things spread gp:
              name: How Things Spread  - Guided Practice
            contagion simulator gp:
              name: Contagion Simulator - Guided Practice
            sometimes not always gp:
              name: Sometimes, Not Always - Practice
            modifying your simulator gp:
              name: Modifying Your Simulator - Guided Practice
            collecting data gp:
              name: Collecting Data Guided Practice
            Haiku Bot:
              name: Haiku Bot
            End of Course Project:
              name: End of Course Project
            Outbreaklab:
              name: Outbreak Standalone Lab
            aboutme:
              name: Storytelling with Sprite Lab
          lesson_groups:
            Toolbox Levels:
              display_name: Toolbox Levels
            introduction:
              display_name: Introduction
              description: Explore projects created with Sprite Lab. Learn the basics of coding with sprites and events!
            lessonGroup-3:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
            outbreak:
              display_name: Outbreak Simulator
            Loom Levels:
              display_name: Loom Levels
            contagion:
              display_name: Contagion
            lesson group:
              display_name: Contagion-Guided-Practice
            haiku bot:
              display_name: Haiku Bot
            AB EOC:
              display_name: Course A and B EOC Project
            debugging:
              display_name: Debugging
            Argentina:
              display_name: Argentina
          title: Planning script for CI and CSF 2021
          description_audience: Internal
          description_short: Internal
          name: 2021drafting
          description: ''
          student_description: ''
        csd1-2021:
          title: Problem Solving and Computing ('21-'22)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing. \n\n**Implementation Guidance for Unit 1**\n- Unit 1 Chapter 1 should be completed before any other unit in CS Discoveries\n- Alternate lessons are provided for some lessons in Unit 1, depending on your classroom context\n- You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Storage:
              name: Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              name: Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              name: Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              name: Intro to Problem Solving - Paper Tower (Alternate Lesson 1)
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Animals Theme (Alternate Lesson 3)
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Games Theme (Alternate Lesson 3)
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
              big_questions: "* What strategies and processes can I use to become a more effective problem solver?"
              description: This chapter guides students to develop and adopt a more formal structured problem solving process by reflecting on problems they have problems they have encountered, both in the classroom and everyday life. By working through a diverse set of problems, such as logic puzzles, engineering challenges, and planning a trip, students learn to identify different classes of problems, decompose large problems, and develop their personal problem solving skills.
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
              big_questions: |-
                * How do computers help people to solve problems?
                * How do people and computers approach problems differently?
                * What does a computer need from people in order to solve problems effectively?
              description: This chapter presents computers as machines that solve information problems. Students begin by building a common definition for a computer that focuses on functionality instead of specific hardware. They then explore the ways that computers approach problems. For their final project, students propose an app that could be used to solve a problem of their choosing.
            csd1_3:
              display_name: Alternate Lessons
              description: 'This chapter provides alternate lessons for this unit.  '
          name: csd1-2021
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
        csd2-2021:
          title: Web Development ('21-'22)
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.   \n\n**Implementation Guidance for Unit 2**\n- Complete Unit 1 Chapter 1 before starting this unit\n- Guidance for how to support students in programming levels and differentiate tasks are available in the [Debugging Guide](https://docs.google.com/document/d/1-mXz53CAQ1dy3-RVGkoUnR0hfAwdWeza4kch6NAvLb8/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)\n- You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit"
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          lessons:
            Exploring Web Pages:
              name: Exploring Web Pages
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            'Mini-Project: HTML Web Page':
              name: 'Mini-Project: HTML Web Page'
            Digital Footprint:
              name: Digital Footprint
            Styling Text with CSS:
              name: Styling Text with CSS
            'Mini-Project: Your Personal Style':
              name: 'Mini-Project: Your Personal Style'
            Intellectual Property:
              name: Intellectual Property
            Using Images:
              name: Using Images
            'Websites for Expression ':
              name: Websites for Expression
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Your Web Page - Prepare:
              name: Your Web Page - Prepare
            Project - Personal Web Page:
              name: Project - Personal Web Page
            Websites for a Purpose:
              name: Websites for a Purpose
            Team Problem Solving:
              name: Team Problem Solving
            Sources and Research:
              name: Sources and Research
            CSS Classes:
              name: CSS Classes
            Planning a Multi-page Website:
              name: Planning a Multi-Page Site
            Linking Pages:
              name: Linking Pages
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            lesson-1:
              name: CS Discoveries Post-Course Survey
          lesson_groups:
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
              big_questions: |-
                * Why do people create websites?
                * How can text communicate content, structure, and style on a web page?
                * How do I safely and appropriately make use of the content published on the Internet?
                * What strategies can I use when coding to find and fix issues?
              description: Students use computing as a form of self expression as they design and develop basic web pages.   Focusing on the tags, keywords, and syntax used to communicate instructions to the computer, students use HTML to structure the content of a web page. They also explore the privacy and intellectual property implications of publishing their work online.
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
              big_questions: |-
                * How can websites be used to address problems in the world?
                * What strategies can teams use to work better together?
                * How do I know what information can be trusted online?
              description: Students expand their ideas of websites beyond personal expression and begin to see them as a way to solve problems.  Students build on their collaborative skills and work in teams to create multi-page websites that solve a problem.
            cspSurvey:
              display_name: Survey
          name: csd2-2021
          student_description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
        csd3-2021:
          title: Interactive Animations and Games ('21-'22)
          description: |2-
             In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program.

            **Implementation Guidance for Unit 3**
            - Complete Unit 1 Chapter 1 before starting this unit
            - Chapter 1 of this unit is a pre-requisite for Unit 6
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Debugging Guide](https://docs.google.com/document/d/1-mXz53CAQ1dy3-RVGkoUnR0hfAwdWeza4kch6NAvLb8/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Parameters:
              name: Shapes and Parameters
            Variables:
              name: Variables
            Random Numbers:
              name: Random Numbers
            Sprites:
              name: Sprites
            Sprite Properties:
              name: Sprite Properties
            Text:
              name: Text
            'Mini-Project: Captioned Scenes':
              name: Mini-Project - Captioned Scenes
            The Draw Loop:
              name: The Draw Loop
            Sprite Movement:
              name: Sprite Movement
            'Mini-Project: Animation':
              name: Mini-Project - Animation
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Mouse Input:
              name: Mouse Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            'Mini-Project: Side Scroller':
              name: Mini-Project - Side Scroller
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            'Mini-Project: Flyer Game':
              name: Mini-Project - Flyer Game
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            lesson-1:
              name: CS Discoveries Post-Course Survey
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
              big_questions: |
                * What is a computer program?
                * What are the core features of most programming languages?
                * How does programming enable creativity and individual expression?
                * What practices and strategies will help me as I write programs?
              description: Students build up toward programming interactive animations in the Game Lab environment.  They begin with simple shapes and sprite objects, then use loops to create flipbook style animations.  Next, they learn to use booleans and conditionals to respond to user input.  At the end of the chapter, students design and create an interactive animation that they can share with the world.
            csd3_2:
              display_name: 'Chapter 2: Building Games'
              big_questions: |-
                * How do software developers manage complexity and scale?
                * How can programs be organized so that common problems only need to be solved once?
                * How can I build on previous solutions to create even more complex behavior?
              description: In this chapter students combine the constructs that they learned in the first chapter to program more complex movement and collisions in their sprites.  As they create more complex programs, they begin to use functions to organize their code.  In the end, students use a design process to create an original game.
            cspSurvey:
              display_name: Survey
          name: csd3-2021
          student_description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
        csd4-2021:
          title: The Design Process ('21-'22)
          description: |-
            Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.

            **Implementation Guidance for Unit 4**
            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit is a pre-requisite for Unit 6 and Unit 7
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) and [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information about this unit
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lessons:
            Analysis of Design:
              name: Designing With Empathy
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Build a Paper Prototype
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Design Mode in App Lab
            Linking Screens:
              name: Linking Prototype Screens
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            Project - App Presentation:
              name: Project - App Presentation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            User-Centered Design 1:
              name: User Centered Design   Define and Prepare
            User-Centered Design 2:
              name: User Centered Design   Try and Reflect
            Exploring UI Elements:
              name: Exploring UI Elements
            Build a Digital Prototype:
              name: Build a Digital Prototype
            Events In AppLab:
              name: Events in AppLab
            Bugs and Features:
              name: Bugs and Features
            Updating Your Prototype:
              name: Updating Your Prototype
            Build a Paper Prototype:
              name: Build a Paper Prototype
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
              big_questions: |-
                * How do designers identify the needs of their user?
                * How can we ensure that a user's needs are met by our designs?
                * What processes will best allow us to efficiently create, test, and iterate upon our designs?
              description: This chapter introduces the design process as a specific version of the problem solving process in which empathy for a user's needs is consistently integrated. Students learn strategies for identifying user needs and assessing how well different designs address them. In particular they learn how to develop a paper prototype, how to gather and respond to feedback about a prototype, and consider ways different user interfaces do or do not affect the usability of their apps.
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
              big_questions: |-
                * How do teams effectively work together to develop software?
                * What roles beyond programming are necessary to design and develop software?
                * How do designers incorporate feedback into multiple iterations of a product?
              description: This chapter is focused on a long running group project that allows students to apply all they've learned about User-Centered Design to develop an app prototype.  Working in teams, students identify a social issue that they care about and design and prototype an app to address that issue.  This is an opportunity for students to explore other roles in software development, such as product management, marketing, design, and testing.
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd4-2021
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-2021:
          title: Data and Society ('21-'22)
          description: |-
            Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.

            **Implementation Guidance for Unit 5**
            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit could be swapped out with Unit 7 - see the [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information on this option
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) for more information about this unit
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            Keeping Data Secret:
              name: Keeping Data Secret
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Structuring Data:
              name: Structuring Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Project - Make a Recommendation:
              name: Project - Make a Recommendation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Data and Machine Learning:
              name: Data and Machine Learning
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
              big_questions: |
                * Why is representation important in problem solving?
                * What features does a representation system need to be useful?
                * What is necessary to create usable binary representation systems?
                * How can we combine systems together to get more complex information?
              description: This chapter focuses on data representation and its role in solving information problems.  Students learn what a representation system needs to be useful, and how computers are able to represent different types of information using binary systems.  For the chapter project, students represent their perfect day in a binary punch card and trade with classmates to decipher.
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
              big_questions: |-
                * How does data help us to solve problems?
                * How do computers and humans use data differently?
                * What parts of the data problem solving process can be automated?
                * What kinds of problems do computers use data to solve in the real world?
              description: Students explore how data can be used to answer interesting questions and solve problems.  Using a modified version of the general Problem Solving Process, students look at how computers and humans use data differently and the pros and cons of automating problem solving.  After learning ways that computers use data in the real world, students choose their own problem and use data to address it.
            cspSurvey:
              display_name: Survey
          name: csd5-2021
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        csd6-2021:
          title: Physical Computing ('21-'22)
          description: |-
            Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.

            **Implementation Guidance for Unit 6**
            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit assumes students have completed Unit 3 Chapter 1 and all of Unit 4. Students without this background may struggle in this unit.
            - This unit requires students to have access to Circuit Playground's - [click here](https://code.org/circuitplayground) for more information about using Circuit Playground's in your classroom
            - This unit could be swapped out with Unit 7 - see the [Implementation Guide](https://docs.google.com/document/d/1u-eIlB2cAwMuSckzbMWkteQIcsXgez7FTrbjP8PBB4o/preview) for more information on this option
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Debugging Guide](https://docs.google.com/document/d/1-mXz53CAQ1dy3-RVGkoUnR0hfAwdWeza4kch6NAvLb8/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) for more information about this unit
          description_short: Learn to program with physical devices.
          description_audience: ''
          lessons:
            Innovations in Computing:
              name: Innovations in Computing
            Designing Screens with Code:
              name: Designing Screens with Code
            The Circuit Playground:
              name: The Circuit Playground
            Input Unplugged:
              name: Input Unplugged
            Board Events:
              name: Board Events
            Getting Properties:
              name: Getting Properties
            Analog Input:
              name: Analog Input
            The Program Design Process:
              name: The Program Design Process
            'Project: Make a Game':
              name: Project - Make a Game
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Making Music:
              name: Making Music
            Arrays and For Loops:
              name: Arrays and For Loops
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: Functions with Parameters
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation':
              name: Project - Prototype an Innovation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          lesson_groups:
            csd6_1:
              display_name: 'Chapter 1: Programming with Hardware'
              big_questions: |-
                * How does software interact with hardware?
                * How can computers sense and respond to their environment?
                * What kind of information can be communicated with simple hardware outputs?
              description: This unit begins with an activity that encourages students to explore a wide variety of non-traditional computing platforms, before kicking off a review of programming in App Lab, with a particular focus on better understanding the event-driven programming model that was first introduced in Unit 4. Students learn techniques to make the apps they write more flexible by modifying design elements through code instead of always relying on design mode. Using the Circuit Playground, they then explore different approaches to taking input and producing output using hardware. By the end of this chapter, students will design a develop a game that uses physical hardware for input and output.
            csd6_2:
              display_name: 'Chapter 2: Building Physical Prototypes'
              big_questions: |-
                * How do programmers work with larger amounts of similar values?
                * How can complex real-world information be represented in code?
                * How can simple hardware be used to develop innovative new products?
              description: With an understanding of how to use hardware to take input and produce output, students move to thinking about more complex programs that integrate hardware and software. Using the color LEDs as an example of a a group of like objects, students learn how to use arrays to keep track of lists of values. From there we introduce the for loop, first simply as a way to repeat a block of code, and then as a way to run code on each element of an array. By the end of this chapter students will have explored all components of their boards while learning to structure their code using arrays, loops, and parametric functions. In the final two lessons students have an opportunity to dig into building physical prototypes using their boards.
            cspSurvey:
              display_name: Survey
          name: csd6-2021
          student_description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csp1-2021:
          title: Digital Information ('21-'22)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description_audience: ''
          lessons:
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Welcome to CSP:
              name: Welcome to CSP
            Representing Information:
              name: Representing Information
            Circle Square Patterns:
              name: Circle Square Patterns
            Binary Numbers:
              name: Binary Numbers
            Overflow and Rounding:
              name: Overflow and Rounding
            Representing Text:
              name: Representing Text
            Black and White Images:
              name: Black and White Images
            Color Images:
              name: Color Images
            Lossless Compression:
              name: Lossless Compression
            Lossy Compression:
              name: Lossy Compression
            Intellectual Property:
              name: Intellectual Property
            Project - Digital Information Dilemmas Part 1:
              name: Project   Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              name: Project   Digital Information Dilemmas Part 2
            'Lesson 14: Assessment Day':
              name: Assessment Day
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
              description: |-
                ### Unit Philosophy and Pedagogy


                * **Establishing a Strong Classroom Culture:** This unit is designed to be hands-on, collaborative, and exploratory. A major focus of the unit is building a positive classroom culture in which students work together, explore problems, and communicate about their thinking. Most lessons either feature physical manipulatives or a digital widget, and the bulk of lesson time should be spent with students exploring these tools together to develop an understanding of the concepts they highlight. The course intentionally does not start with programming since, in many classrooms, some students have experience with programming and others do not. Choosing to begin with digital information and the internet lets you build community in the room while exploring a topic that is likely to be accessible to all students. The supportive and inclusive classroom environment built in this unit should help set a positive tone that can be carried through the school year.


                * **Empowering "Deciders":**  An important goal of the course is not merely to teach students technical knowledge, but to put those skills to work in meaningful ways. This unit builds towards the unit project, which provides an opportunity for students to be "deciders" about the impacts of computing on modern life. Other units will emphasize empowering units as "creators."

                ### Major Assessment and Projects

                The unit project asks students to consider and debate issues that arise in modern society due to the digitizing of information. Students will analyze an article that addresses the intersection of digitizing information and current events. They will evaluate what data is being digitized and evaluate the benefits and harms caused by making this information digital. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit and its associated project help build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * DAT-1: The way a computer represents data internally is different from the way the data is interpreted and displayed for the user. Programs are used to translate data into a representation more easily understood by people.
                * IOC-1: while computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 2.1 Binary Numbers
                * 2.2 Data Compression
                * 5.5 Legal and Ethical Concerns.
          name: csp1-2021
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
        csp2-2021:
          title: The Internet ('21-'22)
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          description_short: Build the internet from the ground up using the Internet Simulator.
          description_audience: ''
          lessons:
            Welcome to the Internet:
              name: Welcome to the Internet
            Building a Network:
              name: Building a Network
            The Need for Addressing:
              name: The Need for Addressing
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets:
              name: Packets
            DNS and HTTP:
              name: HTTP and DNS
            Project - Internet Dilemmas Part 1:
              name: Project   Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              name: Project   Internet Dilemmas Part 2
            'Lesson 9: Assessment Day':
              name: Assessment Day
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
              description: "### Unit Philosophy and Pedagogy\n\n* **Inventing the Internet with the Internet Simulator:** This unit features many different versions of the Internet Simulator, a digital widget that simulates how different features or \"layers\" of the Internet work. As students move from lesson to lesson, the version of the Internet Simulator they use will have slightly more functionality than the last. Lessons will present students with challenges that closely mimic those that the internet's original inventors needed to solve. Students will collaboratively design and test solutions to those problems to develop an intuitive understanding of how the internet works and why it was designed that way. By the end of the unit, students will have \"invented the internet\" themselves! \n\n* **Continuing to Establish a Strong Classroom Culture:** Much like the Digital Information unit that comes before it, this unit emphasizes collaborative problem solving and developing a supportive and inclusive classroom culture. \n\n### Major Assessment and Projects\n\nThe unit project asks students to design a policy position for an imaginary political candidate related to an \"Internet Dilemma.\" Students must analyze news stories about their topic to identify impacted groups, explain those groups' interests, explain technical background about the dilemma, and then recommend a policy solution that the candidate should advocate for. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and its associated project help build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the \"Standards\" page for this unit.\n\n* CSN-1: that computer systems and networks facilitate how data are transferred\n* IOC-1: and that while computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 4.1 The Internet\n* 4.2 Fault Tolerance\n* 5.2 Digital Divide"
            lessonGroup-2:
              display_name: Survey
              big_questions: Big question
              description: helllo
          name: csp2-2021
          student_description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
        csp3-2021:
          title: Intro to App Design ('21-'22)
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description_audience: ''
          lessons:
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            Project - Designing an App Part 1:
              name: Project   Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project   Designing an App Part 2
            The Need for Programming Languages:
              name: The Need for Programming Languages
            Intro to Programming:
              name: Intro to Programming
            Debugging:
              name: Debugging
            Project - Designing an App Part 3:
              name: Project   Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project   Designing an App Part 4
            Project - Designing an App Part 5:
              name: Project   Designing an App Part 5
            'Lesson 11: Assessment Day':
              name: Assessment Day
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
              description: "### Unit Philosophy and Pedagogy\n\n\n* **New Topics, Same Classroom Culture:** This unit is students' first experience with programming. It is designed to maintain the collaborative and inclusive classroom environment developed in the previous two units. The collaborative project, fun, unplugged activities, and the focus on experimenting should help keep your whole class working together and trying out ideas. \n\n* **Emphasizing Skills:** Since this is the first of many programming units, it emphasizes attitudes and skills that will serve your students well for the remainder of the year. The project that runs through this unit emphasizes that programming is a creative and collaborative endeavor that students can use to help others. Key practices like pair programming and debugging help normalize working with a partner, asking for help, and making mistakes. While students have a lot to learn about programming and App Lab, there is just as much emphasis on establishing these positive habits and mindsets. \n\n* **Empowering \"Creators\":** This unit empowers students to be creators with a major emphasis on making personally meaningful apps. Students have a lot to learn about programming. Still, the goal is for students to come away from this unit, seeing programming as a powerful form of personal expression that allows them to draw on their innate talents and interests to help solve problems in their community.\n\n### Major Assessment and Projects\n\nThe unit project asks students to collaborate with a classmate to design an app that can teach others about a topic of shared interest. Students practice interviewing classmates to identify the project's goals, mockup designs, collaboratively program the app and run simple user tests. The app itself must include at least three screens and demonstrate what students have learned about user interface design and event-driven programming. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the \"Standards\" page for this unit.\n\n* CRD-1: incorporating multiple perspectives through collaboration improves computing innovations as they are developed.\n* CRD-2: developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.\n* AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.\n* AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 1.1 Collaboration\n* 1.2 Program Function and Purpose\n* 1.3 Program Design and Development\n\nThe College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.\n\n* 3.a.i.\n* 3.a.ii.\n* 3.a.iii\n"
          name: csp3-2021
          student_description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
        csp4-2021:
          title: Variables, Conditionals, and Functions ('21-'22)
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description_audience: ''
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditional Make:
              name: Conditionals Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Project - Decision Maker App Part 1:
              name: Project   Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              name: Project   Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              name: Project   Decision Maker App Part 3
            'Lesson 15: Assessment Day':
              name: Assessment Day
          lesson_groups:
            csp_variables:
              display_name: Variables
              description: |-
                ### Unit Philosophy and Pedagogy


                * **Intro to EIPM:** This unit is students' first experience with the Explore, Investigate, Practice, Make lesson sequence, or EIPM. This structured approach to teaching programming is covered in detail in the curriculum guide. We highly recommend watching the [accompanying video series](https://www.youtube.com/playlist?list=PLzdnOPI1iJNeqEl6MN7c2KyM3gdBSo8t3) to better understand what EIPM should look like in the classroom. When used effectively, it supports deep learning of content and helps maintain a collaborative classroom culture, even as you move into more complex programming concepts.

                * **Scaffolding Towards Independent Projects:** A major goal of this course is to empower students to design and build projects independently. The Create PT in Unit 8 offers students enormous freedom to scope and build projects, and even this unit begins scaffolding towards that goal. Individual EIPM sequences of lessons gradually prepare students for scoped, independent Make projects. The unit project has a few requirements, but students are largely free to choose the design, topic, and implementation of their ideas. As you teach the unit, look for the opportunities to scaffold the skills and knowledge students will need to creatively and independently tackle the unit project.


                ### Major Assessment and Projects

                The unit project asks students to design an app that makes a recommendation based on information from user input. Students are given a great deal of freedom to choose their topic, design their user interface, and decide how to actually program their app's behavior. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.
                * AAP-1: To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.
                * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
                * AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 1.4 Identifying and Correcting Errors
                * 3.1 Variables and Assignment
                * 3.3 Mathematical Expressions
                * 3.5 Boolean Expressions
                * 3.6 Conditionals
                * 3.7 Nested Conditionals
                * 3.15 Random Values

                The College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.

                * 3.a.i.
                * 3.a.ii.
                * 3.a.iii
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          name: csp4-2021
          student_description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
        csp5-2021:
          title: Lists, Loops, and Traversals ('21-'22)
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description_audience: ''
          lessons:
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Lists Practice:
              name: Lists Practice
            Lists Make:
              name: Lists Make
            Loops Explore:
              name: Loops Explore
            Loops Investigate:
              name: Loops Investigate
            Loops Practice:
              name: Loops Practice
            Loops Make:
              name: Loops Make
            Traversals Explore:
              name: Traversals Explore
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Semester Hackathon Part 1:
              name: Project   Hackathon Part 1
            Semester Hackathon Part 2:
              name: Project   Hackathon Part 2
            Semester Hackathon Part 3:
              name: Project   Hackathon Part 3
            Semester Hackathon Part 4:
              name: Project   Hackathon Part 4
            Semester Hackathon Part 5:
              name: Project   Hackathon Part 5
            'Lesson 18: Assessment Day':
              name: Assessment Day
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_lists:
              display_name: Lists
              description: |-
                ### Unit Philosophy and Pedagogy

                * **Independent Creation and The Hackathon Project:** Much like the project in Unit 4, the "Hackathon" project in this unit is designed as an opportunity for students to creatively and independently build something with their programming skills. While students are asked to include some technical requirements in their program to ensure they demonstrate mastery of new programming concepts, they have free rein to choose the goals, design, and implementation of their project. To avoid asking students to complete a major programming project right before the Create PT, this hackathon is the most "Create-PT-like" project of the course. It is the best chance for students to practice skills like budgeting time or scoping an open-ended project. In many classrooms, if you maintain the recommended pacing of the course, this project serves as an excellent end to the first semester.

                * **Growing Comfort with EIPM:** By Unit 5, students (and teachers!) should be developing greater comfort with the flow of EIPM lessons. Students may begin to anticipate that sequences build towards an independent Make lesson or look forward to stepping away from computers to Explore. A nice feature of EIPM is that you will find strategies and modifications to each lesson type that work best for your students. Keep an eye out for how you and your students are developing comfort with EIPM and note strategies that help meet your classroom's needs.

                * **Programming with Real-world Data:** The Data Library is a new feature in App Lab for the 2020-21 school year and was designed to let students program with data from the real world. This tool aims to motivate students to build new kinds of data-powered apps that they find personally interesting. This tool also facilitates programming with lists of information since students will need to manipulate lists of data to incorporate the different data sources. Encourage students to use datasets they find personally relevant as they draw on their creative ideas for bringing data to life.



                ### Major Assessment and Projects

                The unit project asks students to spend five days as part of a "Hackathon" project that they have nearly complete independence to scope and design. Students must choose one dataset from the Data Library in AppLab to be a component of their project to demonstrate what they have learned about lists and list processing; otherwise, scoping the project is completely up to them. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * CRD-2: Developers create and innovate using an iterative design process that is user-focused, incorporating implementation/feedback cycles, which leaves ample room for experimentation and risk-taking.
                * AAP-1: To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.
                * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
                * AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that they can reuse. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and more confidently.

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 3.2 Data Abstraction
                * 3.4 Strings
                * 3.8 Iteration
                * 3.10 Lists
                * 3.16 Simulations

                The College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.

                * 3.b.i
                * 3.b.ii
                * 3.b.iii
                * 3.b.iv
                * 3.b.v
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            lessonGroup-5:
              display_name: Post-Course Survey
          name: csp5-2021
          student_description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
        csp6-2021:
          title: Algorithms ('21-'22)
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description_audience: ''
          lessons:
            Algorithms Solve Problems:
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              name: Algorithm Efficiency
            Unreasonable Time:
              name: Unreasonable Time
            The Limits of Algorithms:
              name: The Limits of Algorithms
            Parallel and Distributed Algorithms:
              name: Parallel and Distributed Algorithms
            'Lesson 6: Assessment Day':
              name: Assessment Day
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit6_2020:
              display_name: Algorithms
              description: |-
                ### Unit Philosophy and Pedagogy


                * **A Break from Programming:** This unit is intentionally designed as a short respite from programming. After three units and a major hackathon project, it is a great opportunity to get away from screens for a while before the final programming push that leads to the Create PT.

                * **Just Enough Math:** This unit includes some mathematical concepts which enrich students' understanding of how algorithms are analyzed, which might at first be a little intimidating to some students (and teachers!). The mathematical topics included in this unit are only those necessary to provide a solid foundation in algorithmic analysis to the depth described in the CS Principles framework. If you are a teacher with a strong mathematical background, check carefully that you do not needlessly add complexity to a unit that might already prove challenging for some students. All teachers should keep an eye out for the ways visuals, hands-on examples, and patterns in presentation style are used to ensure a consistent presentation of these mathematical topics.


                ### Major Assessment and Projects

                This unit does not conclude with a major project. Students will complete an end-of-unit assessment that is aligned with CS Principles framework objectives covered in this unit.

                ### AP Connections

                This unit helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the "Standards" page for this unit.

                * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
                * AAP-4: There exist problems that computers cannot solve, and even when a computer can solve a problem, it may not be able to do so in a reasonable amount of time.
                * CSN-2: Parallel and distributed computing leverage multiple computers to more quickly solve complex problems or process large data sets.

                This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).

                * 3.9 Developing Algorithms
                * 3.11 Binary Search
                * 3.17 Algorithmic Efficiency
                * 3.18 Undecidable Problems
                * 4.3 Parallel and Distributed Computing
            lessonGroup-2:
              display_name: Post-Course Survey
          name: csp6-2021
          student_description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
        csp7-2021:
          title: Parameters, Return, and Libraries ('21-'22)
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description_audience: ''
          lessons:
            Parameters and Return Explore:
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              name: Parameters and Return Practice
            Parameters and Return Make:
              name: Parameters and Return Make
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Practice:
              name: Libraries Practice
            Project - Make a Library Part 1:
              name: Project   Make a Library Part 1
            Project - Make a Library Part 2:
              name: Project   Make a Library Part 2
            Project - Make a Library Part 3:
              name: Project   Make a Library Part 3
            'Lesson 11: Assessment Day':
              name: Assessment Day
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
              description: "### Unit Philosophy and Pedagogy\n\n* **Learning by Building Libraries:** In the second EIPM sequence of this unit, students learn to use the Student-Create Libraries tool in App Lab. This tool allows them to build and share libraries of functions that they can use in many different projects. This tool serves many purposes besides simply teaching students about libraries. By having to write functions that other students find useful, they will need to think about common patterns or situations that they have seen in projects across the course. Students will also practice commenting their code so others can understand how it works, practice designing functions that use parameters and return.  \n\n* **Final Preparation for the Create PT:** Students learn very few new concepts in this unit; nevertheless, it can be challenging because students need to learn how to integrate the ideas of parameters and return with every other concept they have learned in this course. This unit presents a good opportunity to do a final review of every programming construct covered in the course as students prepare to demonstrate what they've learned on the Create PT.\n\n### Major Assessment and Projects\n\nThe unit project asks students to design a library of functions that they can share with classmates. Their library must contain at least two functions, and at least one of those functions must include a parameter, return, a loop, and an if-statement. This requirement ensures students practice skills they willll use in the Create PT. Using a project guide, students choose a theme for their library, build it, test it, and exchange feedback with other students. Students submit their library code, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. They will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs, please see the \"Standards\" page for this unit.\n\n* CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.\n* AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.\n* AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 3.12 Calling Procedures\n* 3.13 Developing Procedures\n* 3.14 Libraries\n\nThe College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.\n\n* 3.c.i\n* 3.c.ii\n* 3.c.iii\n* 3.c.iv\n* 3.d.i\n* 3.d.ii\n* 3.d.iii"
            csp_libraries:
              display_name: Libraries
            lessonGroup-3:
              display_name: Survey
          name: csp7-2021
          student_description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
        csp8-2021:
          title: Create PT Prep ('21-'22)
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          description_short: Practice and complete the Create Performance Task (PT).
          description_audience: ''
          lessons:
            Create PT - Review the Task:
              name: Create PT   Review the Task
            Create PT - Make a Plan:
              name: Create PT   Make a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task (12 hrs)
            lesson-4:
              name: Create PT Deep Dive
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Create PT
            lessonGroup-3:
              display_name: Survey
          name: csp8-2021
          student_description: 'In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.

'
        csp9-2021:
          title: Data ('21-'22)
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description_audience: ''
          lessons:
            Learning From Data:
              name: Learning from Data
            Exploring One Column:
              name: Exploring One Column
            Filtering and Cleaning Data:
              name: Filtering and Cleaning Data
            Exploring Two Columns:
              name: Exploring Two Columns
            Big Data, Crowdsourcing, and Machine Learning:
              name: Big, Open, and Crowdsourced Data
            Machine Learning and Bias:
              name: Machine Learning
            Project - Tell a Data Story - Part 1:
              name: Project   Tell a Data Story Part 1
            Project - Tell a Data Story - Part 2:
              name: Project   Tell a Data Story Part 2
            'Lesson 9: Assessment Day':
              name: Assessment Day
            lesson-10:
              name: Algorithmic Bias
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
              description: "### Unit Philosophy and Pedagogy\n\n\n* **The Data Analysis Process:** This unit is built around a data analysis process that helps students break down how data is turned into new information about the world. Some lessons are designed around different steps of this process, like cleaning data or building visualizations. Other lessons focus on ways this process is applied in real-world contexts like citizen science or machine learning. The data analysis process helps provide a consistent reference point as students explore the importance of data analysis in computing. \n\n* **Exploring Data with the Data Visualizer:** The Data Visualizer is a tool built into App Lab that allows students to quickly create visualizations of the data they've added to their projects. The set of possible visualizations is intentionally limited to a few ways to change or modify the chart. This tool aims to encourage exploring the different kinds of questions that can be answered with data visualizations, with a greater emphasis on students' ability to create a variety of visualizations quickly.\n\n\n### Major Assessment and Projects\n\nStudents use the data visualizer to find and present a data story. Using what they've learned about the data analysis process, students either choose a dataset inside the data library or upload one of their own and create visualizations that find interesting patterns that may reveal new insights and knowledge. Students complete an activity guide describing their findings and the process they used in identifying them. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs please see the \"Standards\" page for this unit.\n\n* DAT-2: Programs can be used to process data, which allows users to discover information and create new knowledge.\n* IOC-1: While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences.\n\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 2.3 Extracting Information from Data\n* 2.4 Using Programs with Data\n* 5.3 Computing Bias\n* 5.4 Crowdsourcing"
            lessonGroup-2:
              display_name: Survey
          name: csp9-2021
          student_description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
        csp10-2021:
          title: Cybersecurity and Global Impacts ('21-'22)
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\n\n"
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description_audience: ''
          lessons:
            Project - Innovation Simulation Part 1:
              name: Project   Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              name: Project   Innovation Simulation Part 2
            Data Policies and Privacy:
              name: Data Policies and Privacy
            The Value of Privacy:
              name: The Value of Privacy
            Project - Innovation Simulation Part 3:
              name: Project   Innovation Simulation Part 3
            Security Risks Part 1:
              name: Security Risks Part 1
            Security Risks Part 2:
              name: Security Risks Part 2
            'Project: Innovation Simulation Part 4':
              name: Project   Innovation Simulation Part 4
            Protecting Data Part 1:
              name: Protecting Data Part 1
            Protecting Data Part 2:
              name: Protecting Data Part 2
            'Project: Innovation Simulation Part 5':
              name: Project   Innovation Simulation Part 5
            'Project: Innovation Simulation Part 6':
              name: Project   Innovation Simulation Part 6
            'Project: Innovation Simulation Part 7':
              name: Project   Innovation Simulation Part 7
            'Lesson 14: Unit Assessment Day':
              name: Assessment Day
            lesson-1:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
              description: "### Unit Philosophy and Pedagogy\n\n* **Learning Through Full-class Simulation:** The simulation project that runs through this unit serves several important goals. It helps contextualize what students are learning by moving from abstract ideas of privacy or security to concrete potential innovations. Since the simulation is based on modernizing schools, students can consider the consequences of computing innovations in a familiar setting. By taking on an assigned role and interacting with a group of teammates who have done the same, students must consider a breadth of interests and goals beyond their own when it comes to innovating in schools. \n\n* **Ending the Year as \"Deciders\":** A major theme students engage with throughout this unit is the need to consider both sides of technological innovation. Computing technology has led to both benefits and harms to culture, economy, and society at large. Responding to important questions facing our world requires understanding technology and an ability to identify and interpret the impacts it causes. This unit is not designed to advocate for any particular point of view on the impact of technology. Still, it should empower students to adeptly see and weigh the consequences of the technology around them. While the Create PT may feel like the most significant project of this course, the Explore Curricular requirement and the questions faced in this unit are arguably more crucial. Many of the young people who take CS Principles may pursue studies or careers in which they are \"creators\" with technology, but all of them will need to be thoughtful \"deciders\" in a world profoundly shaped by computing. \n\n\n### Major Assessment and Projects\n\nStudents complete the Future School Convention simulation throughout this unit. Working in teams of roughly five people, students are assigned a role and a set of interests they'll need to investigate. They research real-world innovations that could improve schools and align with the interests of their character. Throughout the unit, they are given opportunities to refine their proposals as a team and debate the benefits and risks of different computing innovations. Eventually, their team submits an overall proposal for the Future School, and all students vote for the team and innovation they believe to be the best. Students will also complete an end-of-unit assessment aligned with the CS Principles framework objectives covered in this unit.\n\n### AP Connections\n\nThis unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs please see the \"Standards\" page for this unit.\n\n* IOC-1: While computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences.\n* IOC-2: The use of computing innovations may involve risks to your personal safety and identity.\n\nThis unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).\n\n* 5.1 Beneficial and Harmful Effects\n* 5.6 Safe Computing"
            lessonGroup-2:
              display_name: Survey
          name: csp10-2021
          student_description: 'In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a "school of the future" conference in which you and a team make a proposal for how best to improve school life with computing innovations.

'
        coursea-2021:
          title: Course A (2021)
          description: 'Course A offers a computer science curriculum for beginning readers, including Kindergarten students. Students will learn to program using commands like loops and events. The lessons featured in this course also teach students to meaningfully collaborate with others, investigate different problem-solving techniques, persist in the face of challenging tasks, and learn about internet safety. '
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          lessons:
            Safety in My Online Neighborhood:
              name: Safety in My Online Neighborhood
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: Happy Maps
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming in Ice Age:
              name: Programming with Scrat
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            'Loops: Happy Loops':
              name: Happy Loops
            Loops in Ice Age:
              name: Loops with Scrat
            Loops in Collector:
              name: Loops with Laurel
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: 'Mini-Project: On the Move with Play Lab'
            lesson-1:
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            lessonGroup-5:
              display_name: End of Course Project
          name: coursea-2021
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        courseb-2021:
          title: Course B (2021)
          description: We developed Course B with first graders in mind. While the concepts in Course B parallel those in Course A, students learn more sophisticated unplugged activities and work through a greater variety of puzzles. Students will learn the basics of programming, collaboration techniques, investigation and critical thinking skills, persistence in the face of difficulty, and internet safety. At the end of this course, students create games in the Play Lab programming environment.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          lessons:
            Digital Trails:
              name: Digital Trails
            Move It, Move It:
              name: Move It, Move It
            Sequencing in Maze:
              name: Sequencing with Angry Birds
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
            'Loops: Getting Loopy':
              name: Getting Loopy
            Loops in Harvester:
              name: Loops with Harvester
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            The Right App:
              name: The Right App
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: 'Mini-Project: A Royal Battle with Events'
            lesson-1:
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
            lessonGroup-6:
              display_name: End of Course Project
              description: |2-


                ![](https://images.code.org/0c33f6c158290834562bf8a6a39769b5-flower.png)
          name: courseb-2021
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
        coursec-2021:
          title: Course C (2021)
          description: We developed Course C for students in second grade. Students will create programs with sequencing, loops, and events. They will investigate problem-solving techniques and develop strategies for building positive communities both online and offline. By the end of the course, students will create interactive games that they can share.
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          lessons:
            Putting a STOP to Online Meanness:
              name: Putting a STOP to Online Meanness
            Password Power-Up:
              name: Password Power-Up
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
            Programming in Maze:
              name: Programming with Angry Birds
            Debugging in Maze:
              name: Debugging in Maze
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            Binary Bracelets:
              name: Binary Bracelets
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Loops in Harvester:
              name: Harvesting Crops with Loops
            Looking Ahead:
              name: Looking Ahead with Minecraft
            Sticker Art with Loops:
              name: 'Mini-Project: Sticker Art'
            'Events: The Big Event':
              name: The Big Event
            Build a Flappy Game:
              name: Build a Flappy Game
            Events in Play Lab:
              name: 'Mini-Project: Chase Game'
            Picturing Data:
              name: Picturing Data
            'End of Course Project: Create a Play Lab Game':
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_binary:
              display_name: Binary
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          name: coursec-2021
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
        coursed-2021:
          title: Course D (2021)
          description: 'We created course D for students in third grade.  The course begins with a review of the concepts found in earlier courses, including loops and events. Afterward, students will develop their understanding of algorithms, nested loops, while loops, conditionals, and more. '
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          lessons:
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
            Relay Programming:
              name: Relay Programming
            Debugging in Collector:
              name: Debugging with Laurel
            Events in Bounce:
              name: Events in Bounce
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Dance Party:
              name: Dance Party
            Loops in Ice Age:
              name: Loops in Ice Age
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: If/Else with Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals & Loops in Harvester:
              name: Harvesting with Conditionals " "To be Deleted"
            'Unplugged: Binary':
              name: Binary Images
            Artist Binary:
              name: Binary Images with Artist
            Be A Super Digital Citizen:
              name: Be A Super Digital Citizen -- TO BE REMOVED
            End of Course Project:
              name: End of Course Project
            lesson-6:
              name: Looking Ahead with Minecraft
            lesson-5:
              name: Password Power-Up
            lesson-1:
              name: The Power of Words
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_binary:
              display_name: Binary
            csf_digcit:
              display_name: Digital Citizenship
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-6:
              display_name: Digital Citizenship
          name: coursed-2021
          student_description: Learn about loops, conditionals, and events. Beyond coding, learn about digital citizenship.
        coursee-2021:
          title: Course E (2021)
          description: We created Course E for students in fourth grade. The course begins with an introduction to the Sprite Lab programming tool. Students will learn to make fun, interactive projects that reinforce what they’ll learn about online safety. Following these lessons, students will engage in more complex coding. Students will learn about nested loops, functions, and conditionals. By the end of the course, students will combine these concepts to solve challenging puzzles. The course ends with an open-ended project where students create a game or drawing.
          description_short: Learn the basics of sprites, nested loops, and functions.
          description_audience: 'Ages: 8-12'
          lessons:
            Sequencing in the Maze:
              name: Sequencing in the Maze
            Programming and Loops with the Artist:
              name: Drawing with Loops
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals:
              name: Conditionals with the Farmer
            Simon Says:
              name: Follow the Algorithm
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Private and Personal Information:
              name: Private and Personal Information
            About Me:
              name: 'Mini-Project: About Me'
            Digital Sharing:
              name: Digital Sharing
            Nested Loops in Bee:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
            Nested Loops in Frozen:
              name: 'Mini-Project: Design a Snowflake'
            'Functions: Songwriting':
              name: Songwriting
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions in Harvester:
              name: Functions with Harvester
            Functions in Artist:
              name: Functions with Artist
            Designing for Accessibility:
              name: Designing for Accessibility
            End of Course Project:
              name: End of Course Project
            lesson-4:
              name: Be A Super Digital Citizen
            lesson-1:
              name: Designing for Accessibility
          lesson_groups:
            ramp_up:
              display_name: Nested Loops
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_nested_loops:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_impacts:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-8:
              display_name: Removed
            lessonGroup-7:
              display_name: Impacts of Computing
          name: coursee-2021
          student_description: Start coding with algorithms, events, loops, conditionals, and functions! By the end of this course, design and create a game or drawing that you can share with your friends and family.
        coursef-2021:
          title: Course F (2021)
          description: We created Course F for students in the fifth grade. The course begins by looking at how users make choices in the apps they use. Students then learn to make a variety of Sprite Lab apps that also offer choices for the user. In the later lessons in the course, students will learn more advanced concepts, including variables and “for” loops. Students are given greater autonomy and more choices throughout this course. By the end of the course, students will have created interactive projects and artwork to share with their friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          lessons:
            Functions in Minecraft:
              name: Functions in Minecraft
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Events with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Loops with the Artist:
              name: Drawing with Loops
            Nested Loops in the Maze:
              name: Programming with the Bee
            The Power of Words:
              name: The Power of Words
            Envelope Variables:
              name: Envelope Variables
            Variables as Constant in Artist:
              name: Variables with Artist
            Variables that Change in Bee:
              name: Variables with the Bee
            Variables that Change in Artist:
              name: Using Variables with the Artist
            Simulating Experiments:
              name: Simulating Experiments
            AI for Oceans:
              name: AI For Oceans
            Internet:
              name: The Internet
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            Editing Behaviors:
              name: Behaviors in Sprite Lab
            Virtual Pet:
              name: 'Mini-Project: Virtual Pet'
            End of Course Project:
              name: End of Course Project
            lesson-1:
              name: Designing for Accessibility
            lesson-6:
              name: Introducing Sprite Lab
            lesson-7:
              name: Making Sprites
            lesson-8:
              name: Sprites in Action
            lesson-9:
              name: Blank Space Stories
            lesson-10:
              name: Text and Prompts
            lesson-5:
              name: Outbreak
            lesson-2:
              name: The Power of Words
            lesson-11:
              name: 'Mini-Project: User Input Programs'
          lesson_groups:
            ramp_up:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            csf_variables:
              display_name: For Loops
            csf_data:
              display_name: Data and Simulations
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-8:
              display_name: Variables
            lessonGroup-9:
              display_name: remove
            lessonGroup-7:
              display_name: Digital Citizenship
          name: coursef-2021
          student_description: Learn to code with sprites, variables, and loops and discuss societal impacts of computing and the internet. By the end of this course, design and create a project you can share with friends and family.
        express-2021:
          title: Express Course (2021)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          lessons:
            Dance Party:
              name: Dance Party
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Debugging with Scrat:
              name: Debugging in Maze
            Collecting Treasure with Laurel:
              name: Collecting Treasure with Laurel
            Creating Art with Code:
              name: Creating Art with Code
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Sticker Art with Loops:
              name: 'Mini-Project: Sticker Art'
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Snowflakes with Anna and Elsa:
              name: Snowflakes with Anna and Elsa
            'Looking Ahead with Minecraft ':
              name: Looking Ahead with Minecraft
            If/Else with Bee:
              name: If/Else with Bee
            While Loops with the Farmer:
              name: While Loops in Farmer
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Until Loops in Maze:
              name: Until Loops in Maze
            Harvesting with Conditionals:
              name: Harvesting with Conditionals
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions with Harvester:
              name: Functions with Harvester
            Functions with Artist:
              name: Functions with Artist
            Variables with Artist:
              name: Using Variables with the Artist
            Changing Variables with Bee:
              name: Variables with the Bee
            Changing Variables with Artist:
              name: Changing Variables with Artist
            For Loops with Bee:
              name: For Loops with Bee
            For Loops with Artist:
              name: For Loops with Artist
            Swimming Fish in Sprite Lab:
              name: Swimming Fish in Sprite Lab
            Alien Dance Party:
              name: Alien Dance Party
            Behaviors in Sprite Lab:
              name: Behaviors in Sprite Lab
            Virtual Pet with Sprite Lab:
              name: Virtual Pet with Sprite Lab
            End of Course Project:
              name: End of Course Project
            lesson-1:
              name: Dance Party
            lesson-2:
              name: Making Sprites
            lesson-3:
              name: Sprites in Action
            lesson-4:
              name: Text and Prompts
          lesson_groups:
            csf_warmup:
              display_name: Warm Up
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            csf_sprites:
              display_name: Sprites
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-9:
              display_name: Events
          name: express-2021
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        pre-express-2021:
          title: Pre-reader Express (2021)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description_audience: 'Ages: 4-8'
          lessons:
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming in with Angry Birds:
              name: Programming with Angry Birds
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Programming in Harvester:
              name: Programming with Harvester
            Loops with Scrat:
              name: Loops with Scrat
            Loops with Laurel:
              name: Loops with Laurel
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            Drawing Gardens with Loops:
              name: Drawing Gardens with Loops
            On the Move with Events:
              name: On the Move with Events
            A Royal Battle with Events:
              name: A Royal Battle with Events
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          name: pre-express-2021
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        csf-2021-pilot:
          lessons:
            Introduction to Course F:
              name: Introduction to Course F
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Virus Simulation for Code Bytes:
              name: Coding a Simulation
            Course F Introduction:
              name: Introducing Sprite Lab
            lesson-1:
              name: Blank Space Stories - coming soon!
            lesson-2:
              name: Storing and Retrieving Text
            lesson-3:
              name: Create a Chat-Bot
            lesson-4:
              name: Counting with Variables
            lesson-5:
              name: Groups of Sprites
            lesson-6:
              name: Create a Collector Game
            Making Sprites:
              name: Making Sprites
            Sprites in Action:
              name: Sprites in Action
            variables-in-spritelab:
              name: Text and Prompts - coming soon!
            chatbot:
              name: User Input Apps - coming soon!
            blank space stories:
              name: Blank Space Stories
            texts-and-prompts:
              name: Text and Prompts
            introducing-spritelab:
              name: Introducing Sprite Lab
            blank-space-stories:
              name: Blank Space Stories
            user-input-programs:
              name: 'Mini-Project: User Input Programs'
          lesson_groups:
            ramp_up:
              display_name: Introduction
            outbreak:
              display_name: Outbreak Simulation
            introduction:
              display_name: Introduction to Sprite Lab
              description: Explore projects created with Sprite Lab. Learn the basics of coding with sprites and events!
            lessonGroup-3:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
            Sprites:
              display_name: Sprites
              description: Learn the basics of coding with sprites!
            variables:
              display_name: Variables
              description: Store values in variables and retrieve them later in your program. Modify the values stored in variables to create exciting interactive projects!
          name: csf-2021-pilot
          title: CS Fundamentals 2021 Pilot
          description_audience: Upper Elementary
          description_short: Learn about events, variables, and conditionals, and create your own animations, games, and simulations.
          description: "Learn to use events by programming in Sprite Lab. Investigate different design techniques and discuss societal impacts of computing. \n\n**Pilot 2021**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June, 2021 only."
          student_description: "Learn to use events by programming in Sprite Lab. Investigate different design techniques and discuss societal impacts of computing. \n\n**Pilot 2021**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June, 2021 only."
        csd4-preview-2021:
          title: CSD Unit 4 - The Design Process ('21-'22 Beta Preview)
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          lessons:
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: Paper Prototypes
            Prototype Testing:
              name: Prototype Testing
            Digital Design:
              name: Digital Design
            Linking Screens:
              name: Linking Screens
            Testing the App:
              name: Testing the App
            Improving and Iterating:
              name: Improving and Iterating
            Project - App Presentation:
              name: Project - App Presentation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Designing With Empathy:
              name: Designing With Empathy
            User-Centered Design - Define and Prepare:
              name: User-Centered Design - Define and Prepare
            User-Centered Design - Try and Reflect:
              name: User-Centered Design - Try and Reflect
            Exploring UI Elements:
              name: Exploring UI Elements
            Build a Paper Prototype:
              name: Build a Paper Prototype
            Digital Mode in App Lab:
              name: Design Mode in App Lab
            Build a Digital Prototype:
              name: Build a Digital Prototype
            Events in App Lab:
              name: Events in App Lab
            Linking Prototype Screens:
              name: Linking Prototype Screens
            Bugs and Features:
              name: Bugs and Features
            Updating Your Prototype:
              name: Updating Your Prototype
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
            csdSurvey:
              display_name: Survey
          name: csd4-preview-2021
          student_description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
        csd5-preview-2021:
          title: CSD Unit 5 - Data and Society ('21-'22 Beta Preview)
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            Keeping Data Secret:
              name: Keeping Data Secret
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Structuring Data:
              name: Structuring Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Interpreting Data:
              name: Interpreting Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Project - Make a Recommendation:
              name: Project - Make a Recommendation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post Course survey:
              name: CS Discoveries Post Course survey
            Data and Machine Learning:
              name: Data and Machine Learning
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          name: csd5-preview-2021
          student_description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
        testtess:
          lessons:
            new lesson:
              name: lesson display name
            lesson-2:
              name: new lesson 1
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: testtess
          title: ''
          description_audience: ''
          description_short: ''
          description: |-
            I get the error only when trying to add this markdown chunk.
             ### Unit Philosophy and Pedagogy
            * **Intro to EIPM:** This unit is students' first experience with the Explore, Investigate, Practice, Make lesson sequence, or EIPM. This structured approach to teaching programming is covered in detail in the curriculum guide and we highly recommend that you watch the [accompanying video series](https://www.youtube.com/playlist?list=PLzdnOPI1iJNeqEl6MN7c2KyM3gdBSo8t3) to better understand what EIPM should look like in the classroom. When used effectively, it supports deep learning of content and helps maintain a collaborative classroom culture, even as you move into more complex programming concepts.
            * **Scaffolding Towards Independent Projects:** A major goal of this course is to empower students to design and build projects independently. The Create PT in Unit 8 offers students enormous freedoms to scope and build projects, and even this unit begins scaffolding towards that goal. Individual EIPM sequences of lessons gradually prepare students for scoped, independent Make projects. The unit project has a few requirements, but students are largely free to choose the design, topic, and implementation of their ideas. As you teach the unit, look for the opportunities to scaffold the skills and knowledge students will need to creatively and independently tackle the unit project.
            ### Major Assessment and Projects
            The unit project asks students to design an app that makes a recommendation based on input information from the user. Students are given a great deal of freedom to choose their topic, design their user interface, and decide how to actually program their app's behavior. Students submit their app, project guide, and written responses to reflection questions about how the app is designed and the development process they used to make it. Students will also complete an end-of-unit assessment aligned with CS Principles framework objectives covered in this unit.
            ### AP Connections
            This unit and unit project helps build towards the enduring understandings listed below. For a detailed mapping of units to Learning Objectives and EKs please see the "Standards" page for this unit.
            * CRD-2: Developers create and innovate using an iterative design process that is user-focused, that incorporates implementation/feedback cycles, and that leaves ample room for experimentation and risk-taking.
            * AAP-1: To find specific solutions to generalizable problems, programmers represent and organize data in multiple ways.
            * AAP-2: The way statements are sequenced and combined in a program determines the computed result. Programs incorporate iteration and selection constructs to represent repetition and make decisions to handle varied input values.
            * AAP-3: Programmers break down problems into smaller and more manageable pieces. By creating procedures and leveraging parameters, programmers generalize processes that can be reused. Procedures allow programmers to draw upon existing code that has already been tested, allowing them to write programs more quickly and with more confidence.
            This unit includes content from the following topics from the AP CS Principles Framework. For more detailed information on topic coverage in the course review [Code.org CSP Topic Coverage](https://docs.google.com/document/d/1dqYF5u0AULjw049gaCwAP34ZSe0VuEWbAjWoH1-YMW0/edit?usp=sharing).
            * 1.4 Identifying and Correcting Errors
            * 3.1 Variables and Assignment
            * 3.3 Mathematical Expressions
            * 3.5 Boolean Expressions
            * 3.6 Conditionals
            * 3.7 Nested Conditionals
            * 3.15 Random Values
            The College Board has supplied formative Create PT questions to help prepare students to complete the Create Task. We recommend that students complete the following prompts with the unit project. More information can be found in Code.org CS Principles Topic Coverage.
            * 3.a.i.
            * 3.a.ii.
            * 3.a.iii
          student_description: ''
        contagion-pilot:
          lessons:
            new lesson:
              name: lesson display name
            how things spread:
              name: How Things Spread
            contagion simulator setup:
              name: Contagion Simulator Setup
            sometimes but not always:
              name: Sometimes, but Not Always
            modifying your model:
              name: Modifying Your model
            telling a data story:
              name: Telling a Data Story
            how things spread gp:
              name: How Things Spread  - Guided Practice
            contagion simulator gp:
              name: Contagion Simulator - Guided Practice
            sometimes not always gp:
              name: Sometimes, Not Always - Practice
            modifying your simulator gp:
              name: Modifying Your Simulator - Guided Practice
            collecting data gp:
              name: Collecting Data Guided Practice
            Haiku Bot:
              name: Haiku Bot
          lesson_groups:
            lesson group:
              display_name: Contagion-Guided-Practice
            contagion:
              display_name: Contagion
            haiku bot:
              display_name: Haiku Bot
          name: contagion-pilot
          title: 'Contagion Simulator '
          description_audience: Grade 5
          description_short: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
          student_description: 'Use Sprite Lab to program a simulation out of a virus outbreak. '
        contagion-guided-practice:
          lessons:
            how things spread gp:
              name: How Things Spread  - Guided Practice
            contagion simulator gp:
              name: Contagion Simulator - Guided Practice
            sometimes not always gp:
              name: Sometimes, Not Always - Practice
            modifying your simulator gp:
              name: Modifying Your Simulator - Guided Practice
            collecting data gp:
              name: Collecting Data Guided Practice
          lesson_groups:
            lesson group:
              display_name: Contagion-Guided-Practice
          name: contagion-guided-practice
          title: Contagion Guided Practice [Teacher only]
          description_audience: 5th grade
          description_short: These levels are for teachers to use when demonstrating CS and science concepts in the Contagion Simulator levels
          description: These levels are for teachers to use when demonstrating CS and science concepts in the Contagion Simulator levels
          student_description: ''
        ai-unit-pilot:
          lessons:
            new lesson:
              name: lesson display name
            intro:
              name: Lesson 1
            lesson1:
              name: Introduction to Machine Learning
            lesson2:
              name: How Computers Learn
            lesson3:
              name: Patterns in Data
            lesson4:
              name: Classification with Machine Learning
            lesson5:
              name: Training a Model with Features
            lesson6:
              name: Importing a Model in App Lab
            lesson7:
              name: The Need for Model Cards
            lesson8:
              name: Numerical Data in AI Lab
            lesson9:
              name: Regression With Machine Learning
            lesson10:
              name: Using Model Cards in App Lab
            lesson11:
              name: Customizing Your App
            lesson12:
              name: Making Data Decisions
            lesson13:
              name: AI for Social Good (Unplugged)
            lesson14:
              name: AI Code of Ethics (Unplugged)
            lesson15:
              name: Planning Your App
            lesson16:
              name: 'Project: App with Real-World Data'
            lesson17:
              name: Planning Your App
            lesson18:
              name: 'Project: App with Real-World Data'
            lesson19:
              name: 'Project: App with Real-World Data'
            lesson20:
              name: TEMP LEVELS - DELETE LATER
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: ai-unit-pilot
          title: AI Unit Pilot
          description_audience: ''
          description_short: Pilot for AI Unit in CSD
          description: ''
          student_description: ''
        teststandard:
          lessons: {}
          lesson_groups: {}
        csa1-pilot:
          lessons:
            lesson-1:
              name: Welcome to CSA
            lesson-2:
              name: Classes and Objects
            lesson-3:
              name: Calling Methods
            lesson-4:
              name: Conditionals and Debugging
            lesson-5:
              name: More with Objects
            lesson-6:
              name: While Loops and Practice
            lesson-7:
              name: More with Conditionals
            lesson-8:
              name: Introduction to Code Reviews
            lesson-9:
              name: Inheritance and Methods
            lesson-10:
              name: More Methods, More Features
            lesson-11:
              name: Painting Methods
            lesson-12:
              name: SprayPainter
            lesson-13:
              name: StampPainter
            lesson-14:
              name: Edge Cases
            lesson-15:
              name: Software Engineering Wrap Up
            lesson-16:
              name: Asphalt Art Project - Day 1
            lesson-17:
              name: Asphalt Art Project - Day 2
            lesson-18:
              name: Asphalt Art Project - Day 3
            lesson-19:
              name: FRQ Day
            lesson-20:
              name: Assessment Day
            lesson-21:
              name: Unit 1 Pilot Survey
            lesson-24:
              name: Java Lab
            lesson-22:
              name: The Neighborhood
            lesson-23:
              name: The Theater
          lesson_groups:
            lessonGroup-2:
              display_name: Content
              description: Believing in one's own software engineering identity develops confidence and perseverance. This lesson introduces the core values of software engineering and explores common perceptions students may have. Students reflect on how they already practice many of these values to discover their own software engineering identity.
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa1-pilot
          title: Object Oriented Programming
          description_audience: ''
          description_short: ''
          description: 'Believing in one''s own software engineering identity develops confidence and perseverance. This lesson introduces the core values of software engineering and explores common perceptions students may have. Students reflect on how they already practice many of these values to discover their own software engineering identity.

'
          student_description: ''
        csa2-pilot:
          lessons:
            new lesson:
              name: Defining Attributes
            lesson-2:
              name: Using Variables
            lesson-3:
              name: Writing Constructors
            lesson-4:
              name: Adding Multiple Constructors
            lesson-5:
              name: Manipulating Variables and Object Data
            lesson-6:
              name: Minimizing Errors in Initialization
            lesson-7:
              name: Writing Constructors for Hierarchies
            lesson-8:
              name: Accessing Object Data
            lesson-9:
              name: Modifying Object Data
            lesson-10:
              name: Displaying Object Information
            lesson-11:
              name: The Neighborhood Store Management Project - Day 1
            lesson-12:
              name: The Neighborhood Store Management Project - Day 2
            lesson-13:
              name: The Neighborhood Store Management Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-1:
              name: Unit 2 Pilot Survey
            lesson-16:
              name: Java Lab
            lesson-17:
              name: The Neighborhood
            lesson-18:
              name: The Theater
          lesson_groups:
            lesson group:
              display_name: Content
            lessonGroup-2:
              display_name: Show What You Know
            lessonGroup-3:
              display_name: Pilot Survey
            lessonGroup-4:
              display_name: Sandbox
          name: csa2-pilot
          title: Giving Objects State
          description_audience: ''
          description_short: ''
          description: In this unit, students create objects and define instance variables to represent attributes. Students explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. Students implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with objects, students use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.
          student_description: In this unit, you create objects and define instance variables to represent attributes. You explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. You implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with your objects, you use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.
        csa3-pilot:
          lessons:
            lesson-1:
              name: Creating Arrays
            lesson-2:
              name: Accessing and Modifying Elements
            lesson-3:
              name: Traversing Arrays with for Loops
            lesson-4:
              name: Traversing Arrays with while Loops
            lesson-5:
              name: Storing Objects into Arrays
            lesson-6:
              name: Traversing Arrays with Enhanced for Loops
            lesson-7:
              name: Using Static Variables and Constants
            lesson-8:
              name: Answering Questions with Arrays
            lesson-9:
              name: Solving Problems with Arrays
            lesson-10:
              name: Manipulating Elements in an Array
            lesson-11:
              name: Concert in The Theater Project - Day 1
            lesson-12:
              name: Concert in The Theater Project - Day 2
            lesson-13:
              name: Concert in The Theater Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Unit 3 Pilot Survey
            lesson-17:
              name: Java Lab
            lesson-18:
              name: The Neighborhood
            lesson-19:
              name: The Theater
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa3-pilot
          title: Expanding Program Data
          description_audience: ''
          description_short: ''
          description: In this unit, students create one-dimensional arrays to store primitive values and object references. Students represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, students use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.
          student_description: In this unit, you create one-dimensional arrays to store primitive values and object references. You represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, you use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.
        csa4-pilot:
          lessons:
            lesson-1:
              name: Using Existing Libraries to Add Capabilities
            lesson-2:
              name: Neighborhood Block Party Project - Day 1
            lesson-3:
              name: Solving Problems with the Math Class
            lesson-4:
              name: Treating Data as a Different Type
            lesson-5:
              name: Comparing Values to Make Decisions
            lesson-6:
              name: Adding Randomness to a Program
            lesson-7:
              name: Comparing Object References and Data
            lesson-8:
              name: Providing an Alternate Path of Execution
            lesson-9:
              name: Testing Multiple Conditions
            lesson-10:
              name: Using Logical Operators
            lesson-11:
              name: Applying De Morgan's Laws to Boolean Expressions
            lesson-12:
              name: Neighborhood Block Party Project - Day 2
            lesson-13:
              name: Neighborhood Block Party Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Java Lab
            lesson-17:
              name: The Neighborhood
            lesson-18:
              name: The Theater
            lesson-19:
              name: The Playground
            lesson-20:
              name: Unit 4 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Pilot Survey
          name: csa4-pilot
          title: Expanding Program Logic
          description_audience: ''
          description_short: ''
          description: In this unit, students learn how the use of APIs and libraries can expand the functionalities of their programs. Students learn to use relational and logical operators to expand the decisions for conditionals and iteration. Students use casting operators and `Math` class methods as they evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, students develop an understanding of De Morgan's Laws and writing truth tables. Students use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.
          student_description: In this unit, you learn how the use of APIs and libraries can expand the functionalities of your programs. You learn to use relational and logical operators to expand the decisions for conditionals and iteration. You use casting operators and `Math` class methods as you evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, you develop an understanding of De Morgan's Laws and writing truth tables. You use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.
        csa5-pilot:
          lessons:
            lesson-1:
              name: Creating Tables of Data
            lesson-2:
              name: Traversing a 2D Array by Rows
            lesson-3:
              name: Traversing a 2D Array by Columns
            lesson-4:
              name: Using Enhanced for Loops
            lesson-5:
              name: Evaluating 2D Arrays
            lesson-6:
              name: Applying Standard Algorithms
            lesson-7:
              name: Reversing Elements
            lesson-8:
              name: Shifting Elements
            lesson-9:
              name: Finding Duplicates
            lesson-10:
              name: Searching for Elements
            lesson-11:
              name: A Sustainable Neighborhood Project - Day 1
            lesson-12:
              name: A Sustainable Neighborhood Project - Day 2
            lesson-13:
              name: A Sustainable Neighborhood Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-16:
              name: Unit 5 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Pilot Survey
          name: csa5-pilot
          title: Giving Objects Organization
          description_audience: ''
          description_short: ''
          description: In this unit, students use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. Students identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. Students traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms they developed in Unit 3 to access and manipulate elements.
          student_description: In this unit, you use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. You identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. You traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms you developed in Unit 3 to access and manipulate elements.
        csa6-pilot:
          lessons:
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Documenting Program Code
            lesson-2:
              name: Exploring Integer and Double Objects
            lesson-3:
              name: Using ArrayLists to Store Data
            lesson-4:
              name: Working with ArrayList Data
            lesson-5:
              name: Storing Objects in an ArrayList
            lesson-6:
              name: Removing Data from an ArrayList
            lesson-7:
              name: Using String Methods
            lesson-8:
              name: Comparing Strings
            lesson-9:
              name: Solving Problems with Strings
            lesson-10:
              name: Solving Problems with ArrayLists
            lesson-11:
              name: Neighborhood Lit Fest Project - Day 1
            lesson-12:
              name: Neighborhood Lit Fest Project - Day 2
            lesson-13:
              name: Neighborhood Lit Fest Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Unit 6 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa6-pilot
          title: Expanding Program Capabilities
          description_audience: ''
          description_short: ''
          description: In this unit, students use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. Students explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. Students use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, students write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, students identify and document preconditions and postconditions of objects and methods.
          student_description: In this unit, you use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. You explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. You use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, you write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, you identify and document preconditions and postconditions of objects and methods.
        csa7-pilot:
          lessons:
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-6:
              name: Exploring Method Components and Functionality
            lesson-7:
              name: Using Object References as Parameters
            lesson-8:
              name: Overloading Methods
            lesson-9:
              name: Accessing Object Behavior
            lesson-10:
              name: Writing Methods to Satisfy Conditions
            lesson-11:
              name: Overriding Methods
            lesson-12:
              name: Exploring Recursive Methods
            lesson-13:
              name: Comparing Recursive and Iterative Solutions
            lesson-14:
              name: Writing Recursive Methods
            lesson-15:
              name: Maximizing System Reliability
            lesson-1:
              name: Title Sequence Project - Day 1
            lesson-2:
              name: Title Sequence Project - Day 2
            lesson-3:
              name: Title Sequence Project - Day 3
            lesson-4:
              name: FRQ Day
            lesson-5:
              name: Assessment Day
            lesson-16:
              name: Unit 7 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa7-pilot
          title: Expanding Software Design
          description_audience: ''
          description_short: ''
          description: In this unit, students practice software design and development using the skills and programming constructs they have learned to develop a title sequence for their favorite content creator. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. Students explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.
          student_description: In this unit, you practice software design and development using the skills and programming constructs you have learned to develop a title sequence for your favorite content creator. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your projects meet specified requirements. You explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
        csa8-pilot:
          lessons:
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Planning a Project
            lesson-2:
              name: Searching for Data
            lesson-3:
              name: Implementing the Binary Search
            lesson-4:
              name: Implementing a Recursive Binary Search
            lesson-5:
              name: Implementing the Selection Sort
            lesson-10:
              name: Implementing the Insertion Sort
            lesson-6:
              name: Implementing the Merge Sort
            lesson-7:
              name: Expanding Standard Algorithms
            lesson-8:
              name: Traversing Multiple Lists
            lesson-9:
              name: Defending Privacy and Security
            lesson-11:
              name: Inclusive Playground Project - Day 1
            lesson-12:
              name: Inclusive Playground Project - Day 2
            lesson-13:
              name: Inclusive Playground Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Unit 8 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          name: csa8-pilot
          title: Giving Objects Life
          description_audience: ''
          description_short: ''
          description: In this unit, students implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. Students analyze the efficiency of searching and sorting algorithms and expand the standard algorithms they have developed throughout the course to solve more complex problems. Throughout the unit, students apply their knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. Students wrap up the unit and course considering the privacy and security of their programs and users.
          student_description: In this unit, you implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. You analyze the efficiency of searching and sorting algorithms and expand the standard algorithms you have developed throughout the course to solve more complex problems. Throughout the unit, you apply your knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. You wrap up the unit and course considering the privacy and security of their programs and users.
        csa9-pilot:
          lessons:
            lesson-1:
              name: The AP CSA Exam
            lesson-2:
              name: MCQ Pre-Assessment
            lesson-3:
              name: MCQ Study Plan
            lesson-4:
              name: MCQ Practice – Day 1
            lesson-5:
              name: MCQ Practice – Day 2
            lesson-6:
              name: FRQ Pre-Assessment
            lesson-7:
              name: FRQ Study Plan
            lesson-8:
              name: FRQ Practice – Day 1
            lesson-9:
              name: FRQ Practice – Day 2
            lesson-10:
              name: Mock MCQ Exam – Day 1
            lesson-11:
              name: Mock MCQ Exam – Day 2
            lesson-12:
              name: Mock MCQ Exam – Day 3
            lesson-13:
              name: Mock FRQ Exam – Day 1
            lesson-14:
              name: Mock FRQ Exam – Day 2
            lesson-15:
              name: Mock FRQ Exam – Day 3
          lesson_groups:
            lessonGroup-2:
              display_name: Review and Practice
            lessonGroup-3:
              display_name: Mock Exams
          name: csa9-pilot
          title: AP Exam Review and Practice
          description_audience: ''
          description_short: ''
          description: This unit prepares students for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. Students identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          student_description: This unit prepares you for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. You identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
        k5-onlinepd-2021:
          title: Teaching Computer Science Fundamentals ('21-'22)
          description: "Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! \n"
          student_description: 'Welcome to Code.org’s free online educator course for CS Fundamentals! '
          description_short: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          description_audience: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              name: Welcome and Introduction
            Understanding the Computer Science Fundamentals Courses:
              name: What is Code.org?
            Sequencing:
              name: Sequencing
            Loops:
              name: Loops
            Events:
              name: Events
            Conditionals:
              name: Conditionals
            End of Course projects:
              name: End of Course projects
            Functions:
              name: Functions
            Variables:
              name: Variables
            For Loops:
              name: For Loops
            Sprite Lab:
              name: Sequencing with Sprites
            Reviewing your reflections:
              name: Reviewing your reflections
            Next steps:
              name: Taking next steps
            Module 1:
              name: Module 1
            Getting Started:
              name: Getting Started
            What is Codeorg:
              name: What is Code.org?
            Addressing Implementation Approaches and Barriers:
              name: Implementation Approaches and Barriers
            Lesson Planning:
              name: Teaching a Lesson
            CS Teaching and Learning Practices:
              name: CS Teaching and Learning Practices
            CS Teaching and Student Practices:
              name: Teaching Practices and Strategies
            Implementation Approaches and Barriers:
              name: Addressing Barriers
            Part II Overview:
              name: Part II Overview
            Sequencing with Sprites:
              name: Sequencing with Sprites
          lesson_groups:
            k5_getting_started_1:
              display_name: Introduction
            k5_basic_concepts_1:
              display_name: 'Part II:  Concepts in Courses A - F'
            k5_diving_deeper_1:
              display_name: 'Diving Deeper: Courses E and F'
            k5_next_steps_1:
              display_name: 'Part III:  Next Steps'
            Introduction:
              display_name: Introduction
            Implementing and Teaching CS:
              display_name: 'Part I:  Teaching and Implementing Computer Science'
          name: k5-onlinepd-2021
        haikubot-pilot:
          lessons:
            new lesson:
              name: lesson display name
            haiku_prototype_choice:
              name: Haiku Prototype
            Haiku Bot:
              name: Haiku Bot
            Poem Bot:
              name: Poem Bot
            Introducing Sprite Lab:
              name: Programming Ramp Up for Poem Bot
            write a haiku:
              name: Write a Haiku
            Plan Your Haiku Poem:
              name: Plan Your Haiku Poem
            Programming Poem Bot:
              name: Programming Poem Bot
            poetry circle:
              name: Poetry Circle
          lesson_groups:
            haiku bot:
              display_name: Haiku Bot
            poem bot:
              display_name: Programming Poem Bot
            rampup:
              display_name: Programming Ramp Up for Poem Bot
              description: Learn the basics of coding with sprites and text!
            write a haikut:
              display_name: Write a Haiku
            plan your poem:
              display_name: Plan Your Haiku Poem
            poetry circle:
              display_name: Poetry Circle
            Lesson 1:
              display_name: Lesson 1
              description: Learn the basics of coding with sprites and text!
            Lesson 2:
              display_name: Lesson 2
            Lesson 3:
              display_name: Lesson 3
            Lesson 4:
              display_name: Lesson 4
            Lesson 5:
              display_name: Lesson 5
            Peom Bot:
              display_name: Poem Bot
          name: haikubot-pilot
          title: Poem Bot (Pilot)
          description_audience: Grade 4, Grade 5
          description_short: 'In this module, students will create a haiku poem generator in a Mad Libs style using what they know about the elements of poetry, diction, and coding with variables. '
          description: "**Overview:** \nIn this module, students will create a Poem Bot that recites different versions of a haiku poem they write. First, students will study the structure and elements of a haiku poem by reading poems together, decomposing a haiku poem into its parts, and writing a haiku. Then, students will learn how computers can take in user input and store it in its memory and will build a Poem Bot. Once they’ve built their Poem Bot, they will test their programs with their classmates and complete the project by sharing their user-generated poems in a poetry circle."
          student_description: Use Sprite Lab to make a Haiku Bot!
        allthemigratedthings:
          lessons:
            lesson-1:
              name: First Lesson
            lesson-2:
              name: Second Lesson
            lesson-3:
              name: Third Lesson
            lesson-4:
              name: Printable Lesson Plans
            lesson-5:
              name: Level Details Dialog Examples
          lesson_groups:
            lessonGroup-2:
              display_name: Lesson Group 1
              big_questions: |-
                * Who?
                * What?
                * Where?
              description: Lesson group 1 description
            lessonGroup-3:
              display_name: Lesson Group 2
            lessonGroup-4:
              display_name: UI/Eyes Test Content
              description: All lessons which are examined by automated UI or Eyes tests.
          name: allthemigratedthings
          title: All the Migrated Things
          description_audience: ''
          description_short: ''
          description: Teacher overview of the unit.
          student_description: Student overview of the unit.
        fancygeometry-pilot:
          lessons:
            Fancy Geometry:
              name: Fancy Geometry
          lesson_groups:
            Fancy Geometry:
              display_name: Fancy Geometry
          name: fancygeometry-pilot
          title: Fancy Geometry
          description_audience: Grade 3, Grade 4
          description_short: " In this module, students will explore different geometric shapes by examining the relationships between angles, sides, and lengths. They will also compare the different affordances of using different tools to complete an artistic task."
          description: "**Overview**\nThe Artist tool is an especially explorative and creative platform to build and decompose intricate geometric patterns. Fourth grade math standards focus on developing student proficiency in geometry, encouraging students to discover the relationships between angles, sides, and lengths of different shapes. With the Artist, teachers can help make these geometric relationships come to life. "
          student_description: ''
        ai-classroom-test:
          lessons:
            introai:
              name: Introduction to AI
            ailab-explore:
              name: Explore AI Lab
          lesson_groups: {}
          name: ai-classroom-test
          title: AI Lab Classroom Test
          description_audience: ''
          description_short: Let's Test AI Tools!
          description: Let's Test AI Tools!
          student_description: Let's Test AI Tools!
        poembot-springforum21:
          lessons:
            Programming Poem Bot:
              name: Programming Poem Bot
          lesson_groups:
            lesson group:
              display_name: Poem Bot - Spring Forum 2021
          name: poembot-springforum21
          title: Poem Bot for Spring Forum 2021
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        pl-playground:
          lessons:
            new lesson:
              name: lesson display name
            Module 1:
              name: 'Module 1: Introducing Unit 4 and new pedagogy for teaching programming'
            Module 2:
              name: 'Module 2: Variables in Unit 4 and the role of collaboration'
            Module 3:
              name: 'Module 3: Unit 5, using lists in apps, and recognizing CS skills in the classroom'
            Module 4:
              name: 'Module 4: Unit 5 and using datasets in apps'
            Module 5:
              name: 'Module 5: Unit 7 and understanding functions with parameters and return'
            Module 6:
              name: 'Module 6: Introduction to the Create Performance Task'
            Module 7:
              name: 'Module 7: Tools and structure in Unit 9 - Data'
            Module 8:
              name: 'Module 8: Building community and preparing students for the AP Exam'
            lesson-9:
              name: Getting Started 1
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: pl-playground
          title: PL Playground
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        outbreakmodule:
          lessons:
            how things spread:
              name: How Things Spread
            contagion simulator setup:
              name: Contagion Simulator Setup
            sometimes but not always:
              name: Sometimes, but Not Always
            modifying your model:
              name: Modifying Your model
            telling a data story:
              name: Telling a Data Story
            intro monster town:
              name: Outbreak in Monster Town
          lesson_groups:
            Outbreak Module:
              display_name: Outbreak Module
          name: outbreakmodule
          title: Outbreak Module_V2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csp-post-survey-2020:
          lessons:
            CSP post-course survey:
              name: CSP Post-Course Survey
          lesson_groups:
            cspSurvey2020:
              display_name: Survey
          name: csp-post-survey-2020
          title: CSP Student Post-Course Survey ('20-'21)
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
          student_description: Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 15 minutes to complete.  Your responses are private and anonymous -- your teacher can see anonymous aggregate results for the whole class.  The results are vital for your teacher and for Code.org to sustain and improve the course.  Thanks for your time and consideration.
        aiml-2021:
          lessons:
            lesson1:
              name: Introduction to Machine Learning
            lesson2:
              name: Types of Machine Learning
            lesson3:
              name: Patterns in Data
            lesson4:
              name: Classification Models
            lesson5:
              name: Introduction to AI Lab
            lesson6:
              name: Importing Models in App Lab
            lesson7:
              name: Model Cards
            lesson8:
              name: Numerical Data in AI Lab
            lesson9:
              name: Numerical Models
            lesson10:
              name: Model Cards in App Lab
            lesson11:
              name: Customizing Apps
            lesson12:
              name: Saving Models in AI Lab
            lesson13:
              name: AI for Social Good
            lesson14:
              name: AI Code of Ethics
            lesson15:
              name: Planning Your App
            lesson16:
              name: Design an AI App
            lesson_groups: {}
            lesson-17:
              name: Innovations in AI
            lesson-18:
              name: 'Mini-Project: Make a Machine Learning App'
            lesson-19:
              name: Troubleshooting Models
            lesson-20:
              name: Creating an App
            lesson-21:
              name: Issue Statements
            lesson-22:
              name: Survey Planning
            lesson-23:
              name: Survey Data in AI Lab
            lesson-1:
              name: Post-Unit Survey
          name: aiml-2021
          title: AI and Machine Learning Module
          description_audience: ''
          description_short: ''
          description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. [Click Here](https://docs.google.com/document/d/1SkMCN4Eid3-mGoRUQkurQGJqoOJ9PydfB7uGE0xZyFA/preview) to learn more about recommendations for introducing students to App Lab before this unit.

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](https://studio.code.org/s/self-paced-pl-csd5-2021). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **For Teachers:** [Click here](https://studio.code.org/s/aiml-2021?viewAs=Teacher) to see lesson plans and teacher resources for this unit.
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
              description: Students learn the basics of machine learning and use a tool called AI Lab to create machine learning models that can be used in App Lab. The unit starts with an overview of machine learning and how computers can use patterns in data to make decisions and predictions. Then, students learn how to use AI Lab to train models from tabular data while exploring issues of bias. Lessons follow a repeating "unplugged - AI Lab - App Lab" pattern so students are continually exposed to the concepts and tools of machine learning. The chapter culminates in a project where students select from a set of real-world datasets to train a machine learning model and create an app.
              big_questions: |-
                - How does machine learning find patterns in data to make decisions?
                - How can we avoid bias when training a machine learning model?
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
              big_questions: "- How can machine learning be used to solve problems in our community?"
              description: This chapter prepares students to be machine learning scientists to create an app that addresses an issue in their community. Students follow along with a fictional group of students as they define an issue, develop a survey to collect data, analyze their data in AI Lab, create a model card, and create an app to solve their problem. Then, in the final project, students repeat these same steps with an issue they care about in their community.
            lessonGroup-4:
              display_name: Survey
        csd7-2021:
          lessons:
            Introduction to Machine Learning:
              name: Introduction to Machine Learning
            Types of Machine Learning:
              name: Types of Machine Learning
            Innovations in AI:
              name: Innovations in AI
            Patterns in Data:
              name: Patterns in Data
            Classification Models:
              name: Classification Models
            Introduction to AI Lab:
              name: Introduction to AI Lab
            Importing Models in App Lab:
              name: Importing Models in App Lab
            Model Cards:
              name: Model Cards
            Saving Models in AI Lab:
              name: Saving Models in AI Lab
            Model Cards in App Lab:
              name: Model Cards in App Lab
            Similarity Models:
              name: Numerical Models
            Numerical Data in AI Lab:
              name: Numerical Data in AI Lab
            Customizing Apps:
              name: Customizing Apps
            AI Code of Ethics:
              name: AI Code of Ethics
            'Mini-Project: Make a Machine Learning App':
              name: 'Mini-Project: Make a Machine Learning App'
            Issue Statements:
              name: Issue Statements
            Survey Planning:
              name: Survey Planning
            Survey Data in AI Lab:
              name: Survey Data in AI Lab
            Troubleshooting Models:
              name: Troubleshooting Models
            Creating an App:
              name: Creating an App
            Design an AI App:
              name: Design an AI App
            lesson-1:
              name: Post-Unit Survey
            Post-Unit Survey:
              name: Post-Unit Survey
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
              big_questions: |-
                - How does machine learning find patterns in data to make decisions?
                - How can we avoid bias when training a machine learning model?
              description: Students learn the basics of machine learning and use a tool called AI Lab to create machine learning models that can be used in App Lab. The unit starts with an overview of machine learning and how computers can use patterns in data to make decisions and predictions. Then, students learn how to use AI Lab to train models from tabular data while exploring issues of bias. Lessons follow a repeating "unplugged - AI Lab - App Lab" pattern so students are continually exposed to the concepts and tools of machine learning. The chapter culminates in a project where students select from a set of real-world datasets to train a machine learning model and create an app.
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
              big_questions: "- How can machine learning be used to solve problems in our community?"
              description: This chapter prepares students to be machine learning scientists to create an app that addresses an issue in their community. Students follow along with a fictional group of students as they define an issue, develop a survey to collect data, analyze their data in AI Lab, create a model card, and create an app to solve their problem. Then, in the final project, students repeat these same steps with an issue they care about in their community.
            lessonGroup-4:
              display_name: Survey
          name: csd7-2021
          title: AI and Machine Learning
          description_audience: ''
          description_short: ''
          description: |-
            Unit 7 is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **Implementation guidance for Unit 7**

            - Complete Unit 1 Chapter 1 before starting this unit
            - This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. [Click Here](https://docs.google.com/document/d/1SkMCN4Eid3-mGoRUQkurQGJqoOJ9PydfB7uGE0xZyFA/preview) to learn more about recommendations for introducing students to App Lab before this unit.
            - This is an optional unit that can be used in place of another CSD unit - see the [Implementation Guide](https://docs.google.com/document/d/1SkMCN4Eid3-mGoRUQkurQGJqoOJ9PydfB7uGE0xZyFA/preview) for more information
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1myJwrDyRlAjwVNDS3gs-3JaJNhogsGMt9Swo-bpySgE/preview) for more information about this unit

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](https://studio.code.org/s/self-paced-pl-csd5-2021). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: Unit 7 is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop your own machine learning projects around real-world data. The unit culminates with designing your own machine learning app to solve a personally relevant problem.
        kodea-pd-2021:
          title: CSF Online PD - Kodea
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          student_description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          lessons:
            Getting Started:
              name: Getting Started
            Computer Science Fundamentals:
              name: Computer Science Fundamentals
            Looking Ahead:
              name: Looking Ahead
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
            'Mastering the Basics: Loops':
              name: 'Mastering the Basics: Loops'
            'Mastering the Basics: Conditionals':
              name: 'Mastering the Basics: Conditionals'
            'Mastering the Basics: Functions':
              name: 'Mastering the Basics: Functions'
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Planning:
              name: Planning
            Next Steps:
              name: Next Steps
          lesson_groups: {}
          name: kodea-pd-2021
        vpl-csd-2021:
          title: CS Discoveries Virtual Professional Learning 2021 - 22
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lessons:
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 7:
              name: Module 7
            Module 8:
              name: Module 8
            new lesson:
              name: lesson display name
          lesson_groups:
            CSD_Module 1:
              display_name: Module 1
            CSD_Module 2:
              display_name: Module 2
            CSD_Module 3:
              display_name: Module 3
            CSD_Module 4:
              display_name: Module 4
            CSD_Module 5:
              display_name: Module 5
            CSD_Module 6:
              display_name: Module 6
            CSD_Module 7:
              display_name: Module 7
            CSD_Module 8:
              display_name: Module 8
            lesson group:
              display_name: lesson group display name
          name: vpl-csd-2021
        vpl-csp-2021:
          title: CS Principles Virtual Professional Learning 21 - 22
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lessons:
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: 'Module 5: Unit 7 and Understanding Functions with Parameters and Return'
            Module 6:
              name: 'Module 6: Introduction to the Create Performance Task'
            Module 7:
              name: 'Module 7: Tools and Structure in Unit 9 - Data'
            Module 8:
              name: 'Module 8: Building Community and Preparing Students for the AP Exam'
            new lesson:
              name: lesson display name
          lesson_groups:
            lesson group:
              display_name: lesson group display name
          name: vpl-csp-2021
        self-paced-pl-csd1-2021:
          lessons:
            lesson-1:
              name: Welcome to Code.org
            lesson-2:
              name: Welcome to "Teaching CS Discoveries"
            lesson-3:
              name: Accessing and Using Lesson Plans
            lesson-4:
              name: Welcome
            lesson-5:
              name: Navigating Code.org
            lesson-6:
              name: Overview of CS Discoveries
            lesson-7:
              name: Guidance for Teaching CS Discoveries
          lesson_groups:
            lessonGroup-2:
              display_name: Welcome
            lessonGroup-3:
              display_name: Navigating Code.org
            lessonGroup-5:
              display_name: Preparing to Teach CS Discoveries
          name: self-paced-pl-csd1-2021
          title: 'Module 1: Welcome '
          description_audience: ''
          description_short: ''
          description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
        self-paced-pl-csd2-2021:
          lessons:
            lesson-4:
              name: Navigating the Code.org learning platform
            lesson-5:
              name: Setting Up Class Sections
            lesson-7:
              name: 'Exploring the Student Experience '
            lesson-6:
              name: Tracking Student Progress and Providing Feedback
            lesson-3:
              name: Navigating lesson plans and resources
            lesson-2:
              name: Lesson Plan Structure
            lesson-8:
              name: Navigating support
            lesson-9:
              name: Teacher Community
            lesson-10:
              name: Report a Problem
          lesson_groups:
            lessonGroup-2:
              display_name: Navigating Code.org
            lessonGroup-3:
              display_name: Navigating Lesson Plans and Resources
            lessonGroup-4:
              display_name: Navigating Support
          name: self-paced-pl-csd2-2021
          title: 'Module 2: Navigating Code.org'
          description_audience: ''
          description_short: ''
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes\n\n\n\n\n"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
        self-paced-pl-csd3-2021:
          lessons:
            lesson-1:
              name: Overview of course content
            lesson-2:
              name: Overview of learning tools
            lesson-3:
              name: 'Overview of implementation '
          lesson_groups:
            lessonGroup-2:
              display_name: Overview of CS Discoveries
          name: self-paced-pl-csd3-2021
          title: 'Module 3: Overview of CS Discoveries'
          description_audience: ''
          description_short: ''
          description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
          student_description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
        self-paced-pl-csd4-2021:
          lessons:
            lesson-1:
              name: Role of the teacher
            lesson-2:
              name: Learning CS Discoveries
            lesson-3:
              name: Teaching CS Discoveries
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching and learning CS Discoveries
          name: self-paced-pl-csd4-2021
          title: 'Module 4: Teaching and learning CS Discoveries'
          description_audience: ''
          description_short: ''
          description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
          student_description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
        self-paced-pl-csd5-2021:
          lessons:
            lesson-1:
              name: 'Lesson 1: Problem Solving and Computing'
            lesson-2:
              name: Introduction to AI and machine learning
            lesson-3:
              name: Train a machine learning model
            lesson-4:
              name: Engage with machine learning apps
            lesson-5:
              name: Consider real world implications
            lesson-6:
              name: Unit wrap up
            lesson-7:
              name: AI and Machine Learning
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Artificial Intelligence and Machine Learning
              description: Students learn the problem-solving process, the input-output-store-process model of a computer, and how computers help humans solve problems. Students end the unit by proposing their own app to solve a problem.
            lessonGroup-3:
              display_name: 'Preparing to Teach Unit 2 '
              description: 'Students learn to create websites using HTML and CSS inside Code.org''s Web Lab environment. Throughout the unit, students consider questions of privacy and ownership on the Internet as they develop their own personal websites.  '
            lessonGroup-4:
              display_name: Preparing to Teach Unit 3
              description: 'Students learn fundamental programming constructs and practices in the JavaScript programming language while developing animations and games in Code.org''s Game Lab environment. Students end the unit by designing their own animations and games. '
            lessonGroup-5:
              display_name: Preparing to Teach Unit 4
              description: 'Students apply the problem solving process to the problems of others, learning to empathize with the needs of a user and design solutions to address those needs. During the second half of the unit, students form teams to prototype an app of their own design, first on paper, and eventually in Code.org''s App Lab environment. '
            lessonGroup-6:
              display_name: Preparing to Teach Unit 5
              description: Students explore different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second half of the unit, students learn how collections of data are used to solve problems and how computers help to automate the steps of this process.
            lessonGroup-7:
              display_name: Preparing to Teach Unit 6
              description: 'Students use Code.org''s App Lab environment, in conjunction with the Adafruit Circuit Playground, to explore the relationship between hardware and software. Throughout the unit, students develop prototypes that mirror existing innovative computing platforms, before ultimately designing and prototyping one of their own. '
            lessonGroup-8:
              display_name: Preparing to Teach Artificial Intelligence and Machine Learning
              description: 'Students learn how machine learning can be used to solve problems by preparing data, training a machine model, the testing the model for accuracy and bias. Students use Code.org''s AI Lab environment to train machine learning models, then import their models into App Lab to create apps that solve problems. '
            lessonGroup-9:
              display_name: Preparing to Teach Unit 1
          name: self-paced-pl-csd5-2021
          title: Teaching AI and machine learning
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects. \n* Make a plan for implementing the unit with your students.\n\n**Suggested Time:** 120 minutes\n"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Train a machine learning model using AI Lab.\n* Engage with machine learning apps. \n* Consider real-world implications of AI and machine learning. \n* Explore end of chapter projects.\n\n**Suggested Time:** 120 minutes"
        self-paced-pl-csd6-2021:
          lessons:
            lesson-1:
              name: Preparing to Teach Problem Solving and Computing
            lesson-2:
              name: 'Introduction to AI and machine learning '
            lesson-3:
              name: 'Train a machine learning model '
            lesson-4:
              name: Consider real world implications
            lesson-5:
              name: 'Unit wrap up '
            lesson-6:
              name: Create machine learning apps
            lesson-7:
              name: Unit 6
            lesson-8:
              name: Preparing to Teach Unit 7
            lesson-9:
              name: Sample Student Work
            lesson-10:
              name: Unit 1 Projects
            lesson-11:
              name: Introduction to Unit 3
            lesson-12:
              name: Preparing to teach week 1 of Unit 3
            lesson-13:
              name: Uni 3 Key Concepts
            lesson-14:
              name: Sample Student Work
            lesson-15:
              name: Unit 3 Projects
            lesson-16:
              name: 'Introduction to Unit 4: The Design Process'
            lesson-17:
              name: Preparing to teach week 1 of Unit 4
            lesson-18:
              name: Unit 4 Key Concepts
            lesson-19:
              name: Sample Student Work
            lesson-20:
              name: Unit 4 Projects
            lesson-21:
              name: 'Introduction to Unit 5: Data and Society'
            lesson-22:
              name: Preparing to Teach Week 1
            lesson-23:
              name: Unit 5 Key Concepts
            lesson-24:
              name: Sample Student Work
            lesson-25:
              name: Unit 5 Projects
            lesson-26:
              name: Introduction to Unit 6
            lesson-27:
              name: Preparing to Teach Unit 6
            lesson-28:
              name: Unit 6 Key Concepts
            lesson-29:
              name: Sample Student Work
            lesson-30:
              name: Unit 6 Projects
            lesson-31:
              name: Introduction to Unit 7
            lesson-32:
              name: Preparing to teach week 1
            lesson-33:
              name: Unit 7 key concepts
            lesson-34:
              name: Sample student work
            lesson-35:
              name: Unit 1 Projects
          lesson_groups:
            lessonGroup-2:
              display_name: Preparing to Teach Artificial Intelligence and Machine Learning
            lessonGroup-3:
              display_name: 'Preparing to Teach Unit 2: Web Development'
            lessonGroup-4:
              display_name: 'Preparing to Teach Unit 3: Interactive Animations and Games'
            lessonGroup-5:
              display_name: 'Preparing to Teach Unit 4: The Design Process'
            lessonGroup-6:
              display_name: 'Preparing to Teach Unit 5: Data and Society'
            lessonGroup-7:
              display_name: 'Preparing to Teach Unit 6: Physical Computing'
            lessonGroup-8:
              display_name: 'Preparing to Teach Unit 7: AI and Machine Learning'
          name: self-paced-pl-csd6-2021
          title: 'Teaching AI and machine learning '
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Train a machine learning model using AI Lab.\n* Engage with machine learning apps. \n* Consider real-world implications of AI and machine learning. \n* Explore end of chapter projects.\n\n**Suggested Time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare for teaching Code.org's AI and Machine Learning unit.  \n\n**In this professional learning module, you will:**\n* Get an introduction to artificial intelligence and machine learning. \n* Train a machine learning model using AI Lab.\n* Engage with machine learning apps. \n* Consider real-world implications of AI and machine learning. \n* Explore end of chapter projects.\n\n**Suggested Time:** 120 minutes"
        self-paced-pl-csd7-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csd7-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csd8-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csd8-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp1-2021:
          lessons:
            lesson-1:
              name: Welcome to Code.org
            lesson-2:
              name: Welcome to “Teaching CS Principles”
          lesson_groups: {}
          name: self-paced-pl-csp1-2021
          title: 'Module 1: Welcome'
          description_audience: ''
          description_short: ''
          description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
        self-paced-pl-csp2-2021:
          lessons:
            lesson-1:
              name: Navigating the Code.org learning platform
            lesson-2:
              name: Navigating lesson plans and resources
            lesson-3:
              name: Navigating support
          lesson_groups: {}
          name: self-paced-pl-csp2-2021
          title: 'Module 2: Navigating Code.org'
          description_audience: ''
          description_short: ''
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
        self-paced-pl-csp3-2021:
          lessons:
            lesson-1:
              name: Overview of course content
            lesson-2:
              name: Overview of learning tools
            lesson-3:
              name: Overview of implementation
          lesson_groups: {}
          name: self-paced-pl-csp3-2021
          title: Overview of CS Principles
          description_audience: ''
          description_short: ''
          description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
          student_description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
        self-paced-pl-csp4-2021:
          lessons:
            lesson-1:
              name: The role of the teacher
            lesson-2:
              name: Learning CS Principles
            lesson-3:
              name: Teaching CS Principles
          lesson_groups: {}
          name: self-paced-pl-csp4-2021
          title: Teaching and learning CS Principles
          description_audience: ''
          description_short: ''
          description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Principles course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Principles classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Principles classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Principles course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.

            **Suggested Time**: 50 minutes
          student_description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Discoveries classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Discoveries course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.

            **Suggested Time**: 50 minutes
        self-paced-pl-csp5-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp5-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp6-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp6-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp7-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp7-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp8-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp8-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp9-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp9-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp10-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp10-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        self-paced-pl-csp11-2021:
          lessons: {}
          lesson_groups: {}
          name: self-paced-pl-csp11-2021
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poster:
          lessons:
            HoC Tutorial 1:
              name: Self-Expression
          lesson_groups:
            about me_ip:
              display_name: 'Interactive Poster: Self-Expression'
              description: 'Version 1 of Interactive Poster: Self-Expression'
          name: poster
          title: 'V1_Interactive Poster: Self-Expression'
          description_audience: ''
          description_short: '(Need to change name) Interactive Poster project in an "About Me" format for HoC - V1 '
          description: ''
        poster-draft:
          lessons:
            lesson-1:
              name: Story Board
          lesson_groups: {}
          name: poster-draft
          title: Story Board (V1 - Control)
          description_audience: ''
          description_short: Story Board (V1)
          description: ''
          student_description: '(Need to change name) Interactive Poster project in an "About Me" format for HoC - V1 '
        poembot:
          lessons:
            lesson-1:
              name: Mood Study - HoC Activity
          lesson_groups: {}
          name: poembot
          title: Poembot
          description_audience: ''
          description_short: ''
          description: ''
        outbreak-module:
          lessons: {}
          lesson_groups: {}
          name: outbreak-module
          title: Outbreak
          description_audience: ''
          description_short: ''
          description: ''
        csa1-exemplars:
          lessons:
            lesson-1:
              name: Welcome to CSA
            lesson-2:
              name: Classes and Objects
            lesson-3:
              name: Using Commands
            lesson-4:
              name: Conditionals and Debugging
            lesson-5:
              name: More with Objects
            lesson-6:
              name: While Loops and Practice
            lesson-7:
              name: More with Conditionals
            lesson-8:
              name: Introduction to Code Reviews
            lesson-9:
              name: Inheritance and Methods
            lesson-10:
              name: More Methods, More Features
            lesson-11:
              name: Painting Methods
            lesson-12:
              name: Spray Painter
            lesson-13:
              name: StampPainter
            lesson-14:
              name: Edge Cases
            lesson-15:
              name: Software Engineering Wrap Up
            lesson-16:
              name: Asphalt Art Project - Day 1
            lesson-17:
              name: Asphalt Art Project - Day 2
            lesson-18:
              name: Asphalt Art Project - Day 3
            lesson-19:
              name: FRQ Day
            lesson-20:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa1-exemplars
          title: Unit 1 - Object Oriented Programming [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
        csa2-exemplars:
          lessons:
            lesson-1:
              name: Defining Attributes
            lesson-2:
              name: Using Variables
            lesson-3:
              name: Writing Constructors
            lesson-4:
              name: Adding Multiple Constructors
            lesson-5:
              name: Manipulating Variables and Object Data
            lesson-6:
              name: Minimizing Errors in Initialization
            lesson-7:
              name: Writing Constructors for Hierarchies
            lesson-8:
              name: Accessing Object Data
            lesson-9:
              name: Modifying Object Data
            lesson-10:
              name: Displaying Object Information
            lesson-11:
              name: 'Project: The Neighborhood Store Management - Day 1'
            lesson-12:
              name: 'Project: The Neighborhood Store Management - Day 2'
            lesson-13:
              name: 'Project: The Neighborhood Store Management - Day 3'
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa2-exemplars
          title: Unit 2 - Giving Objects State [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
        csa-videos:
          lessons:
            lesson-21:
              name: Empty Levels to Clone
            lesson-22:
              name: Neighborhood Setup Widget
            lesson-1:
              name: 'U1L1: Welcome to CSA'
            lesson-2:
              name: 'U1L2: Classes and Objects'
            lesson-3:
              name: 'U1L3: Using Commands'
            lesson-4:
              name: 'U1L4: Conditionals and Debugging'
            lesson-5:
              name: 'U1L5: More with Objects'
            lesson-6:
              name: 'U1L6: While Loops and Practice'
            lesson-7:
              name: 'U1L7: More with Conditionals'
            lesson-8:
              name: 'U1L8: Introduction to Code Reviews'
            lesson-9:
              name: 'U1L9: Inheritance and Methods'
            lesson-10:
              name: 'U1L10: More Methods, More Features'
            lesson-11:
              name: 'U1L11: Painting Methods'
            lesson-12:
              name: 'U1L12: SprayPainter'
            lesson-13:
              name: 'U1L13: StampPainter'
            lesson-14:
              name: 'U1L14: Edge Cases'
            lesson-15:
              name: 'U1L15: Software Engineering Wrap Up'
            lesson-16:
              name: 'U1L16: Asphalt Art Project Day 1'
            lesson-17:
              name: 'U1L17: Asphalt Art Project Day 2'
            lesson-18:
              name: 'U1L18: Asphalt Art Project Day 3'
            lesson-19:
              name: 'U1L19: FRQ Day'
            lesson-20:
              name: 'U1L20: Assessment Day'
            lesson-23:
              name: 'U2L1: Defining Attributes'
            lesson-24:
              name: 'U2L2: Using Variables'
            lesson-25:
              name: 'U2L3: Writing Constructors'
            lesson-26:
              name: 'U2L4: Adding Multiple Constructors'
            lesson-27:
              name: 'U2L5: Manipulating Variables and Object Data'
            lesson-28:
              name: 'U2L6: Minimizing Errors in Intialization'
            lesson-29:
              name: 'U2L7: Writing Constructors for Hierarchies'
            lesson-30:
              name: 'U2L8: Accessing Object Data'
            lesson-31:
              name: 'U2L9: Modifying Object Data'
            lesson-32:
              name: 'U2L10: Displaying Object Information'
            lesson-33:
              name: 'U2L11: Neighborhood Store Management Project Day 1'
            lesson-34:
              name: 'U2L12: Neighborhood Store Management Project Day 2'
            lesson-35:
              name: 'U2L13: Neighborhood Store Management Project Day 3'
            lesson-36:
              name: 'U2L14: FRQ Day'
            lesson-37:
              name: 'U2L15: Assessment Day'
            lesson-38:
              name: 'U3L1: Creating Arrays'
            lesson-39:
              name: 'U3L2: Accessing and Modifying Elements'
            lesson-40:
              name: 'U3L3: Traversing Arrays with for Loops'
            lesson-41:
              name: 'U3L4: Traversing Arrays with while Loops'
            lesson-42:
              name: 'U3L5: Storing Objects into Arrays'
            lesson-43:
              name: 'U3L6: Traversing Arrays with Enhanced for Loops'
            lesson-44:
              name: 'U3L7: Using Static Variables and Constants'
            lesson-45:
              name: 'U3L8: Answering Questions with Arrays'
            lesson-46:
              name: 'U3L9: Solving Problems with Arrays'
            lesson-47:
              name: 'U3L10: Manipulating Elements in an Array'
            lesson-48:
              name: 'U3L11: Concert in the Theater Project Day 1'
            lesson-49:
              name: 'U3L12: Concert in the Theater Project Day 2'
            lesson-50:
              name: 'U3L13: Concert in the Theater Project Day 3'
            lesson-51:
              name: 'U3L14: FRQ Day'
            lesson-52:
              name: 'U3L15: Assessment Day'
            lesson-53:
              name: 'U4L1: Using Existing Libraries to Add Capabilities'
            lesson-54:
              name: 'U4L2: Solving Problems with the Math Class'
            lesson-55:
              name: 'U4L3: Treating Data as a Different Type'
            lesson-56:
              name: 'U4L4: Comparing Values to Make Decisions'
            lesson-57:
              name: 'U4L5: Adding Randomness to a Program'
            lesson-58:
              name: 'U4L6: Comparing Object References and Data'
            lesson-59:
              name: 'U4L7: Providing an Alternate Path of Execution'
            lesson-60:
              name: 'U4L8: Testing Multiple Conditions'
            lesson-61:
              name: 'U4L9: Using Logical Operators'
            lesson-62:
              name: 'U4L10: Applying De Morgan''s Laws to Boolean Expressioins'
            lesson-63:
              name: 'U4L11: Neighborhood Block Party Project Day 1'
            lesson-64:
              name: 'U4L12: Neighborhood Block Party Project Day 2'
            lesson-65:
              name: 'U4L13: Neighborhood Block Party Project Day 3'
            lesson-66:
              name: 'U4L14: FRQ Day'
            lesson-67:
              name: 'U4L15: Assessment Day'
            lesson-68:
              name: 'U5L1: Creating Tables of Data'
            lesson-69:
              name: 'U5L2: Traversing a 2D Array by Rows'
            lesson-70:
              name: 'U5L3: Traversing a 2D Array by Columns'
            lesson-71:
              name: 'U5L4: Using Enhanced for Loops'
            lesson-72:
              name: 'U5L5: Evaluating 2D Arrays'
            lesson-73:
              name: 'U5L6: Applying Standard Algorithms'
            lesson-74:
              name: 'U5L7: Reversing Elements'
            lesson-75:
              name: 'U5L8: Shifting Elements'
            lesson-76:
              name: 'U5L9: Finding Duplicates'
            lesson-77:
              name: 'U5L10: Searching for Elements'
            lesson-78:
              name: 'U5L11: A Sustainable Neighborhood Project Day 1'
            lesson-79:
              name: 'U5L12: A Sustainable Neighborhood Project Day 2'
            lesson-80:
              name: 'U5L13: A Sustainable Neighborhood Project Day 3'
            lesson-81:
              name: 'U5L14: FRQ Day'
            lesson-82:
              name: 'U5L15: Assessment Day'
          lesson_groups:
            lessonGroup-3:
              display_name: Resources
            lessonGroup-2:
              display_name: Unit 1
            lessonGroup-4:
              display_name: Unit 2
            lessonGroup-5:
              display_name: Unit 3
            lessonGroup-6:
              display_name: Unit 4
            lessonGroup-7:
              display_name: Unit 5
          name: csa-videos
          title: CSA Videos
          description_audience: ''
          description_short: ''
          description: ''
        csa3-exemplars:
          lessons:
            lesson-1:
              name: Creating Arrays
            lesson-2:
              name: Accessing and Modifying Elements
            lesson-3:
              name: Traversing Arrays with for Loops
            lesson-4:
              name: Traversing Arrays with while Loops
            lesson-5:
              name: Storing Objects into Arrays
            lesson-6:
              name: Traversing Arrays with Enhanced for Loops
            lesson-7:
              name: Using Static Variables and Constants
            lesson-8:
              name: Answering Questions with Arrays
            lesson-9:
              name: Solving Problems with Arrays
            lesson-10:
              name: Manipulating Elements in an Array
            lesson-11:
              name: Concert in The Theater Project - Day 1
            lesson-12:
              name: Concert in The Theater Project - Day 2
            lesson-13:
              name: Concert in The Theater Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa3-exemplars
          title: Unit 3 - Expanding Program Data [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
        ai-lab:
          lessons:
            lesson-1:
              name: AI Lab
            lesson-2:
              name: AI Lab Resources
            lesson-3:
              name: Test
          lesson_groups: {}
          name: ai-lab
          title: AI Lab
          description_audience: ''
          description_short: ''
          description: Use these levels to explore AI Lab and use in other lessons or activities.
          student_description: Use these levels to explore AI Lab and use in other lessons or activities. You will need to create a Code.org account and sign-in in order to use these tools.
        poster-experiment:
          lessons:
            lesson-1:
              name: Story Board
          lesson_groups: {}
          name: poster-experiment
          title: Story Board (V1 - Experiment)
          description_audience: ''
          description_short: ''
          description: ''
        tesspltest:
          lessons:
            lesson-1:
              name: Lesson1
            lesson-2:
              name: Lesson 2
          lesson_groups: {}
          name: tesspltest
          title: Testing PL Course Unit 1
          description_audience: ''
          description_short: ''
          description: ''
        tesspl2:
          lessons: {}
          lesson_groups: {}
          name: tesspl2
          title: Tess PL 2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        sb-pt-cont:
          lessons:
            lesson-1:
              name: Story Board - A
          lesson_groups: {}
          name: sb-pt-cont
          title: Story Board (playtest control)
          description_audience: ''
          description_short: ''
          description: ''
        sb-pt-exp:
          lessons:
            lesson-1:
              name: Story Board - B
          lesson_groups: {}
          name: sb-pt-exp
          title: Story Board (playtest experiment)
          description_audience: ''
          description_short: ''
          description: ''
        dc-standalone:
          lessons:
            lesson-1:
              name: Story Board
          lesson_groups: {}
          name: dc-standalone
          title: Story Board (DC Standalone)
          description_audience: ''
          description_short: ''
          description: ''
        storyboard-playtest-control:
          lessons: {}
          lesson_groups: {}
        sb-chardev-v1:
          lessons:
            lesson-1:
              name: Story Board - Character Development
          lesson_groups: {}
          name: sb-chardev-v1
          title: Story Board Character Development
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csp-mod4:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups:
            lessonGroup-2:
              display_name: Stage 1
            lessonGroup-3:
              display_name: Stage 2
          name: dlp21-csp-mod4
          title: 2021 CS Principles Deeper Learning Module 4  for Workshop 4
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csp-mod1:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csp-mod1
          title: 2021 CS Principles Deeper Learning Module 1 for Workshop 1
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd:
          lessons: {}
          lesson_groups:
            lessonGroup-2:
              display_name: Module 1
              description: test
            lessonGroup-3:
              display_name: Module 2
            lessonGroup-4:
              display_name: Module 3
            lessonGroup-5:
              display_name: Module 4
          name: dlp21-csd
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd-mod1:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csd-mod1
          title: 2021 CS Discoveries Deeper Learning Module 1 for Workshop 1
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd-mod2:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csd-mod2
          title: 2021 CS Discoveries Deeper Learning Module 2 for Workshop 2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csd-mod3:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csd-mod3
          title: 2021 CS Discoveries Deeper Learning Module 3 for Workshop 3
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csd-mod4:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csd-mod4
          title: 2021 CS Discoveries Deeper Learning Module 4 for Workshop 4
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csp-mod2:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csp-mod2
          title: 2021 CS Principles Deeper Learning Module 2 for Workshop 2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-csp-mod3:
          lessons:
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          lesson_groups: {}
          name: dlp21-csp-mod3
          title: 2021 CS Principles Deeper Learning Module 3 for Workshop 3
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        dlp21-overview:
          lessons: {}
          lesson_groups: {}
          name: dlp21-overview
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        dlp21-csd-overview:
          lessons:
            lesson-1:
              name: Overview
          lesson_groups: {}
          name: dlp21-csd-overview
          title: CS Discoveries Deeper Learning Overview
          description_audience: ''
          description_short: ''
          description: Welcome to the 2021 Deeper Learning program for onboarding CS Discoveries facilitators.
        dlp21-csp-overview:
          lessons:
            lesson-1:
              name: Overview
          lesson_groups: {}
          name: dlp21-csp-overview
          title: 2021 CS Principles Deeper Learning Overview
          description_audience: ''
          description_short: ''
          description: "###Welcome to the 2021 Deeper Learning program for onboarding CS Principles facilitators."
        csa-u6-dev:
          lessons:
            lesson-1:
              name: Documenting Program Code
            lesson-2:
              name: Exploring Integer and Double Objects
            lesson-3:
              name: Using ArrayLists to Store Data
            lesson-4:
              name: Working with ArrayList Data
            lesson-5:
              name: Storing Objects in an ArrayList
            lesson-6:
              name: Removing Data from an ArrayList
            lesson-8:
              name: Using String Methods
            lesson-9:
              name: Comparing Strings
            lesson-10:
              name: Solving Problems with Strings
            lesson-7:
              name: Solving Problems with ArrayLists
            lesson-11:
              name: Code Poetry Project
            lesson-12:
              name: Tools
            lesson-13:
              name: Examples
            lesson-14:
              name: Neighborhood 16x16
            lesson-15:
              name: Neighborhood 32x32
            lesson-16:
              name: Theater
            lesson-17:
              name: Console
            lesson-18:
              name: Widgets
            lesson-19:
              name: Comparing Strings
            lesson-20:
              name: Solving Problems with Strings
            lesson-21:
              name: Solving Problems with ArrayLists
            lesson-22:
              name: Code Poetry Project
          lesson_groups:
            lessonGroup-2:
              display_name: Lessons
            lessonGroup-3:
              display_name: Project
            lessonGroup-4:
              display_name: Demos and Resources
          name: csa-u6-dev
          title: CSA Unit 6 Development
          description_audience: ''
          description_short: ''
          description: ''
        hello-world-draft:
          lessons:
            lesson-1:
              name: Hello, world!
          lesson_groups: {}
          name: hello-world-draft
          title: '"Hello, World!"'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-self-paced-pl:
          lessons:
            Navigating the Codeorg learning platform:
              name: " Navigating Code.org learning platform"
            Navigating lesson plans and resources:
              name: Navigating lesson plans and resources
            Navigating support:
              name: Navigating support
            lesson-4:
              name: Navigating the Code.org learning platform
            lesson-3:
              name: Navigating lesson plans and resources
            lesson-8:
              name: Navigating support
          lesson_groups:
            lessonGroup-2:
              display_name: Navigating Code.org
          title: Navigating Code.org for CSA Pilot Teachers
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CSA. \n\n**You will learn how to:**\n\n* Navigate the Code.org website and teacher tools.\n* Locate and use course lesson plans and teacher resources. \n\n**Suggested time:** 1 hour\n\n\n\n\n"
          student_description: ''
          description_short: ''
          description_audience: ''
          name: csa-self-paced-pl
        csa1-pilot-facilitator:
          lessons:
            Welcome to CSA:
              name: Welcome to CSA
            Classes and Objects:
              name: Classes and Objects
            Calling Methods:
              name: Calling Methods
            Conditionals and Debugging:
              name: Conditionals and Debugging
            More with Objects:
              name: More with Objects
            While Loops and Practice:
              name: While Loops and Practice
            More with Conditionals:
              name: More with Conditionals
            Introduction to Code Reviews:
              name: Introduction to Code Reviews
            Inheritance and Methods:
              name: Inheritance and Methods
            More Methods, More Features:
              name: More Methods, More Features
            Painting Methods:
              name: Painting Methods
            SprayPainter:
              name: SprayPainter
            StampPainter:
              name: StampPainter
            Edge Cases:
              name: Edge Cases
            Software Engineering Wrap Up:
              name: Software Engineering Wrap Up
            Asphalt Art Project - Day 1:
              name: Asphalt Art Project - Day 1
            Asphalt Art Project - Day 2:
              name: Asphalt Art Project - Day 2
            Asphalt Art Project - Day 3:
              name: Asphalt Art Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 1 Pilot Survey:
              name: Unit 1 Pilot Survey
            lesson-1:
              name: Java Lab
            lesson-2:
              name: The Neighborhood
            lesson-3:
              name: The Theater
            lesson-4:
              name: Conditionals and Debugging
            lesson-5:
              name: More with Objects
            lesson-6:
              name: While Loops and Practice
            lesson-7:
              name: More with Conditionals
            lesson-8:
              name: Introduction to Code Reviews
            lesson-9:
              name: Inheritance and Methods
            lesson-10:
              name: More Methods, More Features
            lesson-11:
              name: Painting Methods
            lesson-12:
              name: SprayPainter
            lesson-13:
              name: StampPainter
            lesson-14:
              name: Edge Cases
            lesson-15:
              name: Software Engineering Wrap Up
            lesson-16:
              name: Asphalt Art Project - Day 1
            lesson-17:
              name: Asphalt Art Project - Day 2
            lesson-18:
              name: Asphalt Art Project - Day 3
            lesson-19:
              name: FRQ Day
            lesson-20:
              name: Assessment Day
            lesson-21:
              name: Unit 1 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Object Oriented Programming
          description: 'Believing in one''s own software engineering identity develops confidence and perseverance. This lesson introduces the core values of software engineering and explores common perceptions students may have. Students reflect on how they already practice many of these values to discover their own software engineering identity.

'
          student_description: ''
          description_short: ''
          description_audience: ''
          name: csa1-pilot-facilitator
        csa2-pilot-facilitator:
          lessons:
            Defining Attributes:
              name: Defining Attributes
            Using Variables:
              name: Using Variables
            Writing Constructors:
              name: Writing Constructors
            Adding Multiple Constructors:
              name: Adding Multiple Constructors
            Manipulating Variables and Object Data:
              name: Manipulating Variables and Object Data
            Minimizing Errors in Initialization:
              name: Minimizing Errors in Initialization
            Writing Constructors for Hierarchies:
              name: Writing Constructors for Hierarchies
            Accessing Object Data:
              name: Accessing Object Data
            Modifying Object Data:
              name: Modifying Object Data
            Displaying Object Information:
              name: Displaying Object Information
            The Neighborhood Store Management Project - Day 1:
              name: The Neighborhood Store Management Project - Day 1
            The Neighborhood Store Management Project - Day 2:
              name: The Neighborhood Store Management Project - Day 2
            The Neighborhood Store Management Project - Day 3:
              name: The Neighborhood Store Management Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 2 Pilot Survey:
              name: Unit 2 Pilot Survey
            new lesson:
              name: Defining Attributes
            lesson-2:
              name: The Neighborhood
            lesson-3:
              name: The Theater
            lesson-4:
              name: Adding Multiple Constructors
            lesson-5:
              name: Manipulating Variables and Object Data
            lesson-6:
              name: Minimizing Errors in Initialization
            lesson-7:
              name: Writing Constructors for Hierarchies
            lesson-8:
              name: Accessing Object Data
            lesson-9:
              name: Modifying Object Data
            lesson-10:
              name: Displaying Object Information
            lesson-11:
              name: The Neighborhood Store Management Project - Day 1
            lesson-12:
              name: The Neighborhood Store Management Project - Day 2
            lesson-13:
              name: The Neighborhood Store Management Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-1:
              name: Java Lab
          lesson_groups:
            lesson group:
              display_name: Content
            lessonGroup-2:
              display_name: Show What You Know
            lessonGroup-3:
              display_name: Pilot Survey
            lessonGroup-4:
              display_name: Sandbox
          title: Giving Objects State
          description: |-
            In this unit, students create objects and define instance variables to represent attributes. Students explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. Students implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with objects, students use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa2-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 1
            * Personal Progress Check 5
            * Personal Progress Check 9

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you create objects and define instance variables to represent attributes. You explore creating and using constructors to establish values for these attributes and learn how to work with the data stored in objects. You implement accessor and mutator methods to access and modify the values stored in the instance variables as well as write `toString` methods to output information about the state of the object. While creating and working with your objects, you use the `Scanner` class to obtain user input to use as program data, learn about data types, operators, and expressions to store and manipulate data in variables, and develop an understanding of data encapsulation and object-oriented design decisions.
          description_short: ''
          description_audience: ''
          name: csa2-pilot-facilitator
        csa3-pilot-facilitator:
          lessons:
            Creating Arrays:
              name: Creating Arrays
            Accessing and Modifying Elements:
              name: Accessing and Modifying Elements
            Traversing Arrays with for Loops:
              name: Traversing Arrays with for Loops
            Traversing Arrays with while Loops:
              name: Traversing Arrays with while Loops
            Storing Objects into Arrays:
              name: Storing Objects into Arrays
            Traversing Arrays with Enhanced for Loops:
              name: Traversing Arrays with Enhanced for Loops
            Using Static Variables and Constants:
              name: Using Static Variables and Constants
            Answering Questions with Arrays:
              name: Answering Questions with Arrays
            Solving Problems with Arrays:
              name: Solving Problems with Arrays
            Manipulating Elements in an Array:
              name: Manipulating Elements in an Array
            Concert in The Theater Project - Day 1:
              name: Concert in The Theater Project - Day 1
            Concert in The Theater Project - Day 2:
              name: Concert in The Theater Project - Day 2
            Concert in The Theater Project - Day 3:
              name: Concert in The Theater Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 3 Pilot Survey:
              name: Unit 3 Pilot Survey
            lesson-1:
              name: Java Lab
            lesson-2:
              name: The Neighborhood
            lesson-3:
              name: The Theater
            lesson-4:
              name: Traversing Arrays with while Loops
            lesson-5:
              name: Storing Objects into Arrays
            lesson-6:
              name: Traversing Arrays with Enhanced for Loops
            lesson-7:
              name: Using Static Variables and Constants
            lesson-8:
              name: Answering Questions with Arrays
            lesson-9:
              name: Solving Problems with Arrays
            lesson-10:
              name: Manipulating Elements in an Array
            lesson-11:
              name: Concert in The Theater Project - Day 1
            lesson-12:
              name: Concert in The Theater Project - Day 2
            lesson-13:
              name: Concert in The Theater Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Unit 3 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Expanding Program Data
          description: |-
            In this unit, students create one-dimensional arrays to store primitive values and object references. Students represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, students use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa3-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 4
            * Personal Progress Check 6

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you create one-dimensional arrays to store primitive values and object references. You represent constants using the keyword `final` and data that needs to be shared between objects as static variables. While working with one-dimensional arrays, you use conditionals and iteration to search for values that meet specific criteria or to perform manipulations to solve problems.
          description_short: ''
          description_audience: ''
          name: csa3-pilot-facilitator
        csa4-pilot-facilitator:
          lessons:
            Using Existing Libraries to Add Capabilities:
              name: Using Existing Libraries to Add Capabilities
            Solving Problems with the Math Class:
              name: Solving Problems with the Math Class
            Treating Data as a Different Types:
              name: Treating Data as a Different Type
            Comparing Values to Make Decisions:
              name: Comparing Values to Make Decisions
            Adding Randomness to a Program:
              name: Adding Randomness to a Program
            Comparing Object References and Data:
              name: Comparing Object References and Data
            Providing an Alternate Path of Execution:
              name: Providing an Alternate Path of Execution
            Testing Multiple Conditions:
              name: Testing Multiple Conditions
            Using Logical Operators:
              name: Using Logical Operators
            Applying De Morgan's Laws to Boolean Expressions:
              name: Applying De Morgan's Laws to Boolean Expressions
            Neighborhood Block Party Project - Day 1:
              name: Neighborhood Block Party Project - Day 1
            Neighborhood Block Party Project - Day 2:
              name: Neighborhood Block Party Project - Day 2
            Neighborhood Block Party Project - Day 3:
              name: Neighborhood Block Party Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            lesson-1:
              name: Java Lab
            lesson-3:
              name: The Theater
            lesson-4:
              name: The Playground
            lesson-5:
              name: Unit 4 Pilot Survey
            lesson-6:
              name: Adding Randomness to a Program
            lesson-7:
              name: Comparing Object References and Data
            lesson-8:
              name: Providing an Alternate Path of Execution
            lesson-9:
              name: Testing Multiple Conditions
            lesson-10:
              name: Using Logical Operators
            lesson-11:
              name: Applying De Morgan's Laws to Boolean Expressions
            lesson-2:
              name: The Neighborhood
            lesson-12:
              name: Neighborhood Block Party Project - Day 2
            lesson-13:
              name: Neighborhood Block Party Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Unit 4 Pilot Survey
          title: Expanding Program Logic
          description: |-
            In this unit, students learn how the use of APIs and libraries can expand the functionalities of their programs. Students learn to use relational and logical operators to expand the decisions for conditionals and iteration. Students use casting operators and `Math` class methods as they evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, students develop an understanding of De Morgan's Laws and writing truth tables. Students use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa4-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 3

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you learn how the use of APIs and libraries can expand the functionalities of your programs. You learn to use relational and logical operators to expand the decisions for conditionals and iteration. You use casting operators and `Math` class methods as you evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, you develop an understanding of De Morgan's Laws and writing truth tables. You use these expanded conditions and expressions to evaluate primitive values and object references and make decisions based on the results.
          description_short: ''
          description_audience: ''
          name: csa4-pilot-facilitator
        csa5-pilot-facilitator:
          lessons:
            Creating Tables of Data:
              name: Creating Tables of Data
            Traversing a 2D Array by Rows:
              name: Traversing a 2D Array by Rows
            Traversing a 2D Array by Columns:
              name: Traversing a 2D Array by Columns
            Using Enhanced for Loops:
              name: Using Enhanced for Loops
            Evaluating 2D Arrays:
              name: Evaluating 2D Arrays
            Applying Standard Algorithms:
              name: Applying Standard Algorithms
            Reversing Elements:
              name: Reversing Elements
            Shifting Elements:
              name: Shifting Elements
            Finding Duplicates:
              name: Finding Duplicates
            Searching for Elements:
              name: Searching for Elements
            A Sustainable Neighborhood Project - Day 1:
              name: A Sustainable Neighborhood Project - Day 1
            A Sustainable Neighborhood Project - Day 2:
              name: A Sustainable Neighborhood Project - Day 2
            A Sustainable Neighborhood Project - Day 3:
              name: A Sustainable Neighborhood Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            lesson-1:
              name: Unit 5 Pilot Survey
            lesson-2:
              name: Traversing a 2D Array by Rows
            lesson-3:
              name: Traversing a 2D Array by Columns
            lesson-4:
              name: Using Enhanced for Loops
            lesson-5:
              name: Evaluating 2D Arrays
            lesson-6:
              name: Applying Standard Algorithms
            lesson-7:
              name: Reversing Elements
            lesson-8:
              name: Shifting Elements
            lesson-9:
              name: Finding Duplicates
            lesson-10:
              name: Searching for Elements
            lesson-11:
              name: A Sustainable Neighborhood Project - Day 1
            lesson-12:
              name: A Sustainable Neighborhood Project - Day 2
            lesson-13:
              name: A Sustainable Neighborhood Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandbox
            lessonGroup-5:
              display_name: Pilot Survey
          title: Giving Objects Organization
          description: |-
            In this unit, students use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. Students identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. Students traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms they developed in Unit 3 to access and manipulate elements.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa5-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 8

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs. You identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing these data structures. You traverse 2D arrays using nested `for` loops and nested enhanced `for` loops in row-major and column-major order to apply the standard algorithms you developed in Unit 3 to access and manipulate elements.
          description_short: ''
          description_audience: ''
          name: csa5-pilot-facilitator
        poetry-hoc:
          lessons:
            lesson-1:
              name: Moods & Attitudes
          lesson_groups: {}
          name: poetry-hoc
          title: Poetry HoC
          description_audience: ''
          description_short: 'Hour of Code Activity - V2 '
          description: ''
          student_description: ''
        csdu6-playground:
          lessons:
            lesson-1:
              name: Template
            lesson-2:
              name: Innovations in Computing
            lesson-3:
              name: Board Outputs (LED Buzzer)
            lesson-4:
              name: App Lab Outputs (setProperty)
            lesson-5:
              name: Sensors
            lesson-6:
              name: Board Inputs (Button Toggle)
            lesson-7:
              name: Variables + If-Statements
            lesson-8:
              name: 'Mini-Project: On The Go Apps'
            lesson-9:
              name: Color LEDs
            lesson-10:
              name: App Lab Inputs (getProperty, getText) (Dropdowns Inputs Sliders?)
            lesson-11:
              name: Combining Inputs
            lesson-12:
              name: 'Project: Maker'
            lesson-13:
              name: Accelerometer
            lesson-14:
              name: Music + Arrays
            lesson-15:
              name: 'Mini Project: Sensors'
            lesson-17:
              name: Physical Outputs (LEDs)
            lesson-16:
              name: Physical Inputs
            lesson-18:
              name: Prototyping
            lesson-19:
              name: Project
            lesson-20:
              name: Functions + Functions w/Parameters
            Circuits and Physical Prototypes:
              name: Physical Outputs
            lesson-21:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            lessonGroup-3:
              display_name: Templates
            lessonGroup-2:
              display_name: Chapter 1
            lessonGroup-4:
              display_name: Chapter 2
          name: csdu6-playground
          title: CSD Unit 6 Playground
          description_audience: ''
          description_short: CSD U6 Playground. See Dan Schneider for questions
          description: ''
          student_description: CSD U6 Playground. See Dan Schneider for questions
        hello-world-food:
          lessons:
            lesson-1:
              name: Hello World
          lesson_groups: {}
          name: hello-world-food
          title: 'Hello World: Food'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-u7-dev:
          lessons:
            lesson-1:
              name: Writing Methods to Satisfy Conditions
            lesson-5:
              name: Title Sequence Project
            lesson-2:
              name: Widgets
            lesson-3:
              name: Tools
            lesson-4:
              name: Examples
            lesson-6:
              name: Exploring Method Components and Functionality
            lesson-7:
              name: Using Object References as Parameters
            lesson-8:
              name: Overloading Methods
            lesson-9:
              name: Accessing Object Behavior
            lesson-10:
              name: Overriding Methods
            lesson-11:
              name: Exploring Recursive Methods
            lesson-12:
              name: Comparing Recursive and Iterative Solutions
            lesson-13:
              name: Writing Recursive Methods
            lesson-14:
              name: Maximizing System Reliability
          lesson_groups:
            lessonGroup-2:
              display_name: Lessons
            lessonGroup-3:
              display_name: Project
            lessonGroup-4:
              display_name: Demos and Resources
          name: csa-u7-dev
          title: CSA Unit 7 Development
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        tesstest921:
          lessons:
            lesson-1:
              name: Testing CSA Clone
            lesson-2:
              name: Lesson 2
            lesson-3:
              name: Lesson 3
          lesson_groups: {}
          name: tesstest921
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-animals:
          lessons:
            lesson-1:
              name: Hello World
          lesson_groups: {}
          name: hello-world-animals
          title: 'Hello World: Animals'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-emoji:
          lessons:
            lesson-1:
              name: Hello World
          lesson_groups: {}
          name: hello-world-emoji
          title: 'Hello World: Emoji'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-retro:
          lessons:
            lesson-1:
              name: Hello World
          lesson_groups: {}
          name: hello-world-retro
          title: 'Hello World: Retro'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        hello-world-batman:
          lessons:
            lesson-1:
              name: Hello World
          lesson_groups: {}
          name: hello-world-batman
          title: Hello World
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa4-exemplars:
          lessons:
            new lesson:
              name: Using Existing Libraries to Add Capabilities
            lesson-1:
              name: Using Existing Libraries to Add Capabilities
            lesson-2:
              name: Solving Problems with the Math Class
            lesson-3:
              name: Treating Data as a Different Type
            lesson-4:
              name: Comparing Values to Make Decisions
            lesson-5:
              name: Adding Randomness to a Program
            lesson-6:
              name: Comparing Object References and Data
            lesson-7:
              name: Providing an Alternate Path of Execution
            lesson-8:
              name: Testing Multiple Conditions
            lesson-9:
              name: Using Logical Operators
            lesson-10:
              name: Applying De Morgan's Laws to Boolean Expressions
            lesson-11:
              name: Neighborhood Block Party Project - Day 1
            lesson-12:
              name: Neighborhood Block Party Project - Day 2
            lesson-13:
              name: Neighborhood Block Party Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Comparing Object References and Data
          lesson_groups:
            lesson group:
              display_name: Content
            content:
              display_name: Content
            show_what_you_know:
              display_name: Show What You Know
            lesson_group:
              display_name: Content
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa4-exemplars
          title: Unit 4 - Expanding Program Logic [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        ai-ethics:
          lessons:
            lesson-1:
              name: Our AI Code of Ethics
          lesson_groups: {}
          name: ai-ethics
          title: Our AI Code of Ethics
          description_audience: grades 6-12
          description_short: 'In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. '
          description: In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. Afterward, each group develops at least one solution-oriented principle that addresses their chosen area. These principles are then assembled into a class-wide “Our AI Code of Ethics” resource (e.g. a slide presentation, document, or webpage) for AI creators and legislators everywhere.
          student_description: 'Conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of your choice. '
        dance-unplugged:
          lessons:
            lesson-1:
              name: 'Dance Party: Unplugged'
          lesson_groups: {}
          name: dance-unplugged
          title: Hour of Code - Dance Party - Unplugged
          description_audience: grades K-12
          description_short: 'Learners of all ages get an introductory experience with coding and computer science in a safe, supportive environment and learn to think about controlling actions using events. '
          description: Students will learn that events are a useful way to control when an action happens, and can even be used to make make multiple things act in sync. In programming, you can use events to respond to a user controlling it (like pressing buttons or clicking the mouse). Events can make your program more interesting and interactive.
          student_description: Learn to think about controlling actions using events. Events are widely used in programming and should be easily recognizable after this lesson.
        csc-things:
          lessons:
            lesson-1:
              name: Poetry Scratch Paper
          lesson_groups: {}
          name: csc-things
          title: 'CSC Brain Dump '
          description_audience: ''
          description_short: ''
          description: 'These are just a work in progress :) '
          student_description: ''
        poetry-hoc2:
          lessons:
            lesson-1:
              name: Poetry HoC v2
          lesson_groups: {}
          name: poetry-hoc2
          title: Poetry HoC v2
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poetry-hoc3:
          lessons:
            lesson-1:
              name: Mood Study
          lesson_groups: {}
          name: poetry-hoc3
          title: Poetry HoC v3
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        spritelab-effects-challenge:
          lessons:
            lesson-1:
              name: Sprite Effect Challenge
          lesson_groups: {}
          name: spritelab-effects-challenge
          title: Sprite Effect Challenge
          description_audience: Intermediate/advanced users of Sprite Lab
          description_short: Take the challenge to create your own sprite effect using Sprite Lab!
          description: ''
          student_description: ''
        csa-u8-dev:
          lessons:
            lesson-1:
              name: Widgets
            lesson-2:
              name: Tools
            lesson-3:
              name: Examples
          lesson_groups:
            lessonGroup-2:
              display_name: Demos and Resources
          name: csa-u8-dev
          title: CSA Unit 8 Development
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poem-art:
          lessons:
            lesson-1:
              name: Poem Art
          lesson_groups: {}
          name: poem-art
          title: Poem Art
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        poetry:
          lessons:
            lesson-1:
              name: Poem Art
            lesson-2:
              name: Code Your Own Poem
            lesson-3:
              name: Playing with Words
            lesson-4:
              name: Build a Poem Generator App
            lesson-5:
              name: Choosing Words Carefully
            lesson-6:
              name: Poetry Circle
            lesson-7:
              name: Responding to Words
          lesson_groups: {}
          name: poetry
          title: Computer Science and Poetry
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        spelling-bee:
          lessons:
            lesson-1:
              name: Spelling Bee
          lesson_groups: {}
          name: spelling-bee
          title: Spelling Bee
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        outbreak-csc:
          lessons:
            lesson-1:
              name: Outbreak Day 1
            lesson-2:
              name: Outbreak Day 2
          lesson_groups: {}
          name: outbreak-csc
          title: Outbreak
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        explore-data-1:
          lessons:
            lesson-1:
              name: Exploring Box Plots and Histograms
          lesson_groups: {}
          name: explore-data-1
          title: Exploring Box Plots and Histograms
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        counting-csc:
          lessons:
            lesson-1:
              name: Counting with Laurel
          lesson_groups: {}
          name: counting-csc
          title: Counting with Laurel
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa5-exemplars:
          lessons:
            lesson-1:
              name: Creating Tables of Data
            lesson-2:
              name: Traversing a 2D Array by Rows
            lesson-3:
              name: Traversing a 2D Array by Columns
            lesson-4:
              name: Using Enhanced for Loops
            lesson-5:
              name: Evaluating 2D Arrays
            lesson-6:
              name: Applying Standard Algorithms
            lesson-7:
              name: Shifting Elements
            lesson-8:
              name: Finding Duplicates
            lesson-9:
              name: Searching for Elements
            lesson-10:
              name: A Sustainable Neighborhood Project - Day 1
            lesson-11:
              name: A Sustainable Neighborhood Project - Day 2
            lesson-12:
              name: A Sustainable Neighborhood Project - Day 3
            lesson-13:
              name: FRQ Day
            lesson-14:
              name: Assessment Day
            lesson-15:
              name: Reversing Elements
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa5-exemplars
          title: Unit 5 - Giving Objects Organization [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-examples-21:
          lessons:
            lesson-1:
              name: Unit 1 Projects
            lesson-2:
              name: Unit 2 Projects
            lesson-3:
              name: Unit 3 Projects
            lesson-4:
              name: Unit 4 Projects
            lesson-5:
              name: Unit 5 Projects
            lesson-6:
              name: Unit 6 Projects
            lesson-7:
              name: Unit 7 Projects
            lesson-8:
              name: Unit 8 Projects
          lesson_groups: {}
          name: csa-examples-21
          title: CSA Unit Project Examples [2021-2022]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd-post-survey-2021:
          lessons:
            lesson-1:
              name: Post-Course Survey
          lesson_groups: {}
          name: csd-post-survey-2021
          title: CS Discoveries Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Discoveries Post-Course Survey. This unit can be assigned after students complete their final unit in CS Discoveries.
          student_description: This unit contains a survey for when your class is finished with the units in CS Discoveries. Your teacher will tell you when it's time to take this survey.
        csa-pl-test:
          lessons:
            lesson-1:
              name: Module 1 - Getting Started
          lesson_groups: {}
          name: csa-pl-test
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-pl-module-1-test:
          lessons: {}
          lesson_groups: {}
          name: csa-pl-module-1-test
          title: Orientation to Code.org and CSA
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-pl-module-2-test:
          lessons: {}
          lesson_groups: {}
          name: csa-pl-module-2-test
          title: Navigating Code.org’s tools
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-pl-module-3-test:
          lessons: {}
          lesson_groups: {}
          name: csa-pl-module-3-test
          title: Support with text-based programming
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa6-pilot-facilitator:
          lessons:
            Documenting Program Code:
              name: Documenting Program Code
            Exploring Integer and Double Objects:
              name: Exploring Integer and Double Objects
            Using ArrayLists to Store Data:
              name: Using ArrayLists to Store Data
            Working with ArrayList Data:
              name: Working with ArrayList Data
            Storing Objects in an ArrayList:
              name: Storing Objects in an ArrayList
            Removing Data from an ArrayList:
              name: Removing Data from an ArrayList
            Using String Methods:
              name: Using String Methods
            Comparing Strings:
              name: Comparing Strings
            Solving Problems with Strings:
              name: Solving Problems with Strings
            Solving Problems with ArrayLists:
              name: Solving Problems with ArrayLists
            Neighborhood Lit Fest Project - Day 1:
              name: Neighborhood Lit Fest Project - Day 1
            Neighborhood Lit Fest Project - Day 2:
              name: Neighborhood Lit Fest Project - Day 2
            Neighborhood Lit Fest Project - Day 3:
              name: Neighborhood Lit Fest Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Unit 6 Pilot Survey
            lesson-2:
              name: Exploring Integer and Double Objects
            lesson-3:
              name: Using ArrayLists to Store Data
            lesson-4:
              name: Working with ArrayList Data
            lesson-5:
              name: Storing Objects in an ArrayList
            lesson-6:
              name: Removing Data from an ArrayList
            lesson-7:
              name: Using String Methods
            lesson-8:
              name: Comparing Strings
            lesson-9:
              name: Solving Problems with Strings
            lesson-10:
              name: Solving Problems with ArrayLists
            lesson-11:
              name: Neighborhood Lit Fest Project - Day 1
            lesson-12:
              name: Neighborhood Lit Fest Project - Day 2
            lesson-13:
              name: Neighborhood Lit Fest Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Expanding Program Capabilities
          description: |-
            In this unit, students use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. Students explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. Students use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, students write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, students identify and document preconditions and postconditions of objects and methods.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa6-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 2
            * Personal Progress Check 7

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you use `ArrayList`s to store program data and differentiate between when to use 1D and 2D arrays and `ArrayList`s. You explore the benefits and functionality of an `ArrayList`, using these to solve problems involving numerical and object data. You use methods in the `String` class to analyze and process text obtained from user and file input. Throughout the unit, you write program documentation using single-line comments, multi-line comments, and Javadoc comments to create API documentation. In the process, you identify and document preconditions and postconditions of objects and methods.
          description_short: ''
          description_audience: ''
          name: csa6-pilot-facilitator
        ai-ethics-2021:
          lessons:
            Our AI Code of Ethics:
              name: Our AI Code of Ethics
            lesson-1:
              name: Our AI Code of Ethics
          title: Our AI Code of Ethics
          description: In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. Afterward, each group develops at least one solution-oriented principle that addresses their chosen area. These principles are then assembled into a class-wide “Our AI Code of Ethics” resource (e.g. a slide presentation, document, or webpage) for AI creators and legislators everywhere.
          student_description: 'Conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of your choice. '
          description_short: 'In small groups, students conduct research using articles and videos that expose ethical pitfalls in an Artificial Intelligence (AI) area of their choice. '
          description_audience: grades 6-12
          lesson_groups: {}
          name: ai-ethics-2021
        poem-art-2021:
          lessons:
            Poem Art:
              name: Poem Art
            lesson-1:
              name: Poem Art
          title: Poem Art
          description: "This lesson can be completed as a 1-hour standalone lesson. There is also an option to use this lesson as the first lesson of the multi-lesson module called [Coding with Poetry](https://studio.code.org/s/poetry). \n\nThe Coding with Poetry is part of Code.org’s [CS Connections](code.org/educate/csc) curriculum, which is meant to integrate CS into other subject areas like math, ELA, and science with alignment to CCSS, NGSS, and CSTA standards. "
          student_description: ''
          description_short: 'This lesson can be completed as a 1-hour standalone lesson. There is also an option to use this lesson as the first lesson of the multi-lesson module called Coding with Poetry. '
          description_audience: ''
          lesson_groups: {}
          name: poem-art-2021
        poetry-2021:
          lessons:
            Poem Art:
              name: Poem Art
            Code Your Own Poem:
              name: Code Your Own Poem
            Playing with Words:
              name: Playing with Words
            Build a Poem Generator:
              name: Build a Poem Generator App
            Choosing Words Carefully:
              name: Choosing Words Carefully
            Responding to Words:
              name: Responding to Words
            Poetry Circle:
              name: Poetry Circle
            lesson-1:
              name: Poem Art
            lesson-2:
              name: Code Your Own Poem
            lesson-3:
              name: Playing with Words
            lesson-4:
              name: Build a Poem Generator
            lesson-5:
              name: Choosing Words Carefully
            lesson-7:
              name: Responding to Words
            lesson-6:
              name: Poetry Circle
          title: Coding with Poetry
          description: "This module is designed to ensure students have a shareable app by the end of each lesson, so each lesson is a potential stopping point. If your class finishes the entire 7-part module, students will write their own poems, investigate word choice, learn how to use prompts and variables, learn how to code conditional statements, and create a poem generator app to share with friends. \n\nThe Coding with Poetry is part of Code.org’s [CS Connections](https://www.code.org/educate/csc) curriculum, which is meant to integrate CS into other subject areas like math, ELA, and science with alignment to CCSS, NGSS, and CSTA standards. \n\n**First time teaching with Code.org?** To get started, watch these videos:\n* [Basic Features of Code.org](https://www.youtube.com/watch?v=lYZq1HVTAIY) \n* [Creating a Class Section](https://youtu.be/4Wugxc80fNU)\n* [The Student Experience](https://youtu.be/wzz3jJZoj20)\n* [Progress, Feedack, and Assessment](https://youtu.be/c0pGfCpd6MI)"
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: poetry-2021
        hello-world-food-2021:
          lessons:
            Hello World:
              name: 'Hello World: Food'
            lesson-1:
              name: Hello World
          title: 'Hello World: Food'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-food-2021
        hello-world-emoji-2021:
          lessons:
            Hello World:
              name: 'Hello World: Emoji'
            lesson-1:
              name: Hello World
          title: 'Hello World: Emoji'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-emoji-2021
        hello-world-animals-2021:
          lessons:
            Hello World:
              name: 'Hello World: Animals'
            lesson-1:
              name: Hello World
          title: 'Hello World: Animals'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-animals-2021
        hello-world-retro-2021:
          lessons:
            Hello World:
              name: 'Hello World: Retro'
            lesson-1:
              name: Hello World
          title: 'Hello World: Retro'
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: hello-world-retro-2021
        spelling-bee-2021:
          lessons:
            Spelling Bee:
              name: Spelling With Bee
            lesson-1:
              name: Spelling Bee
          title: Spelling With Bee
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: spelling-bee-2021
        explore-data-1-2021:
          lessons:
            Exploring Box Plots and Histograms:
              name: Data Visualization
            lesson-1:
              name: Exploring Box Plots and Histograms
          title: Data Visualization
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: explore-data-1-2021
        counting-csc-2021:
          lessons:
            Counting with Laurel:
              name: Counting with Laurel
            lesson-1:
              name: Counting with Laurel
          title: Counting with Laurel
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: counting-csc-2021
        hello-world-gabrielle-validation:
          lessons:
            lesson-1:
              name: Lesson
          lesson_groups: {}
          name: hello-world-gabrielle-validation
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa6-exemplars:
          lessons:
            lesson-1:
              name: Documenting Program Code
            lesson-2:
              name: Exploring Integer and Double Objects
            lesson-3:
              name: Using ArrayLists to Store Data
            lesson-4:
              name: Working with ArrayList Data
            lesson-5:
              name: Storing Objects in an ArrayList
            lesson-6:
              name: Removing Data from an ArrayList
            lesson-7:
              name: Using String Methods
            lesson-8:
              name: Comparing Strings
            lesson-9:
              name: Solving Problems with Strings
            lesson-10:
              name: Solving Problems with ArrayLists
            lesson-11:
              name: Neighborhood Lit Fest Project - Day 1
            lesson-12:
              name: Neighborhood Lit Fest Project - Day 2
            lesson-13:
              name: Neighborhood Lit Fest Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa6-exemplars
          title: Unit 6 - Expanding Program Capabilities [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        2022drafting:
          lessons:
            lesson-1:
              name: Counting with Variables
            lesson-2:
              name: Lots of Sprites
            lesson-3:
              name: 'Mini-Project: Collector Game'
            lesson-4:
              name: Outbreak Simulator
            lesson-5:
              name: 'Mini-Project: About Me'
            lesson-6:
              name: Toolboxes
            Drawing with Loops:
              name: Drawing with Loops
            Using Variables with the Artist:
              name: Using Variables with the Artist
            Programming with the Bee:
              name: Programming with the Bee
            Variables with the Bee:
              name: Variables with the Bee
            For Loop Fun:
              name: For Loop Fun
            For Loops with Bee:
              name: For Loops with Bee
            For Loops with Artist:
              name: For Loops with Artist
            Follow the Algorithm:
              name: Follow the Algorithm
            'Hello World: Food':
              name: 'Hello World: Food'
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
          lesson_groups:
            lessonGroup-2:
              display_name: Variables, Pt 2
            lessonGroup-3:
              display_name: Modified Lessons
            lessonGroup-4:
              display_name: Toolboxes, etc.
            lessonGroup-5:
              display_name: Course F Variables (Deprecated)
            lessonGroup-6:
              display_name: Course F For Loops (Deprecated)
            lessonGroup-7:
              display_name: Course E Sprites (Deprecated)
            lessonGroup-8:
              display_name: Hour of Code
          name: 2022drafting
          title: Planning Script for CSF 2022
          description_audience: ''
          description_short: Internal
          description: ''
          student_description: ''
        csa7-exemplars:
          lessons:
            lesson-1:
              name: Writing Methods to Satisfy Conditions
            lesson-2:
              name: Exploring Method Components and Functionality
            lesson-3:
              name: Using Object References as Parameters
            lesson-4:
              name: Overloading Methods
            lesson-5:
              name: Accessing Object Behavior
            lesson-6:
              name: Overriding Methods
            lesson-7:
              name: Exploring Recursive Methods
            lesson-8:
              name: Comparing Recursive and Iterative Solutions
            lesson-9:
              name: Writing Recursive Methods
            lesson-10:
              name: Maximizing System Reliability
            lesson-11:
              name: Title Sequence Project - Day 1
            lesson-12:
              name: Title Sequence Project - Day 2
            lesson-13:
              name: Title Sequence Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa7-exemplars
          title: Unit 7 - Expanding Software Design [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csf-2022-pilot:
          lessons:
            lesson-1:
              name: Lots of Sprites
            lesson-2:
              name: Counting with Variables
            lesson-3:
              name: 'Mini-Project: Collector Game'
            Introducing Sprite Lab:
              name: Introducing Sprite Lab
            Making Sprites:
              name: Making Sprites
            Sprites in Action:
              name: Sprites in Action
            'Mini-Project: Virtual Pet':
              name: 'Mini-Project: Virtual Pet'
            Blank Space Stories:
              name: Blank Space Stories
            Text and Prompts:
              name: Text and Prompts
            'Mini-Project: User Input Programs':
              name: 'Mini-Project: User Input Programs'
            Lots of Sprites:
              name: "[New] Lots of Sprites"
            Counting with Variables:
              name: "[New] Counting with Variables"
            'Mini-Project: Collector Game':
              name: "[New] Mini-Project: Collector Game"
            Simulating Experiments:
              name: Simulating Experiments
            End of Course Project:
              name: "[New] End of Course Project"
          lesson_groups:
            lessonGroup-2:
              display_name: Sprites
            lessonGroup-3:
              display_name: Variables
            lessonGroup-4:
              display_name: End of Course Project
          name: csf-2022-pilot
          title: Course F 2022 Pilot
          description_audience: Fifth grade
          description_short: 'Learn about sprites and variables by programming in Sprite Lab. '
          description: "Learn about sprites and variables by programming in Sprite Lab.  \n\n**Pilot 2022**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June 2022 only. Note that the final version of Course F (2022) will include additional lessons and may have other differences. CS Fundamentals (2022) will launch this summer.\n\nWe need your feedback, especially on the lessons marked **[New]**. If you are eager to start the new lessons, you can give students a basic introduction to Sprite Lab using our  [Hello World](https://code.org/helloworld) Hour of Code tutorial."
          student_description: "Learn about sprites and variables by programming in Sprite Lab. \n\n**Pilot 2022**: Thank you for trying out these new lessons. We appreciate any feedback. This pilot course will be available until June 2022 only."
        csd6-pilot-2022:
          lessons:
            lesson-1:
              name: 'Mini-Project: On-The-Go App'
            lesson-2:
              name: 'Project: Human Device Interaction'
            lesson-3:
              name: 'Mini-Project: Interactive Art'
            Project - Prototype an Innovation:
              name: Project - Prototype an Innovation
            Innovations in Computing:
              name: Innovations in Computing
            Designing Screens with Code:
              name: Updating Screen Elements
            The Circuit Playground:
              name: The Circuit Playground
            Board Events:
              name: Board Events
            Arrays and Color LEDs:
              name: Color LEDs
            Getting Properties:
              name: Getting Screen Inputs
            lesson-9:
              name: Variables and If Statements
            lesson-10:
              name: Combining Inputs and Outputs
            Analog Input:
              name: Board Sensors
            Accelerometer:
              name: Accelerometer
            Making Music:
              name: Making Music
            Functions with Parameters:
              name: Functions
            Circuits and Physical Prototypes:
              name: Physical Outputs and LEDs
            Project - Make a Game:
              name: Project - Make a Game
            Physical Outputs:
              name: Physical Inputs and Buttons
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1
            lessonGroup-3:
              display_name: Chapter 2
          name: csd6-pilot-2022
          title: Physical Computing Pilot (2022)
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa8-exemplars:
          lessons:
            lesson-1:
              name: Planning a Project
            lesson-2:
              name: Searching for Data
            lesson-3:
              name: Implementing the Binary Search
            lesson-4:
              name: Implementing a Recursive Binary Search
            lesson-5:
              name: Implementing the Selection Sort
            lesson-6:
              name: Implementing the Insertion Sort
            lesson-7:
              name: Implementing the Merge Sort
            lesson-8:
              name: Expanding Standard Algorithms
            lesson-9:
              name: Traversing Multiple Lists
            lesson-10:
              name: Defending Privacy and Security
            lesson-11:
              name: Inclusive Playground Project - Day 1
            lesson-12:
              name: Inclusive Playground Project - Day 2
            lesson-13:
              name: Inclusive Playground Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa8-exemplars
          title: Unit 8 - Giving Objects Life [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        alltheselfpacedplthings:
          lessons:
            Instructor In Training Levels:
              name: Instructor In Training Levels
            Dani Test Lesson 2:
              name: Instructor in Training LevelGroup
          lesson_groups: {}
          name: alltheselfpacedplthings
          title: All the Self Paced PL Things
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa7-pilot-facilitator:
          lessons:
            Accessing Object Behavior:
              name: Writing Methods to Satisfy Conditions
            Writing Methods to Satisfy Conditions:
              name: Exploring Method Components and Functionality
            Exploring Method Components and Functionality:
              name: Using Object References as Parameters
            Using Object References as Parameters:
              name: Overloading Methods
            Overloading Methods:
              name: Accessing Object Behavior
            Overriding Methods:
              name: Overriding Methods
            Exploring Recursive Methods:
              name: Exploring Recursive Methods
            Comparing Recursive and Iterative Solutions:
              name: Comparing Recursive and Iterative Solutions
            Writing Recursive Methods:
              name: Writing Recursive Methods
            Maximizing System Reliability:
              name: Maximizing System Reliability
            Title Sequence Project - Day 1:
              name: Title Sequence Project - Day 1
            Title Sequence Project - Day 2:
              name: Title Sequence Project - Day 2
            Title Sequence Project - Day 3:
              name: Title Sequence Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 7 Pilot Survey:
              name: Unit 7 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-10:
              name: Accessing Object Behavior
            lesson-6:
              name: Writing Methods to Satisfy Conditions
            lesson-7:
              name: Exploring Method Components and Functionality
            lesson-8:
              name: Using Object References as Parameters
            lesson-9:
              name: Overloading Methods
            lesson-11:
              name: Overriding Methods
            lesson-12:
              name: Exploring Recursive Methods
            lesson-13:
              name: Comparing Recursive and Iterative Solutions
            lesson-14:
              name: Writing Recursive Methods
            lesson-15:
              name: Maximizing System Reliability
            lesson-1:
              name: Title Sequence Project - Day 1
            lesson-2:
              name: Title Sequence Project - Day 2
            lesson-3:
              name: Title Sequence Project - Day 3
            lesson-4:
              name: FRQ Day
            lesson-5:
              name: Assessment Day
            lesson-16:
              name: Unit 7 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Expanding Software Design
          description: In this unit, students practice software design and development using the skills and programming constructs they have learned to develop a title sequence for their favorite content creator. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. Students explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.
          student_description: In this unit, you practice software design and development using the skills and programming constructs you have learned to develop a title sequence for your favorite content creator. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your projects meet specified requirements. You explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
          description_short: ''
          description_audience: ''
          name: csa7-pilot-facilitator
        csa8-pilot-facilitator:
          lessons:
            Planning a Project:
              name: Planning a Project
            Searching for Data:
              name: Searching for Data
            Implementing the Binary Search:
              name: Implementing the Binary Search
            Implementing a Recursive Binary Search:
              name: Implementing a Recursive Binary Search
            Implementing the Selection Sort:
              name: Implementing the Selection Sort
            Implementing the Insertion Sort:
              name: Implementing the Insertion Sort
            Implementing the Merge Sort:
              name: Implementing the Merge Sort
            Expanding Standard Algorithms:
              name: Expanding Standard Algorithms
            Traversing Multiple Lists:
              name: Traversing Multiple Lists
            Defending Privacy and Security:
              name: Defending Privacy and Security
            Inclusive Playground Project - Day 1:
              name: Inclusive Playground Project - Day 1
            Inclusive Playground Project - Day 2:
              name: Inclusive Playground Project - Day 2
            Inclusive Playground Project - Day 3:
              name: Inclusive Playground Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 8 Pilot Survey:
              name: Unit 8 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Planning a Project
            lesson-2:
              name: Searching for Data
            lesson-3:
              name: Implementing the Binary Search
            lesson-4:
              name: Implementing a Recursive Binary Search
            lesson-5:
              name: Implementing the Selection Sort
            lesson-10:
              name: Implementing the Insertion Sort
            lesson-6:
              name: Implementing the Merge Sort
            lesson-7:
              name: Expanding Standard Algorithms
            lesson-8:
              name: Traversing Multiple Lists
            lesson-9:
              name: Defending Privacy and Security
            lesson-11:
              name: Inclusive Playground Project - Day 1
            lesson-12:
              name: Inclusive Playground Project - Day 2
            lesson-13:
              name: Inclusive Playground Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Unit 8 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Giving Objects Life
          description: |-
            In this unit, students implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. Students analyze the efficiency of searching and sorting algorithms and expand the standard algorithms they have developed throughout the course to solve more complex problems. Throughout the unit, students apply their knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. Students wrap up the unit and course considering the privacy and security of their programs and users.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa8-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 10

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. You analyze the efficiency of searching and sorting algorithms and expand the standard algorithms you have developed throughout the course to solve more complex problems. Throughout the unit, you apply your knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. You wrap up the unit and course considering the privacy and security of their programs and users.
          description_short: ''
          description_audience: ''
          name: csa8-pilot-facilitator
        csa9-pilot-facilitator:
          title: AP Exam Review and Practice
          description: This unit prepares students for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. Students identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          student_description: This unit prepares you for the AP CSA Exam by reviewing concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. You identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          description_short: ''
          description_audience: ''
          lessons:
            The AP CSA Exam:
              name: The AP CSA Exam
            MCQ Pre-Assessment:
              name: MCQ Pre-Assessment
            MCQ Study Plan:
              name: MCQ Study Plan
            MCQ Practice – Day 1:
              name: MCQ Practice – Day 1
            MCQ Practice – Day 2:
              name: MCQ Practice – Day 2
            FRQ Pre-Assessment:
              name: FRQ Pre-Assessment
            FRQ Study Plan:
              name: FRQ Study Plan
            FRQ Practice – Day 1:
              name: FRQ Practice – Day 1
            FRQ Practice – Day 2:
              name: FRQ Practice – Day 2
            Mock MCQ Exam – Day 1:
              name: Mock MCQ Exam – Day 1
            Mock MCQ Exam – Day 2:
              name: Mock MCQ Exam – Day 2
            Mock MCQ Exam – Day 3:
              name: Mock MCQ Exam – Day 3
            Mock FRQ Exam – Day 1:
              name: Mock FRQ Exam – Day 1
            Mock FRQ Exam – Day 2:
              name: Mock FRQ Exam – Day 2
            Mock FRQ Exam – Day 3:
              name: Mock FRQ Exam – Day 3
          lesson_groups:
            lessonGroup-2:
              display_name: Review and Practice
            lessonGroup-3:
              display_name: Mock Exams
          name: csa9-pilot-facilitator
        coursea-2022:
          lessons:
            Safety in My Online Neighborhood:
              name: Safety in My Online Neighborhood
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Happy Maps:
              name: Happy Maps
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming with Scrat:
              name: Programming with Scrat
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Happy Loops:
              name: Happy Loops
            Loops with Scrat:
              name: Loops with Scrat
            Loops with Laurel:
              name: Loops with Laurel
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            The Big Event Jr:
              name: The Big Event Jr.
            'Mini-Project: On the Move with Play Lab':
              name: 'Mini-Project: On the Move with Play Lab'
            End of Course Project:
              name: End of Course Project
            'Programming: Happy Maps':
              name: Happy Maps
            Programming in Ice Age:
              name: Programming with Scrat
            'Loops: Happy Loops':
              name: Happy Loops
            Loops in Ice Age:
              name: Loops with Scrat
            Loops in Collector:
              name: Loops with Laurel
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: 'Mini-Project: On the Move with Play Lab'
            lesson-1:
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            lessonGroup-5:
              display_name: End of Course Project
          title: Course A (2022)
          description: 'Course A offers a computer science curriculum for beginning readers, including Kindergarten students. Students will learn to program using commands like loops and events. The lessons featured in this course also teach students to meaningfully collaborate with others, investigate different problem-solving techniques, persist in the face of challenging tasks, and learn about internet safety. '
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers.
          description_audience: 'Ages: 4-7'
          name: coursea-2022
        express-2022:
          lessons:
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Debugging in Maze:
              name: Debugging in Maze
            Collecting Treasure with Laurel:
              name: Collecting Treasure with Laurel
            Creating Art with Code:
              name: Creating Art with Code
            Swimming Fish in Sprite Lab:
              name: Swimming Fish in Sprite Lab
            Making Sprites:
              name: Making Sprites
            Sprites in Action:
              name: Sprites in Action
            Virtual Pet with Sprite Lab:
              name: Virtual Pet with Sprite Lab
            Dance Party:
              name: Dance Party
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            'Mini-Project: Sticker Art':
              name: 'Mini-Project: Sticker Art'
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Snowflakes with Anna and Elsa:
              name: Snowflakes with Anna and Elsa
            Looking Ahead with Minecraft:
              name: Looking Ahead with Minecraft
            If/Else with Bee:
              name: If/Else with Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Until Loops in Maze:
              name: Until Loops in Maze
            Harvesting with Conditionals:
              name: Harvesting with Conditionals
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions with Artist:
              name: Functions with Artist
            Functions with Harvester:
              name: Functions with Harvester
            Text and Prompts:
              name: Text and Prompts
            Using Variables with the Artist:
              name: Using Variables with the Artist
            Variables with the Bee:
              name: Variables with the Bee
            For Loops with Bee:
              name: For Loops with Bee
            For Loops with Artist:
              name: For Loops with Artist
            End of Course Project:
              name: End of Course Project
            Debugging with Scrat:
              name: Debugging in Maze
            lesson-2:
              name: Making Sprites
            lesson-3:
              name: Sprites in Action
            lesson-1:
              name: Dance Party
            Sticker Art with Loops:
              name: 'Mini-Project: Sticker Art'
            'Looking Ahead with Minecraft ':
              name: Looking Ahead with Minecraft
            While Loops with the Farmer:
              name: While Loops in Farmer
            lesson-4:
              name: Text and Prompts
            Variables with Artist:
              name: Using Variables with the Artist
            Changing Variables with Bee:
              name: Variables with the Bee
            "[New] Counting with Variables":
              name: Counting with Variables
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_sprites:
              display_name: Sprites
            lessonGroup-9:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            csf_functions:
              display_name: Functions
            csf_variables:
              display_name: Variables
            csf_for_loops:
              display_name: For Loops
            end_of_course_project:
              display_name: End of Course Project
          title: Express Course (2022)
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          description_short: 'An introduction to computer science: combines the best of our elementary school curriculum for older students.'
          description_audience: 'Ages: 9-18'
          name: express-2022
        csp1-2022:
          lessons:
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Welcome to CSP:
              name: Welcome to CSP
            Representing Information:
              name: Representing Information
            Circle Square Patterns:
              name: Circle Square Patterns
            Binary Numbers:
              name: Binary Numbers
            Overflow and Rounding:
              name: Overflow and Rounding
            Representing Text:
              name: Representing Text
            Black and White Images:
              name: Black and White Images
            Color Images:
              name: Color Images
            Lossless Compression:
              name: Lossless Compression
            Lossy Compression:
              name: Lossy Compression
            Intellectual Property:
              name: Intellectual Property
            Project   Digital Information Dilemmas Part 1:
              name: Project   Digital Information Dilemmas Part 1
            Project   Digital Information Dilemmas Part 2:
              name: Project   Digital Information Dilemmas Part 2
            Assessment Day:
              name: Assessment Day
            Project - Digital Information Dilemmas Part 1:
              name: Project   Digital Information Dilemmas Part 1
            Project - Digital Information Dilemmas Part 2:
              name: Project   Digital Information Dilemmas Part 2
            'Lesson 14: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csp_unit1_2020:
              display_name: 'Unit 1: Digital Information'
          title: Digital Information ('22-'23)
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          student_description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers. Learn how complex information like numbers, text, images, and sound are represented in text, how compression works, and the broader social impacts of digitizing the world's information.
          description_short: Explore the challenges and impacts of representing information about the world around you in bits.
          description_audience: ''
          name: csp1-2022
        csp2-2022:
          lessons:
            Welcome to the Internet:
              name: Welcome to the Internet
            Building a Network:
              name: Building a Network
            The Need for Addressing:
              name: The Need for Addressing
            Routers and Redundancy:
              name: Routers and Redundancy
            Packets:
              name: Packets
            HTTP and DNS:
              name: HTTP and DNS
            Project   Internet Dilemmas Part 1:
              name: Project   Internet Dilemmas Part 1
            Project   Internet Dilemmas Part 2:
              name: Project   Internet Dilemmas Part 2
            Assessment Day:
              name: Assessment Day
            DNS and HTTP:
              name: HTTP and DNS
            Project - Internet Dilemmas Part 1:
              name: Project   Internet Dilemmas Part 1
            Project - Internet Dilemmas Part 2:
              name: Project   Internet Dilemmas Part 2
            'Lesson 9: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csp_unit2_2020:
              display_name: 'Unit 2: The Internet'
          title: The Internet ('22-'23)
          description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          student_description: This unit reveals how the Internet was designed to connect billions of devices and people to one another. Learn how the different protocols of the Internet work and actually build them yourself using the Internet Simulator. Then consider the impacts the Internet has had, both good and bad, on modern life.
          description_short: Build the internet from the ground up using the Internet Simulator.
          description_audience: ''
          name: csp2-2022
        csp3-2022:
          lessons:
            Introduction to Apps:
              name: Introduction to Apps
            Introduction to Design Mode:
              name: Introduction to Design Mode
            Project   Designing an App Part 1:
              name: Project   Designing an App Part 1
            Project   Designing an App Part 2:
              name: Project   Designing an App Part 2
            The Need for Programming Languages:
              name: The Need for Programming Languages
            Intro to Programming:
              name: Intro to Programming
            Debugging:
              name: Debugging
            Project   Designing an App Part 3:
              name: Project   Designing an App Part 3
            Project   Designing an App Part 4:
              name: Project   Designing an App Part 4
            Project   Designing an App Part 5:
              name: Project   Designing an App Part 5
            Assessment Day:
              name: Assessment Day
            Project - Designing an App Part 1:
              name: Project   Designing an App Part 1
            Project - Designing an App Part 2:
              name: Project   Designing an App Part 2
            Project - Designing an App Part 3:
              name: Project   Designing an App Part 3
            Project - Designing an App Part 4:
              name: Project   Designing an App Part 4
            Project - Designing an App Part 5:
              name: Project   Designing an App Part 5
            'Lesson 11: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csp_unit3_2020:
              display_name: 'Unit 3: Intro to App Design'
          title: Intro to App Design ('22-'23)
          description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          student_description: This unit is an introduction to programming and app design with a heavy focus on important skills like debugging, pair programming, and user testing. Learn how to design user interfaces and write event-driven programs in App Lab and then design a project that teaches your classmates about a topic of your choosing.
          description_short: Design your first app and learn how programmers collaborate and interact with users to build the best possible solutions to problems.
          description_audience: ''
          name: csp3-2022
        csp4-2022:
          lessons:
            Variables Explore:
              name: Variables Explore
            Variables Investigate:
              name: Variables Investigate
            Variables Practice:
              name: Variables Practice
            Variables Make:
              name: Variables Make
            Conditionals Explore:
              name: Conditionals Explore
            Conditionals Investigate:
              name: Conditionals Investigate
            Conditionals Practice:
              name: Conditionals Practice
            Conditionals Make:
              name: Conditionals Make
            Functions Explore / Investigate:
              name: Functions Explore / Investigate
            Functions Practice:
              name: Functions Practice
            Functions Make:
              name: Functions Make
            Project   Decision Maker App Part 1:
              name: Project   Decision Maker App Part 1
            Project   Decision Maker App Part 2:
              name: Project   Decision Maker App Part 2
            Project   Decision Maker App Part 3:
              name: Project   Decision Maker App Part 3
            Assessment Day:
              name: Assessment Day
            Conditional Make:
              name: Conditionals Make
            Project - Decision Maker App Part 1:
              name: Project   Decision Maker App Part 1
            Project - Decision Maker App Part 2:
              name: Project   Decision Maker App Part 2
            Project - Decision Maker App Part 3:
              name: Project   Decision Maker App Part 3
            'Lesson 15: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csp_variables:
              display_name: Variables
            csp_conditionals:
              display_name: Conditionals
            csp_functions:
              display_name: Functions
            csp_project:
              display_name: Project
          title: Variables, Conditionals, and Functions ('22-'23)
          description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          student_description: This unit explores how variables, conditionals, and functions allow for the design of increasingly complex apps. Learn how to program with these three new concepts through a sequence of collaborative activities. Then build your own decision maker app to share with friends and help them make a decision.
          description_short: Learn how to build apps that store information, make decisions, and keep code organized.
          description_audience: ''
          name: csp4-2022
        csp5-2022:
          lessons:
            Lists Explore:
              name: Lists Explore
            Lists Investigate:
              name: Lists Investigate
            Lists Practice:
              name: Lists Practice
            Lists Make:
              name: Lists Make
            Loops Explore:
              name: Loops Explore
            Loops Investigate:
              name: Loops Investigate
            Loops Practice:
              name: Loops Practice
            Loops Make:
              name: Loops Make
            Traversals Explore:
              name: Traversals Explore
            Traversals Investigate:
              name: Traversals Investigate
            Traversals Practice:
              name: Traversals Practice
            Traversals Make:
              name: Traversals Make
            Project   Hackathon Part 1:
              name: Project   Hackathon Part 1
            Project   Hackathon Part 2:
              name: Project   Hackathon Part 2
            Project   Hackathon Part 3:
              name: Project   Hackathon Part 3
            Project   Hackathon Part 4:
              name: Project   Hackathon Part 4
            Project   Hackathon Part 5:
              name: Project   Hackathon Part 5
            Assessment Day:
              name: Assessment Day
            Semester Hackathon Part 1:
              name: Project   Hackathon Part 1
            Semester Hackathon Part 2:
              name: Project   Hackathon Part 2
            Semester Hackathon Part 3:
              name: Project   Hackathon Part 3
            Semester Hackathon Part 4:
              name: Project   Hackathon Part 4
            Semester Hackathon Part 5:
              name: Project   Hackathon Part 5
            'Lesson 18: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_lists:
              display_name: Lists
            csp_loops:
              display_name: Loops
            csp_traversals:
              display_name: Traversals
            csp_project:
              display_name: Project
            lessonGroup-5:
              display_name: Post-Course Survey
          title: Lists, Loops, and Traversals ('22-'23)
          description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          student_description: This unit introduces lists, loops, and traversals, and explores the way they can be used to build apps that store and process large amounts of information. Learn to program with the data library in App Lab and complete a 5-day hackathon project at the end of the unit where you can design a program about any topic of your choosing.
          description_short: Learn how to build apps that use lists, loops, and traversals to store and process large amounts of information.
          description_audience: ''
          name: csp5-2022
        courseb-2022:
          lessons:
            Digital Trails:
              name: Digital Trails
            Move It, Move It:
              name: Move It, Move It
            Sequencing with Angry Birds:
              name: Sequencing with Angry Birds
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Programming with Harvester:
              name: Programming with Harvester
            Getting Loopy:
              name: Getting Loopy
            Loops with Harvester:
              name: Loops with Harvester
            Loops with Laurel:
              name: Loops with Laurel
            Drawing Gardens with Loops:
              name: Drawing Gardens with Loops
            The Right App:
              name: The Right App
            The Big Event Jr:
              name: The Big Event Jr.
            'Mini-Project: A Royal Battle with Events':
              name: 'Mini-Project: A Royal Battle with Events'
            End of Course Project:
              name: End of Course Project
            Sequencing in Maze:
              name: Sequencing with Angry Birds
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
            'Loops: Getting Loopy':
              name: Getting Loopy
            Loops in Harvester:
              name: Loops with Harvester
            Loops in Collector:
              name: Loops with Laurel
            Loops in Artist:
              name: Drawing Gardens with Loops
            'Events: The Big Event':
              name: The Big Event Jr.
            Events in Play Lab:
              name: 'Mini-Project: A Royal Battle with Events'
            lesson-1:
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_impacts:
              display_name: Impacts of Computing
            csf_events:
              display_name: Events
            lessonGroup-6:
              display_name: End of Course Project
          title: Course B (2022)
          description: We developed Course B with first graders in mind. While the concepts in Course B parallel those in Course A, students learn more sophisticated unplugged activities and work through a greater variety of puzzles. Students will learn the basics of programming, collaboration techniques, investigation and critical thinking skills, persistence in the face of difficulty, and internet safety. At the end of this course, students create games in the Play Lab programming environment.
          student_description: Learn the basics of computer science and internet safety. At the end of the course, create your very own game or story you can share.
          description_short: An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth.
          description_audience: 'Ages: 5-8'
          name: courseb-2022
        coursec-2022:
          lessons:
            Putting a STOP to Online Meanness:
              name: Putting a STOP to Online Meanness
            My Robotic Friends Jr:
              name: My Robotic Friends Jr.
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Debugging in Maze:
              name: Debugging in Maze
            Collecting Treasure with Laurel:
              name: Collecting Treasure with Laurel
            Creating Art with Code:
              name: Creating Art with Code
            My Loopy Robotic Friends Jr:
              name: My Loopy Robotic Friends Jr.
            Loops with Rey and BB-8:
              name: Loops with Rey and BB-8
            Harvesting Crops with Loops:
              name: Harvesting Crops with Loops
            'Mini-Project: Sticker Art':
              name: 'Mini-Project: Sticker Art'
            The Big Event:
              name: The Big Event
            Build a Flappy Game:
              name: Build a Flappy Game
            'Mini-Project: Chase Game':
              name: 'Mini-Project: Chase Game'
            Picturing Data:
              name: Picturing Data
            Binary Bracelets:
              name: Binary Bracelets
            End of Course Project:
              name: End of Course Project
            'Programming: My Robotic Friends':
              name: My Robotic Friends Jr.
            Programming in Maze:
              name: Programming with Angry Birds
            Programming in Collector:
              name: Collecting Treasure with Laurel
            Programming in Artist:
              name: Creating Art with Code
            'Loops: My Loopy Robotic Friends':
              name: My Loopy Robotic Friends Jr.
            Loops in Harvester:
              name: Harvesting Crops with Loops
            Sticker Art with Loops:
              name: 'Mini-Project: Sticker Art'
            'Events: The Big Event':
              name: The Big Event
            Events in Play Lab:
              name: 'Mini-Project: Chase Game'
            'End of Course Project: Create a Play Lab Game':
              name: End of Course Project
          lesson_groups:
            csf_digcit:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
            csf_data:
              display_name: Data
            end_of_course_project:
              display_name: End of Course Project
          title: Course C (2022)
          description: We developed Course C for students in second grade. Students will create programs with sequencing, loops, and events. They will investigate problem-solving techniques and develop strategies for building positive communities both online and offline. By the end of the course, students will create interactive games that they can share.
          student_description: Create programs with sequencing, loops, and events. Translate your initials into binary, investigate different problem-solving techniques, and learn how to respond to cyberbullying. At the end of the course, create your very own game or story you can share!
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description_audience: 'Ages: 6-10'
          name: coursec-2022
        csp6-2022:
          lessons:
            Algorithms Solve Problems:
              name: Algorithms Solve Problems
            Algorithm Efficiency:
              name: Algorithm Efficiency
            Unreasonable Time:
              name: Unreasonable Time
            The Limits of Algorithms:
              name: The Limits of Algorithms
            Parallel and Distributed Algorithms:
              name: Parallel and Distributed Algorithms
            Assessment Day:
              name: Assessment Day
            'Lesson 6: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit6_2020:
              display_name: 'Unit 6: Algorithms'
            lessonGroup-2:
              display_name: Post-Course Survey
          title: Algorithms ('22-'23)
          description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          student_description: This unit is a quick exploration of how computer scientists design algorithms to solve problems and how they analyze the speed of different algorithms. Learn about the concept of algorithmic efficiency through a variety of hands-on activities and learn how it's being applied in modern computing.
          description_short: Design and analyze algorithms to understand how they work and why some are considered better than others.
          description_audience: ''
          name: csp6-2022
        csp7-2022:
          lessons:
            Parameters and Return Explore:
              name: Parameters and Return Explore
            Parameters and Return Investigate:
              name: Parameters and Return Investigate
            Parameters and Return Practice:
              name: Parameters and Return Practice
            Parameters and Return Make:
              name: Parameters and Return Make
            Libraries Explore:
              name: Libraries Explore
            Libraries Investigate:
              name: Libraries Investigate
            Libraries Practice:
              name: Libraries Practice
            Project   Make a Library Part 1:
              name: Project   Make a Library Part 1
            Project   Make a Library Part 2:
              name: Project   Make a Library Part 2
            Project   Make a Library Part 3:
              name: Project   Make a Library Part 3
            Assessment Day:
              name: Assessment Day
            Project - Make a Library Part 1:
              name: Project   Make a Library Part 1
            Project - Make a Library Part 2:
              name: Project   Make a Library Part 2
            Project - Make a Library Part 3:
              name: Project   Make a Library Part 3
            'Lesson 11: Assessment Day':
              name: Assessment Day
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csp_parameters_return_values:
              display_name: Parameters and Return Values
            csp_libraries:
              display_name: Libraries
            lessonGroup-3:
              display_name: Post-Course Survey
          title: Parameters, Return, and Libraries ('22-'23)
          description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          student_description: This unit introduces parameters, return, and libraries. Learn how to use these concepts to build new kinds of apps as well as libraries of code that you can share with your classmates. End the unit by designing a library of functions around any topic of your choosing.
          description_short: Learn how to design clean and reusable code that you can share with a single classmate or the entire world.
          description_audience: ''
          name: csp7-2022
        csp8-2022:
          lessons:
            Create PT   Review the Task:
              name: Create PT   Review the Task
            Create PT Deep Dive:
              name: Create PT Deep Dive
            Create PT   Make a Plan:
              name: Create PT   Make a Plan
            Create PT - Complete the Task (12 hrs):
              name: Create PT - Complete the Task (12 hrs)
            Create PT - Review the Task:
              name: Create PT   Review the Task
            lesson-4:
              name: Create PT Deep Dive
            Create PT - Make a Plan:
              name: Create PT   Make a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task (12 hrs)
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          title: Create PT Prep ('22-'23)
          description: "In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.\r\n\r\n"
          student_description: 'In this unit prepare for, and do the AP Create Performance Task. Each lesson contains links to helpful documents and activities to help you understand the task and develop a plan for completing it.

'
          description_short: Practice and complete the Create Performance Task (PT).
          description_audience: ''
          lesson_groups:
            lessonGroup-2:
              display_name: Create PT
            lessonGroup-3:
              display_name: Post-Course Survey
          name: csp8-2022
        csp9-2022:
          lessons:
            Learning from Data:
              name: Learning from Data
            Exploring One Column:
              name: Exploring One Column
            Filtering and Cleaning Data:
              name: Filtering and Cleaning Data
            Exploring Two Columns:
              name: Exploring Two Columns
            Big, Open, and Crowdsourced Data:
              name: Big, Open, and Crowdsourced Data
            Machine Learning:
              name: Machine Learning
            Algorithmic Bias:
              name: Algorithmic Bias
            Project   Tell a Data Story Part 1:
              name: Project   Tell a Data Story Part 1
            Project   Tell a Data Story Part 2:
              name: Project   Tell a Data Story Part 2
            Assessment Day:
              name: Assessment Day
            Learning From Data:
              name: Learning from Data
            Big Data, Crowdsourcing, and Machine Learning:
              name: Big, Open, and Crowdsourced Data
            Machine Learning and Bias:
              name: Machine Learning
            lesson-10:
              name: Algorithmic Bias
            Project - Tell a Data Story - Part 1:
              name: Project   Tell a Data Story Part 1
            Project - Tell a Data Story - Part 2:
              name: Project   Tell a Data Story Part 2
            'Lesson 9: Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit9_2020:
              display_name: 'Unit 9: Data'
            lessonGroup-2:
              display_name: Post-Course Survey
          title: Data ('22-'23)
          description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
          student_description: 'In this unit learn how data analysis helps turn raw data into useful information about the world. Learn how to use data visualization to find patterns inside of data sets and learn how this data analysis process is being used in contexts like open data or machine learning to help make decisions or learn more about our world. In the unit project, you''ll analyze a dataset of your choosing and present your findings. '
          description_short: Explore and visualize datasets from a wide variety of topics as you hunt for patterns and try to learn more about the world around you.
          description_audience: ''
          name: csp9-2022
        csp10-2022:
          lessons:
            Project   Innovation Simulation Part 1:
              name: Project   Innovation Simulation Part 1
            Project   Innovation Simulation Part 2:
              name: Project   Innovation Simulation Part 2
            Data Policies and Privacy:
              name: Data Policies and Privacy
            The Value of Privacy:
              name: The Value of Privacy
            Project   Innovation Simulation Part 3:
              name: Project   Innovation Simulation Part 3
            Security Risks Part 1:
              name: Security Risks Part 1
            Security Risks Part 2:
              name: Security Risks Part 2
            Project   Innovation Simulation Part 4:
              name: Project   Innovation Simulation Part 4
            Protecting Data Part 1:
              name: Protecting Data Part 1
            Protecting Data Part 2:
              name: Protecting Data Part 2
            Project   Innovation Simulation Part 5:
              name: Project   Innovation Simulation Part 5
            Project   Innovation Simulation Part 6:
              name: Project   Innovation Simulation Part 6
            Project   Innovation Simulation Part 7:
              name: Project   Innovation Simulation Part 7
            Assessment Day:
              name: Assessment Day
            Project - Innovation Simulation Part 1:
              name: Project   Innovation Simulation Part 1
            Project - Innovation Simulation Part 2:
              name: Project   Innovation Simulation Part 2
            Project - Innovation Simulation Part 3:
              name: Project   Innovation Simulation Part 3
            'Project: Innovation Simulation Part 4':
              name: Project   Innovation Simulation Part 4
            'Project: Innovation Simulation Part 5':
              name: Project   Innovation Simulation Part 5
            'Project: Innovation Simulation Part 6':
              name: Project   Innovation Simulation Part 6
            'Project: Innovation Simulation Part 7':
              name: Project   Innovation Simulation Part 7
            'Lesson 14: Unit Assessment Day':
              name: Assessment Day
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
            CS Principles Post-Course Survey:
              name: CS Principles Post-Course Survey
          lesson_groups:
            csp_unit10_2020:
              display_name: 'Unit 10: Cybersecurity and Global Impacts'
            lessonGroup-2:
              display_name: Post-Course Survey
          title: Cybersecurity and Global Impacts ('22-'23)
          description: "In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a \"school of the future\" conference in which you and a team make a proposal for how best to improve school life with computing innovations.\n\n"
          student_description: 'In this unit learn how computing innovations have impacted our world in beneficial and harmful ways. Learn how data can pose a threat to our privacy and security and the ways that encryption and other techniques are used to protect it. Throughout the unit participate in a "school of the future" conference in which you and a team make a proposal for how best to improve school life with computing innovations.

'
          description_short: Research and debate current events at the intersection of data, public policy, law, ethics, and societal impact.
          description_audience: ''
          name: csp10-2022
        coursed-2022:
          lessons:
            Password Power-Up:
              name: Password Power-Up
            Graph Paper Programming:
              name: Graph Paper Programming
            Introduction to Online Puzzles:
              name: Introduction to Online Puzzles
            Relay Programming:
              name: Relay Programming
            Debugging with Laurel:
              name: Debugging with Laurel
            Events in Bounce:
              name: Events in Bounce
            Build a Star Wars Game:
              name: Build a Star Wars Game
            Dance Party:
              name: Dance Party
            Loops in Ice Age:
              name: Loops in Ice Age
            Drawing Shapes with Loops:
              name: Drawing Shapes with Loops
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Conditionals with Cards:
              name: Conditionals with Cards
            Looking Ahead with Minecraft:
              name: Looking Ahead with Minecraft
            If/Else with Bee:
              name: If/Else with Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Until Loops in Maze:
              name: Until Loops in Maze
            End of Course Project:
              name: End of Course Project
            lesson-5:
              name: Password Power-Up
            'Algorithms: Graph Paper Programming':
              name: Graph Paper Programming
            Debugging in Collector:
              name: Debugging with Laurel
            Loops in Artist:
              name: Drawing Shapes with Loops
            Nested Loops in Bee:
              name: Nested Loops in Maze
            lesson-6:
              name: Looking Ahead with Minecraft
            Conditionals in Bee:
              name: If/Else with Bee
          lesson_groups:
            lessonGroup-6:
              display_name: Digital Citizenship
            csf_sequencing:
              display_name: Sequencing
            csf_events:
              display_name: Events
            csf_loops:
              display_name: Loops
            csf_conditionals:
              display_name: Conditionals
            end_of_course_project:
              display_name: End of Course Project
          title: Course D (2022)
          description: 'We created course D for students in third grade.  The course begins with a review of the concepts found in earlier courses, including loops and events. Afterward, students will develop their understanding of algorithms, nested loops, while loops, conditionals, and more. '
          student_description: Learn about loops, conditionals, and events. Beyond coding, learn about digital citizenship.
          description_short: Learn about conditional statements. Create your own art, games, and even a dance party.
          description_audience: 'Ages: 7-11'
          name: coursed-2022
        coursee-2022:
          lessons:
            Follow the Algorithm:
              name: Follow the Algorithm
            Swimming Fish with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: Alien Dance Party with Sprite Lab
            Be A Super Digital Citizen:
              name: Be A Super Digital Citizen
            Private and Personal Information:
              name: Private and Personal Information
            'Mini-Project: About Me':
              name: 'Mini-Project: About Me'
            Digital Sharing:
              name: Digital Sharing
            Drawing with Loops:
              name: Drawing with Loops
            Fancy Shapes using Nested Loops:
              name: Fancy Shapes using Nested Loops
            'Mini-Project: Design a Snowflake':
              name: 'Mini-Project: Design a Snowflake'
            Songwriting:
              name: Songwriting
            Functions in Minecraft:
              name: Functions in Minecraft
            Functions with Artist:
              name: Functions with Artist
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Conditionals in Minecraft: Voyage Aquatic'
            Conditionals with the Farmer:
              name: Conditionals with the Farmer
            Functions with Harvester:
              name: Functions with Harvester
            Designing for Accessibility:
              name: Designing for Accessibility
            End of Course Project:
              name: End of Course Project
            Simon Says:
              name: Follow the Algorithm
            Learning Sprites with Sprite Lab:
              name: Swimming Fish with Sprite Lab
            lesson-4:
              name: Be A Super Digital Citizen
            About Me:
              name: 'Mini-Project: About Me'
            Programming and Loops with the Artist:
              name: Drawing with Loops
            Nested Loops in Artist:
              name: Fancy Shapes using Nested Loops
            Nested Loops in Frozen:
              name: 'Mini-Project: Design a Snowflake'
            'Functions: Songwriting':
              name: Songwriting
            Functions in Artist:
              name: Functions with Artist
            Conditionals:
              name: Conditionals with the Farmer
            Functions in Harvester:
              name: Functions with Harvester
            lesson-1:
              name: Designing for Accessibility
            'Hello World: Food':
              name: Hello World
          lesson_groups:
            csf_sprites:
              display_name: Sprites
            csf_digcit:
              display_name: Digital Citizenship
            ramp_up:
              display_name: Nested Loops
            csf_functions:
              display_name: Functions
            csf_nested_loops:
              display_name: Conditionals
            lessonGroup-7:
              display_name: Impacts of Computing
            end_of_course_project:
              display_name: End of Course Project
            lessonGroup-8:
              display_name: Deprecated
          title: Course E (2022)
          description: We created Course E for students in fourth grade. The course begins with an introduction to the Sprite Lab programming tool. Students will learn to make fun, interactive projects that reinforce what they’ll learn about online safety. Following these lessons, students will engage in more complex coding. Students will learn about nested loops, functions, and conditionals. By the end of the course, students will combine these concepts to solve challenging puzzles. The course ends with an open-ended project where students create a game or drawing.
          student_description: Start coding with algorithms, events, loops, conditionals, and functions! By the end of this course, design and create a game or drawing that you can share with your friends and family.
          description_short: Learn the basics of sprites, nested loops, and functions.
          description_audience: 'Ages: 8-12'
          name: coursee-2022
        coursef-2022:
          lessons:
            Introducing Sprite Lab:
              name: Introducing Sprite Lab
            Making Sprites:
              name: Making Sprites
            Sprites in Action:
              name: Sprites in Action
            'Mini-Project: Virtual Pet':
              name: 'Mini-Project: Virtual Pet'
            The Power of Words:
              name: The Power of Words
            Blank Space Stories:
              name: Blank Space Stories
            Text and Prompts:
              name: Text and Prompts
            'Mini-Project: User Input Programs':
              name: 'Mini-Project: User Input Programs'
            Drawing with Loops:
              name: Drawing with Loops
            Using Variables with the Artist:
              name: Using Variables with the Artist
            Programming with the Bee:
              name: Programming with the Bee
            Variables with the Bee:
              name: Variables with the Bee
            For Loop Fun:
              name: For Loop Fun
            For Loops with Bee:
              name: For Loops with Bee
            For Loops with Artist:
              name: For Loops with Artist
            Simulating Experiments:
              name: Simulating Experiments
            Outbreak:
              name: Outbreak
            AI For Oceans:
              name: AI For Oceans
            The Internet:
              name: The Internet
            End of Course Project:
              name: End of Course Project
            lesson-6:
              name: 'Mini-Project: Collector Game'
            lesson-7:
              name: Making Sprites
            lesson-8:
              name: Sprites in Action
            Virtual Pet:
              name: 'Mini-Project: Virtual Pet'
            lesson-2:
              name: The Power of Words
            lesson-9:
              name: Blank Space Stories
            lesson-10:
              name: Text and Prompts
            lesson-11:
              name: 'Mini-Project: User Input Programs'
            Loops with the Artist:
              name: Drawing with Loops
            Variables that Change in Artist:
              name: Using Variables with the Artist
            Nested Loops in the Maze:
              name: Programming with the Bee
            Variables that Change in Bee:
              name: Variables with the Bee
            For Loops in Bee:
              name: For Loops with Bee
            For Loops in Artist:
              name: For Loops with Artist
            lesson-5:
              name: Counting with Variables
            AI for Oceans:
              name: AI For Oceans
            Internet:
              name: The Internet
            lesson-4:
              name: Lots of Sprites
            "[New] Lots of Sprites":
              name: Lots of Sprites
            "[New] Counting with Variables":
              name: Counting with Variables
            "[New] Mini-Project: Collector Game":
              name: 'Mini-Project: Collector Game'
          lesson_groups:
            ramp_up:
              display_name: Sprites
            lessonGroup-7:
              display_name: Digital Citizenship
            lessonGroup-8:
              display_name: Variables
            csf_variables:
              display_name: Deprecated
            csf_data:
              display_name: Data and Simulations
            end_of_course_project:
              display_name: End of Course Project
          title: Course F (2022)
          description: We created Course F for students in the fifth grade. The course begins by looking at how users make choices in the apps they use. Students then learn to make a variety of Sprite Lab apps that also offer choices for the user. In the later lessons in the course, students will learn about variables in a variety of contexts. Students are given greater autonomy and more choices throughout this course. By the end of the course, students will have created interactive projects to share with their friends and family.
          student_description: Learn to code with sprites and variables, and discuss societal impacts of computing and the internet. By the end of this course, design and create a project you can share with friends and family.
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description_audience: 'Ages: 9-13'
          name: coursef-2022
        csp-post-survey-2021:
          lessons:
            lesson-1:
              name: Course Survey
          lesson_groups: {}
          name: csp-post-survey-2021
          title: CS Principles Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Principles Post-Course Survey.
          student_description: This unit contains a survey about the CS Principles Course. Your teacher will tell you when it's time to take this survey.
        csa1-2022:
          lessons:
            lesson-1:
              name: Welcome to CSA
            lesson-2:
              name: Java Lab
            lesson-3:
              name: The Neighborhood
            lesson-4:
              name: Navigating and Painting
            lesson-5:
              name: One-Way Selection Statements
            lesson-6:
              name: PainterPlus
            lesson-7:
              name: Writing Methods
            lesson-8:
              name: Code Reviews
            lesson-9:
              name: Loops
            lesson-10:
              name: Two-Way Selection Statements
            lesson-11:
              name: Debugging Strategies
            lesson-12:
              name: Decomposition and Design
            lesson-13:
              name: PatternPainter
            lesson-14:
              name: BackgroundPainter
            lesson-15:
              name: Open Source Code
            lesson-16:
              name: Asphalt Art Project – Day 1
            lesson-17:
              name: Asphalt Art Project – Day 2
            lesson-18:
              name: Asphalt Art Project – Day 3
            lesson-19:
              name: FRQ Practice
            lesson-20:
              name: Unit 1 Assessment
            lesson-21:
              name: Console
            lesson-22:
              name: The Neighborhood
            lesson-23:
              name: CSA Pre-Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Survey
          name: csa1-2022
          title: Object-Oriented Programming ('22-'23)
          description_audience: ''
          description_short: Students learn fundamental Java concepts, discover their identity as software engineers, and use debugging strategies and code reviews to improve their programming skills.
          description: |-
            This unit exposes students to object-oriented programming principles as they explore The Neighborhood. Students learn fundamental Java concepts as they navigate and interact with The Neighborhood with `Painter` objects and create new types of `Painter`s to expand the capabilities of their programs. Students practice predicting the outcome of program code and use their `Painter` objects with conditional statements, `while` loops, and Boolean expressions to navigate mazes and create drawings. While students work with the `Painter`, they practice identifying syntax and logic errors to explain why code segments will not compile or work as intended. Additionally, students learn to document program code using comments to describe the behavior of specific code segments. Throughout this unit, students discover their identity as software engineers and use debugging strategies and code reviews to improve their programming skills.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa1-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).
          student_description: This unit exposes you to object-oriented programming principles as you explore The Neighborhood. You learn fundamental Java concepts as you navigate and interact with The Neighborhood with `Painter` objects and create new types of `Painter`s to expand the capabilities of your programs. You practice predicting the outcome of program code and use your `Painter` objects with conditional statements, `while` loops, and Boolean expressions to navigate mazes and create drawings. While you work with the `Painter`, you practice identifying syntax and logic errors to explain why code segments will not compile or work as intended. Additionally, you learn to document program code using comments to describe the behavior of specific code segments. Throughout this unit, you discover your identity as a software engineer and use debugging strategies and code reviews to improve your programming skills.
        pre-express-2022:
          lessons:
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Programming with Angry Birds:
              name: Programming with Angry Birds
            Programming with Rey and BB-8:
              name: Programming with Rey and BB-8
            Programming with Harvester:
              name: Programming with Harvester
            Loops with Scrat:
              name: Loops with Scrat
            Loops with Laurel:
              name: Loops with Laurel
            Ocean Scene with Loops:
              name: Ocean Scene with Loops
            Drawing Gardens with Loops:
              name: Drawing Gardens with Loops
            On the Move with Events:
              name: On the Move with Events
            A Royal Battle with Events:
              name: A Royal Battle with Events
            Programming in with Angry Birds:
              name: Programming with Angry Birds
            Programming in Harvester:
              name: Programming with Harvester
          lesson_groups:
            csf_sequencing:
              display_name: Sequencing
            csf_loops:
              display_name: Loops
            csf_events:
              display_name: Events
          name: pre-express-2022
          title: Pre-reader Express (2022)
          description_audience: 'Ages: 4-8'
          description_short: 'An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses.'
          description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
          student_description: Learn computer science by trying the lessons below at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers.
        csa2-2022:
          lessons:
            lesson-1:
              name: Store Management Project – Day 1
            lesson-2:
              name: Store Management Project – Day 2
            lesson-3:
              name: Store Management Project – Day 3
            lesson-4:
              name: FRQ Practice
            lesson-5:
              name: Unit 2 Assessment
            lesson-6:
              name: Variables
            lesson-7:
              name: Operators and Expressions
            lesson-8:
              name: Attributes
            lesson-9:
              name: Constructors
            lesson-10:
              name: User Input
            lesson-11:
              name: Class Hierarchies
            lesson-12:
              name: Accessor Methods
            lesson-13:
              name: Mutator Methods
            lesson-14:
              name: Printing Objects
            lesson-15:
              name: Scope and this
            lesson-16:
              name: Console
            lesson-17:
              name: The Neighborhood
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
          name: csa2-2022
          title: Class Structure and Design ('22-'23)
          description_audience: ''
          description_short: Students develop an understanding of data encapsulation and object-oriented design decisions.
          description: |-
            This unit expands on the object-oriented programming principles introduced in Unit 1 to explore design principles as students develop classes with attributes and behaviors and work with primitive and object data. Students learn to work with variables and user input as they develop and utilize classes and objects to represent desserts, customers, and food trucks for the Project Mercury Pastries Food Truck business. As students work with the `Dessert` class, they build on their knowledge of inheritance to design subclasses that represent specific types of desserts. While working with variables, students learn to create and evaluate expressions using assignment and relational operators and trace code segments to determine the result of output. Throughout this unit, students continue to develop software engineering skills as they learn to use UML diagrams to represent classes and the DRY principle to refactor program code.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa2-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 1
            * Personal Progress Check 5
            * Personal Progress Check 9

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit expands on the object-oriented programming principles introduced in Unit 1 to explore design principles as you develop classes with attributes and behaviors and work with primitive and object data. You learn to work with variables and user input as you develop and utilize classes and objects to represent desserts, customers, and food trucks for the Project Mercury Pastries Food Truck business. As you work with the `Dessert` class, you build on your knowledge of inheritance to design subclasses that represent specific types of desserts. While working with variables, you learn to create and evaluate expressions using assignment and relational operators and trace code segments to determine the result of output. Throughout this unit, you continue to develop software engineering skills as you learn to use UML diagrams to represent classes and the DRY principle to refactor program code.
        csa3-2022:
          lessons:
            lesson-1:
              name: FRQ Practice
            lesson-2:
              name: Unit 3 Assessment
            lesson-3:
              name: One-Dimensional (1D) Arrays
            lesson-4:
              name: Array Elements
            lesson-5:
              name: For Loops
            lesson-6:
              name: Array Algorithms
            lesson-7:
              name: Enhanced For Loops
            lesson-8:
              name: Static Variables and Constants
            lesson-9:
              name: Polymorphism
            lesson-10:
              name: More Array Algorithms
            lesson-11:
              name: Reversing Arrays
            lesson-12:
              name: Finding Duplicates
            lesson-13:
              name: Data for Social Good Project – Day 1
            lesson-14:
              name: Data for Social Good Project – Day 2
            lesson-15:
              name: Data for Social Good Project – Day 3
            lesson-16:
              name: Console
            lesson-17:
              name: The Neighborhood
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
          name: csa3-2022
          title: Arrays and Algorithms ('22-'23)
          description_audience: ''
          description_short: Students use one-dimensional (1D) arrays to store lists of primitive values and object references.
          description: |-
            This unit introduces students to data structures to store primitive values and object references. Students use one-dimensional (1D) arrays to represent lists of data while expanding their knowledge of loops and conditionals to analyze and process data in a 1D array. Students learn to use `for` loops to traverse arrays and discover that an algorithm involving loops can be implemented with either a `for` loop or a `while` loop. Throughout the unit, students develop and modify standard algorithms to find and manipulate elements in a 1D array while also discovering the concept of polymorphism when traversing arrays of objects. As part of the planning process, students identify the preconditions and postconditions that an algorithm must satisfy. Additionally, students learn to use the `static` and `final` keywords to create static variables to represent values shared with all classes and constants to represent values that cannot be changed.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa3-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 4
            * Personal Progress Check 6

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit introduces you to data structures to store primitive values and object references. You use one-dimensional (1D) arrays to represent lists of data while expanding your knowledge of loops and conditionals to analyze and process data in a 1D array. You learn to use `for` loops to traverse arrays and discover that an algorithm involving loops can be implemented with either a `for` loop or a `while` loop. Throughout the unit, you develop and modify standard algorithms to find and manipulate elements in a 1D array while also discovering the concept of polymorphism when traversing arrays of objects. As part of the planning process, you identify the preconditions and postconditions that an algorithm must satisfy. Additionally, you learn to use the `static` and `final` keywords to create static variables to represent values shared with all classes and constants to represent values that cannot be changed.
        tessplayground:
          lessons:
            Conditionals and Debugging:
              name: Conditionals and Debugging
          lesson_groups: {}
          name: tessplayground
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        cs4all-invasive-species:
          lessons:
            lesson-1:
              name: Surprising Stories about Plants and Animals
            lesson-2:
              name: When Species Invade
            lesson-3:
              name: Big Goldfish, Little Pond
            lesson-4:
              name: Swimming into Sprite Lab
            lesson-5:
              name: Analyzing the Impact
            lesson-6:
              name: Local Invasive Species
            lesson-7:
              name: 'Algorithms: Watch Me Dance'
            lesson-8:
              name: SciComm and Me
            lesson-9:
              name: Communicating with Comics
            lesson-10:
              name: Pet Debate
            lesson-11:
              name: Responding to Conditions
            lesson-12:
              name: Conditionals
            lesson-13:
              name: Exploring Solutions for the Burmese Python
            lesson-14:
              name: Conditionals in Minecraft
            lesson-15:
              name: Exploring Solutions for Invasive Species
            lesson-16:
              name: Debugging
            lesson-17:
              name: Project Inspiration
            lesson-18:
              name: Making It Work
            lesson-19:
              name: Debugging
            lesson-20:
              name: Sharing Projects
          lesson_groups:
            lessonGroup-2:
              display_name: Collection 1
            lessonGroup-3:
              display_name: Collection 2
            lessonGroup-4:
              display_name: Collection 3
            lessonGroup-5:
              display_name: Collection 4
            lessonGroup-6:
              display_name: Collection 5
          name: cs4all-invasive-species
          title: 'Invasive Species '
          description_audience: ''
          description_short: 'This is a NSF funded research grant for CS4All '
          description: ''
          student_description: ''
        csa4-2022:
          lessons:
            lesson-1:
              name: FRQ Practice
            lesson-2:
              name: Unit 4 Assessment
            lesson-3:
              name: The Theater
            lesson-4:
              name: Object Aliases and Equality
            lesson-5:
              name: Nested if Statements
            lesson-6:
              name: Logical Operators
            lesson-7:
              name: De Morgan's Laws
            lesson-8:
              name: Static Methods
            lesson-9:
              name: The Math Class
            lesson-10:
              name: Casting and Rounding
            lesson-11:
              name: Random
            lesson-12:
              name: Multi-Selection Statements
            lesson-13:
              name: Abstract Data Art Project – Day 1
            lesson-14:
              name: Abstract Data Art Project – Day 2
            lesson-15:
              name: Abstract Data Art Project – Day 3
            Console:
              name: Console
            The Neighborhood:
              name: The Neighborhood
            lesson-16:
              name: The Theater
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
          name: csa4-2022
          title: Conditions and Logic ('22-'23)
          description_audience: ''
          description_short: Students improve decision-making in their programs using relational and logical operators to evaluate primitive values and object references and use the Math class to perform calculations and generate random numbers.
          description: "This unit revisits the use of packages to access existing functionalities in their programs, such as The Neighborhood, to expand their knowledge of APIs and libraries and explore The Theater. With The Theater, students learn to improve the decisions made in conditionals and loops with relational and logical operators to evaluate primitive values and object references. While working with conditionals and logical operators, students expand their knowledge of the `static` keyword to write static methods and explore their functionality. Additionally, students use casting operators and `Math` class methods to evaluate expressions and perform calculations, including incorporating random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, students develop an understanding of De Morgan’s Laws and learn how to evaluate truth tables.\n\n### AP Classroom Personal Progress Checks\nTo assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org\t/s/csa4-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).\n\nThe following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:\n* Personal Progress Check 3\n\n***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*"
          student_description: This unit revisits the use of packages to access existing functionalities in your programs, such as The Neighborhood, to expand your knowledge of APIs and libraries and explore The Theater. With The Theater, you learn to improve the decisions made in conditionals and loops with relational and logical operators to evaluate primitive values and object references. While working with conditionals and logical operators, you expand your knowledge of the `static` keyword to write static methods and explore their functionality. Additionally, you use casting operators and `Math` class methods to evaluate expressions and perform calculations, including incorporating random in program decisions and behaviors. While working with compound Boolean expressions and logical operators, you develop an understanding of De Morgan's Laws and learn how to evaluate truth tables.
        csa5-2022:
          lessons:
            lesson-1:
              name: FRQ Practice
            lesson-2:
              name: Unit 5 Assessment
            lesson-3:
              name: Two-Dimensional (2D) Arrays
            lesson-4:
              name: Row-Major Traversal
            lesson-5:
              name: Column-Major Traversal
            lesson-6:
              name: Reverse a 2D Array
            lesson-7:
              name: Enhanced For Loops
            lesson-8:
              name: Impacts of Programs
            lesson-9:
              name: Images in The Theater
            lesson-10:
              name: Modifying Images
            lesson-11:
              name: Finding Duplicates
            lesson-12:
              name: Shifting a 2D Array
            lesson-13:
              name: Personal Narrative Project – Day 1
            lesson-14:
              name: Personal Narrative Project – Day 2
            lesson-15:
              name: Personal Narrative Project – Day 3
            Console:
              name: Console
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know Week
            lessonGroup-4:
              display_name: Sandboxes
          name: csa5-2022
          title: Two-Dimensional Arrays ('22-'23)
          description_audience: ''
          description_short: Students use two-dimensional (2D) arrays to expand storage and organization capabilities in their programs.
          description: |-
            This unit expands on data structures introduced in Unit 3 to create tables of data using two-dimensional (2D) arrays. Students identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing 2D arrays and apply standard algorithms to find and manipulate elements. As students analyze problems involving 2D arrays, they revisit these standard algorithms to determine what code needs to be added or modified and to interact with completed program code. Students apply these concepts to manipulate pixels and in The Theater to create image filters in addition to working with primitive values and various object references. Additionally, students use the programming knowledge and skills they have acquired to consider the impacts of programs on society, economies, and culture.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa5-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:

            * Personal Progress Check 8

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit expands on data structures introduced in Unit 3 to create tables of data using two-dimensional (2D) arrays. You identify similarities and differences between 1D and 2D arrays when creating, accessing, and traversing 2D arrays and apply standard algorithms to find and manipulate elements. As you analyze problems involving 2D arrays, you revisit these standard algorithms to determine what code needs to be added or modified and to interact with completed program code. You apply these concepts to manipulate pixels using The Theater to create image filters in addition to working with primitive values and various object references. Additionally, you use the programming knowledge and skills you have acquired to consider the impacts of programs on society, economies, and culture.
        tess-test-csa:
          lessons:
            Comparing Recursive and Iterative Solutions:
              name: Comparing Recursive and Iterative Solutions
          lesson_groups: {}
          name: tess-test-csa
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa1-2022-exemplars:
          lessons:
            lesson-1:
              name: Welcome to CSA
            lesson-2:
              name: Java Lab
            lesson-3:
              name: The Neighborhood
            lesson-4:
              name: Navigating and Painting
            lesson-5:
              name: One-Way Selection Statements
            lesson-6:
              name: PainterPlus
            lesson-7:
              name: Writing Methods
            lesson-8:
              name: Code Reviews
            lesson-9:
              name: Loops
            lesson-10:
              name: Two-Way Selection Statements
            lesson-11:
              name: Debugging Strategies
            lesson-12:
              name: Decomposition and Design
            lesson-13:
              name: PatternPainter
            lesson-14:
              name: BackgroundPainter
            lesson-15:
              name: Open Source Code
            lesson-16:
              name: Asphalt Art Project — Day 1
            lesson-17:
              name: Asphalt Art Project — Day 2
            lesson-18:
              name: Asphalt Art Project — Day 3
            lesson-19:
              name: FRQ Practice
            lesson-20:
              name: Unit 1 Assessment
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa1-2022-exemplars
          title: Unit 1 - Object-Oriented Programming [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        pltess:
          lessons:
            lesson-1:
              name: Tess lesson 2
            lesson-2:
              name: lesson 3
          lesson_groups:
            lessonGroup-2:
              display_name: Tess lesson
          name: pltess
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        pltess2:
          lessons: {}
          lesson_groups: {}
        self-paced-pl-csa1-2022:
          lessons:
            lesson-1:
              name: Welcome to Code.org
            lesson-2:
              name: Get to know Computer Science A
          lesson_groups: {}
          name: self-paced-pl-csa1-2022
          title: 'Module 1: Welcome'
          description_audience: ''
          description_short: ''
          description: |-
            This module is for anyone using these professional learning modules for CSA.

            **You will:**
            * Get an introduction to Code.org.
            * Learn how to engage in these professional learning modules.
            * Get an introduction to the AP Computer Science A course
            * Learn Code.org’s curricular approach to CSA

            **Estimated Time:** 60 minutes
          student_description: |-
            This module is for anyone using these professional learning modules for CSA.

            **You will:**
            * Get an introduction to Code.org.
            * Learn how to engage in these professional learning modules.
            * Get an introduction to the AP Computer Science A course
            * Learn Code.org’s curricular approach to CSA

            **Estimated Time:** 60 minutes
        self-paced-pl-csa2-2022:
          lessons:
            lesson-1:
              name: Navigating the Code.org learning platform
            lesson-2:
              name: Navigating lesson plans and resources
            lesson-3:
              name: Navigating Support
          lesson_groups: {}
          name: self-paced-pl-csa2-2022
          title: 'Module 2: Navigating Code.org'
          description_audience: ''
          description_short: ''
          description: "This module is intended for teachers who are new to Code.org and the Code.org platform. \n\n**You will:**\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section.\n* Locate and use course lesson plans and teacher resources.\n* Learn how to access support while teaching the course.\n\n**Estimated Time:** 70 minutes\n"
          student_description: |-
            This module is intended for teachers who are new to Code.org and the Code.org platform.

            **You will:**
            * Navigate the Code.org website and teacher tools.
            * Set up a classroom section.
            * Locate and use course lesson plans and teacher resources.
            * Learn how to access support while teaching the course.

            **Estimated Time:** 70 minutes
        self-paced-pl-csa3-2022:
          lessons:
            lesson-1:
              name: Introduction to Java Lab
            lesson-2:
              name: Variables in Java
            lesson-3:
              name: If statements in Java
            lesson-4:
              name: Loops in Java
            lesson-5:
              name: Arrays in Java
          lesson_groups: {}
          name: self-paced-pl-csa3-2022
          title: 'Module 3: Support for text-based programming'
          description_audience: ''
          description_short: ''
          description: |
            This module is for any teacher who is experienced in using variables, conditionals, loops and arrays in other programming languages, but is new to Java.

            **You will:**
            * Create a new file in the Java Lab IDE
            * Become familiar with the basics of Java syntax
            * Declare and initialize variables
            * Use variables in arithmetic operations
            * Print variables and text to the console
            * Write and read if, if-else, if-else-if-else statements
            * Read, write, and debug for loops in Java
            * Declare and  initialize a 1D array of primitive data types
            * Access and modify elements in arrays
            * Traverse arrays

            **Estimated Time:** 7.5 hours
          student_description: |
            This module is for any teacher who is experienced in using variables, conditionals, loops and arrays in other programming languages, but is new to Java.

            **You will:**
            * Create a new file in the Java Lab IDE
            * Become familiar with the basics of Java syntax
            * Declare and initialize variables
            * Use variables in arithmetic operations
            * Print variables and text to the console
            * Write and read if, if-else, if-else-if-else statements
            * Read, write, and debug for loops in Java
            * Declare and  initialize a 1D array of primitive data types
            * Access and modify elements in arrays
            * Traverse arrays

            **Estimated Time:** 7.5 hours
        csa7-pilot-extra:
          lessons:
            Writing Methods to Satisfy Conditions:
              name: Writing Methods to Satisfy Conditions
            Exploring Method Components and Functionality:
              name: Exploring Method Components and Functionality
            Using Object References as Parameters:
              name: Using Object References as Parameters
            Overloading Methods:
              name: Overloading Methods
            Accessing Object Behavior:
              name: Accessing Object Behavior
            Overriding Methods:
              name: Overriding Methods
            Exploring Recursive Methods:
              name: Exploring Recursive Methods
            Comparing Recursive and Iterative Solutions:
              name: Comparing Recursive and Iterative Solutions
            Writing Recursive Methods:
              name: Writing Recursive Methods
            Maximizing System Reliability:
              name: Maximizing System Reliability
            Title Sequence Project - Day 1:
              name: Title Sequence Project - Day 1
            Title Sequence Project - Day 2:
              name: Title Sequence Project - Day 2
            Title Sequence Project - Day 3:
              name: Title Sequence Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 7 Pilot Survey:
              name: Unit 7 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-10:
              name: Writing Methods to Satisfy Conditions
            lesson-6:
              name: Exploring Method Components and Functionality
            lesson-7:
              name: Using Object References as Parameters
            lesson-8:
              name: Overloading Methods
            lesson-9:
              name: Accessing Object Behavior
            lesson-11:
              name: Overriding Methods
            lesson-12:
              name: Exploring Recursive Methods
            lesson-13:
              name: Comparing Recursive and Iterative Solutions
            lesson-14:
              name: Writing Recursive Methods
            lesson-15:
              name: Maximizing System Reliability
            lesson-1:
              name: Title Sequence Project - Day 1
            lesson-2:
              name: Title Sequence Project - Day 2
            lesson-3:
              name: Title Sequence Project - Day 3
            lesson-4:
              name: FRQ Day
            lesson-5:
              name: Assessment Day
            lesson-16:
              name: Unit 7 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: 'Expanding Software Design '
          description: In this unit, students practice software design and development using the skills and programming constructs they have learned to develop a title sequence for their favorite content creator. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. Students explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.
          student_description: In this unit, you practice software design and development using the skills and programming constructs you have learned to develop a title sequence for your favorite content creator. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your projects meet specified requirements. You explore recursive methods by tracing and writing recursive methods and comparing recursive and iterative solutions for efficiency. At the end of the unit, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
          description_short: ''
          description_audience: ''
          name: csa7-pilot-extra
        csa8-pilot-extra:
          lessons:
            Planning a Project:
              name: Planning a Project
            Searching for Data:
              name: Searching for Data
            Implementing the Binary Search:
              name: Implementing the Binary Search
            Implementing a Recursive Binary Search:
              name: Implementing a Recursive Binary Search
            Implementing the Selection Sort:
              name: Implementing the Selection Sort
            Implementing the Insertion Sort:
              name: Implementing the Insertion Sort
            Implementing the Merge Sort:
              name: Implementing the Merge Sort
            Expanding Standard Algorithms:
              name: Expanding Standard Algorithms
            Traversing Multiple Lists:
              name: Traversing Multiple Lists
            Defending Privacy and Security:
              name: Defending Privacy and Security
            Inclusive Playground Project - Day 1:
              name: Inclusive Playground Project - Day 1
            Inclusive Playground Project - Day 2:
              name: Inclusive Playground Project - Day 2
            Inclusive Playground Project - Day 3:
              name: Inclusive Playground Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 8 Pilot Survey:
              name: Unit 8 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Planning a Project
            lesson-2:
              name: Searching for Data
            lesson-3:
              name: Implementing the Binary Search
            lesson-4:
              name: Implementing a Recursive Binary Search
            lesson-5:
              name: Implementing the Selection Sort
            lesson-10:
              name: Implementing the Insertion Sort
            lesson-6:
              name: Implementing the Merge Sort
            lesson-7:
              name: Expanding Standard Algorithms
            lesson-8:
              name: Traversing Multiple Lists
            lesson-9:
              name: Defending Privacy and Security
            lesson-11:
              name: Inclusive Playground Project - Day 1
            lesson-12:
              name: Inclusive Playground Project - Day 2
            lesson-13:
              name: Inclusive Playground Project - Day 3
            lesson-14:
              name: FRQ Day
            lesson-15:
              name: Assessment Day
            lesson-16:
              name: Unit 8 Pilot Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Pilot Survey
            lessonGroup-5:
              display_name: Sandbox
          title: Giving Objects Life
          description: In this unit, students implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. Students analyze the efficiency of searching and sorting algorithms and expand the standard algorithms they have developed throughout the course to solve more complex problems. Throughout the unit, students apply their knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. Students wrap up the unit and course considering the privacy and security of their programs and users.
          student_description: In this unit, you implement searching and sorting algorithms to work with lists of primitive and object data stored in 1D and 2D arrays and `ArrayList`s. You analyze the efficiency of searching and sorting algorithms and expand the standard algorithms you have developed throughout the course to solve more complex problems. Throughout the unit, you apply your knowledge and programming skills to develop a game that incorporates object-oriented design and efficiency. You wrap up the unit and course considering the privacy and security of their programs and users.
          description_short: ''
          description_audience: ''
          name: csa8-pilot-extra
        csa-backpack-2022:
          lessons:
            lesson-1:
              name: PainterPlus
            lesson-2:
              name: Project Mercury Pastries Food Truck
            lesson-4:
              name: TextProcessor
            lesson-3:
              name: ImagePlus and ScenePlus
          lesson_groups: {}
          name: csa-backpack-2022
          title: CSA Backpack Versions ['22-'23]
          description_audience: ''
          description_short: ''
          description: Versions of classes students have in their **Backpack** throughout the course.
          student_description: ''
        csd6-projects:
          lessons:
            'Mini-Project: On-The-Go App':
              name: 'Mini-Project: On-The-Go App'
            'Project: Human Device Interaction':
              name: 'Project: Human Device Interaction'
            'Mini-Project: Interactive Art':
              name: 'Mini-Project: Interactive Art'
            lesson-4:
              name: Independent Practice Levels
          lesson_groups: {}
          name: csd6-projects
          title: CSD Unit 6 Projects
          description_audience: ''
          description_short: ''
          description: These are the new projects for the CS Discoveries Physical Computing unit. This unit exists to help playtesting the new MicroBit features in the Code.org platform
          student_description: ''
        coursef-2022-pilot:
          lessons:
            The Power of Words:
              name: The Power of Words
            Introducing Sprite Lab:
              name: Introducing Sprite Lab
            Making Sprites:
              name: Making Sprites
            Sprites in Action:
              name: Sprites in Action
            'Mini-Project: Virtual Pet':
              name: 'Mini-Project: Virtual Pet'
            Blank Space Stories:
              name: Blank Space Stories
            Text and Prompts:
              name: Text and Prompts
            'Mini-Project: User Input Programs':
              name: 'Mini-Project: User Input Programs'
            "[New] Lots of Sprites":
              name: "[New] Lots of Sprites"
            "[New] Counting with Variables":
              name: "[New] Counting with Variables"
            "[New] Mini-Project: Collector Game":
              name: "[New] Mini-Project: Collector Game"
            Simulating Experiments:
              name: Simulating Experiments
            Outbreak:
              name: Outbreak
            AI For Oceans:
              name: AI For Oceans
            The Internet:
              name: The Internet
            End of Course Project:
              name: End of Course Project
          lesson_groups:
            lessonGroup-7:
              display_name: Digital Citizenship
            ramp_up:
              display_name: Sprites
            lessonGroup-8:
              display_name: Variables
            csf_data:
              display_name: Data and Simulations
            end_of_course_project:
              display_name: End of Course Project
          name: coursef-2022-pilot
          title: Course F (2022)
          description_audience: 'Ages: 9-13'
          description_short: Learn all the concepts in Computer Science Fundamentals and create your own art, story or game.
          description: |
            We created Course F for students in the fifth grade. The course begins by looking at how users make choices in the apps they use. Students then learn to make a variety of Sprite Lab apps that also offer choices for the user. In the later lessons in the course, students will learn about variables in a variety of contexts. Students are given greater autonomy and more choices throughout this course. By the end of the course, students will have created interactive projects to share with their friends and family.

            ## Spring 2022 Open Preview
            This new version of Course F includes three new lessons, and we need your feedback! The new lessons are:
            * Lesson 9 - Lots of Sprites - [give feedback](https://docs.google.com/forms/d/e/1FAIpQLSdgGilUP1l2i7Cie_kojOBjq_UMVDA8O1NFX4hLt4Ts4IMvnQ/viewform)
            * Lesson 10 - Counting with Variables - [give feedback](https://docs.google.com/forms/d/e/1FAIpQLSeuqnSbdJEgUY9paU2HNLN0RymYogBIRYrAtttTg826QXjK0w/viewform)
            * Lesson 11 - Mini-Project: Collector Game - [give feedback](https://docs.google.com/forms/d/e/1FAIpQLSe5IU4p57sowVOUuJyk_1Nv_R8XwELRwto75zPdre50aYy9DA/viewform)

            Please note that these new lessons may change between now and July 2022. We appreciate any feedback. Courses A-E of CS Fundamentals (2022) will launch in July 2022.

            We have also added a full slide deck covering all lessons in Course F. We welcome your [feedback](https://docs.google.com/forms/d/e/1FAIpQLScDJ_UUYW1fw36uCiupsB96F8O8zoiSuppGQ7YrQfVn0ma_5w/viewform) on the lesson slides as well!
          student_description: Learn to code with sprites and variables, and discuss societal impacts of computing and the internet. By the end of this course, design and create a project you can share with friends and family.
        csa6-2022:
          lessons:
            Documenting Program Code:
              name: Documenting Program Code
            Exploring Integer and Double Objects:
              name: Exploring Integer and Double Objects
            Using ArrayLists to Store Data:
              name: Using ArrayLists to Store Data
            Working with ArrayList Data:
              name: Working with ArrayList Data
            Storing Objects in an ArrayList:
              name: Storing Objects in an ArrayList
            Removing Data from an ArrayList:
              name: Removing Data from an ArrayList
            Using String Methods:
              name: Using String Methods
            Comparing Strings:
              name: Comparing Strings
            Solving Problems with Strings:
              name: Solving Problems with Strings
            Solving Problems with ArrayLists:
              name: Solving Problems with ArrayLists
            Neighborhood Lit Fest Project - Day 1:
              name: Neighborhood Lit Fest Project - Day 1
            Neighborhood Lit Fest Project - Day 2:
              name: Neighborhood Lit Fest Project - Day 2
            Neighborhood Lit Fest Project - Day 3:
              name: Neighborhood Lit Fest Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 6 Pilot Survey:
              name: Unit 6 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Project Planning
            lesson-2:
              name: Integer and Double Objects
            lesson-3:
              name: ArrayLists
            lesson-4:
              name: Manipulating Elements
            lesson-5:
              name: Lists of Objects
            lesson-6:
              name: Removing Elements
            lesson-7:
              name: String Methods
            lesson-8:
              name: Comparing Strings
            lesson-9:
              name: String Algorithms
            lesson-10:
              name: ArrayList Algorithms
            lesson-11:
              name: Natural Language Processing Project – Day 1
            lesson-12:
              name: Natural Language Processing Project – Day 2
            lesson-13:
              name: Natural Language Processing Project – Day 3
            lesson-14:
              name: FRQ Practice
            lesson-15:
              name: Unit 6 Assessment
            Console:
              name: Console
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Sandbox
          title: ArrayLists and String Methods ('22-'23)
          description: |-
            This unit continues to expand on data structures to introduce students to creating lists using the `ArrayList` class. In the process, students learn about the `Integer` and `Double` classes and use their methods to parse data from text files and explore the limits of integer values. Students differentiate between when to use each type of data structure while learning about the structure and functionality of an `ArrayList`. Students apply standard algorithms to find and manipulate data in an `ArrayList` of numerical and object data. Throughout the unit, students learn to use the `String` class to analyze and process text obtained from a user and from file input while learning about basic natural language processing techniques and applications. Additionally, students further develop software engineering skills by writing Javadoc comments to create API documentation for their programs.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa6-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 2
            * Personal Progress Check 7

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: This unit continues to expand on data structures to introduce you to creating lists using the `ArrayList` class. In the process, you learn about the `Integer` and `Double` classes and use their methods to parse data from text files and explore the limits of integer values. You differentiate between when to use each type of data structure while learning about the structure and functionality of an `ArrayList`. You apply standard algorithms to find and manipulate data in an `ArrayList` of numerical and object data. Throughout the unit, you learn to use the `String` class to analyze and process text obtained from a user and from file input while learning about basic natural language processing techniques and applications. Additionally, you further develop software engineering skills by writing Javadoc comments to create API documentation for your programs.
          description_short: Students use ArrayLists to store program data and work with methods in the String class to manipulate and evaluate String objects.
          description_audience: ''
          name: csa6-2022
        csa7-2022:
          lessons:
            Writing Methods to Satisfy Conditions:
              name: Exploring Method Components and Functionality
            Exploring Method Components and Functionality:
              name: Using Object References as Parameters
            Using Object References as Parameters:
              name: Overloading Methods
            Overloading Methods:
              name: Accessing Object Behavior
            Accessing Object Behavior:
              name: Writing Methods to Satisfy Conditions
            Overriding Methods:
              name: Overriding Methods
            Exploring Recursive Methods:
              name: Exploring Recursive Methods
            Comparing Recursive and Iterative Solutions:
              name: Comparing Recursive and Iterative Solutions
            Writing Recursive Methods:
              name: Writing Recursive Methods
            Maximizing System Reliability:
              name: Maximizing System Reliability
            Title Sequence Project - Day 1:
              name: Title Sequence Project - Day 1
            Title Sequence Project - Day 2:
              name: Title Sequence Project - Day 2
            Title Sequence Project - Day 3:
              name: Title Sequence Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 7 Pilot Survey:
              name: Unit 7 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Project Planning
            lesson-2:
              name: Method Parameters
            lesson-3:
              name: Overloading Methods
            lesson-4:
              name: Private Methods
            lesson-5:
              name: Overriding Methods
            lesson-6:
              name: Intellectual Property
            lesson-7:
              name: Recursion
            lesson-8:
              name: Recursion vs Iteration
            lesson-9:
              name: Recursive Algorithms
            lesson-10:
              name: Maximizing System Reliability
            lesson-11:
              name: Creative Coding with The Theater – Day 1
            lesson-12:
              name: Creative Coding with The Theater – Day 2
            lesson-13:
              name: Creative Coding with The Theater – Day 3
            lesson-14:
              name: FRQ Practice
            lesson-15:
              name: Unit 7 Assessment
            Console:
              name: Console
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Sandbox
          title: Method Decomposition and Recursion ('22-'23)
          description: |-
            This unit allows students to practice software design and development using the skills they have learned throughout the curriculum while planning and developing a creative coding project to convey a personal interest or story using The Theater. Students use decomposition strategies and object-oriented principles to plan and implement their ideas while ensuring their projects meet specified requirements. In the process, students learn to write `private`, overloaded, and overridden methods and use the `super` keyword in a subclass method to call a superclass method while exploring the functionality of methods and their parameters. Throughout the unit, students practice tracing and writing recursive methods and comparing these methods to iterative solutions. With the knowledge and skills acquired throughout the year, students consider the need for maximizing system reliability as they explore bugs and issues in existing programs.

            ###AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa7-2022/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).
          student_description: This unit allows you to practice software design and development using the skills you have learned throughout the curriculum while planning and developing a creative coding project to convey a personal interest or story using The Theater. You use decomposition strategies and object-oriented principles to plan and implement your ideas while ensuring your project meet specified requirements. In the process, you learn to write `private`, overloaded, and overridden methods and use the `super` keyword in a subclass method to call a superclass method while exploring the functionality of methods and their parameters. Throughout the unit, you practice tracing and writing recursive methods and comparing these methods to iterative solutions. With the knowledge and skills acquired throughout the year, you consider the need for maximizing system reliability as you explore bugs and issues in existing programs.
          description_short: Students practice software design and development using the skills and programming constructs they have learned and explore recursion.
          description_audience: ''
          name: csa7-2022
        csa8-2022:
          lessons:
            Planning a Project:
              name: Planning a Project
            Searching for Data:
              name: Searching for Data
            Implementing the Binary Search:
              name: Implementing the Binary Search
            Implementing a Recursive Binary Search:
              name: Implementing a Recursive Binary Search
            Implementing the Selection Sort:
              name: Implementing the Selection Sort
            Implementing the Insertion Sort:
              name: Implementing the Insertion Sort
            Implementing the Merge Sort:
              name: Implementing the Merge Sort
            Expanding Standard Algorithms:
              name: Expanding Standard Algorithms
            Traversing Multiple Lists:
              name: Traversing Multiple Lists
            Defending Privacy and Security:
              name: Defending Privacy and Security
            Inclusive Playground Project - Day 1:
              name: Inclusive Playground Project - Day 1
            Inclusive Playground Project - Day 2:
              name: Inclusive Playground Project - Day 2
            Inclusive Playground Project - Day 3:
              name: Inclusive Playground Project - Day 3
            FRQ Day:
              name: FRQ Day
            Assessment Day:
              name: Assessment Day
            Unit 8 Pilot Survey:
              name: Unit 8 Pilot Survey
            Java Lab:
              name: Java Lab
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            The Playground:
              name: The Playground
            lesson-1:
              name: Project Planning
            lesson-2:
              name: Searching
            lesson-3:
              name: Binary Search
            lesson-4:
              name: Recursive Binary Search
            lesson-5:
              name: Selection Sort
            lesson-6:
              name: Insertion Sort
            lesson-7:
              name: Merge Sort
            lesson-8:
              name: Multiple Lists
            lesson-9:
              name: Searching and Sorting
            lesson-10:
              name: Privacy and Security
            lesson-11:
              name: Creative Coding with the Console – Day 1
            lesson-12:
              name: Creative Coding with the Console – Day 2
            lesson-13:
              name: Creative Coding with the Console – Day 3
            lesson-14:
              name: FRQ Practice
            lesson-15:
              name: Unit 8 Assessment
            Console:
              name: Console
            lesson-16:
              name: CSA Post-Survey
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
            lessonGroup-4:
              display_name: Sandboxes
            lessonGroup-5:
              display_name: Survey
          title: Searching and Sorting ('22-'23)
          description: |-
            This unit expands on algorithms students have learned to introduce common approaches to searching and sorting 1D and 2D arrays and `ArrayList`s. In the process, students analyze and compare the efficiencies of these algorithms using statement execution counts and further develop problem-solving skills to decompose complex problems. Throughout the unit, students apply their programming and software engineering skills to plan and develop a creative coding project using the console that incorporates object-oriented design, data structures, and algorithmic thinking. With the knowledge and skills acquired throughout the year, students consider the privacy and security of programs and users.

            ### AP Classroom Personal Progress Checks
            To assign questions from the AP Classroom Question Bank that align with this unit, create a custom quiz in AP Classroom by searching the Question Bank for the Essential Knowledge statements on the unit's [**Standards**](https://studio.code.org/s/csa8-pilot-facilitator/standards) page. You can find instructions and video demonstrations to do this on [**AP Central**](https://apcentral.collegeboard.org/instructional-resources/ap-classroom).

            The following Personal Progress Checks in AP Classroom can be assigned during the Show What You Know week:
            * Personal Progress Check 10

            ***Note:*** *Some Learning Objectives and Essential Knowledge statements in the suggested Personal Progress Checks are covered in later units.*
          student_description: In this unit, you expand on the algorithms you have learned to explore common approaches to searching and sorting 1D and 2D arrays and `ArrayList`s. In the process, you analyze and compare the efficiencies of these algorithms using statement execution counts and further develop problem-solving skills to decompose complex problems. Throughout the unit, you apply your programming and software engineering skills to plan and develop a creative coding project using the console that incorporates object-oriented design, data structures, and algorithmic thinking. With the knowledge and skills acquired throughout the year, you consider the privacy and security of programs and users.
          description_short: ''
          description_audience: ''
          name: csa8-2022
        ui-test-csa-family-script:
          lessons:
            lesson-1:
              name: UI Test CSA Family Lesson
          lesson_groups: {}
          name: ui-test-csa-family-script
          title: UI Test CSA Family Script
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa-preview:
          lessons:
            lesson-1:
              name: The Neighborhood
            lesson-2:
              name: The Theater
            lesson-3:
              name: The Playground
          lesson_groups: {}
          name: csa-preview
          title: CSA Curriculum and Tools Preview
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd1-summer-pilot-2022:
          lessons:
            lesson-1:
              name: Welcome
            lesson-2:
              name: Vision for CS Education
            lesson-3:
              name: Model Lesson 1 - Unit 1 Lesson 2
            lesson-4:
              name: Overview of CS Discoveries
            lesson-5:
              name: Asynchronous Debrief
            lesson-6:
              name: Model Lesson 2 - Unit 2 Lesson 2
            lesson-7:
              name: Identity
            lesson-8:
              name: Lesson Assignment
            lesson-9:
              name: Explore a Lesson
            lesson-10:
              name: The role of the teacher
            lesson-11:
              name: Wrap Up
            The Problem Solving Process:
              name: Model Lesson 1 - Unit 1 Lesson 2
            Intro to HTML:
              name: Model Lesson 2 - Unit 2 Lesson 2
            Navigating support:
              name: Navigating support
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Asynchronous Part 2
          name: vpl-csd1-summer-pilot-2022
          title: 'Module 1: Introduction to CS Discoveries '
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd2-summer-pilot-2022:
          lessons:
            lesson-1:
              name: Welcome
            lesson-2:
              name: Model Lesson 3 - Unit 2 Lesson 3
            lesson-3:
              name: Lesson Planning
            lesson-4:
              name: Async Prep
            lesson-5:
              name: Tools and Strategies
            lesson-6:
              name: Asynchronous Debrief
            lesson-7:
              name: TLO 1 - Unit 3 Lesson 3 - delete
            lesson-8:
              name: TLO 2 - Unit 3 Lesson 4 - delete
            lesson-9:
              name: Wrap Up
            lesson-10:
              name: Tracking Progress, Providing Feedback, and Assessing Learning
            lesson-11:
              name: Access to CS Education
            Headings:
              name: Model Lesson 3 - Unit 2 Lesson 3
            Drawing in Game Lab:
              name: TLO 1 - Unit 3 Lesson 3
            Shapes and Parameters:
              name: TLO 2 - Unit 3 Lesson 4
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Asynchronous Part 2
          name: vpl-csd2-summer-pilot-2022
          title: 'Module 2: Tools and Instructional Strategies'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd3-summer-pilot-2022:
          lessons:
            lesson-1:
              name: Welcome
            lesson-2:
              name: Barriers and Opportunities
            lesson-3:
              name: TLO 3 - Unit 4 Lesson 3 - delete
            lesson-4:
              name: Classroom Culture
            lesson-5:
              name: Asynchronous Debrief
            lesson-6:
              name: TLO 4 - Unit 5 Lesson 1 - delete
            lesson-7:
              name: TLO 5 - Unit 5 Lesson 9 - delete
            lesson-8:
              name: Wrap Up
            lesson-9:
              name: Connect with the CS Community
            User Centered Design   Define and Prepare:
              name: TLO 3 - Unit 4 Lesson 3
            Representation Matters:
              name: TLO 4 - Unit 5 Lesson 1
            Problem Solving and Data:
              name: TLO 5 - Unit 5 Lesson 9
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Asynchronous Part 2
          name: vpl-csd3-summer-pilot-2022
          title: 'Module 3: Classroom Context and Culture'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd4-summer-pilot-2022:
          lessons:
            lesson-1:
              name: "[TEMPLATE] Introduction to..."
            lesson-2:
              name: "[TEMPLATE] Unit Wrap Up"
            lesson-3:
              name: "[TEMPLATE] Content lessons"
            lesson-4:
              name: Welcome
            lesson-5:
              name: Curriculum Investigation
            lesson-6:
              name: TLO 7 - Unit 7 Lesson 1
            lesson-7:
              name: Async Prep
            lesson-8:
              name: Make an Implementation Plan
            lesson-9:
              name: Navigating Support
            lesson-10:
              name: Building Community in Support of CS Education
            lesson-11:
              name: Asynchronous Debrief
            lesson-12:
              name: Equity in CS Education
            lesson-13:
              name: Modularity Planning
            lesson-14:
              name: Wrap Up
            Updating Screen Elements:
              name: TLO 6 - Unit 6 Lesson 3
            Introduction to Machine Learning:
              name: TLO 7 - Unit 7 Lesson 1
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
            lessonGroup-5:
              display_name: Curriculum Investigation
          name: vpl-csd4-summer-pilot-2022
          title: 'Module 4: Planning and Practicing '
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        vpl-csd5-summer-pilot-2022:
          lessons:
            lesson-1:
              name: Welcome
            lesson-2:
              name: Curriculum Wrap Up
            lesson-3:
              name: Teacher Resource Exploration
            lesson-4:
              name: Async Prep
            lesson-5:
              name: Preparing for the Year
            lesson-6:
              name: Asynchronous Debrief
            lesson-7:
              name: Unconference
            lesson-8:
              name: Closing Ceremonies
          lesson_groups:
            lessonGroup-2:
              display_name: Synchronous Part 1
            lessonGroup-3:
              display_name: Asynchronous Part 1
            lessonGroup-4:
              display_name: Synchronous Part 2
          name: vpl-csd5-summer-pilot-2022
          title: 'Module 5: Preparing to Teach CS Discoveries'
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csa2-2022-exemplars:
          lessons:
            lesson-1:
              name: Variables
            lesson-2:
              name: Operators and Expressions
            lesson-3:
              name: Attributes
            lesson-4:
              name: Constructors
            lesson-5:
              name: User Input
            lesson-6:
              name: Class Hierarchies
            lesson-7:
              name: Accessor Methods
            lesson-8:
              name: Mutator Methods
            lesson-9:
              name: Printing Objects
            lesson-10:
              name: Scope and this
            lesson-11:
              name: Store Management Project – Day 1
            lesson-12:
              name: Store Management Project – Day 2
            lesson-13:
              name: Store Management Project – Day 3
            lesson-14:
              name: FRQ Practice
            lesson-15:
              name: Unit 2 Assessment
          lesson_groups:
            lessonGroup-2:
              display_name: Content
            lessonGroup-3:
              display_name: Show What You Know
          name: csa2-2022-exemplars
          title: Unit 2 - Class Structure and Design [Exemplars]
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        k5-onlinepd-2022:
          lessons:
            Welcome and Introduction:
              name: Welcome and Introduction
            Getting Started:
              name: Getting Started
            Teaching Practices and Strategies:
              name: Teaching Practices and Strategies
            Teaching a Lesson:
              name: Teaching a Lesson
            Addressing Barriers:
              name: Addressing Barriers
            Part II Overview:
              name: Part II Overview
            Sequencing:
              name: Sequencing
            Sequencing with Sprites:
              name: Sequencing with Sprites
            Loops:
              name: Loops
            Events:
              name: Events
            Conditionals:
              name: Conditionals
            Functions:
              name: Functions
            Variables:
              name: Variables
            For Loops:
              name: For Loops
            End of Course projects:
              name: End of Course projects
            Reviewing your reflections:
              name: Reviewing your reflections
            Taking next steps:
              name: Taking next steps
            Welcome to "Teaching Computer Science Fundamentals":
              name: Welcome and Introduction
            CS Teaching and Student Practices:
              name: Teaching Practices and Strategies
            Lesson Planning:
              name: Teaching a Lesson
            Implementation Approaches and Barriers:
              name: Addressing Barriers
            Next steps:
              name: Taking next steps
          lesson_groups:
            Implementing and Teaching CS:
              display_name: 'Part I:  Teaching and Implementing Computer Science'
            k5_basic_concepts_1:
              display_name: 'Part II:  Concepts in Courses A - F'
            k5_next_steps_1:
              display_name: 'Part III:  Next Steps'
          title: Teaching Computer Science Fundamentals ('21-'22)
          description: "Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! \n"
          student_description: 'Welcome to Code.org’s free online educator course for CS Fundamentals! '
          description_short: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          description_audience: 'Welcome to Code.org’s free self-paced online educator course for getting started with Computer Science Fundamentals! '
          name: k5-onlinepd-2022
        vpl-csd1-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to Problem Solving and Computing
            lesson-2:
              name: Practice using the problem solving process
            lesson-3:
              name: Learn how a computer works
            lesson-4:
              name: Unit wrap up
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Problem Solving and Computing
          name: vpl-csd1-ci-pilot-2022
          title: Preparing to Teach Problem Solving and Computing
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Problem Solving and Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Problem Solving and Computing.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 30 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Problem Solving and Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Problem Solving and Computing.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 30 minutes"
        vpl-csd2-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to Web Development
            lesson-2:
              name: Build a website with HTML
            lesson-3:
              name: Style a website with CSS
            lesson-4:
              name: Consider roles and responsibilities related to digital media
            lesson-5:
              name: Unit wrap up
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Web Development
          name: vpl-csd2-ci-pilot-2022
          title: Preparing to Teach Web Development
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Web Development unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Web Development.\n* Practice key concepts included in the unit.\n* Engage with Web Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Web Development unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Web Development.\n* Practice key concepts included in the unit.\n* Engage with Web Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
        vpl-csd3-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to Interactive Animations and Games
            lesson-2:
              name: Create a scene
            lesson-3:
              name: Animate a scene with sprites
            lesson-4:
              name: Explore game design
            lesson-5:
              name: Unit wrap up
            lesson-6:
              name: Animate a scene using sprites
          lesson_groups:
            lessonGroup-2:
              display_name: Preparing to Teach Interactive Animations and Games
          name: vpl-csd3-ci-pilot-2022
          title: 'Preparing to Teach Interactive Animations and Games '
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Interactive Animations and Games unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Interactive Animations and Games.\n* Practice key concepts included in the unit.\n* Engage with Game Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Interactive Animations and Games unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Interactive Animations and Games.\n* Practice key concepts included in the unit.\n* Engage with Game Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 120 minutes"
        vpl-csd4-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to The Design Process
            lesson-2:
              name: Use a paper prototype
            lesson-3:
              name: Build a digital prototype in App Lab
            lesson-4:
              name: Consider how apps can be used for good
            lesson-5:
              name: Unit wrap up
          lesson_groups:
            lessonGroup-2:
              display_name: Preparing to Teach the Design Process
          name: vpl-csd4-ci-pilot-2022
          title: Preparing to Teach The Design Process
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Design Process unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to The Design Process.\n* Practice key concepts included in the unit.\n* Engage with App Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Design Process unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to The Design Process.\n* Practice key concepts included in the unit.\n* Engage with App Lab.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
        vpl-csd5-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to Data and Society
            lesson-2:
              name: Explore data at a small scale
            lesson-3:
              name: Explore data at a large scale
            lesson-4:
              name: Consider real world implications
            lesson-5:
              name: Unit wrap up
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching Data and Society
          name: vpl-csd5-ci-pilot-2022
          title: Preparing to Teach Data and Society
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Data and Society unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Data and Society.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 60 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Data and Society unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Data and Society.\n* Practice key concepts included in the unit.\n* Explore end of chapter projects.\n\n**Suggested time:** 60 minutes"
        vpl-csd6-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to Physical Computing
            lesson-2:
              name: Get to know the circuit playground
            lesson-3:
              name: Experiment with inputs and outputs
            lesson-4:
              name: Engage with maker-based prototypes
            lesson-5:
              name: Unit wrap up
          lesson_groups: {}
          name: vpl-csd6-ci-pilot-2022
          title: Preparing to Teach Physical Computing
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's Physical Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Physical Computing.\n* Practice key concepts included in the unit.\n* Engage with the maker app.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's Physical Computing unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to Physical Computing.\n* Practice key concepts included in the unit.\n* Engage with the maker app.\n* Explore end of chapter projects.\n\n**Suggested time:** 90 minutes"
        vpl-csd7-ci-pilot-2022:
          lessons:
            lesson-1:
              name: Introduction to AI and Machine Learning
            lesson-2:
              name: Train a machine learning model
            lesson-3:
              name: Engage with machine learning apps
            lesson-4:
              name: Consider real world implications
            lesson-5:
              name: Unit wrap up
            Introduction to AI and machine learning:
              name: Introduction to AI and machine learning
            Train a machine learning model:
              name: Train a machine learning model
            Engage with machine learning apps:
              name: Engage with machine learning apps
            Consider real world implications:
              name: Consider real world implications
            Unit wrap up:
              name: Unit wrap up
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching AI and machine learning
          name: vpl-csd7-ci-pilot-2022
          title: Preparing to Teach AI and Machine Learning
          description_audience: ''
          description_short: ''
          description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to AI and Machine Learning.\n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects.\n* Make a plan for implementing the unit with your students.\n\n**Suggested time:** 120 minutes"
          student_description: "This professional learning module is designed to help you prepare to teach Code.org's AI and Machine Learning unit. \n\n**In this professional learning module, you will:**\n* Get an introduction to AI and Machine Learning.\n* Practice key concepts included in the unit.\n* Engage with AI Lab and App Lab.\n* Explore end of chapter projects.\n* Make a plan for implementing the unit with your students.\n\n**Suggested time:** 120 minutes"
        hello-world-csc:
          lessons:
            lesson-1:
              name: Hello World CSC
          lesson_groups: {}
          name: hello-world-csc
          title: Hello World
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd-playground:
          lessons:
            lesson-1:
              name: Level Updates
            Innovations in Computing:
              name: Innovations in Computing
          lesson_groups: {}
          name: csd-playground
          title: CSD Playground
          description_audience: Curriculum Writers
          description_short: For staging updates to lessons or levels between curriculum versions
          description: For staging updates to lessons or levels between curriculum versions
          student_description: ''
        csc-pilot-2022-ecosystems:
          lessons:
            lesson-1:
              name: 'Hello World CSC '
            lesson-2:
              name: Overfishing Simulation
            lesson-3:
              name: Model Animal Adaptations
            Hello World CSC:
              name: Hello World CSC
          lesson_groups: {}
          name: csc-pilot-2022-ecosystems
          title: Ecosystems
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csc-pilot-2022-timecapsule:
          lessons:
            lesson-1:
              name: Visual Effects
            lesson-2:
              name: The Time We Live In
            lesson-3:
              name: Coding My Time Capsule
            lesson-4:
              name: Gallery Walk
            Poem Art:
              name: Poem Art
          lesson_groups: {}
          name: csc-pilot-2022-timecapsule
          title: Time Capsule
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csc-pilot-2022-starquilts:
          lessons:
            lesson-1:
              name: Native American Star Quilts
            lesson-2:
              name: Getting Started with The Artist
            lesson-3:
              name: Code Your Star Quilt
          lesson_groups: {}
          name: csc-pilot-2022-starquilts
          title: Star Quilts Module
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csc-pilot-2022-fables:
          lessons:
            lesson-1:
              name: Hello World - CSC
            lesson-2:
              name: Code Your Fable
            lesson-3:
              name: Code Your Fable
            Hello World CSC:
              name: Hello World CSC
            lesson-4:
              name: "[Optional] Introduction to Fables"
            lesson-5:
              name: Plan Your Fable
            lesson-6:
              name: Share Your Fable
          lesson_groups: {}
          name: csc-pilot-2022-fables
          title: Fables
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csd1-2022:
          lessons:
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Input and Output:
              name: Input and Output
            Processing:
              name: Processing
            Storage:
              name: Storage
            Project - Propose an App:
              name: Project - Propose an App
            Post-Project Test:
              name: Post-Project Test
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              name: Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              name: Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              name: Intro to Problem Solving - Paper Tower (Alternate Lesson 1)
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Animals Theme (Alternate Lesson 3)
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              name: Exploring Problem Solving - Games Theme (Alternate Lesson 3)
          lesson_groups:
            cspSurvey:
              display_name: Survey
            csd1_1:
              display_name: 'Chapter 1: The Problem Solving Process'
            csd1_2:
              display_name: 'Chapter 2: Computers and Problem Solving'
            csd1_3:
              display_name: Alternate Lessons
          title: Problem Solving and Computing ('22-'23)
          description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing. \n\n**Implementation Guidance for Problem Solving and Computing**\n- The first chapter of this unit should be completed before any other unit in CS Discoveries\n- Alternate lessons are provided for some lessons in this unit, depending on your classroom context\n- You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit\n"
          student_description: "Problem Solving and Computing is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r\n"
          description_short: "  Learn how humans work with computers to solve problems."
          description_audience: ''
          name: csd1-2022
        csd2-2022:
          lessons:
            Exploring Web Pages:
              name: Exploring Web Pages
            Intro to HTML:
              name: Intro to HTML
            Headings:
              name: Headings
            'Mini-Project: HTML Web Page':
              name: 'Mini-Project: HTML Web Page'
            Digital Footprint:
              name: Digital Footprint
            Styling Text with CSS:
              name: Styling Text with CSS
            'Mini-Project: Your Personal Style':
              name: 'Mini-Project: Your Personal Style'
            Intellectual Property:
              name: Intellectual Property
            Using Images:
              name: Using Images
            Websites for Expression:
              name: Websites for Expression
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Your Web Page - Prepare:
              name: Your Web Page - Prepare
            Project - Personal Web Page:
              name: Project - Personal Web Page
            Websites for a Purpose:
              name: Websites for a Purpose
            Team Problem Solving:
              name: Team Problem Solving
            Sources and Research:
              name: Sources and Research
            CSS Classes:
              name: CSS Classes
            Planning a Multi-Page Site:
              name: Planning a Multi-Page Site
            Linking Pages:
              name: Linking Pages
            Project - Website for a Purpose:
              name: Project - Website for a Purpose
            Peer Review and Final Touches:
              name: Peer Review and Final Touches
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
            'Websites for Expression ':
              name: Websites for Expression
            Planning a Multi-page Website:
              name: Planning a Multi-Page Site
            lesson-1:
              name: CS Discoveries Post-Course Survey
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csd2_1v2:
              display_name: 'Chapter 1: Creating Webpages'
            csd2_2v2:
              display_name: 'Chapter 2: Multi-page Websites'
            cspSurvey:
              display_name: Survey
          title: Web Development ('22-'23)
          description: |-
            In Web Development, students are empowered to create and share content on their own web pages. They begin by thinking about the role of the web and how it can be used as a medium for creative expression. As students develop their pages and begin to see themselves as programmers, they are encouraged to think critically about the impact of sharing information online and how to be more critical consumers of content. They are also introduced to problem solving as it relates to programming while they learn valuable skills such as debugging, using resources, and teamwork. At the conclusion of the unit, students will have created a personal website they can publish and share.


            **Implementation Guidance for Web Development**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: " In this unit, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging, using resources, and teamwork.  "
          description_short: "  Learn to build your own web site in Web Lab."
          description_audience: ''
          name: csd2-2022
        csd3-2022:
          lessons:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Parameters:
              name: Shapes and Parameters
            Variables:
              name: Variables
            Random Numbers:
              name: Random Numbers
            Sprites:
              name: Sprites
            Sprite Properties:
              name: Sprite Properties
            Text:
              name: Text
            Mini-Project - Captioned Scenes:
              name: Mini-Project - Captioned Scenes
            The Draw Loop:
              name: The Draw Loop
            Sprite Movement:
              name: Sprite Movement
            Mini-Project - Animation:
              name: Mini-Project - Animation
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Mouse Input:
              name: Mouse Input
            Project - Interactive Card:
              name: Project - Interactive Card
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Mini-Project - Side Scroller:
              name: Mini-Project - Side Scroller
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Mini-Project - Flyer Game:
              name: Mini-Project - Flyer Game
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            Project - Design a Game:
              name: Project - Design a Game
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
            'Mini-Project: Captioned Scenes':
              name: Mini-Project - Captioned Scenes
            'Mini-Project: Animation':
              name: Mini-Project - Animation
            'Mini-Project: Side Scroller':
              name: Mini-Project - Side Scroller
            'Mini-Project: Flyer Game':
              name: Mini-Project - Flyer Game
            lesson-1:
              name: CS Discoveries Post-Course Survey
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csd3_1:
              display_name: 'Chapter 1: Images and Animations'
            csd3_2:
              display_name: 'Chapter 2: Building Games'
            cspSurvey:
              display_name: Survey
          title: Interactive Animations and Games ('22-'23)
          description: |-
            In the Interactive Animations and Games unit, students create programmatic images, animations, interactive art, and games. Starting off with simple, primitive shapes and building up to more sophisticated sprite-based games, students become familiar with the programming concepts and the design process computer scientists use daily. They then learn how these simpler constructs can be combined to create more complex programs. In the final project, students develop a personalized, interactive program.

            **Implementation Guidance for Interactive Animations and Games**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: " In this unit, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          name: csd3-2022
        csd4-2022:
          lessons:
            Designing With Empathy:
              name: Designing With Empathy
            Understanding Your User:
              name: Understanding Your User
            User Centered Design   Define and Prepare:
              name: User Centered Design - Define and Prepare
            User Centered Design   Try and Reflect:
              name: User Centered Design - Try and Reflect
            User Interfaces:
              name: User Interfaces
            Feedback and Testing:
              name: Feedback and Testing
            Identifying User Needs:
              name: Identifying User Needs
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Exploring UI Elements:
              name: Exploring UI Elements
            Build a Paper Prototype:
              name: Build a Paper Prototype
            Prototype Testing:
              name: Prototype Testing
            Design Mode in App Lab:
              name: Design Mode in App Lab
            Build a Digital Prototype:
              name: Build a Digital Prototype
            Events in AppLab:
              name: Events in App Lab
            Linking Prototype Screens:
              name: Linking Prototype Screens
            Testing the App:
              name: Testing the App
            Bugs and Features:
              name: Bugs and Features
            Updating Your Prototype:
              name: Updating Your Prototype
            Project - App Presentation:
              name: Project - App Presentation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
            Analysis of Design:
              name: Designing With Empathy
            User-Centered Design 1:
              name: User Centered Design   Define and Prepare
            User-Centered Design 2:
              name: User Centered Design   Try and Reflect
            Paper Prototypes:
              name: Build a Paper Prototype
            Digital Design:
              name: Design Mode in App Lab
            Events In AppLab:
              name: Events in AppLab
            Linking Screens:
              name: Linking Prototype Screens
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csd4_1:
              display_name: 'Chapter 1: User Centered Design'
            csd4_2:
              display_name: 'Chapter 2: App Prototyping'
            cspSurvey:
              display_name: Survey
          title: The Design Process ('22-'23)
          description: |-
            The Design Process unit transitions students from thinking about computer science as a tool to solve their own problems towards considering the broader social impacts of computing. Through a series of design challenges, students are asked to consider and understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which students have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test their solutions with real users to get feedback and drive further iteration.

            **Implementation Guidance for The Design Process**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: This unit introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          description_short: "  Learn how to design a program that meets the needs of your users."
          description_audience: ''
          name: csd4-2022
        csd5-2022:
          lessons:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: Representing Numbers
            Combining Representations:
              name: Combining Representations
            Keeping Data Secret:
              name: Keeping Data Secret
            Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving With Data
            Structuring Data:
              name: Structuring Data
            Interpreting Data:
              name: Interpreting Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Data and Machine Learning:
              name: Data and Machine Learning
            Project - Make a Recommendation:
              name: Project - Make a Recommendation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
            Project - Create a Representation:
              name: Create a Representation
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            csd5_1:
              display_name: 'Chapter 1: Representing Information'
            csd5_2:
              display_name: 'Chapter 2: Solving Data Problems'
            cspSurvey:
              display_name: Survey
          title: Data and Society ('22-'23)
          description: |-
            The Data and Society unit is about the importance of using data to solve problems and it highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter, students learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. In the final project, students gather their own data and use it to develop an automated solution to a problem.

            **Implementation Guidance for Data and Society**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: This unit is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of your choosing.
          description_short: Learn how people use computers to solve data problems.
          description_audience: ''
          name: csd5-2022
        csd7-2022:
          lessons:
            Introduction to Machine Learning:
              name: Introduction to Machine Learning
            Types of Machine Learning:
              name: Types of Machine Learning
            Innovations in AI:
              name: Innovations in AI
            Patterns in Data:
              name: Patterns in Data
            Classification Models:
              name: Classification Models
            Introduction to AI Lab:
              name: Introduction to AI Lab
            Importing Models in App Lab:
              name: Importing Models in App Lab
            Model Cards:
              name: Model Cards
            Saving Models in AI Lab:
              name: Saving Models in AI Lab
            Model Cards in App Lab:
              name: Model Cards in App Lab
            Numerical Models:
              name: Numerical Models
            Numerical Data in AI Lab:
              name: Numerical Data in AI Lab
            Customizing Apps:
              name: Customizing Apps
            AI Code of Ethics:
              name: AI Code of Ethics
            'Mini-Project: Make a Machine Learning App':
              name: 'Project: Make a Machine Learning App'
            Issue Statements:
              name: Issue Statements
            Survey Planning:
              name: Survey Planning
            Survey Data in AI Lab:
              name: Survey Data in AI Lab
            Troubleshooting Models:
              name: Troubleshooting Models
            Creating an App:
              name: Creating an App
            Design an AI App:
              name: Project - Design an AI App
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
            Similarity Models:
              name: Numerical Models
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
            lessonGroup-4:
              display_name: Survey
          title: AI and Machine Learning ('22-'23)
          description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **Implementation guidance for the AI and Machine Learning Unit**

            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. This can be accomplished by having students complete the [App Lab Hour of Code](https://studio.code.org/s/applab-intro/reset) before starting this unit.
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](https://studio.code.org/s/self-paced-pl-csd5-2021). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: This unit is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop your own machine learning projects around real-world data. The unit culminates with designing your own machine learning app to solve a personally relevant problem.
          description_short: Learn to about Artificial Intelligence and Machine Learning
          description_audience: ''
          name: csd7-2022
        csd6-2022:
          lessons:
            Innovations in Computing:
              name: Innovations in Computing
            The Circuit Playground:
              name: The Circuit Playground
            Updating Screen Elements:
              name: Updating Screen Elements
            Board Events:
              name: Board Events
            Variables and If Statements:
              name: Variables and If Statements
            'Mini-Project: On-The-Go App':
              name: 'Mini-Project: Field Collector App'
            Color LEDs:
              name: Color LEDs
            Getting Screen Inputs:
              name: Getting Screen Inputs
            Combining Inputs and Outputs:
              name: Combining Inputs and Outputs
            'Project: Human Device Interaction':
              name: 'Project: Human Device Interaction'
            Board Sensors:
              name: Board Sensors
            Accelerometer:
              name: Accelerometer
            Making Music:
              name: Making Music
            Functions:
              name: Functions
            'Mini-Project: Interactive Art':
              name: 'Mini-Project: Interactive Art'
            Physical Outputs and LEDs:
              name: Physical Outputs and LEDs
            Physical Inputs and Buttons:
              name: Physical Inputs and Buttons
            Project - Prototype an Innovation:
              name: Project - Prototype an Innovation
            Post-Project Test:
              name: Post-Project Test
            CS Discoveries Post-Course Survey:
              name: CS Discoveries Post-Course Survey
            EOU Student Facting Survey - [Course]:
              name: EOU Student Facting Survey - [Course]
          lesson_groups:
            lessonGroup-2:
              display_name: 'Chapter 1: Inputs and Outputs'
            lessonGroup-3:
              display_name: 'Chapter 2: Building Physical Prototypes'
            lessonGroup-4:
              display_name: Survey
          name: csd6-2022
          title: Physical Computing ('22-'23)
          description_audience: ''
          description_short: Learn to program with physical devices.
          description: |-
            In the Physical Computing unit, students explore the role of physical devices in computing. Using App Lab and Adafruit’s Circuit Playground, students develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. Then, students explore how physical devices can be used to react to the world around them using a “maker” mindset to create prototypes with everyday materials.

            **Implementation Guidance for Physical Computing**
            - Complete the first three lessons of the Problem Solving and Computing unit before starting
            - This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. This can be accomplished by having students complete the [App Lab Hour of Code](https://studio.code.org/s/applab-intro/reset) before starting this unit.
            - This unit requires students to have access to Circuit Playground's - [click here](https://code.org/circuitplayground) for more information about using Circuit Playground's in your classroom
            - Guidance for how to support students in programming levels and differentiate tasks are available in the [Programming Levels Guide](https://docs.google.com/document/d/1WGywQ25khB6-FB20x6wO9dGVO9_qJlWkuLVLREJS4Jo/preview) and [Differentiation Guide](https://docs.google.com/document/d/15Y6Mo3fMUtHq16SSskABgcYE-5xfk-Ewv0z_o4uaLdI/preview)
            - You can view the full [Curriculum Guide](https://docs.google.com/document/d/1VUbXHxXqHj5QCb4eSb756KKc7NDzbOLZUE5bPPQmJR8/preview) and [Implementation Guide](https://docs.google.com/document/d/112OA3_KbicOotqopqUyvXoWPWszz3_LHeMlg0ikCabk/preview) for more information about this unit
          student_description: This unit explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
        csd-post-survey-2022:
          lessons:
            Post-Course Survey:
              name: Post-Course Survey
          lesson_groups: {}
          name: csd-post-survey-2022
          title: CS Discoveries Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Discoveries Post-Course Survey. This unit can be assigned after students complete their final unit in CS Discoveries.
          student_description: This unit contains a survey for when your class is finished with the units in CS Discoveries. Your teacher will tell you when it's time to take this survey.
        testtess2:
          lessons: {}
          lesson_groups: {}
          name: testtess2
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          student_description: ''
        csp-post-survey-2022:
          lessons:
            Course Survey:
              name: Course Survey
          lesson_groups: {}
          name: csp-post-survey-2022
          title: CS Principles Post-Course Survey
          description_audience: ''
          description_short: ''
          description: This unit contains the CS Principles Post-Course Survey.
          student_description: This unit contains a survey about the CS Principles Course. Your teacher will tell you when it's time to take this survey.
        aiml-2022:
          lessons:
            Introduction to Machine Learning:
              name: Introduction to Machine Learning
            Patterns in Data:
              name: Patterns in Data
            Classification Models:
              name: Classification Models
            Introduction to AI Lab:
              name: Introduction to AI Lab
            Importing Models in App Lab:
              name: Importing Models in App Lab
            Model Cards:
              name: Model Cards
            Saving Models in AI Lab:
              name: Saving Models in AI Lab
            Model Cards in App Lab:
              name: Model Cards in App Lab
            Numerical Models:
              name: Numerical Models
            Numerical Data in AI Lab:
              name: Numerical Data in AI Lab
            Customizing Apps:
              name: Customizing Apps
            AI Code of Ethics:
              name: AI Code of Ethics
            'Mini-Project: Make a Machine Learning App':
              name: 'Mini-Project: Make a Machine Learning App'
            Survey Planning:
              name: Survey Planning
            Survey Data in AI Lab:
              name: Survey Data in AI Lab
            Troubleshooting Models:
              name: Troubleshooting Models
            Creating an App:
              name: Creating an App
            Types of Machine Learning:
              name: Types of Machine Learning
            Innovations in AI:
              name: Innovations in AI
            Issue Statements:
              name: Issue Statements
            Design an AI App:
              name: Design an AI App
          lesson_groups:
            lessonGroup-2:
              display_name: Chapter 1 - Understanding Machine Learning
            lessonGroup-3:
              display_name: Chapter 2 - Design a Machine Learning App
          name: aiml-2022
          title: AI and Machine Learning Module
          description_audience: ''
          description_short: Learn about Artificial Intelligence and Machine Learning
          description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. Students explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            This unit assumes students are familiar with App Lab, specifically using Design Mode to create a user interface and using Events to change the screen when clicking a button. [Click Here](https://docs.google.com/document/d/1Wkg4DqfTDQVAxau217P0W_LmiGpNbfTSiHpkJbN2we4/preview) to learn more about recommendations for introducing students to App Lab before this unit.

            **Professional Development:** If you are interested in teaching this course, we recommend completing the free [AI/ML Self-Paced Professional Development Module](https://studio.code.org/s/self-paced-pl-csd5-2021). The module is designed to take 2 hours to complete. No previous experience with coding or AI is assumed.
          student_description: |-
            This unit is a hands-on introduction to developing a machine learning model with tabular data. You will explore how computers learn from data to make decisions, then develop machine learning projects around real-world data. The unit culminates in designing a machine learning app to solve a personally relevant problem.

            **For Teachers:** [Click here](https://studio.code.org/s/aiml-2022?viewAs=Instructor) to see lesson plans and teacher resources for this unit.
        vpl-csd-2022:
          lessons:
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            Module 5:
              name: Module 5
            Module 6:
              name: Module 6
            Module 7:
              name: Module 7
            Module 8:
              name: Module 8
          title: CS Discoveries Virtual Professional Learning 2022 - 23
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: vpl-csd-2022
        vpl-csp-2022:
          lessons:
            Module 1:
              name: Module 1
            Module 2:
              name: Module 2
            Module 3:
              name: Module 3
            Module 4:
              name: Module 4
            'Module 5: Unit 7 and Understanding Functions with Parameters and Return':
              name: 'Module 5: Unit 7 and Understanding Functions with Parameters and Return'
            'Module 6: Introduction to the Create Performance Task':
              name: 'Module 6: Introduction to the Create Performance Task'
            'Module 7: Tools and Structure in Unit 9 - Data':
              name: 'Module 7: Tools and Structure in Unit 9 - Data'
            'Module 8: Building Community and Preparing Students for the AP Exam':
              name: 'Module 8: Building Community and Preparing Students for the AP Exam'
            Module 5:
              name: 'Module 5: Unit 7 and Understanding Functions with Parameters and Return'
            Module 6:
              name: 'Module 6: Introduction to the Create Performance Task'
            Module 7:
              name: 'Module 7: Tools and Structure in Unit 9 - Data'
            Module 8:
              name: 'Module 8: Building Community and Preparing Students for the AP Exam'
          title: CS Principles Virtual Professional Learning 21 - 22
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        self-paced-pl-csd1-2022:
          lessons:
            Welcome to Codeorg:
              name: Welcome to Code.org
            Welcome to "Teaching CS Discoveries":
              name: Welcome to "Teaching CS Discoveries"
            lesson-1:
              name: Welcome to Code.org
            lesson-2:
              name: Welcome to "Teaching CS Discoveries"
          lesson_groups:
            lessonGroup-2:
              display_name: Welcome
          title: 'Module 1: Welcome '
          description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and this professional learning course. \n\n**You will:**\n* Get an introduction to Code.org and CS Discoveries.\n* Learn how to engage in this professional learning course.\n\n**Suggested Time:** 10 minutes"
          description_short: ''
          description_audience: ''
        self-paced-pl-csd2-2022:
          lessons:
            Welcome to Codeorg:
              name: Welcome to Code.org
            Welcome to "Teaching CS Discoveries":
              name: Welcome to "Teaching CS Discoveries"
            Navigating the Codeorg learning platform:
              name: Navigating the Code.org learning platform
            Navigating lesson plans and resources:
              name: Navigating lesson plans and resources
            Navigating support:
              name: Navigating support
            lesson-4:
              name: Navigating the Code.org learning platform
            lesson-3:
              name: Navigating lesson plans and resources
            lesson-8:
              name: Navigating support
          lesson_groups:
            lessonGroup-2:
              display_name: Navigating Code.org
          title: 'Module 2: Navigating Code.org'
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes\n\n\n\n\n"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Discoveries. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          description_short: ''
          description_audience: ''
        self-paced-pl-csd3-2022:
          lessons:
            Overview of course content:
              name: Overview of course content
            Overview of learning tools:
              name: Overview of learning tools
            'Overview of implementation ':
              name: 'Overview of implementation '
            lesson-1:
              name: Overview of course content
            lesson-2:
              name: Overview of learning tools
            lesson-3:
              name: 'Overview of implementation '
          lesson_groups:
            lessonGroup-2:
              display_name: Overview of CS Discoveries
          title: 'Module 3: Overview of CS Discoveries'
          description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
          student_description: "This module will provide you with an overview of the CS Discoveries course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom. \n\n**You will:**\n\n* Gain a high-level understanding of the CS Discoveries curriculum.\n* Become familiar with the programming environments used within CS Discoveries.\n* Decide which units of CS Discoveries you will teach in your class.\n\n**Suggested time:** 60 minutes"
          description_short: ''
          description_audience: ''
        self-paced-pl-csd4-2022:
          lessons:
            Role of the teacher:
              name: Role of the teacher
            Learning CS Discoveries:
              name: Learning CS Discoveries
            Teaching CS Discoveries:
              name: Teaching CS Discoveries
            lesson-1:
              name: Role of the teacher
            lesson-2:
              name: Learning CS Discoveries
            lesson-3:
              name: Teaching CS Discoveries
          lesson_groups:
            lessonGroup-2:
              display_name: Teaching and learning CS Discoveries
          title: 'Module 4: Teaching and learning CS Discoveries'
          description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
          student_description: "In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Discoveries course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Discoveries classroom and make a plan for how you will support student learning while teaching the course. \n\n**You will:**\n* Consider the role of the teacher in a CS Discoveries classroom. \n* Learn about authentic CS practices that students will develop throughout the CS Discoveries course.\n* Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion. \n\n**Suggested Time:** 50 minutes"
          description_short: ''
          description_audience: ''
        self-paced-pl-csp1-2022:
          lessons:
            Welcome to Codeorg:
              name: Welcome to Code.org
            Welcome to “Teaching CS Principles”:
              name: Welcome to “Teaching CS Principles”
            lesson-1:
              name: Welcome to Code.org
            lesson-2:
              name: Welcome to “Teaching CS Principles”
          title: 'Module 1: Welcome'
          description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
          student_description: "This module is a short introduction to both Code.org and professional learning modules. \n\n**You will:**\n* Get an introduction to Code.org and CS Principles.\n* Learn how to engage in professional learning modules.\n\n**Suggested Time:** 10 minutes"
          description_short: ''
          description_audience: ''
        self-paced-pl-csp2-2022:
          lessons:
            Navigating the Codeorg learning platform:
              name: Navigating the Code.org learning platform
            Navigating lesson plans and resources:
              name: Navigating lesson plans and resources
            Navigating support:
              name: Navigating support
            lesson-1:
              name: Navigating the Code.org learning platform
            lesson-2:
              name: Navigating lesson plans and resources
            lesson-3:
              name: Navigating support
          title: 'Module 2: Navigating Code.org'
          description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          student_description: "This module is designed to orient you to the tools you will use to support student learning while teaching CS Principles. \n\n**You will:**\n\n* Navigate the Code.org website and teacher tools.\n* Set up a classroom section\n* Locate and use course lesson plans and teacher resources. \n* Learn how to access support while teaching the course.\n\n**Suggested time:** 60 minutes"
          description_short: ''
          description_audience: ''
        self-paced-pl-csp3-2022:
          lessons:
            Overview of course content:
              name: Overview of course content
            Overview of learning tools:
              name: Overview of learning tools
            Overview of implementation:
              name: Overview of implementation
            lesson-1:
              name: Overview of course content
            lesson-2:
              name: Overview of learning tools
            lesson-3:
              name: Overview of implementation
          title: Overview of CS Principles
          description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
          student_description: |-
            This module will provide you with an overview of the CS Principles course with an emphasis on concepts students will learn and tools students will use throughout the course. Engaging in this module will help you to make decisions about how to select the course content that you will implement in your classroom.

            **You will**:

            * Gain a high-level understanding of the CS Principles curriculum.
            * Learn more about the pedagogical approaches used to teach both non-programming and programming units.
            * Become familiar with the student learning tools used within CS Principles.
            * Explore the components of the AP Exam, as well as your responsibilities as a teacher if you plan to offer CS Principles as an AP course.
            * Build an implementation plan for the school year.

            **Suggested time**: 90 minutes
          description_short: ''
          description_audience: ''
        self-paced-pl-csp4-2022:
          lessons:
            The role of the teacher:
              name: The role of the teacher
            Learning CS Principles:
              name: Learning CS Principles
            Teaching CS Principles:
              name: Teaching CS Principles
            lesson-1:
              name: The role of the teacher
            lesson-2:
              name: Learning CS Principles
            lesson-3:
              name: Teaching CS Principles
            lesson-4:
              name: Connect with the CS community
          title: Teaching and learning CS Principles
          description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Principles course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Principles classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Principles classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Principles course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.
            * Learn about opportunities to connect with the broader CS community.

            **Suggested Time**: 70 minutes
          student_description: |-
            In this module, you will be introduced to authentic CS practices that students will engage with throughout the CS Principles course. These practices include debugging, using resources, and pair programming. You will also explore the role of the teacher within a CS Principles classroom and make a plan for how you will support student learning while teaching the course.

            **You will**:

            * Consider the role of the teacher in a CS Principles classroom.
            * Learn about authentic CS practices that students will develop throughout the CS Principles course.
            * Make a plan for how you will support student learning through differentiation, ongoing assessment, and promoting a culture of inclusion.
            * Learn about opportunities to connect with the broader CS community.

            **Suggested Time**: 70 minutes
          description_short: ''
          description_audience: ''
          lesson_groups: {}
          name: self-paced-pl-csp4-2022
        csa9-2022:
          lessons:
            The AP CSA Exam:
              name: The AP CSA Exam
            MCQ Pre-Assessment:
              name: MCQ Pre-Assessment
            MCQ Study Plan:
              name: MCQ Study Plan
            MCQ Practice – Day 1:
              name: MCQ Practice – Day 1
            MCQ Practice – Day 2:
              name: MCQ Practice – Day 2
            FRQ Pre-Assessment:
              name: FRQ Pre-Assessment
            FRQ Study Plan:
              name: FRQ Study Plan
            FRQ Practice – Day 1:
              name: FRQ Practice – Day 1
            FRQ Practice – Day 2:
              name: FRQ Practice – Day 2
            Mock MCQ Exam – Day 1:
              name: Mock MCQ Exam – Day 1
            Mock MCQ Exam – Day 2:
              name: Mock MCQ Exam – Day 2
            Mock FRQ Exam – Day 2:
              name: Mock FRQ Exam – Day 2
            Mock FRQ Exam – Day 1:
              name: Mock FRQ Exam – Day 1
            Mock FRQ Exam – Day 3:
              name: Mock FRQ Exam – Day 3
            Console:
              name: Console
            The Neighborhood:
              name: The Neighborhood
            The Theater:
              name: The Theater
            Mock MCQ Exam – Day 3:
              name: Mock MCQ Exam – Day 3
          lesson_groups:
            lessonGroup-2:
              display_name: Review and Practice
            lessonGroup-3:
              display_name: Mock Exams
            lessonGroup-4:
              display_name: Sandboxes
          name: csa9-2022
          title: AP Exam Review and Practice ('22-'23)
          description_audience: ''
          description_short: Students prepare for the AP CSA Exam by practicing strategies for the multiple-choice and free response questions.
          description: This unit prepares students for the AP CSA Exam by reviewing key concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. Students identify strengths and areas of improvement to create individualized study plans to focus their practice and self-assess their progress.
          student_description: This unit prepares you for the AP CSA Exam by reviewing key concepts, practicing multiple-choice and free response questions, and strengthening test-taking strategies. You identify strengths and areas of improvement to create individualized study plans to focus you practice and self-assess your progress.
        csa-pl-standalone-code-2022:
          lessons:
            lesson-1:
              name: Unit 1 Projects
            lesson-2:
              name: Unit 2 Projects
          lesson_groups: {}
          name: csa-pl-standalone-code-2022
          title: CSA Professional Learning Coding Projects
          description_audience: ''
          description_short: ''
          description: Workshop participants will be able to see example projects and code during PL from the neighborhood, console, and theater.
          student_description: ''
        csc-ecosystems-1:
          lessons:
            Hello World CSC:
              name: Hello World CSC
          lesson_groups: {}
        csc-ecosystems:
          lessons:
            Hello World CSC:
              name: Hello World CSC
          lesson_groups: {}
        dlp-csd-overview-2022:
          lessons:
            Overview:
              name: Overview
            lesson-1:
              name: Overview
          title: CS Discoveries Deeper Learning Overview
          description: Welcome to the 2021 Deeper Learning program for onboarding CS Discoveries facilitators.
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csd-mod1-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Discoveries Deeper Learning Module 1 for Workshop 1
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csd-mod2-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Discoveries Deeper Learning Module 2 for Workshop 2
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csd-mod3-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Discoveries Deeper Learning Module 3 for Workshop 3
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csd-mod4-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Discoveries Deeper Learning Module 4 for Workshop 4
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csp-mod1-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Principles Deeper Learning Module 1 for Workshop 1
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csp-mod2-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Principles Deeper Learning Module 2 for Workshop 2
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csp-mod3-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Principles Deeper Learning Module 3 for Workshop 3
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csp-mod4-2022:
          lessons:
            'Stage 1: Increase Understanding':
              name: 'Stage 1: Increase Understanding'
            'Stage 2: Demonstrate Understanding':
              name: 'Stage 2: Demonstrate Understanding'
            lesson-1:
              name: 'Stage 1: Increase Understanding'
            lesson-2:
              name: 'Stage 2: Demonstrate Understanding'
          title: 2021 CS Principles Deeper Learning Module 4  for Workshop 4
          description: ''
          student_description: ''
          description_short: ''
          description_audience: ''
        dlp-csp-overview-2022:
          lessons:
            Overview:
              name: Overview
            lesson-1:
              name: Overview
          title: 2021 CS Principles Deeper Learning Overview
          description: "###Welcome to the 2021 Deeper Learning program for onboarding CS Principles facilitators."
          student_description: ''
          description_short: ''
          description_audience: ''
