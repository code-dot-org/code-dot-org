"kk":
  data:
    instructions:
      2-3 Artist 1 new_instruction: |
        Сәлем, Мен суретшімін. Мен сурет салуым үшін сен код жазу тиіссін. Бірнеше блоктарды қолданып маған сұр түзілермен сурет салғыз.
        (Әрбір түзу ұзындығы 100 пиксель)
      2-3 Artist 11_instruction: |
        Сегізбұрышты сызып тоқтау (stop) белгісінің жиегін сал, әр қабырғасы 100 пиксель. Қанша градусқа бұрылуын тиіс? Кеңес:
        360 - ты 8 - ге бөлгенде қанша болады?)
      2-3 Artist 12_instruction: |
        "Шеңбер" көз алмасын салып аяқтағандай етіп, "рет қайтала" блогын орнат.
        Егер әрбір қозғалыс оңға бір градусқа бұрылса,
        шеңберді аяқтау үшін қанша рет қайталау керек? 180? 360? 500?
      2-3 Artist 2 new_instruction: |
        Бұл үйде салынып қалмаған қабырғалар бар. Әрбір қабырға
        100-ге тең, бірақ 50 ғана салынған. Қабырғаны аяқта.
      2-3 Artist 2_instruction: "Бұл үйде салынып қалмаған қабырғалар бар. Әрбір қабырға\n100-ге
        тең, бірақ 50 ғана салынған. Қабырғаны аяқта. \n"
      2-3 Artist 3.4_instruction: |
        Секіру блогы суретшіні түзу сызусыз қозғалтады.
        Секіру және сурет салу блогын қолданып пунктир сыз.
      2-3 Artist 3_instruction: |
        Бұл қалпақ биіктігі 100 пиксель. 70 пиксельге кем болатын
        қалпақты сыз.
      2-3 Artist 3new_instruction: |
        Қызыл қалпақтын биіктігі 100 пиксель. 70 пиксельге қысқа болатын
        қара қалпақ суретін сал. Қара қалпақ ені 50 пиксель.
      2-3 Artist 4_instruction: "Маған осы мысықтын үйін аяқтауға көмектесші."
      2-3 Artist 5_instruction: Бұл кодты "рет қайталау" блогымен алмастырып дәл осындай
        үйді 3 блокты қолданып сал.
      2-3 Artist 6_instruction: |
        Бұл үйдін төбесін сал. Үшбұрышты сал. Кеңес:
        барлық 3 қабырғанын ұзындығы бірдей.
      2-3 Artist 7_instruction: |
        Соңғы терезенін оң жақ жартысын салуды аяқта.
        Әрбір шаршының ені 25 пиксель.
      2-3 Artist 8_instruction: |
        Тіктөртбұрышты екі бірдей шаршыға бөліп, әрбір жануардың бөлмесін аяқтаңыз.
        Тіқтөртбұрыш ені 200 пиксель, ал ұзындығы 100 пиксель.
      2-3 Artist 9_instruction: "Батпырауықты аяқта"
      2-3 Artist Assessment 1_instruction: |
        Assessment: Соңғы тісті салып аяқта,
        ені мен ұзындығы 25 пиксель.
      2-3 Artist Debugging 1_instruction: "Төбесі 100 болатындай етіп бұл қалпақты
        жасай аласыз ба?"
      2-3 Artist Debugging 10_instruction: |
        Менің ойын бақылағышымда қозғалыс джостигі өте тар.
        Кеңес: Оны 10 пиксельге кеңейт.
      2-3 Artist Debugging 11_instruction: |
        Маған қар бүршігін аяқтауға көмектесші.
        Бұны аяқтау үшін мен қанша рет "қайталау" керекпін?
      2-3 Artist Debugging 12_instruction: "Мен суреттегі мұхитқа толқын қосайын деп
        отырмын. Маған көмектесесін бе?"
      2-3 Artist Debugging 2_instruction: |
        Мұртшалар салу кодында қателіктер бар.
        Кеңес: әрбір мұртшаның ұзындығы 75.
        Мұртшаларды салу үшін кодтағы қателіктерді жөнде.
      2-3 Artist Debugging 3_instruction: |
        Менің қайығымда тесік бар. Түзудің бұрышын өзгертіп бұны жөндей аласыз ба?
        Кеңес: соңғы бұрыш  15 градусқа ауытқыған.
      2-3 Artist Debugging 4_instruction: |
        Біз ненің суретін салайын деп жатырмыз?
        Сәйкес бұрыштармен түзулерді қолданып суретті аяқта.
      2-3 Artist Debugging 5_instruction: |
        Аяқпен табан салу кодында қателіктер бар.
        Кеңес: Адамның табаны өте ұзын, сізге бір қадам жою керек.
      2-3 Artist Debugging 6_instruction: "Мен аяғы жоқ орындықта отырған сияқтымын.
        Аяқты салу үшін блоктарды қос."
      2-3 Artist Debugging 7_instruction: |
        С керісінше салынған сияқты.
        С дұрыс сала аласыз ба?
      2-3 Artist Debugging 8_instruction: |
        Менің айналмам  аяқталмаған сияқты. How many
        times do I need to repeat to finish it?
      2-3 Artist Debugging 9_instruction: "Бұл сабақ үшін жазылған код қате. Кеңес:
        Бұрыш 60 градусқа ауытқан."
      2-3 Artist Debugging Assessment 1_instruction: "Фигура өте кішкентай. Сіз бұны
        үлкенірек істей аласыз ба? Кеңес: әрбір қабырға 75 пиксельге ұзынырақ болу
        керек."
      2-3 Artist Free Play_instruction: "Еркін ойнау! Өзіңізге не ұнайды соны сала
        беріңіз."
      2-3 Artist Functions 1_instruction: |
        Салем. Мен зомби суретшімін. Мен сурет салғанды жақсы көремін!
        Маған шаршы көзілдірік салуға көмектесші. Кеңес:  шынылар арасындағы көпір
        шаршы қабырғасынан 25 пиксельге кем.
      2-3 Artist Functions 10_instruction: |
        Мұнда екі функция бар. Біріншісі үлкен тегершік салады,
        екншісі кішкентай тегершік салады. Оны машинанын ішінде салуға қолдан!
      2-3 Artist Functions 11.5_instruction: |
        "Алтыбұрышты сал" - міне дәл осындай функция.
        Әрбір циклдан кейін 60 градусқа бұрсан, не болады?
      2-3 Artist Functions 11_instruction: |
        Біз "шаршыны сал" фунциясын "алтыбұрышты сал" функциясы деп атын өзгерттік, бірақ ол әлі шаршылардын суретін салады!
        "Алтыбұрышты сал" фунциясын қабырғасы 50 пиксель болатын алтыбұрыш салуға өзгерте аласын ба?
        Осы функцияны қолданып алтыбұрыш сал.
      2-3 Artist Functions 12_instruction: |
        Функциялар күрделі заттарды бірнеше рет салуға өте жақсы көмектеседі. "Гүлді сал" функциясын қолданып
        гүлдер қорабын гүлдермен толтыра аласын ба?(Кеңес: гүлдер арасында 100 пиксель)
      2-3 Artist Functions 13_instruction: |
        Біз сені төрт функциямен таныстырдық.
        Осы функцияларды циклдармен бірге қолданып сурет салып достарымен бөліс.
        Үлгіні көру үшін орындауды бас.
      2-3 Artist Functions 2_instruction: |
        Функциялармен жаңа блоктар құрастыруға болады!
        Біз шаршылар салу блоктарын "шаршы салу" функциясына енгіздік.
        "Шаршы салу" функциясын қолданып көзілдірік сала аласыз ба? Шаршы қабырғасы 75 пиксель.
      2-3 Artist Functions 3_instruction: |
        Үлкен көзілдірік салу үшін "шаршы салу" функциясында қабырғасын 115 пиксельге өзгертіңіз.
        Екі шаршы арасы 45 пиксель болу керек.
      2-3 Artist Functions 4_instruction: '"Қайталау" блогын қолданып осы 3 шаршыны
        сал.'
      2-3 Artist Functions 7_instruction: |
        "Үйді салу" функциясын қолданып екі үйді екі түрлі параметрлер арқылы суретін сал.
        (Кеңес: бірінші үй 100 пиксель).
      2-3 Artist Functions 9_instruction: |
        Бұл қар бүршағын жасайтын функция. Осы функцияны қолданып
        қыс пейзажын сал! Бұл деңгейде ешқандай есеппен жұмбақ жоқ, еркін сурет сала беріңіз.
        Көңіл көтеріңіз!
      2-3 Artist Loops 1_instruction: |
        Алтыбұрыштын қабырғасы 100 пиксель болатындай жасуша сала аласын ба?
        60 градусқа ғана бұру керек екенін, есте сақтаңыз!
      2-3 Artist Loops 10_instruction: "Соңғы қадамымызды жартылай алға бассақ, біздің
        үлгі қалай өзгереді?"
      2-3 Artist Loops 11_instruction: "Біздің жасаған кодымызға *басқа* цикл енгізейік!
        Соңғы сыртқы циклда бұрыш енгізуге ұмытпа."
      2-3 Artist Loops 2_instruction: |
        Now use a repeat block to make the cell a
        shell.
      2-3 Artist Loops 4_instruction: "Осы қабықшаны циклдармен қайталай берсе не
        болады?"
      2-3 Artist Loops 5_instruction: "Енді циклға шағын өзгертулер енгізгенде сурет
        қалай өзгеретінін көрейік."
      2-3 Artist Loops 6_instruction: "Циклға тағы бір қозғалыс енгізгенде сурет қалай
        өзгеретінін көрейік."
      2-3 Artist Loops 7_instruction: |
        Біз циклдарды қолданып кез-келген көпбұрыш құра аламыз.
        Ромбты алтыбұрыш ішінде құра аламыз ба?
      2-3 Artist Loops 8_instruction: "Екі элементтіде цикл ішіне кіргізейік."
      2-3 Artist Loops 9_instruction: |-
        Біз сондай-ақ элементті циклға орнатайын деп жатырмыз,
        бірақ
        қазір біз олар арасында қашықтық орнатамыз. \r
        Алдындағы кодты қолдан, бірақ сыртқы циклға бір қадам қос.
      2-3 Artist Loops New 1_instruction: |
        Роботтын басын салайық.
        Шаршы қабырғалары 100 пиксель болатындай етіп сала аласын ба?
      2-3 Artist Loops New 10_instruction: V - ларды цикл арқылы бірге қосып, не болатынын
        көрейік.
      2-3 Artist Loops New 11_instruction: |
        Енді бұны 24 рет салайық.
        Осы кодқа 30 градусқа бұрылатын қозғалыс қос және бұнын барлығын қайталау блогына орнат.
      2-3 Artist Loops New 12_instruction: "Қабырғалары 100 пиксель болатын гауһар
        тас сал."
      2-3 Artist Loops New 13_instruction: "Енді гауһар тасты циклда 3 рет сал."
      2-3 Artist Loops New 14_instruction: "Енді гауһар тасты циклда 10 рет салайық,
        бірақ әрбір гауһар тасты 90 градусқа бұр."
      2-3 Artist Loops New 15_instruction: "Қызықты бір нәрсе сал."
      2-3 Artist Loops New 2_instruction: "Мында шаршыны салуға керек код бар. Осы
        кодты қайталау блогында 4 рет қайталасан не болады?"
      2-3 Artist Loops New 9_instruction: "Екі қабырғасы 50 пиксель болатын V сал."
      2-3 Artist Match Hex Pic_instruction: "Жарыс:  Маған алтыбұрышты аяқтауға көмектес."
      2-3 Artist Match Rho Pic_instruction: "Жарыс:  жоғалған кодты аяқта."
      2-3 Artist Match Sq Pic_instruction: "Жарыс:  жоғалған кодты толықтыр"
      2-3 Artist Match Tri pic_instruction: "Жарыс:  жоғалған кодты толтыр."
      2-3 Artist Nested Loops 1_instruction: |-
        Сіз онын алдында фигуралар салдыңыз,
        бірақ сіз бір циклды екінші циклға салуға болатынын білдіңіз бе?
        \r
        Өрнек салу үшін
        бүкіл блок кодты 3 рет қайтала.
      2-3 Artist Nested Loops 10_instruction: "Өрнекті бітіру үшін бұл кодты 12 рет
        қайтала."
      2-3 Artist Nested Loops 11_instruction: "Өрнекті бітіру үшін барлық кодты 4
        рет циклға сал, әрбір циклдан кейін 90 градусқа бұр."
      2-3 Artist Nested Loops 12_instruction: "Бұйраны аяқтау үшін бұл кодты 12 рет
        қайталаңыз."
      2-3 Artist Nested Loops 2_instruction: |
        Енді үшбұрышты 6 рет циклдан өткіз.
        Әрбір үшбұрыштан кейін, оны 60 градусқа бұр.
      2-3 Artist Nested Loops 3_instruction: |
        Осы суретті салу үшін үшбұрышты 12 рет циклдан өткізу керек.
        Қанша градусқа бұру керек екенін анықтау үшін шеңбердегі барлық бұрышты (360) фигураның қабырғалар санына (12) бөл.
      2-3 Artist Nested Loops 4_instruction: |
        Гүл салу үшін гауһар тасты 12 рет циклға сал.
        Кеңес: 12 гауһар тас алдында істеген 12 үшбұрыш сияқты – әрбір фигурадан кейін қанша рет бұру керекпіз?
      2-3 Artist Nested Loops 5_instruction: "Бұл ғимаратқа терезелерді циклдар арқылы
        сал. Терезе ұзындығы 20 пиксель және бір-бірінен 20 пиксель арақашықтықта."
      2-3 Artist Nested Loops 6_instruction: "Бұл динозаврда 8 тікенек бар. Әр тікенек
        30 пиксель. Үшбұрышты 8 рет алдыға қартай циклдан өткіз."
      2-3 Artist Nested Loops 7_instruction: "Күннің көзі шығатындай етіп бұл үшбұрышты
        10 рет циклдан өткіз. Сен әр циклдан кейін қозғалуын керек. Әрбір фигурадан
        кейін канша градусқа бөлу керегін білу үшін шеңбердегі толық бұрышын (360)
        салынып жатқан фигуралар санына бөл."
      2-3 Artist Nested Loops 8_instruction: "Енді біздін суретке шөп қосайық. Әрбір
        шөп түйіні 50 пиксель."
      2-3 Artist Nested Loops 9_instruction: "Біз бұл суретті гүл қосу арқылы аяқтаймыз.
        Гауһар тасты 12 рет циклдан өткіз."
      2-3 Artist Nested Loops Free Play_instruction: "Еркін ойын, бірін-біріне салынған
        циклдар арқылы қызықты нәрсе сал."
      2-3 Bee Conditionals 1_instruction: "Сәлем! Мен арамын. Маған гүлден шірне алуға
        көмектесші."
      2-3 Bee Conditionals 10_instruction: |
        "Күлгін гүлдерде 1 немесе 0 шәрін болуы мүмкін. Байқа, шәріні жоқ гүлден шәрін жинама.\r
      2-3 Bee Conditionals 11_instruction: "Шәріні бар гүлдерден шәрін жина."
      2-3 Bee Conditionals 12_instruction: "Циклды қолданып барлық гүлдердін шәріндерін
        тексеріп жинап ал."
      2-3 Bee Conditionals 13_instruction: "Бал жасау үшін шәрін жина. Кеңес: \n\"Егер
        шәрін\" шартын қызыл гүлге қолдансақ не болады? Бұны циклмен аяқтай аласын
        ба?\n"
      2-3 Bee Conditionals 14_instruction: "Шәрін жинап бал жаса. Байқа, шәріні жоқ
        күлгін гүлден шәрін жинама."
      2-3 Bee Conditionals 15_instruction: "Барлық төрт гілден шәрін жина."
      2-3 Bee Conditionals 2_instruction: "Сәлем, Мен арамын! Маған барлық гүлдерден
        шәрін жинауға көмектесші. Цикл қолдан."
      2-3 Bee Conditionals 3_instruction: "Маған барлық гүлдерден шәрін жинап бал
        жасауға көмектесші. Цикл қолдан."
      2-3 Bee Conditionals 4_instruction: "Барлық гүлдерден шәрін жинап бал жасауға
        көмектесші."
      2-3 Bee Conditionals 5_instruction: "Күлгін гүлдерде 1 немесе 0 шәрін болуы
        мүмкін. Байқа, шәріні жоқ гүлден шәрін жинама. Егер блогын қолданып гүлдерде
        шәрін бар немесе жоқ екенін анықта."
      2-3 Bee Conditionals 6_instruction: "“Егер” блогын қолданып осы гүлде шәрін
        бар немесе жоқ екенін анықта."
      2-3 Bee Conditionals 7_instruction: "Барлық гүлдерден шәріндері болса, шәрін
        жина."
      2-3 Bee Conditionals 8_instruction: "Далада қызыл және күлгін гүлдер бар. Қызыл
        гүлдердің шырын мөлшері белгілі, бірақ күлгін гүлдердікі белгісіз. Барлық
        шәрінді жина."
      2-3 Bee Conditionals 9_instruction: "Барлық гүлдін шәрінін жина."
      2-3 Bee Conditionals Assessment 1_instruction: "Бағалау: барлық шәрінді жина.
        Байқа, күлгін гүлдерде шәрін болмауы мүмкін."
      2-3 Bee Debugging 1_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 10_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 2_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 3_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 4_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 5_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 6_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 7_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 8_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging 9_instruction: "Бұл блоктар маған кедергі жасап жатыр. Қатені
        жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Debugging Assessment 1_instruction: "Бағалау:  Бұл блоктар маған кедергі
        жасап жатыр. Қатені жөнеп, барлық шәрінді жинап, бал жаса."
      2-3 Bee Functions 1_instruction: Функция бірнеше блокты іске қосады. "2 шәрін
        жина " функциясы арқылы әрбір гүлден шәрін жина.
      2-3 Bee Functions 10_instruction: "Күлгін гүлдерде 1 немесе 0 шәрін. Күлгін
        гүлдерден жинайтын функция жаса."
      2-3 Bee Functions 2_instruction: Функция бірнеше блокты іске қосады. "5 шәрін
        жина " функциясы арқылы әрбір сәтте 5 гүлден шәрін жина. Циклды қолданып идеалды
        санау блогын ал.
      2-3 Bee Functions 3_instruction: "Барлық гүлдін шәрінін жина."
      2-3 Bee Functions 4_instruction: '"Шәрін ал және қозғалт" функциясы араны шәрін
        жинап орнына алып келеді. Функцияны қолданып барлық шәрінді жинап ал.'
      2-3 Bee Functions 5_instruction: "Қазір гүлдерде шәрін көбейді. Берілген функцияны
        енгізіп 4 шәріннен жинап, барлық гүлдерден шәрін жинап шық."
      2-3 Bee Functions 6_instruction: "Дәл осындай функцияны 3 гүлден жинауға қолдан."
      2-3 Bee Functions 7_instruction: "Қазір гүлдер алыста. Барлық гүлдерден шәрін
        жинайтын функция құрастыр."
      2-3 Bee Functions 8_instruction: 7 шәрін жинап, алға жылжып, 7 бал жасайтын
        функция құрастыр. Бұл функцияны қолданып әрбір гүлден шәрін жинайтын және
        әрбір бал ұясында бал жасайтындай етіп қолдан.
      2-3 Bee Functions 9_instruction: "Жолдын астына түсіп шәрін жинап, бал жасайтын
        сосын орнына қайтып келетін функция жасаңыз."
      2-3 Bee Functions Assessment 1_instruction: "Бағалау: әрбір гүлден шәрін жинайтын
        функция қолдан."
      2-3 Bee Functions Assessment 2_instruction: "Бағалау: Бір меззетте 3 бал жасайтын
        функция құрастыр."
      2-3 Bee Loops 1_instruction: "Әрбір гүлде 1 бірлік шәріні бар. Барлық гүлден
        шәрін жина. "
      2-3 Bee Loops 10_instruction: "Шартты циклды басқа екі цикл ішінде қолданып,
        барлық шәрінді жинай аласыз ба?"
      2-3 Bee Loops 11_instruction: "Шартты циклды қолданып алаңдағы барлық гүлдерден
        шәрін жинаңыз."
      2-3 Bee Loops 12_instruction: "Шартты циклды қолданып алаңдағы барлық гүлдерден
        шәрін жинаңыз."
      2-3 Bee Loops 13_instruction: "Бағалау: қайталау блогын қолданып барлық шәрінді
        жинап ал."
      2-3 Bee Loops 1A_instruction: "Сәлем, Мен арамын. Маған барлық гүлдердін шәрінін
        жинап беруге көмектесесін бе? "
      2-3 Bee Loops 2_instruction: "Цикл арқылы шәрін жинап бал жаса."
      2-3 Bee Loops 2A_instruction: "Дәл сондай тапсырманы циклмен оңайырақ жасай
        аласын ба?"
      2-3 Bee Loops 3_instruction: "Барлық гүлдерден шәрін жинап, бал ұяларында бал
        жаса."
      2-3 Bee Loops 3A_instruction: "Цикл арқылы барлық шәрінді жинай аласын ба?"
      2-3 Bee Loops 3B_instruction: "Енді қайталау блогын алып барлық шәріндерді жинап,
        бал жаса."
      2-3 Bee Loops 4_instruction: "Алдындағыдай цикл қолдан, бірақ осы жолы ішіне
        бұрылыс қос."
      2-3 Bee Loops 4A_instruction: "Осы тізбекті 3 рет циклдан өткізсен не болады?
        Соңында бал жасауға ұмытпа!"
      2-3 Bee Loops 5_instruction: "Цикл арқылы астына түсіп, шәрін жина."
      2-3 Bee Loops 6_instruction: "Цикл арқылы гүлдердін шәрінін жинап, бал ұясында
        бал жаса."
      2-3 Bee Loops 7_instruction: "Бұл блоктарды цикл ішіне орнатып әр гүлден шәрін
        жина."
      2-3 Bee Loops 8_instruction: Бұл күлгін гүлдерде қанша шәрін бар екені белгісіз.
        "Егер шәрін" циклын қолданып шәрндерді жинап ал. Бұл цикл шәрін > 0 болғанша
        дейін жұмыс істей береді.
      2-3 Bee Loops 9_instruction: "Шарт циклы циклдағы егер әрекеттерін орындай алады.
        Дәл осындай тапсырманы орындау үшін бұл кодқа шарт цикл қос."
      2-3 Bee Loops Assessment 1_instruction: "Бағалау – Барлық шәрінді жинау үшін
        шарт циклын қолдан."
      2-3 Maze 1_instruction: "Маған доңызды ұстап беруге көмектесесін бе? Бірнеше
        блокты бірге қоста, орындауды бас. "
      2-3 Maze 10_instruction: "Мені жасыл зұлымға баста! (Жарылғыш заттан абайлаңыз)"
      2-3 Maze 11_instruction: "Менін қарным ашты, мені гүлге дейін апар! Мен қанша
        рет мына блокты қайталауым керек?"
      2-3 Maze 12 (copy 1)_instruction: 'Осы бес блокты екі блокпен алмастыра аласын
        ба? (Кеңес: "рет қайталау" блогымен цикл жаса.)'
      2-3 Maze 12 (copy 2)_instruction: 'Осы бес блокты екі блокпен алмастыра аласын
        ба? (Кеңес: "рет қайталау" блогымен цикл жаса.)'
      2-3 Maze 12 (old)_instruction: "Мені доңызға қайталау рет блогымен апар!"
      2-3 Maze 12_instruction: 'Осы бес блокты екі блокпен алмастыра аласын ба? (Кеңес:
        "рет қайталау" блогымен цикл жаса.)'
      2-3 Maze 13 (old)_instruction: "Мені доңызға дейін апар, енді дейін қайтала
        блогын қолдан!"
      2-3 Maze 13_instruction: "Мені доңызға екі блокпен апар."
      2-3 Maze 14 (old)_instruction: "Мені доңызға дейін “дейін қайтала” блогымен
        апар!"
      2-3 Maze 14_instruction: Мені күнбағысқа дейін апар! ("рет қайталау" блогы маған
        қай жерде керек?)
      2-3 Maze 15 (old)_instruction: "Мені доңызға дейін “дейін қайтала” блогымен
        апар!"
      2-3 Maze 15_instruction: "Екі циклмен және бірнеше блокты қолданып дыңызға дейін
        апар."
      2-3 Maze 16 (old)_instruction: "Мені доңызға дейін “дейін қайтала” блогымен
        апар!"
      2-3 Maze 16 before_instruction: "Мені доңызға дейін апар."
      2-3 Maze 16_instruction: "Екі циклмен және бірнеше блокты қолданып дыңызға дейін
        апар!"
      2-3 Maze 2_instruction: "Мына доңыз менін ашуымды келтіріп тұр. Маған оны ұстап
        беруіме көмектесші!"
      2-3 Maze 3_instruction: "Маған доңызға дейнгі жолды көрсетіп берші! Жолдағы
        жарылғыш заттан абайла!"
      2-3 Maze 4_instruction: "Мені жасыл зұлымға баста! (Жарылғыш заттан абайлаңыз)"
      2-3 Maze 5_instruction: "Мені жасыл зұлымға баста! (Жарылғыш заттан абайлаңыз)"
      2-3 Maze 6_instruction: "Тыныштық сақтада мені жаман доңызға дейін апар. Әйтпесе
        мен ашуланамын!"
      2-3 Maze 7_instruction: "Мені жасыл зұлымға баста! (Жарылғыш заттан абайлаңыз)"
      2-3 Maze 8_instruction: "Мені доңызға дейін апаршы!"
      2-3 Maze 9_instruction: "Мені жасыл зұлымға баста! (Жарылғыш заттан абайлаңыз)"
      2-3 Maze Loops 1_instruction: 5 блокты қолданып мені доңызға жеткіз?
      2-3 Maze Loops 17_instruction: "Мені күнбағысқа дейін апаршы!"
      2-3 Maze Loops 18_instruction: "Мені күнбағысқа дейін апаршы!"
      2-3 Maze Loops 19_instruction: "Мені күнбағысқа дейін апаршы!"
      2-3 Maze Loops 20_instruction: "Мені күнбағысқа дейін апаршы!"
      2-3 Maze Loops 21_instruction: "Мені күнбағысқа дейін апаршы!"
      2-3 Maze Loops Assessment 1_instruction: "Бағалау:  5 блокты қолданып мені күнбағысқа
        дейін апаршы! "
      2-3 Maze sq1_instruction: "Бұл торапай менің қауырсындарымды сабады. Оларды
        табуға көмектес!"
      2-3 Maze sq10_instruction: "Мені доңызға дейін апаршы! Қай блоктар қайталанады?"
      2-3 Maze sq10v2_instruction: "Мені доңызға дейін апаршы! Қай блоктар қайталанады?"
      2-3 maze sq11_instruction: "Мені доңызға дейін апаршы! Қай блоктар қайталанады?"
      2-3 maze sq12_instruction: Соңығы жауапты "рет қайталау" блогымен аламастыра
        аласын ба?
      2-3 maze sq13_instruction: |
        Құрметті адам. Мен зомбимын. Күнбағыс... бару... керек.
         "дейін қайтала" блогымен цикл жаса.
      2-3 maze sq14_instruction: "Күнбағысты 4 блокты қолданып ала аласын ба?"
      2-3 maze sq15_instruction: "Күнбағысты 5 блокты қолданып ала аласын ба?"
      2-3 maze sq16_instruction: "Жарайды, бұл бағанағыдай, бірақ кішкене басқаша.
        Бес блокпен істей аласын ба?"
      2-3 Maze sq2_instruction: "Маған доңызға дейін жолды көрсеші, жолдағы жарылушы
        заттан байқа!"
      2-3 Maze sq3_instruction: "Мені жасыл зұлымға баста! (Жарылғыш заттан абайлаңыз)"
      2-3 Maze sq4_instruction: "Тыныштық сақтада мені жаман доңызға дейін апар. Әйтпесе
        мен ашуланамын!"
      2-3 Maze sq5_instruction: "Мені доңызға дейін апаршы! Қанша рет блокты қайталауым
        керек?"
      2-3 Maze sq6_instruction: 'Соңғы жауапты екі блокпен алмастыра аласынба? (Кеңес:
        "рет қайтала" блогымен цикл жаса.)'
      2-3 Maze sq7_instruction: "Жасыл кірмеге мені 3 блокпен апара аласын ба."
      2-3 Maze sq8_instruction: Мені доңызға дейін апаршы! ("рет қайталау" қай жерде
        қолданылуы керек?)
      2-3 Maze sq9_instruction: "Аз блокпен цикл құрып доңызды ұстап ал."
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: "Құсты алға жылжытып тыңдамайтын доңызды ұстап беруге
        көмектес"
      4-5 Artist 1_instruction: "Менің қорабымды аяқтауға көмектесші. (әр түзі 300
        писель) "
      4-5 Artist 10_instruction: Кодтын орындалуын көру үшін "Орындау"-ды бас. Сосын,
        бұны жеткілікті рет қайталап суретін аяқта. Түстері әр дайым әр түрлі болады.
      4-5 Artist 11_instruction: "Жасыл түзілерді аяқта. Түзілер 300 пиксель және
        бір-бірінен 15 пиксель аралықта."
      4-5 Artist 2_instruction: "Шаршыны аяқтау үшін бұл кодты циклдан өткізе аласын
        ба?"
      4-5 Artist 3.5_instruction: "Жарайды, мына кодты орындасан не болатын болжамдап
        көр (немесе “Орындау” батырмасын бас). Сосын, бұны жеткілікті рет қайталап
        суретін аяқта. Түстері әр дайым әр түрлі болады."
      4-5 Artist 3_instruction: "Бұл гүлбағынын периметрі 600. Ұзын қабырғасы 200.
        Тіктөртбұрышты сал."
      4-5 Artist 4_instruction: "Шеңберде неше градус?  Түстер шеңберін құру үшін
        блоктарды циклдан өткіз."
      4-5 Artist 5_instruction: "Қай бұрышты қолдандын?"
      4-5 Artist 6_instruction: "Бұл теңқабырғалы үшбұрыштың бұрыштары 60, 60 және
        60. Қабырғалары 200 пиксель. Суретін сал."
      4-5 Artist 7_instruction: "Тік бұрышты үшбұрыш бұрыштары 30, 90, 60. Гипотинуза
        100 пиксель биіктігінен екі есе ұзын. Суретті сал."
      4-5 Artist 8_instruction: "Футбол алаңынын орта сызығы оның жанындағы сызықтарына
        перпендикуляр. Бұл алаңнын периметрі 800, ұзындығы 240. Ені қаншаға тең? Төртбұрыш
        қабырғаларымен орта сызығынын суретін сал."
      4-5 Artist 9_instruction: "Симметриянын екінші жартысын сал. Үшбұрыштар тең
        қабырғалы, ұзындықтары 50 пиксель."
      4-5 Artist Assessment 1_instruction: "Бағалау: цикл арқылы теңқабырғалы үшбұрыш
        сыз. Қабырғасы 300."
      4-5 Artist For Loops 1_instruction: 1 ден 10 ға дейінгі сандарды блоктар арқылы
        енгізіп кодты орында.
      4-5 Artist For Loops 11_instruction: 0, 20, 40, 60, 80... 200 санайтындай етіп
        "үшін" блогын аяқта.
      4-5 Artist For Loops 12_instruction: '"дан" және "дейін" орындарын аыстарсандар
        сандарға не болады? 200, 180, 160, 140, 120...0 санайтындай етіп "үшін" блогын
        аяқта. '
      4-5 Artist For Loops 13_instruction: Бұл дизайн "for" циклсыз басталды және
        өте көп блок қолданылып тұр. Бұл спиральды аяқтау үшін "for" блогын қолдан.  Кеңес
        соңғы түзі 250 пиксель.
      4-5 Artist For Loops 14_instruction: 'Біреу кодты бастапты, кейін бұл кодты
        тезірек істеу жолын тапқан! "for" блогын қолданып басқа блоктардын орнын ауыстырып
        үшбұрышты спиральды қолдан. (Кеңес: соңғы түзі ұзындығы 300 пиксель.)'
      4-5 Artist For Loops 15_instruction: 'Біреу кодты бастапты, кейін бұл кодты
        тезірек істеу жолын тапқан! "for" блогын қолданып басқа блоктардын орнын ауыстырып
        алтыбұрышты спиральды қолдан. (Кеңес: соңғы түзі ұзындығы 200 пиксель.)'
      4-5 Artist For Loops 2_instruction: |
        This is a "for" block. Instead of typing
        1,2,3... 10, the "for" block can repeat the blocks inside it and count the
        numbers for you. Place the number 10 into the "to" section of the "for"
        block.
      4-5 Artist For Loops 3_instruction: 1-ден 50-ге дейін қалай санаймыз? "for"
        блогын енгіз.
      4-5 Artist For Loops 4_instruction: '"for" блокты қолданып 1-ден 10-ға дейін
        бір-бірлеп сана.'
      4-5 Artist For Loops 6_instruction: Қабырғанын ұзындықтары 50, 60, 70, 80 және
        90 пиксель болатын шаршы сал. "Шаршы сал" функциясын 5 рет қолдан.
      4-5 Artist For Loops 7_instruction: 'Дәл сол шаршыларды "санау " блогымен қабырғалардын
        ұзындықтарын өзгертіп сал. "Санау" блогын "шаршы сал" функциясының ішіне сал.
        Кеңес: айнымалылар категориясында.'
      4-5 Artist For Loops 8_instruction: '"for" -дын ішіне блоктарды қосып 10-нан
        200-ге дейін он-оннан санайтын программаны аяқта? "for" – ды циклдар категориясында
        таба аласындар.'
      4-5 Artist For Loops 9_instruction: 5, 10, 15, 20, 25, 30, және 35 диаметрлі
        шеңберлер сыз. "for"блогын қолдан.
      4-5 Artist Free Draw 1_instruction: "Еркін сурет салу! Не салғын соны сала бер."
      4-5 Artist Functions 1_instruction: "Бұл үшбұрышты салу үшін қайталанатын циклды
        қолдан."
      4-5 Artist Functions 10a_instruction: "Бұл кодты 'қар бүршігін сал' функциясына
        орнат және 'өлшем' параметрін 50-ге алмастыр. Функция қар бүршігін 100 пиксельмен
        істейтіндей тұр."
      4-5 Artist Functions 10b_instruction: "'Қар бүршігін салу' функциясымен әр түрлі
        өлшемді бүршіктер сал.  Кеңес: бірінші қар бүршігі 25 пиксель, одан кеінгілер
        осыдан 2 есе үлкен."
      4-5 Artist Functions 11_instruction: '"Алтыбұрышты сал " функциясы "үшбұрышты
        сал" функциясын қолданыды. Алтыбұрыш функциясын аяқта. (Кеңес: Алтыбұрыштың
        6 қабырғасы бар және әрбір қабырғасы 100 пиксель.)'
      4-5 Artist Functions 12_instruction: "'Толқындарды сал' функциясын аяқта.  Әрбір
        толқын бір жоғары және бір төмен толқыннан жасалған. Кеңес: 5 көк толқын сал."
      4-5 Artist Functions 13 Free play_instruction: "Мында планеталар, жұлдыздар,
        зымырандар және роботтар салатын функциялар бар. Сол функцияларды қолданып
        достарымен бөлісетіндей жақсы сурет сал."
      4-5 Artist Functions 14 Free play_instruction: "Мында саған бірнеше функция
        берілген. Сол функцияларды циклдармен бірге қолданып достарымен бөлісетіндей
        жақсы сурет сал. Үлгіні көру үшін “орындау” батырмасын бас."
      4-5 Artist Functions 15 Assessment_instruction: 'Бағалау:  "шашы сал" функциясын
        қолданып шаршылар сал.  Шаршылар 50, 100, және 150 пиксель.'
      4-5 Artist Functions 2a_instruction: Мына блоктарды жаңа функциянын ішіне салып,
        оны "кішкентай үшбұрыш сал" деп ата.
      4-5 Artist Functions 2b_instruction: Мына блоктарды жаңа функциянын ішіне салып,
        оны "кішкентай үшбұрыш сал" деп ата.
      4-5 Artist Functions 3_instruction: 'Енді "орташа үшбұрышты сал " және "үлкен
        үшбұрышты сал"функцияларын жаса. "Кішкентай үшбұрышты жаса" функциясы саған
        берілген. Үшбұрыштар ұзындықтары 50 (кішкентай), 100 (орташа), және 150 (үлкен). '
      4-5 Artist Functions 4_instruction: Бұл жаңа "үшбұрышты сал" функциясында параметр
        бар және алдындағы үш функцияның жұмысын істей алады. Бағанағы үшбұрыштарды
        осы жаңа функциямен сал.
      4-5 Artist Functions 5_instruction: '"Үшбқұрышты сал" функциясын "шаршыны сал"
        функциясына өзгерте аласын ба?'
      4-5 Artist Functions 6_instruction: 'Үй салу үшін "шаршыны сал" және "үшбұрышты
        сал" функцияларын қолдан. (Кеңес: шаршы қабырғалары 200 пиксель)'
      4-5 Artist Functions 6b_instruction: Үй салатын функцияны "шаршыны сал" және
        "үшбұрышты сал" функцияларын қолданып жаса және оны 'үйді сал' деп ата.
      4-5 Artist Functions 7_instruction: '"Үйді сал" функциясымен 100 және 50 пиксельды
        үй сал. Екі үй арасы 50 пиксель.'
      4-5 Artist Functions 8_instruction: '"Гүлді сал" функциясында биіктікке мән
        беретін параметр бар. Биіктікті 200 пиксель деп қандай сурет шығатынын көр.'
      4-5 Artist Functions 9_instruction: "Осы 3 гүлдерді сал. Біріншісінің биіктігі
        100 және келесілері алдынғысынан 50 пиксельге ұзын. Гүлдер арасы 100 пиксель."
      4-5 Artist Patterns 1_instruction: "Осы шаршыны цикл арқылы сала аласын ба?
        Әр қабырғасы 20 пиксель."
      4-5 Artist Patterns 10_instruction: "Осы код екі қатар алтыбұрыш жасайды - Барлығын
        4 рет циклдан өткізіп бал ұясын сал. Кеңес: Экраннан шығып сурет салып кетпеу
        үшін сен әр цикл сайын 120 пиксель артқа секіріп отыруын қажет."
      4-5 Artist Patterns 11_instruction: "Жарты шеңбер салу үшін бұны қанша рет циклдан
        өткізу керек? Кеңес: Егер шеңберде 360 градусс болса және әр цикл 3 градуссқа,
        толық шеңберді салу үшін қанша рет циклдан өткізу керек?"
      4-5 Artist Patterns 12_instruction: "Егер сен осы циклды көшіріп алып, солға
        бұрылудын орнына оңға бұрылсан, не болады? Осы толқынды салу үшін не істеу
        керек?"
      4-5 Artist Patterns 13_instruction: "Енді жиектеме салу үшін осынын барлығын
        төрт рет циклдан өткізейік. Бұрыштарын абайла сен 90 градуссқа бір мезетте
        бұрыла алмайсын! Егер 3 градус жасайтын бір циклды 60 рет қайталатқызса жарты
        шеңбер шықса, ширек үшін неше рет қайталау керек?"
      4-5 Artist Patterns 2_instruction: "Егер шаршы циклін басқа цикл ішіне салса,
        біз оны ішкі цикл деп атаймыз. 15 шаршы қатарымен тұра қалғандай сыртқы циклға
        не қосу керек?"
      4-5 Artist Patterns 3_instruction: "Енді келесі деңгейге көшейік! Біз үлкен
        кодты бір цикл ішіне кіргіздік, бірақ келесі сурет салу үшін суретшіні орнына
        әкелу керек. Осы код блоктарынын қайсысын циклдын соңына қою керек?"
      4-5 Artist Patterns 4_instruction: "Бұл гауһар тас қыры 50 пиксель және бұрыштары
        120 және 60 градус. Циклды қолданып суретін сал."
      4-5 Artist Patterns 5.5_instruction: "Бұл блокты қанша рет циклдан өткізуін
        керек осы гауһар тасты салу үшін?"
      4-5 Artist Patterns 5_instruction: "Осыны циклдан өткізіп 6 гауһар тастан тұратын
        қатар құрайық. Біз гауһар тас кодын 2 орнына 3 деп алмастырдық, не үшін?"
      4-5 Artist Patterns 6_instruction: "Бұл блокты қанша рет циклдан өткізуін керек
        осы гауһар тасты салу үшін?"
      4-5 Artist Patterns 7_instruction: Соңғы тапсырмадағы кодты өзгертейік. Гауһар
        тастын беті есінде ма? "jump backwards"- ті 100-ден 50-ге дейін өзгертіп көр
        – енді екінші "jump backwards" суретші қаншаға алыс секіру керек?
      4-5 Artist Patterns 8_instruction: "Алтыбұрыштың қабырғасы 40 пиксель бұрышы
        60 градус болатын сурет сал."
      4-5 Artist Patterns 9.5_instruction: "Екі қатар алтыбұрыш сызатындай етіп осы
        кодты циклдан өткізейік. Біздің екінші қатар оңға жылжып кеткенін ескер."
      4-5 Artist Patterns 9_instruction: "Бір қатар сурет салу үшін бұл кодты 3 рет
        қайтала. Кеңес: алтыбұрыштың ең ұзын кесіндісі 80 пиксель."
      4-5 Artist Patterns Free Play_instruction: "Еркін ойын - өзіңе ұнайтын сурет
        сал!"
      4-5 Bee Conditionals - FC Test_instruction: "Араға шәрін керек. Мұндағы барлық
        объектілер гүл емес, сондықтан әр бұлтты тексер. Егер гүлді тапсан, одан шәрін
        жина."
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: "Ара мұнын гүл немесе бал ұясы екенін айта
        алмайды. Гүлдерден шәрін жина. Бірақ біріншідіен онын гүл немесе бал ұясы
        екенін анықта."
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: "Араға қазір шәрін керек. Барлық объекттар
        гүл емес екенін есінде сақта. Сол үшін шәрін жинар алдында гүл екендігін тексеріп
        ал."
      4-5 Bee Conditionals 3_instruction: "Енді ара бал жасағысы келіп жүр. Балды
        тек қана бал ұясында ғана жаса."
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: "Белгісіз объект гүл немесе бал ұясы. Осы
        жолы, егер/әйтпесе блогын қолданып шәрін жина егер гүл болса, әйтпесе бал
        істе. (себебі басқа жағдадйда бұл бал)."
      4-5 Bee Conditionals 5_instruction: "Бұлта астындағы белгісіз объект гүл немесе
        бал ұясы. Осы жолы, егер/әйтпесе блогын қолданып шәрін жина егер гүл болса,
        әйтпесе бал істе. (себебі басқа жағдадйда бұл бал)."
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар.
        Мұнда егер/әйтпесе блогы басқа егер/әйтпесе блогымен бірігіп "егер/әйтпесе-егер/әйтпесе"
        өрнегін құрайды. Белгісіз мөлшердегі шәрінді жинау үшін шешімді аяқта.
      4-5 Bee Conditionals 7_instruction: "Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар.
        «Күлгін гүлді тексер» функциясын аяқтап, шәрінді жинау үшін қолдан."
      4-5 Bee Conditionals 8_instruction: "Далада қызыл және күлгін гүлдер бар. Қызыл
        гүлдердің шәрін мөлшері белгілі, бірақ күлгін гүлдердікі белгісіз. Барлық
        шәрінді жина."
      4-5 Bee Conditionals Assessment 1_instruction: 'Бағалау: Бұл код қате. "Шәрінді
        жина немесе бал жаса " функциясын аяқтап, осы функцияны шәрін жинауға және
        бал жасауға шығар. Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар екенін есінде
        сақта.'
      4-5 Bee Debugging 1_instruction: "Бұл блоктарда қате бар. Жөндей аласын ба?"
      4-5 Bee Debugging 10_instruction: "Қателерді тауып, оларды жөнде."
      4-5 Bee Debugging 11_instruction: "Бұл дұрыс санайды ма?"
      4-5 Bee Debugging 2_instruction: "Араға шәрін жинап, бал жасауға көмектес."
      4-5 Bee Debugging 3_instruction: "Қателерді тауып, оларды жөнде."
      4-5 Bee Debugging 4_instruction: "Бұл блоктар жұмыс істемейді. Не болды?"
      4-5 Bee Debugging 5_instruction: "Бірнарсе орнында емес..."
      4-5 Bee Debugging 6_instruction: "Күлгін гүлде белгісіз мөлшерде шәрін бар.
        Қателерді тауып, оларды жөндеп, шәрін жина."
      4-5 Bee Debugging 7_instruction: "Функция бірнәрсе жоғалтып тұр..."
      4-5 Bee Debugging 8_instruction: "Бұл функция жақсы жазылған, бірақ бір нәрсесі
        жаман істейді."
      4-5 Bee Debugging 9_instruction: "Неге ара жеткілікті бал істемейді?"
      4-5 Bee Debugging Assessment 1_instruction: "Бағалау: кодты жөнде."
      4-5 Bee Nested Loops 1_instruction: "Циклмен барлық шәрінді жина."
      4-5 Bee Nested Loops 2_instruction: "Циклмен әрбір гүлдін барлық шәрінді жина.
        Ішкі циклды қолдан. "
      4-5 Bee Nested Loops 3_instruction: "Барлық шәрінді ішкі циклдағы стартер кодын
        пайдаланып жинап ал."
      4-5 Bee Nested Loops 4_instruction: "Барлық шәрінді гүлдерден жинап алып, әр
        бал ұясында бал жаса. Ішкі цикл істе. "
      4-5 Bee Nested Loops 5_instruction: "Барлық шәрінді ішкі циклдағы стартер кодын
        пайдаланып жинап ал."
      4-5 Bee Nested Loops 6_instruction: "Барлық шәрінді жина."
      4-5 Bee Nested Loops 7_instruction: "Бұл циклды басқа циклдын ішіне салып ішкі
        цикл жасап, барлық шәрінді жинап ал."
      4-5 Bee Nested Loops 8_instruction: "Барлық шәрінді ішкі шартты циклмен жинап
        ал. Ішкі қайталау блогын while блогымен алмастыр. "
      4-5 Bee Nested Loops 9_instruction: "Барлық шәрінді ішкі шартты цикл қайталау
        блогына қойып жинап ал."
      4-5 Bee Nested Loops Assessment 1_instruction: "Бағалау – Барлық нектарды жинап
        алып, циклмен бал жаса."
      4-5 Bee Nested Loops Rows_instruction: "Бірнеше қатар гүлдерден шәрін жина!
        Ішкі цикл қолдан."
      4-5 Maze 1 (copy 1)_instruction: "Құрметті адам. Мен зомбимын. Күнбағыс... керек."
      4-5 Maze 1_instruction: "Құрметті адам. Мен зомбимын. Күнбағыс... керек."
      4-5 Maze 10_instruction: "Күнбағысты 4 блокты қолданып ала аласын ба?"
      4-5 Maze 11_instruction: "Күнбағысты 6 блокпен ала аласын ба?"
      4-5 Maze 12_instruction: "Бұл кішкене басқаша. 6 блокпен істей аласын ба?"
      4-5 Maze 13_instruction: "Мені доңызға дейін апаршы!"
      4-5 Maze 14_instruction: "Мені доңызға апар! Дейін қайтала блогын қолдан."
      4-5 Maze 2 (copy 1)_instruction: "Зомбиды күнбағысқа жеткіз, чомберден байқа!"
      4-5 Maze 2_instruction: "Зомбиды күнбағысқа жеткіз, чомберден байқа!"
      4-5 Maze 3 (copy 1)_instruction: "Күнбағыс... керек."
      4-5 Maze 3_instruction: "Күнбағыс... керек."
      4-5 Maze 4 (copy 1)_instruction: Аз блок қолдану үшін "қайталау" блогын қолдан...
      4-5 Maze 4_instruction: Аз блок қолдану үшін "қайталау" блогын қолдан...
      4-5 Maze 5 (copy 1)_instruction: "Аз блок қолданып осы тапсырманы шығара аласын
        ба?"
      4-5 Maze 5_instruction: "Аз блок қолданып осы тапсырманы шығара аласын ба?"
      4-5 Maze 6 (copy 1)_instruction: "Аз блок қолданып осы тапсырманы шығара аласын
        ба?"
      4-5 Maze 6_instruction: "Аз блок қолданып осы тапсырманы шығара аласын ба?"
      4-5 Maze 7_instruction: "Құрметті адам. Мен зомбимын. Күнбағыс... керек."
      4-5 Maze 8_instruction: "Зомбиды күнбағысқа жеткіз, чомберден байқа"
      4-5 Maze 9_instruction: "Мені доңызға апар! Дейін қайтала блогымен цикл қолдан."
      4-5 Maze Assessment 1_instruction: "Бағалау: күнбағысға жет."
      4-5 Maze Conditionals 1_instruction: "Дейін қайтала блогымен күнбағысқа жет."
      4-5 Maze Conditionals 2_instruction: "Дейін қайтала блогымен күнбағысқа жет."
      4-5 Maze Conditionals 3_instruction: '"Егер" блогын қолданып қашан бұрылатынын
        айт. Кеңес: саған тағы бір блок қажет, бірақ біз келесі жолы оны қалай орнатқанымызды
        еске түсір.'
      4-5 Maze Conditionals 4_instruction: "Бұл соңғы тапсырма, бірақ сен «егер» және
        «қайталау» блогын бірге қалай қолдану керегін еске түсүруін тиіс."
      4-5 Maze Conditionals 5_instruction: Маған күнбағыс керек! "Егер" блогын қолданып
        мені аз блокпен сонда жеткіз.
      4-5 Maze Conditionals 6_instruction: Маған күнбағыс керек! "Егер" блогын қолданып
        мені аз блокпен сонда жеткіз.
      4-5 Maze Conditionals 7_instruction: "Тағы бір рет істеп көрейік - бұл қатты
        өзгеше емес, бірақ чомберлерден абайла!"
      4-5 Maze Conditionals 8_instruction: '"Егер/әйтпесе" блогы шартты тексеріп және
        бір әрекет орындайды. Мені күнбағысқа апару үшін осы блоктарды қолдан.'
      4-5 Maze Conditionals 9_instruction: "«Егер/әйтпесе» блогына тағы тапсырмалар,
        орындап көр?"
      4-5 Maze Conditionals Assessment 1_instruction: '"Дейін қайтала" және "егер-әйтпесе"
        блоктарымен азғантай блок қолданып мені күнбағысқа апар.'
      4-5 Nested Loops 1_instruction: "Бұл үшбұрышты салу үшін кодты аяқта. Біріншісі
        саған жасалған.  Кеңес:  3 үшбұрыш 360 градус бұрылыста."
      4-5 Nested Loops 10_instruction: "Осы тудағы соңғы жұлдыздар қатарларын суретін
        сал. Жұлдыздар арасы 50 пиксель, бірақ жұлдыздар өздері 30 пиксель."
      4-5 Nested Loops 11_instruction: "Ішкі циклмен 10 шаршы сала аласын ба? Әрбір
        шаршы 30 пиксель."
      4-5 Nested Loops 12_instruction: "Осы 36 үшбұрышты ішкі циклмен жасай аласын
        ба?"
      4-5 Nested Loops 2_instruction: "Енді осы циклды басқа циклдын ішіне орнатып.
        \ Осы циклды ішкі цикл деп атайды.  Кеңес: Барлық 10 үшбұрышты 360 градуссқа
        айналдыр.  "
      4-5 Nested Loops 3_instruction: |
        Күнін көзін ішкі циклды қолданып жаса. Бұл ішкі цикл деп аталады.\r
      4-5 Nested Loops 5_instruction: "Бұл кодтан жел диірменін жасауға циклды қолдан."
      4-5 Nested Loops 6_instruction: "Үшбұрыштың кодымен алты бұрыш сыза аласын ба?"
      4-5 Nested Loops 7_instruction: "Бұл кодты 10 рет циклдан өткіз. Әрбір циклдан
        кейін қанша градусқа бұрдын? (Кеңес: 360 -ты 10-ға бөлгенде канша болады?)"
      4-5 Nested Loops 8_instruction: "Осыны 6 рет циклдан өткіз. Әрбір циклдан кейін
        қанша градусқа бұрдын? (Кеңес: 360 -ты 6-ға бөлгенде канша болады?)"
      4-5 Nested Loops 9_instruction: "Алигатордын аузындағы тісін боя!"
      4-5 Nested Loops Assessment 1_instruction: "Кодты аяқтау үшін ішкі цикл қолдан."
      4-5 While Loops 1_instruction: "Мені үңгірге дейін апарып, оны екі топырақ күрекпен
        толтыр."
      4-5 While Loops 2_instruction: "Мені топырақтарға апарып оны 5 курекпен жою
        блогымен жой."
      4-5 While Loops 3_instruction: "Мені үйінге апарып оны жой, кейін үнгірге апарып
        соны толтыр.  Кеңес:  Азғантай блок қолдан."
      4-5 While Loops 4_instruction: "Мәссаған, Мен өте терең үңгір таптым! \nМен
        осыған қанша күрек керек екенін білмеймін.  Осыны бетіне дейін толтыратындай
        код жаза аласызба? Кеңес: шартты цикл қолдан.\n"
      4-5 While Loops 5_instruction: "Мәссаған, Мен 2 өте терең үңгір таптым! Осыларды
        бетіне дейін толтыратындай код жаза аласызба?"
      4-5 While Loops 6_instruction: "Мәссаған, Мен өте үлкен үйінді таптым! Осыны
        жер бетіне дейін жоятын код жаза аласызба?"
      4-5 While Loops 7_instruction: "Мәссаған, Мен 3 өте үлкен үйінді таптым! Осы
        үшеуін жер бетіне дейін жоятын код жаза аласызба?"
      4-5 While Loops 8_instruction: " Мұнда терең үңгірмен үлкен үйінді топырақ жатыр.
        Жерді тегіс қылу үшін қанша күрек топырақ керек? Кеңес: шартты цикл қолдан."
      4-5 While Loops Assessment 1_instruction: "Мұнда үңгірмен топырақтар көп. Маған
        үңгірді толтырып, топырақты жоюға көмектесші."
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: "Backed by a template #1. Please\nsign
        in to test applab levels (By design, applab levels only work if signed\nin.
        Normally, we make people sign in, but this is only enforceable for a whole\nscript
        and would be annoying to do for the allthethings script). \n"
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      App Lab test_instruction: "таңдау"
      Applab allthethings onRecordEvent_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: "Now nest this loop inside another loop\nto
        draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles\ncomplete
        a 360 degree rotation.  \n"
      Artist - Nested Loops 3_instruction: |
        Create a sun by nesting the starter code
        in another loop. This is called a nested loop.\r
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: |
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: Draw the teeth in the alligator's mouth!
      Artist - Nested Loops Assessment 1_instruction: "Кодты аяқтау үшін ішкі цикл
        қолдан."
      Auto Open Function Editor_instruction: 'Сіз функцияны басқа функцияның ішінен
        шақыра аласыз! "shape" функциясын басты еп алып, 3 үй жаса, бірінші 50 пиксель
        қалғандары 20 пиксель артық алдыңғысынан. '
      Bee Recommended Blocks test_instruction: "Күлгін гүлдерде 1 немесе 0 шәрін болуы
        мүмкін. Байқа, шәріні жоқ гүлден шәрін жинама. Егер блогын қолданып гүлдерде
        шәрін бар немесе жоқ екенін анықта."
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: |
        When you last worked on your game we got
        our target and danger sprites to fly across the screen, but they never come
        back. Click "Run" to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        When you last worked on your game
        we got our target and danger sprites to fly across the screen, but they never
        come back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Final_instruction: |
        You made it! At this point your game should be
        fully functioning, take some time to enjoy your new game and make any final
        tweaks to it. When you're happy with the final product, click Finish and
        you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      Busy Bee 2_instruction: "Араның істейтін жұмысы көп! Берілген кодты тиімдірек
        тере аласын ба?"
      Busy Bee_instruction: "Араның істейтін жұмысы көп! Берілген кодты тиімдірек
        тере аласын ба?"
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: |-
        Your school is holding a bake sale, and
        you need to track the cost of making each cookie, the money paid, and the
        total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r
        Write
        the function cost, which takes in the number of cookies you intend to sell,
        and returns the cost of making those cookies.
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: |
        In the last puzzle you wrote a contract
        for the function "rocket-height" that states it has a range of Number, domain
        of Number, and should return the height of the rocket traveling at 15 m/s
        after a given number of seconds. Let's write an example case now for the
        height of the rocket at 3 seconds.\r
        \r
        \r
        \r
          \r
        \r
      Calc Rocket 1_instruction: |
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200
        pixels long. \n"
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. \n"
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. \n"
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. \n"
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach
        segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe
        nectar from these flowers? \n"
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: 5 блокты қолданып мені доңызға жеткіз?
      Course 4 2_instruction: "Ара гүлдерден шәрін алғысы келіп тұр. Барлық гүлдерде
        шәрін жоқ екенін есте сақта. Гүлдерден шәрін жинап ал."
      Course 4 Artist 1_instruction: "Әрбір түзуі 200 пиксель болатын қорап салуға
        көмектесші "
      Course 4 Artist 10_instruction: |-
        Кеңесті көру үшін осы жерге бас!\r
        \r
        Мұнда
        қызықты фигураға код бар.  Осыны циклға салсан неболады?  Сурет 420 градусқа бұрылыста тұр, ол дегеніміз сурет салынып болғаннан кейін ол басқа жаққа қарап бұрылып тұрады. Ол жаңа бұрылыс 60 градус.".
      Course 4 Artist 11_instruction: "Енді жарыс!  Мұнда тек қана көрсетілген блоктар
        қолданылады.  Оны қайтадан қалай жасауға болатынын білесінбе? Қателіктерін
        болса да, жасап көр. Бірден барлығы жақсы жасалмаса уайымда. Тағыда кеңес
        көргін келеді ме?  Мында бас!"
      Course 4 Artist 12_instruction: "Кеңес көргің келеді ме?  \nОсында бас!\\r\n\\r\nӘйтпесе,
        өзін жаса!"
      Course 4 Artist 13_instruction: "Әлі ойнап жатсын ба?  Міне саған таза кенеп,
        не салғын келеді соны сала бер!"
      Course 4 Artist 2_instruction: "Циклды қолданып сұр боялған шаршы сала аласын
        ба?"
      Course 4 Artist 20_instruction: "Әлі ойнап жатсын ба?  Міне саған таза кенеп,
        не салғын келеді соны сала бер!"
      Course 4 Artist 3_instruction: "Бұл кодты орындасан не болатынын болжамдап көр!
        (немесе орындау батырмасын бас). Кейін оны сурет салынып біткеше дейін жеткілікті
        рет циклдан өткіз."
      Course 4 Artist 4_instruction: "Шеңберде неше градус?  Түстер шеңберін құру
        үшін блоктарды циклдан өткіз."
      Course 4 Artist 5_instruction: "Симметриянын екінші жартысын сал. Үшбұрыштар
        тең қабырғалы, ұзындықтары 50 пиксель. Кеңес: қандай блок керек екенін анықтау
        кодты бірнеше рет орындауын мүмкін."
      Course 4 Artist 6_instruction: |
        Бұл үшбұрышты салу үшін кодты аяқта.
        Кеңес: Мұнда 3 үшбұрыш 360 градус бұрылыспен, қанша рет 3 360-тан өтеді?
      Course 4 Artist 7_instruction: "Енді 10 үшбұрышты салу үшін осы циклды басқа
        циклдын ішіне сал. Бұл ішке салынған цикл деп аталады. Кеңес: үшбұрыштарды
        360 градусқа айналдыр.  "
      Course 4 Artist 8_instruction: "Барлық блокты бірнеше рет циклдан өткізіп күннін
        көзі сал."
      Course 4 Artist 8a_instruction: |-
        Бұл фигура есінде ма?  Енді саған ешқандай блоксыз осыны салғызайын деп жатырмыз!\r
        Кеңес: Мұнда 3 үшбұрыш 360 градус бұрылыспен, 3 360-тан қанша рет өтеді?
      Course 4 Artist 9_instruction: "Бұны 10 рет циклдан өткізіп, фигураларды бұруға
        ұмытпа. Міне саған кеңес: 360 - ты 10 – ға бөлсе неше болады?"
      Course 4 Artist Binary 1_instruction: |-
        Бұл функция тек қана екілік жүйе сандарын қабылдайды, 1 мен 0-дерді, сонымен суретшіге солдан оңға, жоғарыдан төменге жүруге айтады. Суретшіге 1 мәні берілсе ол бояйды, керісінше 0 мәнін берсе ол боямайды. \r
        \r
        Бұл код қалай болатынын көру үшін кодты орындап көр.
      Course 4 Artist Binary 1a_instruction: |-
        Бұл функция тек қана екілік жүйе сандарын қабылдайды, 1 мен 0-дерді, сонымен суретшіге солдан оңға, жоғарыдан төменге жүруге айтады. Суретшіге 1 мәні берілсе ол бояйды, керісінше 0 мәнін берсе ол боямайды. \r
        \r
        Бұл код қалай болатынын көру үшін кодты орындап көр.
      Course 4 Artist Binary 2_instruction: "Суретті салу үшін осы екілік жолдын қайсысын
        8 рет циклдан өткізу керек?"
      Course 4 Artist Binary 3_instruction: "Бұл суретті салу үшін 3 цифрлы екілік
        кодты циклдан өткізе аласын ба?"
      Course 4 Artist Binary 4_instruction: "Әрбір екілік жол осы суреттін бір бағанасын
        елестетеді. Суретте күліп тұрған бет шыққандай етіп сала аласын ба?"
      Course 4 Artist Binary 5_instruction: "Қай 6 цифрлы жолды 11 рет қайталағанда
        осы сурет салынады?"
      Course 4 Artist Binary 6_instruction: "Бұл суретті салу үшін ең қысқа екілік
        жол қайсы?"
      Course 4 Artist Binary 7_instruction: "Суретті аяқта."
      Course 4 Artist Binary Free Play 2_instruction: "Еркін ойын: Міне суретсалуға
        кенептің ең улкен сапасы 16 битке 16 бит!"
      Course 4 Artist Binary Free Play 2a_instruction: |-
        Міне кенептін үлкен көлемі - 16-ға 16-ға пиксель!\r
        \r
        Биттармен жұмыс істегенде не болатынын көріңіз?
      Course 4 Artist Binary Free Play 2b_instruction: "Нұсқауларды көру үшін осында
        басыңыз."
      Course 4 Artist Binary Free Play_instruction: "Еркін ойын: екілік жүйемен не
        сурет салғын келеді соны сала бер!"
      Course 4 Artist Binary pre1_instruction: |-
        Екілік код дегеніміз информацияны 2 опция арқылы көрсету. Мұнда "cөну" (0 деп белгіленеді) және "косылу"(1 деп белгіленеді) опциялары берілген.\r
        \r
        Сізге пиксельдер торы берілген, сол арқылы сіз жүріп сурет сала аласыз. Суретші бірінші жолда еклік код арқылы "01010101"-ды салатындай істей аласын ба?
      Course 4 Artist Binary ryan_instruction: |-
        Екілік код дегеніміз информацияны 2 опция арқылы көрсету. Мұнда "cөну" (0 деп белгіленеді) және "косылу"(1 деп белгіленеді) опциялары берілген.\r
        \r
        Сізге пиксельдер торы берілген, сол арқылы сіз жүріп сурет сала аласыз. Суретші бірінші жолда еклік код арқылы "01010101"-ды салатындай істей аласын ба?
      Course 4 Artist For  Functions 10_instruction: Тағы бір қадам алға жасайық,
        "Шаршы түзу сыз" функциясымен жұлдыз сыза аласын ба? Сәттілік!
      Course 4 Artist For  Functions 11_instruction: Тағы бір қадам алға жасайық,
        "Шаршы түзу сыз" функциясымен жұлдыз сыза аласын ба? Сәттілік!
      Course 4 Artist For Loops 1_instruction: "Ұзындығы 50 пиксель үшбұрышты сал.
        Кеңес: қайталау блогын қолдан."
      Course 4 Artist For Loops 10_instruction: "Еркін ойын уақыты! Үйренген блоктарынды
        қолданып, өзіңе не ұнайды соны сал"
      Course 4 Artist For Loops 11_instruction: Фигуранын қабырғаларынан санын айнымалымен
        басқарып отырған 6 деңгей еснде ма? Енді дәл осыны "counter" айнымалысымен
        істейміз. Бұл код үшбұрыштан бастап, онбұрышқа жеткенше дейін әр мезетте 1
        қабырғадан қосып отырады! Қабырғасының ұзындығы 100 пиксель.
      Course 4 Artist For Loops 11a_instruction: |-
        Енді барлығын біріктірейік!  "for ілмектерні" және "counter" байланысты білімдеріңді біріктірп, фигураның қабырғалар саны екіге арта бергендей жаса.  Қабарғанын ұзындығы көпбұрыштын қабырғалар санынан 10 есе үлкен болсын.\r
        \r
         Кодтын шағын бөлігі сіздерге көрінген.
      Course 4 Artist For Loops 12_instruction: "Бұл керемет көрініп тұр, бірақ енді
        бір фигурадан кейін екінші фигура салғым келіп тұр. Осы жолы әрбір қабырға
        20 пиксель. Секіру блогын қолданып фигуралардын арасын 40 пиксель қалдыр. "
      Course 4 Artist For Loops 13_instruction: Mмм, анау фигуралар үлкейе береді
        екен! Осы айнымалылармен біз есеп шығарп көрмедікпе? Counter айнымалысын қолданып,
        қабырғалар саны көбейгенде, оның қабырғасын кішірейте беруге болады ма? Барлығын
        алға жылжытқанша, пиксельдерді алға жылжыт. (100/counter).
      Course 4 Artist For Loops 14_instruction: "Егер фигураны азғантай немесе үлкен
        градусқа бұрса, ол көзге жағымды көрінеді. Соңғы деңгейдін кодын пайдаланып,
        89 градусқа бұрда, айналмалы шаршы спираль жаса."
      Course 4 Artist For Loops 15_instruction: "Еркін Ойын: For Loops қолданып өзінің
        суретінді сал. Біз саған кейбір айнымалыларды енгіздік. Ескер: сенде өте көп
        блоктар болғаннан кейін, біз саған оларды категорияларға бөліп қойдық. Қандай
        блоктарын бар екенін көру үшін категорияларды ашып қарап көр."
      Course 4 Artist For Loops 2_instruction: 'Үшбұрышты салу кодын мен for iлмек
        ішіне салып жібердім, ол 50 – ден 100 – ге дейін он-оннан санайды.  Ескер:
        "Орындау" батырмасын басар алдында кодты қарап ал.'
      Course 4 Artist For Loops 3_instruction: |
        Соңғы тапсырмаға қарап осы тапсырманы істе. Ең кішкентай үшбұрыштың қабырғасы 20 пиксель, ең үлкені 200 пиксель, әр алдынғы үшбұрыш кейінгісінен 20 пиксельге артық.
      Course 4 Artist For Loops 4_instruction: "Бұл шаршыларды салудың тиімді әдісін
        білесін бе? Олардың ұзындығы 15 пиксельден басталып, 300-ге дейін барады,
        шаршы ұзындығ 15 пиксельге артып отырады. "
      Course 4 Artist For Loops 5_instruction: 'Соңғы тапсырманы жақсы орындадын!
        "counter" айнымалысымен тағы бір күшті сурет салайық! '
      Course 4 Artist For Loops 6_instruction: "Еркін Ойын! for loop қолданып өзіңнің
        күшті фигуранды сал."
      Course 4 Artist For Loops 6a_instruction: "Осыны алу үшін кодқа 3 шағын өзгеріс
        енгіз!"
      Course 4 Artist For Loops 7_instruction: For ілмегінде "Қайталау 3 рет" алыптастап,
        "қозгалу" және "бұрылу" блоктарын қалдырсан не болады? Бұл спиральды үшбұрышта
        әрбір үшбұрыш қабырғасы алдынғасынан 20 пиксельге ұзын.
      Course 4 Artist For Loops 8_instruction: |-
        Соңғы суреттегі кодынын шағын өзгерісі бұл суретті салады.  Қандай өзгеріс керек?\r
        \r
        Кеңес:  бірнәрсені жойып жібер!
      Course 4 Artist For Loops 8a_instruction: "Соңғы суреттегі кодтын шағын өзгерісі
        бұл суретті салады. Қандай өзгеріс керек?"
      Course 4 Artist For Loops 9_instruction: "Спираль жасай аласын ба? 1-ден 75
        пиксельге дейін әр мезетте 1 пиксельге алға жылжып отыр."
      Course 4 Artist For Loops Challenge_instruction: |-
        Барлық білімінді қолданып мына суретті сал. \r
        \r
        Егер кеңес керек болса, осында бас.
      Course 4 Artist For Loops inspire_instruction: |-
        Еркін ойын шабыты: Осындай сурет салу үшін сен барлық білімді алдын! Егер осы сурет сені шабыттандырса, осындай сурет салып көр. Немесе өзіңе ұнайтын сурет сал.\r
        \r
        Егер кеңес керек болса, осында бас.
      Course 4 Artist Functions 1_instruction: "Циклды қолданып қабырғасы 100 пиксель
        шаршы сала аласын ба?"
      Course 4 Artist Functions 10_instruction: "Шашршының үстіне үшбұрышты салу үшін
        қандай блок қажет?"
      Course 4 Artist Functions 11_instruction: Кубты салатын кодты тексер, одан "Кубты
        сал" функциясын құрастыра аласын ба
      Course 4 Artist Functions 12.1_instruction: '"Сегізбұрыш 20 сал" функциясын
        құрастыр, әрбір қабырғасы 20 пиксель болатын сегізбұрыш сал.'
      Course 4 Artist Functions 12_instruction: "Түзу салу үшін шаршы функциясын циклдан
        өткіз"
      Course 4 Artist Functions 13.1_instruction: 'Енді, "оң жақ жоғарыға секір" атты
        функция құрастырайық, ол суретшіні сегізбұрыштың жоғары оң жаққа жылжытады.
        Кеңес:  Сегізбұрыштың жоғарғы оң бөлігінде болу үшін сегізбұрыштын 3/8 секіретіндей
        етіп жаса.'
      Course 4 Artist Functions 13_instruction: Бізде "draw a line of squares" атты
        жаңа функция бар. Функция қалай құрастырылғанын көр. Келесі жаттығуға дайын
        болғасын "орындау" бтырмасын бас.
      Course 4 Artist Functions 14.1_instruction: Енді, "оң жақ жоғарыға секір" атты
        функция құрастырайық, ол суретшіні сегізбұрыштың жоғары оң жаққа жылжытады.
      Course 4 Artist Functions 14_instruction: Сен жақсы жұмыс жасап жатсын! "Draw
        a line of squares" функциясын қолданып шаршы фигурасын салайық. Әрбір шаршының
        қабырғасының ұзындығы 40 пиксель.
      Course 4 Artist Functions 15_instruction: 'Тапсырманы кішкене қиындатайық, "draw
        a line of squares" функциясымен жұлдыз фигуралы функция сала аласын ба? Іске
        сәт!! Кеңес: сен 144 градусқа бұрұлуын керексін'
      Course 4 Artist Functions 2_instruction: "Арасы 20 пиксель болатын 3 шаршы сала
        аласын ба? Кеңес: әр шаршы ұзындығы 100 пиксель"
      Course 4 Artist Functions 3_instruction: |
        "draw a square" функциясымен, мына суретті сала аласын ба? Кеңес: Шаршылар арасы 120 пиксель.\r\
      Course 4 Artist Functions 4_instruction: 'Өзіңнің "Function Block" құрастыруға
        дайынсын ба? "Functions" блогын басып, оған "draw a triangle" деп ат қой,
        сосын үшбұрышты циклдармен әрекет арқылы өзін білетіндей сал. Кейін жоғарғы
        оң жақта сақтау және шығуға бас. Кеңес: Ұзындығы 100 пиксель үшбұрыш сал.
        Іске сәт!'
      Course 4 Artist Functions 5 OLD_instruction: "Екі функцияны қолданып үйді сал.
        Біздің екі функцияны қолдан – үйді жақсы салу үшін кодта не тұрақты қалу керек?"
      Course 4 Artist Functions 5_instruction: |
        "draw a square" функциясымен, мына суретті сала аласын ба? Кеңес: Шаршылар арасы 120 пиксель.\r\
      Course 4 Artist Functions 6_instruction: "Шашршының үстіне үшбұрышты салу үшін
        қандай блок қажет?"
      Course 4 Artist Functions 7_instruction: "Шаршы функциясымен шаршылар түзуін
        сала аласын ба? Әр шаршы 40 пиксельден."
      Course 4 Artist Functions 8_instruction: 'Функция блогын қолдана алмай жатсын
        ба? Бұл шаршының ұзындығын 200 пиксельге өзгертейік. Ол үшін "өзгерту" басып
        "draw a square" функция өзгертуіне бас. Шығар алдында "сақтау және шығу" басуға
        ұмытпа. '
      Course 4 Artist Functions 9_instruction: "Біз саған функция жасауға көп код
        бердік. Бірақ мында кейбіреуі жоғалған сияқты. Осы функция блогын аяқтай аласын
        ба?"
      Course 4 Artist Functions challenge_instruction: "Кеңесті көру үшін осы жерге
        бас."
      Course 4 Artist Functions Inspiration_instruction: "Кеңесті көру үшін осы жерге
        бас."
      Course 4 Artist Functions inspire_instruction: "Суретті қайтадан көру үшін мұнда
        басыңыз."
      Course 4 Artist Inspire_instruction: "Шабытты суретпен кеңесті тағы көргің келеді
        ме? Осы жерге бас. Әйтпесе, өзін істе!"
      Course 4 Artist Params 1_instruction: 50 пиксельды шаршы сызатын функция енгізейік
      Course 4 Artist Params 10_instruction: 'Сіз функцияны басқа функцияның ішінен
        шақыра аласыз! "shape" функциясын басты еп алып, 3 үй жаса, бірінші 50 пиксель
        қалғандары 20 пиксель артық алдыңғысынан. '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: '"pinwheel" функциясымен фигураларды
        сыз. Ұзындығы 50 пиксель.'
      Course 4 Artist Params 13_instruction: "Еркін ойын: Міне сен жазған функциялар.
        Осы функциялармен керемет нәрсе сал!"
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: "Керемет, әрбір үшбұрышты осы жаңа функциямен
        сала аласын ба? Біріншісінің ұзындығы 25, екіншісі 50, үшіншісі 75. "
      Course 4 Artist Params 4_instruction: "Шаршы атты жаңа функция енгізе аласын
        ба."
      Course 4 Artist Params 5_instruction: |
        Екі функцияны қолданып мына суретті сал. "counter" параметірін қолданып істе.
      Course 4 Artist Params 6_instruction: '"Фигураны сал" функциясын енгізейік.
        Функцияда ұзындық параметрі бар. Енді функцияға қабырғалар параметрін енгізейік.
        Бұрылу бұрышы 360 бөлінген фигураның қабырғалар санына тең. Кеңес: үшбұрыш
        қабырғаларының ұзындығы 100 пиксель, алтыбұрыштың қабырғаларының ұзындығы
        25 пиксель және шаршының қабырғаларының ұзындығы 50 пиксель. '
      Course 4 Artist Params 7_instruction: 'Осыны толтыра "???" сурет сала аласын
        ба? Үшбұрыш пен шаршының ұзындығы 100 пиксель, алтыбұрыштың ұзындығы 75 пиксель. '
      Course 4 Artist Params 8_instruction: |
        Мына фигураны қалай салу керек екенін анықтай аласын ба? Мында алтыбұрышты қайлай салу керек тігіне кеңес бар.
      Course 4 Artist Params 9_instruction: Есептеуіш циклын қолданғанын есіңде ма?
        Енді "фигураны сал" функциясын "қабырғалар" және "ұзындық" параметрлерімен
        қолданайық. Осы фигураны сала аласын ба? Шаршы есептеуіш 5/100/5, үшбұрыш
        есептеуіш 10/100/10 және алтыбұрыш есептеуіш 2/100/2 болуы тиіс.
      Course 4 Artist Var 9_instruction: 'Мында үшбұрышты салатын алгоритм бар, оны
        "қабырғалар" айнымалысы қолданылатындай етіп істе. 3 санын "қабырғалар" айнымалысымен
        алмастыр. Кеңес: "қабырғаларын орнат" блогын қолдан.'
      Course 4 Artist Vars 1_instruction: |
        Маған теңқабырғалы үшбұрыш салуға көмектесе аласын ба?
        Әрбір қабырғасы 100 пиксель.
      Course 4 Artist Vars 10_instruction: Мынау алгоритм шағын үшбұрыштардан үшбұрыш
        салады. Ол "қабырғалар" айнымалысын әрбір үшбұрышқа қолданатындай етіп істей
        аласын ба? Кодта 3 деген цифрды көрсен, оны «қабырғалар» айнымалысымен алмастыр.
        "қабырғаларды орнат" блогын қолдан.
      Course 4 Artist Vars 11_instruction: "Алдарыңызда соңғы тапсырмадағыдай жазылған
        код тұр. Шаршы шығу үшін «қабырғалар» айнымалысының орнына не қою керек?"
      Course 4 Artist Vars 12_instruction: '"Қабырғалар" айнымалысын 5 деп берейік.
        Алгоритмға көп қабырға енгізе берсек, бұл сурет үлкен бола береді! "Ұзындық"
        деген тағы бір параметр бар екенін ұмытпа. "Алға жылжыны" кез келген уақытта
        қолдана аламыз. "Ұзындық" айнымалысын фигурада 75 пиксель деп бер.'
      Course 4 Artist Vars 13_instruction: "\"Фигураның қабырғалары көп болғанда,
        фигураны экранда дұрыстап көру үшін фигураның әр қабырғасының ұзындығын кішірейту
        керек. \n\\r\nЕнді мынау керемет суретті қайтадан жасайық, бірақ қолмен ұзындық
        айнымалысын өзгертіп оытрғанша, оны қабырғалар параметрін математикалық блок
        ішіне қолданып жаз.\\r\nЕгер кеіес керек болса, осында бас.\"."
      Course 4 Artist Vars 14_instruction: |-
        Еркін Ойын: Тексер! Енді сіздің алгоритм цикл ішіне кіргізілген. Сіздің екі айнымалылыңыздардың мәндерін өзгертіп керемет сурет сал.\r\r
        Күшті болу үшін түрлі-түсті қылып салып көр. Кодтын ішіне кедейсоқ түстерді қолданып көр.
      Course 4 Artist Vars 2_instruction: '"алға 150-ге жылжы" орнына, "жылжы" блогын
        "ұзындық" параметрмен бірге қолдан. Осы үшбұрышты сал үшін "ұзындық" 150 болатындай
        орната аласын ба?'
      Course 4 Artist Vars 3_instruction: "Бұл цикл шаршыны салады, бірақ мұнда бір
        нәрсе жоғалып тұр. Оны ұзындық параметр енгізіп, әрбір қабырғасы қанша пикель
        екенін біліп, жөндей аласын ба? "
      Course 4 Artist Vars 4_instruction: "Енді мен ұзындығы енінен 2 есе ұзын тіктөртбұрыш
        салғым келіп тұр. Біз ені деген параметрді 100 деп орнатыумыз керек. Математикалық
        блокты қолданып осы кодты аяқтай аласын ба?"
      Course 4 Artist Vars 5_instruction: "Қабырғалар параметрімен цикл қанша рет
        айналатынын анықта."
      Course 4 Artist Vars 6_instruction: |-
        "Осы код жай тіктөртбұрышты сала алады. Мұндағы жаңа қабырғалар айнымалысы 4 деп орнатылып тұр. Қабырғалар айнымалысын (математикалық блокпен бірге) қолданып көпбұрышта қанша қабыға бар екенін анықтай аласын ба?\r
        \r
        Кеңес керек болса, осында бас!
      Course 4 Artist Vars 7_instruction: |-
        Соңғы жаттығудан алған біліміңді қолданып, қабырғалар айнымалысымен алтыбұрыш сыз.\r
        \r
        Үшбұрыш, шаршы, бесбұрыш және сегізбұрыш сызу үшін қандай өзгерістер енгізу керек?
      Course 4 Artist Vars 8_instruction: 'Еркін ойын: фигураның қабырғаларымен тәжербие
        жаса. Алгоритмда қабырғалар ұзындығы қалыпты қалып, бірақ қабырғалар саны
        өзгеретіндей ете аласын ба? Кеңес: Математикалық блокты (360 бөлу "қабырғалар")
        екі жерде қолдана аласын.'
      Course 4 Artist Vars 9_instruction: Алгоритм тұрақты санды қолдану орнына "қабырғалар"
        айнымалысын енгіз. "Қабырғаларды орнат" блогын қолдан.
      Course 4 Bee 1_instruction: 'Ара бұлттын астында не бар екенін білмейді! Біріншіден,
        "егер" блогын қолданып бұлттын астында гүл немесе бал ұясы екенін анықта.
        Гүл болса нектарын жина. '
      Course 4 Bee 2_instruction: '"Егер/әйтпесе" блогын қолданып гүл немесе бал ұясы
        екенін анықта. Егер гүл болса шәрін жина,...әйтпесе, бал жаса!'
      Course 4 Bee 3_instruction: "Белгісіз объект гүл немесе бал ұясы. Осы жолы,
        егер/әйтпесе блогын қолданып шәрін жина егер гүл болса, әйтпесе бал істе.
        (себебі басқа жағдадйда бұл бал)."
      Course 4 Bee 4_instruction: Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар. Мұнда
        егер/әйтпесе блогы басқа егер/әйтпесе блогымен бірігіп "егер/әйтпесе-егер/әйтпесе"
        өрнегін құрайды. Белгісіз мөлшердегі шәрінді жинау үшін шешімді аяқта.
      Course 4 Bee 5_instruction: "Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар. егер/әйтпесе
        блогын қосып егер/әйтпесе- егер/әйтпесе блогын құрастыр. Белгісіз мөлшердегі
        шәрінді жинау үшін шешімді аяқта."
      Course 4 Bee 6_instruction: "Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар. егер/әйтпесе
        блогын қосып егер/әйтпесе- егер/әйтпесе блогын құрастыр. Белгісіз мөлшердегі
        шәрінді жинау үшін шешімді аяқта."
      Course 4 Bee 7_instruction: "Барлық білімінді қолданып барлық шәрінді жина.
        Бұл күлгін гүлде 3, 2 немесе 1 шәрін бар."
      Course 4 Bee For Loops 1_instruction: "Циклды қолданып гүлден шәрін жина."
      Course 4 Bee For Loops 10_instruction: "Егер сіздін цикл төменге санаса, есептегіш
        өсімшеден әр цикл сайын азайтылып отырады. 9, сосын 6, кейін 3 шәрінді жинау
        үшін өсімше нешеге тең болу керек?"
      Course 4 Bee For Loops 11_instruction: "Бұл циклға не болды? Араны шәрін жинайтындай
        ете аласын ба."
      Course 4 Bee For Loops 2_instruction: "Мұнда шартты цикл деген циклдын жаңа
        түрі бар. Бұл шартты цикл 1-ден 5-ке дейін бір-бірден сайын. Араға шәрін жинауға
        көмектес."
      Course 4 Bee For Loops 3_instruction: "Сен осы тапсырманы шартты циклмен 1-ден
        3-ке дейін бір-бірден санап шығара аласын. Енді шәрін жинауға кірісейік!"
      Course 4 Bee For Loops 4_instruction: "Бұл гүлдерден барлық шәрінді жинап ал.
        Шәрінді жинауға оңайырақ әдіс бар шығар..."
      Course 4 Bee For Loops 5_instruction: 'Шартты цикл бұны тезірек шығарады екен!
        Шартты циклдағы "есептеуіш" айнымалысын қолданып "шәрінді ал" блогын, "есептеуіш"
        блогын қанша рет циклдан өткізсе, "шәрінді ал" блогын сонша рет циклдан өткіз.
        Бұл өте көп цикл. Саған керек кодтын барлығы осында,, барлығын бірге қалай
        қосу керек екенін анықта. Орындау батырмасын басып, кодынды тексер. '
      Course 4 Bee For Loops 6_instruction: "Шартты циклды кему ретінде де санауға
        болады. 5-тен 1-ге дейін бір-бірден кему ретінде санап барлық шәрінді жинап
        ал."
      Course 4 Bee For Loops 7_instruction: Шартты циклдын "есептеуіш" айнымалысымен
        көлбеумен алға көп қозғалу керек па екенін анықта.
      Course 4 Bee For Loops 8_instruction: "Цикл айнымалысымен қозғалыспен шәрінді
        жинау процесін құра аласын ба?"
      Course 4 Bee For Loops 9_instruction: "Циклдын соңғы саны «өсімше» деп аталады,
        \ және әр мезетте бір цикл өткен сайын есептеуіш бір өсімшеге кемиды. Бұл
        гүлдерді үшін 2 өсімшесімен жина."
      Course 4 Bee Loops 5 NEW_instruction: "Мұнда 3 гүл. Бұл үш гулді блоктарды минимал
        мөлшерде қолданып жинай аласындарма?"
      Course 4 Bee Loops 5a NEW_instruction: "Енді, циклды қолданып араға бал ұясына
        дейінгі жолдағы барлық шәрінді аз блок қолданып жинауға көмектес. Сол жерге
        жеткенде, бал істеуге ұмытпа!"
      Course 4 Bee Params 1_instruction: Өзі қозғалып, бұрылып, орнына келетін "3
        шәрін жина" функциямен шәрін жина. "3 шәрін жина" функциясымен барлық шәрінді
        жинау үшін тізбек құрастыр
      Course 4 Bee Params 2_instruction: Мен сол жаққа бұрылуымнын орнына мені оңға
        бұрылатындай етіп "3 шәрінді жина" функциясын өзгерт.
      Course 4 Bee Params 3 (copy 1)_instruction: Енді гүлдер екі жақтада бар! Мүмкін
        екі жақтада жинау үшін функцияда жаңа параметр табасын. Мен функцияға "бағыт"
        деген жаңа параметр енгіздім.
      Course 4 Bee Params 3_instruction: 'Енді екі жақта гүлдер бар! Мен функцияға
        «бағыт» деген параметр енгіздім. "Солға" және "оңға" айнымалыларын қолданып
        бағытты бақыла. Функциянын қалғанын толтырып, "Сақтау және Шығу" батырмасын
        бас.  '
      Course 4 Bee Params 4 (copy 1)_instruction: "Жаңа функцияны қолданып барлық
        гүлддердін шәріндерін жина. Есінді сақта, 0 = солға және 1 = оңға."
      Course 4 Bee Params 4 - Two WhenRun_instruction: "Өзіңіздің жаңа функцияңызды
        қолданып барлық гүлді жинап ал. Оң және сол айнымалыларын қолдан."
      Course 4 Bee Params 4 backup_instruction: "Гүлдердін барлық шырынын бір функциямен
        жинасақ күшті болар еді. Функцияға «шырын» деген параметрды қосып шырын санын
        бақыла. Функциянын атын өзгертуін қажет болады!"
      Course 4 Bee Params 4_instruction: "Жаңа функциянды қолданып, барлық шәрінді
        жина. Сол және оң айныалыларын қолдан."
      Course 4 Bee Params 5_instruction: Басынан бастайық - "5 шәрін жина" атты жаңа
        функцияны бағытпен құрастыра аласын ба?
      Course 4 Bee Params 6 (copy 1)_instruction: "Жаңа функциясын қолдана отырып
        барлық шәрінді жина."
      Course 4 Bee Params 6_instruction: "Гүлдердін барлық шәрінін бір функциясымен
        жинасақ күшті болар еді. Функцияға «шәрін бірлігі» деген параметрды қосып
        шәріндердін санын бақылап отыр. Мүмкін функциянын атын өзгерткін келеді!"
      Course 4 Bee Params 7 (copy 1)_instruction: "Жаңа функциясын қолдана отырып
        барлық шәрінді жина."
      Course 4 Bee Params 7_instruction: "Жаңа функциясын қолдана отырып барлық шәрінді
        жина."
      Course 4 Bee Params 8 Clone 2_instruction: "Оооо, енді балмен саудаласуға болады!
        Өз функциянды қалай жаңартасын, шәрінді жинауға әлде бал істеуге."
      Course 4 Bee Params 8 clone 3_instruction: "Оооо, енді балмен саудаласуға болады!
        Өз функциянды қалай жаңартасын, шәрінді жинауға әлде бал істеуге."
      Course 4 Bee Params 8 Clone_instruction: "Оооо, енді балмен саудаласуға болады!
        Өз функциянды қалай жаңартасын, шәрінді жинауға әлде бал істеуге."
      Course 4 Bee Params 8 new_instruction: "Оооо, енді балмен саудаласуға болады!
        Өз функциянды қалай жаңартасын, шәрінді жинауға әлде бал істеуге."
      Course 4 Bee Params 8_instruction: "Жарыс: енді балмен саудаласуға болады! Шәрін
        бірліктерімен бал бірліктерін қабылдайтын функция жаз.  Осы екі айнымалыны
        қалай қолдану керек екенін ойлан?"
      Course 4 Bee Params Ex_instruction: "Жаңа функциясын қолдана отырып барлық шәрінді
        жина."
      Course 4 Binary 1_instruction: "Бұл фукция 1 мен 0 сандарынан тұратын екілік
        жолды қабылдайды, ол фермерге солдан оңға немесе жоғарыдан төменге жүруді,
        нөлдер бар жолдармен жүреді. Фермер суретті қалай салатынын көру үшін орындау
        батырмасын бас."
      Course 4 Binary 2_instruction: 'Қай екілік жолды 8 рет циклдан өткізу керек,
        осы суретті алу үшін? Кеңес: "1" саны бос жерді толтырады.'
      Course 4 Binary 3_instruction: "Жалғыз осы екілік жолды циклдан өткізіп мына
        суретті сала аласын ба?"
      Course 4 Binary 5 (copy 1)_instruction: "Қай екілік жолды 10 рет циклдан өткізу
        керек, осы суретті алу үшін?"
      Course 4 Binary 5_instruction: "Қай екілік жолды 10 рет циклдан өткізу керек,
        осы суретті алу үшін?"
      Course 4 Binary 6 (copy 1)_instruction: "Қай екілік жолды 10 рет циклдан өткізу
        керек, осы суретті алу үшін?"
      Course 4 Binary 6_instruction: "Қай екілік жолды 10 рет циклдан өткізу керек,
        осы суретті алу үшін?"
      Course 4 Binary 7_instruction: "Қай екілік жолды 10 рет циклдан өткізу керек,
        осы суретті алу үшін?"
      Course 4 Binary 8_instruction: "Осы суреттін көп бөлігін сен 5 екілік санды
        циклдан өткізе сала аласын, астынға оң жақты салу үшін саған тағы 4 екілік
        сан қажет."
      Course 4 EC 1a_instruction: "Ережелер жоқ. Ишалалар жоқ. Тек есеп!"
      Course 4 EC 1b_instruction: "Ережелер жоқ. Ишалалар жоқ. Тек есеп!"
      Course 4 EC 2a_instruction: "**Қиын жаттығy:** Ережелер жоқ. Ишалалар жоқ. Тек
        есеп!"
      Course 4 EC 2b_instruction: "Ережелер жоқ. Ишалалар жоқ. Тек есеп!"
      Course 4 EC 2c_instruction: "Ережелер жоқ. Ишалалар жоқ. Тек есеп!"
      Course 4 EC 2d_instruction: "Ережелер жоқ. Ишалалар жоқ. Тек есеп!"
      Course 4 EC 3_instruction: "Алдынғы деңгейлерде алған біліміңді қолданып сурет
        сал. Ескер: егер параметрларды біріктірсен, код оңай болады. "
      Course 4 EC 3a_instruction: "Қиын жаттығy: Ережелер жоқ. Ишалалар жоқ. Тек есеп!"
      Course 4 Maze 1_instruction: "Ашулы құсты доңызға апар!"
      Course 4 Maze 2_instruction: "Жарылғыш заттан абайла!"
      Course 4 Maze 3_instruction: "Ашулы құсты доңызға апарруды бағдарламала. "
      Course 4 Maze 4_instruction: "Қайталау блогымен және аз блок қолданып осы тапсырманы
        шеш..."
      Course 4 Maze 5_instruction: "Аз блок қолданып осы тапсырманы шығара аласын
        ба?"
      Course 4 Maze 6_instruction: "Аз блок қолданып осы тапсырманы шығара аласын
        ба?"
      Course 4 Play Lab For Loops 2_instruction: "Осы жолы 1-ден 100-ге дейінгі тақ
        сандарды сана."
      Course 4 Play Lab Params 1_instruction: Міне "секір" деген функция сенің кейіпкерінді
        100 пиксельге секіртеді. Осы функцияны пайдаланып барлық туды жина.
      Course 4 Play Lab Params 10_instruction: 'Біз саған соңғы функция енгіздік.
        "Егер" өрнегін қолданып "ойыншы ұпайы" белгілі бір саннан үлкен болған кезде
        "деңгейді көтер"\n функциясын шақыратындай етіп жаса. \r\n\r\n\nМысалы: "ойыншы
        ұпайы" > 6\r\n\r\nОйын ойнап, 4 деңгейді өтіп келесі тапсырмаға көш. '
      Course 4 Play Lab Params 2_instruction: |-
        Бұл тулар біздің секіруімізге өте биік тұр. Енді "жоғары" және "төмен" нұсқарларын қолданып үлкен биіктікке секір.
        \r\r Функциямызға "биіктік" деген параметр енгізу керек. "Жоғары" нұсқары итті 200 пиксельге жоғары және "төмен" нұсқары итті 100 пиксельге жоғары секірткізу тиіс.\r\r
        Кеңес: Сіз енгізу батырмасын басып функцияға жаңа параметр енгіз.
      Course 4 Play Lab Params 3_instruction: 'Біз секіру функциясына жаңа параметр
        енгіздік, енді біз басқа кейіпкерлерді қолдана аламыз. Әрбір кейіпкер сан
        ретінде көрсетілген, бірден бастап. "Секіру" функциясына "кейіпкер" параметрін
        енгіз. '
      Course 4 Play Lab Params 4_instruction: Міне "күзет" деген функция. Мысық 400
        пиксель жоғары және 400 пиксель төмен жүргендей етіп осы функцияны енгіз.
      Course 4 Play Lab Params 5_instruction: '"Күзет" функциясын "кейіпкер" параметрін,
        біз әрбір кейіпкерді шақыра алатындай етіп, енгізу үшін енгіз. 1, 2, және
        3 сандары кейіпкерлердікі.'
      Course 4 Play Lab Params 6_instruction: '"Жылдамдық" деген басқа параметрін
        "күзет" функциясына енгіз. "Жылдамдықты орнат" блогын жаңа "жылдамдық" параметрін
        енгізуге.'
      Course 4 Play Lab Params 7_instruction: Ойнайтұрайық! Қараңыз \n код әр блок
        не істейтіндігін сіз анықтайалсаңыз соны көрсетеді. Сіз бітірген соң, итпен
        басқару және барлық туларды жинау үшін перне тақтадағы нұсқауларды қолданыңыз.".
      Course 4 Play Lab Params 8_instruction: "Қолданыңыз,! актер егер штрих болса!,
        егер ит кез-келген басқа субъектіге тиетін болса онда қайтадан оны сол жақ
        жоғарғы бұрышқа апару."
      Course 4 Play Lab Params 9_instruction: 'Осы бұрынғы ойын, бірақ кодтын көп
        бөлігі жасырын тұр. Онда жаңа функция ұпай. Нүкте параметрлері ұпай санына
        қосылатындай етіп функцияны өзгерту қажет. Ұпай саны айнымалысы әр кезде мысық
        жүрекпен жетонын ұлғайтып, ит пен мысық жүрекпен тегін аздату керек. Ескерту:
        Сіз ойнап біткен соң  "орындау"батырмасын басыңыз қайтадан ойнау үшін. Егер
        итіңіз 6 ұпай жинаса онда сіз келесі ойынға көшесіз. '
      Course 4 Play Lab Vars 1_instruction: "Бұл жолы сізге кодты жазу қажет емес
        тек қана орындау батырмасын басасыз ойынды ойнау үшін. Бұл ойында сіз итсіз,
        мысықа қарағанда көп тушықты жинағыңыз келіп жүрген. Итпен басқару үшін төмен
        деген батырманы қолданыңыз. Дайын батырмасын басыңыз ойынды аяқтағаннан соң."
      Course 4 Play Lab Vars 2_instruction: Бұл соңғы жұмбақ онша дұрыс емес! Сіз
        мысықтан көп тушық жинай алатындығыңызға көз жеткізгіңіз келсе онда "ит жылдамдығы"
        айнымалысын өзгертіңіз. Бірінші 10 тушықты жинаған жеңімпаз атанады!
      Course 4 Play Lab Vars 3_instruction: "Міне жаңа ойын түрі. Оң жаққа және сол
        жаққа деген пернетақталарды қозғалу үшін, ал үстіге пернетақтасын секіру үшін
        қолданыңыз. Көріңіз егер сіз барлық тушықтарды жинай алсаңыз."
      Course 4 Play Lab Vars 4_instruction: "Енді біз биікке айнымалысын қолданамыз,
        иттін қалай биік секіре алатындығын басқару үшін. Биікке айнымалысын жанартыңыз,
        сонда ит барлық тушықтарға жету үшін керекті биіктікке секіре алады."
      Course 4 Play Lab Vars 5_instruction: "Ойын құрастырайық! Біріншіден бізге ұпай
        керек. Сіз соңғы деңгейдегі кодты қайтадан құрастыруыңыз қажет, 10 деген ұпаймен
        шектеу үшін. "
      Course 4 Play Lab Vars 6 (copy 1)_instruction: "қазір біз балл айнымалыны алдым,
        бірақ біз қалай пайдалы барамыз? Сіздің балл айнымалы үшін сіз отты шар бар
        жауы соққы әрбір уақытта қосу туралы? Егер отты шарлар мысық соққы кезде сіздің
        балл жаңарту іске қосу үшін іс-шараны «актер 2 нәрсе тигенде» пайдаланыңыз.
        Сіз деңгейін өтуге балл орнату арқылы балл арттыра аласыз = балл + 1. (бір
        уақытта бір бара!) 10 дейін сіздің балл алыңыз."
      Course 4 Play Lab Vars 6_instruction: "Біз ұпай керектігін, hearts.our ойынды
        түсіруге оң жақ көрсеткіні пайдаланыңыз? Айнымалы «\\ нүктелерінің» Сіздің
        \\ үшін Dog жүрегімен Cat парад әр жолы 1 қосыңыз. «Кезде \\ актер 2 тиген
        нәрсе» Сіздің балл жаңарту іске қосу үшін іс-шара \\ пайдаланыңыз. Сіз 10
        дейін сіздің балл алыңыз айнымалы \\ nby параметр \\ «\\ ұпай = балл + 1.»
        арттыра аласыз (уақыты на \\ бір бара!) Деңгейін өтуге."
      Course 4 Play Lab Vars 7_instruction: "Жақсы, қазір осы ойын ойнауға тым оңай
        емес екеніне көз жеткізіңіз көрейік. Кез келген уақытта ит (актер 1) мысық
        (актер 2) сары жүректеріне соққы алады, сіз нүктесін жоғалтады тиіс. Ол тым
        қиын емес, сондықтан 10 ұпаймен бастаңыз. Егер балл деңгейі өтуге 0 10-нан
        ашылмалы көрейік."
      Course 4 Play Lab Vars 8 (copy 1)_instruction: "Жарайды, осы ойында бір соңғы
        нәрсе - ның сондықтан ойыншы жеңіске (немесе жоғалтып) болады, оны орнату
        мүмкіндік береді. Есебімен мәнін тексеру үшін мәңгі ілмектер пайдаланыңыз
        - балл 20-соңды үлкен болса, жау нөл жеткізіңіз. Балы 0-ден әрбір аз болса,
        ойыншы нөл жеткізіңіз. Сіз оны қалаймын сияқты ойын жұмыс істейді кезде «Аяқтау»
        дегенге басыңыз."
      Course 4 Play Lab Vars 8_instruction: "Ит жеңіске (немесе жоғалтып) болады,
        сондықтан осы ойынды орнату көрейік. Есебімен мәнін тексеру үшін мәңгі ілмектер
        пайдаланыңыз - балл 20-соңды үлкен болса, жау (мысық) нолге тең жеткізіңіз.
        Балы 0-ден соңды аз болса, ойыншы (ит) нолге тең жеткізіңіз. Сіз оны қалаймын
        сияқты ойын жұмыс істейді кезде «Аяқтау» дегенге басыңыз."
      Course 4 Play Lab Vars 9_instruction: "Тегін ойыны уақыты! Мұнда біз осы кезеңде
        соншалықты алыс ойнаған болатынмын thevariables барлық, сондай-ақ олардың
        келсе жағдайда бірнеше көп. Олар ұйымдасқан қажет сіздің құралдар тақтасындағы,
        сондықтан көптеген блоктар қазір бар екенін ескеріңіз! Мұнда, біз \\ нан тиісті
        санатына әрбір бөлігін жібердік. Қол жетімді бәрін зерттеуге біраз уақыт алуы.
        Сіз шолуды Болған кезде, қайталанады, айнымалылар, мен оқиғалар пайдаланып
        Ойынды немесе оқиғаны құрайды. Тұспал: Ж мыс ке істігіндегі барлық пәрмендерді
        көру үшін төмен жылжыңыз."
      Course 4 Play Lab Vars_instruction: "Жарайды, осы ойында бір соңғы нәрсе - ның
        сондықтан ойыншы жеңіске (немесе жоғалтып) болады, оны орнату мүмкіндік береді.
        Есебімен мәнін тексеру үшін мәңгі ілмектер пайдаланыңыз - балл 20-соңды үлкен
        болса, emeny нолге тең жеткізіңіз. Балы 0-ден әрбір аз болса, ойыншы нөл жеткізіңіз."
      Course 4 Play Labs For Loops 1_instruction: "Қарсы айнымалы цикл, іске қосқан
        кезде айтуға 1 100. ілмектер пайдаланыңыз және қарсы блок әрбір санын айтуға
        ит болсын."
      Course 4 Play Labs For Loops 2_instruction: "Осы жолы 1-ден 100-ге дейінгі тақ
        сандарды сана."
      Course 4 Play Labs For Loops 3_instruction: "Үлкен сандармен санайық. Ит он-оннан
        10-нан 1000-ға дейін санасын."
      Course 4 Play Labs For Loops 4_instruction: "Артуды өзгерту пайдалы болуы мүмкін,
        бірақ біз әлі, мен экспоненталық санау келеді, егер қандай (әр саны өткен
        жылғы бірдей қашықтық), желілік санау жатырмыз? Ілмектер осы параметрлерді
        өзгертпей, сіз 1, 4, 9, 16, 25 сене алады ... (шаршы есептеуіш)?"
      Course 4 Play Labs For Loops 4a_instruction: |-
        Енді 7-ші деңгейдегі айнымалыларды "есептеуіш" айнымалысымен біріктіріп көрейік. \r\r
        Бұл тапсырмада, ит 0-ден 1000-ға дейін "өсімшемен" санайды. Өсімше 10-ға тең деп алып кодты орында.
      Course 4 Play Labs For Loops 5_instruction: Соңғы деңгейде біз әрбір санның
        квадратын санадық. Енді "есептеуіш^2"-ні "есептеуіш^3" деп ауыстырып әр санның
        кубын сана (1, 8, 27, 64, 125, 216, 343...)
      Course 4 Play Labs For Loops 5a_instruction: |-
        In this puzzle, Dog will be your
        time keeper.\r
        \r
        Dog will count from 0 to 30 by "increment".  The "increment"
        variable will begin with a value of 1.\r
        \r
        Can you make it so that each
        time you click Dog, the increment increases by 2?  Click the forward arrow
        to run the for loop.\r
        \r
        Run the loop a couple of times, clicking Dog before
        each one.
      Course 4 Play Labs For Loops 6_instruction: "Сіз жай сан 1-ден 100-ге дейін
        ғана премьер сандарды жүзеге сөйлеуге «is_prime» функциясын қолданыңыз тек
        өзі бөлiнетiн және 1. кез келген бүтін сан екенін еске алады."
      Course 4 Play Labs For Loops 6a_instruction: |-
        Ит әлі "for loop" арқылы өсімшемен санайды, бірақ осы жолы біз Сиқыршыны қосайық. Енді кодта сиқыршыны басқанда өсімше екіге өскендей өзгерте аласын ба?
        \r\r
        Байқа! Сиқыршы тез санайды!
      Course 4 Play Labs For Loops 7_instruction: "Сіз маған ретін 1, 4, 7, 10, 13,
        16, 19, 22, 25 айтуға көмектесу үшін ілмекке үшін пайдалануға бола ма?"
      Course 4 Play Labs For Loops 7a_instruction: |-
        Енді біз бір жерге барамыз! Ит 30-ға дейін санағанға шейін  біз сиқыршының неше рет батырманы басқанын санай аламыз ба?\r\r
        Сиқыршыға блоктарды қосуды аяқта, ол әр мезетте батырманы басқанда "батырманы басу" айнымалысы 1-ге өссін. "Өсімшені" ескермеуге болады.\r\r
        "Орындауды" басқанда ит анай бастайды.
      Course 4 Play Labs For Loops 8_instruction: |-
        Енді, кейіпкерлеурге қозғалып санауға көмектес. \r\r
        Ит қозғалып және әр мезетте 2-ні қосып санау керек (есептеуіш +2).
        Мысық қозғалып және әр мезетте 2-ні көбейтіп санау керек (есептеуіш *2).
        Пингвин қозғалып және әр мезетте квадраттап санау керек (есептеуіш ^2).
        Кім бірінші туға жетеді?
      Course 4 Play Labs For Loops 8a_instruction: |-
        Ойынды аяқтау үшін "қадам" айнымалысын қайта шақырту қажет! Бұл айнымалыны ойын деңгейімен байланыстырайық.\r
        \r
        1) Сиқыршыны қанша рет шерткенін санаңыз.\r
        \r
        2) Егер де сиқыршыны ит 30-ға дейін санап болғанша, кем дегенде 10 рет шерткен болса "қадам"-ды бірге арттырып басынан бастаймыз.\r
        3) Егерде сиқыршына кем дегенде 10 рет шертіп үлгермесе ойын аяқталады.
      Course 4 SCF 1_instruction: "Берілген функцияларды қолданып 4 жол алтыбұрыш
        сыз. Біздің жұп санды жолымыз оңға қалай жылжып кеткенін ескер?"
      Course 4 SCF 1a_instruction: "Барлық шәрінді азғантай блокпен қалай жинап алуға
        болады?"
      Course 4 SCF 1b_instruction: "Барлық шәрінді азғантай блокпен қалай жинап алуға
        болады?"
      Course 4 SCF 2_instruction: |
        Бұл суретті салу үшін біздің алдыңғы деңгейде үйренгенімізді пайдаланыңыз. Ескерту: Парметрлерді қолданатын болсақ код оңайырақ болады.
      Course 4 SCF 3 Fail 1_instruction: "Сіз қалай жасалатынын анықтай аласыз ба..."
      Course 4 SCF 3 Fail 2_instruction: "Сіз қалай жасалатынын анықтай аласыз ба..."
      Course 4 SCF 3_instruction: |
        Бұл суретті салу үшін біздің алдыңғы деңгейде үйренгенімізді пайдаланыңыз. Ескерту: Парметрлерді қолданатын болсақ код оңайырақ болады.
      Course 4 SCFL 1_instruction: "Бұл бас қатырғышты минималды блок саны арқылы
        жасаңыз."
      Course 4 SCFL 1a_instruction: "Скратты жанғаққа минималды блок саны арқылы апара
        аласыз ба?"
      Course 4 SCFL 1b_instruction: "Скратты жанғаққа минималды блок саны арқылы апара
        аласыз ба?"
      Course 4 SCFL 2_instruction: "Бұл бас қатырғышты минималды блок саны арқылы
        жасаңыз."
      Course 4 SCFL 3_instruction: "Бұл суретті қалай жаңадан жасауға болады?"
      Course 4 SCFL 4_instruction: "Бұл суретті қалай жаңадан жасауға болады?"
      Course 4 SCFL 5_instruction: "Бұл суретті қалай жаңадан жасауға болады?"
      Course 4 SCFL 6_instruction: "Бұл суретті жалғыз ілмек арқылы қалай жаңадан
        жасауға болады?"
      Course 4 SCFL 7_instruction: "Суретші бірнеше толқын ұстағысы келеді. Бұл суретті
        қалай жаңадан жасауға болады?"
      Course 4 SCFP 1_instruction: "Суретшіге Х пиксельге алдыға немесе артқа және
        Y пикселге жоғары немесе төмен секіріп отыруға мүмкіндік беретін параметрі
        бар функция құрыңыз  (оң және теріс сандарды қолданыңыз)."
      Course 4 SCV 1_instruction: "Нұсқауларды қайта көру үшін осында басыңыз."
      Course 4 SCV 2_instruction: "Нұсқауларды қайта көру үшін осында басыңыз."
      Course 4 SCV 3_instruction: "Ұстау ойынына көшсек. 2 ұпай алу үшін мысықты ұстаңыз.
        3 ұпай алу үшін пингвинді ұстаңыз. Жеңу үшін 10 ұпай жинау қажет! \\r\nБірақ,
        сақ бол! мысық және пингвин\n бір біріне тиетін болса ұпай жоғалады..\\r\n\\r\nОйын
        нұсқаулықтарға сай жұмыс жасауы үшін\nқажет блоктарды қосып отыр. Бағдарлардың
        көмегімен ит түрлі бағыттарда қозғалу үшін не жасау,а болады? Ит мысықты немесе
        пингвинді ұстаған сәтте ұпайды қалай қосуға болады? Мысық және пингвин бір
        біріне тиетін болса ұпайды қалай азайтуға болады? "
      Course 4 SCV 4_instruction: "Бұл бас қатырғышты минималды блок саны арқылы жасаңыз."
      Course 4 SCV 5_instruction: "Бұл бас қатырғышты минималды блок саны арқылы жасаңыз."
      Course 4 SCV 6_instruction: "Нұсқауларды қайта көру үшін осында басыңыз."
      Course 4 SCVP 1_instruction: "Суретшіге Х пиксельге алдыға немесе артқа және
        Y пикселге жоғары немесе төмен секіріп отыруға мүмкіндік беретін параметрі
        бар функция құрыңыз  (оң және теріс сандарды қолданыңыз)."
      Course 4 Variables Assessment_instruction: "Сіз тараптардың үшін айнымалыны
        пайдалана отырып, осы суретті жасау мүмкін бе? Әрбір жол 50 пиксель ұзақ болуы
        тиіс."
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: |-
        This is a test!\r
        Move one way, then
        another to get me to the pig
      Course1MazeAssessment2_instruction: |-
        This is a test!\r
        Move one way, then
        another to get me to the pig.
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Frame Rate_instruction: Slow down Gamelab Gary's animation with frameRate()
      CSD U3 Random Animation_instruction: |
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |
        Pick a shape function and use calls
        to randomNumber() in place of one or more of the parameters. Maker sure you
        run it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Variable Arithmetic pt2_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables draw loop newVars_instruction: |
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables Initialize_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: |
        Create your own variable, give it a value,
        and display that value in the console.
      CSD U3 Variables random drawing exemplar_instruction: |
        Check out this example
        randomized drawing.
      CSD U3 Variables Random_instruction: |
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables use value rect_instruction: |
        Predict: What will get displayed
        in the console?
      CSP Data Unit - Counting Multiple Things_instruction: |-
        If you can count one
        thing you can count multiple things\r
        \r
        Find out how many people like something
        other than dogs and cats\r
        \r
        Count dogs\r
        Count cats\r
        Count total\r
        Do
        the math\r
        \r
        blank/ blank toal\r
        \r
        Can also use this to find percents
        from this\r
        \r
        x% are dog lovers
      CSP Data Unit -Counting Records - Easy Way_instruction: |
        ReadRecords with specific
        criteria \r
        find the length of an array\r
      CSP Data Unit -Counting Records - Hard Way_instruction: |
        \r
        1. ReadRecords
        for all records\r
        2. Way to loop through and count\r
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: "Create an object with at\nleast
        5 values including at least one string and one number. (Click to see\nfull
        instructions) \n"
      CSP U4 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      drawings!_instruction: |
        Draw the equilateral triangle - all the sides are the
        same!
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: |-
        Write a function called food-critic, which takes
        in the name of a food and produces a String that says how you feel about that
        food. For example, (food-critic “pizza”) might evaluate to “delicious”, but
        (food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two
        foods to review, but you can you write more if you like!  Don’t forget to
        add an “else” clause!\r
        One example - and part of the definition -  has already
        been done for you!
      Eval Cond 7_instruction: |
        Free Play: Write a function called green-shape, which
        takes in the name of a shape and produces a solid green shape. Your function
        should work with at least “circle”, “star” and “rectangle”, but you can add
        other shapes if you like. You can choose the size of each shape. Don’t forget
        to add an “else” clause!\r
        One example - and part of the definition -  has
        already been done for you!\r
      Eval Cond 8_instruction: |
        Free Play: Suppose you want to own a car at 21, or
        have your own business by 30. Write a function called life-goals, which takes
        in an age and produces a string that describes your life goals by then. Don’t
        forget to add an “else” clause!\r
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction
        block? The radius is 20. \n"
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: "Енді әр шеңбердің арасында 18
        градусқа бұрап, 20 қабаттасатын шеңберді жасауға мүмкіндік береді."
      frozen circle function with parameter_instruction: "Мұнда түрлі көлемдегі шеңберді
        жасауға болады «шеңбер жасау» блок ғой. Сіз мөлшері 5 және 10 өлшемді үлкен
        шеңбер шағын шеңбер жасау үшін осы пайдалануға бола ма?"
      frozen circle function_instruction: 10 шарасыз шеңбер жасау үшін жаңа «шеңбер
        жасау» блогын пайдаланыңыз. Топтары арасындағы алға секіруге ұмытпаңыз.
      frozen circle_instruction: "Шеңбер арнайы пішіні болып табылады. Сіз шеңбер
        сызу үшін бар мәселе белгілерін ауыстыру қандай сан анықтау мүмкін бе?"
      frozen cross rotate dense_instruction: '90 рет қайталау болсын! 90 360 ішіне
        қанша рет барады? Кеңес: Бұл шын мәнінде аз саны бар.'
      frozen cross rotate_instruction: "Енді оны 10 рет қайталау көріңіз. Сіз әр жолында
        арасындағы қосу үшін қанша градус қажет?"
      frozen cross_instruction: "Қосу белгісін құру үшін «Қайталау» блок пайдаланыңыз.
        Сіз Эльза алға және артқа болады байқадың ба?"
      frozen diamond mini snowflake_instruction: "Сіз әр снежинка түрлі пішіні болып
        табылады білесіз бе? Әр параллелограмма арасындағы 90 градусқа оңға бұрап,
        параллелограмм 4 рет қайталау үшін блок «қайталау» пайдаланып, жаңа қар жасауға
        мүмкіндік береді."
      frozen diamond snowflake_instruction: "Енді, әрбір арасындағы 36 градус оңға
        бұрап, параллелограмм 10 рет қайталау үшін қайталау блок пайдаланып, жаңа
        қар жасауға мүмкіндік береді."
      frozen diamond_instruction: "Параллелограмм жасауға мүмкіндік береді. Бұл жай
        ғана алаңға сияқты, бірақ әр түрлі бұрыштарды бар: 60 және 120 дәрежесі орнына
        90 градус бұрыштары бұрыштары."
      frozen freeplay_instruction: "Сіз ресми шеберлік суретші болдым! Қысқы кереметі
        жасаңыз."
      frozen line_instruction: "Сәлем! Мен Арендель туралы Эльза қуаныштымын. Маған
        бір сызық жасауға көмектеседі."
      frozen perpendicular_instruction: "Қазір біз бір-біріне 90 градуста екі желілерін
        жасауға болады, егер көрейік. Сіз «тоғысында» атты блогын, сондай-ақ, «жылжыту»
        блогын пайдалану қажет болады."
      frozen snowflake branch_instruction: "Қар ұшқыны сияқты көрінеді бастайды, ол
        үш филиал құру үшін «қар бүршүгі филиалы жасау» блогын пайдаланып көріңіз."
      frozen snowflake full_instruction: "Енді әдемі қар жасауға оны 8 рет қайталау
        болсын!"
      frozen snowflower_instruction: "Күрделі қар үлгілері өте қарапайым пішіндері
        бар құрылуы мүмкін. Сіз мөлшері 10 мөлшері 5 және 5 топтарының 5 шеңберді
        қайталау арқылы үлгісін жасауға болады?"
      frozen square iterative_instruction: "Біз жарты жолда квадрат қабылдау боласыз
        Меніңше. Ның квадрат жасау үшін бірге 4 сызықтар қоюға болсын."
      frozen square loop 3x_instruction: "Әрбір алаңда кейін бұрап, үш алаңдар жасауға
        мүмкіндік береді. Әрбір жаңа алаңға дейін 120 градусқа бұрыла көз жеткізіңіз."
      frozen square loop_instruction: "Сәлем, Мен Аредаль Анна қуаныштымын! Ның аз
        блоктарын пайдаланады «Қайталау» блогын, бар квадрат болсын. Неше рет (???)
        квадрат жасауға, оның ішінде блоктар блок ілмектер «қайталау» керек?"
      frozen square snowflake_instruction: "Егер сіз алаңға 10 рет жасау үшін блок
        «қайталау», және әрбір алаңда арасындағы 36 градусқа бұру үшін блок «бұраңыз»
        пайдаланып қар ұшқыны жасауға болады?"
      Infinity_catch_instruction: "Эльзаны (“кейіпкер 2”) жасап, және бағдар пернесін
        қолдана отырып, Аннаны ұстай аласыз ба?"
      Infinity_finale_instruction: "Жақсы көретін нәрсеңізді жасап, бөлісіңіз!"
      Infinity_move_collide_instruction: "Хиро “1-кейіпкер”. Жылжыту блогын пайдаланып,
        Baymax-қа жету үшін Хироны оңға жылжытыңыз."
      Infinity_move_directions_instruction: "Бэймакс “2-кейіпкер”. Қозғалу блоктарын
        қосыңыз және бағдарды қолдана отырып, Бэймакстың орнын ауыстырыңыз. Басқа
        екі кейіпкерге тиюін қадағалаңыз."
      Infinity_move_right_instruction: "Хиро “1-кейіпкер”. Жылжыту блогын пайдаланып,
        Baymax-қа жету үшін Хироны оңға жылжытыңыз."
      Infinity_repeat_instruction: '"Үнемі қайталау" блогын қолдана отырып, Аннаны
        жоғары және төмен 400 пиксельде жылжытыңыз.'
      Infinity_say_instruction: '"Сөйлеу" блогын қолданып, Аннага ”Сәлем” деп айтқызу.'
      Infinity_shoot_instruction: "Бэймакс “2-кейіпкер”. Бэймакстың Хироға зымыранды
        лақтыруын жасау."
      Infinity_shoot_directions_instruction: "Хиро “3-кейіпкер”. Осы төрт кейіпкерге
        Хироның зымыран лақтыруын жасаңыз және әрбір лақтырған сайын 1 секунд күтіңіз."
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: "Одан да көп қар бүршігіне тигізіңіз!"
      Infinity_touch_four_instruction: "Әрбір төрт қар бүршігіне тию үшін, Аннаны
        жоғары, төмен, солға, оңға жылжытыңыз."
      Infinity_touch_score_instruction: "Анна қар бүршігіне пернесін басып, оның әр
        қар бүршікке бір рет тиіп отыруын қадағалаңыз."
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: "Қысқа түзу сызықты және оның оң жағынан
        ұзын бір түзу сызыңыз!"
      K-1 artist 1 level 10_instruction: '"Сызу" және "Секіріс" блоктарының екеуін
        бірге қолданып үзілісті түзу сызыңыз'
      K-1 artist 1 level 9_instruction: "Оны үш сызықтың көмегімен сызыңыз"
      K-1 Artist Loops 1_instruction: "Шығысқа қарай 4 рет жылжыту арқылы түзу сызықты
        салыңыз."
      K-1 Artist Loops 2_instruction: "Енді, дәл осыны цикл қолданып сал."
      K-1 Artist Loops 3_instruction: "Сіз 6 сызық салу үшін бұл блокты ілмекке қоса
        аласыз ба?"
      K-1 Artist Loops 4_instruction: "Ілмек сізге қамалдың төбесін салуға көмектесе
        алады ма?"
      K-1 Artist Loops 5_instruction: "Сіз осы баспалдақтарды салу үшін циклге нені
        сала аласыз?"
      K-1 Artist Loops 6_instruction: "Ол үшін екі цикл қажет: біріншісі баспалдақпен
        көтерілу үшін, ал екіншісі түсу үшін."
      K-1 Artist Loops 7_instruction: "Цикл бұл суретті аяқтауға көмектеседі."
      K-1 Artist Loops 8_instruction: "Баспалдақ үлкенірек қадамдарға ие."
      K-1 Artist Loops 9_instruction: "Сатыларды салудың ең жеңіл жолы қандай?"
      K-1 Artist Loops Free Play_instruction: "Көңілді бір зат салу үшін тегін ойынды
        ойнаңыз!"
      K-1 Artist1 1_instruction: "Адамның аяғын бір сызық көмегімен салыңыз"
      K-1 Artist1 10_instruction: X белгіленген қазынаға алып баратын үзілісті сызықты
        салу үшін "Секіріс" және "Салу" блоктарын қолданыңыз
      K-1 Artist1 2_instruction: "Екі сызықтың көмегімен мысықтың мұртын салыңыз!"
      K-1 Artist1 3_instruction: "Үйдің суретін аяқтау үшін шығысқа қарай екі, солтүстікке
        қарай екі сызық салыңыз!"
      K-1 Artist1 4_instruction: "Қамалдың суретін аяқтау үшін жоғары, үстінде және
        төмен сызықтарын салыңыз!"
      K-1 Artist1 5.5_instruction: "Қыса сызықтарды қолдана отырып қамалдың үшінші
        мұнарасын аяқтаңыз"
      K-1 Artist1 5_instruction: "Бұл гүлдің сабағын екі сызық көмегімен салыңыз!"
      K-1 Artist1 6_instruction: "Секіріс блогын қолдана отырып суретті аяқтаңыз!"
      K-1 Artist1 7_instruction: "Сурет салмай қозғалу үшін секіріс блогын қолданыңыз.
        Жоғары секіріп сызықтың суретін салыңыз."
      K-1 Artist1 8_instruction: '"Сызу" және "Секіріс" блоктарының екеуін қолдана
        отырып үзілісті түзу сызыңыз'
      K-1 Artist1 9_instruction: "Үзілісті сызықты салу үшін салып кейіннен секіріп
        отырасыз"
      K-1 Artist1 Assessment 1_instruction: "Қысқа және ұзын сызықтар суретін салыңыз!"
      K-1 Artist1 Assessment 2_instruction: "Қысқа үзілісті сызықтардың суретін салыңыз!"
      K-1 Artist2 1_instruction: "Үшбұрыштың астынан шаршының суретін салыңыз."
      K-1 Artist2 2_instruction: "Үйдің жанына секіріп шаршының суретін салыңыз."
      K-1 Artist2 3_instruction: "Бір шаршының үстінен екінші шаршының суретін салыңыз"
      K-1 Artist2 4_instruction: "Көпірдің суретін аяқтау үшін төрбұрыштың суретін
        салыңыз."
      K-1 Artist2 5_instruction: "Көпірдің тіреуін аяқтау үшін төрбұрыштың суретін
        салыңыз"
      K-1 Artist2 6_instruction: "Төртбұрыштың суретін салу үшін екі шаршыны салыңыз!"
      K-1 Artist2 Assessment1_instruction: "Бағалау: бір шаршының қасына екінші шаршыны
        салыңыз."
      K-1 Artist2 Free Draw_instruction: "Кез келген заттың суретін салыңыз!"
      K-1 Artist2_7_instruction: "Қораптың жоғарғы жағына суырма қосу үшін төрбұрыштың
        суретін салыңыз!"
      K-1 Bee 1_instruction: "Мені алдымен гүлге алып барып шырын жинаңыз, кейінен
        ұяға алып барып бал жасаңыз"
      K-1 Bee 10_instruction: "Төрт шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee 11.5_instruction: "Төрт шырын жинап, кейінен төрт бал жасаңыз!"
      K-1 Bee 11_instruction: "Үш шырын жинап, кейінен бір бал жасаңыз!"
      K-1 Bee 12_instruction: "Үш шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee 13_instruction: "Үш шырын жинап, кейінен бір бал жасаңыз!"
      K-1 Bee 14_instruction: "Мені алдымен гүлге алып барып шырын жинаңыз, кейінен
        ұяға алып барып бал жасаңыз"
      K-1 Bee 15_instruction: "Екі бал жасау үшін екі шырын жинаңыз"
      K-1 Bee 2_instruction: "Мені алдымен гүлге алып барып шырын жинаңыз, кейінен
        ұяға алып барып бал жасаңыз"
      K-1 Bee 3_instruction: "Мені алдымен гүлге алып барып шырын жинаңыз, кейінен
        ұяға алып барып бал жасаңыз"
      K-1 Bee 4_instruction: "Екі шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee 5_instruction: "Үш шырын жинап, кейінен үш бал жасаңыз!"
      K-1 Bee 6_instruction: "Екі шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee 7_instruction: "Үш шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee 8_instruction: "Екі шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee 9_instruction: "Екі шырын жинап, кейінен екі бал жасаңыз!"
      K-1 Bee Assessment 1_instruction: "Бал жасау үшін шырын жинаңыз!"
      K-1 Bee Assessment 2_instruction: "Бал жасау үшін шырын жинаңыз!"
      K-1 Bee Loops 1_instruction: "Бал жасау үшін шырын жинаңыз!"
      K-1 Bee Loops 10_instruction: "Шырын, бал алу және қозғалу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 11_instruction: "Бағалау: Шырын және бал алу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 12_instruction: "Бағалау: Шырын, бал алу және қозғалу үшін циклды
        пайдаланыңыз!"
      K-1 Bee Loops 2_instruction: "Қозғалып, кейіннен шырын жинап бал жасау үшін
        циклды қолданыңыз!"
      K-1 Bee Loops 3_instruction: "Шырын және бал алу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 4_instruction: "Шырын, бал алу және қозғалу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 5_instruction: "Шырын және бал алу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 6_instruction: "Шырын, бал алу және қозғалу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 7_instruction: "Шырын және бал алу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 8_instruction: "Шырын және бал алу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops 9_instruction: "Шырын, бал алу және қозғалу үшін циклды пайдаланыңыз!"
      K-1 Bee Loops Assessment 1_instruction: "Шырын алып бал жасаңыз қозғалу үшін
        циклды қолданыңыз!"
      K-1 Bee Loops Assessment 2_instruction: "Шырын алып, бал жасау үшін циклды пайдаланыңыз!"
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: "Үш деңгейлі пирамида құрыңыз.
        Мұнда басқа бағыттар жоқ, сол себепті мақсатқа жету үшін бөліктермен ойнаңыз!"
      k-1 maze 1_instruction: "Сіз мені торайға жете алуым үшін батысқа қарай қозғалта
        аласыз ба?"
      K-1 Maze 10_instruction: "Торайға жету үшін жарылғышты айналып өтіңіз! "
      K-1 Maze 11_instruction: "Мені ақымақ торайға алып бару үшін жолды көрсетіңіз.
        Жарылғыштартардан сақ болыңыз, әйтепесе қауырсындарыңыздан айырыласыз. Көмек:
        ол менен оңтүстікте орналсқан."
      K-1 Maze 2_instruction: "Мені торайға алып бару үшін шығысқа қарай қозғалтыңыз!"
      K-1 Maze 3_instruction: "Мені торайға алып бару үшін оңтүстікке қарай қозғалтыңыз!"
      K-1 Maze 4_instruction: "Мені торайға алып бару үшін солтүстікке қарай қозғалтыңыз!"
      K-1 Maze 5_instruction: "Мені торайға алып бару үшін шығысқа қарай қозғалтыңыз!"
      K-1 Maze 6_instruction: "Торайды ұстау үшін бір бағытқа, кейінен басқа бағытқа
        қозғалыңыз!"
      K-1 Maze 7_instruction: "Торайды ұстау үшін бір бағытқа, кейінен басқа бағытқа
        қозғалыңыз!"
      K-1 Maze 8_instruction: "Торайды ұстау үшін бір бағытқа, кейінен басқа бағытқа
        қозғалыңыз!"
      K-1 Maze 9_instruction: "Торайды ұстау үшін бір бағытқа, кейінен басқа бағытқа
        қозғалыңыз!"
      K-1 Maze Assessment 1_instruction: "Бағалау -- маған торайды ұстап беріңіз!"
      K-1 Maze Assessment 12_instruction: "Бағалау Деңгейі"
      K-1 Maze Assessment 13_instruction: "Бағалау Деңгейі"
      K-1 Maze Assessment 2_instruction: "Бағалау -- маған торайды ұстап беріңіз!"
      K-1 maze debug 1_instruction: "Торайды ұстау үшін кодты өзгертіңіз!"
      K-1 maze debug 10_instruction: "Торайды ұстау үшін, блоктардың орнын ауыстыру
        немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 maze debug 11_instruction: |-
        Бұл тексеріс!\r
        Торайды ұстау үшін, блоктардың орнын ауыстыру немесе\nжаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз
      K-1 maze debug 2_instruction: "Торайды ұсатау үшін ненің жетіспейтіндігін анықтап,
        қажет блокты қосыңыз!"
      K-1 maze debug 3_instruction: "Торайды ұсатау үшін ненің жетіспейтіндігін анықтап,
        артық блоктарды алып-тасаңыз!"
      K-1 maze debug 4_instruction: "Мен қате бағытта жүруімім мүмкін деп ойлаймын.
        Осы блокатарды орындап, қателігін түзетіңіз."
      K-1 maze debug 5_instruction: "Торайды ұстау үшін, блоктардың орнын ауыстыру
        немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 maze debug 6_instruction: "Торайды ұстау үшін, блоктардың орнын ауыстыру
        немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 maze debug 7_instruction: "Торайды ұстау үшін, блоктардың орнын ауыстыру
        немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 maze debug 8_instruction: "Торайды ұстау үшін, блоктардың орнын ауыстыру
        немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 maze debug 9_instruction: "Торайды ұстау үшін, блоктардың орнын ауыстыру
        немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 Maze debug Assessment 1_instruction: "Бағалау -- Торайды ұстау үшін, блоктардың
        орнын ауыстыру немесе жаңа блоктарды қосу арқылы осы деңгейді ретке келтіргеніңіз!"
      K-1 Maze Loops 1_instruction: "Мені доңызға дейін апаршы!"
      K-1 Maze Loops 10_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 11_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 12_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 2_instruction: Маған торайды ұстап беру үшін "қайталау" блогын
        қолданыңыз!
      K-1 Maze Loops 3_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 4_instruction: "Мені доңызға дейін апаршы!"
      K-1 Maze Loops 5_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 6_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 7_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 8_instruction: "Маған торайды ұстап беріңіз! Қайталау ілмегін
        қолданыңыз."
      K-1 Maze Loops 9_instruction: "Мені доңызға дейін апаршы!"
      K-1 Maze Loops Assessment 1_instruction: "Бағалау -- Маған торайды ұстап беріңіз!
        Қайталану циклын қолданыңыз!"
      K-1 Maze Loops Assessment 2_instruction: "Бағалау -- Маған торайды ұстап беріңіз!
        Қайталану циклын қолданыңыз!"
      K-1 Maze Multi 14_instruction: "Бағалау Деңгейі"
      K-1 Maze Multi 15_instruction: "Бағалау Деңгейі"
      K-1 Maze Sequence Assessment 1_instruction: |-
        Бұл тексеру!\r\
        Торайды ұстау үшін бір бағытқа,
        кейінен басқа бағытқа қозғалыңыз
      K-1 Maze Sequence Assessment 2_instruction: |-
        Бұл тексеріс!\r\
        Торайды ұстау үшін бір бағытқа,
        кейінен басқа бағытқа қозғалыңыз.
      kikiTesting_instruction: |
        .\r
         .\r
        .\r
        .\r
        .\r
        .\r
        \r
        .\r
        \r
      love_spring_1_instruction: |
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: |-
        Figure out how to change this code so that Robin
        chooses a number between 1 and 20.  \r
        \r
        When you're ready, press "Run"
        and play until you guess Robin's number!
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: |
        In this version of the Internet Simulator,
        you can connect to up to 5 other people in a room. When you send messages
        in the room, everyone receives them. What are some of the challenges of this
        system, and how might you solve them?\r
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
      NetSim Standalone Routers Addresses_instruction: |-
        For this activity, connect
        to a router with the others in your group. Important note: The router will
        only properly route messages where the first 4 bits are the To: address and
        the second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
      NetSim Standalone Sending Numbers_instruction: "You and your partner can now\nreliably
        send messages back and forth without extra coordination! While you're\nalways
        sending bits back and forth, you can also represent those bits as decimal\nnumbers.
        What kinds of information can you represent with this system? \n"
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: "Қандай да бір кереметтің суретін салыңыз! Сіздің
        кодыңыз кез-келген уақытта қайтарып алатындай проект секілді сақталады."
      NEW Course 4 Artist Functions 1_instruction: "Сіз циклді қолдану арқылы ұзындығы
        100 пиксель болатын квадратты сала аласыз ба?"
      NEW Course 4 Artist Functions 10.1_instruction: "Бұл модельді тарту үшін алдыңғы
        жұмбақтағы функцияларды қолданыңыз."
      NEW Course 4 Artist Functions 10_instruction: 40 квадрат пикселін жасау үшін,
        функцияларды анықтаулардағы блоктарды толтыру үшін "Өзгерту" пернесін басыңыз.
      NEW Course 4 Artist Functions 11_instruction: 'Ендігі кезекте біз қатар орналасқан
        6 шаршы салатын "Шаршылар тізбегін салу" деп аталатын функция құрғымыз келеді.
        Сіз бұл функцияны біз алдын құрған "20 Шаршы салу" функциясын қолдана отырып
        құра аласыз ба? Ескерту: біз қауырсында әлдеқайда жұқа қылғанымызға назар
        аударыңыз. Қалай екендігін көру үшін "20 Шаршы салу" функциясының "Өңдеу"
        батырмасын басыңыз.\r'
      NEW Course 4 Artist Functions 12_instruction: Осы өрнекті сызу үшін алдынғы
        басқатырғыш "Квадраттарының желісін салу » фунциясын пайдаланыңыз
      NEW Course 4 Artist Functions 13_instruction: '"Шаршылар қатараын салу" функциясын
        қолдана отырып жұлдыздың суретін сала аласыз ба? Нұсқаулық: "Шаршылар қатарын
        салу" функциясын екі рет шақыртып отырмас үшін өзгертуіңіз керек. Саған алдыға
        қарай белгілі бір пикселге жүріп және 144 градусқа бұрылып отыру қажет.'
      NEW Course 4 Artist Functions 14_instruction: "Ойнау уақыты! "
      NEW Course 4 Artist Functions 2_instruction: "Арасы 20 пиксель болатын 3 шаршы
        сала аласын ба? Кеңес: әр шаршы ұзындығы 100 пиксель"
      NEW Course 4 Artist Functions 3_instruction: "Мынау блоктың жаңа түрі. Бұл «Функция»
        блогы деп аталады. «Өңдеуді »басыңыз, содан кейін бір жағы 100 пиксель болатын
        шаршы салу үшін кодты қосыңыз. Функцияны өңдеп болғаннан кейін, бағдарламаңызға
        өту үшін «Жабу» батырмасын басыңыз."
      NEW Course 4 Artist Functions 4_instruction: 'Осы өрнекті сызу үшін "Шаршы салу"
        функциясын қолданыңыз. Кеңес: Сіз "120 градусқа оңға бұрыл» блогын пайдалануыңыз
        қажет.'
      NEW Course 4 Artist Functions 5_instruction: '"Шаршы салу" блогы қандай командаларды
        іске қосу керектігін кайдан біледі? "Шаршы салу" блогында "Өңдеу" дегенді
        басыңыз. Функция редакторындағы блоктар "Шаршы салу"-ды құрайды. Қарап болғаннан
        кейін, "Сақтау" түймешігін басыңыз, содан кейін фунцияны іске қосыңыз'
      NEW Course 4 Artist Functions 6_instruction: |
        "Шаршы салу" функциясын пайдалану, сіз осы суретті сала аласыз ба? Нұсқау: Әрбір шаршы бір бірінен 20 пиксель алыс орналасқан.\r
      NEW Course 4 Artist Functions 7_instruction: 'Сіз функцины қалай қолдану керектігін
        игердіңіз бе? Осы шаршының ұзындығын 200 пиксель болатыңдай етіп өзгертейік.
        Нұсқау: функцияны өзгерту үшін "өңдеу" батырмасын басыңыз. Функция редакторынан
        шығу үшін «Жабу» батырмасын басуды ұмытпаңыз. '
      NEW Course 4 Artist Functions 8_instruction: Біз сіз үшін жаңа функция жасадық,
        ол "үшбұрыш сызу" деп аталады. Функцияны бір жағы 100 пиксель болатын үшбұрыш
        салатындай етіп өңдеңіз?
      NEW Course 4 Artist Functions 9_instruction: "Тек бір блок қосу арқылы шеше
        аласыз?"
      NEW Course 4 Artist Functions inspire_instruction: "Суретті қайтадан көру үшін
        мұнда басыңыз."
      New Course 4 Artist Functions Level 4_instruction: Осы өрнекті сызу үшін "Шаршы
        салу » функциясын пайдаланыңыз.
      NEW Course 4 Artist Params 1_instruction: Осы функция бір жағы 50 пиксель шаршы
        салыу тиіс. Бастау үшін "Өңдеу" - ді басыңыз.
      NEW Course 4 Artist Params 10_instruction: '"Алтыбұрыш салу" параметрлі функция
        жасаңыз. Нұсқау: Алтыбұрыш ұзындығы 100 пиксел. '
      NEW Course 4 Artist Params 11_instruction: Бұл пішініді калай салу мүмкін? Функцияны
        "тараптар" параметрін пайдаланатындай етіп өңдеңіз.
      NEW Course 4 Artist Params 12_instruction: "Сіз бұл сызбаны аяқтай аласыз ба?
        Барлық фигуралар тараптары 100 пиксель."
      NEW Course 4 Artist Params 12a_instruction: "Бұл соңғы суретке ұқсайды. Осы
        дизайнды жасау үшін функциясыңызға ілмектерді козыңыз?"
      NEW Course 4 Artist Params 13_instruction: |-
        "Көпбұрышты салу" функциясың өңдейік. Қазірдің өзінде "тарптар" параметрі бар. Енді "ұзындық" параметрін қосып көрейік.\r
        Нұсқау: әрбір кескін периметрі 200 пиксель. Тараптар саны әр түрлі болған жағдайда кескіндерді бірдей жасау теңдеуі есіңізде ме?
      NEW Course 4 Artist Params 14_instruction: '"спираль шетін салу" функциясына
        "ұзындық" және « тараптар » параметрлерін қосу арқылы осы пішіндерді қайта
        салыңыз.'
      NEW Course 4 Artist Params 15_instruction: "Еркін ойнау: Мынау сіз жазаған функциялар
        және тағы бірнеше қосымша функция ойнауға арналған. Тамаша сурет сал! Сызбалар
        әр түрлі көріну үшін қалам енімен ойна!"
      NEW Course 4 Artist Params 2_instruction: Жақтары 50 пиксель болатын "үшбұрыш
        сызу" функциясын жаса
      NEW Course 4 Artist Params 3_instruction: |
        Енді қатарынан 5 үшбұрыш сызу функциясын жасаңыз. Нұсқау: Әр үшбұрыш бір бірінен 30 пиксель алыста орналасқан.\r
      NEW Course 4 Artist Params 4_instruction: "Осы функция блоктарында нені байқадыңыз?
        Өзгерісті көру үшін « Іске қосу » батырмасын басыңыз."
      NEW Course 4 Artist Params 5_instruction: "??? салу блогынын ұзындық параметрін
        толтыр. Кеңес: Бесбұрыш қабырғасы 100 пиксель. "
      NEW Course 4 Artist Params 6_instruction: Бұл фигураларды құру үшін "???" белгісін
        дұрыс сандарға ауыстыру арқылы "ұзындық" параметрін толтыр. Шаршы мен Үшбұрыш
        өлшемі 100 пиксел, ал алтыбұрыш 75 пиксел болады.
      NEW Course 4 Artist Params 7_instruction: "Осы суретті аяқтай аласызба? Кеңес:
        Үшбұрыш қабырғалары алдынғысынан 25 пиксельге ұзын. Бірінші үшбұрыш қабырғасы
        25 пиксель."
      NEW Course 4 Artist Params 8_instruction: "Осы үшбұрыш функциясынынң коды бұзылған.
        Осы фукцияны жөндеп, 25, 50 және 75 пиксельды үшбұрыштарды сыз?"
      NEW Course 4 Artist Params 9_instruction: '"Шаршыны салу" функциясының анықтамасын
        толтыру және бір параметр қосу үшін "Өңдеу"-ді басыңыз. Ол дәл үшбұрырыштағыдай
        ұзындық өлшемін қабылдауы қажет. Бұл жолы өлшемі 25,50 және 75 пиксел болатын,
        бір бірінен 100 пиксел ара ақышықтықта орналасқан 3 шаршы салыңыз.'
      NEW Course 4 Artist Params inspire_instruction: |-
        Тегін Ойнау Шабыты: Енді сіз осы секілді сурет жасау үшін білу қажет барлық заты білесіз. Егер де осы сурет сізді шабыттандыратын болса, Осы іспеттес бір зат құрып көріңіз. Кері жағдайда өзіңіздің қалаған затыңызды құрыңыз\r
         \r
        Біз шабыттандыратын суретіміздің қалай жасалғандығын білгіңіз келеді ме?
      NEW Course 4 Artist Vars 1.5_instruction: Осы кодқа назар аудар, "ұзындықты
        орнату" және "ұзындық" блоктары бірге жұмыс жасап тұрғандығын көре аласың
        ба? Қалай жұмыс жасайтындығын көру үшін "Орындау"-ды бас.
      NEW Course 4 Artist Vars 12_instruction: "Енді соңғы деңгейден алгоритмді алып,
        қалпына келтіріп, шеттері 150 болатын бесбұрыш құрыңыз."
      NEW Course 4 Artist Vars 2.5_instruction: Осы кодқа назар аудар, "ұзындықты
        орнату" және "ұзындық" блоктары бірге жұмыс жасап тұрғандығын көре аласың
        ба? Қалай жұмыс жасайтындығын көру үшін "Орындау"-ды бас.
      NEW Course 4 Artist Vars 2_instruction: '50 пиксель қатарынан тұратын үшбұрыш
        салу үшінсандар блогын "set length" (ұзындықты белгілеу) блогына қарай тартыңыз. '
      NEW Course 4 Artist Vars 4 5_instruction: "Соңғы жұмбақтағы ерекше жұмысты осында
        қайтіп жасауға тырысайық. Бұл жолы керемет дизайнды өлшемі 60 пиксель болатын
        алтыбұрышты жасайық."
      NEW Course 4 Artist Vars 4_instruction: "Тағы да тырысып көрейік. Сіз бұл керемет
        дизайнды алтыбұрышты ұзындыққа айнымалы беріп сыза аласыз ба? Кеңес: бұл 10
        бөлінетін сан."
      NEW Course 4 Artist Vars 6_instruction: 'Ұзындықтың айнымалысын керекті жерге
        түсіріп,\nкейін ұзындыққа дұрыс мән беріп үлгіні салыңыз.  (Кеңес: бұл 10
        еселі сан).\r\n\r\nҰзындықтың мәнін бір рет бергенде, код дұрыс мәнді барлық
        жерде\nберетінін назар аударыңыз.\r\n\r\n\r\n"'
      NEW Course 4 Bee For Loops 1_instruction: "Әр гүлден шырынды жинап шығу үшін
        циклді қолданыңыз."
      NEW Course 4 Bee For Loops 10_instruction: Шартты циклдын "есептеуіш" айнымалысымен
        көлбеумен алға көп қозғалу керек па екенін анықта.
      NEW Course 4 Bee For Loops 10a_instruction: "Тапсырмаға дайынсыз ба? Цикл туралы
        білгеніңізді алып, бұл мәселені шешуге тырысыңыз. Есте сақтаңыз: барлық қадамдарды
        анықтағанға дейін, сізге мүмкін барлық шешімдеріңізді қайта қарауға тура келеді."
      NEW Course 4 Bee For Loops 11_instruction: "Қоғалысты және шырынды жинауды басқару
        үшін циклдің айнымалысын қолдана аласыз ба?"
      NEW Course 4 Bee For Loops 2_instruction: "Араның барлық шырынды жинайтынына
        көз жеткізу үшін керекті код қосыңыз. Бұл жұмбақты шешу үшін қанша код керектігін
        қараңыз! (Сіз қарапайым тәсілді келесі бас қатырғышта білесіз)"
      NEW Course 4 Bee For Loops 3_instruction: "\"for loop\" мұны қарапайым жасайды!
        Сізге керекті барлық кодтар осында, қалай байланысқанын қараңыз. \n Оның қалай
        жұмыс жасайтынын қарау үшін \"Run\" пернесін басыңыз. \n"
      NEW Course 4 Bee For Loops 4 4_instruction: Енді бізге "counter"-ден бұрын қозғалып,
        кейін шырынның уақыт есебін алуымыз керек. Бұл мәселені шешу үшін екі "repeat"
        (қайталау) циклін қолдана аласыз ба?
      NEW Course 4 Bee For Loops 4_instruction: '??? -ды "for loop" алмастырып, максимум
        мөлшерде шәрін жинап ал. '
      NEW Course 4 Bee For Loops 5 5_instruction: '''''Шартты цикл" цикллын қолдануға
        үйрендің бе? Араға шәрін жинауға көмектесейік.'
      NEW Course 4 Bee For Loops 5_instruction: '"Шартты циклмен" кері санауға болады.
        5-тен 1-ге дейін бір-бірден санап барлық шәрінді жинауға тырыс.'
      NEW Course 4 Bee For Loops 6_instruction: Циклдағы соңғы сан "қадам" деп аталады.
        Цикл орындалған сайын есептеуіш осы қадамға өзгеріп отырады. 2-ге тең болатын
        қадамды қолданып гүлдерді жинап көр,
      NEW Course 4 Bee For Loops 7_instruction: |-
        Ендігі кезекте математикалық блокты қолдана отырып "санауыш" айнымалысын біріктірейік. Сіз мүмкін блоктардың ең аз санын қолдана отырып осы баққа көшу үшін "санауыш" айнымалысын қалай қолдана аласыз? Бұл жолы 3,6,9,12 және 15 шырын жинау үшін не істеу қажет? Құпия "санауыш" айнымалысында.\r
        \r
        Есте сақтаңыз: егерде сіздің циклыңыз өсуге дейін есептелінетін болса, өсімше орындалған сайын "санауыш" айнымалысына қосылып отырады.
        Remember: If your loop is counting up, the increment is added
        to your "counter" variable each time through.
      NEW Course 4 Bee For Loops 8_instruction: "Барлығы дұрыс! 3,6,9,12және 15 шырын
        жинау үшін қажам қандай болуы қажет?\\rНұсқаулық: Әр бір санға одан кейін
        түрған санды алу үшін қаншаны қосу қажет?"
      NEW Course 4 Bee For Loops 9_instruction: "Егер икл кері бағытта санайтын болса
        онда қадам цикл орындалған сайын алынып отырады. 15, кейіннен 12, кейіннен
        9,6 және 3 шырын жинау үшін қадам қандай болуы қажет?"
      NEW Course 4 Bee For Loops 95_instruction: Құрылған "үшін" циклының элементтеріне
        назар аудар. Бұл тапсырманы шешу үшін қандай сандарды екі еселеу қажеттігін
        таба аласың ба? Не себептен бұл дәл осылай жұмыс атқарады?
      NEW Course 4 Play Lab Params 11_instruction: "Еркін ойын уақыты! Барлық блоктармен
        ойнап, уақытынды шаттықпен өткіз. "
      NEW Course 4 Play Lab Params 5 5_instruction: "Енді көмексіз тағы бір рет жасап
        көр. Осы жолы не енгізу керек?"
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Бұл код не ісдейді деп ойлайсын?
        "Орындау" батырмасын басып не болатынын көр."'
      NEW Course 4 Play Labs For Loops 7a_instruction: "Барлық біліміңді қолданып,
        Пингвин санағанда Динозавр алға жүретіндей істей аласын ба?"
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: "Еркін ойын уақыты!
        Барлық блоктармен ойнап, уақытынды шаттықпен өткіз. "
      NEW Course 4 Play Labs For Loops 8a_instruction: 'Тапсырма: "үшін" циклын әрбір
        кейіпкер қозғалып және өз номерін айтып болғаннан кейін экраннан жоғалуы үшін
        қалай қолдануға болады?'
      New Play Lab Project_instruction: "Өз хикаяңызды немесе ойныңызды істеңіз! Сіздің
        кодыңыз жоба ретінде сақталып қалады, кейін кез-келген уақытта қайтып келуге
        болады."
      Ninjacat Demo B (copy 1)_instruction: |
        \r
        Let’s begin by exploring a simple
        videogame, and then figuring out how it works. You can use the arrow keys
        to move the ninja left, right and jump - try to catch the unicorn and avoid
        the dragon!\r
        \r
        \r
        \r
          \r
        \r
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: |
        Freeplay: Here are some functions to play with.  Can
        you draw a bat?\r
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: "Криперлерге тиіспей ақ қойған дұрыс.
        Оларды абайлап айналып өтіп, өзіңіздің қауіпсіз үйіңізге кіріңіз."
      Overworld Chop Tree - allthethings_instruction: |
        Wood is a very important resource.
        Many things are made from it. Walk to the tree and use the “destroy block”
        command to chop it down.
      Overworld Chop Tree_instruction: Ағаш өте пайдалы ресурс. Одан көп нәрсе жасауға
        болады. Ағашқа барып "блокты жой" бұйрығымен талды кесіп ал.
      Overworld Chop Trees_instruction: "Күннің көзі кетпей тұрғанша үйді салып тастау
        керек. Үйге көп ағаш керек. 3 талды кесіп таста."
      Overworld Free Play 20x20_instruction: "Құттықтаймыз! Сіз біздің барлық бас
        қатырғыштарымызды шештіңіз. Енді сіз жһалынған біліміңіз бен өнеріңізді қолдана
        отырып ресурстарды жинай, арнайы заттарды шығара және құра аласыз"
      Overworld Free Play_instruction: "Бұл амақ сенікі. Не салатыныңды өзің таңда."
      Overworld House Frame - A_instruction: "Өзіміздің үйімізді жасайық! Осы орын
        жақсы көрінеді. Блоктармен үйдін сыртын жаса."
      Overworld House Frame - C_instruction: "Өзіміздің үйімізді жасайық! Осы орын
        жақсы көрінеді. Блоктармен үйдін сыртын жаса."
      Overworld House Frame B_instruction: "Бір қабырғаны аяқтадық, қалғандарын өз
        үйіңіздің жоспарына сүйене отырып аяқтаңыз! Көптеген амалдарды қайталап отыруға
        тура келеді."
      Overworld House Frame B2_instruction: "Бір қабырғаны аяқтадық, қалғандарын өз
        үйіңіздің жоспарына сүйене отырып аяқтаңыз! Көптеген амалдарды қайталап отыруға
        тура келеді."
      Overworld House Frame C_instruction: "Бір қабырғаны аяқтадық, қалғандарын өз
        үйіңіздің жоспарына сүйене отырып аяқтаңыз! Көптеген амалдарды қайталап отыруға
        тура келеді."
      Overworld House Frame Chosen_instruction: Үйдін қалған бөлігін өзің қалаған
        материалдармен сала бер. "Қайталау" бұйрығы керек болып қалар.
      Overworld House Frame_instruction: "Өзіміздің үйімізді жасайық! Осы орын жақсы
        көрінеді. Блоктармен үйдін сыртын жаса."
      Overworld Minecart Track_instruction: "Сіз жер бетіне көптеген пайдалы қазбаларды
        алып оралдыңыз. Ендігі кезекте біз үйден басталатын жолдың бойында рельс соғуымыз
        қажет. Алғашқы бөлім - жол бойымен жүріп ағаштарды шабыңыз."
      Overworld Move to Sheep_instruction: Қойға жету үшін екінші "алға жылжы" бұйрығын
        қос.
      Overworld Place Wall_instruction: "Кез  келген үйді құру қабырғадан басталады.
        Үйдің алғашқы бөлімін \n\"орналастыру\" және \"алдыға қозғалу\" командаларын
        қайталану циклына\n орналастыру арқылы құрыңыз.\n"
      Overworld Plant Crops_instruction: "Алдын ала ойланып жүрген жақсы. Судын екі
        жағындада өсімдіктер көп, сондықтан қарнын ашпайды."
      Overworld Powered Minecart_instruction: "Керемет жұмыс! Сіз көп ресурс жинадыңыз
        және  қарапайым \nүй құрдыңыз. Енді карта шетінен өз үйіңіздің табалдырығына\nдейін
        рельс жүргізіңіз.\n"
      Overworld Shear Sheep_instruction: Қойларды қырқу уақыты! "Қырқу" бұйрығымен
        екі қойдың жүнін жинап ал.
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: |-
        Here's your Big Game as you last left it.
        Try clicking the Remix button to spin off a new remix of your project.\r
        \r
        Any
        changes you make after you click Remix will be saved on your new remix and
        not on your main Big Game.
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. \n"
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. \n"
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: |
        Функциялармен жаңа блоктар құрастыруға болады!
        Біз шаршылар салу блоктарын "шаршы салу" функциясына енгіздік.
        "Шаршы салу" функциясын қолданып көзілдірік сала аласыз ба? Шаршы қабырғасы 75 пиксель.
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" \n"
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      PS Log test - Define and use turnAround_instruction: |
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      Quantum Bee - Ryan_instruction: |
        These clouds are bugging me! Some of the clouds
        have flowers inside, and some don't. I should check each cloud, and only
        get nectar from the flowers.
      Quantum Bee_instruction: |
        Purple flowers may have either 1 or 0 nectar, but
        you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      Ryan - 4-5 Bee Conditionals 2_instruction: "Араға шәрін керек. Мұндағы барлық
        объектілер гүл емес, сондықтан әр бұлтты тексер. Егер гүлді тапсан, одан шәрін
        жина."
      Ryan - Bee Conditionals_instruction: "Араға шәрін керек. Мұндағы барлық объектілер
        гүл емес, сондықтан әр бұлтты тексер. Егер гүлді тапсан, одан шәрін жина."
      Ryan Doily Step 1_instruction: |
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: Міне "күзет" деген функция. Мысық 400 пиксель
        жоғары және 400 пиксель төмен жүргендей етіп осы функцияны енгіз.
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\\r\n\\r\nUse
        an \"if\" statement to program your game to call the \"level_up\"\nfunction
        only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample:
        \"player_score\" > 6\\r\n\\r\nPlay the game, and make it past level\n4 to
        move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: "Емен жаңғағы! Оған жетуіме «Егер» блогы жәрдемшің болады,
        мүмкіндігіңше аз блоктарды ретке қой."
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: "Ал енді, жаттығу ретінде қайтадан жасайық! Барлығы бұрынгыдай,
        бірақ қабырғалардан сақ бол!"
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: "«Егер..., онда… - әйтпесе....» блогы шартты тексереді,
        содан кейін бірінші немесе екінші әрекетті орындайды. Осы жаңа блогын қолданып,
        мені жаңғағыма жеткізгейсің."
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: "«Егер..., онда… - әйтпесе....» блогына арналған тағы
        бір сұрақ. Бірінші талпыныстан-ақ істей аласың ба?"
      scrat 20_instruction: "Тек 3 блокты біріктіріп, мені күрделі шытырманнан өткіз.
        Дұрыс шешімін тапсаң, мен кез келген бұралаң жолдан ұзындығына қарамастан
        өте аламын. Асық бол! Мұз еріп жатыр!"
      SpecialFrozenLevel_instruction: "Сіз ресми шебер суретші болдыңыз! Қысқы керемет
        жасаңыз."
      Standalone_Artist_1_instruction: "Суретшіге қош келдіңіз! Ең алдымен оғңа бұрылу
        және алдыға жүру блоктарының көмегімен қарапайым шаршыны құрайық. Әр бір бетінің
        ұзындығы 100 пиксел болуы қажет."
      Standalone_Artist_2_instruction: "Қабырғасының ұзындығы 150 пиксель және бұрыштары
        120 және 60 градусс болатын осы гауһар тасты сал."
      Standalone_Artist_3_instruction: "Қабырғасы 100 пиксель және бұрылысы 60 градусс
        болатын алтыбұрыш сала аласын ба?"
      Standalone_Artist_4_instruction: "Енді сізде циклдармен ойнау үшін жаңа блок
        бар. \nОл командалар жиынын қайталап отырады. Егерде сіз осы командаларды\n
        6 рет қайталасаңыз не болады? \n"
      Standalone_Artist_5.5_instruction: "Біз циклдың көмегімен ромбты салу кодын
        қалай жеңілдеткенімізге \nназар аударыңыз.  Енді гүлдің суретін салу үшін
        циклды 12 рет қолдансақ болады. \nНұсқаулық: бір жерден бірнеше сурет салмас
        үшін ромбтың суретін салып болған \nсайын  30 градусқа бұрып отыру қажет.\n"
      Standalone_Artist_5_instruction: "Осы гүлді салу үшін гауһар тасты неше рет
        циклдан өткізу керек?"
      Standalone_Artist_6_instruction: "Суретті салу үшін бұл алтыбұрышты 6 рет циклдан
        өткіз. Әр дәйім неше бұрышқа бұрылу керек? Кеңес: Толық шеңбер градуссын циклды
        қанша рет өткізетін санға бөл."
      Standalone_Artist_7_instruction: "Функция өздігінен қайталаудың алдын алуға
        мүмкіндік беретін \nбағдарламалаудың тағы бір сайманы. Бұл функция гүлдің
        суретін салады, және де\n сіз оны кез келген уақыт мезетінде гүлді салу үшін
        қолдана аласыз. Осы гүлдердің \nсуретін салу үшін көрсетілген функцияны және
        секіріс блогын қолданыңыз. \nНұсқаулық: гүлдердің арасы 150 пиксел болады.\n"
      Standalone_Artist_8_instruction: "Мұнда біз алтыбұрыштарды салу үшін бағдарламаған
        \"Фигураны салу\" деп аталатын \nфункция көрсетілген. Оның не істейтіндігін
        көру және онымен тәжірибе жүргізу үшін\n кодты орындаңыз. Сіз бұл жұмысты
        \ шаршы, үшбұрыш немесе сегізбұрыш салатындай \nқылып жасай аласыз ба?\n"
      Standalone_Artist_9_instruction: "Енді кез келген сурет салыңыз! Сіздің тіпті
        бос функцияңыз бар, ол қалағаныңызды жасай алады!"
      Standalone_Artist_v2_instruction: "Суретшіге қош келдіңіз! Ең алдымен оғңа бұрылу
        және алдыға жүру блоктарының көмегімен қарапайым шаршыны құрайық. Әр бір бетінің
        ұзындығы 100 пиксел болуы қажет."
      template test_instruction: what's up
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi hi
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know\nhow
        many shovelfuls of dirt this hole needs.  \\r\nCan you write a program\nthat
        keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows
        you to use Internet Simulator to relay a message. See the worksheet\nfor more
        detailed instructions.  \n"
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: "Нұсқаулар"
      U2 frequency random sub_instruction: "Нұсқаулар"
      U2 vigenere cipher_instruction: "Нұсқаулар"
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: |-
        Develop a Protocol
        for Reliably Sending a Message.\r
        \r
        Constraints:\r
        - Packets may contain
        only 6 characters\r
        - Packets may drop with small probability\r
        - Packets
        may not arrive in order
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: |
        Now use the Internet Simulator to send the
        battleship moves. For setup, join a Room with your group, and add ships to
        your paper board for each opponent. When playing, all communication must be
        done through the tool, so no talking, but have fun!\r
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: |-
        For this activity, connect to a
        router with the others in your group. Important note: The router will only
        properly route messages where the first 4 bits are the To: address and the
        second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      U2L5 NetSim Classroom Internet_instruction: |
        For this activity, connect to
        a router with the others in your group. The Internet Simulator now provides
        a place for you to put the To and From addresses, so you don't have to type
        out the bits manually.\r
        \r
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: |
        Add an else statement so that the program
        will tell the user when they are right and when they are wrong. (Click to
        see full instructions)\r
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.5_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.6_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1_instruction: |
        Console.log the records returned by a call
        to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table.(Click to see full instructions)\r
      U3 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U3 - Read Record - 4.1_instruction: |
        Print out each record return from the
        readRecords call individually. (Click to see full instructions)\r
      U3 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U3 - Read Record - 5 and half_instruction: |
        Print out the name of each movie
        in the records return from the readRecords call. (Click to see full instructions)\r
      U3 - Read Record - 5_instruction: |
        Print out the name of each movie in the
        records return from the readRecords call. (Click to see full instructions)\r
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: |
        Create an array of all the movies made
        in 2008 and print it out. (Click to see full instructions)\r
      U3 - Search Terms - 2_instruction: |
        Print out all the movies with year 2008
        using the readRecords search terms. (Click to see full instructions)\r
      U3 - Search Terms - 3_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 4_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 5_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Search Terms - 6_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: |
        Add functionality that counts how many heads
        in a row are flipped. (Click to see full instructions)\r
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: Clicker game - Try it out!
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3 Variables consolelog_instruction: |
        Use the write block to display the value
        of size
      U3 Variables misconceptions try it_instruction: |
        Test out your predictions
        from the previous level.
      U3 Variables write_instruction: |
        Use the write block to display the value of
        size
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().\r
        (Click
        to see full instructions)
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: "Read the documentation for the \"arcLeft\"\nand
        \"arcRight\" commands and then draw the squiggles as shown. \n"
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. \n"
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: |-
        The last problem was an example
        of syntax error.  App Lab did not understand which object it should be listening
        to for a "click" event so it showed an error message in the console to let
        you know.  Another kind of error is a logical error - the program is valid,
        but it's not doing what you want it to do.\r
        \r
        This program has 2 errors.
        A (tricky) syntax error and logical error.  Find them, fix them, and make
        the program work as expected.
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer.
        \n"
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. \n"
      U3L16 - intro getText_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text when\nthe
        Play Again button is clicked (Click to see full instructions) \n"
      U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      U3L16 Mad Lib getText_instruction: "Before setting the text area with your\nMad
        Libs outline, get the user's text and incorporate their responses. (Click\nto
        see full instructions) \n"
      U3L16 Mad Lib setText_instruction: "When the Next button is clicked, set the\ntext
        area to have the main outline of your How-to Mad Libs (without the user's\ninput).
        (Click to see full instructions) \n"
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase string\nfunctions
        to the user's text. (Click to see full instructions) \n"
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: |
        We've given you a piece
        of code from the previous screen.  Try changing the value assigned to foo
        to see the string change. \r
        Do this: \r
        1. Try changing the value assigned
        to foo to see the string change. \r
        2. By only modifying the lines of code
        that were given to you, try to get the output to say: “The value of foo is:
        9.  And isn’t that fine.” \r
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: |-
        Try out console.log.  Do this: replace
        the statement write("foo is: " + foo) with console.log("foo is: " + foo).  Run
        the program and you should see the output show up in the console area below
        the workspace.  Then try adding a few more console.log statements.  Display
        some text.  Make another variable and display that.  \r
        The app screen will
        be blank -- that's the point.  With console.log you can test output behind
        the scenes in a way the user cannot see.  \r
        \r
        \r
        GIF: U3L19-useconsolelog.gif
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside
        the if statements to check for a ? in the input. \n"
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: |
        Fill in the function, findBeginNder()
        to get the strings "begin" and "nder" from a sentence no matter where
        in the sentence they exist.\r
        Print the strings and their index to the console.
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: "Write a conditional statement that detects\nif
        a command does not contain the phrase \"bad.\" If \"bad\" is not detected,\nmake
        Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry,\nI
        don't know about bad movies.\" \n"
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: |
        Place a console.log command below the
        readRecords command. (Click to see full instructions)\r
      U4 - Read Record - 1.3_instruction: |
        Add a console.log command inside the callback
        function. (Click to see full instructions)\r
      U4 - Read Record - 1_instruction: |
        Use console.log to display the records returned
        by a call to readRecords. (Click to see full instructions)\r
      U4 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table. (Click to see full instructions)\r
      U4 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U4 - Read Record - 4.1_instruction: |
        Use indexes and dot notation to reference
        values in the response from the database. (Click to see full instructions)\r
      U4 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U4 - Read Record - 5_instruction: |
        Using a for loop, display the title of each
        movie in your database. (Click to see full instructions)\r
      U4 - Read Record - part 1 - template_instruction: |
        Use console.log to display
        the records returned by a call to readRecords. (Click to see full instructions)\r
      U4 - ReadRecords - Contacts App 1_instruction: |
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4L02 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: "Үлгі"
      U4L06 Data Storage 1_instruction: |
        Fill in your name instead of "Enter Your
        Name", run the app and click the button. Run it multiple times with different
        names! Watch the console and use the ‘View Data” button to see how the table
        is updated. As you play around make sure you can explain the purpose of each
        of the circled parts of the diagram.\r
        \r
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none
        we started. Add a text label to collect the users name and use that as\nthe
        data input for the record.\\r\n\\r\nRun the app and click the button multiple\ntimes
        and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: "Add a couple radio buttons or checkboxes\nto
        our app. Then find a way to collect the data from those. \n"
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId()\nblocks
        to collect additional data. \n"
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: |-
        Student should create a sentence which puts
        together all the pieces from a record.\r
        \r
        <<Name>> is <<Age>> years old
        and like <<Food>>
      U4L15 Read Data 3_instruction: |
        Print the sentence using the first JSON object
        in the array\r
        \r
      U4L15 Read Data 4_instruction: |-
        \r
        Use a random record from the list of records
        to display your sentence.
      U6 - Final Project - Project Level_instruction: |
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: "Сіз алдыға қарай жүру үшін жабуыңыз
        қажет кейбір блоктарда\n лава болуы мүмкін. Бұл жерде \"егер\" командасы қажет
        болады.\n Бұл блоктарды қосу үшін \"Алдыға жүру\" блогын дұрыс  \nорналастырыңыз.\n"
      Underground If Statements_instruction: |
        Енді тапсырмалар қиынырақ болады. Лаваға түспей 3 қызыл тасты
        алыңыз. Сіз бетін жапқыңыз келген кез келген лаваға үлкен тасты орнату
        үшін "егер" командасын қолданыңыз.
      Underground Iron_instruction: |
        Балқыған лава үстінде серуендеу жаман ой. Көпір соғу үшін үлкен
        тасты орнатыңыз да, кейіннен кем дегенде екі темір блок орнатыңыз.
      Underground Mine in a Circle_instruction: "5 алмаз және 7 қызыл тасты алудың
        амалын табыңыз! Шаршының ішінде\nжүру үшін қайталау командасының ішінде басқа
        қайталау командасын \nқолданып көріңіз.\n"
      Underground Mining Coal_instruction: "Сіз ең қымбат ресурстарды жердің астынан
        таба аласыз, \nбірақ онда қараңғы болуы мүмкін. Кем дегенде 2 шырақ және \n2
        көмір орналастырыңыз.\n"
      Underground Test Level_instruction: "Барлық минералдарды жинап ал!"
      Vigenere_instruction: Test
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
