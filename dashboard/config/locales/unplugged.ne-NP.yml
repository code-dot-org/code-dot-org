---
ne:
  data:
    unplugged:
      BigEvent:
        desc: Students are introduced to the programming concept of "events," which
          are actions that a computer constantly monitors for. The teacher will press
          buttons on a paper remote and students will react depending on which button
          is pressed.
        title: The Big Event
      BigEvent_2018:
        desc: Students are introduced to the programming concept of "events," which
          are actions that a computer constantly monitors for. The teacher will press
          buttons on a paper remote and students will react depending on which button
          is pressed.
        title: The Big Event
      BigEvent_2019:
        desc: Students are introduced to the programming concept of "events," which
          are actions that a computer constantly monitors for. The teacher will press
          buttons on a paper remote and students will react depending on which button
          is pressed.
        title: The Big Event
      BinaryBracelets:
        desc: Students create bracelets as a binary representations of the first letter
          of their name. Students learn that data can be represented and stored in
          more than one way.
        title: Binary Bracelets
      BinaryBracelets_2018:
        desc: Students create bracelets as a binary representations of the first letter
          of their name. Students learn that data can be represented and stored in
          more than one way.
        title: Binary Bracelets
      BinaryBracelets_2019:
        desc: Students create bracelets as a binary representations of the first letter
          of their name. Students learn that data can be represented and stored in
          more than one way.
        title: Binary Bracelets
      BinaryImages:
        desc: Though many people think of binary as strictly zeros and ones, our previous
          courses taught students that information can be represented in a variety
          of binary options.  This lesson takes that concept one step further as it
          illustrates how a computer can store even more complex information (such
          as images and colors) in binary, as well.
        title: Binary Images
      BinaryImages_2018:
        desc: Though many people think of binary as strictly zeros and ones, our previous
          courses taught students that information can be represented in a variety
          of binary options.  This lesson takes that concept one step further as it
          illustrates how a computer can store even more complex information (such
          as images and colors) in binary, as well.
        title: Binary Images
      BinaryImages_2019:
        desc: Though many people think of binary as strictly zeros and ones, our previous
          courses taught students that information can be represented in a variety
          of binary options.  This lesson takes that concept one step further as it
          illustrates how a computer can store even more complex information (such
          as images and colors) in binary, as well.
        title: Binary Images
      Booleans:
        desc: Booleans are the fourth and final data type that you will learn about
          in this course. In this activity you will learn about what Booleans are,
          and how they can help us write functions that think logically
        title: Booleans and Logic
      BuildingAFoundation:
        desc: Students build a structure using only provided supplies. Structures
          must complete a task (reach a certain height or bear a certain weight),
          and students discuss the idea of being persistent when things get complicated.
        title: Building a Foundation
      CollisionDetection:
        desc: Determining when objects on the screen touch is an important aspect
          of most games. In this lesson we'll look at how the Pythagorean Theorem
          and the Distance Formula can be used to measure the distance between two
          points on the plane, and then decide whether those two points (or game characters)
          are touching.
        title: Collision Detection and the Pythagorean Theorem
      ComputationalThinking:
        desc: Students use the steps of computational thinking (decompose, pattern
          match, abstract, algorithm) to figure out how to play a game that comes
          with no instructions.
        title: Computational Thinking
      Conditionals:
        desc: To learn about conditional statements, students play a card game and
          create rules like "If I draw a red card, I get a point" and "If I draw a
          black card, you get a point."
        title: Conditionals
      ConditionalsPiecewiseFunctions:
        desc: The parameters we pass to functions cause the outputs to vary based
          on a very rigid pattern. Suppose we want parameters with some values to
          create outputs using one pattern but other values to use a different pattern.
          This is where conditionals are needed...
        title: Conditionals and Piecewise Functions
      Conditionals_2018:
        desc: To learn about conditional statements, students play a card game and
          create rules like "If I draw a red card, I get a point" and "If I draw a
          black card, you get a point."
        title: Conditionals
      Conditionals_2019:
        desc: To learn about conditional statements, students play a card game and
          create rules like "If I draw a red card, I get a point" and "If I draw a
          black card, you get a point."
        title: Conditionals
      Contracts:
        desc: Contracts give us a way to understand and discuss functions. In this
          lesson we'll look at how Contracts can help us make sense of a new programming
          language or function.
        title: Contracts, Domain, and Range
      Crowdsourcing:
        desc: Students use crowdsourcing, a problem-solving technique common in computer
          science, to complete a task together as a classroom more efficiently than
          if a student attempted it alone.
        title: Crowdsourcing
      DesignRecipe:
        desc: In the last stage students wrote some very simple functions - but more
          sophisticated functions demand a more thoughtful approach. The Design Recipe
          is a structured approach to writing functions that includes writing test
          cases to ensure that the function works as expected.
        title: The Design Recipe
      DiceRace:
        desc: This lesson calls out ways we use algorithms in our daily lives. As
          part of that, students will identify and write down the algorithm for a
          dice race game.
        title: 'Real life algorithms: Dice Race'
      DigitalCitizenship:
        desc: Students explore the difference between private information and personal
          information, distinguishing what is safe and unsafe to share online.
        title: Digital Citizenship
      DigitalFootprint:
        desc: Teachers introduce to students the idea that putting information about
          themselves online creates a digital footprint or "trail" that has consequences.
        title: Your Digital Footprint
      DigitalFootprint_2018:
        desc: Teachers introduce to students the idea that putting information about
          themselves online creates a digital footprint or "trail" that has consequences.
        title: Your Digital Footprint
      DigitalFootprint_2019:
        desc: Teachers introduce to students the idea that putting information about
          themselves online creates a digital footprint or "trail" that has consequences.
        title: Your Digital Footprint
      EnvelopeVariables:
        desc: Variables allow for a lot of freedom in computer science.  This lesson
          helps to explain what variables are and how we can use them in many different
          ways. Use this activity before (or in conjunction with) the lesson on abstraction
          to really hit the idea home.
        title: Envelope Variables
      ForLoopFun:
        desc: We know that loops allow us to do things over and over again, but now
          weâ€™re going to learn how to use loops with extra structure built right in.
        title: For Loop Fun
      FunctionalSuncatchers:
        desc: Students create an algorithm with variables and functions (pieces of
          code that you want to use over and over again) to create suncatchers using
          string and beads.
        title: Functional Suncatchers
      GettingLoopy:
        desc: This lesson introduces the programming concept of loops (repeated instructions)
          through a dance activity. Students will learn simple choreography, then
          be instructed to repeat it.
        title: Getting Loopy
      GettingLoopy_2018:
        desc: This lesson introduces the programming concept of loops (repeated instructions)
          through a dance activity. Students will learn simple choreography, then
          be instructed to repeat it.
        title: Getting Loopy
      GettingLoopy_2019:
        desc: This lesson introduces the programming concept of loops (repeated instructions)
          through a dance activity. Students will learn simple choreography, then
          be instructed to repeat it.
        title: Getting Loopy
      GoingPlacesSafely:
        desc: The Internet is a powerful, but sometimes dangerous place. Teachers
          introduce how to stay safe while navigating the Internet.
        title: Going Places Safely
      GoingPlacesSafely_2018:
        desc: The Internet is a powerful, but sometimes dangerous place. Teachers
          introduce how to stay safe while navigating the Internet.
        title: Going Places Safely
      GoingPlacesSafely_2019:
        desc: The Internet is a powerful, but sometimes dangerous place. Teachers
          introduce how to stay safe while navigating the Internet.
        title: Going Places Safely
      GraphPaperProgramming:
        desc: Students write an algorithm (a set of instructions) using a set of predefined
          commands to direct their classmates to reproduce a drawing.
        title: Graph Paper Programming
      GraphPaperProgramming_2018:
        desc: Students write an algorithm (a set of instructions) using a set of predefined
          commands to direct their classmates to reproduce a drawing.
        title: Graph Paper Programming
      GraphPaperProgramming_2019:
        desc: Students write an algorithm (a set of instructions) using a set of predefined
          commands to direct their classmates to reproduce a drawing.
        title: Graph Paper Programming
      Internet:
        desc: Students send messages representing various Internet transmission methods
          using pieces of paper.
        title: Internet
      MadGlibs:
        desc: Abstraction is one of the most important skills for a computer scientist
          to understand.  This activity will have your students analyzing stories
          for differences so that they can abstract them away. Those abstracted stories
          become templates for fun and crazy new ones.
        title: Mad Glibs
      MoveIt:
        desc: Students create simple algorithms (sets of instructions) to move a character
          through a maze using a single command.
        title: Move it, Move it
      MoveItMoveIt_2018:
        title: Move It, Move It
      MoveItMoveIt_2019:
        title: Move It, Move It
      PaperPlanes:
        desc: This lesson calls out ways we use algorithms in our daily lives, specifically
          making paper airplanes. This lesson also focuses on the bigger picture of
          computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Paper Planes'
      PaperPlanes_2018:
        desc: This lesson calls out ways we use algorithms in our daily lives, specifically
          making paper airplanes. This lesson also focuses on the bigger picture of
          computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Paper Planes'
      PaperPlanes_2019:
        desc: This lesson calls out ways we use algorithms in our daily lives, specifically
          making paper airplanes. This lesson also focuses on the bigger picture of
          computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Paper Planes'
      PlantASeed:
        desc: This lesson calls out ways we use algorithms in our daily lives, using
          the act of planting a seed as an example. It also focuses on the bigger
          picture of computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Plant a Seed'
      PlantASeed_2018:
        desc: This lesson calls out ways we use algorithms in our daily lives, using
          the act of planting a seed as an example. It also focuses on the bigger
          picture of computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Plant a Seed'
      PlantASeed_2019:
        desc: This lesson calls out ways we use algorithms in our daily lives, using
          the act of planting a seed as an example. It also focuses on the bigger
          picture of computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Plant a Seed'
      RelayProgramming:
        desc: Students run a relay race, where they dash across the yard to write
          an algorithm based on a "Graph Paper Programming" image. They can only write
          one instruction at a time and if there's an error somewhere, they have to
          erase everything back to that point.
        title: Relay programming
      RelayProgramming_2018:
        title: Relay programming
      RelayProgramming_2018_2019:
        title: Relay programming
      SongwritingParameters:
        desc: Students use the concept of the chorus in a song to learn about defining
          and calling functions.
        title: Songwriting
      SongwritingWithParameters:
        desc: 'One of the most magnificent structures in the computer science world
          is the function.  Functions (sometimes called procedures) are mini programs
          that you can use over and over inside of your bigger program. This lesson
          will help students intuitively understand why combining chunks of code into
          functions is such a helpful practice.  '
        title: Songwriting With Parameters
      TangramAlgorithms:
        desc: This lesson shows us something important about algorithms. If you keep
          an algorithm simple there are lots of ways to use it. If you want to make
          sure everyone ends up with the same thing, then your algorithm needs more
          detail.
        title: Tangram Algorithms
      Unplug1:
        desc: This lesson will introduce the concept of Computer Science and explain
          what a Computer Scientist does.  It will also give students an opportunity
          to assume the role of a computer scientist.  By the end of the activity,
          each student will have a take-home reminder of what he or she learned.  You
          may be tempted to skip teaching young children the vocabulary words that
          are associated with the lessons that follow, but presenting them in a fun
          and playful light now is far more productive than waiting for more advanced
          opportunities.
        title: Introduction to Computer Science
      Unplug10:
        desc: In this lesson, students will pretend to flow through the Internet,
          all the while learning about web addresses, IPs and the DNS.
        title: The Internet
      Unplug11:
        desc: The final wrap-up in the first 20-hour series will help the class relive
          all of their favorite moments, while giving them next steps that they can
          take on their own if they are interested in continuing their computer science
          journey.
        title: Wrap-Up
      Unplug2:
        desc: With nothing but paper and markers, students will learn the four steps
          of computational thinking. After a brief introduction, students should be
          split into groups where they will have to create directions for other students
          to draw a specific monster (from a catalog of pre-selected monsters). The
          entire task must be decomposed, then teams will analyze all monsters in
          the catalog for patterns, abstract different details from the monsters,
          then use that information to create an algorithm (directions) for another
          team to draw a certain monster. Teams will then switch algorithms with another
          group and draw the monster based on what that algorithm indicates. Is the
          drawing what the original team intended?
        title: Computational Thinking
      Unplug3:
        desc: By programming one another to draw pictures, students will begin to
          understand what programming is really about. The class will begin by students
          instructing each other to color squares on graph paper in an effort to reproduce
          an existing picture.  If there's time, the lesson can conclude with images
          that the students create themselves.
        title: Graph Paper Programming
      Unplug4:
        desc: This lesson covers algorithms.  Using tangram shapes and graph paper,
          the first exercise will show how important it is to make each instruction
          as clear and unambiguous as possible.  Afterward, the class will explore
          how many ways you can fold paper into a rectangle, noting how some methods
          can take more or fewer folds than others.
        title: Algorithms
      Unplug5:
        desc: In this lesson, students will make a suncatcher out of string, beads,
          and a special charm. The students will follow a series of repetitive steps,
          then be asked to identify certain sets of "skills" that are duplicated several
          times. Once those skills are defined, they will be called from a main program
          and the whole beautiful process of creation will be recorded on a single
          sheet of paper. The final program will be geared toward the entire class,
          whatever their type of string, beads, and charms. To effectively allow for
          this, students will need to "abstract out" the details of their specific
          materials and create vague terms for an individual's supplies.  This use
          of generic placeholders is a wonderful introduction to variables.
        title: Functions
      Unplug6:
        desc: This is a class game.  After introducing the idea of conditionals, if-statements,
          and loops, the class can practice together using a pre-written program,
          a deck of cards, and luck of the draw.
        title: Conditions
      Unplug7:
        desc: Reading lyrics is a pretty intuitive venture for most students.  We'll
          take an activity that's already common knowledge and shift it into a solid
          education on defining and calling functions. Once students are familiar
          with the define/call process, we will add the extra capabilities that come
          along with passing parameters within those function calls.
        title: Song Writing
      Unplug8:
        desc: This activity combines your students' everyday routine and a Mad-Lib
          style thinking game to help your class learn about the effectiveness of
          abstraction.
        title: Abstraction
      Unplug9:
        desc: This lesson will take an idea from a previous activity (4. Graph Paper
          Programming) and use those skills to emphasize the importance of completing
          programs that operate in sequence and frequently checking programs for "bugs".
        title: Relay programming
      UnplugHappyMaps:
        desc: Students create simple algorithms (sets of instructions) to move a character
          through a maze using a single command.
        title: Happy Maps
      UnplugHappyMaps_2018:
        desc: Students create simple algorithms (sets of instructions) to move a character
          through a maze using a single command.
        title: Happy Maps
      UnplugHappyMaps_2019:
        desc: Students create simple algorithms (sets of instructions) to move a character
          through a maze using a single command.
        title: Happy Maps
      VideoGamesCoordinatePlanes:
        desc: Discover how the video games you love to play are actually driven by
          algebra! Explore how algebraic expressions and the coordinate plane can
          help us understand how video games work, and then start planning for the
          video game that you will create.
        title: Video Games and Coordinate Planes
      courseABC_unplugged_bigEvent:
        desc: Students are introduced to the programming concept of "events," which
          are actions that a computer constantly monitors for. The teacher will press
          buttons on a paper remote and students will react depending on which button
          is pressed.
        title: The Big Event
      courseAB_unplugged_plantASeed:
        desc: This lesson calls out ways we use algorithms in our daily lives, using
          the act of planting a seed as an example. It also focuses on the bigger
          picture of computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Plant a Seed'
      courseA_unplugged_goingPlacesSafely:
        desc: The Internet is a powerful, but sometimes dangerous place. Teachers
          introduce how to stay safe while navigating the Internet.
        title: Going Places Safely
      courseA_unplugged_happyMaps:
        desc: Students create simple algorithms (sets of instructions) to move a character
          through a maze using a single command.
        title: Happy Maps
      courseB_unplugged_MRF:
        title: Unplugged Activity
      courseB_unplugged_MRF_2018:
        title: My Robotic Friends
      courseB_unplugged_MRF_2019:
        title: My Robotic Friends
      courseB_unplugged_digitalFootprint:
        desc: Teachers introduce to students the idea that putting information about
          themselves online creates a digital footprint or "trail" that has consequences.
        title: Your Digital Footprint
      courseB_unplugged_loopyMRF:
        title: Unplugged Activity
      courseC_Unplugged_ScreenOutTheMean:
        title: Unplugged Activity
      courseC_Unplugged_ScreenOutTheMean_2018:
        title: Unplugged Activity
      courseC_Unplugged_ScreenOutTheMean_2019:
        title: Unplugged Activity
      courseC_unplugged_binaryBracelets:
        desc: Students create bracelets as a binary representations of the first letter
          of their name. Students learn that data can be represented and stored in
          more than one way.
        title: Binary Bracelets
      courseC_unplugged_buildingAFoundation:
        desc: Students build a structure using only provided supplies. Structures
          must complete a task (reach a certain height or bear a certain weight),
          and students discuss the idea of being persistent when things get complicated.
        title: Building a Foundation
      courseC_unplugged_gettingLoopy:
        desc: This lesson introduces the programming concept of loops (repeated instructions)
          through a dance activity. Students will learn simple choreography, then
          be instructed to repeat it.
        title: Getting Loopy
      courseC_unplugged_paperPlanes:
        desc: This lesson calls out ways we use algorithms in our daily lives, specifically
          making paper airplanes. This lesson also focuses on the bigger picture of
          computer science and how algorithms play an essential part.
        title: 'Real-life Algorithms: Paper Planes'
      courseD_unplugged_binaryImages:
        desc: Though many people think of binary as strictly zeros and ones, our previous
          courses taught students that information can be represented in a variety
          of binary options.  This lesson takes that concept one step further as it
          illustrates how a computer can store even more complex information (such
          as images and colors) in binary, as well.
        title: Binary Images
      courseD_unplugged_conditionalsCards:
        desc: To learn about conditional statements, students play a card game and
          create rules like "If I draw a red card, I get a point" and "If I draw a
          black card, you get a point."
        title: Conditionals with Cards
      courseD_unplugged_digitalCitizenship:
        title: Unplugged Activity
      courseD_unplugged_digitalCitizenship_2018:
        title: Unplugged Activity
      courseD_unplugged_digitalCitizenship_2019:
        title: Unplugged Activity
      courseD_unplugged_graphPaperProgramming:
        desc: Students write an algorithm (a set of instructions) using a set of predefined
          commands to direct their classmates to reproduce a drawing.
        title: Graph Paper Programming
      courseD_unplugged_relayProgramming:
        desc: Students run a relay race, where they dash across the yard to write
          an algorithm based on a "Graph Paper Programming" image. They can only write
          one instruction at a time and if there's an error somewhere, they have to
          erase everything back to that point.
        title: Relay programming
      courseE_unplugged_crowdsourcing:
        desc: Students use crowdsourcing, a problem-solving technique common in computer
          science, to complete a task together as a classroom more efficiently than
          if a student attempted it alone.
        title: Crowdsourcing
      courseE_unplugged_diceRace:
        desc: This lesson calls out ways we use algorithms in our daily lives. As
          part of that, students will identify and write down the algorithm for a
          dice race game.
      courseE_unplugged_internet:
        desc: Students send messages representing various Internet transmission methods
          using pieces of paper.
        title: Internet
      courseE_unplugged_songwriting:
        desc: Students use the concept of the chorus in a song to learn about defining
          and calling functions.
        title: Songwriting
      courseE_unplugged_songwritingParameters:
        desc: Students use the concept of the chorus in a song to learn about defining
          and calling functions.
        title: Songwriting with Parameters
      courseF_unplugged_envelopeVariables:
        desc: Variables allow for a lot of freedom in computer science.  This lesson
          helps to explain what variables are and how we can use them in many different
          ways. Use this activity before (or in conjunction with) the lesson on abstraction
          to really hit the idea home.
        title: Envelope Variables
      courseF_unplugged_forLoopFun:
        desc: We know that loops allow us to do things over and over again, but now
          weâ€™re going to learn how to use loops with extra structure built right in.
        title: For Loop Fun
      courseF_unplugged_powerOfWords:
        title: Unplugged Activity
      courseF_unplugged_songwritingParameters:
        desc: 'One of the most magnificent structures in the computer science world
          is the function.  Functions (sometimes called procedures) are mini programs
          that you can use over and over inside of your bigger program. This lesson
          will help students intuitively understand why combining chunks of code into
          functions is such a helpful practice.  '
        title: Songwriting With Parameters
      courseF_unplugged_tangrams:
        desc: This lesson shows us something important about algorithms. If you keep
          an algorithm simple there are lots of ways to use it. If you want to make
          sure everyone ends up with the same thing, then your algorithm needs more
          detail.
        title: Tangram Algorithms
      timeforcs_demo_conditionals:
        desc: To learn about conditional statements, students play a card game and
          create rules like "If I draw a red card, I get a point" and "If I draw a
          black card, you get a point."
        title: Conditionals
      timeforcs_demo_crowdsourcing:
        title: Crowdsourcing
