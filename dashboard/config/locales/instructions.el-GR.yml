"el":
  data:
    instructions:
      2-3 Artist 1 new_instruction: "Γεια, είμαι ένας καλλιτέχνης. Μπορείς να γράψεις
        κώδικα για να με βοηθήσεις να ζωγραφίσω σχεδόν τα πάντα. Χρησιμοποίησε μερικά
        μπλοκ για να με βοηθήσεις να ζωγραφίσω πάνω στις γκρι γραμμές στην φωτογραφία.(Κάθε
        γραμμή έχει μήκος 100 εικονοστοιχεία)"
      2-3 Artist 11_instruction: "Κάντε ένα πλαίσιο στο σήμα του στοπ, δημιουργώντας
        ένα οκτάγωνο με 8 πλευρές, που κάθε μία έχει μήκος 100 pixels. Πόσες μοίρες
        πρέπει να στρίψετε; (Βοήθεια: Πόσο κάνει 360 δια 8;) "
      2-3 Artist 12_instruction: Όρισε το μπλοκ "Επανάλαβε φορές" έτσι ώστε να δημιουργηθεί
        ένας "κύκλος" που θα ολοκληρώσει το μάτι. Αν κάθε κίνηση στρίβει δεξιά κατά
        μία μοίρα, πόσες φορές χρειάζεται να το επαναλάβεις για να συμπληρωθεί ο κύκλος;
        180; 360; 500;
      2-3 Artist 2 new_instruction: "Αυτό το σπίτι έχει έναν μισοτελειωμένο τοίχο.
        Κάθε πλευρά είναι 100, αλλά ο μισοτελειωμένος τοίχος είναι μόνο 50. Ολοκληρώστε
        τον τοίχο. "
      2-3 Artist 2_instruction: "This house has a half-finished wall. Each side is\n100,
        but the half-finished wall is only 50. Complete the wall. \n"
      2-3 Artist 3.4_instruction: |
        Το μπλοκ άλματος μετακινεί τον καλλιτέχνη χωρίς να σχεδιάζει.
        Σχεδίασε την διακεκομμένη γραμμή χρησιμοποιώντας και τα μπλοκ άλματος και τα μπλοκ σχεδίασης.
      2-3 Artist 3_instruction: |
        Το καπέλο έχει ύψος 100 εικονοστοιχεία. Σχεδίασε ένα καπέλο το οποίο θα είναι
        70 εικονοστοιχεία λιγότερο.
      2-3 Artist 3new_instruction: |
        Το κόκκινο καπέλο έχει ύψος 100 εικονοστοιχεία. Ολοκλήρωσε τη σχεδίαση
        του μαύρου καπέλου το οποίο είναι 70 εικονοστοιχεία μικρότερο. Το πλάτος του μαύρου καπέλου είναι 50 πίξελς.
      2-3 Artist 4_instruction: "Βοηθήστε με να ολοκληρώσουμε το σπίτι γι' αυτήν τη
        γάτα."
      2-3 Artist 5_instruction: |
        Αντικατέστησε τον κώδικα με ένα "επανάλαβε φορές" μπλοκ
        για να σχεδιάσεις το ίδιο σπίτι χρησιμοποιώντας μόνο 3 μπλοκ.
      2-3 Artist 6_instruction: |
        Αυτό το σπίτι χρειάζεται μία στέγη. Σχεδίασε το τρίγωνο. Υπόδειξη:
        και οι τρεις πλευρές έχουν το ίδιο μήκος.
      2-3 Artist 7_instruction: "Ολοκληρώστε τη σχεδίαση του δεξιού μισού του τελευταίου
        παραθύρου,\nΚάθε τετράγωνο του παραθύρου περιλαμβάνει 25 εικονοστοιχεία. \n"
      2-3 Artist 8_instruction: "Ολοκλήρωσε τα δωμάτια για κάθε ένα από τα ζώα χωρίζοντας
        το ορθογώνιο σε 2 ισομεγεθη τετράγωνα. Το ορθογώνιο είναι 200 pixel σε πλάτος
        και 100 pixel σε ύψος."
      2-3 Artist 9_instruction: "Ολοκληρώστε τον χαρταετό"
      2-3 Artist Assessment 1_instruction: |
        Αξιολόγηση: Ολοκληρώστε τη σχεδίαση του τελευταίου δοντιού,
        25 εικονοστοιχεία πλάτος και 25 εικονοστοιχεία ύψος.
      2-3 Artist Debugging 1_instruction: "Μπορείτε να κάνετε αυτό το καπέλο με μέγιστο
        μήκος 100;"
      2-3 Artist Debugging 10_instruction: |
        Η επιφάνεια αφής του χειριστηρίου του παιχνιδιού μου
        είναι πολύ στενή. Υπόδειξη: Κάντε την φαρδύτερη κατά 10 εικονοστοιχεία
      2-3 Artist Debugging 11_instruction: Βοήθησέ με να τελειώσω την όμορφη νιφάδα
        χιονιού μου. Πόσες φορές πρέπει να το "επαναλάβω" για να το τελειώσω;
      2-3 Artist Debugging 12_instruction: "Υποτίθεται οτι πρέπει να προσθέσω ενα
        κύμα του ωκεανού σε αυτή τη σκηνή. Μπορείς να με βοηθήσεις?"
      2-3 Artist Debugging 2_instruction: "Ο κώδικας για τις τρεις γενειάδες που βλέπετε
        είναι λάθος. Υπόδειξη: η κάθε γενειάδα έχει 75 εικονοστοιχεία μάκρος. Διορθώστε
        αυτόν τον κώδικα να σχεδιάσετε τις γενειάδες."
      2-3 Artist Debugging 3_instruction: "Η βάρκα μου έχει μία τρύπα. Μπορείς να
        την φτιάξεις αλλάζοντας την γωνία της γραμμής?  Υπόδειξη: η τελευταία γωνία
        ήταν εκτός κατά 15 μοίρες."
      2-3 Artist Debugging 4_instruction: "Ποιά είναι η εικόνα που προσπαθούμε να
        σχεδιάσουμε? Ολοκλήρωσε την σύνδεση των τελειών χρησιμοποιώντας τις κατάλληλες
        γραμμές και γωνίες."
      2-3 Artist Debugging 5_instruction: "Ο κώδικας για το μακρύ μέρος και το άκρο
        του ποδιού που βλέπετε είναι λάθος. Υπόδειξη: Το άκρο του ποδιού είναι πολύ
        μακρύ, ίσως χρειαστεί να διαγράψετε ένα βήμα (λόγου χάριν)"
      2-3 Artist Debugging 6_instruction: "Φαίνεται οτι κάθομαι σε μια καρέκλα που
        της λείπει ένα πόδι. Επεξεργάσου τα κουτιά για να σχεδιάσεις ένα πόδι."
      2-3 Artist Debugging 7_instruction: "Φαίνεται πως το C στον κώδικα είναι ζωγραφισμένο
        ανάποδα. Μπορείτε να το κάνετε να μοιάζει με C;"
      2-3 Artist Debugging 8_instruction: "Ο ανεμόμυλός μου δεν έχει τελειώσει. Πόσες
        επαναλήψεις πρέπει να κάνω για να τον τελειώσω;"
      2-3 Artist Debugging 9_instruction: "Ο κωδικός για αυτό το στέλεχος είναι εσφαλμένος.
        Υπόδειξη: Η γωνία είναι εκτός κατά 60 μοίρες"
      2-3 Artist Debugging Assessment 1_instruction: "Αυτό το σχήμα είναι πολύ μικρό.
        Μπορείς να το μεγαλόσεις; Υπόδειξη: θα πρέπει να είναι 75 εικονοστοιχεία μακρύτερο
        σε κάθε πλευρα."
      2-3 Artist Free Play_instruction: "Ελεύθερο παιχνίδι. Σχεδιάστε ότι θέλετε."
      2-3 Artist Functions 1_instruction: "Γεια σου. Εγώ καλλιτέχνης ζόμπι. Εμένα
        αρέσει σχεδιάζω! Βοήθησέ με να σχεδιάσω τα τετράγωνα γυαλιά.  Υπόδειξη: η
        γέφυρα μεταξύ των φακών είναι 25 εικονοστοιχεία μικρότερη από το μήκος του
        τετραγώνου."
      2-3 Artist Functions 10_instruction: "Εδώ είναι δύο συναρτήσεις, μία που σχεδιάζει
        ένα μεγάλο γρανάζι και μία που σχεδιάζει ένα μικρό γρανάζι. Χρησιμοποιήστε
        τες για να σχεδιάσετε το εσωτερικό μιας μηχανής!"
      2-3 Artist Functions 11.5_instruction: Εδώ είναι ότι η ίδια συνάρτηση "Σχεδιάστε
        ένα εξάγωνο". Τι θα συμβεί αν απλά στρίβετε κατά 60 μοίρες κάθε φορά που μπαίνετε
        στο βρόχο;
      2-3 Artist Functions 11_instruction: Έχουμε μετονομάσει τη συνάρτηση "σχεδιάστε
        ένα τετράγωνο" στη "σχεδιάστε ένα εξάγωνο", αλλά εξακολουθεί να σχεδιάζει
        μόνο τετράγωνα! Μπορείτε να τροποποιήσετε τη συνάρτηση "σχεδιάστε ένα εξάγωνο"
        ώστε να σχεδιάζει ένα εξάγωνο πλευράς 50 εικονοστοιχείων, και να σχεδιάσετε
        την εικόνα χρησιμοποιώντας τη συνάρτηση;
      2-3 Artist Functions 12_instruction: 'Οι συναρτήσεις είναι πραγματικά εξαιρετικές
        για να σχεδιάζουμε σύνθετα πράγματα πολλές φορές. Μπορείτε να χρησιμοποιήσετε
        τη συνάρτηση "σχεδίασε ένα λουλούδι" για να συμπληρώσετε το υπόλοιπο της γλάστρας;
        (Υπόδειξη: όλα τα φυτά απέχουν μήκος 100 εικονστοιχείων)  '
      2-3 Artist Functions 13_instruction: |
        Σου παρέχουμε τέσσερις συναρτήσεις.
        Χρησιμοποίησέ τις με οποιονδήποτε τρόπο θέλεις μέσα σε έναν ή περισσότερους βρόχους για να δημιουργήσεις εικόνες που μπορείς να μοιραστείς με τους φίλους σου. Πάτησε τρέξε για να δεις ένα παράδειγμα.
      2-3 Artist Functions 2_instruction: Με τις συναρτήσεις μπορείτε να καθορίσετε
        νέα μπλοκ! Έχουμε μετακινήσει τα μπλοκ για να σχεδιάσετε ένα τετράγωνο σε
        μία συνάρτηση που ονομάζεται "Σχεδιάστε ένα τετράγωνο". Μπορείτε να χρησιμοποιήσετε
        την συνάρτηση "Σχεδιάστε ένα τετράγωνο" για να δημιουργήσετε τα γυαλιά; Τα
        τετράγωνα απέχουν 75 εικονοστοιχεία το ένα από το άλλο.
      2-3 Artist Functions 3_instruction: "Επεξεργαστείτε τη συνάρτηση για να σχεδιάστε
        ένα τετράγωνο με μήκος πλευράς 115 και σχεδιάστε τα μεγαλύτερα γυαλιά. Τα
        τετράγωνα απέχουν τώρα 45 εικονοστοιχεία το ένα από το άλλο."
      2-3 Artist Functions 4_instruction: Χρησιμοποίησε το κουτι "Επανάληψη" για να
        σχεδιάσεις αυτά τα 3 τετράγωνα.
      2-3 Artist Functions 7_instruction: 'Χρησιμοποιήστε τη συνάρτηση "Σχεδιάστε
        ένα σπίτι", για να σχεδιάσετε δύο σπίτια, χρησιμοποιώντας δύο διαφορετικές
        παραμέτρους. (Υπόδειξη: το πρώτο σπίτι είναι 100 pixels).'
      2-3 Artist Functions 9_instruction: "Εδώ είναι μια συνάρτηση νιφάδας χιονιού.
        Πειραματιστείτε με αυτή για να δημιουργήσετε ένα χειμωνιάτικο σκηνικό! Αυτό
        είναι ένα επίπεδο ελεύθερου παιχνιδιού, δεν υπάρχει κάποιο παζλ να επιλύσετε.
        Διασκεδάστε!"
      2-3 Artist Loops 1_instruction: "Μπορείτε να κάνετε ένα εξάγωνο με πλευρές που
        είναι 100 pixels σε μήκος ώστε να τελειώσετε το κελί; Θυμηθείτε, αυτό σημαίνει
        ότι χρειάζεται μόνο να στρίψετε 60 μοίρες!"
      2-3 Artist Loops 10_instruction: "Τι συμβαίνει στο σχέδιο όταν κάνουμε το τελευταίο
        βήμα στο μισό μήκος;"
      2-3 Artist Loops 11_instruction: "Τώρα ας θέσουμε *ακόμη ένα * βρόχο γύρω από
        όλο το σχέδιό μας!  Μην ξεχάσεις να προσθέσεις μια γωνία στο τέλος του εξωτερικού
        βρόγχου."
      2-3 Artist Loops 2_instruction: "Τώρα, χρησιμοποιήστε ένα μπλοκ επανάληψης για
        να μετατρέψετε το κελί σε ένα κέλυφος."
      2-3 Artist Loops 4_instruction: "Θέλετε να δείτε τι θα συμβεί όταν επαναλάβουμε
        το σχήμα ξανά και ξανά, χρησιμοποιώντας ένα βρόγχο;"
      2-3 Artist Loops 5_instruction: "Τώρα ας κάνουμε μια μικρή αλλαγή στον βρόχο
        και να δούμε πόσο διαφορετική η εικόνα μας γίνεται."
      2-3 Artist Loops 6_instruction: "Πρόσθεσε άλλη μία κίνηση και άλλη μία στροφή
        στην επανάληψη και δες πως αλλάζει το σχέδιο. "
      2-3 Artist Loops 7_instruction: "Μπορούμε να χρησιμοποιήσουμε επαναλήψεις για
        να κάνουμε οποιοδήποτε πολύγωνο. Μπορείς να δημιουργήσεις έναν ρόμβο μέσα
        σε ένα εξάγωνο;"
      2-3 Artist Loops 8_instruction: "Ας βάλουμε τα δύο στοιχεία σε μία επανάληψη."
      2-3 Artist Loops 9_instruction: "Θα επαναλάβουμε τα ίδια στοιχεία, αλλά τώρα
        θα προσθέσουμε κάποια απόσταση μεταξύ τους. \\r \nΧρρησιμοποιήστε το ίδιο
        κώδικα με προηγουμένως, αλλά προσθέστε ένα βήμα προς τα εμπρός στο τέλος του
        εξωτερικού βρόχου."
      2-3 Artist Loops New 1_instruction: "Ας σχεδιάσουμε το κεφάλι του ρομπότ! Μπορείτε
        να σχεδιάσετε ένα τετράγωνο με πλευρές των 100 εικονοστοιχείων;"
      2-3 Artist Loops New 10_instruction: "Τώρα ας συνδέσουμε πολλά V, βάζοντάς τα
        σε έναν βρόχο."
      2-3 Artist Loops New 11_instruction: "Αυτή τη φορά ας το σχεδιάσουμε 24 φορές.
        Προσθέσετε μια αριστερή στροφή 30 μοιρών σε αυτόν τον κώδικα και να τα βάλουμε
        όλα σε ένα μπλοκ επανάληψης."
      2-3 Artist Loops New 12_instruction: |
        Σχεδιάσετε ένα διαμάντι με πλευρές των 100 εικονοστοιχείων.
      2-3 Artist Loops New 13_instruction: "Τώρα σχεδιάστε το διαμάντι 3 φορές σε
        έναν βρόχο."
      2-3 Artist Loops New 14_instruction: "Τώρα ας σχεδιάσουμε το διαμάντι 10 φορές
        αλλά περιστρέψτε 90 μοίρες μεταξύ κάθε διαμαντιού."
      2-3 Artist Loops New 15_instruction: "Σχεδίασε κάτι αστείο."
      2-3 Artist Loops New 2_instruction: "Εδώ είναι ένα κομμάτι από τον κώδικα που
        χρησιμοποιήσατε για να σχεδιάσετε αυτό το τετράγωνο. Τι θα συμβεί αν χρησιμοποιήσετε
        το μπλοκ επανάληψης για να τρέξετε αυτόν τον κώδικα 4 φορές;"
      2-3 Artist Loops New 9_instruction: "Σχεδιάστε ένα απλό V, του οποίου και οι
        δύο πλευρές είναι 50 εικονοστοιχεία, για να ολοκληρωθεί το βέλος."
      2-3 Artist Match Hex Pic_instruction: "Ενώστε: Βοηθήστε να ολοκληρωθεί το Εξάγωνο."
      2-3 Artist Match Rho Pic_instruction: "Ενώστε: Ολοκληρώστε τον κώδικα που λείπει."
      2-3 Artist Match Sq Pic_instruction: "Ενώστε: Συμπληρώστε τον κώδικα που λείπει"
      2-3 Artist Match Tri pic_instruction: "Ταίριασμα: Συμπληρώστε τον κώδικα που
        λείπει."
      2-3 Artist Nested Loops 1_instruction: "Έχετε χρησιμοποιήσει βρόχους για να
        σχεδιάσετε σχήματα προηγουμένως, αλλά ξέρατε ότι μπορείτε να βάλετε ένα βρόχο
        μέσα σε ένα άλλο βρόχο; \\r \nΕπαναλάβετε όλο αυτό το μπλοκ κώδικα 3 φορές
        για να  σχεδιάσετε το μοτίβο."
      2-3 Artist Nested Loops 10_instruction: "Επαναλάβετε αυτό τον κώδικα 12 φορές
        για να ολοκληρωθεί το μοτίβο."
      2-3 Artist Nested Loops 11_instruction: "Επαναλάβετε αυτόν τον κώδικα 4 φορές
        για να ολοκληρωθεί το μοτίβο, περιστρέψτε 90 μοίρες μετά από κάθε κύκλο."
      2-3 Artist Nested Loops 12_instruction: "Επαναλάβετε αυτό τον κώδικα 12 φορές
        για να ολοκληρώσετε τις ππεριστροφές."
      2-3 Artist Nested Loops 2_instruction: "Τώρα επαναλάβετε το τρίγωνο 6 φορές.
        Μετά από κάθε τρίγωνο, θα χρειαστεί να περιστρέψετε κατά 60 μοίρες προτού
        σχεδιάσετε το επόμενο."
      2-3 Artist Nested Loops 3_instruction: "Θα χρειαστείτε να επαναλάβετε το τρίγωνο
        12 φορές για να σχεδιάσετε το μοτίβο. Διαιρέστε τον αριθμό των μοιρών σε ένα
        κύκλο (360) με τον αριθμό των σχημάτων που σχεδιάζετε (12) για να καταλάβετε
        πόσο να το γυρίσετε μετά από κάθε σχήμα."
      2-3 Artist Nested Loops 4_instruction: "Επαναλάβετε το διαμάντι 12 φορές για
        να σχεδιάσετε ένα λουλούδι. Υπόδειξη: 12 διαμάντια είναι ακριβώς όπως τα 12
        τρίγωνα που κάνατε - πόσο θα πρέπει να γυρίσει μετά από κάθε σχήμα;"
      2-3 Artist Nested Loops 5_instruction: "Συμπληρώστε τα παράθυρα αυτού του κτηρίου
        με ένα ένθετο βρόχο. Τα παράθυρα έχουν μήκος 20 εικονοστοιχεία και απέχουν
        20 εικονοστοιχεία."
      2-3 Artist Nested Loops 6_instruction: "Αυτό το δεινόσαυρος έχει 8 ακίδες στην
        ουρά του. Κάθε ακίδα έχει μήκος 30 εικονοστοιχεία. Επαναλάβετε το τρίγωνο
        8 φορές, αλλά βεβαιωθείτε πως προχωράτε εμπρός μετά από κάθε έναν."
      2-3 Artist Nested Loops 7_instruction: "Επαναλάβετε αυτό το τρίγωνο 10 φορές
        να σχεδιάσετε τον ήλιο. Θα χρειαστεί να μετακινήσετε και να γυρίσετε μετά
        από κάθε τρίγωνο. Μπορείτε να υπολογίσετε πόσο να γυρίσετε διαιρώντας τον
        αριθμό των μοιρών σε ένα κύκλο με τον αριθμό των σχημάτων που το συνθέτουν."
      2-3 Artist Nested Loops 8_instruction: "Τώρα ας προσθέσουμε χλόη στην εικόνα
        μας. Κάθε τούφα της χλόης απέχει 50 εικονοστοιχεία από την άλλη."
      2-3 Artist Nested Loops 9_instruction: "Θα τελειώσουμε αυτήν την εικόνα  προσθέτωντας
        ένα λουλούδι. Επαναλάβετε το διαμάντι 12 φορές για να σχεδιάσετε το λουλούδι."
      2-3 Artist Nested Loops Free Play_instruction: "Ελεύθερο παιχνίδι! Σχεδιάστε
        κάτι όμορφο με ένθετους βρόχους."
      2-3 Bee Conditionals 1_instruction: "Γεια! Είμαι μια μέλισσα. Βοήθησέ με να
        πάρω το νέκταρ από το λουλούδι."
      2-3 Bee Conditionals 10_instruction: |
        Μωβ λουλούδια μπορεί να έχουν είτε 1 ή 0 νέκταρ. Προσέξτε να μην συλλέξετε νέκταρ από ένα μωβ λουλούδι αν δεν έχει καθόλου νέκταρ. \r
      2-3 Bee Conditionals 11_instruction: "Συλλέξτε το νέκταρ από όπου τα λουλούδια
        έχουν νέκταρ."
      2-3 Bee Conditionals 12_instruction: "Χρησιμοποιήσετε βρόγχο για να ελέγξετε
        και να συλλέξετε το νέκταρ από όλα αυτά τα λουλούδια."
      2-3 Bee Conditionals 13_instruction: 'Συλλέξτε το νέκταρ και δημιουργήστε μέλι.
        Υπόδειξη: τι συμβαίνει εάν χρησιμοποιείτε την "αν νέκταρ" συνθήκη σε ένα κόκκινο
        λουλούδι; Μπορείτε να το ολοκληρώσετε αυτό με έναν βρόχο;'
      2-3 Bee Conditionals 14_instruction: "Συλλέξτε το νέκταρ και δημιουργήστε μέλι.
        Προσέξτε να μην συλλέξετε νέκταρ από ένα μωβ λουλούδι, αν δεν έχει καθόλου
        νέκταρ."
      2-3 Bee Conditionals 15_instruction: "Συλλέξτε το νέκταρ από τα τέσσερα λουλούδια."
      2-3 Bee Conditionals 2_instruction: "Γεια σου, είμαι μια μέλισσα! Βοήθησέ με
        να συλλέξω όλο το νέκταρ από τα λουλούδια. Χρησιμοποιήστε έναν βρόχο."
      2-3 Bee Conditionals 3_instruction: "Βοηθήστε με να συλλέξω όλο το νέκταρ από
        τα λουλούδια και να δημιουργήσω μέλι. Χρησιμοποιήστε έναν βρόχο."
      2-3 Bee Conditionals 4_instruction: "Βοηθήστε με να συλλέξω όλο το νέκταρ από
        τα λουλούδια και να δημιουργήσω το μέλι."
      2-3 Bee Conditionals 5_instruction: Τα μωβ λουλούδια μπορεί να έχουν είτε 1
        ή 0 νέκταρ, αλλά δεν γνωρίζετε ποιο από τα δύο! Προσέξτε να μην συλλέξετε
        νέκταρ από ένα μωβ λουλούδι, αν δεν έχει καθόλου. Ελέγξτε αν το νέκταρ είναι
        ίσο με 1 χρησιμοποιώντας το μπλοκ "αν".
      2-3 Bee Conditionals 6_instruction: Ελέγξτε αυτό το λουλούδι με ένα μπλοκ "αν"
        για να δείτε αν υπάρχει διαθέσιμο νέκταρ.
      2-3 Bee Conditionals 7_instruction: "Συλλέξτε νέκταρ από κάθε λουλούδι, αν έχει."
      2-3 Bee Conditionals 8_instruction: "Αυτό το πεδίο έχει κόκκινα και μοβ λουλούδια.
        Τα κόκκινα λουλούδια έχουν ένα γνωστό ποσό νέκταρ, αλλά τα μωβ λουλούδια δεν
        έχουν γνωστή ποσότητα νέκταρ. Συλλέξτε όλο το νέκταρ."
      2-3 Bee Conditionals 9_instruction: "Συλλέξτε όλο το νέκταρ από κάθε λουλούδι."
      2-3 Bee Conditionals Assessment 1_instruction: "Αξιολόγηση: Συλλέξτε όλο το
        νέκταρ. Προσέξτε να μην συλλέξετε νέκταρ από ένα μωβ λουλούδι, αν δεν έχει."
      2-3 Bee Debugging 1_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 10_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 2_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 3_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 4_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 5_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 6_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 7_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 8_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging 9_instruction: "Αυτά τα τμήματα πραγματικά με ενοχλούν. Επιδιορθώσετε
        τα σφάλματα για να συλλέξετε όλα το νέκταρ που κάνει το μέλι."
      2-3 Bee Debugging Assessment 1_instruction: "Αξιολόγηση: Αυτά τα τμήματα πραγματικά
        με ενοχλούν. Επιδιορθώσετε τα σφάλματα για να συλλέξετε όλα το νέκταρ που
        κάνει το μέλι."
      2-3 Bee Functions 1_instruction: Λειτουργίες είναι τμήματα κώδικα που εκτελεί
        μια εργασία. Χρησιμοποιήστε τη λειτουργία "Λήψη 2 νέκταρ" να συλλέγουν το
        νέκταρ από κάθε λουλούδι.
      2-3 Bee Functions 10_instruction: "Πορφυρά λουλούδια μπορεί να έχει είτε 1 ή
        0 νέκταρ.  Δημιουργήστε μια συνάρτηση που συλλέγει νέκταρ μόνο από τα πορφυρά
        λουλούδια που έχουν νέκταρ."
      2-3 Bee Functions 2_instruction: Λειτουργίες είναι τμήματα κώδικα που εκτελεί
        μια εργασία. Χρησιμοποιήστε τη συνάρτηση "Πάρτε 5", για να πάρει 5 νέκταρος
        κάθε φορά. Σιγουρευτείτε για να χρησιμοποιήσετε βρόγχο για να πάρετε μια ιδανική
        μπλοκ count, πάρα πολύ.
      2-3 Bee Functions 3_instruction: "Συλλέξτε όλο το νέκταρ από κάθε λουλούδι."
      2-3 Bee Functions 4_instruction: Η Συνάρτηση "να κυκλοφορούν και να πάρει το
        νέκταρ" γυρνά τη μέλισσα συλλέγει νέκταρ και στη συνέχεια επιστρέφει η μέλισσα
        όπου ξεκίνησαν. Χρησιμοποιήστε τη συνάρτηση για να συγκεντρώσει όλα από το
        νέκταρ.
      2-3 Bee Functions 5_instruction: "Υπάρχει τώρα περισσότερο νέκταρ στα λουλούδια.
        Επεξεργαστείτε τη συγκεκριμένη λειτουργία, ώστε να συλλέγει 4 νέκταρ και να
        το χρησιμοποιήσετε για να εισπράξει όλα το νέκταρ από τα λουλούδια."
      2-3 Bee Functions 6_instruction: "Τώρα, χρησιμοποιήστε την ίδια λειτουργία να
        συλλέγουν το νέκταρ από τα τρία λουλούδια."
      2-3 Bee Functions 7_instruction: "Τα λουλούδια είναι τώρα πιο μακριά. Επεξεργαστείτε
        τη συγκεκριμένη λειτουργία και χρησιμοποιήσετε το για να μαζέψετε όλο το νέκταρ
        από τα λουλούδια."
      2-3 Bee Functions 8_instruction: "Δημιουργήστε το δικό σας συνάρτηση που παίρνει
        7 νέκταρ, κινείται προς τα εμπρός, και κάνει 7 μέλια. Χρησιμοποιήστε τη συνάρτηση
        για να συλλέξετε το νέκταρ στο κάθε λουλούδι και να κάνει το μέλι σε κάθε
        κηρήθρα."
      2-3 Bee Functions 9_instruction: "Δημιουργήστε το δικό σας συνάρτηση που κατεβαίνει
        μια διαδρομή παίρνει νέκταρ, κάνει το μέλι και στη συνέχεια επιστρέφει η μέλισσα
        στην κορυφή της διαδρομής."
      2-3 Bee Functions Assessment 1_instruction: "Αξιολόγηση: Χρησιμοποιήστε τη συνάρτηση
        που δίνεται να συλλέγει νέκταρ από κάθε λουλούδι."
      2-3 Bee Functions Assessment 2_instruction: "Αξιολόγηση: Δημιουργήσετε μια συνάρτηση
        να κάνει 3 μέλια κάθε φορά."
      2-3 Bee Loops 1_instruction: "Κάθε λουλούδι περιέχει μια μονάδα νέκταρ. Συλλέγει
        νέκταρ από κάθε ένα από τα λουλούδια. "
      2-3 Bee Loops 10_instruction: Μπορείτε να χρησιμοποιήσετε "μια στιγμή" βρόχο
        στο εσωτερικό άλλων δύο βρόχων για τη συλλογή όλων των νέκταρ;
      2-3 Bee Loops 11_instruction: "Χρησιμοποιήστε βρόγχους επανάληψης (while) για
        να μαζέψετε όλο το νέκταρ από τα λουλούδια σε αυτό το πεδίο."
      2-3 Bee Loops 12_instruction: "Χρησιμοποιήστε βρόγχους επανάληψης (while) για
        να μαζέψετε όλο το νέκταρ από τα λουλούδια σε αυτό το πεδίο."
      2-3 Bee Loops 13_instruction: "Στόχος: Χρησιμοποιείστε το μπλοκ επανάληψης (repeat)
        για να μαζέψετε όλο το νέκταρ."
      2-3 Bee Loops 1A_instruction: "Γεια σου, είμαι μία μέλισσα. Μπορείς να με βοηθήσεις
        να μαζέψω το νέκταρ από αυτά τα λουλούδια; "
      2-3 Bee Loops 2_instruction: "Χρησιμοποίησε μία επανάληψη για να μαζέψεις το
        νέκταρ και να φτιάξεις μέλι."
      2-3 Bee Loops 2A_instruction: "Μπορείς να κάνεις την ίδια εργασία πιο εύκολα
        με μια επανάληψη;"
      2-3 Bee Loops 3_instruction: "Μάζεψε το νέκταρ από κάθε λουλούδι και φτιάξε
        μέλι σε κάθε κηρήθρα."
      2-3 Bee Loops 3A_instruction: "Μπορείς να φτιάξεις ένα βρόχο επανάληψης για
        να μαζέψεις όλο αυτό το νέκταρ;"
      2-3 Bee Loops 3B_instruction: "Τώρα χρησιμοποίησε το νέο μπλοκ επανάληψης (repeat)
        για να μαζέψεις όλο το νέκταρ και να φτιάξεις όλο το μέλι."
      2-3 Bee Loops 4_instruction: "Χρησιμοποίησε ένα βρόχο επανάληψης όπως στο τελευταίο
        πάζλ, αλλά βάλε μία στροφή μέσα σε αυτόν."
      2-3 Bee Loops 4A_instruction: |
        Τι θα συμβεί αν επαναλάβεις αυτή την ακολουθία 3 φορές;
        Μην ξεχάσεις να φτιάξεις το μέλι στο τέλος!
      2-3 Bee Loops 5_instruction: "Χρησιμοποίησε τον βρόχο επανάληψης για να κατέβεις
        τα σκαλοπάτια και να μαζέψεις το νέκταρ."
      2-3 Bee Loops 6_instruction: "Χρησιμοποιήστε βρόγχο για να συλλέξετε το νέκταρ
        από κάθε λουλούδι και να κάνετε μέλι σε κάθε κηρήθρα."
      2-3 Bee Loops 7_instruction: "Βάλτε αυτά τα μπλοκ σε ένα βρόχο για να συλλέγουν
        το νέκταρ από κάθε λουλούδι."
      2-3 Bee Loops 8_instruction: "Αυτά τα μοβ λουλούδια έχουν ένα άγνωστο ποσό νέκταρ.
        Χρησιμοποιήστε το βρόχο «Οσο νέκταρ» για τη συλλογή όλων των το νέκταρ. Αυτός
        ο βρόχος θα διαρκέσει για όσο διάστημα η Συνθήκη είναι αληθής, σε αυτή την
        περίπτωση νέκταρ > 0."
      2-3 Bee Loops 9_instruction: "Ο βρόχος Όσο μπορεί να εκτελέσει την ίδια ενέργεια
        με τη δήλωση Αν σε έναν βρόχο. Προσθέστε έναν βρόχο Όσο σε αυτόν τον κώδικα
        για την εκτέλεση της εργασίας."
      2-3 Bee Loops Assessment 1_instruction: "Εκτίμηση - Χρησιμοποίησε μια επανάληψη
        while για να συλλέξεις όλο το νέκταρ από αυτό το λουλούδι."
      2-3 Maze 1_instruction: 'Μπορείς να με βοηθήσεις να πιάσω το άτακτο γουρούνι;
        Κόλλησε δυό μπλοκ "Μετακίνηση προς τα εμπρός" μαζί και πάτησε "Εκτέλεση". '
      2-3 Maze 10_instruction: "Οδήγησε με στην πράσινη κακία! (Πρόσεξε τη δυναμίτιδα)"
      2-3 Maze 11_instruction: "Πήγαινε με στο λουλούδι πεινάω! Πόσες φορές πρέπει
        να επαναλάβεις ένα μπλοκ;"
      2-3 Maze 12 (copy 1)_instruction: 'Μπορείς να αντικαταστήσεις την προηγούμενη
        απάντηση με μόνο δύο μπλοκ; (Υπόδειξη: Δημιούργησε ενα βρόχο, χρησιμοποιώντας
        το μπλοκ "φορές επανάληψης".)'
      2-3 Maze 12 (copy 2)_instruction: 'Μπορείς να αντικαταστήσεις την προηγούμενη
        απάντηση με μόνο δύο μπλοκ; (Υπόδειξη: Δημιούργησε ενα βρόχο, χρησιμοποιώντας
        το μπλοκ "φορές επανάληψης".)'
      2-3 Maze 12 (old)_instruction: Πήγαινε με στο γουρούνι, τώρα με το "Επαναλάβε
        φορές" μπλοκ!
      2-3 Maze 12_instruction: "Μπορείς να αντικαταστήσεις αυτά τα 5 μπλοκ με μόνο
        2 μπλοκ; \n(Υπόδειξη: Δημιούργησε μια επανάληψη χρησιμοποιώντας ένα \"Επανάλαβε
        φορές\" μπλοκ.)\n"
      2-3 Maze 13 (old)_instruction: Πήγαινε με στο γουρούνι, τώρα με το "Επανάλαβε
        ώσπου" μπλοκ!
      2-3 Maze 13_instruction: "Πήγαινε με στο γουρούνι χρησιμοποιώντας μόνο δύο μπλοκ."
      2-3 Maze 14 (old)_instruction: "Πήγαινε με στο γουρούνι με το Επανάλαβε ώσπου
        μπλοκ!"
      2-3 Maze 14_instruction: Πήγαινε με στο ηλίανθο! (Που είναι το "επανάλαβε φορές"
        μπλοκ όταν το χρειάζομαι;)
      2-3 Maze 15 (old)_instruction: "Πήγαινε με στο γουρούνι με το Επανάλαβε ώσπου
        μπλοκ!"
      2-3 Maze 15_instruction: "Χρησιμοποίησε δύο επαναλήψεις για να φθάσεις στο γουρούνι
        χρησιμοποιώντας λιγότερα μπλοκ."
      2-3 Maze 16 (old)_instruction: "Πήγαινε με στο γουρούνι με το Επανάλαβε ώσπου
        μπλοκ!"
      2-3 Maze 16 before_instruction: "Πήγαινε με στο γουρουνάκι."
      2-3 Maze 16_instruction: "Πήγαινε με στον ηλιόσπορο. Επανάλαβε την σειρά εντολών!"
      2-3 Maze 2_instruction: "Αυτό το γουρούνι τσαλακώνει τα φτερά μου. Βοηθήστε
        με να το βρω!"
      2-3 Maze 3_instruction: "Ακολούθησε τη διαδρομή και οδήγησε με στο ανόητο γουρούνι.
        Απόφυγε τη δυναμίτιδα αλλιώς τα φτερά μου θα πετάξουν!"
      2-3 Maze 4_instruction: "Οδήγησε με στην πράσινη κακία! (Πρόσεξε τη δυναμίτιδα)"
      2-3 Maze 5_instruction: "Οδήγησε με στην πράσινη κακία! (Πρόσεξε τη δυναμίτιδα)"
      2-3 Maze 6_instruction: "Ηρέμησε και βοήθησε με να βρω το κακό γουρούνι. Διαφορετικά
        μπορεί να θυμώσω!"
      2-3 Maze 7_instruction: "Οδήγησε με στην πράσινη κακία! (Πρόσεξε τη δυναμίτιδα)"
      2-3 Maze 8_instruction: "Πήγαινε με στο γουρούνι!"
      2-3 Maze 9_instruction: "Οδήγησε με στην πράσινη κακία! (Πρόσεξε τη δυναμίτιδα)"
      2-3 Maze Loops 1_instruction: "Μπορείς να με πάς στο γουρουνάκι χρησιμοποιώντας
        5 μπλόκ;"
      2-3 Maze Loops 17_instruction: "Πήγαινε με στον ηλίανθο!"
      2-3 Maze Loops 18_instruction: "Πήγαινε με στον ηλίανθο!"
      2-3 Maze Loops 19_instruction: "Πήγαινε με στον ηλίανθο!"
      2-3 Maze Loops 20_instruction: "Πήγαινε με στον ηλίανθο!"
      2-3 Maze Loops 21_instruction: "Πήγαινε με στον ηλίανθο!"
      2-3 Maze Loops Assessment 1_instruction: "Εκτίμηση: Πήγαινε με στον ηλίανθο
        χρησιμοποιώντας μόνο 5 μπλοκ! "
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: "Πήγαινε με στο γουρούνι! Ποια μπλοκ επαναλήφθηκαν;"
      2-3 Maze sq10v2_instruction: "Πήγαινε με στο γουρούνι! Ποια μπλοκ επαναλήφθηκαν;"
      2-3 maze sq11_instruction: "Πήγαινε με στο γουρούνι! Ποια μπλοκ επαναλήφθηκαν;"
      2-3 maze sq12_instruction: Μπορείτε να αντικαταστήσετε την προηγούμενη απάντηση
        με έναν βρόχο, χρησιμοποιώντας ένα μπλοκ "επαναλάβετε φορές";
      2-3 maze sq13_instruction: Αγαπητέ πρόσωπο. Εγώ ζόμπι. Πρέπει να...... φτάσει....στους
        ηλίανθους. Δημιουργήστε το βρόχο με "επαναλάβετε μέχρι" μπλοκ.
      2-3 maze sq14_instruction: "Μπορείτε να φτάσετε στον ηλίανθο, χρησιμοποιώντας
        μόνο τέσσερα μπλοκ;"
      2-3 maze sq15_instruction: "Μπορείτε να φτάσετε στον ηλίανθο, χρησιμοποιώντας
        μόνο πέντε μπλοκ;"
      2-3 maze sq16_instruction: "Εντάξει, αυτό είναι παρόμοιο, αλλά ελαφρώς διαφορετικό.
        Μπορείς να το κάνεις μόνο με 5 μπλοκ;"
      2-3 Maze sq2_instruction: "Ακολούθησε τη διαδρομή και οδήγησε με στο ανόητο
        γουρούνι. Απόφυγε τη δυναμίτιδα αλλιώς τα φτερά μου θα πετάξουν!"
      2-3 Maze sq3_instruction: "Οδήγησε με στην πράσινη κακία! (Πρόσεξε τη δυναμίτιδα)"
      2-3 Maze sq4_instruction: "Ηρέμησε και βοήθησε με να βρω το κακό γουρούνι. Διαφορετικά
        μπορεί να θυμώσω!"
      2-3 Maze sq5_instruction: "Πήγαινε με στο γουρούνι! Πόσες φορές πρέπει να επαναλάβεις
        ένα μπλοκ;"
      2-3 Maze sq6_instruction: 'Μπορείς να αντικαταστήσεις την προηγούμενη απάντηση
        με μόνο δύο μπλοκ; (Υπόδειξη: Δημιούργησε ενα βρόχο, χρησιμοποιώντας το μπλοκ
        "φορές επανάληψης".)'
      2-3 Maze sq7_instruction: "Πήγαινε με στον πράσινο εισβολέα χρησιμοποιώντας
        μόνο τρία μπλοκ."
      2-3 Maze sq8_instruction: Πήγαινέ με στο γουρούνι! (Που είναι το μπλοκ "Επανέλαβε
        φορές" όταν το χρειάζομαι;)
      2-3 Maze sq9_instruction: "Δημιούργησε βρόχους για να πας στο γουρούνι χρησιμοποιώντας
        λιγότερα μπλοκ."
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: "Βοήθησε το πουλί να πιάσει το άτακτο γουρούνι κάνοντάς
        το να προχωρήσει μπροστά"
      4-5 Artist 1_instruction: "Βοήθησέ με να τελειώσω το σχεδιασμό του κουτιού μου.
        (Κάθε γραμμή έχει μήκος 300 εικονοστοιχεία) "
      4-5 Artist 10_instruction: Πάτησε "Εκτέλεση"για να δοκιμάσεις τον κώδικα. Μετά,
        επανέλαβέ το όσες φορές χρειάζεται για να ολοκληρώσεις το σχέδιο. Τα χρώματα
        θα είναι διαφορετικά κάθε φορά.
      4-5 Artist 11_instruction: "Ολοκλήρωσε τις πράσινες γραμμές. Οι γραμμές έχουν
        μήκος 300 εικονοστοιχεία και απόσταση 15 εικονοστοιχεία."
      4-5 Artist 2_instruction: "Μπορείς να επαναλάβεις αυτόν τον κώδικα για να ολοκληρώσεις
        το τετράγωνο;"
      4-5 Artist 3.5_instruction: Εντάξει, προσπάθησε να καταλάβεις τι θα συμβεί όταν
        εκτελέσεις τον κώδικα (ή πατήσεις "Εκτέλεση" για να τον δοκιμάσεις. Μετά,
        επανέλαβέ το όσες φορές χρειάζεται για να ολοκληρώσεις το σχέδιο. Τα χρώματα,
        πολύ πιθανόν, θα είναι διαφορετικά κάθε φορά.
      4-5 Artist 3_instruction: |
        Αυτό το ορθογώνιο κρεβάτι με τα λουλούδια έχει περίμετρο 600.
        Η μακρυά πλευρά του έχει μήκος 200. Σχεδίασε ένα ορθογώνιο.
      4-5 Artist 4_instruction: "Πόσες μοίρες έχει ένας κύκλος; Επαναδιάταξε τα μπλοκ
        για να δημιουργήσεις ένα χρωματιστό κύκλο."
      4-5 Artist 5_instruction: "Τι γωνία χρησιμοποιείς;"
      4-5 Artist 6_instruction: "Αυτό το ισόπλευρο τρίγωνο έχει γωνίες 60, 60, και
        60 μοίρες. Κάθε πλευρά είναι 200 εικονοστοιχεία. Ολοκλήρωσε το σχέδιο."
      4-5 Artist 7_instruction: "Αυτό το τρίγωνο στα δεξιά αποτελείται από γωνίες
        των 30, 60 και 90 μοιρών. Το μήκος της λοξής πλευράς είναι διπλάσιο του ύψους
        100 εικονοστοιχείων. Ολοκλήρωσε την ζωγραφιά."
      4-5 Artist 8_instruction: "Η μεσαία γραμμή ενός γηπέδου ποδοσφαίρου είναι κάθετη
        στις πλαϊνές γραμμές του. Η περιοχή του γηπέδου έχει περίμετρο 800 εικονοστοιχείων
        και έχει μήκος 240 εικονοστοιχείων. Πόσο φαρδύ είναι το γήπεδο; Ζωγράφισε
        τα όριά του και την μεσαία γραμμή του."
      4-5 Artist 9_instruction: "Σχεδίασε το άλλο μισό ώστε το σχέδιο να είναι συμμετρικό.
        Τα τρίγωνα είναι ισόπλευρα και έχουν μήκος 50 εικονοστοιχείων."
      4-5 Artist Assessment 1_instruction: "Αξιολόγηση: Χρησιμοποίησε ένα βρόχο για
        να σχεδιάσεις το ισόπλευρο τρίγωνο. Κάθε πλευρά έχει μήκος 300 εικονοστοιχείων."
      4-5 Artist For Loops 1_instruction: "Βάλε τα νούμερα από 1 εώς 10 μέσα στα πλατιά
        μπλοκς και τρέξε τον κώδικα."
      4-5 Artist For Loops 11_instruction: Ολοκληρώστε το "για" μπλοκ ώστε να μετράει
        0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Τι θα συμβεί αν αντιστρέψετε τους "από"
        και "έως" αριθμούς; Ολοκληρώστε το "για" μπλοκ, έτσι ώστε αυτό μετράει 200,
        180, 160, 140, 120... 0. '
      4-5 Artist For Loops 13_instruction: 'Αυτή η σχεδίαση ξεκίνησε χωρίς έναν βρόχο
        "για" και παίρνει πάρα πολλά μπλοκ!  Χρησιμοποιήστε ένα μπλοκ "για" για να
        ολοκληρώσετε τη σπείρα.  Συμμβουλή: το μήκος της τελευταίας γραμμής είναι
        250 pixel.'
      4-5 Artist For Loops 14_instruction: 'Κάποιος ξεκίνησε τον κώδικα, αλλά μετά
        διαπίστωσε ότι πρέπει να υπάρχει πιο γρήγορος τρόπος! Χρησιμοποίησε ένα "επανέλαβε"
        μπλοκ για να αντικαταστήσεις τα μπλοκς και ολοκλήρωσε το τριγωνικό σπιράλ.
        (Στοιχείο: το μήκος της τελευταίας γραμμής είναι 300 εικονοστοιχεία.)'
      4-5 Artist For Loops 15_instruction: 'Κάποιος ξεκίνησε τον κώδικα, αλλά μετά
        διαπίστωσε ότι πρέπει να υπάρχει πιο γρήγορος τρόπος! Χρησιμοποίησε ένα "επανέλαβε"
        μπλοκ για να αντικαταστήσεις τα μπλοκς και ολοκλήρωσε το εξάγωνο σπιράλ. (Στοιχείο:
        το μήκος της τελευταίας γραμμής είναι 200 εικονοστοιχεία.)'
      4-5 Artist For Loops 2_instruction: "Αυτό είναι ενα μπλοκ \"για\". Αντί να πληκτρολογήσετε
        1,2,3... 10, \nτο μπλο \"για\" μπορεί να επαναλάβει τα εσωτερικά μπλοκ και
        να \nμετρήσει για εσας. Βάλτε τον αριθμό 10 μέσα στην ενότητα \"εως\" του
        μπλοκ \"για\".\nblock.\n"
      4-5 Artist For Loops 3_instruction: Πώς μπορούμε να μετρήσουμε από το 1 ως το
        50; Επεξεργάσου το μπλοκ "επανέλαβε".
      4-5 Artist For Loops 4_instruction: Ολοκλήρωσε το μπλοκ "επανέλαβε" ώστε να
        μετράει από το 1 ως το 10 κατά 1.
      4-5 Artist For Loops 6_instruction: Σχεδίασε τετράγωνα με πλευρές 50, 60, 70,
        80 και 90 εικονοστοιχείων. Θα χρειαστεί να χρησιμοποιήσεις τη συνάρτηση "σχεδίασε
        ένα τετράγωνο" 5 φορές.
      4-5 Artist For Loops 7_instruction: Σχεδίασε τα ίδια τετράγωνα αλλά χρησιμοποίησε
        τον "μετρητή" μπλοκ στην εντολή "σχεδίασε ένα τετράγωνο". Στοιχείο; Βρίσκεται
        στην κατηγορία "Διάφορα".
      4-5 Artist For Loops 8_instruction: Μπορείτε να ολοκληρώσετε το πρόγραμμα με
        την τοποθέτηση των μπλοκ μέσα σε ένα "για" μπλοκ που μετράει από 10 έως 200
        ανά10αδα; Μπορείτε να βρείτε το "για" μπλοκ στην κατηγορία βρόχων.
      4-5 Artist For Loops 9_instruction: Αυτοί οι κύκλοι έχουν μέγεθος 5, 10, 15,
        20, 25, 30, και 35. Σχεδιάσε τους κύκλους για τον βρόχο "for".
      4-5 Artist Free Draw 1_instruction: "Ελεύθερη σχεδίαση! Σχεδίασε ότι σε εμπνέει
        να δημιουργήσεις."
      4-5 Artist Functions 1_instruction: Χρησιμοποίησε την εντολή "επανέλαβε" για
        να σχεδιάσεις αυτό το τρίγωνο.
      4-5 Artist Functions 10a_instruction: Βάλε αυτόν τον κώδικα στην εντολή "σχεδίασε
        μία νιφάδα χιονιού" και αντικατέστησε το 50 με την παράμετρο "μήκος". Η εντολή
        είναι ήδη προγραμματισμένη να δημιουργήσει μια νιφάδα χιονιού 100 εικονοστοιχείων.
      4-5 Artist Functions 10b_instruction: 'Χρησιμοποίησε την εντολή "σχεδίασε μια
        νιφάδα χιονιού" για να δημιουργήσεις νιφάδες διάφορων μεγεθών.  Στοιχείο:
        Η πρώτη νιφάδα χιονιού έχει μήκος 25 και κάθε νιφάδα χιονιού είναι διπλάσια
        σε μέγεθος από την προηγούμενή της.'
      4-5 Artist Functions 11_instruction: 'Η "σχεδίασε ένα εξάγωνο" εντολή χρησιμοποιεί
        την "σχεδίασε ένα τρίγωνο" εντολή. Ολοκλήρωσε την εντολή του εξαγώνου. Στοιχείο:
        ( Ένα εξάγωνο έχει 6 πλευρές, κάθε πλευρά έχει μήκος 100 εικονοστοιχείων.)'
      4-5 Artist Functions 12_instruction: 'Ολοκλήρωσε την εντολή "σχεδίασε κύματα".
        Κάθε κύμα αποτελείται από το άνω και κάτω κύμα. Στοιχείο: Σχεδίασε 5 μπλε
        κύματα.'
      4-5 Artist Functions 13 Free play_instruction: "Να μερικές εντολές για να σχεδιάσεις
        πλανήτες, αστέρια. πυραύλους και robots. Χρησιμοποίησέ τες για να δημιουργήσεις
        εικόνες που μπορείς να μοιραστείς με τους φίλους σου."
      4-5 Artist Functions 14 Free play_instruction: Εδώ, σας παρέχουμε μερικές λειτουργίες.
        Χρησιμοποιήστε τις όπως θέλετε σε ένα ή περισσότερους βρόχους για να κάνετε
        ζωγραφιές που θα μοιραστείτε με τους φίλους σας. Κάντε κλικ στο "εκτέλεσε"
        να δείτε ένα παράδειγμα.
      4-5 Artist Functions 15 Assessment_instruction: 'Αξιολόγηση: Χρησιμοποιήστε
        τη συνάρτηση "Σχεδιάστε ένα τετράγωνο" για να δημιουργήσετε τα τετράγωνα.
        Τα τετράγωνα είναι 50, 100 και 150 pixels.'
      4-5 Artist Functions 2a_instruction: Τώρα βάλτε αυτά τα μπλοκ σε μια νέα λειτουργία
        που ονομάζετε "ζωγράφισε ένα μικρό τρίγωνο" και ονόμασέ το.
      4-5 Artist Functions 2b_instruction: Τώρα, δημιουργήστε μια συνάρτηση που να
        ονομάζεται "σχεδίασε ένα μικρό τρίγωνο" χρησιμοποιώντας τα παρεχόμενα μπλοκ.
      4-5 Artist Functions 3_instruction: 'Τώρα να δημιουργήσετε τις λειτουργίες "σχεδίασε
        ένα μεσαίο τρίγωνο" και να "σχεδίασε ένα μεγάλο τρίγωνο". Η λειτουργία "σχεδίασε
        ένα μικρό τρίγωνο" έχει ήδη γίνει για σας. Τα τρίγωνα έχουν μήκη πλευρών των
        50 (μικρό), 100 (μεσαία) και 150 (μεγάλο). '
      4-5 Artist Functions 4_instruction: Η νέα αυτή λειτουργία "σχεδίασε ένα τρίγωνο"
        έχει μια παράμετρο που μπορεί να κάνει ότι και οι τρεις λειτουργίες πριν.
        Σχεδιάστε τα ίδια τρίγωνα χρησιμοποιώντας αυτήν τη νέα λειτουργία.
      4-5 Artist Functions 5_instruction: Μπορείτε να τροποποιήσετε τη λειτουργία
        "σχεδίασε ένα τρίγωνο" σε λειτουργία "Σχεδιάστε ένα τετράγωνο" για να αλλάξετε
        το σχέδιο;
      4-5 Artist Functions 6_instruction: "Χρησιμοποιήστε τις λειτουργίες «Σχεδιάστε
        ένα τετράγωνο» και «σχεδιάσετε ένα τρίγωνο» για να σχεδιάσετε ένα σπίτι. (Υπόδειξη:
        οι πλευρές τετραγώνου είναι 200 pixels)"
      4-5 Artist Functions 6b_instruction: Χρησιμοποίησε την συνάρτηση σχεδίασης ενός
        τετραγώνου και τριγώνου μαζί με άλλα μπλοκ για να δημιουργήσετε ένα σπίτι
        και προσθέστε τα στη λειτουργία «σχεδιάσετε ένα σπίτι "και να τα ονομάσουμε.
      4-5 Artist Functions 7_instruction: Χρησιμοποιήστε τη συνάρτηση "σχεδιάστε ένα
        σπίτι", για να σχεδιάσετε σπίτια που είναι 100 εικονοστοιχεία και 50 εικονοστοιχεία.
        Τα δύο σπίτια να απέχουν 50 εικονοστοιχεία.
      4-5 Artist Functions 8_instruction: "Η λειτουργία «σχεδιασμός ενός λουλουδιού»
        έχει μια παράμετρο που σας επιτρέπει να ορίσετε το ύψος του μίσχου.  Ορίστε
        το σε 200 εικονοστοιχεία να δούμε τι θα συμβεί."
      4-5 Artist Functions 9_instruction: "Σχεδιάσετε αυτά τα 3 λουλούδια. Το ύψος
        του πρώτου είναι 100 εικονοστοιχεία και το επόμενο λουλούδι είναι πάντα 50
        εικονοστοιχεία πάνω από το ύψος του προηγούμενου. Τα λουλούδια απέχουν μεταξύ
        τους 100 εικονοστοιχεία."
      4-5 Artist Patterns 1_instruction: "Μπορείτε να σχεδιάστε αυτό το τετράγωνο
        χρησιμοποιώντας ένα βρόχο; Κάθε πλευρά είναι 20 pixels."
      4-5 Artist Patterns 10_instruction: "Αυτός ο κωδικός σχεδιάζει δύο σειρές από
        εξάγωνα - κάντε ένα βρόχο για το όλο θέμα 4 φορές για να σχεδιάσετε μια ολόκληρη
        κηρήθρα. Συμβουλή: Θα πρέπει να μεταβείτε πίσω 120 pixels στον ακραίο βρόχο
        για να βεβαιωθείτε ότι ο καλλιτέχνης δεν σχεδιάζει έξω από την οθόνη."
      4-5 Artist Patterns 11_instruction: "Πόσες φορές χρειάζεστε να κάνετε αυτό το
        βρόχο για να σχεδιάσετε μισό κύκλο; Συμβουλή: αν υπάρχουν 360 μοίρες σε έναν
        κύκλο και κάθε βρόχος κινείται 3 μοίρες, πόσες φορές θα χρειαστεί να επαναλάβετε
        για έναν πλήρη κύκλο;"
      4-5 Artist Patterns 12_instruction: "Αν αντιγράψετε αυτό το βρόχο και στρίψτε
        αριστερά αντί για δεξιά, τι συμβαίνει; Μπορείτε να το επαναλάβετε αυτό για
        να σχεδιάσετε αυτό το κύμα;"
      4-5 Artist Patterns 13_instruction: "Τώρα ας δημιουργήσουμε ένα βρόχο 4 φορές
        για να σχεδιάσουμε μια κορνίζα. Προσοχή στις γωνίες. Δεν μπορείτε απλά να
        στρίβετε 90 μοίρες. Αν ένας βρόχος δίνει στροφή 3 μοιρών, τότε αν επαναληφθεί
        60 φορές σας δίνει μισό κύκλο. Επομένως ποιά μπλοκ κώδικα θα κάνουν ένα τέταρτο
        του κύκλου για τις γωνίες¨;"
      4-5 Artist Patterns 2_instruction: "Εάν τοποθετήσετε το βρόχο για το τετράγωνο
        μέσα σε ένα άλλο βρόχο, το ονομάζουμε ένθετο βρόχο. Τι χρειάζεστε για να προσθέσετε
        στον εξωτερικό βρόχο σας ώστε να βεβαιωθείτε ότι όλα τα 15 τετράγωνα είναι
        ευθυγραμισμένα το ένα δίπλα στο άλλο;"
      4-5 Artist Patterns 3_instruction: "Τώρα ας πάμε ένα επίπεδο πιο πάνω! Σας έχω
        ένθετα ότι ολόκληρο μπλοκ του κώδικα σε ένα άλλο βρόχο, αλλά πρέπει να πάρετε
        τον καλλιτέχνη πίσω στη θέση του για να ζωγραφίσει την επόμενη γραμμή. Ποια
        από αυτά τα μπλοκ κώδικα μπορείτε να τοποθετήσετε στο τέλος του εξωτερικού
        βρόχου για να σχεδιάσετε το σύνολο του δικτύου;"
      4-5 Artist Patterns 4_instruction: "Το διαμάντι έχει 50 pixel πλευρές και γωνίες
        120 και 60 βαθμούς. Χρησιμοποιήσετε ένΑ βρόγχο για να το ζωγραφίσετε."
      4-5 Artist Patterns 5.5_instruction: "Πόσες φορές χρειάζεστε να επαναλάβετε
        αυτό το μπλοκ για να σχεδιάσετε ένα πλήρες πλέγμα διαμαντιών;"
      4-5 Artist Patterns 5_instruction: "Ας το επαναλάβουμε ότι για να κάνουμε μια
        σειρά από 6 διαμάντια. Παρατηρήστε ότι αλλάξαμε τον κώδικα διαμαντιού για
        να επαναλάβετε 3 φορές αντί για 2 - γιατί νομίζετε το κάναμε αυτό;"
      4-5 Artist Patterns 6_instruction: "Πόσες φορές χρειάζετε να επαναλάβετε αυτό
        το μπλοκ για να σχεδιάσετε ένα πλήρες πλέγμα διαμαντιών;"
      4-5 Artist Patterns 7_instruction: Ας να τροποποιήσουμε τον κώδικα από το τελευταίο
        παζλ για να κάνουμε αυτό το πιο πολύπλοκο μοτίβο. Παρατηρήστε πώς τα διαμάντια
        επικαλύπτονται τώρα, δοκιμάστε να αλλάξετε το πρώτο "άλμα προς τα πίσω" από
        100 σε 50 (μισό στο μέτρο) - τώρα πόσο μακριά ο καλλιτέχνης πρέπει να πάει
        στο δεύτερο "άλμα προς τα πίσω";
      4-5 Artist Patterns 8_instruction: "Χρησιμοποιήστε ένα βρόχο για να σχεδιάσετε
        το εξάγωνο με 40 pixel πλευρά και γωνία 60 μοιρών."
      4-5 Artist Patterns 9.5_instruction: "Ας κάνουμε έναν βρόχο για αυτόν τον κώδικα
        ώστε να σχεδιάσουμε 2 σειρές εξάγωνα. Προσέξτε πως η δεύτερη σειρά μετατοπίζεται
        δεξιά."
      4-5 Artist Patterns 9_instruction: "Τώρα επαναλάβετε εκείνον το κώδικα 3 φορές
        για να σχεδιάσετε ολόκληρη γραμμή. Συμβουλή, κάθε εξάγωνο έχει 80 pixels πλάτος
        από τα πιό μακρυνό σημείο, αριστερά προς τα δεξιά."
      4-5 Artist Patterns Free Play_instruction: "Παίξτε σχεδιάζοντας ελεύθερα σε
        ότι μοτίβο θέλετε!"
      4-5 Bee Conditionals - FC Test_instruction: "Η μέλισσα θέλει μόνο νέκταρ αυτή
        τη στιγμή. Δεν είναι όλα τα αντικείμενα λουλούδια, έτσι κάντε έλεγχο κάτω
        από κάθε ΣΎΝΝΕΦΟ, να δει αν κρύβεται ένα λουλούδι. Αν είναι, τότε μπορείτε
        να συγκεντρώσετε νέκταρ."
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: "Η μέλισσα δεν μπορεί να πει αν αυτό είναι
        ένα λουλούδι ή μια κηρήθρα. Συγκεντρώστε το νέκταρ από τα λουλούδια, αλλά
        πρώτα να ελέγξετε αν είναι ένα λουλούδι ή μια κηρήθρα."
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: "Η μέλισσα θέλει μόνο νέκταρ αυτή τη στιγμή.
        Δεν είναι όλα τα αντικείμενα λουλούδια, έτσι κάντε έλεγχο κάτω από κάθε ΣΎΝΝΕΦΟ,
        να δειτε αν κρύβεται ένα λουλούδι. Αν είναι, τότε μπορείτε να συγκεντρώσετε
        νέκταρ."
      4-5 Bee Conditionals 3_instruction: "Τώρα η μέλισσα θέλει να κάνει μέλι. Ελέξτε
        ώστε να κάνει μέλι μόνο σε κηρήθρες."
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: "Το άγνωστο αντικείμενο είναι είτε ένα λουλούδι
        ή μια κηρήθρα. Χρησιμοποιήστε το εάν/αλλιώς μπλοκ ώστε να συλλέγουν νέκταρ,
        εάν είναι ένα λουλούδι, αλλιώς να κάνει το μέλι (επειδή είναι μια κηρήθρα)."
      4-5 Bee Conditionals 5_instruction: "Ίσως υπάρχει ένα λουλούδι ή μια κηρήθρα
        κάτω από τα σύννεφα. Χρησιμοπιήστε το εάν/αλλιώς μπλοκ για να συλλέγουν νέκταρ,
        αν υπάρχει ένα λουλούδι, αλλιώς να κάνει το μέλι (επειδή υπάρχει μια κηρήθρα)."
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: "Αυτό το μωβ λουλούδι μπορεί να έχει είτε
        3, 2, ή 1 νέκταρ. Εδώ ένα αν/αλλιώς μπλοκ είναι σε συνδυασμό με ένα άλλο αν-αλλιώς
        μπλοκ να δημιουργήσει ένα αν, διαφορετικά- εάν, αλλιώς μπλοκ. Ολοκληρώστε
        τη λύση για τη συλλογή του άγνωστου ποσού του νέκταρ."
      4-5 Bee Conditionals 7_instruction: Θυμηθείτε ότι τα μωβ λουλούδια μπορεί να
        έχουν 3, 2 ή 1 νέκταρς. Ολοκληρώστε τη λειτουργία "check μωβ λουλούδι" και
        χρησιμοποιήστε το για να εισπράξει όλα το νέκταρ στα λουλουδια.
      4-5 Bee Conditionals 8_instruction: Γράωτε μέσα στη συνάρτηση "ελέγχω λουλούδι
        κάνει μέλι". Η Λειτουργία σας πρέπει να ελέγχει αν το μωβ λουλούδι έχει 3,
        1 ή 2 νέκταρ και να συλλέγει όλο το νέκταρ. Στη συνέχεια, μετακινηθείτε προς
        τα εμπρός και κάνετε μέλι.
      4-5 Bee Conditionals Assessment 1_instruction: 'Αξιολόγηση: Αυτός ο κωδικός
        είναι λάθος. Να ολοκληρωθεί η λειτουργία "να πάρει το νέκταρ ή να κάνει μέλι"
        και, στη συνέχεια, ανακαλέστε τη για τη συλλογή όλου του νέκταρ και του μελιού.
        Θυμηθείτε ότι τα μωβ λουλούδια μπορεί να έχουν 3, 2 ή 1 νέκταρ.'
      4-5 Bee Debugging 1_instruction: "Αυτά τα μπλοκ πραγματικά με ενοχλούν. Μπορείτε
        να τα διορθώσετε;"
      4-5 Bee Debugging 10_instruction: "Βρες τα λάθη και να τα διόρθωσέ τα."
      4-5 Bee Debugging 11_instruction: "Αυτό μετράει σωστά;"
      4-5 Bee Debugging 2_instruction: "Βοηθήστε την μέλισσα να πάρει το νέκταρ και
        να κάνει μέλι."
      4-5 Bee Debugging 3_instruction: "Βρες τα λάθη και να τα διόρθωσέ τα."
      4-5 Bee Debugging 4_instruction: "Αυτά τα τμήματα δεν λειτουργούν. Ποιό είναι
        το μοτίβο;"
      4-5 Bee Debugging 5_instruction: "Κάτι δεν είναι σωστό εδώ..."
      4-5 Bee Debugging 6_instruction: "Το μωβ λουλούδι έχει ένα άγνωστο ποσό νέκταρ.
        Καθορίστε το μπλοκ για να πάρετε όλα το νέκταρ από το λουλούδι."
      4-5 Bee Debugging 7_instruction: "Εδώ κάτι λείπει..."
      4-5 Bee Debugging 8_instruction: "Αυτή η λειτουργία είναι μια χαρά, αλλά δεν
        χρησιμοποιείται σωστά."
      4-5 Bee Debugging 9_instruction: "Γιατί η μέλισσα δεν κάνει αρκετό μέλι;"
      4-5 Bee Debugging Assessment 1_instruction: "Αξιολόγηση: Φτιάξτε τον κώδικα."
      4-5 Bee Nested Loops 1_instruction: "Χρησιμοποιήστε έναν βρόχο να συλλέξετε
        όλο το νέκταρ."
      4-5 Bee Nested Loops 2_instruction: "Συλλέξτε όλο το νέκταρ από κάθε λουλούδι.
        Χρησιμοποιήστε ένα ένθετο βρόχο. "
      4-5 Bee Nested Loops 3_instruction: "Μάζεψε όλο το νέκταρ βάζοντας τον αρχικό
        κώδικα σε έναν ένθετο βρόχο."
      4-5 Bee Nested Loops 4_instruction: "Μάζεψε όλο το νέκταρ από κάθε λουλούδι
        και φτιάξε μέλι σε κάθε κερήθρα. Χρησιμοποίησε έναν ένθετο βρόχο."
      4-5 Bee Nested Loops 5_instruction: "Μάζεψε όλο το νέκταρ φτιάχνοντας έναν ένθετο
        βρόχο."
      4-5 Bee Nested Loops 6_instruction: "Μάζεψε όλο το νέκταρ."
      4-5 Bee Nested Loops 7_instruction: |
        Βάλε αυτό το βρόχο μέσα σε ένα άλλο για να δημιουργήσεις ένα εμφωλευμένο βρόχο
        και να μαζέψεις όλο το νέκταρ από τα λουλούδια.
      4-5 Bee Nested Loops 8_instruction: Μάζεψε όλο το νέκταρ από αυτά τα λουλούδια
        ενθέτοντας έναν βρόχο "όσο". Αντικατάστησε το εσωτερικό μπλοκ "επανάλαβε"
        με ένα μπλοκ "όσο".
      4-5 Bee Nested Loops 9_instruction: Μάζεψε όλο το νέκταρ από αυτά τα λουλούδια
        ενθέτοντας έναν βρόχο "όσο" εντός του βρόχου "επανάλαβε".
      4-5 Bee Nested Loops Assessment 1_instruction: "Αξιολόγηση - Μάζεψε όλο το νέκταρ
        και φτιάξε μέλι χρησιμοποιώντας βρόχους."
      4-5 Bee Nested Loops Rows_instruction: "Μάζεψε όλο το νέκταρ από τη σειρά των
        λουλουδιών. Χρησιμοποίησε έναν ένθετο βρόχο."
      4-5 Maze 1 (copy 1)_instruction: "Άνθρωπε. Εγώ ζόμπι. Πρέπει... φτάσω... ηλιοτρόπιο."
      4-5 Maze 1_instruction: "Άνθρωπε. Εγώ ζόμπι. Πρέπει... φτάσω... ηλιοτρόπιο."
      4-5 Maze 10_instruction: "Μπορείτε να φτάσετε στον ηλίανθο, χρησιμοποιώντας
        μόνο τέσσερα μπλοκ;"
      4-5 Maze 11_instruction: "Μπορείς να φτάσεις στο ηλιοτρόπιο χρησιμοποιώντας
        μόνο έξι μπλοκ;"
      4-5 Maze 12_instruction: "Οκ, αυτό είναι λιγάκι διαφορετικό. Μπορείς να τα καταφέρεις
        μόνο με έξι μπλοκ;"
      4-5 Maze 13_instruction: "Πήγαινε με στο γουρούνι!"
      4-5 Maze 14_instruction: Πήγαινέ με στο γουρούνι! Χρησιμοποίησε το μπλοκ "επανάλαβε
        μέχρις ότου".
      4-5 Maze 2 (copy 1)_instruction: "Οδήγησε το ζόμπι στο ηλιοτρόπιο, αλλά απόφυγε
        τη φαγάνα!"
      4-5 Maze 2_instruction: "Οδήγησε το ζόμπι στο ηλιοτρόπιο, αλλά απόφυγε τη φαγάνα!"
      4-5 Maze 3 (copy 1)_instruction: "Πρέπει... φτάσω... ηλιοτρόπιο."
      4-5 Maze 3_instruction: "Πρέπει... φτάσω... ηλιοτρόπιο."
      4-5 Maze 4 (copy 1)_instruction: Δοκίμασε το "επανάλαβε" για να χρησιμοποιήσεις
        λιγότερα μπλοκ εντολών...
      4-5 Maze 4_instruction: Δοκίμασε το "επανάλαβε" για να χρησιμοποιήσεις λιγότερα
        μπλοκ εντολών...
      4-5 Maze 5 (copy 1)_instruction: "Μπορείς να λύσεις αυτό το παζλ χρησιμοποιώντας
        το λιγότερο δυνατό αριθμό μπλοκ εντολών;"
      4-5 Maze 5_instruction: "Μπορείς να λύσεις αυτό το παζλ χρησιμοποιώντας το λιγότερο
        δυνατό αριθμό μπλοκ εντολών;"
      4-5 Maze 6 (copy 1)_instruction: "Μπορείς να λύσεις αυτό το παζλ χρησιμοποιώντας
        το λιγότερο δυνατό αριθμό μπλοκ εντολών;"
      4-5 Maze 6_instruction: "Μπορείς να λύσεις αυτό το παζλ χρησιμοποιώντας το λιγότερο
        δυνατό αριθμό μπλοκ εντολών;"
      4-5 Maze 7_instruction: "Άνθρωπε. Εγώ ζόμπι. Πρέπει... φτάσω... ηλιοτρόπιο."
      4-5 Maze 8_instruction: Χρησιμοποίησε το μπλοκ "Επανάληψη" για να μετακινηθεί
        το Ζομπι πρός τον Ηλίανθο. (αποφύγετε τους Φαγάνες)
      4-5 Maze 9_instruction: Δημιούργησε ενα βρόγχο με το μπλοκ "επανάλαβε μέχρι".
      4-5 Maze Assessment 1_instruction: "Αξιολόγηση: Πήγαινε στον ηλίανθο."
      4-5 Maze Conditionals 1_instruction: Χρησιμοποίησε το μπλοκ "Επανάλαβε μέχρι"
        για να οδηγηθεί το Ζόμπι στον Ηλίανθο.
      4-5 Maze Conditionals 2_instruction: Χρησιμοποίησε το μπλοκ "Επανάλαβε μέχρι"
        για να οδηγηθεί το Ζόμπι στον Ηλίανθο.
      4-5 Maze Conditionals 3_instruction: 'Χρησιμοποίησε το μπλοκ "εαν" ωστε να μπορώ
        να αποφασίζω πότε να στρίψω. Υπόδειξη: χρειάζεσαι μόνο ενα μπλοκ, αλλά μάθε
        πως το υλοποιούμε ώστε την επόμενη φορά να το κάνεις μόνος σου.'
      4-5 Maze Conditionals 4_instruction: Ωραία, αυτό είναι ακριβώς όπως το τελευταίο
        παζλ, αλλά πρέπει να θυμάσαι πως χρησιμοποίησες μαζί τα μπλοκ "εαν" και "επανάλαβε".
      4-5 Maze Conditionals 5_instruction: Εγώ θέλει Ηλιοτρόπιο! Χρησιμοποίησε ενα
        μπλοκ "εαν" για να το φτασεις με τον μικρότερο αριθμό μπλοκς.
      4-5 Maze Conditionals 6_instruction: Εγώ θέλει Ηλιοτρόπιο! Χρησιμοποίησε ενα
        μπλοκ "εαν" για να το φτασεις με τον μικρότερο αριθμό μπλοκς.
      4-5 Maze Conditionals 7_instruction: "Ωραία, ας κάνουμε πάλι το ίδιο για εξάσκηση
        - αυτό δεν είναι πολύ διαφορετικό, αλλά το νού σου τις Φαγάνες!"
      4-5 Maze Conditionals 8_instruction: Το μπλο "Εαν/αλλοιώς" ελέγχει μια κατάσταση
        και μετα κάνει μια ενέργεια 'Η μια άλλη. Για να φτάσω τον Ηλίανθο, προσπάθησε
        να χρησιμοποιήσεις αυτό το νεο μπλοκ.
      4-5 Maze Conditionals 9_instruction: Αλλη μια εξάσκηση του μπλοκ "εαν-αλλοιώς",
        μπορείς να το κάνεις σωστά με την πρώτη προσπάθεια;
      4-5 Maze Conditionals Assessment 1_instruction: Χρησιμοποίησε ένα μπλοκ "επανάλαβε
        μέχρι" και "εαν-αλλοιώς" για να φτάσω τον Ηλίανθο με όσο το δυνατόν λιγότερα
        μπλοκ.
      4-5 Nested Loops 1_instruction: "Συμπλήρωσε τον κώδικα για να ζωγραφίσεις αυτα
        τα τρίγωνα. Το πρώτο εχει γίνει για σένα. Υπόδειξη: 3 τρίγωνα, σε περιστροφή
        360 μοιρών."
      4-5 Nested Loops 10_instruction: "Ζωγράφισε την τελευταία γραμμή των αστεριών
        στην σημαία κάνοντας βρόγχο με τα μπλοκς που υπάρχουν. Τα αστέρια είναι 50
        εικονοστοιχεία μακριά, αλλά να θυμάστε ότι τα αστέρια έχουν φάρδος 30 εικονοστοιχεία."
      4-5 Nested Loops 11_instruction: "Μπορείς να ζωγραφίσεις αυτά τα 10 τετράγωνα
        του πεζοδρομίου χρησιμοποιώντας εναν βρόγχο που περιέχει έναν άλλο? Κάθε τετράγωνο
        εχει πλευρά 30 εικονοστοιχεία."
      4-5 Nested Loops 12_instruction: "Μπορείς να ζωγραφίσεις αυτά τα 36 τρίγωνα
        χρσιμοποιώντας εναν βρόγχο μέσα σε εναν άλλο;"
      4-5 Nested Loops 2_instruction: 'Τώρα βάλε αυτόν τον βρόγχο μέσα σε εναν άλλο
        για να ζωγραφίσεις 10 τρίγωνα. Αυτό ονομάζεται "ενθετος βρόγχος". Υπόδειξη:
        και τα 10 τρίγωνα μαζί ολοκληρώνουν μια περιστροφή 360 μοιρών.  '
      4-5 Nested Loops 3_instruction: |
        Δημιούργησε εναν ήλιο βάζοντας τον αρχικό κώδικα σε εναν άλλο βρόγχο. Αυτό ονομάζεται "ενθετος βρόγχος".\r
      4-5 Nested Loops 5_instruction: "Βάλε τον κώδικα που δίνεται σε εναν βρόγχο
        για να δημιουργήσεις εναν ανεμόμυλο."
      4-5 Nested Loops 6_instruction: "Μπορείς να ζωγραφίσεις ενα εξάγωνο βάζοντας
        σε βρόγχο τον κώδικα που δημιουργεί τρίγωνο;"
      4-5 Nested Loops 7_instruction: "Εκτέλεσε αυτό το σχέδιο 10 φορές. Πόσο πρέπει
        να το περιστρέφεις κάθε φορά που εκτελείς τον βρόγχο; (Υπόδειξη: Ποιό είναι
        το αποτέλεσμα της διαίρεσης του 360 με το 10;)"
      4-5 Nested Loops 8_instruction: "Εκτέλεσε αυτό το σχέδιο 6 φορές. Πόσο πρέπει
        να το περιστρέφεις κάθε φορά που εκτελείς τον βρόγχο; (Υπόδειξη: Ποιό είναι
        το αποτέλεσμα της διαίρεσης του 360 με το 6;)"
      4-5 Nested Loops 9_instruction: "Ζωγράφισε το δόντι στο στόμα του Αλιγάτορα!"
      4-5 Nested Loops Assessment 1_instruction: "Χρησιμοποίησε ενα ένθετο βρόγχο
        για να συμπληρώσεις το σχέδιο."
      4-5 While Loops 1_instruction: "Μαετακινήσου με στην τρύπα καιγέμισέ την με
        δύο φτυαριές \nβρωμιάς, χρησιμοποιώντας το μπλοκ \"γέμισε\".\n"
      4-5 While Loops 2_instruction: |
        Μετακίνησέ με στο σωρό της βρωμιάς και αφαίρεσέ τον με
        5 φτυαριές, χρησιμοποιώντας το μπλοκ "αφαίρεση".
      4-5 While Loops 3_instruction: "Μετακίνησέ με στη σωρό και μάζεψέ την όλη, μετά
        μετακίνησέ με στην τρύπα και γέμισέ την τελείως. Συμβουλή, χρησιμοποίησε όσο
        το δυνατό λιγότερα μπλοκ."
      4-5 While Loops 4_instruction: 'Πω πω, βρήκα μια πραγματικά βαθιά τρύπα! Δεν
        ξέρω πόσα φτιάρια χώμα χρειάζεται.  Μπορείτε να γράψετε ένα πρόγραμμα που
        να την συμπληρώνει μέχρι το έδαφοςνα  είναι ίσιο;  Συμβουλή: Προσπαθήστε να
        χρησιμοποιήσετε τον "ενώ" βρόχο.'
      4-5 While Loops 5_instruction: "Πω πω, τώρα υπάρχουν δύο βαθιές τρύπες! Μπορείτε
        να γράψετε ένα πρόγραμμα που να τις γεμίζει τόσο μέχρι το έδαφος να είναι
        ισιο;"
      4-5 While Loops 6_instruction: "Πω πω, τώρα υπάρχει ένα μεγάλο σωρό από βρωμιά!
        Μπορείτε να γράψετε ένα πρόγραμμα που να την μετακινεί, έτσι ώστε το έδαφος
        να είναι ίσιο;"
      4-5 While Loops 7_instruction: "Πω πω, τώρα υπάρχουν τρεις σωροί από χώμα! Μπορείτε
        να γράψετε ένα πρόγραμμα που να καθαρίζει κάθε ένα από αυτά μέχρι το έδαφος
        να είναι ίσιο;"
      4-5 While Loops 8_instruction: ' Υπάρχει μια πραγματικά βαθιά τρύπα και ένας
        σωρός χώμα.  Πόσες φτιαριές πρέπει να μετακινηθούν τριγύρω για να κάνει το
        έδαφος επίπεδο;  Υπόδειξη: Χρήση του "ενώ" βρόχος και για τα δύο.'
      4-5 While Loops Assessment 1_instruction: "Υπάρχουν πολλές τρύπες και σωροί.
        \ Βοήθησέ με να τους γεμίσω και να τους αφαιρέσω τους για να καταστήσω το
        έδαφος επίπεδο."
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: "Backed by a template #1. Please\nsign
        in to test applab levels (By design, applab levels only work if signed\nin.
        Normally, we make people sign in, but this is only enforceable for a whole\nscript
        and would be annoying to do for the allthethings script). \n"
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: |
        Do
        This
      App Lab test_instruction: "δοκιμή"
      Applab allthethings onRecordEvent_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: "Now nest this loop inside another loop\nto
        draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles\ncomplete
        a 360 degree rotation.  \n"
      Artist - Nested Loops 3_instruction: |
        Create a sun by nesting the starter code
        in another loop. This is called a nested loop.\r
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: |
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: Draw the teeth in the alligator's mouth!
      Artist - Nested Loops Assessment 1_instruction: "Χρησιμοποιήστε ένα ένθετο βρόχο
        να ολοκληρωθεί ο σχεδιασμός."
      Auto Open Function Editor_instruction: 'Μπορείς να καλέσεις λειτουργίες μέσα
        από άλλες λειτουργίες! Χρησιμοποιώντας την συνάρτηση "σχήμα" ως βάση, να δημιουργήσεις
        3 σχήματα σπιτιού με μέγεθος 20 εικονοστοιχεία μεγαλύτερο το κάθε ένα από
        το προηγούμενο. Χρησιμοποίησε ενα μετρητή στον βρόγχο. '
      Bee Recommended Blocks test_instruction: Τα μωβ λουλούδια μπορεί να έχουν είτε
        1 ή 0 νέκταρ, αλλά δεν γνωρίζετε ποιο από τα δύο! Προσέξτε να μην συλλέξετε
        νέκταρ από ένα μωβ λουλούδι, αν δεν έχει καθόλου. Ελέγξτε αν το νέκταρ είναι
        ίσο με 1 χρησιμοποιώντας το μπλοκ "αν".
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: |
        When you last worked on your game we got
        our target and danger sprites to fly across the screen, but they never come
        back. Click "Run" to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        When you last worked on your game
        we got our target and danger sprites to fly across the screen, but they never
        come back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Final_instruction: |
        You made it! At this point your game should be
        fully functioning, take some time to enjoy your new game and make any final
        tweaks to it. When you're happy with the final product, click Finish and
        you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      Busy Bee 2_instruction: "Αυτή η μέλισσα έχει πολλή δουλειά να κάνει! Παρατηρείτε
        οποιαδήποτε σχέδια που μπορείτε να χρησιμοποιήσετε για να απλοποιήσετε τον
        κωδικά σας;"
      Busy Bee_instruction: "Αυτή η μέλισσα έχει πολλή δουλειά να κάνει! Παρατηρείτε
        οποιαδήποτε σχέδια που μπορείτε να χρησιμοποιήσετε για να απλοποιήσετε τον
        κωδικά σας;"
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: |-
        Your school is holding a bake sale, and
        you need to track the cost of making each cookie, the money paid, and the
        total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r
        Write
        the function cost, which takes in the number of cookies you intend to sell,
        and returns the cost of making those cookies.
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: |
        In the last puzzle you wrote a contract
        for the function "rocket-height" that states it has a range of Number, domain
        of Number, and should return the height of the rocket traveling at 15 m/s
        after a given number of seconds. Let's write an example case now for the
        height of the rocket at 3 seconds.\r
        \r
        \r
        \r
          \r
        \r
      Calc Rocket 1_instruction: |
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200
        pixels long. \n"
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. \n"
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. \n"
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. \n"
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach
        segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe
        nectar from these flowers? \n"
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: "Μπορείς να με πάς στο γουρουνάκι χρησιμοποιώντας
        5 μπλόκ;"
      Course 4 2_instruction: "Η μέλισσα θέλει μόνο νέκταρ αυτή τη στιγμή. Θυμηθείτε,
        δεν είναι όλα τα αντικείμενα λουλούδια, έτσι ελέξτε για να συγκεντρώσετε το
        νέκταρ μόνο των λουλουδιών."
      Course 4 Artist 1_instruction: "Βοήθησέ με να τελειώσω τη σχεδίαση του κουτιού
        μου. (Κάθε γραμμή είναι 200 εικονοστοιχεία) "
      Course 4 Artist 10_instruction: "Κάντε κλικ εδώ για να δείτε τις υποδείξεις
        και πάλι! \\r \\r εδώ είναι ο κώδικας για ένα ενδιαφέρον σχήμα.  Τι θα συμβεί
        όταν θα το επαναλάβετε πολλές φορές, κάνοντας στροφή μεταξύ κάθε επανάληψης;
        \ Προσέξτε ότι οι στροφές σε αυτό το σχήμα προσθέτουν έως 420 μοίρες, που
        σημαίνει ότι όταν ο καλλιτέχνης σας τελειώσει το σχέδιο, αυτό θα εχειι μια
        διαφορετική κατεύθυνση από ό, τι όταν άρχισε.  Αυτή την κατεύθυνση είναι ακριβώς
        60 μοίρες προς τα δεξιά από όπου αρχίσες."
      Course 4 Artist 11_instruction: "Τώρα για μια πρόκληση!  Εδώ είναι ένα σχέδιο
        που χρησιμοποιεί μόνο το μπλοκ που σας έχουν ήδη υποδειχθεί.  Μποείτε να καταλάβετε
        πώς να το αναδημιουργήσετε;  Νιώστε ελεύθεροι να χρησιμοποιήστε την δυνατότητα
        δοκιμής και λάθους. Δεν αναμένεται να ειναι τέλειο, την πρώτη φορά.  Θέλετε
        να δείτε περισσότερες συμβουλές;  Κάντε κλικ εδώ!"
      Course 4 Artist 12_instruction: "Θέλετε μια δεύτερη ματιά στο σχεδιασμό έμπνευσης
        ή τις υποδείξεις;  Κάντε κλικ εδώ! \\r \\r διαφορετικά, κάνετε ένα σχέδιο
        όλο δικό σας!"
      Course 4 Artist 13_instruction: "Εξακολουθείτε να παίζετε;  Εδώ είναι ένας κενόςκαμβάς
        όπου μπορείτε να σχεδιάσετε οτι θέλετε!"
      Course 4 Artist 2_instruction: "Μπορεί να μπορείτε να επαναλάβετε αυτόν τον
        κώδικα για να ζωγραφίσετε το γκριζαρισμένο τετράγωνο;"
      Course 4 Artist 20_instruction: "Εξακολουθείτε να παίζετε;  Εδώ είναι ένας κενός
        καμβάς όπου μπορείτε να δημιουργήσεις ό, τι θέλεις!"
      Course 4 Artist 3_instruction: Προσπαθείστε να καταλάβετε τι συμβαίνει εάν εκτελέσετε
        αυτόν τον κώδικα (ή πατήστε "Εκτέλεση", για να το δοκιμάσετε). Στη συνέχεια,
        επαναλάβετε αρκετές φορές για να ολοκληρωθεί το σχέδιο.
      Course 4 Artist 4_instruction: Πόσες μοίρες είναι σε έναν κύκλο;  Συμπληρώστε
        το" επαναλάβετε" μπλοκ με αυτό τον αριθμό για να δημιουργήσετε έναν κύκλο
        χρωμάτων.
      Course 4 Artist 5_instruction: "Ζωγραφίστε το άλλο ήμισυ αυτού του σχεδίου ώστε
        να είναι συμμετρικό. Τα τρίγωνα είναι Ισόπλευρο με πλευρά 50 pixel. Υπόδειξη:
        Ίσως χρειαστεί να εκτελέσετε τον κώδικα αρκετές φορές να καταλάβετε όλα τα
        μπλοκ που πρέπει να προστεθούν."
      Course 4 Artist 6_instruction: "Ολοκληρώσετε τον κώδικα για να σχεδιάσετε αυτά
        τα τρίγωνα. Υπόδειξη: Υπάρχουν 3 τρίγωνα μέσα στην περιστροφή 360 μοιρών...
        Πόσες φορές χωράει το 3 στο 360;"
      Course 4 Artist 7_instruction: "Βάλτε αυτό το βρόχο μέσα σε ένα άλλο βρόχο για
        να σχεδιάσετε 10 τρίγωνα. Αυτό ονομάζεται ένθετος βρόχος. Συμβουλή: Όλα τα
        10 τρίγωνα ολοκληρώνουν μια περιστροφή 360 μοιρών.  "
      Course 4 Artist 8_instruction: "Ζωγραφίστε τον ήλιο βάζοντας βρόχο με όλο το
        μπλοκ κώδικα πολλές φορές."
      Course 4 Artist 8a_instruction: "Θυμάστε αυτό το σχήμα;  Τώρα θα σας επιτρέψουμε
        να οικοδομήσετε χωρίς να έχετε κανένα μπλοκ! \\r υπόδειξη: υπάρχουν 3 τρίγωνα
        εντός περιστροφής 360 μοιρών... Πόσες φορές χωράει το 3 στο 360;"
      Course 4 Artist 9_instruction: "Κάντε Βρόχο αυτό το σχέδιο 10 φορές και σιγουρευτείτε
        να αλλάζετε μεταξύ κάθε σχήματος που σχεδιάζεται. Εδώ είναι μια υπόδειξη για
        το πόσο θα πρέπει να στρίψετε: Πόσο κάνει 360 δια 10;"
      Course 4 Artist Binary 1_instruction: |-
        Αυτή είναι μια λειτουργία που παίρνει μια διαδυκή σειρά από 1 και 0 και οδηγεί τον καλλιτέχνη να τα ακολουθήσει από αριστερά στα δεξιά και από πάνω προς τα κάτω. Ο καλλιτέχνης θα γεμίζει τα τετράγωνα όταν βλέπει ένα 1 και θα τα αγνοεί όταν βλέπει 0. \r
        \r
        Τρέξε τον κώδικα και δες πως ο καλλιτέχνης χρησιμοποιεί το διαδυκό σύστημα για να ζωγραφίσει το σχέδιό του.
      Course 4 Artist Binary 1a_instruction: |-
        Αυτή είναι μια λειτουργία που παίρνει μια διαδυκή σειρά από 1 και 0 και οδηγεί τον καλλιτέχνη να τα ακολουθήσει από αριστερά στα δεξιά και από πάνω προς τα κάτω. Ο καλλιτέχνης θα γεμίζει τα τετράγωνα όταν βλέπει ένα 1 και θα τα αγνοεί όταν βλέπει 0. \r
        \r
        Τρέξε τον κώδικα και δες πως ο καλλιτέχνης χρησιμοποιεί το διαδυκό σύστημα για να ζωγραφίσει το σχέδιό του.
      Course 4 Artist Binary 2_instruction: "Ποια από αυτές τις δυαδικές χορδές θα
        μπορούσε να σας κάνει βρόχο 8 φορές και να ζωγραφίσει την εικόνα αυτή;"
      Course 4 Artist Binary 3_instruction: "Μπορείτε να ζωγραφίσετε το σχέδιο αυτό
        κάνοντας βρόχο μια σειρά από τριψήφιους δυαδικούς;"
      Course 4 Artist Binary 4_instruction: "Κάθε δυαδική σειρά αντιπροσωπεύει μία
        γραμμή από αυτή την εικόνα. Μπορείτε να τα αναδιατάξετε και έτσι να βγάζει
        ένα χαμογελαστό πρόσωπο αντί για ένα σκυθρωπό;"
      Course 4 Artist Binary 5_instruction: "Ποιά 6 ψηφία δυαδική συμβολοσειρά, αν
        επαναληφθεί 11 φορές, θα σχεδιάσει την εικόνα αυτή;"
      Course 4 Artist Binary 6_instruction: "Ποιά είναι η συντομότερη δυαδική συμβολοσειρά
        που μπορείτε να επαναλάβετε για να σχεδιάσετε την εικόνα αυτή;"
      Course 4 Artist Binary 7_instruction: "Τελειώστε αυτό το σχέδιο."
      Course 4 Artist Binary Free Play 2_instruction: "Ελεύθερο σχέδιο: Εδώ είναι
        ένας κενός καμβάς για να ζωγραφίσετε.  Να περάσετε καλά!"
      Course 4 Artist Binary Free Play 2a_instruction: |-
        Εδώ είναι ένας καμβάς με υψηλότερη ανάλυση για να σχεδιάσετε. 16 πίξελ επί 16 πίξελ! \r
        \r
        Δείτε τι μπορεί να συμβεί όταν γινόμαστε δημιουργικοί με τα κομμάτια;
      Course 4 Artist Binary Free Play 2b_instruction: "Κάντε κλικ εδώ για να δείτε
        υποδείξεις."
      Course 4 Artist Binary Free Play_instruction: "Ελεύθερο σχέδιο: Σχεδιάσετε ό,
        τι θελετε με το δυαδικό!"
      Course 4 Artist Binary pre1_instruction: |-
        Το δυαδικόσύστημα είναι ένας τρόπος να παρουσιάζεις πληροφορίες χρησιμοποιώντας μόνο δυο επιλογές. Εδώ θα χρησιμοποιήσουμε την επιλογή "κλειστό" ( αντιπροσωπεύετε από το 0) και "ανοικτό" ( με το ψηφίο 1).\r
        \r
        Σας έχουμε δώσει ένα πλέγμα από πίξελ από το οποία περνάτε και κάνετε σχέδια στρίβοντας σε κάποια τετράγωνα. Μπορείτε  να βάλετε τον καλλιτέχνη να ζωγραφίσει "01010101" σε δυαδικό στην πρώτη σειρά;
      Course 4 Artist Binary ryan_instruction: |-
        Το δυαδικόσύστημα είναι ένας τρόπος να παρουσιάζεις πληροφορίες χρησιμοποιώντας μόνο δυο επιλογές. Εδώ θα χρησιμοποιήσουμε την επιλογή "κλειστό" ( αντιπροσωπεύετε από το 0) και "ανοικτό" ( με το ψηφίο 1).\r
        \r
        Σας έχουμε δώσει ένα πλέγμα από πίξελ από το οποία περνάτε και κάνετε σχέδια στρίβοντας σε κάποια τετράγωνα. Μπορείτε  να βάλετε τον καλλιτέχνη να ζωγραφίσει "01010101" σε δυαδικό στην πρώτη σειρά;
      Course 4 Artist For  Functions 10_instruction: Ας προχωρήσουμε παρακάτω! Μπορείτε
        να ζωγραφίσετε ένα αστέρι χρησιμοποιώντας την λειτουργία "Ζωγράφισε μια τετράγωνη
        γραμμή"? Καλή τύχη!
      Course 4 Artist For  Functions 11_instruction: Ας προχωρήσουμε παρακάτω! Μπορείτε
        να ζωγραφίσετε ένα αστέρι χρησιμοποιώντας την λειτουργία "Ζωγράφισε μια τετράγωνη
        γραμμή"? Καλή τύχη!
      Course 4 Artist For Loops 1_instruction: "Σχεδιάσετε αυτό το τρίγωνο με 50 pixels
        πλάτος. Hint: Χρησιμοποιείστε ένα μπλοκ επανάληψης."
      Course 4 Artist For Loops 10_instruction: "Ελέυθερη ώρα! Ζωγραφίστε ότι θέλετε
        με τα μπλοκ που μάθατε"
      Course 4 Artist For Loops 11_instruction: Θυμάστε στο προηγούμενο στάδιο που
        χρησιμοποιήσαμε μια μεταβλητή για να ελέξουμε τον αριθμό των πλευρών ενός
        σχήματος? Τώρα θα κάνουμε το ίδιο με την μεταβλητή "counter" τώρα. Αυτό το
        μοτίβο αρχίζει με ένα τρίγωνο και κάθε φορά πρσθέτει μια πλευρά έως ότου γίνει
        ένα δεκάγωνο(10 πλευρές). Κάθε πλευρά έχει 100 πίξελ μήκος. Συμβουλή, αν διαιρέσετε
        το 360 με τον αριθμό των πλευρών του κάθε σχήματος, θα έχετε τον αριθμό των
        μοιρών της γωνίας στην οποία θα στρίψετε.
      Course 4 Artist For Loops 11a_instruction: |-
        Ας ανακεφαλαιώσουμε. Χρησιμοποιώντας το "για βρόχους" και "counter" δημιουργήστε αυτήν τη ζωγραφιά όπου κάθε σχήμα θα έχει δυο παραπάνω πλευρές από το προηγούμενο. Βεβαιωθήτε πως κάθε πλευρά είναι ο αριθμός των πλευρών του πολυγώνου επί 10.\r
        \r
        σας δίνουμε πολύ λίγο κώδικα.
      Course 4 Artist For Loops 12_instruction: "Αυτό έδειχνε καλό αλλά τώρα θα πρέπει
        να ζωγραφήσουμε κάθε σχήμα δίπλα στο άλλο. Η πλευρά τους θα είναι 20 πίξελ.
        Χρησιμοποιήστε μπλοκ αναπήδησης μπρος κατά 40 πίξελ μετά από κάθε σχήμα. "
      Course 4 Artist For Loops 13_instruction: "Τελικά τα σχήματα ολοένα και μεγαλώνουν!
        Αλλά δεν έχουμε ήδη λύσει το πρόβλημα με τις μεταβλητές? Πως θα χρησιμοποιήσουμε
        την μεταβλητή μέτρησης για να κάνουμε τις πλευρές μικρότερες καθώς γίνονται
        όλο και περισσότερες? Αντί να πάμε μπρος κατά ένα δεδομένο αριθμό ας πάμε
        μπροστά (100/μέτρα) πίξελ."
      Course 4 Artist For Loops 14_instruction: "Αν στρίψετε λιγότερο ή περισσότερο
        για ένα σχήμα, το αποτέλεσμα είναι ωραιότερο. Προσπαθήστε να χρησιμοποιήσετε
        κάποιο κώδικα από το τελευταίο επίπεδο αλλά να στρίψετε 89 μοίρες για να δημιουργηθεί
        ένα μπερδεμένο τετράγωνο σπιράλ."
      Course 4 Artist For Loops 15_instruction: 'Ελεύθερο παιχνίδι: Δοκιμάστε να κάνετε
        κάποια σχέδια δικά σας χρησιμοποιώντας το"για βρόχους". Έχουμε προσθέσει μερικές
        χρήσιμες μεταβλητές για σας επίσης.'
      Course 4 Artist For Loops 2_instruction: 'Έχω βάλει τον κώδικα για τον σχεδιασμό
        ενός τριγώνου μέσα σε ένα "για" βρόχο που μετράει από 50 έως 100 ανα 10.  Σημείωση:
        Βεβαιωθείτε ότι ρίχνετε μια ματιά στον κώδικα προτού να χτυπήσετε "Εκτέλεση".'
      Course 4 Artist For Loops 3_instruction: |
        Χρησιμοποιήστε το τελευταίο παζλ ως σημείο αναφοράς για να ολοκληρωθεί αυτό.  Το μικρότερο τρίγωνο έχει 20 pixel πλευρές, το μεγαλύτερο έχει 200 pixel πλευρές και κάθε τρίγωνο είναι μεγαλύτερο από το προηγούμενο κατά 20 pixel.
      Course 4 Artist For Loops 4_instruction: "Πώς θα τροποποιούσατε ότι μάθατε για
        να ζωγραφίσετε αυτά τα τετράγωνα? Αρχίζουν με πλευρά 15 πίξελ, το μεγαλύτερο
        είναι 300 πίξελ και κάθε ένα 15 πίξελ μεγαλύτερο από το προηγούμενο. "
      Course 4 Artist For Loops 5_instruction: 'Καλή δουλειά για το τελευταίο παζλ!
        Ας χρησιμοποιήσουμε το μπλοκ με τη μεταβλητή "αντι" και πάλι για να σχεδιάσουμε
        αυτή την εικόνα. '
      Course 4 Artist For Loops 6_instruction: "Ελεύθερο παιχνίδι! Προσπάθησε να χρησιμοποιήσεις
        εναν βρόγχο \"για\" ώστε \nνα ζωγραφίσεις ενα σχήμα που θα μεγαλώνει.\n"
      Course 4 Artist For Loops 6a_instruction: "Κάνε τρεις μικρές αλλαγές στον κώδικα
        από το τελευταίο επίπεδο για να το πετύχεις!"
      Course 4 Artist For Loops 7_instruction: Τι συμβαίνει αν αφαιρέσεις το "επανάλαβε
        3" από τον αλγόριθμο, ενω κρατήσεις τα μπλοκς "προχώρησε" και "στρίψε" στον
        βρόγχο "για"; Σε αυτό το σπειροειδές τρίγωνο, κάθε πλευρά εχει μήκος 20 εικονοστοιχεία
        περισσότερο από το τελευταίο.
      Course 4 Artist For Loops 8_instruction: |-
        μόνο μια μικρή αλλαγή στον κώδικα από την τελευταία εικόνα μπορεί να δημιουργήσει αυτήν την εικόνα. Μπορείς να βρεις ποιά είναι αυτή η αλλαγή?\r
        \r
        Υπόδειξη: Πρέπει να αφαιρέσεις κάτι!
      Course 4 Artist For Loops 8a_instruction: "μόνο μια μικρή αλλαγή στον κώδικα
        από την τελευταία εικόνα μπορεί να δημιουργήσει αυτήν την εικόνα. Μπορείς
        να βρεις ποιά είναι αυτή η αλλαγή;"
      Course 4 Artist For Loops 9_instruction: "Μπορείς να κάνεις ενα σπιραλ? Κινήσου
        μπροστά από 1 εως 75 εικονοστοιχεία, αυξάνοντας κατά 1 εικονοστοιχείο καθε
        φορά."
      Course 4 Artist For Loops Challenge_instruction: |-
        Μπορείς να χρησιμοποιήσεις ολα όσα έμαθες μέχρι τώρα για να δημιουργήσεις αυτήν την εικόνα; \r
        \r
        Χρειάζεσαι μια υπόδειξη; κάνε κλικ εδώ.
      Course 4 Artist For Loops inspire_instruction: |-
        Εμπνευση ελεύθερου παιχνιδιού: Τώρα εχεις μάθει ό, τι χρειάζεται για να δημιουργείς ενα πρότυπο σαν αυτό! Αν αυτή η εικόνα σε εμπνέει, προσπάθησε να κάνεις κάτι παρόμοιο. Αλλοιώς, δημιούργησε κάτι τελείως δικό σου.\r
        \r
        Χρειάζεσαι υπόδειξη; Κάνε κλικ εδώ.
      Course 4 Artist Functions 1_instruction: "Μπορείς να ζωγραφίσεις ενα τετράγωνο
        που έχει πλευρά μήκους 100 εικονοστοιχείων, χρησιμοποιώντας εναν βρόγχο;"
      Course 4 Artist Functions 10_instruction: "Ποιό μπλοκ χρειάζεσαι ώστε το τρίγωνο
        να τοποθετηθεί πάνω στο τετράγωνο;"
      Course 4 Artist Functions 11_instruction: Δες αυτόν τον κώδικα που ζωγραφίζει
        εναν κύβο - μπορείς να τον μεταφέρεις σε μια συνάρτηση με όνομα "Ζωγράφισε
        εναν κύβο"
      Course 4 Artist Functions 12.1_instruction: Ας δημιουργήσουμε μια συνάρτηση
        με όνομα "ζωγράφισε ενα οκτάγωνο 20" που ζωγραφίζει ενα οκτάγωνο με πλευρά
        μήκους 20 εικονοστοιχείων.
      Course 4 Artist Functions 12_instruction: "Βάλε σε βρόγχο την συνάρτηση τετραγώνου
        για να ζωγραφίσεις μια γραμμή"
      Course 4 Artist Functions 13.1_instruction: |-
        Τώρα ας κάνουμε μια συνάρτηση με όνομα "πήδηξε πάνω δεξιά" που μετακινεί τον καλλιτέχνη στην πάνω δεξιά γωνία του οκταγώνου που μόλις ζωγράφισες ώστε να τελειώσουμε αυτό το πρότυπο.\r
        \r
        Υπόδειξη: για να μεταφερθείς στην πάνω δεξια γωνία, προσπάθησε να πηδήξεις σε ενα πρότυπο που φτιάχνει τα 3/8 του οκτάγωνου.
      Course 4 Artist Functions 13_instruction: Ελέξτε μια νέα λειτουργία με τίτλο
        "σχεδιασμός γραμμής από τετράγωνα". Ρίξε μια ματιά στο μπλοκ να δείς πως χτίζεται.
        Κάνε κλικ στο κουμπί "Εκτέλεση" όταν είσαι ετοιμος για το επόμενο παζλ.
      Course 4 Artist Functions 14.1_instruction: Τώρα, ας κάνουμε μια συνάρτηση που
        ονομάζεται "άλμα πάνω δεξιά" που μετακινεί τον καλλιτέχνη στην επάνω δεξιά
        γωνία του Οκταγώνου που μόλις σχεδίασες προκειμένου να τελειώσουμε αυτό το
        μοτίβο.
      Course 4 Artist Functions 14_instruction: Τα πας περίφημα! Ας χρησιμοποιήσουμε
        την νέα σου συνάρτηση "σχεδιασμός γραμμής από τετράγωνα" για να σχεδιάσεις
        ένα τετράγωνο σχήμα. Θυμήσου κάθε τετράγωνο είναι 40 pixels σε μήκος.
      Course 4 Artist Functions 15_instruction: 'Ας κάνουμε άλλο ένα βήμα, μπορείς
        να σχεδιάσεις ένα αστέρι χρησιμοποιώντας την λειτουργία "σχεδιασμός γραμμής
        από τετράγωνα"; Καλή τύχη! Υπόδειξη: μπορεί να πρέπει να περιστραφείς 144
        μοίρες'
      Course 4 Artist Functions 2_instruction: "Μπορείς να σχεδιάσεις 3 τετράγωνα
        με απόσταση 20 εικονοστοιχεία μεταξύ τους; Υπόδειξη: κάθε τετράγωνο έχει πλευρά
        100 εικονοστοιχεία"
      Course 4 Artist Functions 3_instruction: |
        Μπορείς να σχεδιάσεις αυτήν την εικόνα, χρησιμοποιώντας την συνάρτηση "Σχεδιασμός τετραγώνου"; Υπόδειξη: κάθε τετράγωνο απέχει από το άλλο 120 εικονοστοιχεία. \r
      Course 4 Artist Functions 4_instruction: 'Είσαι έτοιμος να δημιουργήσεις το
        δικό σου "Μπλοκ λειτουργίας"; Κάνε κλικ στο μπλοκ "Συναρτήσεις" στην εργαλειοθήκη,
        ονομάστε την "σχεδίαση τριγώνου" και δημιούργησε ενα τρίγωνο όπως έκανες πρινν
        με τα μπλοκ Ενέργεια και Επανάληψη. Στην συνέχεια κάνε κλικ στο Αποθήκευσση
        και Τέλος στην πάνω δεξια γωνία. Υπόδειξη: Δημιούργησε ενα τρίγωνο με διάσταση
        100 εικονοστοιχεία. Καλή τύχη!'
      Course 4 Artist Functions 5 OLD_instruction: "Ας προσπαθήσουμε να χρησιμοποιήσουμε
        τις δύο λειτουργίες μας για να σχεδιάσουμε ένα σπίτι - τι πρέπει να διορθωθεί
        σε αυτόν τον κώδικα για να σχεδιάσεις το σπίτι, σωστά;"
      Course 4 Artist Functions 5_instruction: |
        Μπορείς να σχεδιάσεις αυτήν την εικόνα, χρησιμοποιώντας την συνάρτηση "Σχεδιασμός τετραγώνου"; Υπόδειξη: κάθε τετράγωνο απέχει από το άλλο 120 εικονοστοιχεία. \r
      Course 4 Artist Functions 6_instruction: "Ποιό μπλοκ χρειάζεσαι ώστε το τρίγωνο
        να τοποθετηθεί πάνω στο τετράγωνο;"
      Course 4 Artist Functions 7_instruction: "Μπορείς να σχεδιάσεις μια γραμμή χρησιμοποιώντας
        την συνάρτηση Τετράγωνα; Κάθε τετράγωνο έχει πλευρά 40 εικονοστοιχεία."
      Course 4 Artist Functions 8_instruction: 'Καταλαβαίνεις πως να χρησιμοποιείς
        τα μπλοκ λειτουργιών; Τροποποίησσε αυτό το τετράγωνο ώστε να εχει μήκος 200
        εικονοστοιχεία. Υπόδειξη: κλικ στο "αλλαγή" για να αλλάξεις το μέγεθος της
        λειτουργίας "σχεδίασε ενα τετράγωνο". Θυμήσου να κάνεις κλικ στο "αποθήκευση
        και τελος" για να αποθηκεύσεις την αλλαγή. '
      Course 4 Artist Functions 9_instruction: "Σου έχουμε δώσει το μεγαλύτερο μέρος
        του κώδικα για να δημιουργήσεις μια συνάρτηση. Ωστόσο φαίνεται να υπάρχει
        κάτι που λείπει. Μπορείς να τελειοποιήσεις αυτο το μπλοκ συνάρτησης;"
      Course 4 Artist Functions challenge_instruction: "Κάνε κλικ εδώ για να δείς
        τις υποδείξεις και πάλι."
      Course 4 Artist Functions Inspiration_instruction: "Κάνε κλικ εδώ για να δείς
        τις υποδείξεις και πάλι."
      Course 4 Artist Functions inspire_instruction: "Κάνε κλικ εδώ για να δείς την
        εικόνα έμπνευσης και πάλι."
      Course 4 Artist Inspire_instruction: "Θέλις να κρυφοκοιτάξεις πάλι στον \nσχεδιασμό
        ή τις υποδείξεις; Κάνε κλικ εδώ!\\r\n\\r\nΑλλοιώς κάνε ένα τελείως δικό σου\nσχεδιασμό!"
      Course 4 Artist Params 1_instruction: |
        Ας επεξεργαστούμε μια συνάρτηση που
        σχεδιάζει ένα τετράγωνο πλευράς
        50 εικονοστοιχείων
      Course 4 Artist Params 10_instruction: 'Μπορείς να καλέσεις λειτουργίες μέσα
        από άλλες λειτουργίες! Χρησιμοποιώντας την συνάρτηση "σχήμα" ως βάση, να δημιουργήσεις
        3 σχήματα σπιτιού με μέγεθος 20 εικονοστοιχεία μεγαλύτερο το κάθε ένα από
        το προηγούμενο. Χρησιμοποίησε ενα μετρητή στον βρόγχο. '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: "Χρησιμοποίησε την λειτουργία \"ανεμόμυλος\"
        για να σχεδιάσεις \nκάθε σχήμα. Η πλευρά κάθε σχήματος είναι 50 εικονοστοιχεία.\n"
      Course 4 Artist Params 13_instruction: "Ελεύθερο παιχνίδι: Αυτές είναι οι συναρτήσεις
        που εγραψες, και μερικές ακόμη για να παίξεις. Σχεδίασε κάτι φοβερό!"
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: "Φοβερό, μπορείτε να ζωγρααφίσετε κάθε
        ενα από αυτά τα τρίγωνα με αυτήν την νέα λειτουργία; Το πρώτο έχει μήκος 25
        εικονοστοιχεία, το δεύτερο είναι 50 και το τρίτο 75. "
      Course 4 Artist Params 4_instruction: "Μπορείς να προσθέσεις μιά νέα λειτουργία
        με τίτλο Τετράγωνο; Πρέπει να παίρνει και αυτή σαν παράμετρο το μήκος, όπως
        και στο τρίγωνο. Αυτή την φορά σχεδιάστε 3 τατράγωνα με πλευρές 25, 50 και
        75 εικονοστοιχεία, με απόσταση το ενα από το άλλο 100 εικονοστοιχεία."
      Course 4 Artist Params 5_instruction: |
        Χρησιμοποίησε και τις δύο νέες λειτουργίες σας για να σχεδιάσετε αυτήν την εικόνα. Για διευκόλυνση χρησιμοποιείστε έναν βρόγχο με μιά παράμετρο "μετρητή".
      Course 4 Artist Params 6_instruction: "Ας αλλάξουμε αυτήν την λειτουργία \"σχεδίασε
        ενα σχήμα\". \nΕχει ήδη μια παράμετρο \"μήκος\". Τώρα, αας αλλάξουμε την λειτουργία
        και να προσθέσουμε μια παράμετρο \"πλευρές\". Θυμηθείτε η γωνία περιστροφής
        ενός σχήματος είναι το αποτέλσμα της διαίρεσης 360 με τον αριθμό των πλευρών
        του. Υπόδειξη: τα μήκη των σχημάτων είναι 100 εικονοστοιχεία για το τρίγωνο,
        25 για το εξάγωνο και 50 για το τετράγωνο. \n"
      Course 4 Artist Params 7_instruction: 'Μπορείτε να σχεδιάστε αυτά τα σχήματα,
        συμπληρώνοντας το "???» Το τετράγωνο και το τρίγωνο είναι 100 εικονοστοιχεία
        σε μέγεθος ενώ το εξάγωνο είναι 75. '
      Course 4 Artist Params 8_instruction: |
        Μπορείς να βρεις πως μπορεί να σχεδιαστεί αυτό το σχήμα; Υπόδειξη: δημιουργήστε μια νεα λειτουργία με 6 πλευρές και τίτλο Εξάγωνο.
      Course 4 Artist Params 9_instruction: Θυμάσαι όταν χρησιμοποιήσαμε τον βρόγχο
        καταμέτρησης αλλά βγάλαμε εναν βρόγχο από μέσα; Ας διασκεδάσουμε λίγο χρησιμοποιώτας
        την λειτουργία "σχεδίασε ενα σχήμα" με παραμέτρους "πλευρές" και "μήκος".
        Μπορείς να ξανασχηματίσεις αυτά τα σχήματα; Ο μετρητής για το τετράγωνο πρέπει
        να είναι 5/100/5, για το τρίγωνο 10/100/10 και για το εξάγωνο 2/100/2.
      Course 4 Artist Var 9_instruction: 'Εδώ είναι ο αλγόριθμος για να σχεδιάσεις
        ένα τρίγωνο, άλλαξέ τον ώστε να χρησιμοποιεί τη μεταβλητή «πλευρές». Αντικατάστησε
        τον αριθμό 3 με τη μεταβλητή «πλευρές». Υπόδειξη: Θυμήσου να χρησιμοποιήσεις
        το μπλοκ "Ορισμός πλευρών".'
      Course 4 Artist Vars 1_instruction: "Μπορείς να με βοηθήσεις να σχεδιάσω ένα
        τρίγωνο; Έχει 100 εικονοστοιχεία μήκος σε κάθε πλευρά."
      Course 4 Artist Vars 10_instruction: "Εδώ είναι ένας αλγόριθμος που σχεδιάζει
        ένα τρίγωνο από μικρότερα τρίγωνα. Μπορείς να τον τροποποιήσεις έτσι ώστε
        να χρησιμοποιεί τη μεταβλητή «πλευρές» για να σχεδιάσει κάθε τρίγωνο; Κοίταξε
        μέσα στον κώδικα, και κάθε φορά που βλέπεις τον αριθμό 3, αντικατάστησέ τον
        με μεταβλητή «πλευρές». Θυμ'ησου να χρησιμοποιήσεις το μπλοκ «ορισμός πλευρών»."
      Course 4 Artist Vars 11_instruction: "Εδώ είναι πιο περίπλοκος κώδικας που χρησιμοποιεί
        τις ίδιες έννοιες με το τελευταίο παζλ - τι τιμή πρέπει να έχει η μεταβλητή
        «πλευρές» να ώστε να καταλήξουμε σε αυτή την εικόνα φτιαγμένη από τετράγωνα;"
      Course 4 Artist Vars 12_instruction: Ας ορίσουμε τη μεταβλητή «πλευρές» να έχει
        την τιμή. Οσο περισσότερες πλευρές προσθέτουμε στον αλγόριθμο αυτό, τόσο μεγαλύτερο
        γίνεται το μοντέλο! Παρατηρήστε ότι υπάρχει μια άλλη μεταβλητή, που ονομάζεται
        "μήκος". Τώρα μπορούμε να τη χρησιμοποιήσουμε όποτε έχουμε μια «κίνηση προς
        τα εμπρός.» Ορίστε τη μεταβλητή «μήκος» στν τιμή 75 για αυτό το σχήμα.
      Course 4 Artist Vars 13_instruction: |-
        Οταν ένα σχήμα έχει πολλές πλευρές, κάθε πλευρά πρέπει να είναι κοντύτερη αν θέλετε όλο το σχήμα να χωράει στην οθόνη.
        \r
        Ας δημιουργήσουμε τον αλγόριθμο για αυτό το εκπληκτικό σχήμα, αλλά αντί να ορίζουμε εμείς την τιμή της παραμέτρου "μήκος", ας χρησιμοποιήσουμε ενα μαθηματικό μπλοκ με την μεταβλητή "πλευρές" μέσα για να είμαστε σίγουροι ότι κάθε σχήμα χωράει σωστά. Η περίμετρος κάθε πολυγώνου είναι 300 εικονοστοιχεία.\r
        Xρειάζεσααι υποδείξεις;  Κάνε κλικ εδώ.
      Course 4 Artist Vars 14_instruction: "Ελεύθερο παιχνίδι: 'Ελεγξέ το τώρα! Τώρα
        ο αλγόριθμός σου περιέχεται σε εναν ακόμη βρόγχο. Πειραματίσου αλλάζοντας
        τις τιμές των δύο μεταβλητές σου να σχεδιάσεις φοβερα μοτίβα. \\r \\r Για
        ακόμη πιό φαντασμαγορικό αποτέλεσμα, δοκίμασε να παίξεις με το χρώμα!  Χρησιμοποίησε
        τυχαία χρώματα στο εσωτερικό βρόχους για να δεις πώς αλλάζει το σχέδιό σου."
      Course 4 Artist Vars 2_instruction: Αντί να χρησιμοποιεί "Μετακίνηση προς τα
        εμπρός κατά 150", το μπλοκ "κίνηση" αναφέρεται σε μια μεταβλητή που ονομάζεται
        "μήκος". Μπορείς να ορίσεις το "μήκος" σε 150 για να σχεδιαστεί αυτό το νέο
        τρίγωνο;
      Course 4 Artist Vars 3_instruction: "Εδώ είναι ένας βρόχος που σχεδιάζει ένα
        τετράγωνο, αλλά κάτι λείπει. Μπορείς να το διορθώσεις έτσι ώστε να χρησιμοποιεί
        τη μεταβλητή «μήκος» για να ορίσει το μήκος κάθε πλευράς; "
      Course 4 Artist Vars 4_instruction: Τώρα θέλω να κάνω ένα ορθογώνιο που το ύψος
        του είναι δύο φορές το πλάτος του. Έχουμε μια μεταβλητή που ονομάζεται "Πλάτος"
        που πρέπει να πάρει την τιμή 100. Μπορείς να χρησιμοποιήσεις τα μαθηματικα
        μπλοκ για να συμπληρώσεις τον κώδικα;
      Course 4 Artist Vars 5_instruction: "Χρησιμοποίησε τη μεταβλητή «πλευρές» για
        να ελέγξεις πόσες φορές θα εκτελεστεί ο βρόχος."
      Course 4 Artist Vars 6_instruction: "Εδώ είναι μερικές γραμμές κώδικα που μπορούν
        να σχεδιάσουν οποιοδήποτε κανονικό πολύγωνο. Υπάρχει μια νέα μεταβλητή που
        ονομάζεται πλευρές που έχει οριστεί σε 4. Μπορείςνα χρησιμοποιήσεις τη μεταβλητή
        πλευρές (μαζί με το μαθηματικό μπλοκ) για να περιστραφεί σωστά ανεξάρτητα
        από το πόσες πλευρές έχει το πολύγωνο; \\r \\r Κάνε κλικ εδώ για να επιστρέψεις
        στην υπόδειξη!"
      Course 4 Artist Vars 7_instruction: "Χρησιμοποίησε αυτό που έμαθες στο τελευταίο
        παζλ για να δημιουργήσεις αυτό το εξάγωνο χρησιμοποιώντας τη μεταβλητή «πλευρές».
        \\r \\r βλ. Δες πώς θα μπορούσες να αλλάξεις μόνο μια τιμή για να σχεδιάσεις
        ένα τρίγωνο, τετράγωνο, πεντάγωνο ή οκτάγωνο;"
      Course 4 Artist Vars 8_instruction: "Ελεύθερο παιχνίδι: Πειραματίσου με τον
        αριθμό των πλευρών που έχει αυτό το σχήμα. Μπορείς να αλλάξεις τον αλγόριθμο
        έτσι ώστε το συνολικό μέγεθος του σχήματος να παραμένει ίδιο, ανεξάρτητα από
        το πόσες πλευρές έχει; Υπόδειξη: Εάν μπορείς να διαιρέσεις το αρχικό μήκος
        με τον αριθμό των πλευρών, το μήκος κάθε πλευράς θα μικραίνει, όσο ο αριθμός
        των πλευρών αυξάνει."
      Course 4 Artist Vars 9_instruction: Τροποποίησε αυτόν τον αλγόριθμο έτσι ώστε
        να χρησιμοποιεί τη μεταβλητή «πλευρές» αντί για ένα σταθερό αριθμό για να
        σχεδιάσεις ένα τρίγωνο. Μην ξεχάσεις να χρησιμοποιήσεις το μπλοκ "Ορισμός
        πλευρών".
      Course 4 Bee 1_instruction: "Η μέλισσα δεν μπορεί να καταλάβει αν αυτό είναι
        ένα λουλούδι ή μια κηρήθρα. Έλεγξε πρώτα αν είναι λουλούδι ή κηρήθρα, και
        έπειτα μόνο αν είναι λουλούδι σύλλεξε το νέκτρα απο αυτό. "
      Course 4 Bee 2_instruction: Χρησιμοποίησε το μπλοκ "εάν/αλλοιώς" για να ελέγξεις
        κάθε αντικείμενο και να δείς αν είναι λουλούδι ή μια κηρήθρα. Εάν είναι ένα
        λουλούδι, σύλλεξε νέκταρ... διαφορετικά, κάνε μέλι!
      Course 4 Bee 3_instruction: "Το άγνωστο αντικείμενο είναι είτε ένα λουλούδι
        ή μια κηρήθρα. Αυτή τη φορά, χρησιμοποίησε το μπλοκ εάν/αλλοιώς για να συλλέξεις
        νέκταρ, εάν είναι λουλούδι, αλλοιώς να κάνεις μέλι (γιατί τότε θα ήταν μια
        κηρήθρα)."
      Course 4 Bee 4_instruction: Αυτό το μωβ λουλούδι μπορεί να έχει 3, 2, ή 1 νέκταρ.
        Εδώ ένα μπλοκ εάν/αλλοιώς συνδυάζεται με άλλο μπλοκ εάν/αλλοιώς για να δημιουργηθεί
        μια πρόταση "εαν/αλλοιώς-εάν/αλλοιώς". Ολοκλήρωσε την λύση για τη συλλογή
        άγνωστης ποσότητας νέκταρ.
      Course 4 Bee 5_instruction: "Αυτό το μωβ λουλούδι μπορεί να έχει 3, 2, ή 1 νέκταρ.
        Προσθέστε ένα μπλοκ Εαν-Αλλοιώς για να δημιουργήσετε ένα μπλοκ Εαν, Αλλοιώς-Εαν,
        Αλλοιώς. Ολοκλήρωσε την λύση για τη συλλογή άγνωστης ποσότητας νέκταρ."
      Course 4 Bee 6_instruction: "Αυτό το μωβ λουλούδι μπορεί να έχει 3, 2, ή 1 νέκταρ.
        Δημιούργησε ε ένα μπλοκ Εαν, Αλλοιώς-Εαν, Αλλοιώς για να συλλέξεις άγνωστη
        ποσότητα νέκταρ."
      Course 4 Bee 7_instruction: "Χρησιμοποίησε ό, τι έχεις μάθει μέχρι τώρα για
        να συλλέξεις όλο το νέκταρ. Το μωβ λουλούδι μπορεί να έχει 3, 2, ή 1 νέκταρ."
      Course 4 Bee For Loops 1_instruction: "Χρησιμοποίησε ένα βρόχο για να συλλέξεις
        το νέκταρ από κάθε λουλούδι."
      Course 4 Bee For Loops 10_instruction: "Αν ο βρόχος σου μετράει αντίστροφα,
        η προσαύξηση αφαιρείται από τον μετρητή κάθε βρόχου. Ποιό θα πρέπει να είναι
        το βήμα προσαύξησης ώστε να συλλέξεις νέκταρ 9, στη συνέχεια, 6, και στη συνέχεια
        3;"
      Course 4 Bee For Loops 11_instruction: "Τι είναι λάθος σε αυτό το βρόγχο; Δες
        αν μπορείς να το διορθώσεις και να κάνεις τη μέλισσα να συλλέξει όλο το νέκταρ."
      Course 4 Bee For Loops 2_instruction: Εδώ είναι ένα νέο είδος βρόγχου, που ονομάζεται
        το βρόγχο "για". Σε αυτόν τον βρόγχο θα αυξάνεται ο μετρητής από 1 έως 5 ανα
        1 και θα εκτελείται το περιεχόμενο του, κάθε φορά που αυξάνει ο μετρητής.
        Βοήθησε την μέλισσα να συλλέξει το νεκταρ.
      Course 4 Bee For Loops 3_instruction: "Μπορείς να λύσεις αυτό το παζλ, χρησιμοποιώντας
        ένα βρόγχο για με τον μετρητή να αυξάνει από 1 έως 3 ανα 1. Τώρα ας πάμε να
        πάρουμε λίγο νέκταρ!"
      Course 4 Bee For Loops 4_instruction: "Σύλλεξε όλα το νέκταρ από αυτά τα λουλούδια.
        Αναρωτιέμαι αν υπάρχει ένας ευκολότερος τρόπος για να γίνει αυτό..."
      Course 4 Bee For Loops 5_instruction: 'Α, ο βρόγχος "για" διευκολύνει πολύ αυτην
        την λύση! Χρησιμοποιώντας την μεταβλητή "μετρητής" από τον βρόγχο "για", για
        να εκτελέσεις το μπλοκ "πάρε το νέκταρ" τον ίδιο αριθμό φορών όπως στο βρόγχο.
        Ουόου! Πάρα πολλοί βρόγχοι. Όλος ο κώδικας που χρειάζεσαι είναι εδώ, ρίξε
        μια ματιά πώς συνδυάζεται και στη συνέχεια, κάνε κλικ στο Εκτέλεση και δείς
        πώς λειτουργεί. '
      Course 4 Bee For Loops 6_instruction: Μπορείς επίσης να χρησιμοποιήσεις ενα
        βρόγχο "για" και να μετρήσεις αντίστροφα. Προσπάθησε να συλλέξεις το νεκταρ
        μετρώντας αντίστροφα από το 5 στο 1 κατα 1.
      Course 4 Bee For Loops 7_instruction: |
        Χρησιμοποίησε την μεταβλητή "μετρητής" του βρόγχου για
        να ελεγξεις πόσο μακριά θα κινηθείς οριζόντια.
      Course 4 Bee For Loops 8_instruction: "Μπορείς να χρησιμοποιήσεις την μεταβλητή
        του βρόγχου \nγια να ελέγξεις την κίνηση και την συλλογή του νέκταρ;\n"
      Course 4 Bee For Loops 9_instruction: Ο τελευταίος αριθμός στον βρόγχο "για"
        καλείται "προσαύξηση", και κάθε φορά που εκτελείται ο βρόγχος η μεταβλητή
        "μετρητής" αυξάνεται κατα την "προσαύξηση". Προσπαθησε να συλλέξεις τα λουλούδια
        χρησιμοποιώντας προσαύξηση 2.
      Course 4 Bee Loops 5 NEW_instruction: "Εδω είναι τρία λουλούδια. Μπορείς να
        βρεις το μοτίβο των εντολών που χρειάζεται να επαναληφθεί 3 φορές και να συλλέξεις
        το νεκταρ με τον ελάχισtο αριθμό μπλοκ;"
      Course 4 Bee Loops 5a NEW_instruction: "Τώρα, χρησιμοποίησε βρόγχους για να
        βοηθήσεις την μέλισσα να συλλέξει όλο το νεκταρ στον δρόμο της για την κηρήθρα
        με όσο το δυνατόν λιγότερα μπλοκ. Οταν τα καταφέρεις, μην ξεχάσεις να κάνεις
        μέλι!"
      Course 4 Bee Params 1_instruction: Χρησιμοποίησε την συνάρτηση "μάζεψε 3 νέκταρ"
        που γυρνά, κινείται για να μαζέψει το νεκταρ και μετά γυρνά στην αρχική θέση.
        Γράψε μια ακολουθία για να συλλέξεις όλο το νεκταρ με χρήση της συνάρτησης
        "μάζεψε 3 νεκταρ".
      Course 4 Bee Params 2_instruction: Τροποποίησε την συνάρτηση "μάζεψε 3 νεκταρ"
        ώστε να με αναγκάζει να στρίβω δεξιά αντί αριστερά προς τα λουλούδια.
      Course 4 Bee Params 3 (copy 1)_instruction: Τώρα, υπάρχουν λουλούδια και από
        τις δύο πλευρές! Ισως μπορείς να χρησιμοποιήσεις μια παράμετρο ώστε η ίδια
        συνάρτηση να λειτουργεί για τα λουλούδια και από τις δύο πλευρές. Εχω προσθέσει
        μια παράμετρο που ονομάζεται "κατευθυνση" στην συνάρτηση. Αν η παράμετρος
        "κατεύθυνση" έχει την τιμή 0 πρέπει να στρίψω αριστερά, αν είναι 1 πρέπει
        να στρίψω δεξιά.
      Course 4 Bee Params 3_instruction: 'Τώρα, υπάρχουν λουλούδια και από τις δύο
        πλευρές! Προσθέσαμε για να χρησιμοποιήσεις μεταβλητές με ονομασία "αριστερά"
        και "δεξιά" και μια παράμετρο με ονομασία "κατεύθυνση" στο "μάζεψε 3 νέκταρ".
        Τροποποίησε το "μάζεψε 3 νέκταρ" ώστε η μέλισσα να στρέφει προς την σωστή
        κατεύθυνση όταν η μεταβλητή "δεξιά" ή "αριστερά" περνά στην συνάρτηση.  '
      Course 4 Bee Params 4 (copy 1)_instruction: "Δοκίμασε να χρησιμοποιήσεις την
        νέα λειτουργία για να συλλέξεις όλα τα λουλούδια. Θυμήσου, 0 = αριστερά και
        1 = δεξιά."
      Course 4 Bee Params 4 - Two WhenRun_instruction: "Δοκίμασε να χρησιμοποιήσεις
        την νέα λειτουργία για να συλλέξεις όλα τα λουλούδια. Θυμήσου να χρησιμοποιήσεις
        τις μεταβλητές αριστερά και δεξιά."
      Course 4 Bee Params 4 backup_instruction: Δεν θα ήταν ωραία αν μπορούσες να
        συλλέξεις όλα αυτά τα νέκταρ με μια μόνο λειτουργία; Προσπάθησε να προσθέσεις
        μια νέα παράμετρο στην συνάρτησή σου που ονομάζεται "νέκταρ" για να ελέγξεις
        την ποσότητα του νέκταρ που θα συλλέξεις. Πιθανόν να θελήσεις να μετονομάσεις
        αυτήν την λειτουργία!
      Course 4 Bee Params 4_instruction: "Δοκίμασε να χρησιμοποιήσεις την νέα λειτουργία
        σου για τη συλλέξεις το νέκταρ από όλα τα λουλούδια. Θυμήσου να χρησιμοποιήσεις
        τις μεταβλητές αριστερά και δεξιά."
      Course 4 Bee Params 5_instruction: Ας ξεκινήσουμε από το μηδέν - μπορείς να
        δημιουργήσεις μια νέα λειτουργία που ονομάζεται "Πάρτε 5 νέκταρ" με μια παράμετρο
        κατεύθυνσης;
      Course 4 Bee Params 6 (copy 1)_instruction: "Προσπάθησε να χρησιμοποιήσεις την
        νέα λειτουργία σου για να συλλέξεις όλο το νέκταρ."
      Course 4 Bee Params 6_instruction: Δεν θα ήταν ωραία αν μπορούσες να συλλέξεις
        όλα αυτά τα νέκταρ με μια μόνο λειτουργία; Προσπάθησε να προσθέσεις μια νέα
        παράμετρο στην συνάρτησή σου που ονομάζεται "μονάδες νέκταρ" για να ελέγξεις
        την ποσότητα του νέκταρ που θα συλλέξεις. Πιθανόν να θελήσεις να μετονομάσεις
        αυτήν την λειτουργία!
      Course 4 Bee Params 7 (copy 1)_instruction: "Προσπάθησε να χρησιμοποιήσεις την
        νέα λειτουργία σου για να συλλέξεις όλο το νέκταρ."
      Course 4 Bee Params 7_instruction: "Δοκίμασε να χρησιμοποιήσεις την νέα λειτουργία
        σου για τη συλλέξεις όλο το νέκταρ."
      Course 4 Bee Params 8 Clone 2_instruction: "Ουάου! τώρα πρέπει να διαχειριστείς
        και μέλι! Πως μπορείς να ενημερώσεις την λειτουργία σου ώστε να συλλέγει νέκταρ
        ή να φτιάχνει μέλι."
      Course 4 Bee Params 8 clone 3_instruction: "Ουάου! τώρα πρέπει να διαχειριστείς
        και μέλι! Πως μπορείς να ενημερώσεις την λειτουργία σου ώστε να συλλέγει νέκταρ
        ή να φτιάχνει μέλι."
      Course 4 Bee Params 8 Clone_instruction: "Ουάου! τώρα πρέπει να διαχειριστείς
        και μέλι! Πως μπορείς να ενημερώσεις την λειτουργία σου ώστε να συλλέγει νέκταρ
        ή να φτιάχνει μέλι."
      Course 4 Bee Params 8 new_instruction: "Ουάου! τώρα πρέπει να διαχειριστείς
        και μέλι! Πως μπορείς να ενημερώσεις την λειτουργία σου ώστε να συλλέγει νέκταρ
        ή να φτιάχνει μέλι."
      Course 4 Bee Params 8_instruction: "Πρόκληση: τώρα πρέπει να διαχειριστείς και
        μέλι! Γράψε πάλι την λειτουργία σου ώστε να χρησιμοποιεί τις μονάδες μέλι
        και τις μονάδες νέκταρ. Πως θα χρησιμοποιήσεις αυτούς τους αριθμούς για να
        αποφασίσεις τι πρέπει να κάνεις;"
      Course 4 Bee Params Ex_instruction: "Δοκίμασε να χρησιμοποιήσεις την νέα λειτουργία
        σου για τη συλλέξεις όλο το νέκταρ."
      Course 4 Binary 1_instruction: "Εδώ είναι μια συνάρτηση που παίρνει μια δυαδική
        συμβολοσειρά 1 και 0 και καθοδηγεί τον αγρότη να στρίψει από αριστερά προς
        τα δεξιά, από πάνω προς τα κάτω, να στρίβει στα τετράγωνα όπου ο αριθμός έχει
        ένα μηδέν. Εκτέλεσε τον κώδικα που παρέεται για να δες πώς οι αγρότες χρησιμοποιούν
        δυαδικό για να σχεδιάσουν μια εικόνα."
      Course 4 Binary 2_instruction: 'Ποιά δυαδική συμβολοσειρά θα μπορούσες να επαναλάβεις
        8 φορές, για να σχεδιάσεις την εικόνα αυτή; Υπόδειξη: ο αριθμός "1" συμπληρώνει
        μια τρύπα.'
      Course 4 Binary 3_instruction: "Μπορείς να σχεδιάσεις αυτό το μοτίβο βάζοντας
        σε ένα βρόγχο μία μόνο δυαδική συμβολοσειρά;"
      Course 4 Binary 5 (copy 1)_instruction: "Ποιά δυαδική συμβολοσειρά επαναλαμβανόμενη
        10 φορές, θα σχεδιάσει την εικόνα αυτή;"
      Course 4 Binary 5_instruction: "Ποιά δυαδική συμβολοσειρά επαναλαμβανόμενη 10
        φορές, θα σχεδιάσει την εικόνα αυτή;"
      Course 4 Binary 6 (copy 1)_instruction: "Ποιά δυαδική συμβολοσειρά επαναλαμβανόμενη
        10 φορές, θα σχεδιάσει την εικόνα αυτή;"
      Course 4 Binary 6_instruction: "Ποιά δυαδική συμβολοσειρά επαναλαμβανόμενη 10
        φορές, θα σχεδιάσει την εικόνα αυτή;"
      Course 4 Binary 7_instruction: "Ποιά δυαδική συμβολοσειρά επαναλαμβανόμενη 10
        φορές, θα σχεδιάσει την εικόνα αυτή;"
      Course 4 Binary 8_instruction: "Μπορείς να ολοκληρώσεις το μεγαλύτερο μέρος
        αυτής της εικόνας επαναλαμβάνοντας εναν δυαδικό αριθμό 5 bit - τότε θα χρειαστείς
        ένα ακόμη αριθμό 4 bit για να πάτε στην την κάτω δεξιά γωνία."
      Course 4 EC 1a_instruction: "Δεν υπάρχουν κανόνες. Δεν υπάρχουν υποδείξεις.
        Μόνο η πρόκληση!"
      Course 4 EC 1b_instruction: "Δεν υπάρχουν κανόνες. Δεν υπάρχουν υποδείξεις.
        Μόνο η πρόκληση!"
      Course 4 EC 2a_instruction: "**Εξαιρετική πρόκληση¨** Δεν υπάρχουν κανόνες.
        Δεν υπάρχουν υποδείξεις. Μόνο η πρόκληση!"
      Course 4 EC 2b_instruction: "Δεν υπάρχουν κανόνες. Δεν υπάρχουν υποδείξεις.
        Μόνο η πρόκληση!"
      Course 4 EC 2c_instruction: "Δεν υπάρχουν κανόνες. Δεν υπάρχουν υποδείξεις.
        Μόνο η πρόκληση!"
      Course 4 EC 2d_instruction: "Δεν υπάρχουν κανόνες. Δεν υπάρχουν υποδείξεις.
        Μόνο η πρόκληση!"
      Course 4 EC 3_instruction: "Χρησιμοποίησε ότι έχεις μάθει στο προηγούμενο επίπεδο
        για να σχεδιάσεις μια εικόνα σαν αυτό. Σημείωση: Ο κώδικας γίνεται πιο απλός
        εάν έχετε ενσωματώσεις παραμέτρους. "
      Course 4 EC 3a_instruction: "Εξαιρετική πρόκληση: Δεν υπάρχουν κανόνες. Δεν
        υπάρχουν υποδείξεις. Μόνο η πρόκληση!"
      Course 4 Maze 1_instruction: "Οδηγήστε το Angry Bird στο γουρούνι!"
      Course 4 Maze 2_instruction: "Αποφύγετε την TNT!"
      Course 4 Maze 3_instruction: "Προγραμμάτισε το Angry Bird να πάρι στο γουρούνι. "
      Course 4 Maze 4_instruction: Δοκίμασε το μπλοκ "επανάληψη" κατά την επίλυση
        αυτού του παζλ ώστε να χρησιμοποιήσεις λιγότερα μπλοκ...
      Course 4 Maze 5_instruction: "Μπορείς να λύσεις αυτό το παζλ χρησιμοποιώντας
        το λιγότερο δυνατό αριθμό μπλοκ εντολών;"
      Course 4 Maze 6_instruction: "Μπορείς να λύσεις αυτό το παζλ χρησιμοποιώντας
        το λιγότερο δυνατό αριθμό μπλοκ εντολών;"
      Course 4 Play Lab For Loops 2_instruction: "Αυτή τη φορά, ας προσπαθήσουμε να
        μετρήσουμε τους μονούς αριθμούς από 1 έως 100."
      Course 4 Play Lab Params 1_instruction: Εδώ είναι μια συνάρτηση που ονομάζεται
        «άλμα» καικάνει τον κύριο χαρακτήρα σας να πηδήξει 100 εικονοστοιχεία. Χρησιμοποιήστε
        τη συνάρτηση "άλμα" για τη συλλογή όλων των σημαιών.
      Course 4 Play Lab Params 10_instruction: "Προσθέσαμε μια τελευταία συνάρτηση
        για σένα. \\r\n\\r\nΧρησιμοποίησε την εντολή \"εαν\" για να προγραμματίσεις
        το παιχνίδι σου να καλέσει την λειτουργία \"πάνω επίπεδο\" μόνο όταν η \"βαθμολογία
        παίκτη\" γίνεται μεγαλύτερη από μια συγκεκριμένη τιμή. \\r\n\\r\nΓια παράδειγμα:
        \"βαθμολογία παίκτη\" > 6\\r\n\\r\nΠαίξε το παιχνίδι, και κανε το να περάσει
        το επίπεδο 4 για να κινηθεί στο επόμενο παζλ. "
      Course 4 Play Lab Params 2_instruction: |-
        Τώρα έχουμε σημαίες που είναι πολύ ψηλά για τα τρέχοντα άλματά μας! Ας χρησιμοποιήσουμε και τα δύο βέλη "πάνω" και "κάτω" ώστε να εχουμε πολλαπλά ύψη αλμάτων.  \r
        \r
        Πρέπει να προσθέσουμε μια παράμετρο στην λειτουργία "άλμα"  με ονομα "υψος". Το πάνω βέλος κάνει τον σκύλο να πηδά 220 εικονοστοιχεία και το κάτω βέλος τον κάνει να πηδά μόνο 100 εικονοστοιχεία.
        \r
        \r
        Υπόδειξη: Θα πρέπει να κάνεις κλικ στο κουμπί "Μεταβολή" στην λειτουργία "αλμα" και να την ενημερώσεις ώστε να χρησιμοποιεί την παράμετρο "υψος".
      Course 4 Play Lab Params 3_instruction: 'Έχουμε προσθέσει άλλη μιά παράμετρο
        στη συνάρτηση "άλμα" ώστε να μπορούμε να την χρησιμοποιήσουμε με άλλους ηθοποιούς.
        Κάθε ηθοποιός αντιπροσωπεύεται από έναν αριθμό, ξεκινώντας από ένα. Επεξεργάσου
        την λειτουργία «άλμα», έτσι ώστε να χρησιμοποιεί την παράμετρο «ηθοποιός»
        και να κάνει το σωστό ηθοποιό να εκτελεί άλμα. '
      Course 4 Play Lab Params 4_instruction: "Εδώ είναι μια συνάρτηση που ονομάζεται
        «περιπολία». Επεξεργάσου την ώστε να μετακινεί τη γάτα επάνω 400 εικονοστοιχεία
        και στη συνέχεια, κάτω 400 εικονοστοιχεία."
      Course 4 Play Lab Params 5_instruction: Επεξεργάσου τη συνάρτηση "περιπολία"
        για να προσθέσεις μια παράμετρο «ηθοποιός», έτσι ώστε να την καλούμε για καθένα
        από τους ηθοποιούς στην οθόνη. Θυμήσου, οι ηθοποιοί αντιστοιχούν στους αριθμούς
        1, 2 και 3.
      Course 4 Play Lab Params 6_instruction: Πρόσθεσε μια άλλη παράμετρο που ονομάζεται
        «ταχύτητα» στην λειτουργία «περιπολία». Δοκίμασε να χρησιμοποιήσεις ένα μπλοκ
        "Ορισμός ταχύτητας" με τη νέα παράμετρο «ταχύτητα» να βοηθήσεις τον Πιγκουίνο
        να πάρει και τις δύο σημαίες πριν τα άλλα ξωτικά πάρουν εστω και ενα.
      Course 4 Play Lab Params 7_instruction: "Ας διασκεδάσουμε! Κοίταξε τον κώδικα
        που παρέχεται για να δείς αν μπορείς να καταλάβεις τι κάνει το κάθε μπλοκ.
        \ \\r \\r Οταν ολοκληρώσεις την διαδικασία, χρησιμοποίησε τα βελάκια για να
        ελέγξεις τον Σκύλο και να συλλέξεις όλες τις σημαίες."
      Course 4 Play Lab Params 8_instruction: Χρησιμοποιήστε ένα μπλοκ "όταν ο ηθοποιό
        αγγίζει" για να στείλετε το Σκυλί πίσω στην πάνω αριστερή γωνία ΜΟΝΟ αν το
        Σκυλί αγγίξει οποιονδήποτε από τους άλλους ηθοποιούς.
      Course 4 Play Lab Params 9_instruction: 'Εδώ είναι το παιχνίδι μας σε αρχικό
        στάδιο, αλλά το μεγαλύτερο μέρος του κώδικα είναι κρυμμένο. Υπάρχει μια νέα
        λειτουργία «score_points.» \r \r επεξεργαστείτε τη συνάρτηση, έτσι ώστε η
        παράμετρος της «σημεία» να προστίθεται στη μεταβλητή "Βαθμολογία_παίκτη".
        \r \r Η μεταβλητή "βαθμολογία_παίκτη" πρέπει να αυξάνει κάθε φορά που ο Σκύλος
        ακουμπά την Γάτα με καρδιές, και να μειώνεται όταν η Γάτα ακουμπά τον Σκύλο
        με καρδιές. \r \r Σημείωση: όταν τελειώσετε, κάντε κλικ στην επιλογή "Εκτέλεση"
        για να παίξει.  Όταν ο Σκύλος σκοράρει 6 σημεία, θα πάτε στον επόμενο γρίφο. '
      Course 4 Play Lab Vars 1_instruction: Αυτή τη φορά δεν χρειάζεται να γράψεις
        καθόλου κώδικα, απλά πατήστε "Εκτέλεση" για να παίξετε το παιχνίδι! Σε αυτό
        το παιχνίδι, είστε ο σκύλος που προσπαθεί να συλλέξει περισσότερες σημαίες
        από ότι η γάτα. Χρησιμοποίησε το κάτω βέλος για να ελέγξεις τον σκύλο. Πατήστε
        "Τέλος" όταν ολοκληρώσετε το παιχνίδι.
      Course 4 Play Lab Vars 2_instruction: Ο αγώνας σε εκείνο τον τελευταίο γρίφο
        δεν ήταν πολύ δίκαιη! Αλλαξε την μεταβλητή "ταχύτητα_σκύλου" για να βεβαιωθείς
        ότι μπορείς να συλλέξεις περισσότερες σημαίες από την γάτα. Ο πρώτος που θα
        συλλέξει 10 σημαίες νικά!
      Course 4 Play Lab Vars 3_instruction: "Εδώ είναι ένα νέο είδος παιχνιδιού! Χρησιμοποίησε
        το αριστερό και δεξί βέλος για να μετακινηθείς και το επάνω βέλος για να πηδήξεις.
        Δες εάν μπορείς να συλλέξεις όλες τις σημαίες."
      Course 4 Play Lab Vars 4_instruction: Τώρα χρησιμοποιούμε μια μεταβλητή που
        ονομάζεται "ύψος" για τον έλεγχο πόσο ψηλά μπορεί να πηδήξει ο σκύλος. Ενημέρωσε
        την μεταβλητή "ύψος", έτσι ώστε το σκυλί να μπορεί να πηδήσει αρκετά ψηλά
        για να φθάσει όλες τις σημαίες.
      Course 4 Play Lab Vars 5_instruction: "Ας δομήσουμε ένα παιχνίδι! Πρώτα θα πρέπει
        να ορίσουμε μια βαθμολογία. Δημιουργήστε ξανά τον κώδικα που είδατε στο τελευταίο
        επίπεδο για να ορίσετε την βαθμολογία στο 10. "
      Course 4 Play Lab Vars 6 (copy 1)_instruction: "Φοβερό, τώρα έχουμε την μεταβλητή
        βαθμολογίας, αλλά πώς θα την κάνουμε χρήσιμη; Τι θα έλεγες να αυξάναμε την
        μεταβλητή βαθμολογίας κάθε φορά χτυπάς τον εχθρό με μια πύρινη μπάλα; Χρησιμοποίησε
        το συμβάν «όποτε ο ηθοποιός 2 αγγίζει οτιδήποτε» για να ενημερωθεί η μεταβλητή
        βαθμολογίας όταν οι πύρινες μπάλες σας χτυπούν την γάτα. Μπορείς να αυξήσεις
        την βαθμολογία ορίζοντας Βαθμολογία = Βαθμολογία + 1. Πέτυχε βαθμολογία 10
        (αυξάνοντας εναα την φορά) για να περάσεις το επίπεδο."
      Course 4 Play Lab Vars 6_instruction: Χρησιμοποίησε το δεξιό βέλος για να πυροβείς
        καρδιές. \r \r Στο παιχνίδι μας, πώς θα ππετύχουμε να κερδίζουμε πόντους;
        Πρόσθεσε 1 στη μεταβλητή «πόντοι» κάθε φορά που το Σκυλί χτυπά τη Γάτα με
        μια καρδιά. Χρησιμοποίησε την ενέργεια «όταν ο ηθοποιός 2 αγγίζει οτιδήποτε»
        για να αυξάνεται η βαθμολογία σου. Μπορείς να αυξήσεις την μεταβλητή σας με
        τη ρύθμιση "Πόντοι = Πόντοι + 1.» Πέτυχε βαθμολογία 10 (αυξάνοντας 1 κάθε
        φορά!) ώστε να περάσεις το επίπεδο.
      Course 4 Play Lab Vars 7_instruction: "Ωραία, τώρα ας σιγουρευτούμε οτι το παιχνίδι
        σίγουρα δεν είναι πάρα πολύ εύκολο. Κάθε φορά που το Σκυλί (ηθοποιός 1) χτυπιέται
        από κίτρινες καρδιές από την Γάτα (ηθοποιός 2), χάνεις ενα βαθμό. Ξεκίνησε
        με 10 πόντους, έτσι να μην είναι πολυ δύσκολο. Ασε την βαθμολογία να μειώνεται
        από 10 σε 0 για να περάσεις το επίπεδο."
      Course 4 Play Lab Vars 8 (copy 1)_instruction: Εντάξει, ένα τελευταίο πράγμα
        για αυτό παιχνίδι - ας ρυθμίσουμε έτσι ώστε ο παίκτης να κερδίσει (ή να χάσει).
        Χρησιμοποίησε έναν ατέρμονα βρόγχο που θα ελέγχει την τιμή της βαθμολογίας
        - αν η βαθμολογία γίνει μεγαλύτερη από 20, κάνε τον εχθρό να εξαφανιστεί.
        Εάν το σκορ γίνει μικρότερο από 0, κάνε τον παίκτη να εξαφανιστεί. Κάνεκλικ
        στο κουμπί "Τέλος", όταν το παιχνίδι λειτουργήσει όπως θα ήθελες.
      Course 4 Play Lab Vars 8_instruction: Ας ρυθμίσουμε αυτό το παιχνίδι, οπότε
        το σκυλί μπορεί να κερδίσει (ή να χάσει). Χρησιμοποίησε ένα βρόχο "για πάντα"
        για να ελέγξεις την βαθμολογία - αν το σκορ είναι γίνει μεγαλύτερο από 20,
        κάνουν τον εχθρό (τη νγάτα) να εξαφανίζεται. Εάν το σκορ γίνει μικρότερο από
        0, ο παίκτης (ο σκύλος) εξαφανίζεται. Κάνε κλικ στο κουμπί "Τέλος", όταν το
        παιχνίδι λειτουργεί όπως θα ήθελες.
      Course 4 Play Lab Vars 9_instruction: "Ελεύθερο παιχνίδι! Εδώ είναι όλες τις
        μεταβλητές με τις οποίες παίξαμε με μέχρι στιγμής σε αυτό το στάδιο, καθώς
        και μερικές ακόμα σε περίπτωση που τις χρειάζεσαι. \\r \\r Σημείωσε ότι τώρα
        υπάρχουν τόσα πολλά μπλοκ στη διάθεση σου, που πρέπει να οργανωθείς!  Εδώ,
        έχουμε βάλει κάθε κομμάτι σε μια κατάλληλη κατηγορία.  Με την ησυχία σου εξερεύνησε
        ό, τι είναι διαθέσιμο. Όταν τελειώσεις την περιήγηση, κάνε ένα παιχνίδι ή
        ιστορία χρησιμοποιώντας επαναλήψεις, μεταβλητές και γεγονότα.  \\r \\r Συμβουλή:
        Κύλησε  προς τα κάτω για να δείς όλες τις εντολές στο χώρο εργασίας."
      Course 4 Play Lab Vars_instruction: Εντάξει, ένα τελευταίο πράγμα για αυτό παιχνίδι
        - ας το ρυθμίσουμε έτσι ώστε ο παίκτης να κερδίσει (ή να χάσει). Χρησιμοποίησε
        ένα βρόγχο "για πάντα" για να ελέγχεις την τιμή της βαθμολογίας - αν το σκορ
        γίνει μεγαλύτερο από 20, κάνε τον εχθρό να εξαφανιστεί. Εάν η βαθμολογία γίνει
        μικρότερη από 0, κάνε τον παίκτη να εξαφανιστεί.
      Course 4 Play Labs For Loops 1_instruction: "Ας κάνουμε το σκυλί να λέει τους
        αριθμούς από 1 έως 100. Χρησιμοποίησε ένα βρόγχο και το μπλοκ του μετρητή
        για να λέει την τιμή του μετρητή κάθε φορά που εκτελείται ο βρόγχος."
      Course 4 Play Labs For Loops 2_instruction: "Αυτή τη φορά, ας προσπαθήσουμε
        να μετρήσουμε τους μονούς αριθμούς από 1 έως 100."
      Course 4 Play Labs For Loops 3_instruction: "Αν μετράμε με μαγαλύτερο βήμα,
        μετράμε ακόμα υψηλότερο στο ίδιο χρονικό διάστημα. Δοκιμάστε να κάνετε το
        σκυλί να μετρά από 10 μέχρι 1000, με βήμα 10 την φορά."
      Course 4 Play Labs For Loops 4_instruction: "Η αλλαγή της προσαύξησης μπορεί
        να είναι χρήσιμη, αλλά όταν ακόμη καταμετράμε γραμμικά (κάθε αριθμός απέχει
        το ίδιο από το τελευταίο) τι θα συμβεί αν θελήσουμε να μετρήσουμε εκθετικά;
        Χωρίς να αλλάξετε τις ρυθμίσεις σε αυτό για βρόγχο, μπορείτε να μετρήσετε
        1, 4, 9, 16, 25... (το τετράγωνο του μετρητή);"
      Course 4 Play Labs For Loops 4a_instruction: Τώρα, ας φτιάξουμε ένα μείγμα των
        μεταβλητών από το Στάδιο 7 μαζί με την μεταβλητή σας "μετρητής" που μπορεί
        να κάνει κάποιο μαγικό να συμβεί.   \r \r Σε αυτό το παζλ, το Σκυλί θα μετρά  από
        0 έως 1000 κατά το «βήμα».  Ορισε τη μεταβλητή «βήμα» σε 10 στην αρχή του
        κωδικού σου για να δείς τι θα συμβεί.
      Course 4 Play Labs For Loops 5_instruction: Στο τελευταίο στάδιο υπολογίσαμε
        το τετράγωνο του κάθε αριθμού. Προσπάθησε να αλλάξεις τον "μετρητή ^ 2" σε
        "μετρητή ^ 3" για να υπολογίσετε τον κύβο κάθε αριθμού (1, 8, 27, 64, 125,
        216, 343...)
      Course 4 Play Labs For Loops 5a_instruction: |-
        In this puzzle, Dog will be your
        time keeper.\r
        \r
        Dog will count from 0 to 30 by "increment".  The "increment"
        variable will begin with a value of 1.\r
        \r
        Can you make it so that each
        time you click Dog, the increment increases by 2?  Click the forward arrow
        to run the for loop.\r
        \r
        Run the loop a couple of times, clicking Dog before
        each one.
      Course 4 Play Labs For Loops 6_instruction: Θα θυμάστε ίσως ότι πρώτος αριθμός
        είναι οποιοσδήποτε ακέραιο αριθμός, που είναι διαιρετός μόνο από τον ευατό
        του, και το 1. Χρησιμοποίησε τη λειτουργία "is_prime" που θα αναφέρει μόνο
        τους πρώτους αριθμούς από 1 έως 100.
      Course 4 Play Labs For Loops 6a_instruction: "Ο Σκύλος θα εξακολουθεί να κρατά
        χρόνο υπολογίζοντας με τον βρόγχο «για» κατα το  «βήμα», αλλά αυτή τη φορά,
        θα προσθέσουμε τον Μαγο στην διαδικασία.  Μπορείς να αλλάξεις τον κώδικα ώστε
        κάθε φορά που κάνεις κλικ τον Μάγο το «βήμα» να αυξάνει κατά δύο; \\r \\r
        Προσέξτε!  Ο Μάγος κινείται γρήγορα!"
      Course 4 Play Labs For Loops 7_instruction: Θα μπορούσατε να χρησιμοποιήσετε
        ένα βρόγχο "για" ώστε να με βοηθήσεις να πω την ακολουθία 1, 4, 7, 10, 13,
        16, 19, 22, 25;
      Course 4 Play Labs For Loops 7a_instruction: Τώρα φτάνουμε κάπου!  Τι γίνεται
        αν αρχίσουμε να μετράμε πόσες φορές μπορούμε να κάνουμε κλικ τον "Μάγο", πριν
        το σκυλί φτάσει το 30;  \r \r Τελείωσε προσθέτοντας μπλοκς στον "Μάγο", έτσι
        ώστε κάθε φορά που γίνεται «κλικ» να αυξάνει κατά ένα. Μπορείς να αγνοήσεις  τον
        "μετρητή" για τώρα. \r \r Το σκυλί θα αρχίσει να μετρά όταν κάνεις κλικ στο
        "Εκτέλεση".
      Course 4 Play Labs For Loops 8_instruction: |-
        Τώρα, βοηθήστε τους ηθοποιούς να κινούνται όσο μετρούν. \r
        \r
        Ο Σκύλος πρέπει να κινείται προσθέτωντας 2 καθε φορά (μετρητής + 2). Η Γάτα θα κινείται και θα μετρά πολλαπλασιάζοντας με 2 κάθε φορά (μετρητής * 2). Ο Πιγκουίνος θα κινείται και θα μετρά στην δύναμη του 2 κάθε φορά (μετρητής ^ 2). Ποιός θα φτάσει πρώτος τις σημαίες του;
      Course 4 Play Labs For Loops 8a_instruction: "Για να ολοκληρώσουμε το παιχνίδι
        μας, χρειαζόμαστε να επαναφέρουμε το «βήμα»!    Ας το προσαρτήσουμε στο επίπεδο
        του παιχνιδιού η. \\r \\r 1) Παρακολουθεί  τον αριθμό των φορών που  έχει
        πατηθεί ο Μάγος. \\r 2) Αν ο Μάγος έχει πατηθεί τουλάχιστον 10 φορές πριν
        ο Σκύλος μετρήσει έως το 30, αύξησε το «βήμα» κατά 1 και άρχισε πάλι. \\r
        3) Αν ο Μάγος δεν πατηθεί τουλάχιστον 10 φορές, το παιχνίδι τελειώνει."
      Course 4 Playlab For Loop Freeplay_instruction: |
        Freeplay: Use everything you've
        learned so far to make a game that includes a `for` loop!
      Course 4 Playlab For Loops 4b_instruction: |-
        Now, these two characters are going
        to race!  \r
        \r
        Each of them will move `counter` steps at a time, but their
        counters will have different values because of the `for` loops.  \r
        \r
        Can
        you change the increment in one of the loops so that the race is a tie?
      Course 4 Playlab For Loops 5b_instruction: |
        Adjust the interval on these `for`
        loops so that the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b_instruction: "Edit this `for` loop to create\na
        game that's fun for you to play!\\r\n\\r\nPress \"Run\" and click Madame\nUnicorn
        four times to win. "
      Course 4 SCF 1_instruction: "Χρησιμοποίησε τις προτεινόμενες λειτουργίες για
        να σχεδιάσεις τέσσερις σειρές από εξάγωνα. Παρατήρησες πώς οι ζυγές γραμμές
        μετακινούνται προς τα δεξιά;"
      Course 4 SCF 1a_instruction: "Μπορείς να σας καταλάβεις πώς να συλλέξεις όλο
        αυτό το νέκταρ με τα δυνατόν λιγότερα μπλοκ;"
      Course 4 SCF 1b_instruction: "Μπορείς να σας καταλάβεις πώς να συλλέξεις όλο
        αυτό το νέκταρ με τα δυνατόν λιγότερα μπλοκ;"
      Course 4 SCF 2_instruction: "Χρησιμοποίησε ότι έχεις μάθει στο προηγούμενο επίπεδο
        για να σχεδιάσεις μια εικόνα σαν αυτό. Σημείωση: Ο κώδικας γίνεται πιο απλός
        εάν ενσωματώσεις παραμέτρους. "
      Course 4 SCF 3 Fail 1_instruction: "Μπορείς να βρεις πως να..."
      Course 4 SCF 3 Fail 2_instruction: "Μπορείς να βρεις πως να..."
      Course 4 SCF 3_instruction: "Χρησιμοποίησε ότι έχεις μάθει στο προηγούμενο επίπεδο
        για να σχεδιάσεις μια εικόνα σαν αυτό. Σημείωση: Ο κώδικας γίνεται πιο απλός
        εάν ενσωματώσεις παραμέτρους. "
      Course 4 SCFL 1_instruction: "Λύστε αυτό το παζλ χρησιμοποιώντας τον μικρότερο
        δυνατό αριθμό μπλοκς."
      Course 4 SCFL 1a_instruction: "Μπορείς να πας την Skrat στο βελανίδι χρησιμοποιώντας
        όσο το δυνατόν λιγότερα μπλοκς;"
      Course 4 SCFL 1b_instruction: "Μπορείς να πας την Skrat στο βελανίδι χρησιμοποιώντας
        όσο το δυνατόν λιγότερα μπλοκς;"
      Course 4 SCFL 2_instruction: "Λύστε αυτό το παζλ χρησιμοποιώντας τον μικρότερο
        δυνατό αριθμό μπλοκς."
      Course 4 SCFL 3_instruction: "Μπορείς να καταλάβεις πώς να δημιουργήσεις πάλι
        αυτό το σχέδιο;"
      Course 4 SCFL 4_instruction: "Μπορείς να καταλάβεις πώς να δημιουργήσεις πάλι
        αυτό το σχέδιο;"
      Course 4 SCFL 5_instruction: "Μπορείς να καταλάβεις πώς να δημιουργήσεις πάλι
        αυτό το σχέδιο;"
      Course 4 SCFL 6_instruction: "Μπορείς να καταλάβεις πώς να σχεδιάσεις εκ νέου
        αυτό το σχέδιο με ένα μόνο βρόγχο;"
      Course 4 SCFL 7_instruction: "Ο καλλιτέχνης θέλει να πιάσει μερικά κύματα! Μπορεί
        να καταλάβεις πώς να δημιουργήσεις εκ νέου αυτό το σχέδιο;"
      Course 4 SCFP 1_instruction: "Δημιούργησε μια συνάρτηση με παραμέτρους που επιτρέπει
        στον καλλιτέχνη να κάνει άλμα προς τα πίσω και εμπρός κατά x εικονοστοιχεία,
        και επίσης πάνω και κάτω κατά y εικονοστοιχεία (με χρήση θετικών και αρνητικών
        αριθμών)."
      Course 4 SCV 1_instruction: "Κάνε κλικ εδώ, για να προβάλεις τις οδηγίες πάλι."
      Course 4 SCV 2_instruction: "Κάνε κλικ εδώ, για να προβάλεις τις οδηγίες πάλι."
      Course 4 SCV 3_instruction: "Τώρα για ένα παιχνίδι αγγίγματος!  Αγγιξε την Γάτα
        για να πάρεις 2 πόντους. Αγγιξε τον Πιγκουίνο για να πάρεις 3 πόντους. Μάζεψε
        10 πόντους για να κερδίσεις! \\r, Αλλά προσοχή, όταν Γάτα και Πιγκουίνος ακουμπούν
        μεταξύ τους, αφαιρούν πόντους. \\r \\r Πρόσθεσαι τα κατάλληλα μπλοκς για να
        κάνεις το παιχνίδι να λειτουργεί όπως θέλεις. Πώς θα κάνεις τον σκύλο να κινηθεί
        προς όλες τις κατευθύνσεις με τα βελάκια; Πώς θα προσθέτεις πόντους όταν ο
        Σκύλος ακουμπά την Γάτα ή τον Πιγκουίνο; Πώς θα αφαιρέσεις πόντους όταν ακουμπήσουν
        η Γάτα και ο Πιγκουίνος;"
      Course 4 SCV 4_instruction: "Λύσε αυτό το παζλ χρησιμοποιώντας τον μικρότερο
        δυνατό αριθμό μπλοκς."
      Course 4 SCV 5_instruction: "Λύσε αυτό το παζλ χρησιμοποιώντας τον μικρότερο
        δυνατό αριθμό μπλοκς."
      Course 4 SCV 6_instruction: "Κάνε κλικ εδώ, για να προβάλεις τις οδηγίες πάλι."
      Course 4 SCVP 1_instruction: "Δημιούργησε μια συνάρτηση με παραμέτρους που επιτρέπει
        στον καλλιτέχνη να κάνει άλμα προς τα πίσω και εμπρός κατά x εικονοστοιχεία,
        και επίσης πάνω και κάτω κατά y εικονοστοιχεία (με χρήση θετικών και αρνητικών
        αριθμών)."
      Course 4 Variables Assessment_instruction: "Μπορείς να δημιουργήσεις αυτήν την
        εικόνα χρησιμοποιώντας μια μεταβλητή για τις πλευρές; Κάθε γραμμή πρέπει να
        έχει μήκος 50 εικονοστοιχεία."
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: |-
        This is a test!\r
        Move one way, then
        another to get me to the pig
      Course1MazeAssessment2_instruction: |-
        This is a test!\r
        Move one way, then
        another to get me to the pig.
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Boolean Predict_instruction: |
        What do you think this code will do when
        it is run? Predict what each console.log() command will print, then run the
        program to check your predictions.
      CSD U3 Draw Loop Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Frame Rate_instruction: Slow down Gamelab Gary's animation with frameRate()
      CSD U3 Keypress Boolean_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Random Animation_instruction: |
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |
        Pick a shape block and use calls to
        randomNumber() in place of one or more of the parameters. Maker sure you run
        it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Variable Arithmetic pt2_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables create and assign_instruction: |
        Create and assign size in
        a single line of code.
      CSD U3 Variables draw loop newVars_instruction: |
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables eyeBrows_instruction: |
        Predict what will happen when you move
        the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables Initialize_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: |
        Create your own variable, give it a value,
        and display that value in the console.
      CSD U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: |
        Predict what will happen when
        you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: |
        Check out this example
        randomized drawing.
      CSD U3 Variables Random_instruction: |
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables use value rect_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables write_instruction: |
        Use the write block to display the value
        of size
      CSD U3 Variables2 expressions in commands_instruction: |
        Use expressions inside
        a drawing command
      CSD U3 Variables2 expressions in variables_instruction: |
        Assign the value of
        each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: |
        Use console.log to display the
        results of each expression. Then create your own.
      CSP Data Unit - Counting Multiple Things_instruction: |-
        If you can count one
        thing you can count multiple things\r
        \r
        Find out how many people like something
        other than dogs and cats\r
        \r
        Count dogs\r
        Count cats\r
        Count total\r
        Do
        the math\r
        \r
        blank/ blank toal\r
        \r
        Can also use this to find percents
        from this\r
        \r
        x% are dog lovers
      CSP Data Unit -Counting Records - Easy Way_instruction: |
        ReadRecords with specific
        criteria \r
        find the length of an array\r
      CSP Data Unit -Counting Records - Hard Way_instruction: |
        \r
        1. ReadRecords
        for all records\r
        2. Way to loop through and count\r
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: "Create an object with at\nleast
        5 values including at least one string and one number. (Click to see\nfull
        instructions) \n"
      CSP U4 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      drawings!_instruction: |
        Draw the equilateral triangle - all the sides are the
        same!
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: |-
        Write a function called food-critic, which takes
        in the name of a food and produces a String that says how you feel about that
        food. For example, (food-critic “pizza”) might evaluate to “delicious”, but
        (food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two
        foods to review, but you can you write more if you like!  Don’t forget to
        add an “else” clause!\r
        One example - and part of the definition -  has already
        been done for you!
      Eval Cond 7_instruction: |
        Free Play: Write a function called green-shape, which
        takes in the name of a shape and produces a solid green shape. Your function
        should work with at least “circle”, “star” and “rectangle”, but you can add
        other shapes if you like. You can choose the size of each shape. Don’t forget
        to add an “else” clause!\r
        One example - and part of the definition -  has
        already been done for you!\r
      Eval Cond 8_instruction: |
        Free Play: Suppose you want to own a car at 21, or
        have your own business by 30. Write a function called life-goals, which takes
        in an age and produces a string that describes your life goals by then. Don’t
        forget to add an “else” clause!\r
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction
        block? The radius is 20. \n"
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: "Τώρα ας δημιουργήσουμε 20 κύκλους
        που επικαλύπτονται, στρίβοντας 18 μοίρες  μεταξύ κάθε κύκλου."
      frozen circle function with parameter_instruction: Εδώ είναι ένα μπλοκ "Δημιουργία
        κύκλου" που μπορεί να κάνει κύκλους διαφορετικών μεγεθών. Μπορείς να χρησιμοποιήσεις
        αυτό για να δημιουργήσεις ένα μικρό κύκλο μεγέθους 5 και ένα μεγαλύτερο κύκλο
        μεγέθους 10;
      frozen circle function_instruction: "Χρησιμοποιήστε το νέο «δημιουργούν έναν
        κύκλο» μπλοκ να δημιουργήσει 10 κύκλους που επικαλύπτονται. Μην ξεχάσεις να
        μεταβείς προς τα εμπρός μεταξύ των κύκλων."
      frozen circle_instruction: "Ο κύκλος είναι ένα ειδικό σχήμα. Μπορείς να σκεφτείς
        με τι αριθμό θα αντικαταστήσεις τα ερωτηματικά για να σχεδιάσεις έναν κύκλο;"
      frozen cross rotate dense_instruction: "Ας το επαναλάβουμε αυτό 90 φορές! Πόσες
        φορές χωράει το  90 στο  360; Υπόδειξη: Είναι ένας πραγματικά μικρός αριθμός."
      frozen cross rotate_instruction: "Τώρα προσπαθήσε να επαναλάβεις αυτό 10 φορές.
        Πόσες μοίρες χρειάζεται να στριψεις μεταξύ  κάθε γραμμής;"
      frozen cross_instruction: "Τυλίξτε ένα μπλοκ «Επανάληψη» μπλοκ γύρω από αυτές
        τις εντολές για να δημιουργήσεις ένα σύμβολο συν. Πρόσεξες ότι η Έλσα μπορεί
        να κινηθεί προς τα εμπρός και προς τα πίσω;"
      frozen diamond mini snowflake_instruction: Γνώριζες οτι κάθε νιφάδα χιονιού
        έχει διαφορετικό σχήμα; Αν δημιουργήσουμε μια νέα νιφάδα χιονιού χρησιμοποιώντας
        το μπλοκ "Επανάληψη", για να επαναλάβουμε ένα παραλληλόγραμμο 4 φορές, στρίβωντας
        δεξιά κατά 90 μοίρες μεταξύ κάθε παραλληλογράμμου.
      frozen diamond snowflake_instruction: Τώρα, ας δημιουργήσουμε μια νέα νιφάδα
        χιονιού χρησιμοποιώντας το μπλοκ "Επανάληψης" για να επαναλάβουμε ένα παραλληλόγραμμο
        10 φορές, στρίβωντας δεξιά κατά 36 μοίρες ανάμεσα σε κάθε ένα.
      frozen diamond_instruction: "Χρησιμοποίησε μια επανάληψη γύρω από αυτά τα μπλοκ
        για να δημιουργήσεις ένα παραλληλόγραμμο. Είναι ακριβώς όπως ένα ορθογώνιο,
        αλλά έχει διαφορετικές γωνίες. Αυτό έχει γωνίες 60 μοίρες και 120 μοίρες για
        όλες τις γωνίες 90 μοίρες."
      frozen freeplay_instruction: "Έχετε γίνει επίσημα ένα άριστος καλλιτέχνης! Δημιουργήστε
        μια χειμερινή χώρα των θαυμάτων."
      frozen line_instruction: "Γεια σου! Είμαι η Έλσα του Arendelle. Βοήθησέ με να
        δημιουργήσω μια ενιαία  γραμμή."
      frozen perpendicular_instruction: Τώρα ας δούμε αν μπορούμε να δημιουργήσουμε
        δύο γραμμές που βρίσκονται σε γωνία 90 μοιρών μεταξύ τους. Θα πρέπει να χρησιμοποιήσετε
        το μπλοκ "Στροφή", καθώς και το μπλοκ "Κίνηση".
      frozen snowflake branch_instruction: Δοκιμάστε να χρησιμοποιήσετε το μπλοκ "Δημιουργία
        κλάδου νιφάδα χιονιού" για να δημιουργήσετε τρία κλαδιά, που θα αρχίζουν να
        μοιάζουν με μια νιφάδα χιονιού.
      frozen snowflake full_instruction: "Τώρα ας το επαναλάβουμε αυτό 8 φορές για
        να γίνει μια όμορφη νιφάδα χιονιού!"
      frozen snowflower_instruction: "Περίπλοκα μοτίβα χιονιού μπορούν να δημιουργηθούν
        με πολύ απλά σχήματα. Μπορείτε να κάνετε ένα μοτίβο επαναλαμβάνοντας 5 κύκλους
        μεγέθους 5 και 5 κύκλους μεγέθους 10;"
      frozen square iterative_instruction: "Φαίνεται σαν να είμαστε στα μισά του δρόμου
        για να κάnουμε ένα τετράγωνο. Ας βάλουμε 4 γραμμές μαζί για να δημιουργήσουμε
        ένα τετράγωνο."
      frozen square loop 3x_instruction: "Ας δημιουργήσουμε τρία τετράγωνα, στρίβωντας
        μετά από κάθε τετράγωνο. Να είσαι βέβαιος να γυρίσεις από 120 μοίρες πριν
        από κάθε νέο τετράγωνο."
      frozen square loop_instruction: Γεια σου, είμαι η Άννα της Arendelle! Ας κάνουμε
        ένα τετράγωνο με το μπλοκ «Επανάληψη», το οποίο χρησιμοποιεί λιγότερα μπλοκ.
        Πόσες φορές (?) θα πρέπει το μπλοκ "Επανάληψη" να βάλει τα μπλοκ κάνει ένα
        τετράγωνο;
      frozen square snowflake_instruction: Μπορείς να δημιουργήσεις μια νιφάδα χιονιού
        χρησιμοποιώντας το μπλοκ «Επανάληψη», για να κάνεις ένα τετράγωνο 10 φορές,
        και το μπλοκ "Στροφή" για να περιστρέψεις 36 μοίρες το κάθε τετράγωνο;
      Infinity_catch_instruction: Μπορείς να κάνεις την Έλσα ("ηθοποιός 2)  να φτάσει
        την Άννα χρησιμοποιώντας τα βελάκια;
      Infinity_finale_instruction: "Δημιουργήστε κάτι που σας αρέσει και μοιραστείτε
        το!"
      Infinity_move_collide_instruction: Ο Hiro είναι ο «ηθοποιός 1".  Μετακίνησέ
        τον δεξιό από τον Baymax και παίξε έναν ήχο όταν αγγίξουν.
      Infinity_move_directions_instruction: O Μπέιμαξ είναι ο "ηθοποιός 2". Πρόσθεση
        μπλόκ Κίνηση και στη συνέχεια κούνησε τον Μπέιμαξ χρησιμοποιώντας τα βέλη.  Κάνε
        τον να αγγίξει τους δύο άλλους χαρακτήρες.
      Infinity_move_right_instruction: Ο Χίρο είναι ο "ηθοποιός 1". Χρησιμοποίησε
        το μπλοκ Κίνηση για να μετακινήσεις τον Χίρο δεξιά για να αγγίξει τον Μπέιμαξ.
      Infinity_repeat_instruction: "Χρησιμοποίησε έναν μπλοκ «επανάληψη για πάντα»
        για να κάνεις την Άννα να μετακινηθεί πάνω και κάτω κατά 400 εικονοστοιχεία."
      Infinity_say_instruction: Κάνε την Άννα να πεί "Γεια σου." χρησιμοποιώντας το
        μπλόκ Πες.
      Infinity_shoot_instruction: Ο Μπέιμαξ είναι ο "ηθοποιός 2". Κάνε τον Μπέιμαξ
        να ρίξει ενα πύραυλο στο Χίρο.
      Infinity_shoot_directions_instruction: "Ο Hiro είναι ο «ηθοποιός 3».  Κάνε τον
        Hiro να ρίξει ένα βλήμα σε καθένα από τους τέσσερις χαρακτήρες.  Περίμενε
        ένα δευτερόλεπτο μεταξύ κάθε ρίψης."
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: "Αγγίξε ακόμη περισσότερες νιφάδες χιονιού!"
      Infinity_touch_four_instruction: "Μετακίνησε την Άννα επάνω, κάτω αριστερά,
        και δεξιά για να αγγίξει κάθε μία από τις τέσσερις νιφάδες χιονιού."
      Infinity_touch_score_instruction: Κάνε την Άννα να σημειώσει έναν πόντο όταν
        αγγίζει μια νιφάδα χιονιού. Στην συνέχεια, κάνε κλικ στην "Εκτέλεση" και κατευθυνέ
        την να αγγίξει κάθε νιφάδα χιονιού απο μία φορά.
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: "Σχεδίασε μια σύντομη γραμμή επάνω και
        μια μακριά στα δεξιά!"
      K-1 artist 1 level 10_instruction: Σχεδίασε την διακεκομμένη γραμμή, χρησιμοποιώντας
        τόσο τα μπλοκ "άλμα" όσο και τα μπλοκ "σχεδιασμος"
      K-1 artist 1 level 9_instruction: "Σχεδίασε αυτό χρησιμοποιώντας τρεις γραμμές"
      K-1 Artist Loops 1_instruction: "Σχεδίασε αυτή την γραμμή μετακινούμενος Ανατολικά
        4 φορές."
      K-1 Artist Loops 2_instruction: "Τώρα, σχεδίασε την ίδια γραμμή χρησιμοποιώντας
        ενα βρόγχο."
      K-1 Artist Loops 3_instruction: "Μπορείς να επαναλάβεις αυτά τα μπλοκ για να
        σχεδιάσεις 6 γραμμές;"
      K-1 Artist Loops 4_instruction: "Θα μπορούσε ένας βρόχος να σε βοηθήσει να σχεδιάσεις
        την κορυφή αυτού του κάστρου;"
      K-1 Artist Loops 5_instruction: "Τι μπορείς να επαναλάβεις 4 φορές για να σεχδιάσεις
        αυτές τις σκάλες;"
      K-1 Artist Loops 6_instruction: "Αυτό χρειάζεται δύο βρόγχους: έναν για να ανεβείς
        τις σκάλες και έναν για να πάει κάτω."
      K-1 Artist Loops 7_instruction: "Οι βρόγχοι μπορεί να σε βοηθήσουν να ολοκληρώσεις
        αυτό το μοτίβο."
      K-1 Artist Loops 8_instruction: "Αυτή η σκάλα έχει μακρύτερα σκαλιά."
      K-1 Artist Loops 9_instruction: "Ποιός είναι ο ευκολότερος τρόπος για να σχεδιάσεις
        αυτές τις σκάλες;"
      K-1 Artist Loops Free Play_instruction: "Ελεύθερο παιχνίδι, σχεδιάστε κάτι διασκεδαστικό!"
      K-1 Artist1 1_instruction: "Σχεδίασε το πόδι του ανθρώπου με μία γραμμή"
      K-1 Artist1 10_instruction: "Σχεδίασε και κάνε άλμα για να σχεδιάσεις την διακεκομμένη
        διαδρομή για το θησαυρό X"
      K-1 Artist1 2_instruction: "Σχεδίασε τα μουστάκια στην γάτα με δύο γραμμές!"
      K-1 Artist1 3_instruction: "Σχεδίασε δύο γραμμές ανατολικά και δύο γραμμές βορεινά
        γιά να τελειώσει το σπίτι!"
      K-1 Artist1 4_instruction: "Σχεδίασε γραμμές προς τα πάνω, από πάνω και κάτω
        για να ολοκληρωθεί το κάστρο!"
      K-1 Artist1 5.5_instruction: "Ολοκλήρωσε τον τρίτο πύργο του κάστρου χρησιμοποιώντας
        σύντομες γραμμές"
      K-1 Artist1 5_instruction: "Σχεδίασε τον μίσχο του λουλουδιού με δύο γραμμές!"
      K-1 Artist1 6_instruction: "Τελείωσε την εικόνα χρησιμοποιώντας ένα μπλοκ άλματος!"
      K-1 Artist1 7_instruction: "Χρησιμοποίησε το μπλοκ άλματος για να κινηθείς χωρίς
        να σχεδιάζεις. Κάντε ένα άλμα και να σχεδιάσετε μια γραμμή."
      K-1 Artist1 8_instruction: "Σχεδίασε την διακεκομμένη γραμμή, χρησιμοποιώντας
        τόσο τα μπλοκ άλματος όσο και τα μπλοκ σχεδιασμού"
      K-1 Artist1 9_instruction: "Σχεδίασε και κάνε ενα αλμα για να κάνεις μιά διακεκομμένη
        γραμμή"
      K-1 Artist1 Assessment 1_instruction: "Σχεδίασε τις μικρές και τις μεγάλες γραμμές!"
      K-1 Artist1 Assessment 2_instruction: "Σχεδίασε τις σύντομες διακεκομμένες γραμμές!"
      K-1 Artist2 1_instruction: "Σχεδίασε ένα τετράγωνο κάτω από το τρίγωνο."
      K-1 Artist2 2_instruction: "Κάνε άλμα και να σχεδιάσε ένα τετράγωνο δίπλα στο
        σπίτι."
      K-1 Artist2 3_instruction: "Σχεδίασε ένα τετράγωνο πάνω από το άλλο τετράγωνο"
      K-1 Artist2 4_instruction: "Σχεδίασε ένα ορθογώνιο για να ολοκληρώσης της γέφυρας."
      K-1 Artist2 5_instruction: "Σχεδίασε ένα ορθογώνιο για να ολοκληρωθούν οι βάσεις
        της γέφυρας"
      K-1 Artist2 6_instruction: "Σχεδίασε δύο τετράγωνα για να φτιάξεις ένα ορθογώνιο!"
      K-1 Artist2 Assessment1_instruction: "Εκτίμηση: Σχεδιάστε ένα τετράγωνο δίπλα
        στηο άλλο τετράγωνο."
      K-1 Artist2 Free Draw_instruction: "Σχεδίασε οτιδήποτε!"
      K-1 Artist2_7_instruction: "Σχεδίασε ένα ορθογώνιο για να συμπληρώσεις το πάνω
        συρτάρι της συρταριέρας!"
      K-1 Bee 1_instruction: "Μετακίνησέ με στο λουλούδι, πάρε το νεκταρ, μετα πήγαινέ
        με στην κηρήθρα και φτιάξε μέλι"
      K-1 Bee 10_instruction: "Πάρε τέσσερα νέκταρ και μετα κάνε δύο μέλια!"
      K-1 Bee 11.5_instruction: "Πάρε τέσσερα νέκταρ για να κάνεις τέσσερα μέλια!"
      K-1 Bee 11_instruction: "Πάρε τρία νέκταρ για να κάνεις ένα μέλι"
      K-1 Bee 12_instruction: "Πάρε τρία νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee 13_instruction: "Πάρε τρία νέκταρ και μετά κάνε ένα μέλι!"
      K-1 Bee 14_instruction: "Πήγαινέ με στο νέκταρ, μάζεψέ το, πήγαινέ με στο μέλι
        και κάνε μέλι"
      K-1 Bee 15_instruction: "Πάρε δύο νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee 2_instruction: "Μετακίνησέ με στο λουλούδι, πάρε το νεκταρ, μετα πήγαινέ
        με στην κηρήθρα και φτιάξε μέλι"
      K-1 Bee 3_instruction: "Μετακίνησέ με στο λουλούδι, πάρε το νεκταρ, μετα πήγαινέ
        με στην κηρήθρα και φτιάξε μέλι"
      K-1 Bee 4_instruction: "Πάρε δύο νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee 5_instruction: "Πάρε τρία νέκταρ για να κάνεις τρία μέλια!"
      K-1 Bee 6_instruction: "Πάρε δύο νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee 7_instruction: "Πάρε τρία νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee 8_instruction: "Πάρε δύο νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee 9_instruction: "Πάρε δύο νέκταρ για να κάνεις δύο μέλια!"
      K-1 Bee Assessment 1_instruction: "Πάρε νέκταρ για να κάνεις μέλι!"
      K-1 Bee Assessment 2_instruction: "Πάρε νέκταρ για να κάνεις μέλι!"
      K-1 Bee Loops 1_instruction: "Πάρε το νέκταρ για να κάνεις μέλι!"
      K-1 Bee Loops 10_instruction: "Μάζεψε όλο το νέκταρ και φτιάξε όλο το μέλι."
      K-1 Bee Loops 11_instruction: "Πάρε ολό το νέκταρ και το μέλι!"
      K-1 Bee Loops 12_instruction: "Πάρε όλο το νέκταρ και όλο το μέλι."
      K-1 Bee Loops 2_instruction: "Χρησιμοποίησε ένα βρόγχο «επανάληψη» να μετακινηθείς
        και στη συνέχεια πάρε το νέκταρ και κάνε μέλι!"
      K-1 Bee Loops 3_instruction: "Χρησιμοποίησε τρεις βρόγχους «επανάληψη» για να
        πάρεις το νέκταρ και κάνε μέλι!"
      K-1 Bee Loops 4_instruction: "Χρησιμοποίησε βρόγχους «επανάληψη» για να πάρεις
        το νέκταρ, να κάνεις μέλι και να κινηθείς!"
      K-1 Bee Loops 5_instruction: Χρησιμοποίησε βρόγχους "επανάληψη" για να πάρεις
        το νεκταρ και το μέλι!
      K-1 Bee Loops 6_instruction: Χρησιμοποίησε ένα βρόγχο "επανάληψη" για να πάρεις
        το νεκταρ να πάρεις το μέλι και να κινηθείς!
      K-1 Bee Loops 7_instruction: "Πάρε το νέκταρ και κάνε μέλι!"
      K-1 Bee Loops 8_instruction: "Πάρε το νέκταρ και κάνε μέλι!"
      K-1 Bee Loops 9_instruction: "Πάρε όλο το νέκταρ και κάνε όλο το μέλι."
      K-1 Bee Loops Assessment 1_instruction: "Πάρε νέκταρ να κάνεις μέλι και χρησιμοποίησε
        βρόγχους για να κινηθείς!"
      K-1 Bee Loops Assessment 2_instruction: "Πάρε νέκταρ να κάνεις μέλι και χρησιμοποίησε
        βρόγχους για να κινηθείς!"
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: "Χτίσε μια πυραμίδα τριών
        επιπέδων, δεν υπάρχουν άλλες οδηγίες, έτσι παίξε με τα κομμάτια μέχρι να το
        πετύχεις!"
      k-1 maze 1_instruction: "Μπορείς να με κινήσεις Δυτικά για να πιάσω το γουρούνι;"
      K-1 Maze 10_instruction: "Πήγαινε γύρω-γύρω από την ΤΝΤ για να φτάσω το γουρούνι! "
      K-1 Maze 11_instruction: "Ακολούθησε το μονοπάτι και οδήγησέ με στο χαζό γουρούνι.
        Να αποφύγεις το ΤΝΤ αλλοιώς τα φτερά θα πετάξουν! Υπόδειξη: Είναι Νότια από
        εμένα."
      K-1 Maze 2_instruction: "Μετακίνησέ με Ανατολικά για να με πας στο γουρούνι!"
      K-1 Maze 3_instruction: "Μετακίνησέ με Νότια για να με πας στο γουρούνι!"
      K-1 Maze 4_instruction: "Μετακίνησέ με Βόρεια για να με πας στο γουρούνι!"
      K-1 Maze 5_instruction: "Μετακίνησέ με Ανατολικά για να με πας στο γουρούνι!"
      K-1 Maze 6_instruction: "Μετακίνησέ με σε μια κατεύθυνση, μετα σε μια άλλη για
        να φτάσω το γουρούνι!"
      K-1 Maze 7_instruction: "Μετακίνησέ με σε μια κατεύθυνση, μετα σε μια άλλη για
        να φτάσω το γουρούνι!"
      K-1 Maze 8_instruction: "Μετακίνησέ με σε μια κατεύθυνση, μετα σε μια άλλη για
        να φτάσω το γουρούνι!"
      K-1 Maze 9_instruction: "Μετακίνησέ με σε μια κατεύθυνση, μετα σε μια άλλη για
        να φτάσω το γουρούνι!"
      K-1 Maze Assessment 1_instruction: "Αξιολόγηση -- Πήγαινέ με στο γουρούνι!"
      K-1 Maze Assessment 12_instruction: "Επίπεδο αξιολόγησης"
      K-1 Maze Assessment 13_instruction: "Επίπεδο αξιολόγησης"
      K-1 Maze Assessment 2_instruction: "Αξιολόγηση -- Πήγαινέ με στο γουρούνι!"
      K-1 maze debug 1_instruction: "Αλλαξε τον κώδικα για να πάω στο γουρούνι!"
      K-1 maze debug 10_instruction: "Βρες τα λάθη αυτού του επιπέδου, αναδιατάσοντας
        και μεταβάλλοντας τα μπλοκς ώστε να με πας στο γουρούνι!"
      K-1 maze debug 11_instruction: "Αυτή είναι μια δοκιμή! \\r Εντόπισε τα σφάλματα
        σε αυτό το επίπεδο, αναδιατάσοντας και αλλάζοντας τα μπλοκ για να με πας στο
        γουρούνι"
      K-1 maze debug 2_instruction: "Βρες τι λείπει, και στη συνέχεια πρόσθεσε μπλοκς
        για να με πας στο γουρούνι!"
      K-1 maze debug 3_instruction: "Κάτι δεν είναι σωστό. ΑΦΑΙΡΕΣΕ μπλοκς για να
        με πας στο γουρούνι!"
      K-1 maze debug 4_instruction: "Ανοιξε αυτα τα μπλοκ και διόρθωσέ τα! Νομίζω
        ότι μπορεί να πηγαίνω ανάποδα."
      K-1 maze debug 5_instruction: "Βρες τα λάθη αυτού του επιπέδου, αναδιατάσοντας
        και μεταβάλλοντας τα μπλοκς ώστε να με πας στο γουρούνι!"
      K-1 maze debug 6_instruction: "Βρες τα λάθη αυτού του επιπέδου, αναδιατάσοντας
        και μεταβάλλοντας τα μπλοκς ώστε να με πας στο γουρούνι!"
      K-1 maze debug 7_instruction: "Βρες τα λάθη αυτού του επιπέδου, αναδιατάσοντας
        και μεταβάλλοντας τα μπλοκς ώστε να με πας στο γουρούνι!"
      K-1 maze debug 8_instruction: "Βρες τα λάθη αυτού του επιπέδου, αναδιατάσοντας
        και προσθέτοντας μπλοκς ώστε να με πας στο γουρούνι!"
      K-1 maze debug 9_instruction: "Βρες τα λάθη αυτού του επιπέδου, αναδιατάσοντας
        και μεταβάλλοντας τα μπλοκς ώστε να με πας στο γουρούνι!"
      K-1 Maze debug Assessment 1_instruction: "Αξιολόγηση--Εντόπισε τα σφάλματα σε
        αυτό το επίπεδο με αναδιάταξη και προσθήκη τετραγώνων για να με πας στο γουρούνι!"
      K-1 Maze Loops 1_instruction: "Πήγαινε με στο γουρούνι!"
      K-1 Maze Loops 10_instruction: "Πήγαινέ με στο γουρούνι! Χρησιμοποιώντας το
        μπλοκ «επανάληψη» θα το κάνει ευκολότερο."
      K-1 Maze Loops 11_instruction: |-
        Πήγαινέ με στο γουρούνι!  \r
        Ο βρόγχος  `επανάληψη` θα το κάνει ευκολότερο.
      K-1 Maze Loops 12_instruction: "Πήγαινέ με στο γουρούνι! Ο βρόγχος `επανάληψη`
        θα το κάνει ευκολότερο."
      K-1 Maze Loops 2_instruction: "Χρησιμοποίησε το μπλοκ «επανάληψη» για να με
        πας στο γουρούνι!"
      K-1 Maze Loops 3_instruction: "Πήγαινέ με στο γουρούνι! Φρόντισε να χρησιμοποιήσεις
        βρόγχο ΄επανάληψη'."
      K-1 Maze Loops 4_instruction: "Πήγαινε με στο γουρούνι!"
      K-1 Maze Loops 5_instruction: "Πήγαινέ με στο γουρούνι! Φρόντισε να χρησιμοποιήσεις
        βρόγχο ΄επανάληψη'."
      K-1 Maze Loops 6_instruction: "Πήγαινέ με στο γουρούνι! Φρόντισε να χρησιμοποιήσεις
        βρόγχο ΄επανάληψη'."
      K-1 Maze Loops 7_instruction: "Πήγαινέ με στο γουρούνι! Φρόντισε να χρησιμοποιήσεις
        βρόγχο ΄επανάληψη'."
      K-1 Maze Loops 8_instruction: "Χρησιμοποίησε βρόγχο ΄επανάληψη΄ για να με πας
        στο γουρούνι."
      K-1 Maze Loops 9_instruction: "Πήγαινε με στο γουρούνι!"
      K-1 Maze Loops Assessment 1_instruction: "Δες ολα αυτά που μάθαμε! Χρησιμοποίησε
        \nένα βρόγχο`επανάλαβε` για να με πας στο γουρούνι!\n"
      K-1 Maze Loops Assessment 2_instruction: "Χρησιμοποίησε το βρόγχο ΄επανάλαβε΄
        για να με πας στο γουρούνι!"
      K-1 Maze Multi 14_instruction: "Επίπεδο αξιολόγησης"
      K-1 Maze Multi 15_instruction: "Επίπεδο αξιολόγησης"
      K-1 Maze Sequence Assessment 1_instruction: "Ας δούμε τι έχεις μάθει! \\r \nΚινήσου
        σε μια διεύθυνση, \nμετά σε μια άλλη, για να με πας στο γουρούνι."
      K-1 Maze Sequence Assessment 2_instruction: "Κινήσου σε μια διεύθυνση, \nμετά
        σε μια άλλη, για να με πας στο γουρούνι.\n"
      kikiTesting_instruction: |
        .\r
         .\r
        .\r
        .\r
        .\r
        .\r
        \r
        .\r
        \r
      love_spring_1_instruction: |
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: |-
        Figure out how to change this code so that Robin
        chooses a number between 1 and 20.  \r
        \r
        When you're ready, press "Run"
        and play until you guess Robin's number!
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: |
        In this version of the Internet Simulator,
        you can connect to up to 5 other people in a room. When you send messages
        in the room, everyone receives them. What are some of the challenges of this
        system, and how might you solve them?\r
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
      NetSim Standalone Routers Addresses_instruction: |-
        For this activity, connect
        to a router with the others in your group. Important note: The router will
        only properly route messages where the first 4 bits are the To: address and
        the second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
      NetSim Standalone Sending Numbers_instruction: "You and your partner can now\nreliably
        send messages back and forth without extra coordination! While you're\nalways
        sending bits back and forth, you can also represent those bits as decimal\nnumbers.
        What kinds of information can you represent with this system? \n"
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: "Σχεδίασε κάτι φοβερό! Ο κώδικάς σου αποθηκεύεται
        σαν έργο \nόπου μπορείς να επιστρέψεις οποιαδήποτε στιγμή.\n"
      NEW Course 4 Artist Functions 1_instruction: "Μπορείς να σχεδιάσεις ένα τετράγωνο
        \nπου είναι 100 εικονοστοιχεία σε μήκος, χρησιμοποιώντας ένα βρόγχο επανάληψης;\n"
      NEW Course 4 Artist Functions 10.1_instruction: |
        Χρησιμοποίησε τις συναρτήσεις από τα προηγούμενα παζλ
         για να σχεδιάσεις αυτό το μοτίβο.
      NEW Course 4 Artist Functions 10_instruction: Κάνε κλικ στο κουμπί "Επεξεργασία"
        για να συμπληρώσεις τα μπλοκς στον ορισμό της συνάρτησης για να κάνεις ένα
        τετράγωνο 40 εικονοστοιχεία.
      NEW Course 4 Artist Functions 11_instruction: |
        Τώρα θέλουμε να δημιουργήσουμε μια νέα λειτουργία που ονομάζεται "Σχεδιασμός σειράς τετραγώνων" που σχεδιάζειί έξι τετράγωνα στην σειρά.  Μπορείτε να χτίσετε αυτη την σειρά χρησιμοποιώντας την συνάρτηση «σχεδίασε ενα τετράγωνο 20» που έχουμε ήδη δημιουργήσει; Σημείωση: Βλέπεις ότι έχουμε αλλάξει το στυλό για να είναι πολύ λεπτότερο. Κάντε κλικ στο κουμπί "Επεξεργασία" στην συνάρτηση  «σχεδίασε ενα τετράγωνο 20» για να δείς πώς γίνεται! \r
      NEW Course 4 Artist Functions 12_instruction: Χρησιμοποίησε τη λειτουργία "σχεδίασε
        μια σειρά τετραγώνων" από το τελευταίο παζλ για να σχεδιάσεις αυτό το μοτίβο
      NEW Course 4 Artist Functions 13_instruction: 'Μπορείς να σχεδιάσεις ένα σχήμα
        αστεριού, χρησιμοποιώντας τη λειτουργία "σχεδίασε μια γραμμή τετραγώνων";
        Υπόδειξη: Επεξεργαστείτε τη συνάρτηση "σχεδίασε μια γραμμή τετραγώνων", έτσι
        ώστε να μην χρειάζεται να το ονομάσεις δύο φορές.  Σημείωσε ότι θα πρέπει
        να προχωρήσεις μπροστά έναν ορισμένο αριθμό εικονοστοιχείων και να στρίψεις
        144 μοίρες.'
      NEW Course 4 Artist Functions 14_instruction: "Χρόνος ελεύθερου παιχνιδιού! "
      NEW Course 4 Artist Functions 2_instruction: "Μπορείς να σχεδιάσεις 3 τετράγωνα
        με απόσταση 20 εικονοστοιχεία μεταξύ τους; Υπόδειξη: κάθε τετράγωνο έχει πλευρά
        100 εικονοστοιχεία"
      NEW Course 4 Artist Functions 3_instruction: Εδώ είναι έναςνέος τύπο μπλοκ.
        Ονομάζεται ένα μπλοκ «Λειτουργία». Κάνε κλικ στο κουμπί "Επεξεργασία" και
        στη συνέχεια γεμίσέ με τον κώδικα για τον σχεδιασμό ενός τετραγώνου με πλευρά
        100 εικονοστοιχεία. Όταν ολοκληρώσεις τη διαδικασία επεξεργασίας συνάρτησης,
        κάνε κλικ στο κουμπί "Κλείσιμο" για να επιστρέψεις στο πρόγραμμά σου.
      NEW Course 4 Artist Functions 4_instruction: "Χρησιμοποίησε τη συνάρτηση «Σχεδίασε
        ένα τετράγωνο» για να σχεδιάσεις αυτό το μοτίβο. Υπόδειξη: Θα πρέπει να χρησιμοποιήσεις
        ένα μπλοκ «γύρισε δεξιά κατά 120 μοίρες» μετά από κάθε τετράγωνο."
      NEW Course 4 Artist Functions 5_instruction: Πως ήξερε το μπλοκ "Σχεδίασε ένα
        τετράγωνο" τι εντολές να τρέξει; Κάνε κλικ στο "Επεξεργασία", στο μπλοκ συνάρτησης
        «σχεδιάσε ένα τετράγωνο». Τα μπλοκς στο πρόγραμμα επεξεργασίας είναι ο ορισμός
        που κάνει το «σχεδίασε ένα τετράγωνο». Όταν τελειώσεις, κάνε κλικ στο κουμπί
        «Αποθήκευση και κλείσιμο» και στη συνέχεια "Εκτέλεση"
      NEW Course 4 Artist Functions 6_instruction: |
        Μπορείς να σχεδιάσεις αυτήν την εικόνα, χρησιμοποιώντας την συνάρτηση "Σχεδιασμός τετραγώνου"; Υπόδειξη: κάθε τετράγωνο απέχει από το άλλο 120 εικονοστοιχεία. \r
      NEW Course 4 Artist Functions 7_instruction: 'Καταλαβαίνεις πως να χρησιμοποιείς
        τα μπλοκ λειτουργιών; Ας τροποποιήσουμε αυτό το τετράγωνο ώστε να εχει μήκος
        200 εικονοστοιχεία. Υπόδειξη: κλικ στο "αλλαγή" για να μπεις στην επεξεργασία
        της λειτουργίας "σχεδίασε ενα τετράγωνο". Θυμήσου να κάνεις κλικ στο "αποθήκευση
        και τελος" για να αποθηκεύσεις την αλλαγή. '
      NEW Course 4 Artist Functions 8_instruction: "Έχουμε δημιουργήσει μια νέα λειτουργία
        για σένα που ονομάζεται «σχεδίασε ένα τρίγωνο».  Μπορείς να επεξεργαστείς
        τον ορισμό της συνάρτησης για να σχεδιάσετε ένα τρίγωνο με πλευρές 100 εικονοστοιχεία;"
      NEW Course 4 Artist Functions 9_instruction: "Μπορείς να σας λύσεις αυτό προσθέτοντας
        μόνο ένα μπλοκ;"
      NEW Course 4 Artist Functions inspire_instruction: "Κάνε κλικ εδώ για να δείς
        την εικόνα έμπνευσης και πάλι."
      New Course 4 Artist Functions Level 4_instruction: "Χρησιμοποίησε την λειτουργία
        «Σχεδίασε ένα τετράγωνο» για να σχεδιάσεις αυτό το μοτίβο."
      NEW Course 4 Artist Params 1_instruction: Ας ορίσουμε αυτή συνάρτηση για να
        σχεδιάσεις ένα τετράγωνο με πλευρά 50 εικονοστοιχεία. Κάνε κλικ στο κουμπί
        "Επεξεργασία" για να ξεκινήσεις.
      NEW Course 4 Artist Params 10_instruction: "Δημιούργησε μια συνάρτηση «σχδιασε
        ένα εξάγωνο» με μία παράμετρο μήκους. Υπόδειξη: Αυτό το εξάγωνο έχει πλευρές
        που είναι 100 εικονοστοιχεία σε μήκος. "
      NEW Course 4 Artist Params 11_instruction: "Μπορείς να σας καταλάβεις πώς να
        σχεδιάσεις αυτό το σχήμα; Επεξεργάσου τη συνάρτηση για να χρησιμοποιήσεις
        την παράμετρο «πλευρές»."
      NEW Course 4 Artist Params 12_instruction: "Μπορείς να ολοκληρώσεις αυτό το
        σχέδιο; Οι πλευρές ολων των σχημάτων έχουν μήκος 100 εικονοστοιχεία."
      NEW Course 4 Artist Params 12a_instruction: Αυτή η εικόνα είναι παρόμοια με
        την τελευταία. Μπορείς να χρησιμοποιήσεις ένα βρόγχο "για" μαζί με την συνάρτησή
        σου για να κάνεις αυτό το σχέδιο;
      NEW Course 4 Artist Params 13_instruction: 'Ας επεξεργαστούμε αυτή τη λειτουργία
        «σχεδιάσε ένα πολύγωνο». Έχει ήδη μια παράμετρο «πλευρές». Τώρα, ας προσθέσουμε
        μια παράμετρο "μήκος". \r Υπόδειξη: Η περίμετρος του κάθε σχήματος έχει μήκος
        200 εικονοστοιχεία. Θυμάσε την εξίσωση για να κάνεις σχήματα στο ίδιο μέγεθος,
        όταν έχουν διαφορετικό αριθμό πλευρών;'
      NEW Course 4 Artist Params 14_instruction: Επεξεργάσου το "Σχεδίασε ένα σπιράλ"
        να χρησιμοποιεί παραμέτρους "μήκος" και "πλευρές" και, στη συνέχεια, δημιούργησε
        ξανά αυτά τα σχήματα.
      NEW Course 4 Artist Params 15_instruction: "Ελεύθερο παιχνίδι: Εδώ είναι οι
        λειτουργίες που έχεις γράψει, και λίγες ακόμη για να παίξεις. Σχεδίασε κάτι
        φοβερό! Παίξε με το πάχος της πένας για να δείς πόσο διαφορετικά φαίνονται
        τα σχέδιά σου!"
      NEW Course 4 Artist Params 2_instruction: "Δημιούργησε μια συνάρτηση «σχεδίασε
        ένα τρίγωνο» με πλευρές 50 εικονοστοιχεία από το μηδέν"
      NEW Course 4 Artist Params 3_instruction: |
        Τώρα ας χρησιμοποιήσουμε τη συνάρτηση για να σχεδιάσεις 5 τρίγωνα στην σειρά. Υπόδειξη: κάθε τρίγωνο απέχει από το άλλο 30 εικονοστοιχεία. \r
      NEW Course 4 Artist Params 4_instruction: Είδατε τίποτα διαφορετικό σε αυτά
        τα μπλοκ συνάρτησης; Κάνε κλικ στην επιλογή "Εκτέλεση" για να δούμε τι θα
        συμβεί.
      NEW Course 4 Artist Params 5_instruction: "Συμπληρώστε το ??? στην παράμετρο
        μήκους του μπλοκ. Υπόδειξη: Το πεντάγωνο έχει πλευρές 100 εικονοστοιχεία. "
      NEW Course 4 Artist Params 6_instruction: Συμπλήρωσε την παράμετρο "μήκος" για
        να σχεδιάσεις αυτά τα σχήματα, αντικαθιστώντας το "???" με τους σωστούς αριθμούς.
        Το τετράγωνο και το τρίγωνο έχουν πλευρές 100 εικονοστοιχεία, ενώ η κάθε πλευρά
        του εξαγώνου είναι 75 εικονοστοιχεία.
      NEW Course 4 Artist Params 7_instruction: "Μπορείw να ολοκληρώσεiw αυτό το σχέδιο;
        Υπόδειξη: Οι πλευρές του κάθε τριγώνου είναι 25 εικονοστοιχεία μεγαλύτερες
        από την τελευταία.  Το πρώτο τρίγωνο έχει μήκος πλευράς 25 εικονοστοιχεία."
      NEW Course 4 Artist Params 8_instruction: "Ο κώδικας της συνάρτησης για το τρίγωνο
        είναι σπασμένος. Μπορείς να επεξεργαστείς τη συνάρτηση για να τον φτιάξεις,
        και στη συνέχεια να σχεδιάσεις τρίγωνα με πλευρά 25, 50 και 75;"
      NEW Course 4 Artist Params 9_instruction: 'Κάνε κλικ στο κουμπί "Επεξεργασία"
        για να συμπληρώσεις τον ορισμό της συνάρτησης «σχεδίασε ένα τετράγωνο » και
        να προσθέσεις μια παράμετρο. Θα πρέπει να παίρνει μία παράμετρο μήκους, ακριβώς
        όπως το τρίγωνο. Αυτή τη φορά, σχεδίασε 3 τετράγωνα: 25, 50 και 75 εικονοστοιχεία
        σε μήκος, σε απόσταση100 εικονοστοιχεία.'
      NEW Course 4 Artist Params inspire_instruction: "Εμπνευση Ελεύθερου Παιχνιδιού:
        Τώρα έχεις μάθει όλα όσα χρειάζεται να ξέρεις για να κάνεις ένα σχέδιο σαν
        αυτό! Εάν αυτή η εικόνα σε εμπνέει, προσπάθησε να κάνεις κάτι παρόμοιο. Διαφορετικά,
        δημιούργησε κάτι δικό σου. \\r \\r Θέλεις να ξέρεις πώς έγινε το μοτίβο έμπνευση; "
      NEW Course 4 Artist Vars 1.5_instruction: 'Ρίξε μια ματιά στον κώδικα, μπορείτε
        να δείς πώς το μπλοκ "Ορισμός μήκους" και "μήκος" συνεργάζονται; Κάνε κλικ
        στο "Εκτέλεση" για να το δείς σε δράση. '
      NEW Course 4 Artist Vars 12_instruction: "Τώρα, επαναδημιούργησε τον αλγόριθμο
        από το τελευταίο επίπεδο και δημιούργησε ενα πεντάγωνο με πλευρές 150."
      NEW Course 4 Artist Vars 2.5_instruction: 'Ρίξε μια ματιά στον κώδικα, μπορείτε
        να δείς πώς το μπλοκ "Ορισμός μήκους" και "μήκος" συνεργάζονται; Κάνε κλικ
        στο "Εκτέλεση" για να το δείς σε δράση. '
      NEW Course 4 Artist Vars 2_instruction: 'Σύρετε ένα μπλοκ αριθμού στο μπλοκ
        "Ορισμός μήκους" για να σχεδιάσεις ένα σύνολο τριγώνων 50 εικονοστοιχείων. '
      NEW Course 4 Artist Vars 4 5_instruction: "Τρομερή δουλειά στο τελευταίο παζλ,
        ας το δοκιμάσουμε ξανά αυτή τη φορά, ας κάνουμε αυτόν τον προτότυπο σχεδιασμό
        με εξάγωνα 60 εικονοστοιχείων."
      NEW Course 4 Artist Vars 4_instruction: "Ας δοκιμάσουμε ξανά. Μπορείς να ορίσεις
        τη μεταβλητή μήκος για να κάνει αυτό το προτότυπο σχέδιο με εξάγωνα; Υπόδειξη:
        Είναι πολλαπλάσιο του 10."
      NEW Course 4 Artist Vars 6_instruction: |
        Σχεδίασε αυτό το μοτίβο, ρίχνοντας τη μεταβλητή μήκους στις σωστές θέσεις, και στη συνέχεια ρύθμισε τη σωστή αξία για το μήκος. (Υπόδειξη: είναι πολλαπλάσιο του 10).  \r \r Δες ε πώς ορίζεις την τιμή για το μήκος μία φορά, και ο κώδικας χρησιμοποιεί τη σωστή αξία παντού; \r \r \r
      NEW Course 4 Bee For Loops 1_instruction: "Χρησιμοποίησε ένα βρόγχο για να συλλέξεις
        το νέκταρ από κάθε λουλούδι."
      NEW Course 4 Bee For Loops 10_instruction: |
        Χρησιμοποίησε την μεταβλητή "μετρητής" του βρόγχου για
        να ελεγξεις πόσο μακριά θα κινηθείς οριζόντια.
      NEW Course 4 Bee For Loops 10a_instruction: "Έτοιμος για μια πρόκληση;  Χρησιμοποίησε
        ότι έχεις μάθει σχετικά με βρόχους και προσπάθησε να λύσεις αυτό το πρόβλημα.
        Θυμήσου: Ίσως χρειαστεί να εκτελέσεις τη λύση πολλές φορές πριν καταλάβις
        τα βήματα."
      NEW Course 4 Bee For Loops 11_instruction: "Μπορείς να χρησιμοποιήσεις την μεταβλητή
        του βρόγχου \nγια να ελέγξεις την κίνηση και να συλλέξεις το νέκταρ;\n"
      NEW Course 4 Bee For Loops 2_instruction: "Πρόσθεσε τον κώδικα που είναι απαραίτητος
        για να βεβαιωθείς ότι η μέλισσα συλλέγει όλο το νέκταρ. Δες πόσο κώδικα χρειάζεσαι
        για αυτό το παζλ! (Θα μαθαίνουμε πιο απλό τρόπο στον επόμενο γρίφο)"
      NEW Course 4 Bee For Loops 3_instruction: 'Αχ, ο «για» βρόγχος το κάνει πολύ
        πιο εύκολο! Όλος ο κώδικας που χρειάζεσαι είναι εδώ, ρίξε μια ματιά πώς έχει
        συγκροτηθεί και στη συνέχεια κάνε κλικ στο κουμπί "Εκτέλεση" για να δείς πώς
        λειτουργεί. '
      NEW Course 4 Bee For Loops 4 4_instruction: Τώρα πρέπει να κινηθούμε προς τα
        εμπρός "μετρητής" φορές, κατόπιν πάρε το νέκταρ "μετρητής" φορές. Μπορείς
        να χρησιμοποιήσεις δύο βρόγχους "επανάληψη" για να λύσεις αυτή την πρόκληση;
      NEW Course 4 Bee For Loops 4_instruction: 'Αντικαταστήστε το ??? στο βρόγχο
        "για" με την μεγαλύτερη ποσότητα νέκταρ που πρέπει να συλλέξει η μέλισσα. '
      NEW Course 4 Bee For Loops 5 5_instruction: "Παίρνεις το κολάϊ στην χρήση του
        βρόγχου «για»; Ας βοήσουμε την μέλισσα να συλλέξει το υπόλοιπο νέκταρ."
      NEW Course 4 Bee For Loops 5_instruction: Μπορείς επίσης να χρησιμοποιήσεις
        ενα βρόγχο "για" και να μετρήσεις αντίστροφα. Προσπάθησε να συλλέξεις το νεκταρ
        μετρώντας αντίστροφα από το 5 έως το 1 κατα 1.
      NEW Course 4 Bee For Loops 6_instruction: Ο τελευταίος αριθμός στον βρόχο "για"
        ονομάζεται "βήμα". Κάθε φορά που ο βρόχος εκτελείται, ο μετρητής μεταβάλλεται
        κατα το βήμα. Δοκίμασε να συλλέξεις τα λουλούδια χρησιμοποιώντας βήμα 2.
      NEW Course 4 Bee For Loops 7_instruction: 'Τώρα, ας συνδυάσουμε τη μεταβλητή
        "μετρητής" με ένα μπλοκ μαθηματικών! Πώς μπορείς να χρησιμοποιήσεις τη μεταβλητή
        "μετρητής" για να πλοήγηθείς στον κήπο με τα λιγότερα δυνατα μπλοκ; Τι πρέπει
        να κάνεις για να συλλέξεις 3, 6, 9, 12, 15 νέκταρ αυτή τη φορά; Το μυστικό
        είναι στη μεταβλητή "μετρητής"! \r \r Θυμηθείτε: αν o βρόγχος μετρά αυξανόμενα,
        το βήμα προστίθεται στην μεταβλητή "μετρητής" κάθε φορά που εκτελείται.'
      NEW Course 4 Bee For Loops 8_instruction: "Έχεις αυτό! Ποιό θα έπρεπε να είναι
        το βήμα σου για να συλλέξεις 3, 6, 9, 12, 15 νέκταρ; \\r Υπόδειξη: τι πρέπει
        να προσθέσετε σε κάθε αριθμό, για να πάρετε τον επόμενο αριθμό;"
      NEW Course 4 Bee For Loops 9_instruction: "Αν ο βρόγχος σου μετράει μειούμενος,
        το βήμα αφαιρείται από τον μετρητή κάθε φορά που εκτελείται ο βρόγχος. Ποιό
        θα πρέπει να είναι το βήμα προσαύξησης ώστε να συλλέξεις νέκταρ 9, στη συνέχεια,
        6, και στη συνέχεια 3;"
      NEW Course 4 Bee For Loops 95_instruction: Ρίξτε μια ματιά σε κάθε κομμάτι βρόγχου
        "για" που μόλις δημιούργησες.  Μπορείς να υπολογίσεις ποιούς αριθμούς θα πρέπει
        να διπλασιάσεις για να λύσεις το παζλ; Γιατί λειτουργεί;
      NEW Course 4 Play Lab Params 11_instruction: "Ήρθε η ελεύθερη ώρα παιχνιδιού!
        Διασκεδάστε με όλα τα μπλοκ της εργαλειοθήκης σου. "
      NEW Course 4 Play Lab Params 5 5_instruction: "Ας προσπαθήσουμε και πάλι, αλλά
        με λιγότερη βοήθεια. Τι χρειάζεσαι να αλλάξεις αυτή τη φορά για να κάνουν
        περιπολία οι ηθοποιοί;"
      NEW Course 4 Play Lab Vars 4 5_instruction: «Τι πιστεύεις ότι θα κάνει αυτός
        ο κωδικός; Πάτησε "Εκτέλεση" για να δούμε τι θα συμβεί.»
      NEW Course 4 Play Labs For Loops 7a_instruction: "Χρησιμοποιώντας ό, τι έχεις
        μάθει μέχρι τώρα, μπορείς να κάνεις τον Δεινόσαυρο να προχωρά ένα βήμα προς
        τα εμπρός κάθε φορά που ο Πιγκουίνος μετράει;"
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: "Ήρθε η ώρα ελεύθερου
        του παιχνιδιού! Διασκέδασε με όλα τα μπλοκ της εργαλειοθήκης σου. "
      NEW Course 4 Play Labs For Loops 8a_instruction: "Πρόκληση: Πώς θα χρησιμοποιήσεις
        τον βρόγχο «για» ώστε κάθε ηθοποιός να πάει γύρω και να πεί τον αριθμό του,
        στη συνέχεια, να εξαφανιστεί από την οθόνη; "
      New Play Lab Project_instruction: "Δημιουργήστε τη δική σας ιστορία ή παιχνίδι!
        Ο κώδικάς σου σας αποθηκεύεται σαν έργο και έτσι μπορείτε να επιστρέψετε ανα
        πάσα στιγμή."
      Ninjacat Demo B (copy 1)_instruction: |
        \r
        Let’s begin by exploring a simple
        videogame, and then figuring out how it works. You can use the arrow keys
        to move the ninja left, right and jump - try to catch the unicorn and avoid
        the dragon!\r
        \r
        \r
        \r
          \r
        \r
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: |
        Freeplay: Here are some functions to play with.  Can
        you draw a bat?\r
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: |
        Το να πηγαίνεις προς ένα creeper (κριπερ) είναι κακή ιδέα.
        Προχώρησε προσεκτικά τριγύρω τους για να φτάσεις στην ασφάλεια του σπιτιού σου.
      Overworld Chop Tree - allthethings_instruction: |
        Wood is a very important resource.
        Many things are made from it. Walk to the tree and use the “destroy block”
        command to chop it down.
      Overworld Chop Tree_instruction: |
        Το ξύλο είναι πολύ σημαντικός πόρος. Πολλά πράγματα
        φτιάχνονται από αυτό. Πήγαινε σε ένα δέντρο και χρησιμοποίησε την εντολή "κατάστρεψε μπλοκ" για
        να το κόψεις.
      Overworld Chop Trees_instruction: |
        Πρέπει να φτιάξουμε ένα σπίτι πριν δύσει
        ο ήλιος. Τα σπίτια θέλουν πολύ ξύλο. Κόψε και τα 3 δέντρα.
      Overworld Free Play 20x20_instruction: |
        Συγχαρητήρια! Ολοκλήρωσες
        όλα τα παζλ μας! Τώρα εξόρυξε, χτίσε και δημιούργησε κάτι μοναδικό χρησιμοποιώντας
        όλα όσα έμαθες μέχρι τώρα.
      Overworld Free Play_instruction: |
        Αυτό το τοπίο είναι δικό σου για να παίξεις. Μπορείς
        να επιλέξεις τί θα χτίσεις.
      Overworld House Frame - A_instruction: |
        Ας φτιάξουμε το σπίτι μας! Αυτό το μέρος
        φαίνεται καλό. Φτιάξε το σκελετό του στα μπλοκ χώματος.
      Overworld House Frame - C_instruction: |
        Ας φτιάξουμε το σπίτι μας! Αυτό το μέρος
        φαίνεται καλό. Φτιάξε το σκελετό του στα μπλοκ χώματος.
      Overworld House Frame B_instruction: |
        Μόλις ολοκληρωθεί ο τοίχος, ας φτιάξουμε
        το υπόλοιπο σπίτι ακολουθώντας τα δικά σου σχέδια. Πρέπει να επαναλάβεις τον εαυτό σου
        αρκετές φορές εδώ.
      Overworld House Frame B2_instruction: |
        Μόλις ολοκληρωθεί ο τοίχος, ας φτιάξουμε
        το υπόλοιπο σπίτι ακολουθώντας τα δικά σου σχέδια. Πρέπει να επαναλάβεις τον εαυτό σου
        αρκετές φορές εδώ.
      Overworld House Frame C_instruction: |
        Μόλις ολοκληρωθεί ο τοίχος, ας φτιάξουμε
        το υπόλοιπο σπίτι ακολουθώντας τα δικά σου σχέδια. Πρέπει να επαναλάβεις τον εαυτό σου
        αρκετές φορές εδώ.
      Overworld House Frame Chosen_instruction: |
        Χτίσε το υπόλοιπο σπίτι από
        όποια υλικά σου αρέσουν. Η εντολή "επανάλαβε" θα σου είναι χρήσιμη.
      Overworld House Frame_instruction: |
        Ας φτιάξουμε το σπίτι μας! Αυτό το μέρος
        φαίνεται καλό. Φτιάξε τον σκελετό του σπιτιού στα μπλοκ χώματος.
      Overworld Minecart Track_instruction: |
        Ήρθες πίσω στην επιφάνεια με πολλούς
        από τους υπόγειους πόρους. Τώρα, θα φτιάξουμε μία γραμμή στον
        χωματόδρομο από το σπίτι σου. Το πρώτο βήμα είναι να καθαρίσουμε το μονοπάτι. Ακολούθησε το μονοπάτι
        και καθάρισε τα δέντρα.
      Overworld Move to Sheep_instruction: |
        Πρόσθεσε μία δεύτερη εντολή "πάμε εμπρός" για
        να φτάσεις τα πρόβατα.
      Overworld Place Wall_instruction: |
        Κάθε σπίτι ξεκινά με έναν τοίχο. Φτιάξε το
        πρώτο μέρος του σπιτιού σου βάζοντας τις εντολές "βάλε" και "πάμε εμπρός" μέσα
        στο βρόχο επανάληψης.
      Overworld Plant Crops_instruction: |
        Είναι καλό να προγραμματίζουμε. Βάλε καλλιέργειες σε
        κάθε πλευρά του νερού ώστε να μην πεινάσεις αργότερα.
      Overworld Powered Minecart_instruction: |
        Πολύ καλά! Μάζεψες αρκετούς από τους
        πόρους και έφτιαξες ένα καλό σπίτι. Τώρα βάλε ράγες από την άκρη του χάρτη
        προς την πόρτα του σπιτιού σου.
      Overworld Shear Sheep_instruction: |
        Ώρα για κουρά προβάτων! Χρησιμοποίησε την εντολή "κούρεψε"
        για να μαζέψεις μαλλί από όλα τα πρόβατα.
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: |-
        Here's your Big Game as you last left it.
        Try clicking the Remix button to spin off a new remix of your project.\r
        \r
        Any
        changes you make after you click Remix will be saved on your new remix and
        not on your main Big Game.
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. \n"
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. \n"
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: Με τις συναρτήσεις μπορείτε να καθορίσετε νέα
        μπλοκ! Έχουμε μετακινήσει τα μπλοκ για να σχεδιάσετε ένα τετράγωνο σε μία
        συνάρτηση που ονομάζεται "Σχεδιάστε ένα τετράγωνο". Μπορείτε να χρησιμοποιήσετε
        την συνάρτηση "Σχεδιάστε ένα τετράγωνο" για να δημιουργήσετε τα γυαλιά; Τα
        τετράγωνα απέχουν 75 εικονοστοιχεία το ένα από το άλλο.
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" \n"
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      PS Log test - Define and use turnAround_instruction: |
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      Quantum Bee - Ryan_instruction: "Αυτά τα σύννεφα με ενοχλούν! Μερικά από τα
        σύννεφα έχουν λουλούδια στο εσωτερικό, και μερικά όχι. Θα πρέπει να ελέγξω
        κάθε σύννεφο, και να πάρω νέκταρ μόνο από τα λουλούδια."
      Quantum Bee_instruction: Τα μωβ λουλούδια μπορεί να έχουν είτε 1 ή 0 νέκταρ,
        αλλά δεν γνωρίζεις ποιο! Πρόσεξε να μην συλλέξεις νέκταρ από ένα μωβ λουλούδι,
        αν δεν έχει καθόλου. Ελεγξε αν το νέκταρ είναι ίσο με 1 χρησιμοποιώντας το
        μπλοκ "αν".
      Rocket Height Course A_instruction: |
        Follow the Design Recipe to create a function
        rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: "Η μέλισσα θέλει μόνο νέκταρ αυτή
        τη στιγμή. Δεν είναι όλα τα αντικείμενα λουλούδια, έτσι κάντε έλεγχο κάτω
        από κάθε ΣΎΝΝΕΦΟ, να δει αν κρύβεται ένα λουλούδι. Αν είναι, τότε μπορείτε
        να συγκεντρώσετε νέκταρ."
      Ryan - Bee Conditionals_instruction: "Η μέλισσα θέλει μόνο νέκταρ αυτή τη στιγμή.
        Δεν είναι όλα τα αντικείμενα λουλούδια, έτσι κάνε έλεγχο κάτω από κάθε ΣΎΝΝΕΦΟ,
        να δεις αν κρύβεται ένα λουλούδι. Αν ναι, τότε μπορείς να συγκεντρώσεις νέκταρ."
      Ryan Doily Step 1_instruction: |
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: "Εδώ είναι μια συνάρτηση που ονομάζεται
        «περιπολία». Επεξεργάσου την ώστε να μετακινεί τη γάτα επάνω 400 εικονοστοιχεία
        και στη συνέχεια, κάτω 400 εικονοστοιχεία."
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\\r\n\\r\nUse
        an \"if\" statement to program your game to call the \"level_up\"\nfunction
        only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample:
        \"player_score\" > 6\\r\n\\r\nPlay the game, and make it past level\n4 to
        move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      sample1_instruction: |-
        Our adventurer wants to collect gems.  But she can only
        use 4 blocks to get them.\r
        \r
        Can you help her grab as many as she can
        using just 4 blocks?
      sample2_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only 4 blocks.
      sample3_instruction: Now you can help bee make all of the honey.
      sample4_instruction: |-
        Our adventurer has found a stash of coins in this cave.\r
        \r
        Can
        you help her grab as many as she can using just 7 blocks?
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee make all of the honey.'
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: Βελανίδι! Βελανίδι! Βελανίδι! Χρησιμοποιήσε ένα μπλοκ
        "εάν" για να με πας εκεί με το μικρότερο αριθμό τετραγώνων.
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: "Εντάξει, ας το κάνουμε πάλι για εξάσκηση - αυτό δεν είναι
        πολύ διαφορετικό, αλλά προσέξε τον τοίχο!"
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: Το "Αν-αλλιώς" ελέγχει μια συνθήκη, και έπειτα κάνει το
        ένα πράγμα ή το άλλο. Για να με πάς στο βελανίδι προσπάθησε να χρησιμοποιήσεις
        αυτό το νέο μπλόκ.
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: Αλλη μία εξάσκηση του μπλόκ "Αν-αλλιώς", μπορείς να το
        κάνεις σωστά με την πρώτη προσπάθεια;
      scrat 20_instruction: "Μπορείς να προσθέσεις μόνο 3 τετράγωνα για να με βοηθήσεις
        να λύσω έναν πιο περίπλοκο λαβύρινθο; Αν το κάνεις σωστά, μπορώ να περπατήσω
        οποιοδήποτε μονοπάτι με στροφές, χωρίς να έχει σημασία το μήκος. Βιάσου! Οι
        πάγοι λιώνουν!"
      SpecialFrozenLevel_instruction: "Έχετε γίνει επίσημα ένα άριστος καλλιτέχνης!
        Δημιουργήστε μια χειμερινή χώρα των θαυμάτων."
      Standalone_Artist_1_instruction: Καλωσορίσατε στον Καλλιτέχνη! Αρχικά, ας φτιάξουμε
        ένα απλό τετράγωνο με το μπλοκ "στρίψε δεξιά" και το μπλοκ "προχώρησε μπροστά".
        Κάθε πλευρά πρέπει να έχει μήκος 100 εικονοστοιχεία.
      Standalone_Artist_2_instruction: "Σχεδιάστε αυτόν το ρόμβο με γωνίες 120 και
        60 μοιρών και πλευρές μήκους 150 εικονοστοιχεία."
      Standalone_Artist_3_instruction: "Μπορείτε να σχεδιάσετε αυτό το εξάγωνο με
        πλευρές μήκους 100 εικονοστοιχεία στρίβοντας κατά 60 μοίρες;"
      Standalone_Artist_4_instruction: "Τώρα έχεις να παίξεις και με ένα νέο μπλοκ,
        τον βρόγχο. Αυτό το μπλοκ επαναλαμβάνει ένα σύνολο εντολών. Τι θα γίνει αν
        επαναλάβεις αυτές τις εντολές 6 φορές;"
      Standalone_Artist_5.5_instruction: 'Δείτε πόσο απλοποιήσαμε τον κώδικα του ρόμβου
        με την "Επανάληψη". Μπορείς να επαναλάβεις όλη την ακολουθία εντολών 12 φορές
        για να σχεδιάσεις το λουλούδι. Συμβουλή: Πρέπει να στρίβεις 30 μοίρες μετά
        το βρόχο του ρόμβου, ώστε να μην σχεδιάζειςσυνεχώς τον ίδιο ρόμβο.'
      Standalone_Artist_5_instruction: "Πόσες φορές πρέπει να επαναλάβεις το ρόμβο
        για να σχεδιάσεις το λουλούδι;"
      Standalone_Artist_6_instruction: "Επανάλαβε αυτόν τον κώδικα εξαγώνου 6 φορές
        για να δημιουργήσεις το σχέδιο. Πόσες μοίρες πρέπει να στρίβετε κάθε φορά;
        Συμβουλή: Να διαιρέσετε τις μοίρες του κύκλου με το πόσες φορές κάνετε την
        επανάληψη."
      Standalone_Artist_7_instruction: 'Η συνάρτηση είναι ένα ακόμα προγραμματιστικό
        εργαλείο που σε βοηθά να αποφύγεις να γράφεις τα ίδια πράγματα. Αυτή η συνάρτηση
        σχεδιάζει ένα λουλούδι, οπότε μπορείς να τη χρησιμοποιήσεις κάθε φορά που
        θέλεις να σχεδιάσεις ένα λουλούδι. Με αυτήν και με το νέο μπλοκ "άλμα" σχεδίασε
        αυτά τα λουλούδια. Συμβουλή: Η απόσταση μεταξύ των λουλουδιών είναι 150 εικονοστοιχεία'
      Standalone_Artist_8_instruction: Ορίστε μια συνάρτηση με τίτλο "Σχεδίασε ένα
        σχήμα" την οποία προγραμματίσαμε για να σχεδιάζει εξάγωνα. Εκτέλεσε τον κώδικα
        για να δείς τι κάνει και μετά πειραματίσου με τη συνάρτηση για να δείς τι
        γίνεται. Μπορείς να την κάνεις να σχεδιάσει ένα μοτίβο με τετράγωνα, τρίγωνα
        ή οκτάγωνα;
      Standalone_Artist_9_instruction: "Τώρα μπορείςνα φτιάξεις όποια εικόνα σου αρέσει!
        Έχεις και μια άδεια συνάρτηση την οποία μπορείς να βάλεις να κάνει ό, τι θέλεις!"
      Standalone_Artist_v2_instruction: Καλωσορίσατε στον Καλλιτέχνη! Αρχικά, ας φτιάξουμε
        ένα απλό τετράγωνο με το μπλοκ "στρίψε δεξιά" και το μπλοκ "προχώρησε μπροστά".
        Κάθε πλευρά πρέπει να έχει μήκος 100 εικονοστοιχεία.
      template test_instruction: what up
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know\nhow
        many shovelfuls of dirt this hole needs.  \\r\nCan you write a program\nthat
        keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows
        you to use Internet Simulator to relay a message. See the worksheet\nfor more
        detailed instructions.  \n"
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: "Οδηγίες"
      U2 frequency random sub_instruction: "Οδηγίες"
      U2 vigenere cipher_instruction: "Οδηγίες"
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: |-
        Develop a Protocol
        for Reliably Sending a Message.\r
        \r
        Constraints:\r
        - Packets may contain
        only 6 characters\r
        - Packets may drop with small probability\r
        - Packets
        may not arrive in order
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: |
        Now use the Internet Simulator to send the
        battleship moves. For setup, join a Room with your group, and add ships to
        your paper board for each opponent. When playing, all communication must be
        done through the tool, so no talking, but have fun!\r
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: |-
        For this activity, connect to a
        router with the others in your group. Important note: The router will only
        properly route messages where the first 4 bits are the To: address and the
        second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      U2L5 NetSim Classroom Internet_instruction: |
        For this activity, connect to
        a router with the others in your group. The Internet Simulator now provides
        a place for you to put the To and From addresses, so you don't have to type
        out the bits manually.\r
        \r
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: |
        Add an else statement so that the program
        will tell the user when they are right and when they are wrong. (Click to
        see full instructions)\r
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.5_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.6_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1_instruction: |
        Console.log the records returned by a call
        to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table.(Click to see full instructions)\r
      U3 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U3 - Read Record - 4.1_instruction: |
        Print out each record return from the
        readRecords call individually. (Click to see full instructions)\r
      U3 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U3 - Read Record - 5 and half_instruction: |
        Print out the name of each movie
        in the records return from the readRecords call. (Click to see full instructions)\r
      U3 - Read Record - 5_instruction: |
        Print out the name of each movie in the
        records return from the readRecords call. (Click to see full instructions)\r
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: |
        Create an array of all the movies made
        in 2008 and print it out. (Click to see full instructions)\r
      U3 - Search Terms - 2_instruction: |
        Print out all the movies with year 2008
        using the readRecords search terms. (Click to see full instructions)\r
      U3 - Search Terms - 3_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 4_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 5_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Search Terms - 6_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: |
        Add functionality that counts how many heads
        in a row are flipped. (Click to see full instructions)\r
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: Clicker game - Try it out!
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3 Variables consolelog_instruction: |
        Use the write block to display the value
        of size
      U3 Variables flower example_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables gray square_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: |
        Test out your predictions
        from the previous level.
      U3 Variables randomize your square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      U3 Variables write_instruction: |
        Use the write block to display the value of
        size
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().\r
        (Click
        to see full instructions)
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: "Read the documentation for the \"arcLeft\"\nand
        \"arcRight\" commands and then draw the squiggles as shown. \n"
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. \n"
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: |-
        The last problem was an example
        of syntax error.  App Lab did not understand which object it should be listening
        to for a "click" event so it showed an error message in the console to let
        you know.  Another kind of error is a logical error - the program is valid,
        but it's not doing what you want it to do.\r
        \r
        This program has 2 errors.
        A (tricky) syntax error and logical error.  Find them, fix them, and make
        the program work as expected.
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer.
        \n"
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. \n"
      U3L16 - intro getText_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text when\nthe
        Play Again button is clicked (Click to see full instructions) \n"
      U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      U3L16 Mad Lib getText_instruction: "Before setting the text area with your\nMad
        Libs outline, get the user's text and incorporate their responses. (Click\nto
        see full instructions) \n"
      U3L16 Mad Lib setText_instruction: "When the Next button is clicked, set the\ntext
        area to have the main outline of your How-to Mad Libs (without the user's\ninput).
        (Click to see full instructions) \n"
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase string\nfunctions
        to the user's text. (Click to see full instructions) \n"
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: |
        We've given you a piece
        of code from the previous screen.  Try changing the value assigned to foo
        to see the string change. \r
        Do this: \r
        1. Try changing the value assigned
        to foo to see the string change. \r
        2. By only modifying the lines of code
        that were given to you, try to get the output to say: “The value of foo is:
        9.  And isn’t that fine.” \r
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: |-
        Try out console.log.  Do this: replace
        the statement write("foo is: " + foo) with console.log("foo is: " + foo).  Run
        the program and you should see the output show up in the console area below
        the workspace.  Then try adding a few more console.log statements.  Display
        some text.  Make another variable and display that.  \r
        The app screen will
        be blank -- that's the point.  With console.log you can test output behind
        the scenes in a way the user cannot see.  \r
        \r
        \r
        GIF: U3L19-useconsolelog.gif
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside
        the if statements to check for a ? in the input. \n"
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: |
        Fill in the function, findBeginNder()
        to get the strings "begin" and "nder" from a sentence no matter where
        in the sentence they exist.\r
        Print the strings and their index to the console.
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: "Write a conditional statement that detects\nif
        a command does not contain the phrase \"bad.\" If \"bad\" is not detected,\nmake
        Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry,\nI
        don't know about bad movies.\" \n"
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: |
        Place a console.log command below the
        readRecords command. (Click to see full instructions)\r
      U4 - Read Record - 1.3_instruction: |
        Add a console.log command inside the callback
        function. (Click to see full instructions)\r
      U4 - Read Record - 1_instruction: |
        Use console.log to display the records returned
        by a call to readRecords. (Click to see full instructions)\r
      U4 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table. (Click to see full instructions)\r
      U4 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U4 - Read Record - 4.1_instruction: |
        Use indexes and dot notation to reference
        values in the response from the database. (Click to see full instructions)\r
      U4 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U4 - Read Record - 5_instruction: |
        Using a for loop, display the title of each
        movie in your database. (Click to see full instructions)\r
      U4 - Read Record - part 1 - template_instruction: |
        Use console.log to display
        the records returned by a call to readRecords. (Click to see full instructions)\r
      U4 - ReadRecords - Contacts App 1_instruction: |
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4L02 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: "Πρότυπο"
      U4L06 Data Storage 1_instruction: |
        Fill in your name instead of "Enter Your
        Name", run the app and click the button. Run it multiple times with different
        names! Watch the console and use the ‘View Data” button to see how the table
        is updated. As you play around make sure you can explain the purpose of each
        of the circled parts of the diagram.\r
        \r
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none
        we started. Add a text label to collect the users name and use that as\nthe
        data input for the record.\\r\n\\r\nRun the app and click the button multiple\ntimes
        and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: "Add a couple radio buttons or checkboxes\nto
        our app. Then find a way to collect the data from those. \n"
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId()\nblocks
        to collect additional data. \n"
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: |-
        Student should create a sentence which puts
        together all the pieces from a record.\r
        \r
        <<Name>> is <<Age>> years old
        and like <<Food>>
      U4L15 Read Data 3_instruction: |
        Print the sentence using the first JSON object
        in the array\r
        \r
      U4L15 Read Data 4_instruction: |-
        \r
        Use a random record from the list of records
        to display your sentence.
      U6 - Final Project - Project Level_instruction: |
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: |
        Η λάβα κρύβεται πίσω από κάποια από αυτά
        τα μπλοκ, τα οποία πρέπει να καλύψεις πριν προχωρήσεις μπροστά. Μία εντολή "αν"
        θα είναι χρήσιμη εδώ. Πρόσθεσε μία εντολή "πάμε εμπρός" στο σωστό μέρος
        για να εξορύξεις αυτά τα μπλοκ.
      Underground If Statements_instruction: |
        Τώρα τα πράγματα γίνονται δύσκολα. Εξόρυξε
        3 κοκκινόπετρες, αλλά μην πέσεις μέσα στη λάβα. Χρησιμοποίησε μία εντολή "αν" για να βάλεις πλακόστρωτο
        πάνω σε κάθε λάβα που αποκαλύπτεις.
      Underground Iron_instruction: |
        Το να περπατάς πάνω σε τηγμένη λάβα είναι κακή ιδέα. Βάλε
        πλακόστρωτο για να φτιάξεις μία γέφυρα και μετά εξόρυξε τουλάχιστον δύο μπλοκ σιδήρου.
      Underground Mine in a Circle_instruction: |
        Βρες έναν τρόπο για να πάρεις 5 διαμάντια και
        7 κοκκινόπετρες! Δοκίμασε να χρησιμοποιήσεις μία εντολή επανάληψης μέσα στην εντολή επανάληψης για να περπατήσεις
        σε τετράγωνο.\r
      Underground Mining Coal_instruction: |
        Θα βρεις τους πιο πολύτιμους πόρους
        υπόγεια, αλλά μπορεί να είναι σκοτεινά. Βάλε τουλάχιστον δύο δαυλούς και εξόρυξε τουλάχιστον
        2 κάρβουνα.
      Underground Test Level_instruction: "Μάζεψε όλα τα ορυκτά!"
      Vigenere_instruction: Test
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
