---
de-DE:
  data:
    long_instructions:
      2-3 Artist 1 new: Hallo, ich bin ein Künstler. Du kannst mich programmieren,
        um fast alles zu zeichnen. Benutze ein paar Blöcke, um mich über die grauen
        Linien im Bild zeichnen zu lassen (jede Linie ist 100 Pixel lang).
      2-3 Artist 11: 'Gib dem Stoppschild einen Rahmen, indem du ein Achteck mit 100
        Pixel Seiten machst. '
      2-3 Artist 12: 'Zeichne einen Kreis, um den Augapfel fertigzustellen! Wenn der
        Zeichner sich um 1 Grad mit jedem Schleifenschritt dreht, wie oft musst Du
        den Code dann wiederholen, um einen Kreis zu zeichnen? '
      2-3 Artist 2 new: Dieses Haus hat eine halbfertige Wand. Jede Seite hat 100
        Pixel, aber die halbfertige nur 50. Vervollständige die Wand.
      2-3 Artist 3.4: "Der \"springe\"-Baustein bewegt den Künstler, ohne eine Linie
        zu zeichnen. \nZeichne die gestrichelte Linie nach. Verwende dazu \"springe\"
        und \"bewegen\"-Bausteine."
      2-3 Artist 3new: |-
        Der rote Hut ist 100 Pixel hoch. Zeichne den schwarzen Hut, der 70 Pixel kleiner ist, zu Ende.

        _(Beachte: Die Breite des schwarzen Hutes beträgt 50 Pixel.)_
      2-3 Artist 4: Hilf mir, das Haus für diese Katze zu vervollständigen.
      2-3 Artist 6: |-
        Dieses Haus braucht ein Dach! Zeichne das Dreieck.

        Hinweis: alle drei Seiten sind gleich lang.

        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif" width="300"/>
      2-3 Artist 7: 'Zeichne die rechte Hälfte des letzten Fensters zu Ende. Jedes
        Quadrat der Fensterscheibe beträgt 25 Pixel. '
      2-3 Artist 8: |-
        Zeit eine Scheune zu bauen.

        Mache die Räume für jedes Tier, indem die Scheune in 2 gleich große Rechtecke aufgeteilt wird.

        Hinweis:
        Die Rechtecke sind 200 Pixel weit und 100 Pixel hoch.

        Es gibt viele verschiedene Wege um das Rätsel zu lösen.
      2-3 Artist 9 NEW: Vervollständige diesen Drachen
      2-3 Artist Assessment 1: "**Prüfung**: Vervollständige den letzten Zahn. Er
        ist 25 Pixel breit und 25 Pixel hoch."
      2-3 Artist Debugging 1: "Dieser Hut sollte nur 50 Pixel breit sein. \nKannst
        du das korrigieren?\n\n<br/>"
      2-3 Artist Debugging 10: "Der Steuerkreuz auf meinem Controller ist zu schmal.
        \n\nKannst du es um 10 Pixel breiter machen?\n\nVersuche den Code zuerst auszuführen,
        um zu sehen, was los ist."
      2-3 Artist Debugging 11: |-
        Meine Schneeflocke fällt auseinander!

        Kannst du herausfinden, was los ist?
      2-3 Artist Debugging 2: "Dieser Code für die Schnurrhaare der Katze ist falsch.
        \n\nKorrigiere diesen Code, um Whisker zu zeichnen, die alle die gleiche Länge
        haben."
      2-3 Artist Debugging 3: "Mein Boot hat ein Loch! \n\nWas musst du ändern, so
        dass sich die Enden treffen?"
      2-3 Artist Debugging 5: Der Code für das Bein und den Fuß ist falsch? Kannst
        du das beheben?
      2-3 Artist Debugging 6: |-
        Sieht aus, als sitze ich auf einem Stuhl, dem ein Bein fehlt!

        Ändere den Code, um das letzte Bein zu zeichnen.
      2-3 Artist Debugging 7: |-
        Sieht so aus, als ob das C im Code spiegelverkehrt gezeichnet wird!

        Kannst du es wieder wie ein C aussehen lassen?
      2-3 Artist Debugging 8: |-
        Mein Lehrer sagt, dass ich beenden soll, was ich anfange!

        Hilf mir, mein Windrad fertigzustellen. Kannst du herausfinden, was los ist?
      2-3 Artist Debugging 9: |-
        Irgendwas ist faul!

        Der Code für diesen Stengel ist falsch. Kannst du herausfinden, wie du den Zeichner dazu bringen kannst, den Stengel auf die richtige Weise zu zeichnen?
      2-3 Artist Debugging Assessment 1: "Warum ist das Quadrat um 75 Pixel zu klein
        geraten?\\\r\n\\\r\nWo ist der Fehler? Kannst du es größer machen?"
      2-3 Artist Free Play: Freies Spiel! Zeichne was du willst.
      2-3 Artist Functions 1: "\"Ich bin ein Zombie-Künstler. Ich liebe es zu zeichnen!\"
        \ \n\nHilf dem Zombie, quadratische Gläser zu zeichnen.  \n\nDie Brücke zwischen
        den Brillengläsern ist 25 Pixel kürzer als die Breite der Quadrate, die 100
        Pixel beträgt."
      2-3 Artist Functions 11: "Wir haben die Funktion \"Ein Quadrat zeichnen\" in
        \"Ein Sechseck zeichnen\" umbenannt, aber sie gibt uns immer noch Felder!
        \ \n\nKannst du die Funktion \"Draw a hexagon\" ändern, um ein Hexagon mit
        50 Pixel Seiten zu zeichnen? \n\nZeichne das Bild mit der neuen Funktion!"
      2-3 Artist Functions 11.5: "Hier ist die gleiche „Zeichne ein Sechseck“-Funktion.
        \n\nWas passiert, wenn du das Hauptprogramm 6 Mal wiederholst und dich dabei
        jedes Mal um 60 Grad drehst?"
      2-3 Artist Functions 2: "Mit Funktionen können Sie neue Bausteine definieren!
        \n\nWir haben die Blöcke, die zum Zeichnen eines Quadrats benötigt werden,
        in eine Funktion namens \"Zeichne ein Quadrat\" verschoben. Verwende diesmal
        die Funktion \"Zeichne ein Quadrat\", um die Gläser zu erstellen. \n\nDie
        Quadrate sind 75 Pixel voneinander entfernt."
      2-3 Artist Functions 3: "Bearbeite die Funktion, um ein Quadrat mit einer Seitenlänge
        von 115 zu zeichnen, um die größeren Gläser zu zeichnen. \n\nDie Quadrate
        sind nun 45 Pixel voneinander entfernt."
      2-3 Artist Functions 4: Platziere die Funktion nun in eine Schleife, um diese
        drei Quadrate zu zeichnen.
      2-3 Artist Loops New 1: |-
        Lasst uns den Kopf des Roboters malen! Kannst du ein Quadrat malen, dessen Seiten 100 Pixel lang sind?

        <br/>
      2-3 Artist Loops New 10: Jetzt lass uns einen Haufen V's miteinander verbinden,
        sie in einer Schleife zeichnen.
      2-3 Artist Loops New 11: "Zeit, etwas flottes zu machen! \n\nBaue den Code aus
        dem letzten Puzzle neu, aber diesmal füg eine Linkskurve von 30 Grad innerhalb
        der Schleife hinzu. Wiederhole es jetzt 24 Mal statt 8 Mal."
      2-3 Artist Loops New 12: 'Zeichne einen Diamanten mit einer Seitenlänge von
        100 Pixel. '
      2-3 Artist Loops New 13: "Wir werden mit einem Code (in grau) beginnen, um einen
        Diamanten herzustellen. \n\nWiederhole den Grauen Code, um ein lustiges Muster
        zu erstellen!"
      2-3 Artist Loops New 14: |-
        Spiel mit dem Code für den Diamanten herum und schaue, welche anderen Muster du herstellen kannst.

        Versuche größere oder kleinere Drehungen und schaue wie oft du dich dann bewegen musst.
      2-3 Artist Loops New 15: |-
        Zeichne etwas, wozu du gerade Lust hast!
        <br/><br/>
      2-3 Artist Loops New 2: |-
        Hier ist das gleiche Rätsel, das wir gerade gelöst haben, aber diesmal können wir nur einen "bewege vorwärts"-Baustein und einen "Drehe"-Baustein verwenden.

        Kannst du einen `wiederhole` Baustein benutzen, um dieses Rätsel zu lösen?
      2-3 Artist Loops New 9: Zeichne ein einfaches V (beide Seiten haben 50 Pixel),
        um den Pfeil zu vervollständigen.
      2-3 Artist Nested Loops 1: |-
        Du hast schon einmal Schleifen benutzt, um Formen zu zeichnen, aber jetzt werden wir Schleifen in andere Schleifen einfügen!

        Erzeuge einen äußeren `Wiederholungsblock` um diese ganzen Bausteine, um das Muster zu zeichnen.

        <br/>
      2-3 Artist Nested Loops 10: Wiederhole diesen Code 12 Mal, um das Muster zu
        zeichnen.
      2-3 Artist Nested Loops 11: Wiederhole diesen Code 4 Mal, um das Muster zu vervollständigen
        und drehe es um 90 Grad nach jedem Kreis.
      2-3 Artist Nested Loops 12: Wiederhole diesen Code 12 Mal, um die Wirbel zu
        vervollständigen.
      2-3 Artist Nested Loops 2: "Wiederhole nun das Zeichnen des Dreiecks 6 mal.
        \n\nNach jedem Dreieck musst du 60 Grad drehen, bevor du das nächste zeichnen
        kannst."
      2-3 Artist Nested Loops 3: "Du musst dein Dreieck 12 Mal wiederholt zeichnen,
        um dieses Muster zu erzeugen. \n\nTeile die Anzahl der Grad in einem Kreis
        (360) durch die Anzahl der Formen, die du zeichnest (12), um herauszufinden,
        wie weit du dich nach jeder Form drehen musst."
      2-3 Artist Nested Loops 4: |-
        Wiederhole diesen Diamanten 12 mal, um eine Blume zu zeichnen!

        Hinweis: Wir verwenden den gleichen Winkel, um 12 Diamanten erneut zu zeichnen, wie bei den 12 Dreiecken.
        Wie viel musst du nach jeder Form drehen?
      2-3 Artist Nested Loops 5: "Fülle die Fenster dieses Gebäudes mittels einer
        verschachtelten Schleife aus. \n\nDie Fenster sind 20 Pixel lang und 20 Pixel
        auseinander."
      2-3 Artist Nested Loops 6: Dieser Dinosaurier hat 8 Spitzen am Schwanz. Jede
        Spitze ist 30 Pixel lang. Das Dreieck muss 8 mal durchlaufen werden, aber
        sorge dafür, dass es sich nach jedem Durchlauf vorwärts bewegt!
      2-3 Artist Nested Loops 7: "Wiederhole das Zeichnen dieses Dreiecks 10 mal,
        um die Sonne zu zeichnen. \n\nDu musst dich nach jedem Dreieck bewegen und
        drehen. \n\nDu kannst herausfinden, wie viel du drehen musst, indem du die
        Anzahl der Grad in einem Kreis durch die Anzahl der Dreiecke teilst, aus denen
        er besteht."
      2-3 Artist Nested Loops 8: "Nun fügen wir etwas Gras zu unserem Bild hinzu.
        \n\nJeder Grasbüschel ist 50 Pixel voneinander entfernt."
      2-3 Artist Nested Loops 9: "Wir beenden dieses Bild, indem wir unsere Blume
        hinzufügen. \n\nWiederhole das Zeichnen des Diamanten 12 mal, um eine Blume
        zu zeichnen."
      2-3 Artist Nested Loops Free Play: Freies Spiel, zeichne irgendetwas Cooles
        mit verschachtelten Schleifen.
      2-3 Bee Conditionals 11: "Ich frage mich, was da draußen los ist!\n\nHilf mir,
        um den Hof herumzufliegen und Nektar nur von den Blumen zu sammeln, die welche
        haben. "
      2-3 Bee Conditionals 13: |-
        Hier ist viel los!

        Nutze das, was du gelernt hast, um den ganzen Nektar zu sammeln und dann den Honig herzustellen.
      2-3 Bee Conditionals 14: |-
        Lasst uns alles zusammenfügen!

        Verwende das, was du gelernt hast, um mir zu helfen, Nektar nur von Blumen zu sammeln, die ihn haben, und verwende so wenig Bausteine wie möglich.

        Vergiss nicht, am Ende Honig zu machen.
      2-3 Bee Conditionals 15: "Dieses Treppenstufenmuster sollte vertraut aussehen.
        \ \n\nKannst du Nektar nur von den Blüten sammeln, die Nektar besitzen, und
        dabei so wenig Blöcke wie möglich verwenden?"
      2-3 Bee Conditionals 2: "Ich bin eine hungrige Biene! \nHilf mir, den gesamten
        Nektar der Blumen mit der geringsten Anzahl von Bausteinen zu sammeln."
      2-3 Bee Conditionals 3: "Schau dir den ganzen Nektar an!\n\nHilf mir, den Nektar
        zu sammeln und den Honig mit so wenig Blöcken wie möglich herzustellen.  "
      2-3 Bee Conditionals 5: "Diese magischen violetten Blumen ändern sich!\n\nJedes
        Mal, wenn du das Puzzle ausprobierst, können lilafarbene Blumen entweder 1
        Nektar oder gar keinen haben.... aber du wirst die Nummer nicht kennen, bis
        du den Code ausgeführt hast! \n\nAchte darauf, dass du keinen Nektar von einer
        violetten Blume sammelst, wenn sie keinen hat. \nDu musst zuerst überprüfen,
        ob der Nektar gleich 1 ist, indem du den Block `wenn Nektar` benutzt."
      2-3 Bee Conditionals Assessment 1: |-
        **Prüfung:** Sammle den ganzen Nektar.\
        Achte darauf, nicht von einer lila Blume Nektar zu sammeln, wenn sie keinen hat.
      2-3 Bee Debugging 1: |-
        Diese Bausteine nerven mich wirklich!

        Bereinige den oder die Fehler, um den gesamten Nektar zu sammeln.
      2-3 Bee Debugging 2: |-
        Kannst du das Problem hier finden?

        Behebe den oder die Fehler, um den gesamten Nektar zu sammeln.
      2-3 Bee Debugging 3: |-
        Ooh, das hier sticht!

        Behebe den oder die Fehler, um den gesamten Nektar zu sammeln.
      2-3 Bee Debugging 5: "Diese Blume sieht lecker aus! \n\nBeseitige den oder die
        Fehler, um den gesamten Nektar zu sammeln.\\\nDu kannst nun sowohl Ausführen
        als auch Einzelschritt verwenden."
      2-3 Bee Debugging 6: |-
        Was für eine süße Herausforderung!

        Beseitige den/die Fehler, um den gesamten Nektar zu sammeln.
      2-3 Bee Functions 10: Lila Blüten haben entweder 1 oder 0 Nektar.  Erstelle
        eine Funktion, die Nektar nur aus den lila Blüten sammelt, die Nektar haben.
      2-3 Bee Functions 2: "Funktionen sind Programm-Bausteine, die eine Aufgabe ausführen.
        \n\nVerwende die „hohle 5“- Funktion, um gleichzeitig 5 mal Nektar zu holen."
      2-3 Bee Functions 4: "Die „bewege und hole Nektar“- Funktion dreht die Biene,
        sammelt Nektar und bringt die Biene an den Ausgangsort zurück.  \n\nBenutze
        die Funktion, um den ganzen Nektar zu sammeln."
      2-3 Bee Functions Assessment 1: "**Prüfung:** Benutze die gegebene Funktion,
        um von jeder Blüte Nektar zu sammeln."
      2-3 Bee Functions Assessment 2: "**Prüfung:** Erzeuge eine Funktion, mit der
        man sich drehen, vorwärts bewegen und 3 mal Honig erzeugen kann. Anschließend
        lasse die Biene dahin zurückkehren wo sie angefangen hat und drehe um."
      2-3 Bee Loops 1: |-
        Diese Blumen sehen lecker aus!

        Sammle Nektar von jeder der Blüten mit den geringstmöglichen Bausteinen.
      2-3 Bee Loops 13: "**Prüfung:** Sammle den gesamten Nektar mit den wenigsten
        Bausteinen."
      2-3 Bee Loops 3A: Kannst du eine Schleife verwenden um den ganzen Nektar einzusammeln?
      2-3 Bee Loops 3B: Verwende nun den Wiederholen-Baustein um den ganzen Nektar
        aufzusammeln und den ganzen Honig zu erzeugen.
      2-3 Bee Loops 4: |-
        So eine fleißige Biene!

        Hilf den Bienen, den gesamten Nektar zu sammeln und den ganzen Honig mit den geringstmöglichen Bausteinen herzustellen.
      2-3 Bee Loops 4A: "Wie oft können Schleifen dir bei diesem Puzzle helfen?  \n\nSchleifen
        sind dein Freund! Benutze einige von ihnen, um dieses Rätsel mit den wenigsten
        Bausteinen zu lösen."
      2-3 Bee Loops 5: "Die Form dieses Pfades ist anders als die der anderen. \n\nKannst
        du den gesamten Nektar mit so wenigen Bausteinen wie möglich sammeln?"
      2-3 Bee Loops 7: Füge diese Bausteine in eine Schleife ein, um Nektar von jeder
        Blüte zu sammeln?
      2-3 Bee Loops 8: |-
        Benutze die „Solange Nektar“- Schleife, um den ganzen Nektar zu sammeln.

        Diese Schleife wird solange durchlaufen, wie die Bedingung wahr ist - in diesem Fall: `Nektar > 0`.
      2-3 Maze 1: 'Kannst du mir helfen, das böse Schwein zu fangen? Klinke ein paar
        `bewege vorwärts` Bausteine unter dem `Wenn ausführen` Baustein ein und drücke
        auf "Ausführen". '
      2-3 Maze 12: |-
        Plötzlich erscheint ein magischer Baustein!  Mit dem Baustein `widerhole` kannst du Code immer wieder wiederholen.

        Kannst du zum Schwein gelangen, indem du eine Schleife erstellst, die nur einen `bewege vorwärts`-Baustein innerhalb eines `wiederhole` verwendet?
      2-3 Maze 13: Bringt mich zum Schwein! Du kannst diesmal nur einen `bewege vorwärts`
        Baustein verwenden
      2-3 Maze 15: In diesem Rätsel werden dir zwei `wiederhole` Schleifen helfen,
        das Schwein mit der geringsten Anzahl an Schleifen zu erreichen!
      2-3 Maze Loops 18: "Bring mich mit den wenigsten Bausteinen zur Sonnenblume!
        \ \n\nVersuche, eine `Wiederhole`-Schleife in einer anderen zu verwenden,
        um die Menge an Code zu reduzieren, die du brauchst."
      2-3 Maze Loops 19: "Lasst uns das auf eine andere Ebene bringen! \n\nBenutze
        Schleifen, um mich mit den wenigsten Schlaufen zur Sonnenblume zu bringen."
      2-3 Maze Loops Assessment 1: "**Herausforderung:** Bringe mich mit nur 5 Bausteinen
        zur Sonnenblume! "
      4-5 Artist 1: 'Hilf mir, meine Box fertig zu zeichnen. (Jede Linie ist 300 Pixel
        lang) '
      4-5 Artist 11: Vervollständige die grünen Linien. Die Linien sind 300 Pixel
        lang und 15 Pixel voneinander entfernt.
      4-5 Artist 2: Baue diesen Code in eine Schleife ein um so das Quadrat zu vervollständigen.
      4-5 Artist 3: |-
        Dieses rechteckige Blumenbeet hat einen Umfang von 600. Die lange Seite hat eine Länge von 200.

        Zeichne das Rechteck mit so wenigen Bausteinen wie möglich.
      4-5 Artist 3.5: "Versuche herauszufinden, was passiert, wenn du diesen Code
        ausführst (oder drücke einfach \"Ausführen\" und versuche es). \n\nDann wiederhole
        den Code so oft, bis die Zeichnung vollständig ist!"
      4-5 Artist 4: "Wie viele Grad gibt es in einem Kreis?  \n\nHänge die Bausteine
        in eine Schleife, um einen Kreis bunter Farben zu erzeugen."
      4-5 Artist 5: Womit können wir "???" ersetzen, um sicherzustellen, dass der
        Zombie diese Zeichnung mit der bereitgestellten Schleife vervollständigt?
      4-5 Artist 6: Dieses gleichseitige Dreieck hat Winkel von 60, 60 und 60 Grad.
        Jede Seite ist 200 Pixel groß. Vervollständige die Zeichnung.
      4-5 Artist 7: "Dieses rechtwinklige Dreieck hat Winkel von 30, 60 und 90 Grad.
        \ Die Länge der schrägen Seite (Länge der Hypotenuse) beträgt 200 Pixel. \n\nVervollständige
        die Zeichnung."
      4-5 Artist 8: "Die Mittellinie auf einem Fußballfeld ist _senkrecht_ zu den
        Seitenlinien.\\\nDieses Rechteck hat einen Umfang von insgesamt 800 Pixel
        und ist 240 Pixel lang. Wie groß ist er?   \n\nZeichne die Grenzen und die
        Mittellinie."
      4-5 Artist 9: Zeichne die rechte Hälfte dieses Bildes so, dass das Design symmetrisch
        ist. Die Dreiecke sind gleichseitig und haben Seiten, die 50 Pixel lang sind.
      4-5 Artist Assessment 1: "**Prüfung:** Benutze eine Schleife, um das gleichseitige
        Dreieck zu zeichnen. Jede Seite hat eine Länge von 300 Pixeln."
      4-5 Artist Free Draw 1: Freies Zeichnen!  Zeichne, was deine Inspiration dir
        eingibt.
      4-5 Artist Patterns 1: |-
        Zeichne dieses Quadrat mit einer Schleife.

        Jede Seite ist 20 Pixel lang.
      4-5 Artist Patterns 11: Wie oft muss die Schleife durchlaufen werden, damit
        ein Halbkreis gezeichnet wird?
      4-5 Artist Patterns 13: "Nun lass uns das Ganze viermal in einer Schleife wiederholen,
        um diesen Bilderrahmen zu erstellen. Achte auf die Ecken - Du kannst dich
        nicht einfach um 90 Grad drehen! \n\nWenn eine 3-Grad-Drehung 60 Mal einen
        Halbkreis ergibt, welcher dieser Code-Bausteine macht dann einen zusätzlichen
        Viertelkreis für die Ecken?"
      4-5 Artist Patterns 2: |-
        Wenn Du Deine quadratische Schleife in eine andere Schleife platzierst, nennen wir das eine geschachtelte Schleife.

        Was musst Du als äußere Schleife hinzufügen, um sicherzustellen, dass alle 15 Quadrate nebeneinander liegen?
      4-5 Artist Patterns 3: Jetzt gehen wir eine Ebene tiefer! Wir haben diesen ganzen
        Codebaustein in eine weitere Schleife geschachtelt, aber Du musst den Künstler
        wieder an seinen Platz zurückbringen, um die nächste Zeile zu zeichnen. Welchen
        dieser Codeblöcke kann man am Ende der äußersten Schleife platzieren, um das
        ganze Raster zu zeichnen?
      4-5 Artist Patterns 4: |-
        Dieser Diamant hat 50 Pixel Seiten und Winkel von 120 und 60 Grad.

        Benutze eine Schleife, um ihn zu zeichnen.
      4-5 Artist Patterns 6: Wie oft musst du diesen Baustein wiederholen, damit das
        ganze Diamantenraster gezeichnet wird?
      4-5 Artist Patterns 7: Wir wollen den Code der letzten Aufgabe etwas verändern
        und so ein komplizierteres Muster erzeugen. Achte darauf, wie die Diamanten
        sich jetzt überdecken. Versuche es mit einer Änderung des ersten "springe
        rückwärts" Bausteins von 100 auf 50 (halb so weit). Wie weit sollte der Künstler
        beim zweiten "springe rückwärts" Baustein gehen?
      4-5 Artist Patterns 8: Verwende eine Schleife, um dieses Sechseck mit 40 Pixel
        Seiten und 60 Grad Winkel zu zeichnen.
      4-5 Artist Patterns Free Play: Freies Spielen - versuche dein Glück beim Entwerfen
        deines eigenen Musters!
      4-5 Bee Conditionals 1: |-
        Die Biene kann nicht unterscheiden, ob dies eine Blume oder eine Wabe ist. Sammle den Nektar nur aus Blüten, aber prüfe erst, ob es sich um eine Wabe oder um eine Blüte handelt!\
        Aber Achtung, es kann sich ändern!
      4-5 Bee Conditionals 2: "Mehr Wolken! \n\nÜberprüfe unter jeder Wolke, ob sie
        eine Blume versteckt, bevor du Nektar sammelst.  \n\nDenkt daran: Nicht alle
        Wolken verbergen das Gleiche!"
      4-5 Bee Conditionals 4: Das unbekannte Objekt ist entweder eine Blume oder eine
        Bienenwabe. Benutze den „wenn/ansonsten"- Baustein um Nektar zu machen, wenn
        es eine Blüte ist, „ansonsten", um Honig zu erzeugen (weil es eine Wabe ist).
      4-5 Bee Conditionals 5: "Vielleicht ist eine Blume oder eine Wabe unter diesen
        Wolken. \n\nBenutze den „wenn/ansonsten\"- Baustein um Nektar zu machen, wenn
        dort eine Blüte ist, „ansonsten\", um Honig zu erzeugen (weil dort eine Wabe
        ist)."
      4-5 Bee Conditionals 6: "Ich bin nicht sicher, wie viel Nektar diese Blume hat,
        aber ich weiß, dass sie entweder 1, 2 oder 3 Nektar hat. \n\nKombiniere die
        bedingten Blöcke (`if` und/oder `if/else`), um nur so viel Nektar zu erhalten,
        wie die Blume hat. \n\nDenke daran, dass sich die Menge des Nektars jedes
        Mal, wenn du das Puzzle ausführst, ändern kann!"
      4-5 Bee Conditionals 8: "Schreibe die Funktion für `Prüfe Blüte, erzeuge Honig`.
        \n\nDeine Funktion sollte prüfen, ob die violette Blüte 3, 2 oder 1 Nektar
        hat und den gesamten Nektar sammeln. \nDann gehe vorwärts und machen Honig."
      4-5 Bee Debugging 1: |-
        Diese Bausteine nerven mich wirklich.

        Kannst du sie in Ordnung bringen?
      4-5 Bee Debugging Assessment 1: "**Prüfung:** Repariere den Code."
      4-5 Bee Nested Loops 2: "Sammle den ganzen Nektar von allen Blumen. \n\nBenutze
        eine verschachtelte Schleife. "
      4-5 Bee Nested Loops 4: "Sammle den gesamten Nektar jeder Blüte und erzeuge
        Honig bei jeder Honigwabe. \n\nBenutze eine verschachtelte Schleife. "
      4-5 Maze 7: "Bringe den Zombie auf schnellstem Weg zur Sonnenblume. \nKannst
        Du die Aufgabe mit weniger als 11 Blöcken lösen?"
      4-5 Maze 9: |-
        Jetzt gibt es einen "Wiederhole bis"-Baustein.
        Hiermit können wir Befehle wiederholen bis der Zombie auf die Sonnenblume trifft.

        Verwende den "Wiederhole bis"-Baustein, um die Aufgabe mit so wenig Blöcken wie möglich zu lösen.
      4-5 Maze Assessment 1: "**Aufgabe:** Gehe zur Sonnenblume und verwende dabei
        so wenig Bausteine wie möglich."
      4-5 Maze Conditionals 10: "Kannst du nur 3 Blöcke hinzufügen, um dem Zombie
        zu helfen, ein komplexeres Labyrinth zu lösen? \n\nWenn du es richtig machst,
        kann er jeden kurvigen Weg gehen, egal wie lang er ist!"
      4-5 Maze Conditionals 3: 'Benutze den `if`-Baustein, um zu entscheiden, wann
        gedreht werden soll. '
      4-5 Maze Conditionals 4: Ok, löse dieses wie das letzte Puzzle, aber du musst
        dich daran erinnern, wie du den `wenn`-Baustein und `wiederhole bis`-Baustein
        verwendet hast.
      4-5 Maze Conditionals 7: Die Lösung dieses Rätsels ist nicht viel anders, aber
        Vorsicht vor dem Mampfern!
      4-5 Nested Loops 1: 'Vervollständige den Code um die Dreiecke zu zeichnen. Das
        erste ist bereits fertig. Hinweis: Drei Dreiecke in einer 360- Grad- Drehung.'
      4-5 Nested Loops 12: Kannst du diese 36 Dreiecke mit einer verschachtelten Schleife
        zeichnen?
      4-5 Nested Loops 2: 'Erstelle nun eine Schleife in einer weiteren Schleife um
        10 Dreiecke zu zeichnen.\\ Dies nennt man eine verschachtelte Schleife.  '
      4-5 Nested Loops 5: Benutze den angegebenen Code in einer Schleife, um eine
        Windmühle zu erstellen.
      4-5 Nested Loops 6: Kannst du ein Sechseck zeichnen, indem du den Dreieckscode
        wiederholst?
      4-5 Nested Loops 7: "Wiederhole dieses Muster 10 Mal. \n\nWie viel musst du
        jedes Mal drehen, wenn du eine Schleife machst?"
      4-5 Nested Loops 8: "Wiederhole diese Form 6 Mal. \n\nWie viel musst du jedes
        Mal drehen, wenn du eine Schleife machst? "
      4-5 Nested Loops 9: Zeichne die Zähne im Mund des Alligators!
      4-5 While Loops 1: Bringe mich zu dem Loch und fülle es mit zwei Schaufeln Dreck,
        indem Du den `füllen`-Baustein benutzt.
      4-5 While Loops 2: Bringe mich zu dem Erdhaufen und entferne ihn mit 5 Schaufelladungen,
        indem due den `entferne 1` Baustein verwendest.
      4-5 While Loops 3: "Benutze so wenige Blöcke wie möglich, um dieses Puzzle zu
        vervollständigen!  \n\nBewege mich zum Haufen und entferne ihn vollständig,
        dann bewege mich zu dem Loch und fülle es komplett aus."
      4-5 While Loops 4: "Wow, ich habe ein richtig tiefes Loch gefunden!\n\nIch weiß
        nicht, wie viele Schaufeln Erde ich brauche. \\\nKannst du ein Programm schreiben,
        das den Baustein `fülle 1` so lange benutzt, bis der Boden eben ist?  "
      AppLab Intro 7 - Change Screen Color: "<div style=\"float:right\">\n\t<img src=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54
        AM.png\" style=\"height:150px\"> \n</div>\n\n**Aufgabe:** Erzeuge einen grünen
        Bildschirm. \n\n**Wie:** Ziehe einen `setProperty()` Block in den Arbeisbereich.
        Nutze im Dropdown Menü `\"hintergrundfarbe\"` um sie auf `\"grün\"` zu setzen.
        Drücke dann \"Start\".\n\n**Hängst du fest? Kliecke hier:** ![expandable](https://images.code.org/3b5e70522b02867a1df1d5b5e481785e-image-1511279858395.gif)"
      AppLab Intro 7 - Change Text 2: |-
        <div style="float:right">
        <img src="https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29 PM.png" style="height:200px;">
        </div>

        **Ziel:** Vergrößere den Texte und färbe ihn blau.

        **Wie:**  Du brauchst 2 Codezeilen. Setze bei `"label1"` `"font-size"` auf `80` und `"text-color"` auf `"blue"`.

        **Klappt nicht? Klicke hier:** ![expandable](https://images.code.org/2d5d46a03082af3b01847aad6602e2ea-image-1511280140482.gif)
      AppLab Intro 7 - Full Text: "<div style=\"float:right\">\n<img src=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19
        AM.png\" style=\"height:200px\">\n</div>\n\n**Ziel:** Mache die Schaltflächen
        `\"red\"` und `\"blue\"`. Ändere dann den Text in derm groß orangenen Etikett.\n\n**Wie:**
        \n\n-   Du kannst die Maus über Elemente bewegen um ihr `\"id\"` zu sehen.\n-
        \  Setze `\"background-color\"` der Schaltflächen auf `\"red\"` und `\"blue\"`.\n-
        \  Ändere die `\"text\"` Eigenschaft des Etiketts so wie du möchstest, zum
        Beispiel `\"Willkommen bei meiner App!\"`.\n\n**Klappt nicht? Klicke hier:**
        ![expandable](https://images.code.org/4bf99e7352e7c17a5bf73ced80171f6a-image-1511280628092.gif)"
      AppLab Intro 7 - onEvent intro: |-
        <img src="https://images.code.org/3d8c8487ea669563d3401c0009cd9462-image-1511281194897.gif" style="float:right;height:200px">

        **Ziel:**Der Bildschirm beginnt blau. Fügen Sie Code hinzu, damit er grün wird, wenn Sie auf die Schaltfläche "Green-ify" klicken.

        **Wie:** Fügt Code innerhalb des `onEvent()` hinzu, der die `"background-color"` des Bildschirms auf `"green"` setzt.

        **Bist du hängen geblieben? Klicke hier:** ![expandable](https://images.code.org/5ddf6b129bc04b79839b3661ccef788b-image-1511281012076.gif)
      AppLab Intro 7 - onEvent twoButtons: |-
        <img src="https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif" style="float:right;height:200px">

        **Ziel:** Hilfe bei der Fertigstellung dieser Taschenlampen-App. Mit der Taste "On" wird der Bildschirm bereits weiß. Starten Sie die App und probieren Sie es aus. Schreiben Sie dann den Code so, dass die Taste "Off" den Bildschirm wieder schwarz macht.

        **Wie:** Füge Code innerhalb des leeren `onEvent()` hinzu, der die `"background-color"` des Bildschirms auf `"black"` und `"text-color"` des Labels auf `"white"` setzt.

        **Bist du hängen geblieben? Klicke hier:** ![expandable](https://images.code.org/020b1d9b465aaf35967a528a92961c13-image-1511281772276.gif)
      AppLab Intro 7 - playSound: "<img src=\"https://images.code.org/28176329f15dea1a863564b069e72aab-image-1511282702534.44.52
        AM.png\" style=\"float:right;height:200px\">\n\n**Ziel:** Dieses Geräuschabspielgerät
        ist fast fertig! Führe es aus, um zu sehen, wie es funktioniert. Füge dann
        ein Bild, einen Text und einen Ton zur letzten Schaltfläche hinzu.\n\n**Wie:**
        \n\n-   Füge dem Programm ein `onEvent()` hinzu und setze die \"id\" auf `\"button4\"`.
        Ziehen Sie einen `playSound()` in das `onEvent()` und wählen Sie einen Sound
        aus der Bibliothek. \n-   Füge eine `setProperty()` (außerhalb Ihres `onEvent()`)
        hinzu, um die `\"image\"` Eigenschaft der Schaltfläche zu ändern. Wähle dann
        ein Bild über die dritte Dropdown-Liste aus.\n-   Füge einen weiteren Befehl
        `setProperty()` hinzu, um den `\"Text\"` der Schaltfläche zu ändern.\n\n**Bist
        du hängen geblieben? Klicke hier:** ![expandable](https://images.code.org/a3fdcb8954c5e8d585bef64df1ec5b1a-image-1511285408512.gif)"
      AppLab Intro 7 - thisOrThatAddButton: |-
        <img src="https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00 PM.png" style="float:right;height:200px">

        **Ziel:** Füge dem Bildschirm eine zweite Schaltfläche hinzu, die "right" mit einer `"id"` von `"rightButton"` sagt.

        **Wie:** Im Designmodus zieh eine neue Schaltfläche hinein. Positionieren und vergrößern Sie es. Stellen Sie dann seine `"id"`, `"text"`, `"background-color"`, und `"font-size"` ein.

        **Bist du hängen geblieben? Klicke hier:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)
      AppLab Intro 7 - thisOrThatAddScreen: |-
        <img src="https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59 PM.png" style="float:right;height:200px">

        **Ziel:** Erstelle einen neuen Bildschirm namens `"rightScreen"`. Füge ein Textetikett hinzu, auf dem steht: "Du bist rechts abgebogen!".

        **Wie:** Im Designmodus ziehe ein neues Bildschirmelement hinein. Ändere seine `"id"`zu `"rightScreen"`. Ziehe dann ein Label auf den Bildschirm und ändern Sie den Text in "You went right!".

        **Bist du hängen geblieben? Klicke hier:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)
      AppLab Intro 7 - thisOrThatPersonalize: "<a href=\"https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ\"
        target=\"_blank\"><img src=\"https://images.code.org/ba6c0db48cc1c3c28c135f1c2f67f361-image-1511244802597.10.18
        PM.png\" style=\"float:right;height:200px\"></a>\n<a href=\"https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q\"
        target=\"_blank\"><img src=\"https://images.code.org/284b55697d786e0cd64350d0967c5dda-image-1511244806272.11.05
        PM.png\" style=\"float:right;height:200px\"></a>\n<a href=\"https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg\"
        target=\"_blank\"><img src=\"https://images.code.org/445181ff8d84861919512ba9b8e09586-image-1511244809994.12.40
        PM.png\" style=\"float:right;height:200px\"></a>\n\n**Ziel:** Erstelle eine
        eigene App, indem du dieses Projekt erweitern. Dann teile es mit jemandem!\n\n**Wie:**
        Entscheide, welche Art von App du erstellen möchten. Dann erstelle diese,
        indem du weitere Bildschirme, Schaltflächen, Text, Sound und Benutzerinteraktionen
        zu der App hinzufügst. Es gibt noch ein paar weitere Bausteine in der Toolbox,
        mit denen du ebenfalls experimentieren kannst. Wenn du fertig bist, klicke
        auf \"Teilen\", um es an dich selbst oder einen Freund zu senden! \n\n<details>\n\n<summary><b>Wählen
        Sie Ihre eigenen Abenteuerideen aus</b></summary>\n\nProbieren Sie diese <a
        href=\"https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg\" target=\"_blank\">Beispiel
        Abenteuer App</a>, damit du sehen kannst, wie es funktioniert. Hier sind einige
        Ideen, die dir helfen, deine eigene Geschichte zu erfinden.\n\n<li>Mache ein
        Abenteuer über deinen Lieblingscharakter, real oder fiktiv.</li>\n<li>Mache
        ein Abenteuer, das die Geschichte Ihres Lieblingsbuchs, Ihres Lieblingsfilms
        oder Ihrer eigenen Kreation erzählt.</li>\n<li>Make an adventure that has
        a lot of unexpected twists or has a difficult moral choice.</li>\n<br>\n</details>\n\n<details><summary><b>Grußkarte
        Ideen</b></summary>\n\nProbiere diese <a href=\"https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q\"
        target=\"_blank\">Beispiel Grußkarte App</a> aus, damit du sehen kannst, wie
        es funktioniert. Hier sind einige Ideen, die dir helfen, deine eigene Karte
        zu finden.\n\n<li>Denke an einen Geburtstag, Urlaub oder einen anderen besonderen
        Tag, der bevorsteht. Erstelle eine Karte zum Feiern!</li>\n<li>Erstelle eine
        Dankeschön-Karte für jemanden, den du schätzt.</li>\n<li>Erstelle eine Einladung
        für eine bevorstehende Veranstaltung.</li>\n<br>\n</details>\n\n<details><summary><b>Persönlichkeitsquiz
        Ideen</b></summary>\n\nProbieren Sie diese <a href=\"https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ\"
        target=\"_blank\">Beispiel Persönlichkeitsquiz App</a> aus, damit Sie sehen
        können, wie es funktioniert. Hier sind einige Ideen, die Ihnen helfen, Ihr
        eigenes Quiz zu entwickeln.\n\n<li>Machen Sie ein Quiz, das etwas vorschlägt,
        was eine Person mögen könnte, z.B. eine Mahlzeit, ein Team, ein Buch oder
        einen Ort.</li>\n<li>Machen Sie ein Quiz, das anhand der Antworten \"die Zukunft
        voraussagt\".</li>\n<li>Mache ein Quiz, um den Menschen zu helfen, eine schwere
        Entscheidung zu treffen.</li>\n\n</details>"
      AppLab Intro 7 - thisOrThatSetScreen: |-
        <img src="https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop (1).gif" style="float:right;height:200px">

        **Ziel:** Der Bildschirm wechselt auf `"rightScreen"`, wenn der Benutzer auf die `"rightButton"`klickt.

        **Wie:** Im Code-Modus füge Deinem Programm ein neues `onEvent()` für die "Rechts!"-Taste hinzu. Füge dann einen `setScreen()`-Block darin ein, der die Bildschirme auf `"rightScreen"` schaltet.

        **Bist du hängen geblieben? Klicke hier:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)
      CSD Problem Solving Process Video: |-
        ## Zu berücksichtigende Fragen

        -   Wie hast di den Problemlösungsprozess in der letzten Lektion verfolgt?
        -   Wie kannst du diesen Prozess bei einem Problem in deinem Alltag anwenden?
      CSD U1 - PixFilter 1x1 intro: |-
        # 3 Bit Farben

        Jedes Pixel ist ein Quadrat auf einem Bildschirm, das Licht aussendet. Jedem Pixel kann eine bestimmte Anzahl von Bits zugeordnet sein, und Bits pro Pixel bestimmen die Farben, die gerendert werden können.

        In diesem Tool verwenden wir 3 Bit, um den einen großen schwarzen Pixel zu definieren. Das erste Bit beeinflusst den Rot-Ton. Das zweite Bit beeinflusst den Grünton. Das dritte Bit beeinflusst den Blauton.

        # Mache folgendes

        -   Klicke auf die Schaltfläche "Ausführen", um das Widget zu starten
        -   Klicke auf die Glühbirnen, um jede Farbe ein- oder auszuschalten und zu sehen, was mit Deinem Pixel passiert
        -   Schaue wie viele verschiedene Farben du mit nur drei Bits darstellen kannst
        -   Notiere dir die Binärdatei, die jeder Farbe zugeordnet ist, die du dir ausdenkst
      CSD U1 - PixFilter Filter Intro: |-
        # Pixel filtern

        Wenn du Instagram jemals verwendet hast, bist du wahrscheinlich auf einen Bildfilter gestoßen. Bildfilter lesen in jedem Pixel ein, verarbeiten es in irgendeiner Weise und geben das gefilterte Pixel zurück. In diesem Tool werden wir zunächst nur einen einzelnen Pixel filtern, bevor wir zu einem vollständigen Bild übergehen.

        # Mach folgendes

        -   Versuche, die Farbabweichungen im Filterbereich zu ändern
        -   Klicke auf die obere Glühlampenreihe im Abschnitt Diagramm, um zu sehen, wie der Filter den Eingang (obere Glühlampen) in den Ausgang (untere Glühlampen) umwandelt
        -   Schaue Dir an, wie die Zahlen im Binärbereich Änderungen der Farben widerspiegeln
        -   Basierend darauf, wie sich die Bits ändern, kannst du formulieren, was Ersetzen bedeutet? Sprich mit deinem Partner und schau, ob du es herausfinden kannst
        -   Füllen anschließend die Tabelle Level 2 in Ihrem Aktivitätsleitfaden aus
      CSD U1 - PixFilter Filter Revisit: |-
        # Kombinieren von Filtern

        Jetzt, da du mit der Filterung eines einzelnen Farbkanals gespielt hast, ist es an der Zeit zu sehen, was passiert, wenn wir mehr als eine Farbe filtern.

        # Mach folgendes

        -   Erstelle mithilfe der Farb-Dropdowns im Filterbereich einen Filter, der den Wert von mehr als einem Farbkanal ändert
        -   Klicke auf die obere Glühlampenreihe im Abschnitt Diagramm, um zu sehen, wie der Filter den Eingang (obere Glühlampen) in den Ausgang (untere Glühlampen) umwandelt
        -   Schau Dir an, wie die Zahlen im Binärbereich Änderungen der Farben widerspiegeln
        -   Fülle die Tabelle Level 4 in Deinem Aktivitätsleitfaden aus
      CSD U1 - PixFilter FreePlay: |-
        # Freies Spiel

        Tu, was du willst, mach etwas Fantastisches
      CSD U1 - PixFilter Mario: |-
        # Kombinieren von Filtern

        Manchmal müssen Sie mehr als ein Pixel filtern, um die gewünschte Farbänderung zu erhalten.

        # Mach folgendes

        Schau dir Mario an, er sieht ziemlich gut aus in seinem roten Hut und seinem Overall. Deine Aufgabe ist es, den Filter so aufzustellen, dass er wie Luigi aussieht, mit einem grünen Hut und Overall.

        -   Bestimme zunächst, welche Bit(s) geändert werden müssen, um die gewünschte Änderung zu erhalten.
        -   Sobald du herausgefunden hast, welches Bit geändert werden muss, stelle das Dropdown-Menü für den Filter entsprechend ein.
        -   Nachdem du den Filter eingestellt wurde, versuche, andere Filter zu finden, die _nur_ seinen Hut und seinen Overall ändern - wie viele verschiedene Kleidungsfarben kannst du dir ausdenken?

        _Wie viele Versuche hat es gedauert, bis du den richtigen Filter gefunden hast?_
      CSD U1 - PixFilter Mushroom: |-
        # Bilder filtern

        Nachdem wir nun gesehen haben, wie ein einzelnes Pixel gefiltert werden kann, um dessen Farbe zu ändern, versuchen wir nun, einen Filter auf ein gesamtes Bild anzuwenden, das aus mehreren Pixeln besteht. Der von Dir erstellte Filter wird auf jedes Pixel im Bild angewendet - und du hast immer noch die Glühbirnen zur Verfügung, um zu experimentieren, wie Dein Filter mit einzelnen Farben funktioniert.

        # Mach folgendes

        Hier ist ein Bild eines roten Pilzes - du sollst versuchen, ihn in einen gelben Pilz zu verwandeln.

        -   Bestimme zunächst, welches Bit geändert werden muss, um Rot in Gelb zu verwandeln
        -   Sobald du herausgefunden hast, welches Bit geändert werden muss, verwende die Filter-Dropdowns, um alle roten Bereiche gelb zu machen
        -   Nachdem der Filter so funktioniert, dass das Rot gelb geworden ist kannst du schauen, ob du mit ein Filtern erstellen kannst, das den Pilz in einer andere Farben erstrahlen lässt

        _Wie viele Versuche hat es gedauert, bis du den richtigen Filter gefunden hast?_
      CSD U1 - PixFilter UnFilter: |-
        # UnFiltering

        Bitfilter können auch benutzt werden um eine Filterung rückgängig zu machen. Hier ist ein Bild eines Vogels, der aus seinen Originalfarben gefiltert wurde. Kannst du es wieder normal machen?

        # Mach folgendes

        <img src="https://images.code.org/c15636bda16e8792c59ac955332e37a5-image-1471372091393.22.56.png" style="float:right; width: 200px"/>
        So sollte unser Vogel aussehen. Verwende den Filter, um ihn wieder normal zu machen.

        -   Entscheide, welche Farben (und damit welche Bits) du ändern musst. Vielleicht musst du deine Gedanken zunächst zu Papier bringen.
        -   Sobald du weißt, welche Bits geändert werden müssen, setze das Filter-Dropdown-Menü entsprechend, um Deine Antwort zu testen.
        -   Nachdem du das Bild korrigiert hast, notieren Dir sowohl Ihren Prozess als auch Deinen endgültigen Filter im Bereich Level 6 Deines Activitätsleitfadens.

        _Wie viele Versuche hat es gedauert, bis du den richtigen Filter gefunden hast?_
      CSD U2 CSS explore CSS_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Wie kann ich zwischen den Dateien wechseln?</strong></summary>

        Klicke im Menü auf der linken Seite des Bildschirms auf den Namen der Datei, die du ansehen möchtest.

        </details>
        </div>

        # Stil hinzufügen

        Dieses Web-Lab-Projekt verwendet eine neue Sprache, um der Seite einen Stil zu verleihen. Mit einem Partner kannst du sowohl die `index.html` als auch die `style.css` Dateien erkunden. Sei bereit, die folgenden Fragen zu diskutieren.

        -   Welche Änderungen macht diese neue Sprache an der Seite?
        -   Wie unterscheidet sich diese Sprache von HTML?
        -   Wie sind die Dateien `index.html` und `style.css` miteinander verbunden?
      CSD U2 Debugging 1_2019: "# Debugging\n\n<div class=\"no-pullthrough\" style=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n\n::: details [**Was ist ein Bug?**]\nBugs sind Fehler im
        Code, die dazu führen, dass er nicht wie geplant funktioniert.\n:::\n\n:::
        details [**Was ist debuggen?**]\nDebuggen ist der Prozess des Findens und
        Behebens von Fehlern.  Debuggen ist ein Problemlösungsprozess, also verwenden
        Sie Ihre Problemlösungsschritte, während Sie versuchen zu debuggen. \n:::\n\n:::
        details [**Was sind einige Beispiele für Bugs?**]\n\nBugs können alles sein,
        was dazu führt, dass Code nicht wie geplant funktioniert.  Einige Beispiele
        sind Rechtschreibfehler, das Einfügen von Code an der falschen Stelle, die
        Verwendung des falschen Tags oder das Vergessen, einen Tag zu schließen.\n\n:::\n\n</div>\n\nComputercode
        wird von Menschen geschrieben, und alle Menschen machen Fehler. Man ist nur
        ein guter Informatiker, wenn man es auch schafft seine Fehler zu finden und
        sie zu beheben. In der Informatik nennen wir Fehler **Bugs**. Der Prozess,
        diese Fehler zu finden und zu beheben, wird **debuggen** genannt.  In den
        nächsten Levels werden wir an Deinen Debugging-Fähigkeiten arbeiten.\n\n#
        Mach Folgendes\n\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56
        AM.png\" style=\"float:right;border:black solid 5px;\">\n\n-   Schau Dir den
        Code der Webseite an und diskutiere mit Deinem Partner, was die folgenden
        beiden Fehler verursacht:\n    -   Die Überschrift ist nicht groß genug.\n
        \   -   Der zweite Punkt auf der Liste hat keine Nummer.\n-   Behebe alle
        Fehler im Code, so dass das Endergebnis mit dem Bild rechts übereinstimmt."
      CSD U2 Debugging 2_2019: "# Debugging\n\n<div class=\"no-pullthrough\" style=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n\n::: details [**Was ist ein Bug?**]\nBugs sind Fehler im
        Code, die dazu führen, dass er nicht wie geplant funktioniert.\n:::\n\n:::
        details [**Was ist debuggen?**]\nDebuggen ist der Prozess des Findens und
        Behebens von Fehlern.  Debuggen ist ein Problemlösungsprozess, also verwende
        Deine Problemlösungsschritte, während du versuchst zu debuggen. \n:::\n\n:::
        Details [**Was sind einige Beispiele für Bugs?**]\n\nBugs können alles sein,
        was dazu führt, dass Code nicht wie geplant funktioniert.  Einige Beispiele
        sind Rechtschreibfehler, das Einfügen von Code an der falschen Stelle, die
        Verwendung des falschen Tags oder das Vergessen, einen Tag zu schließen.\n\n:::\n\n</div>\n\nMehr
        Übung im Debugging!  Diese Seite ist ein wenig schwieriger zu debuggen als
        die letzte.\n\n# Mache Folgendes\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38
        AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Diskutiere
        mit Deinem Partner, was Deiner Meinung nach die Fehler auf dieser Seite sind.\n-
        \  Finde und behebe alle Fehler, so dass Deine Seite mit derjenigen auf der
        rechten Seite übereinstimmt."
      CSD U2 Debugging 3_2019: "# Debuggen\n\n<div class=\"no-pullthrough\" style=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n\n::: details [**Was ist ein Bug?**]\nBugs sind Fehler im
        Code, die dazu führen, dass er nicht wie geplant funktioniert.\n:::\n\n:::
        details [**Was ist debuggen?**]\nDebuggen ist der Prozess des Findens und
        Behebens von Fehlern.  Debuggen ist ein Problemlösungsprozess, also verwende
        Deine Problemlösungsschritte, während Du versuchst zu debuggen. \n:::\n\n:::
        details [**Was sind einige Beispiele für Bugs?**]\n\nBugs können alles sein,
        was dazu führt, dass Code nicht wie geplant funktioniert.  Einige Beispiele
        sind Rechtschreibfehler, das Einfügen von Code an der falschen Stelle, die
        Verwendung des falschen Tags oder das Vergessen, einen Tag zu schließen.\n\n:::\n\n:::
        details [**Warum hört der Inspector manchmal auf zu arbeiten?**]\n\nManchmal
        gibt es so viele Fehler im HTML-Code, dass der Inspektor den Code nicht richtig
        lesen kann und er nicht mehr vollständig funktioniert, auch nicht an den richtigen
        Stellen des Codes.  Sobald die Fehler behoben sind, funktioniert der Inspektor
        wieder.\n\n:::\n\n</div>\n\nDiese Seite enthält Bilder. Bilder machen das
        Finden von Fehlern etwas schwieriger. Kannst Du diese Seite debuggen?\n\n#
        Mache Folgendes\n\n-   Besprich mit Deinem Partner, was die Fehler auf dieser
        Seite verursacht.\n-   Behebe die Fehler, sodass Deine Seite mit der unten
        gezeigten Zielseite übereinstimmt.\n\n![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24
        AM.png>)"
      CSD U2 HTML Adding Paragraphs pt 2_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        ::: details [**Was ist ein Absatzelement?**]

        Absätze werden durch Öffnen (`<p>`) und Schließen (`</p>`) von Tags gekennzeichnet. Absätze in HTML können eine beliebige Länge des Textes von einem Wort bis zu einer Reihe von Sätzen sein. Absätze gruppieren Sätze und setzen etwas Abstand zwischen dieser Textgruppe und der nächsten Textgruppe.

        :::

        ::: details [**Wie mache ich mehrere Absätze?**]

        Hier ist ein Beispiel für mehrere Absatz-Tags in einer Reihe. Dieser Code wird in den Body der Webseite eingefügt.

            <p>This is a paragraph. It has two sentences.</p>
            <p>This is another paragraph.</p>

        :::

        </div>

        # Absatz Tags verwenden

        Die `<p>` `</p>` Tags oder "paragraph" Start- und End-Tags werden um den Text herum platziert, um anzuzeigen, dass er Teil eines Absatzes ist. Das Platzieren von Text zwischen Absatz- und End-Tags lässt den Computer wissen, dass er anders behandelt werden sollte, oft nur mit einem Abstand zu anderen Texten.

        # Mache Folgendes

        -   Platziere den Text, den du gerade geschrieben hast, in mindestens zwei separaten Absätzen, indem du ihn mit `<p>` und `</p>` Tags umgibst.
        -   Vergleiche die Ergebnisse mit einem Nachbarn. Was hat sich an der Art und Weise, wie der Text angezeigt wird, geändert?
      CSD U2 HTML Debug Paragraphs_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        ::: details [**Was ist ein Absatzelement?**]

        Absätze werden durch öffnende ( `<p>` ) und schließende ( `</p>`) Tags gekennzeichnet. Absätze in HTML können eine beliebige Länge des Textes von einem Wort bis zu einer Reihe von Sätzen sein. Absätze gruppieren Sätze und setzen etwas Abstand zwischen dieser Textgruppe und der nächsten Textgruppe.

        :::

        Details[**Warum scheint HTML zu funktionieren, auch wenn es kaputt ist?**]

        HTML wird von Ihrem Webbrowser gelesen, um Webseiten zu generieren. Da Menschen beim Schreiben ihrer Webseiten oft kleine Fehler machen, sind Browser so programmiert, dass sie genau erraten, was Sie vorhaben. Manchmal sind sogar verschiedene Browser programmiert, um unterschiedliche Vermutungen anstellen zu können! Der einzige Weg, um sicherzustellen, dass Ihr Code so aussieht, wie Sie es beabsichtigen, ist sicherzustellen, dass Sie immer die richtigen Tags verwenden.

        :::

        :::: details [**Warum wird der Code manchmal rosa?**]

        Web Lab ist so programmiert, dass es automatisch einige Fehler in HTML erkennt.  Wenn es einen Fehler bemerkt, wird dieser Code rosa.  Der Fehler kann in rosa sein, oder er kann irgendwo vor dem rosa Code liegen.  Sie müssen sorgfältig debuggen, um Ihren Fehler zu finden.

        :::

        </div>

        # Debuggen: Reparieren der beschädigten Tags

        Diese einfache Webseite hat einige Probleme, die verhindern, dass der Inhalt korrekt angezeigt wird. Identifizieren und beheben Sie die Probleme. Diese Vorgehensweise wird auch als "Debugging" Ihres Codes bezeichnet.

        # Mache Folgendes

        -   Behebe den defekten Code, damit die Webseite korrekt angezeigt wird.
        -   Vergleiche die Probleme die du behoben hast mit deinem Nachbarn
      CSD U2 Heading Demo_2019: "# Überschriften\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\">\n\n::: Details [**Was sind Überschriften?**]\nÜberschriften
        sind die unterschiedlich großen Abschnittsüberschriften auf einer Webseite.
        Überschriften fügen Deiner Webseite Struktur hinzu, indem der Text aufgebrochen
        wird, so dass dieser für einen Benutzer einfacher zu lesen ist.\n:::\n\n::::
        details [**Wie mache ich unterschiedlich große Überschriften?**]\nDie Überschriften
        sind in 6 verschiedenen Größen erhältlich. Bisher hast du in erster Linie
        die Größte verwendet: `<h1>`. Die Zahl '1' im HTML-Tag gibt an, dass dies
        die größte Überschrift ist. Die kleinste Überschrift ist `<h6>`. Du kannst
        auch die Tags `<h2>`, `<h3>`, `<h4>` und `<h5>` ausprobieren, die kleiner
        werden, wenn die Zahl größer wird.\n:::\n\n:::: details [**Was ist HTML?**]\nHTML
        steht für Hypertext Markup Language. HTML wird verwendet, um den Inhalt einer
        Webseite zu strukturieren. HTML verwendet Tags, um anzugeben, wo bestimmte
        Strukturen beginnen und enden. Diese Tags sind Zeichensätze, die nicht in
        der englischen Sprache vorkommen, so dass Inhalt und Struktur unterschieden
        werden können. \n:::\n\n::: details [**Was ist ein HTML-Element?**]\nEin HTML-Element
        ist ein Teil einer Website, das durch ein Start-Tag gekennzeichnet ist und
        manchmal mit einem End-Tag geschlossen wird. Das Element beinhaltet auch den
        Inhalt innerhalb der Tags. Zum Beispiel: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n:::\n\n:::: details [**Was ist ein HTML-Tag?**]\n\nEin
        HTML-Tag ist der spezielle Zeichensatz, der der Maschine mitteilt, wo der
        Anfang oder das Ende eines HTML-Elements ist und welcher Typ es ist.\n\n:::\n\n</div>\n\nBisher
        hast Du Deine Inhalte in Absätze unterteilt.  Eine weitere Möglichkeit, wie
        HTML es Dir ermöglicht, den Code zu organisieren, ist die Verwendung von **Überschriften**.
        \ Eine Überschrift ist ein kurzer Text, der wie ein Titel an den Anfang eines
        Inhaltsabschnitts gestellt wird.\n\n# Mache Folgendes:\n\n-   Finde die Überschriften
        auf der Webseite unten und verwende das Inspektor-Tool, um den Code zu sehen,
        aus dem sie bestehen.\n-   Stelle sicher, dass du und Dein Partner sich darüber
        einig seid, was die Tags bewirken.\n-   Ändere den Code so, dass \"Zeichnung\"
        und \"2 Jahre\" mit den Überschriften auf der restlichen Seite übereinstimmen."
      CSD U2 Heading Sizes_2019: "# Überschriftengrößen\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\">\n\n::: Details [**Was sind Überschriften?**]\nÜberschriften
        sind die unterschiedlich großen Abschnittsüberschriften auf einer Webseite.
        Überschriften fügen Ihrer Webseite Struktur hinzu, indem sie den Text aufbrechen,
        so dass dieser für einen Benutzer einfacher zu lesen ist.\n:::\n\n:::: details
        [**Wie mache ich unterschiedlich große Überschriften?**]\nDie Überschriften
        sind in 6 verschiedenen Größen erhältlich.  Die häufigste Überschrift ist
        `<h1>` Die Zahl 1 im HTML-Tag bezeichnet, dass es sich um die größte Überschrift
        handelt. Die kleinste Überschrift ist `<h6>`. Du kannst auch die Tags `<h2>`,
        `<h3>`, `<h4>`, `<h4>` und `<h5>` versuchen, die mit zunehmender Anzahl kleiner
        werden.\n:::\n\n:::: details [**Was ist HTML?**]\nHTML steht für Hypertext
        Markup Language. HTML wird verwendet, um den Inhalt einer Webseite zu strukturieren.
        HTML verwendet Tags, um anzugeben, wo bestimmte Strukturen beginnen und enden.
        Diese Tags sind Zeichensätze, die nicht in der englischen Sprache vorkommen,
        so dass Inhalt und Struktur unterschieden werden können. \n:::\n\n::: details
        [**Was ist ein HTML-Element?**]\nEin HTML-Element ist ein Teil einer Website,
        das durch ein Start-Tag gekennzeichnet ist und manchmal mit einem End-Tag
        geschlossen wird. Das Element beinhaltet auch den Inhalt innerhalb der Tags.
        Zum Beispiel: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n:::\n\n:::: details [**Was ist ein HTML-Tag?**]\n\nEin
        HTML-Tag ist der spezielle Zeichensatz, der der Maschine mitteilt, wo der
        Anfang oder das Ende eines HTML-Elements ist und welcher Typ es ist.\n\n:::\n\n</div>\n\nÜberschriften
        können in verschiedenen Größen erhältlich sein.  Auf dieser Seite gibt es
        sechs unterschiedlich große Überschriften, die jedoch alle vertauscht sind.
        \ Kannst du und dein Partner herausfinden, wie man sie repariert?\n\nMache
        Folgendes:\n\n-   Verwende das Inspektorwerkzeug, um herauszufinden, was die
        Überschriften zu unterschiedlichen Größen macht.\n-   Stelle sicher, dass
        du und Dein Partner sich darüber einig sind, was die verschiedenen Header-Tags
        bewirken.\n-   Ändere die Tags so, dass die Überschriften in der Reihenfolge
        von groß nach klein sind, und der Text sagt die richtige Größe, wie im Bild
        unten. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15
        PM.png\" style=\"width:100px; float:left\">"
      CSD U2 Heading Test_2019: "# Überschriften und Absätze\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\">\n\n::: details [**Was ist ein Absatzelement?**]\n\nAbsätze
        werden auch durch öffnende (`<p>`) und schließende (`</p>`) Tags gekennzeichnet.
        Absätze in HTML können eine beliebige Länge des Textes von einem Wort bis
        zu einer Reihe von Sätzen sein. Der gesamte Text auf einer Webseite sollte
        in einem HTML-Element (Überschriften oder Absätze) enthalten sein. Absätze
        gruppieren Sätze und setzen etwas Abstand zwischen dieser Textgruppe und der
        nächsten Textgruppe.\n\n:::\n\ndetails [**Wie erstelle ich mehrere Absätze?**]\n\nAbsätze
        werden durch Öffnen (`<p>`) und Schließen (`</p>`) von Tags gekennzeichnet.
        Um mehr als einen Absatz zu erstellen, benötigen Sie mehrere Sätze von öffnenden
        und schließenden `<p>` Tags. Zum Beispiel:\n\n        <p>\n            Dies
        ist ein Absatz.\n        </p>\n        <p>\n            Dies ist ein weiterer
        Absatz.\n        </p>\n\n:::\n\n::: Details [**Was sind Überschriften?**]\nÜberschriften
        sind die unterschiedlich großen Abschnittsüberschriften auf einer Webseite.
        Überschriften fügen Ihrer Webseite Struktur hinzu, indem sie den Text aufbrechen,
        so dass dieser für einen Benutzer einfacher zu lesen ist.\n:::\n\n:::: details
        [**Wie mache ich unterschiedlich große Überschriften?**]\nDie Überschriften
        sind in 6 verschiedenen Größen erhältlich. Bisher hast du in erster Linie
        das größte \\<h1> verwendet. Die Zahl 1 im HTML-Tag gibt an, dass dies die
        größte Überschrift ist. Die kleinste Überschrift ist \\<h6>. Du kannst auch
        die \\<h2>, \\<h3>, \\<h4>, \\<h4> und \\<h5> Tags ausprobieren, die kleiner
        werden, wenn die Zahl größer wird.\n:::\n\n:::: details [**Was ist HTML?**]\nHTML
        steht für Hypertext Markup Language. HTML wird verwendet, um den Inhalt einer
        Webseite zu strukturieren. HTML verwendet Tags, um anzugeben, wo bestimmte
        Strukturen beginnen und enden. Diese Tags sind Zeichensätze, die nicht in
        der englischen Sprache vorkommen, so dass Inhalt und Struktur unterschieden
        werden können. \n:::\n\n::: details [**Was ist ein HTML-Element?**]\nEin HTML-Element
        ist ein Teil einer Website, das durch ein Start-Tag gekennzeichnet ist und
        manchmal mit einem End-Tag geschlossen wird. Das Element beinhaltet auch den
        Inhalt innerhalb der Tags. Zum Beispiel: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n:::\n\n:::: details [**Was ist ein HTML-Tag?**]\n\nEin
        HTML-Tag ist der spezielle Zeichensatz, der der Maschine mitteilt, wo der
        Anfang oder das Ende eines HTML-Elements ist und welcher Typ es ist.\n\n:::\n\n</div>\n\nDer
        Autor dieser Seite hat eine Menge Inhalt hinzugefügt, aber nicht an die Struktur
        gedacht.  Der gesamte Text wird zusammengefügt.\n\nMache Folgendes:\n\n-   Schaue
        Dir den Inhalt mit Deinem Partner an und entscheide, was Deiner Meinung nach
        die beste Struktur sein sollte.\n-   Verwende Deine Überschriften- und Absatz-Tags,
        um die Struktur in die Seite zu kodieren."
      CSD U2 Info Page Final Touches_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Checkliste
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Vergewissere Dich, dass Dein Bild richtig lizenziert ist</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Bild ins Web Lab hochladen</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Bild-Tag mit einem beschreibenden alt-Attribut erstellen</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Wenn das Bild nicht Dein eigenes ist, füge einen entsprechenden Urheberverweis<br/> hinzu

        </div>

        # Bilder zu Deiner Website hinzufügen

        Du hast bereits einige Seiten mit großartigem Inhalt auf Deiner Website erstellt, jetzt kannst Du einige Bilder hinzufügen!

        # Mache Folgendes

        Verwende entweder Deine eigenen Bilder oder solche, die durch eine Commons-Suche gefunden wurden, und füge einige Bilder zu den bereits erstellten Seiten hinzu. Sei kreativ! Verwende die Checkliste auf der rechten Seite, um die Schritte zu überprüfen, die Du beim Hinzufügen von Bildern befolgen solltest.
      CSD U2 Inspector Warm Up_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>
        <strong><span> Wie benutze ich das Inspektorwerkzeug? </span></strong>
        </summary>

        Das Inspector Tool ist eine großartige Möglichkeit, mehr über unbekannten Code in Web Lab zu erfahren. Um das Inspektorwerkzeug einzuschalten, klicke auf <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Du wirst wissen, dass das Inspektorwerkzeug eingeschaltet ist, da die Schaltfläche weiß wird und "Inspektor" lautet: "Ein". Sobald du das Inspektor-Tool aktiviert hast, kannst du mit der Maus über alles im Vorschaubereich fahren, und Web Lab markiert den Code, der den Teil der Seite anzeigt.

        </details>
        </div>

        # Erkunden Sie HTML

        Dies ist eine Webseite, die in HTML, der Sprache des Webs, geschrieben ist. Du wirst mehr darüber erfahren, wie es funktioniert, aber zuerst erkunde die Seite mit dem Inspektor-Tool.

        # Mach Folgendes

        -   Klicken Sie auf den Tipp "Wie benutze ich das Inspektorwerkzeug?" auf der rechten Seite, um zu erfahren, wie man das Inspektorwerkzeug verwendet.
        -   Folge den Anweisungen auf der Webseite, um die Webseite zu erkunden und mit einem Partner zu besprechen, wie diese funktioniert.
      CSD U2 Pair Programming Video_2019: |-
        ## Questions to consider

        -   Warum glauben Sie, dass professionelle Programmierer die Paarprogrammierung verwenden?
        -   Was glauben Sie, wie die Paarprogrammierung Ihnen helfen wird, besser zu programmieren?
      CSD U2 add style_2019: |-
        # Probier es aus!

        Jetzt, da du verschiedene Arten des Stylings gesehen hast, ist es an der Zeit, es selbst auszuprobieren. Hier ist eine Webseite, die du schon einmal gesehen hast, aber sie braucht etwas Stil!

        # Mach folgendes

        -   Gib der Webseite eine Hintergrundfarbe.
        -   Schaffe mehr Platz um die Bilder herum.
        -   Setze den gesamten Text in eine andere Farbe.
        -   Füge nach eigenem Ermessen andere Stile hinzu.
      CSD U2 classes spring_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        Jetzt mache ::: Details [**Wie funktioniert der Code?**]
        Damit der Code funktioniert, musst du sowohl eine Frühling-Klasse erstellen als auch Elemente zu dieser Klasse hinzufügen.

        Die Frühling-Klasse ist bereits im Stylesheet angelegt, aber sie hat keine Regeln.

            .spring {
              color: rgb(195,230,255);
            }

        Schaue Dir die Regeln in der `winter`-Klasse an, um Hinweise zu erhalten, wie man Regeln für die Sommer-Klasse erstellen kann.

        Du musst auch einige Elemente zur Frühling-Klasse in deiner HTML-Datei hinzufügen.

        Der Code in der HTML-Datei, der ein `h5` Element zur Winterklasse hinzufügt, ist `<h5 class="winter">`.  Benutze dieses Muster, um auch Elemente zur Frühlingsklasse hinzuzufügen.
        :::

        :::: Details [**Welche Regeln können einem Klassenregelsatz hinzugefügt werden?**]

        Ein Klassenregelsatz kann die gleichen Regeln haben wie jeder andere Selektortyp.  Wenn eine Regel nicht auf den Inhalt der Klasse zutrifft (z.B. die Verwendung von `font-size` bei einem Element ohne Text), dann wird der Computer diese Regel ignorieren, aber trotzdem die Regeln verwenden, die funktionieren.
        :::

        :::: Details [**Warum hat der Selektor einen Punkt vor sich?**]
        In CSS bedeutet ein Punkt vor einem Selektor, dass der Selektor der Name einer Klasse ist.  Wenn kein Punkt vorhanden ist, bedeutet es, dass der Selektor der Name eines HTML-Tags ist.
        :::

        :::: details [**Warum würde ein Webentwickler Klassen verwenden?**]

        Ein Webentwickler verwendet Klassen, wenn einige Elemente anders gestylt werden sollen als andere, auch wenn es sich um das gleiche Tag handelt.  Klassen können auch verwendet werden, um Elementen, die unterschiedliche Tags haben, den gleichen Stil zu geben.

        :::

        </div>

        # Frühling-Klasse

        Nun, da Deine Winter-Klasse fertig ist, kannst Du mit den anderen Jahreszeiten beginnen.

        -   Finde den leeren CSS-Regelsatz im Stylesheet, der den Frühlingswörtern ihren Stil verleiht.
        -   Füge zwei Regeln hinzu, eine, um dem Text deine Frühling-Farbe für früher in der Lektion zu geben, und eine andere, um dem Text eine andere Schriftart, Schriftgröße oder Dekoration zu geben.
        -   Füge die Frühling-Klasse zu den Frühling-Elementen in der HTML-Seite hinzu.
      CSD U2 classes summer_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        ::: details [**Wie funktioniert der Code?**]
        Damit der Code für die Winterklasse funktioniert, muss sowohl eine Winterklasse anlegt als auch Elemente der Klasse hinzugefügt werden.

        Die Klasse wird im Stylesheet mit folgendem Code angelegt:

            .winter {
              color: rgb(195,230,255);
            }

        Dieser Code erzeugt eine Klasse namens `Winter` und macht alles in der Klasse zu unserem Winterblau, das die RGB-Werte von (195, 230, 255) hat.

        Der Code, der ein `h5` Element zur Winterklasse hinzufügt, ist `<h5 class="winter">`.  Der `class=winter` innerhalb des öffnenden Tags fügt alles innerhalb des Tags der Klasse hinzu.
        :::

        ::: details [**Wie erstelle ich einen neuen Regelsatz?**]

        Du kannst einen neuen Regelsatz erstellen, indem du dem Muster folgst, das die Klassen `winter` und `spring` im Style Sheet verwendet haben.

            .winter {
              color: rgb(195,230,255);
            }

        Der Name des Selektors und die Farbwerte sind unterschiedlich, aber das folgende Muster ist immer das gleiche.

            .classname {
              property1: value1;
              property2: value2;
            }

        :::

        ::: details [**Warum hat der Selektor einen Punkt davor?**]
        In CSS bedeutet ein Punkt vor einem Selektor, dass der Selektor der Name einer Klasse ist.  Wenn es keinen Punkt gibt, bedeutet dies, dass der Selektor der Name eines HTML-Tags ist.
        :::

        ::: details [**Warum sollte ein Webentwickler Klassen verwenden?**]

        Ein Webentwickler verwendet Klassen, wenn einige Elemente anders gestaltet werden sollen als andere, auch wenn sie das gleiche Tag sind.  Klassen können auch verwendet werden, um Elementen, die unterschiedliche Tags haben, den gleichen Stil zu geben.

        :::

        </div>

        # Sommer- und Herbstklassen

        -   Erstelle innerhalb des Style Sheets ein neues Regelwerk für eine "Sommer"-Klasse.
        -   Füge eine Regel hinzu, um den Text in der Sommerklasse auf deine Sommer-RGB-Farbe einzustellen.
        -   Füge die Sommerklasse zu den Sommerelementen auf der HTML-Seite hinzu.
        -   Das Gleiche gilt für die Herbstklasse.
      CSD U2 commenting_2019: |-
        # Kommentare

        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        ::: details [**Was ist Leerraum?**]
        Unter Leerraum (engl. "whitespace") versteht man jedes Zeichen, das als Leerzeichen auf dem Bildschirm erscheint, wie z.B. ein Leerzeichen, ein Tabulator oder eine neue Zeile. Mit Hilfe von Leerzeichen können verschiedene Teile des Dokuments voneinander getrennt werden, um die Lesbarkeit zu verbessern.  Im HTML-Code werden z.B. neue Elemente normalerweise in einer neuen Zeile eingefügt, obwohl es keinen Unterschied in der Darstellung der Seite macht.
        :::

        ::: details [**Was ist Einrückung?**]
        Einrückung ist die Platzierung von Text weiter nach rechts oder links, um ihn vom umgebenden Text zu trennen.  Die Einrückung hilft, die Struktur des Programms zu vermitteln.  In HTML werden Elemente, die sich innerhalb anderer Elemente befinden, normalerweise eingerückt.  Hier ist ein Beispiel:

               <body>
                  <p>Dieser Absatz ist innerhalb des "body" Elements.</p>
               </body>

        :::

        ::: details [**Was ist Formatierung?**]

        Formatieren ist das Anordnen von Text in einer Weise, die das Verständnis erleichtert.  HTML wird in der Regel durch Einrückung formatiert.  Das bedeutet, dass Elemente, die sich innerhalb anderer Elemente befinden, weiter rechts im Code stehen.  Hier ist ein Beispiel:

               <body>
                  <p>Dieser Absatz ist innerhalb des "body" Elements.</p>
               </body>

        :::

        </div>

        Du kannst **Kommentare** zu Deinem Code hinzufügen, um die verschiedenen Teile des Codes zu erklären und was er erzeugen soll.  Kommentare können Dir beim Debuggen helfen. Sie helfen auch anderen Leuten, die versuchen, Deinen Code zu verstehen.

            <!-- dies ist ein Kommentar -->

        # Mache Folgendes

        -   Schaue Dir den Code mit Deinem Partner an und finde die Kommentare.
        -   Verwende die Kommentare, um die Fehler im HTML zu beheben.
      CSD U2 layout style float_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        ::: details [**Wie funktioniert der Code?**]
        Hier ist der Code, der das Bild auf der linken Seite der Seite schweben lässt:

            img {
              float: left;
            }

        -   `img` ist der _selector_.  Er gibt an, welche Elemente den Regeln innerhalb der geschweiften Klammern folgen müssen, in diesem Fall die Bilder.
        -   `float: left;` ist die Regel, die das Bild nach links schweben läßt.
            :::

        ::: Details [**Was macht die `float` Eigenschaft?**]

        Die Eigenschaft `float` macht ein Element "schwebend", was bedeutet, dass die Elemente, die nach ihm kommen, alle um es herum fließen.  Wenn der `float`-Wert `links` ist, wird das Element nach links fliessen, und die Elemente danach werden rechts davon auftauchen.  Wenn der `float`-Wert `right` ist, wird das Element nach rechts fliessen, und die Elemente nach ihm werden links erscheinen.  Sie können mehr über diese Eigenschaft unter <a href="http://www.w3schools.com/cssref/pr_class_float.asp" target="_new">W3Schools - CSS-Eigenschaft float</a> lesen.

        :::

        </div>

        # Float

        -   Schau Dir die `float`-Eigenschaft in Deinem `img`-Regelsatz an
        -   Besprich mit Deinem Partner, was die Eigenschaft Deiner Meinung nach bewirkt.
        -   Änderne den Wert von `links` auf `rechts`.
      CSD U2 layout style margin_2019: "<div class=\"no-pullthrough\" style=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n<details>\n\n<summary>\n<strong>Wie funktioniert der Code?</strong>\n</summary>\nHier
        ist der Code, der zusätzlichen Platz um die Bilder herum schafft:\n\n<pre>img
        {\n\tmargin: 10px;\n}</pre>\n\n-   `img` ist der _Selektor_.  Es legt fest,
        welche Elemente den Regeln innerhalb der geschweiften Klammern (in diesem
        Fall den Bildern) folgen müssen.\n\n-   `margin: 10px;` ist die Regel, die
        10 Pixel Platz um das Bild schafft.\n    </details>\n    <details>\n    <summary>\n
        \   <strong>Was bewirkt die \"Margin\"-Eigenschaft?</strong>\n    </summary>\n\nDie
        Eigenschaft `margin` bestimmt, wie viel Platz um das Bild herum sein wird.
        \ Meistens wird der Rand in Pixeln definieren. Du kannst mehr über diese Eigenschaft
        erfahren unter <a href=\"http://www.w3schools.com/cssref/pr_margin.asp\" target=\"_new\">W3Schools
        - CSS margin Property</a>.\n\n</details>\n<details>\n<summary>\n<strong>Was
        bedeutet `px` / Was ist ein Pixel?</strong>\n</summary>\n\nPixel, abgekürzt
        `px`, ist die Art und Weise, wie Elemente in CSS gemessen werden.  Es hat
        die Größe eines einzelnen Lichtpunktes auf dem Bildschirm.\n\n</details>\n</div>\n\n#
        Margin\n\nMargins geben an, wie viel Platz um ein Element herum sein soll.\n\n-
        \  Suche die Eigenschaft `margin` im Regelsatz `img`.\n-   Vergrößere 'margin'
        und besprechen die Wirkung mit einem Partner.\n-   Wählen einen anderen Elementtyp
        und gib ihm ebenfalls einen Rand."
      CSD U2 link demo_2019: |-
        # Eine mehrseitige Website erstellen

        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        ::: details [**Was sind Hyperlinks?**]

        Hyperlinks können auf lokale Webseiten oder externe Webseiten verweisen. Um eine Navigation auf Deine Website zu ermöglichen, musst du Hyperlinks hinzufügen, die Deine einzelnen Webseiten miteinander verbinden. Du kannst **Hyperlinks zu deiner Webseite mit dem `<a>` Element** hinzufügen.  Der Text, der als Hyperlink angezeigt werden soll, geht zwischen den öffnenden und schließenden Hyperlink-Tags. Das `<a>` Element hat ein Attribut `href`, welches der Ort ist, zu dem man verlinken soll.  Der Ort einer lokalen Seite ist nur der Dateipfad für diese Seite. <br> <br>

        Um zum Beispiel auf die Unique Houses Seite zu verlinken, würdest du den folgenden Code in dein `<body>` Element einfügen. <br>\<<br>

            <a href="houses.html"> Einzigartige Häuser </a>

        :::

        ::: details [**Wie füge ich einen Hyperlink hinzu?**]

        Du kannst <strong>Hyperlinks zu deiner Webseite mit dem `<a>` Element</strong> hinzufügen.  Der Text, den du als Hyperlink anzeigen lassen willst, geht zwischen den öffnenden und schließenden Hyperlink-Tags. Das `<a>` Element hat ein Attribut `href`, welches der Ort ist, zu dem man verlinken soll.  Der Ort einer lokalen Seite ist nur der Dateipfad für diese Seite. <br> <br>

        Um zum Beispiel auf die Unique Houses Seite zu verlinken, würdest du den folgenden Code in dein `<body>` Element einfügen. <br>\<<br>

            <a href="houses.html"> Einzigartige Häuser </a>

        :::

        </div>

        Eine Website sollte mehr als eine Webseite enthalten, und du solltest sie miteinander verbinden.   Hier ist ein Beispiel für ein Projekt mit mehreren Seiten, die durch Hyperlinks verbunden sind (die blau unterstrichenen Wörter, die du zu einer anderen Seite führen, wenn du darauf klickst).

        # Mache Folgendes

        -   Verwende das Inspektor-Tool, um den Code zu sehen, der die Hyperlinks oben in index.html erzeugt.
        -   Bespreche mit Deinem Partner, wie dieser Code Deiner Meinung nach funktioniert.
        -   Klicke auf recipe.html in der Dateiliste auf der linken Seite.  Füge oben auf dieser Seite einen Hyperlink ein, der Dich zurück zur index.html führt.
      CSD U2 ordered list_2019: "# Geordnete Listen\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Was ist eine geordnete
        Liste?**]\n\nEine geordnete Liste ist eine Reihe von Aufzählungspunkten, die
        nummeriert sind.\n<br />\\<<br />\nEin geordnetes Listenelement hat das Tag
        `<ol>` . Dies ist eine Abkürzung für <strong>O</strong> geordnet <strong>L</strong>ist.
        Jedes Element in der Liste wird durch ein Listenelement `<li>`; markiert.
        Dies ist eine Abkürzung für <strong>L</strong>ist <strong>I</strong> Element.
        \ Das Listenelementelement ist ein Kind-Element, was bedeutet, dass es innerhalb
        seines Elternelements, der geordneten Liste (`<ol>`), liegt.\n:::\n\n::: details
        [**Wie mache ich eine geordnete Liste?**]\n\nDie Erstellung einer geordneten
        Liste besteht aus zwei Schritten: Erstellung der Liste und Hinzufügen der
        Listenelemente.  Um die geordnete Liste zu erstellen, schreibe die geordneten
        Listen-Tags `<ol></ol>`.  Als Nächstes füge Deine Listenelemente **innerhalb**
        der geordneten Listen-Tags hinzu.  Um jeden Listeneintrag zu erstellen, benutze
        die Listeneintrags-Tags `<li></li>` und schreibe den Listeneintrag innerhalb
        der Tags.\n\nEs kann hilfreich sein, Ihre `<li>` Tags einzurücken, damit es
        klar ist, dass diese im `<ol>` Tag enthalten sind.\n:::\n\n::: details [**Zeige
        mir den Arbeitscode.**]\n\n<table border=\"1\">\n<tr>\n<td>Beispiel</td>\n<td>Resultat</td>\n</tr>\n<tr>\n<td>\n\n
        \   <ol>\n      <li>Schritt 1</li>\n      <li>Schritt 2 </li>\n      <li>Schritt
        3 </li>\n    </ol>\n\n</td>\n<td><img src=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04
        PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n:::\n\n</div>\n\nDiese
        Seite sollte eine geordnete Liste enthalten, aber es fehlen die Listen-Tags.\n\n#
        Mache Folgendes\n\n-   Benutze die `<ol>` und `<li>` Tags, um diesen Inhalt
        in eine geordnete Liste zu strukturieren, die wie die untenstehende aussieht.\n\n_Hinweis:
        Es wird KEINE NUMMER in Ihrem Code enthalten sein._ \n\n![](<https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03
        PM.png>)"
      CSD U2 publish video: |-
        ## Zu berücksichtigende Fragen

        -   Was sind Deiner Meinung nach die Aufgaben eines Website-Publishers?
        -   Warum möchtest du den Code sehen oder die Website einer anderen Person remixen?
      CSD U2 text style text align_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        ::: details [**Wie funktioniert der Code?**]

        Hier ist der Code, der die Ausrichtung des Absatztextes steuert:

            p {
              text-align: left;
            }

        -   `p` ist der _Selektor_.  Er gibt an, welche Elemente den Regeln innerhalb der geschweiften Klammern folgen müssen. Das `p` steht für Absatz.
        -   `text-align: left;` ist die Regel, die den Text innerhalb der `p`-Tags auf die linke Seite des Absatzes ausrichtet.
            -   `text-align` ist die _Eigenschaft_.  Diese erklärt, worum es bei der Regel geht, in diesem Fall bei der Textausrichtung.
            -   `links` ist der _Wert_.  Dieser erklärt, wie die Regel angewendet werden sollte, wobei in diesem Fall der Text auf die linke Seite des Absatzes ausgerichtet wird.

        :::

        :::: details [**Warum macht <code>text-align: left;</code> hier nichts?**]

        Die meisten Eigenschaften haben Standardwerte.  Die Standardwerte sind die Stile, die ein Element automatisch hat, bevor du dein Style Sheet hinzufügst.  Der Standardwert für `text-align` ist `left`, so dass es hier keinen Unterschied macht.

        :::

        details [**Welche Werte sind für die Textausrichtung möglich? **]

        Du kannst zwischen "links", "rechts" und "mitte" wählen.  Mehr über die Eigenschaft text-align erfährst du unter <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp" target="_new">W3Schools - CSS text-align property</a>.

        :::

        :::: details [**Warum brauche ich alle Satzzeichen?**]

        Die Interpunktion, wie die geschweiften Klammern `{}`, der Doppelpunkt `:` und das Semikolon \`;`` helfen dem Computer, die Regeln im Style Sheet zu verstehen.  Die geschweiften Klammern enthalten alle Regeln für einen bestimmten Selektor.  Jede Regel sollte mit einem Semikolon enden, und die Eigenschaften und Werte werden immer durch einen Doppelpunkt getrennt.

        :::

        :::: details [**Was ist ein Stylesheet?**]

        Ein Stylesheet ist ein Dokument das steuert, wie eine Webseite aussehen soll.  Externe Stylesheets sind separate Dateien, die mit der HTML-Seite verknüpft sind.

        :::

        ::: Details [**Was ist CSS?**]

        CSS ist eine Sprache, die die Darstellung von Inhalten auf einer Website steuert.  Es verwendet Regelsätze, um das Aussehen einer Seite zu ändern.  Jeder Regelsatz hat einen Selektor, der angibt, welche Elemente auf der Seite betroffen sind, und die Regeln, die erklären, wie die Elemente angezeigt werden.   Jede Regel besteht aus einer Eigenschaft und einem Wert für diese Eigenschaft.
        <br/><br/>
        Hier ist ein Beispiel für einen Regelsatz, der den Text in einem `h2`-Tag blau und kursiv macht:

            h2 {
               color: blue;
               font-family: cursive;
            }

        In diesem Beispiel ist `h2` der Selektor, `color` und `font-family` sind Eigenschaften, und `blue` und `cursive` sind die Werte für diese Eigenschaften.

        :::

        </div>

        # Textausrichtung

        Die Eigenschaft `text-align` legt die horizontale (seitliche) Position des Textes innerhalb jeder Zeile fest.

        -   Suche die Eigenschaft "text-align" im Absatzschlüssel.
        -   Ändere die Absatzausrichtung.
            -   Wähle zwischen "links", "rechts" und "mitte"
      CSD U2 unordered list_2019: "# Ungeordnete Listen\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Was sind die zwei
        Arten von Listen?**]\nEs gibt zwei Arten von Listen in HTML, geordnete und
        ungeordnete Listen.\n\n:::\n\n::: details [**Was ist eine ungeordnete Liste?**]\n\nEine
        ungeordnete Liste ist nur ein Satz von Aufzählungspunkten.\n<br />\\<<br />Ein
        ungeordnetes Listenelement hat das Tag `<ul>`. Dies ist eine Abkürzung für
        <strong>U</strong>geordnet <strong>L</strong>ist. Jedes Element in der Liste
        wird durch ein Listenelement `<li>` markiert. Dies ist eine Abkürzung für
        <strong>L</strong>ist <strong>I</strong>Element.  Das Listenelementelement
        ist ein Kind-Element, was bedeutet, dass es innerhalb seines Elternelements,
        der ungeordneten Liste (`<ul>`), liegt.\n\n:::\n\n::: details [**Wie mache
        ich eine ungeordnete Liste?**]\n\nDie Erstellung einer ungeordneten Liste
        besteht aus zwei Schritten: Erstellung der Liste und Hinzufügen der Listenelemente.
        \ Um die ungeordnete Liste zu erstellen, schreiben Sie die ungeordnete Liste
        mit den Tags `<ul></ul>`.  Als Nächstes füge Deine Listenelemente **innerhalb**
        der ungeordneten Listen-Tags hinzu.  Um jeden Listeneintrag zu erstellen,
        benutze die Listeneintrags-Tags `<li><</li>` und schreibe den Listeneintrag
        innerhalb der Tags.\n<br />\\<<br />\nEs kann hilfreich sein die <li>-Tags
        einzurücken, damit es klar ist, dass diese im <ul>-Tag enthalten sind.\n\n:::\n\n:::
        details [**Zeige mir echten Code.**]\n\n<table border=\"1\">\n<tr>\n<td>Beispiel</td>\n<td>Resultat</td>\n</tr>\n<tr>\n<td>\n\n
        \    <ul> <br>\n     \t<li>Rot</li>\n        <li>Gelb</li>\n        <li>Blau</li>\n
        \    </ul>\n\n</td>\n<td><img src=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32
        PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n:::\n\n</div>\n\nDiese
        Seite sollte eine ungeordnete Liste haben, aber es fehlen die Listen-Tags.\n\n#
        Mache Folgendes\n\n-   Benutze die `<ul>` und `<li>` Tags, um den Inhalt in
        eine ungeordnete Liste wie im Bild unten zu strukturieren.\n\n![](<https://images.code.org/64581a90765cd2d53b6c5235c48f2855-image-1493238358294.25.04
        PM.png>)"
      CSD U3 - Booleans Video_2019: |-
        ## Zu berücksichtigende Fragen

        -   Was ist ein boolescher Ausdruck?
        -   Welcher Ausdruck wird mit `wahr` ausgewertet?
        -   Welcher Ausdruck wird mit `falsch` ausgewertet?
      CSD U3 - Conditionals Video_2019: |-
        ## Zu berücksichtigende Fragen

        -   Was ist ein Beispiel dafür, wann Sie eine "wenn/ansonsten"-Anweisung benötigen würden?
      CSD U3 - conditionals - transition_2019: |-
        # Booleans

        In den letzten paar Leveln haben wir die Werte von Sprites verglichen, um herauszufinden, ob etwas wahr oder falsch ist. Beginnen wir damit, das in den Kontext einer Animation zu stellen.

        # Mache Folgendes

        Das Programm zeichnet einen Rennwagen und eine Ziellinie. Wir werden herausfinden, wann der Rennwagen die Ziellinie überquert. Die Sprites sind alle für dich eingerichtet.

        -   Füge eine `console.log`-Anweisung innerhalb der Zeichenschleife hinzu. ( [Zeige mir, wo](#triggercallout=callout) )
        -   Füge einen booleschen Ausdruck in die `console.log` ein, der fragt: "Ist die x-Position des Rennwagens kleiner als die x-Position der Ziellinie"?
        -   Betrachte die Ausgabe des Programms, während sich das Fahrzeug bewegt. Wann ändert sich der Ausgang? Warum?
      CSD U3 Boolean Modify_2019: "# Boolesche Ausdrücke\n\nDie einfachsten booleschen
        Ausdrücke sind Fragen, die der Computer mit wahr oder falsch beantworten kann.
        \nMan kann dabei auch sagen, dass es sich um boolesche Ausdrücke handelt,
        die zu \"wahr\" oder \"falsch\" ausgewertet werden.\n\n# Mache Folgendes\n\nKannst
        du die Werte der Sprite-Eigenschaften so ändern, dass jeder der booleschen
        Ausdrücke als \"wahr\" ausgewertet wird?\n\n-   Lese das gesamte Programm
        durch, um zu sehen, wie `sprite1` und `sprite2` erstellt werden und welche
        Eigenschaften verglichen werden.\n-   Identifiziere für jeden der booleschen
        Ausdrücke die zu vergleichenden Sprite-Eigenschaften.\n-   Ändere den Code
        _nur in den ersten **11** Zeilen_ so, dass jede der `console.log()` Anweisungen
        `true` ausgibt."
      CSD U3 Draw Loop Plugged update your scene_2019: |-
        # Erweitere Deine Szene

        Das ist die Spriteszene, die du in der letzten Lektion gemacht hast. Sie werden es nun ein wenig aktualisieren, um die Eigenschaften der Zeichenschleife und des Sprites zu verwenden.

        <img src="https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29 PM.png" style="float:right;height:100px">

        # Mach Folgendes

        -   Füge eine Zeichenschleife zu deinem Programm hinzu (du solltest nur eine haben).
        -   Verwende den Lasso-Selektor (klicken, halten und ziehen), um den Code auszuwählen, der jedes Mal aktualisiert wird, und platziere ihn in Deiner Zeichenschleife. Mit Strg+Z kannst du alle Fehler rückgängig machen, die du machst.
        -   Füge Code zu deinem Programm hinzu, der die Eigenschaften deiner Sprites `sprite.x`, `sprite.y` oder `sprite.rotation` so aktualisiert, dass sie sich bewegen. Du musst sie mit `randomNumber()` aktualisieren.
      CSD U3 Else_2019: |-
        # Rückwärtsgang

        Die Zahnräder sind wieder da. Sie drehen in eine Richtung, wenn du die Leertaste drückst, jetzt willst du, dass sie sich in die andere Richtung drehen, wenn die Leertaste nicht gedrückt wird.

        # Mache Folgendes

        -   Lasse die Zahnräder entgegen der Richtung drehen, die sie beim Drücken der Leertaste einnehmen.
      CSD U3 Functions Call Function_2019: |-
        # Aufruf von Funktionen

        Mit Funktionen kannst du eigene Blöcke erstellen und entscheiden, welcher Code in sie einfließt.  Dieses Programm hat bereits zwei Funktionen erstellt, aber nur eine davon wird aufgerufen.

        # Mache Folgendes

        -   **Rufe die zweite Funktion** auf, um das gesamte Bild anzuzeigen. Verwende die Funktion, die als Leitfaden aufgerufen wird.
        -   **Tipp:** Wie bei allen anderen Blöcken sind auch hier Rechtschreibung und Groß- und Kleinschreibung wichtig.
      CSD U3 If Else predict question: |-
        # Wenn/Sonst Vorhersagen

        Lese das folgende Programm durch und achte dabei besonders auf den `wenn/ansonsten` Baustein in Zeile 10.  Nachdem du die folgenden Fragen mit Deinem Partner besprochen hast, schreiben Deine Vorhersagen auf. Dann führe den Code aus, um zu sehen, was das Programm macht.

        -   Was passiert, wenn du die Leertaste drückst?
        -   Was passiert, wenn du **nicht** die Leertaste drückst?
      CSD U3 If Else_2019: |-
        # Wann soll ich ein "Else" zur Verfügung stellen?

        Die `ansonsten` Klausel ist nützlich, wenn du möchtest, dass das Programm eine Sache macht, wenn Ihre Bedingung wahr ist, und eine _andere_ Sache, wenn Ihre Bedingung falsch ist.

        <img src="https://images.code.org/730a895b50375781e72c95f5fa21d09d-image-1477681109870.gif" style="float:right;">

        # Mache folgendes

        Klicke auf "Ausführen", um den für Dich erstellten Bienenschwarm und eine Blume auf der linken Seite des Bildschirms zu sehen. Lasse den Bienenschwarm **erscheinen, wenn sich die Maus in der Nähe der Blume** befindet (auf der linken Seite des Bildschirms) und **verschwinden, wenn die Maus von der Blume** entfernt ist (auf der rechten Seite des Bildschirms). Schaue Dir das Beispiel auf der rechten Seite an.

        -   Füge eine `if else` -Anweisung hinzu, nachdem du die Position der Bienen aktualisiert hast.
        -   In der Eingabe von if verwende ein Boolean, um zu überprüfen, ob die x-Position der Maus auf der Seite des Bildschirms mit der Blume liegt.
        -   Stelle die "sichtbare" Eigenschaft jeder Biene sowohl innerhalb der if- als auch der else-Anweisung angemessen ein, damit die Bienen nur in der Nähe der Blume erscheinen.
      CSD U3 Random rainbow snake_2018_2019: |-
        <img src="https://images.code.org/6af643f712b042e5b076f06cc2f902e2-image-1520404404645.32.58 PM.png" style="float:right;height:150px">

        # Regenbogenschlange

        Dieses Programm zeichnet eine sehr seltene Art von Regenbogenschlangen. Um die Schlange jedes Mal anders zeichnen zu lassen, musst du Zufallszahlen verwenden.

        # Mache Folgendes

        -   Führe das Programm mehrmals aus, um zu sehen, wie der Startercode funktioniert.
        -   Füge deiner Regenbogenschlange mindestens drei neue, verschiedenfarbige Kreise hinzu.
        -   Verwende `randomNumber()`, um den Rest des Körpers der Schlange wie die ersten drei auf und ab bewegen zu lassen.

        _Herausforderung: Kannst du die Größe einiger der Kreise auch zufällig bestimmen?_
      CSD U3 Scene Example_2018_2019: |-
        # Sprite Szenen

        Durch die Kombination von Formen, Sprites und Text kannst du einfache Szenen, Geschichten oder Comics erstellen. Obwohl dieses Beispiel ziemlich einfach ist, können Sie beliebig viele Sprites und Formen kombinieren, um beliebig komplexe oder detaillierte Szenen zu erstellen.

        ## Skizziere es

        Bevor du weitermachst, nimm dir eine Sekunde Zeit, um eine Szene zu entwerfen, die du am Ende dieser Lektion machen möchtest. Betrachte die einfachen Formen, die du in der Vergangenheit verwendet hast, Sprites für Ihre Figuren und jeden Text, den du auf dem Bildschirm sehen möchtest. Sobald du eine Idee entworfen hast, wirst du lernen, wie man eine Szene zusammensetzt.
      CSD U3 Variables naming rules v2_2018_2019: |-
        <img style="float: right" src="https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38 AM.png">

        # Debuggen: Benennen von Variablen

        Dieses Programm hat mehrere Fehler, die durch fehlerhafte Labelnamen verursacht werden.  Die Fehler verhindern, dass das Programm im Bausteinmodus angezeigt wird, so dass der Code im Text ist.

        # Mache Folgendes

        -   Versuche herauszufinden, welche Probleme mit den Variablennamen die Fehler verursachen.
        -   Behebe die Fehler, indem du neue Namen auswählst.
        -   Wenn Dein Programm funktioniert, sollte es das Bild auf der rechten Seite zeichnen.

        <summary><em>Hinweis: Klicke auf den Pfeil, um ein paar Regeln zu sehen.</em><details><ul>
        <li>Label dürfen keine Leerzeichen haben.</li>
        <li>Label können nicht mit einer Zahl beginnen. </li>
        <li>Groß- und Kleinschreibung müssen exakt gleich sein.</li>
        </ul></details></summary>
      CSD U3 abstraction rotation control_2019: |-
        # Geschwindigkeit kontrollieren

        Du hast `Rotationsgeschwindigkeit` außerhalb der Zeichenschleife verwendet, um dein Sprite beim Start des Programms drehen zu lassen.  Du kannst auch `Rotationsgeschwindigkeit` **innerhalb der Schleife** verwenden, um die Geschwindigkeit des Sprites während des Spiels zu ändern.  Zum Beispiel kann sich ein Sprite drehen, wenn der Benutzer die Leertaste drückt, und es dreht sich weiter, bis ihm gesagt wird, dass es anhalten soll.

        # Mach Folgendes

        -   Schaue Dir die `if` -Anweisung innerhalb der Zeichenschleife an, die überprüft, ob die Leertaste gedrückt wurde. ( [Zeige mir, wo](#triggercallout=code_triggered1) )
        -   Verwende den Block `Rotationsgeschwindigkeit`, damit sich das Farbrad dreht, wenn der Benutzer die Leertaste drückt.
      CSD U3 collisions types_2019: |-
        # Kollisionsarten

        Es gibt vier Arten von Kollisionen, die wir im Game Lab verwenden: `displace`, `collide`, `bounce` und `bounceOff`.  Diese Bausteine verursachen eine bestimmte Art von Interaktion zwischen dem _Sprite_ und seinem _Ziel_.

        # Mache folgendes

        Wählen den besten Baustein, um den Basketball vom Boden abprallen zu lassen. ( [Zeige mir, wo](#triggercallout=code_triggered) )
        \*Hinweis: Du kannst die verschiedenen Bausteine ausprobieren oder mehr darüber auf der Registerkarte "Hilfe und Tipps" lesen.
        [//]\: # (<https://images.code.org/24355fc6377cfafdce3ce2b3568a33c3-image-1470343728940.png>)

        [//]: # "https://images.code.org/87e4306e0371c7975b8fb2583657ee4a-image-1470343728942.png"
      CSD U3 function video: |-
        ## Zu berücksichtigende Fragen

        -   Denke an eine Zeit, in der eine Funktion Dir geholfen hätte, ein Programm zu schreiben.
            -   Welcher Code würde in der **Definition** der Funktion verwendet werden?
            -   Wann würdest du die Funktion **aufrufen**?
            -   Wie würdest du es nennen?
      CSD U3 if else predict: Vorhersagenlevel, siehe enthaltene Level für Anweisungen.
      CSD U3 platform background2_2019: |-
        # Die Wahl des Hintergrundes

        Jetzt, da du Deine Score-Variable hast, kannst du damit den richtigen Hintergrund für dein Spiel auswählen.  Du kannst in [Lektion 19 Level 12](../../19/puzzle/12) ein Beispiel sehen, wie du deinen Hintergrund entsprechend deiner Punktzahl ändern kannst.

        # Mache Folgendes

        -   Verwende innerhalb der Zugschleife eine `wenn`-Anweisung und Ihre beiden Hintergrundfunktionen, um Deinen Hintergrund entsprechend Deiner Punktzahl zu zeichnen.
        -   Teste Deinen Code, indem du den Startwert auf 100 änderst und dann den Code ausführst, um zu sehen, ob sich der Hintergrund ändert.

        Herausforderung: Wenn du einen dritten Hintergrund hast, kannst du auf das Pluszeichen am unteren Rand des `wenn`-Bausteins klicken.  Es erscheint ein weiteres Feld für Deine dritte Hintergrundfunktion sowie ein Platz, an dem du die Punktzahl erneut überprüfen kannst.\_
      CSD U3 platform player2_2019: |-
        # Benutzerkontrollelemente

        Als nächstes solltest du Benutzerkontrollelemente hinzufügen, damit du Deinen Spieler bewegen kannst.  Dein Spieler muss sich nach links bewegen, wenn die linke Pfeiltaste gedrückt wird, nach rechts, wenn die rechte Pfeiltaste gedrückt wird, und springen, wenn die Leertaste gedrückt wird.

        # Mache folgendes

        -   Erstelle eine neue `controlPlayer`-Funktion im Bereich "Funktionen" Ihres Codes.
        -   Verwende innerhalb der Funktion `controlPlayer` die Bausteine `if`, `keyDown` und `sprite.x`, um Deinen Spieler gemäß den Pfeiltasten nach links und rechts bewegen zu lassen.  Sieh Dir  <a href="../../12/puzzle/7" target="_blank"> Lesson 12 Puzzle 7 </a> für Beispiele an.
        -   Verwende innerhalb der Funktion `controlPlayer` die Bausteine `if`, `keyDown` und `velocityY`, um Deinen Spieler zum Springen zu bringen, wenn der Pfeil nach oben gedrückt wird.  Sieh Dir zum Beispiel <a href="../../15/puzzle/11" target="_blank"> Lektion 15 Puzzle 11 </a> an.
        -   Rufe die Funktion "controlPlayer" innerhalb der Zeichenschleife auf.
        -   Starte das Spiel und teste Deinen Code.
      CSD U4 - Design Mode Project_2018: |-
        # Entwerfe Deine App

        Erstelle mit deinem Papier-Prototypen eine digitale Version deines Bildschirms mit den Elementen des Design-Modus, die du kennen gelernt hast.

        # Machen Folgendes

        -   Benenne den Bildschirm um, damit er Deinem _Namensraum_ entspricht.
        -   Benutze die eingebauten Elemente, um Deinen Anwendungsbildschirm zu gestalten, indem Du jedem eine passende ID gibst
            -   Wenn Dein Namensraum zum Beispiel `home_` ist, kannst Du IDs wie folgt erstellen:
                -   `home_title`
                -   `home_login_button`
                -   `home_logo`
        -   Für alle Komponenten Deiner App, die nicht mit den eingebauten Elementen neu erstellt werden können, kannst Du das auch nicht:
            -   Redesign, um die eingebauten Elemente zu nutzen
            -   Finde ein Bild, das Du an Stelle Deines Elements verwenden kannst
            -   Zeichne das Element mit Deinem bevorzugten Bildbearbeitungsprogramm
        -   Stelle sicher, dass Du und Deine Teamkollegen regelmäßig die Designs des jeweils anderen betrachten, um einen einheitlichen Stil zu gewährleisten
      CSD U4 - Design Mode Project_2019: |-
        # Entwerfe Deine App

        Erstelle mit deinem Papier-Prototypen eine digitale Version deines Bildschirms mit den Elementen des Design-Modus, die du kennen gelernt hast.

        # Machen Folgendes

        -   Benenne den Bildschirm um, damit er Deinem _Namensraum_ entspricht.
        -   Benutze die eingebauten Elemente, um Deinen Anwendungsbildschirm zu gestalten, indem Du jedem eine passende ID gibst
            -   Wenn Dein Namensraum zum Beispiel `home_` ist, kannst Du IDs wie folgt erstellen:
                -   `home_title`
                -   `home_login_button`
                -   `home_logo`
        -   Für alle Komponenten Deiner App, die nicht mit den eingebauten Elementen neu erstellt werden können, kannst Du das auch nicht:
            -   Redesign, um die eingebauten Elemente zu nutzen
            -   Finde ein Bild, das Du an Stelle Deines Elements verwenden kannst
            -   Zeichne das Element mit Deinem bevorzugten Bildbearbeitungsprogramm
        -   Stelle sicher, dass Du und Deine Teamkollegen regelmäßig die Designs des jeweils anderen betrachten, um einen einheitlichen Stil zu gewährleisten
      CSD U4 - Design Mode Text: "# Text hinzufügen.\n\n<img src=\"https://images.code.org/86ba633e04f90f3ca47dff3dcd064847-image-1469812708683.15.36.png\"
        style=\"float: right; width: 75px\"/>\nMit dem Label-Element kannst du jeden
        beliebigen Text zu deiner App hinzufügen, den du möchtest. Ziehe einfach einen
        Label-Block heraus und setze seine \"text\"-Eigenschaft. \n\n# Mache Folgendes\n\nVerwende
        ein Label-Element, um einen Titel für diese App zu erstellen.\n\n-   Ziehe
        ein Label heraus und platziere es oben auf dem Bildschirm\n-   Ändere die
        ID auf \"titleLabel\".\n-   Ändere den Text in \"Meine App\".\n-   Vergrößere
        die Schriftgröße\n-   Wähle eine Farbe, die Dir gefällt für den Titel"
      CSD U5 Amazon Data Video: Sieh Dir dieses Video an, um zu erfahren, wie dieses
        Problem von Amazon gelöst wird. Während du zusiehst, denke darüber nach, welche
        Daten gesammelt werden und woher sie kommen.
      CSD U5 Amazon Data Video_2018: Sieh Dir dieses Video an, um zu erfahren, wie
        dieses Problem von Amazon gelöst wird. Während du zusiehst, denke darüber
        nach, welche Daten gesammelt werden und woher sie kommen.
      CSD U5 Amazon Data Video_2019: Sieh Dir dieses Video an, um zu erfahren, wie
        dieses Problem von Amazon gelöst wird. Während du zusiehst, denke darüber
        nach, welche Daten gesammelt werden und woher sie kommen.
      CSD U5 Waze Data Video: Sieh Dir dieses Video an, um zu erfahren, wie dieses
        Problem von Waze gelöst wird. Während du zusiehst, denke darüber nach, welche
        Daten gesammelt werden und woher sie kommen.
      CSD U5 Waze Data Video_2018: Sieh Dir dieses Video an, um zu erfahren, wie dieses
        Problem von Waze gelöst wird. Während du zusiehst, denke darüber nach, welche
        Daten gesammelt werden und woher sie kommen.
      CSD U5 Waze Data Video_2019: Sieh Dir dieses Video an, um zu erfahren, wie dieses
        Problem von Waze gelöst wird. Während du zusiehst, denke darüber nach, welche
        Daten gesammelt werden und woher sie kommen.
      CSD U5 binary 5-new_2018: |-
        # Decodieren mehrerer Zahlen

        Hier ist ein Widget, das Zahlen bis zu acht Bits berechnen kann. Damit kann man die Werte der beiden folgenden Weltrekorde ermitteln.

        Vergiss nicht, darauf zu achten, dass das "1"-Bit immer das richtige Bit ist.  Wenn du zusätzliche Bits auf der linken Seite des Widgets hast, lass sie einfach ausgeschaltet.

        ![](<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14 PM.png>)

        1.  Längster Schwanz bei einem Hund (in Zoll) (5 Bit)
        2.  Die meisten Löffel wurden auf dem Gesicht von jemandem ausgewogen (5 Bits).

        # Mache Folgendes

        -   Decodiere die beiden Zahlen aus einer binären Zeichenkette.
            -   _Hinweis: Du musst die Zahlen in der Reihenfolge lesen, wobei die erste Antwort die ersten fünf Bits und die zweite Antwort die fünf Bits danach verwendet._
      CSD U5 binary 5-new_2019: |-
        # Decodieren mehrerer Zahlen

        Hier ist ein Widget, das Zahlen bis zu acht Bits berechnen kann. Damit kann man die Werte der beiden folgenden Weltrekorde ermitteln.

        Vergiss nicht, darauf zu achten, dass das "1"-Bit immer das richtige Bit ist.  Wenn du zusätzliche Bits auf der linken Seite des Widgets hast, lass sie einfach ausgeschaltet.

        ![](<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14 PM.png>)

        1.  Längster Schwanz bei einem Hund (in Zoll) (5 Bit)
        2.  Die meisten Löffel wurden auf dem Gesicht von jemandem ausgewogen (5 Bits).

        # Mache Folgendes

        -   Decodiere die beiden Zahlen aus einer binären Zeichenkette.
            -   _Hinweis: Du musst die Zahlen in der Reihenfolge lesen, wobei die erste Antwort die ersten fünf Bits und die zweite Antwort die fünf Bits danach verwendet._
      CSD U5 binary video_2019: |-
        ## Zu berücksichtigende Fragen

        -   Warum werden alle Arten von Daten auf dem Computer als Zahlen gespeichert?
        -   Wenn alles als Zahl gespeichert ist, wie kann der Computer Deiner Meinung nach den Unterschied zwischen Zahlen, Buchstaben, Bildern und Ton erkennen?
      CSD U6 arrays video: |-
        ## Zu berücksichtigende Fragen

        -   Wann könnte ein Array nützlicher sein als eine Variable?
        -   Warum musst du immer ein Array einer Variablen zuweisen?
        -   Wie kannst du auf die Elemente in Ihrem Array zugreifen?
      CSD U6 for loop led color_2019: |-
        # Füge etwas Farbe hinzu

        Jetzt, da Sie die LEDs ein- und ausschalten können, ist es an der Zeit, etwas Farbe hinzuzufügen.

        # Mach folgendes

        Füge Event-Handler für "button\_red" und "button\_green" hinzu, die alle LEDs in diese Farben umschaltet.
      CSD U6 for loop led personalize_2019: |-
        # Make it Your Own

        Denke an einen neuen Button, den du in diesem Projekt gerne hättest.  Vergiss nicht die anderen LED-Optionen wie Puls und Blinken.

        # Mach folgendes

        Füge dem Projekt eine neue Schaltfläche hinzu und programmiere diese mit einem Verhalten Deiner Wahl.
      CSD U6 functions paramters video_2019: |-
        ## Zu berücksichtigende Fragen

        -   Wie machen Parameter Funktionen nützlicher?
        -   Woher weißt du, wann du mehrere Funktionen zu einer einzigen kombinieren kannst?
      CSD U6 hardware software video_2019: |-
        ## Zu berücksichtigende Fragen

        -   Worin besteht der Unterschied zwischen Hard- und Software?
        -   Was macht das Betriebssystem eines Computers?
      CSD U6 iter predict bubbles: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      CSD U6 light pattern off_2019: |-
        # Ausschalten

        Wenn du diese App startest, sind die Lichter aus, aber sobald du ein Muster wählst, gibt es keine Möglichkeit, die Lichter wieder auszuschalten!

        # Mache Folgendes

        Erstelle eine Funktion, die alle LEDs ausschaltet, und füge dann eine "Off"-Schaltfläche zur App hinzu, damit diese alle farbigen LEDs ausschaltet.
      CSD U6 params modify clouds_2019: |-
        # Wolken

        Dieses Programm lässt die Wolken sich bewegen, wenn du in den Soundsensor pustest, aber es ist noch nicht fertig.

        # Mach folgendes

        -   Erstelle eine neue Funktion `moveCloud(name)`, die jede Wolke bewegt.
            -   (Hinweis: Du wirst fast den gleichen Code wie die Funktion `moveCloud0` verwenden).
        -   Rufe Deine neue Funktion `moveCloud(name)` innerhalb des Ereignisblocks einmal für jeden Wolkennamen auf.
            -   (Hinweis: Dies ist vergleichbar mit dem Aufruf der Funktion `loopCloud(name)`.)
      CSD U6 params starchaser challenge 2_2018: |-
        # Star Chaser

        Nun, da du ein funktionierendes Spiel hast, kannst du dich mit einigen verschiedenen Features herausfordern.

        # Mache Folgendes

        -   Bringe den Spieler dazu, wieder in die Mitte des Bildschirms zu gehen, wenn die linke Taste gedrückt wird.
      CSD U6 params starchaser challenge 2_2019: |-
        # Star Chaser

        Nun, da du ein funktionierendes Spiel hast, kannst du dich mit einigen verschiedenen Features herausfordern.

        # Mache Folgendes

        -   Bringe den Spieler dazu, wieder in die Mitte des Bildschirms zu gehen, wenn die linke Taste gedrückt wird.
      CSD U6 setProperty hidden 2_2019: |-
        # Zeigen/Verbergen

        Diese Alarm-App ist nicht besonders nützlich, wenn Sie den Alarm nicht ausschalten können, sobald er ausgelöst wurde. Lasst uns das in Ordnung bringen.

        # Mach folgendes

        Erstelle ein zweites Ereignis, um zu beobachten, ob der "stopAlarmButton" angeklickt werden kann. Wenn dieses Ereignis ausgelöst wird:

        -   Ändere den Statustext auf "OFF".
        -   Verberge die "stopAlarmButton".

        _Hinweis: "hidden" ist eine boolesche Eigenschaft. Wenn wir `false` benutzt haben, damit der Button erscheint, was sollten wir dann verwenden, um ihn wieder zu verstecken?_
      CSD What Makes a Computer a Computer Video_2019: |-
        ## Fragen, über die man nachdenken sollte

        -   Was macht ein Computer anders als Maschinen, die es zuvor bereits gab?
        -   Denke an etwas, das du am Computer machst. Welche Art von Eingabe, Ausgabe, Speicherung und Verarbeitung geschieht?
      CSD sprite movement challenge_2018: |-
        # Verbessere Deine Animation

        Mache deine Animation noch besser, indem du mehr Sprite-Eigenschaften änderst oder noch mehr Sprites hinzufügst!
      CSD sprite movement challenge_2019: |-
        # Verbessere Deine Animation

        Mache deine Animation noch besser, indem du mehr Sprite-Eigenschaften änderst oder noch mehr Sprites hinzufügst!
      'CSD: Animating Sprite Movement_2019': |-
        ## Zu berücksichtigende Fragen

        -   Was ist das Zählmuster?
        -   Wie bewegt das Zählmuster Sprites über den Bildschirm?
      'CSD: Animation Tab_2019': |-
        ## Zu berücksichtigende Fragen

        -   Welche Schritte gibt es, um ein Bild zu einem Sprite hinzuzufügen?
        -   Welche verschiedenen Möglichkeiten gibt es, ein Bild zu erhalten?
      'CSD: Drawing in Game Lab 1_2019': |-
        ## Zu berücksichtigende Fragen

        -   Wo findest du weitere Informationen zur Verwendung der Bausteine / Blöcke?
        -   Was ist ein Vorteil der Verwendung des Blockmodus?
      'CSD: Drawing in Game Lab 2_2019': |-
        ## Zu berücksichtigende Fragen

        -   Worin besteht der Unterschied zwischen Strich und Füllung?
      'CSD: For Loop_2019': |-
        ## Zu berücksichtigende Fragen

        -   Wofür werden Schleifen bei der Programmierung verwendet?
        -   An welcher Stelle verwendest du Schleifen?
      'CSD: Introduction to the Draw Loop_2019': |-
        ## Zu berücksichtigende Frage

        -   Was bewirkt die Zeichenfunktion?
      'CSD: Sprite Velocity_2019': |-
        ## Zu berücksichtigende Fragen

        -   Warum solltest du anstelle des Zählermusters einen Geschwindigkeits-Baustein verwenden?
        -   Gib ein Beispiel für ein Zählermuster und wie du stattdessen einen Geschwindigkeits-Block verwenden könntest.
      'CSD: Sprites in Game Lab_2019': |-
        ## Zu berücksichtigende Fragen

        -   Was ist ein Sprite?
        -   Was sind Eigenschaften?
        -   Welches Problem lösen Sprites?
      CSDU4 - Design Mode - 15: "# Designmodus\n\nWillkommen im Designmodus in AppLab!
        So kannst du ganz einfach eine digitale Version Deiner skizzierten Wireframes
        erstellen, indem du Oberflächenelemente aus der Toolbox hinzufügst und sie
        so gestalten, wie du es wünschen!\n\n**Ziel:** Füge Deiner App im Designmodus
        einen großen roten Knopf hinzu..\n\n# Mache Folgendes:\n\n-   **Suche <img
        src=\"https://images.code.org/278f146396c80c97d0b5d73f24d48aec-image-1444335461720.png\">
        in the Design Toolbox** und ziehe eine Schaltfläche heraus und ändere dessen
        Größe. \n\n-   **Ändere den Text der Schaltfläche** auf \"Click Me\"..\n\n-
        \  **Setze die Farbe für die Schaltfläche** auf rot.\n\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"
        style=\"width: 500px; float: middle\">"
      CSDU4 - Design Mode - 4: |-
        # IDs

        Die `id` (wir schreiben typischerweise **ID**) ist ein **eindeutiger Bezeichner**, der für jedes Element in der App verwendet wird.

        Jedes Element, das in der App erscheint, muss eine **eindeutige ID** haben. Tatsächlich erhälst Du eine Warnmeldung in der Konsole, wenn Du versuchst ein Programm auszuführen, das zwei Buttons mit der gleichen ID hat.

        # Mache Folgendes

        Während jedes Element, das Du im Design-Modus herausziehst, eine Standard-ID erhält, sind diese nicht wirklich hilfreich (wie `button1` und `button2`), also solltest Du Dich daran gewöhnen, Deine eigenen IDs zu erstellen.

        -   Ändere die ID Deines "click me"-Buttons in etwas Nützliches (wie `redButton`)
        -   Ziehe eine zweite Schaltfläche heraus
        -   Mache die zweite Schaltfläche blau und gib dieser eine ID von `blueButton`
      CSDU4 - Design Mode Icons: |-
        <img src="https://images.code.org/2b405319f597910b1563ae607958171c-image-1475866226306.49.51.png" style="width: 200px; float:right">

        # Symbole

        Symbole helfen den Benutzern, die richtige Funktionalität zu finden, während sich deine App gleichzeitig noch ausgefeilter anfühlt.

        # Mache Folgendes

        Füge ein paar Symbole zu Deiner App hinzu. Für jedes Symbol:

        -   Ziehe ein Bildelement heraus
        -   Klicke neben dem Feld "Bild" auf "Auswählen...".
        -   Klicke auf den Reiter "Icons" und wähle eines aus
        -   Achte darauf, dass Dein Bild eine gute ID erhält!
      CSDU4 Design Mode Video_2019: |-
        ## Zu berücksichtigende Fragen

        -   Wo in App Lab können Sie die Benutzeroberfläche Ihrer App gestalten?
        -   Welche Arten von Elementen können Sie Ihrer App hinzufügen?
      CSDU4 Functionality visible: |-
        # Kontrolle der Sichtbarkeit

        Als wir vorhin in dieser Lektion Wege zur Vereinfachung der Quiz-App vorgeschlagen haben, haben wir erwähnt, dass es möglich ist, Designelemente mit Code ein- oder auszublenden. App Lab hat zwei Funktionen, mit denen Sie die Sichtbarkeit eines Elements steuern können:

        -   `hideElement()` macht das angegebene Element unsichtbar
        -   `showElement()` macht das angegebene Element sichtbar

        # Mache Folgendes

        Die mitgelieferte App hat ein Bild und zwei Buttons.

        -   Hänge einen Event-Handler an den "Hide"-Button an, der das Bild beim Klicken ausblendet
        -   Hänge einen Event-Handler an den "Show"-Button an, der das Bild beim Anklicken anzeigt
      CSDU4 Project Import_2018: |-
        # Zurück zu deiner App

        Nachdem Du nun etwas Übung im Importieren von Bildschirmen hattest, ist es an der Zeit, mit der Arbeit an der App Deines Teams zu beginnen.

        # Mach Folgendes

        Jedes Mitglied Deines Teams wird seine eigene Kopie der App erstellen, in die alle Bildschirme der Teammitglieder importiert werden. Dies wird Deine Kopie der App sein, und die Kopie, zu der Du in der nächsten Lektion Code hinzufügen wirst.  ( Vergiss nicht, dass du auch deinen eigenen Bildschirm in dieses Projekt importieren musst)

        -   Sammle alle Freigabe-URLs für die Seiten Deines Teams, **einschließlich Deiner eigenen**.
            -   Jedes Teammitglied kann die Freigabe-URL für seinen eigenen Bildschirm finden, indem es zum letzten Level der vorherigen Lektion zurückkehrt oder den Bildschirm in seinem [Projektverzeichnis](/projects) findet.
        -   Importiere jeden der Bildschirme, einen nach dem anderen
            -   Wenn Du bei einem der Bildschirme einen ID-Fehler feststellen, besprich das Problem mit dem Ersteller des Bildschirms, damit es behoben und importiert werden kann.
        -   Lösche die Voreinstellung "screen1".
        -   Lege den Hauptbildschirm als Standard fest

        Mache Dir keine Sorgen über das Hinzufügen von Code an diesem Punkt; dazu kommen wir im nächsten Level.
      CSDU4 Project Import_2019: |-
        # Zurück zu deiner App

        Nachdem Du nun etwas Übung im Importieren von Bildschirmen hattest, ist es an der Zeit, mit der Arbeit an der App Deines Teams zu beginnen.

        # Mach Folgendes

        Jedes Mitglied Deines Teams wird seine eigene Kopie der App erstellen, in die alle Bildschirme der Teammitglieder importiert werden. Dies wird Deine Kopie der App sein, und die Kopie, zu der Du in der nächsten Lektion Code hinzufügen wirst.  ( Vergiss nicht, dass du auch deinen eigenen Bildschirm in dieses Projekt importieren musst)

        -   Sammle alle Freigabe-URLs für die Seiten Deines Teams, **einschließlich Deiner eigenen**.
            -   Jedes Teammitglied kann die Freigabe-URL für seinen eigenen Bildschirm finden, indem es zum letzten Level der vorherigen Lektion zurückkehrt oder den Bildschirm in seinem [Projektverzeichnis](/projects) findet.
        -   Importiere jeden der Bildschirme, einen nach dem anderen
            -   Wenn Du bei einem der Bildschirme einen ID-Fehler feststellen, besprich das Problem mit dem Ersteller des Bildschirms, damit es behoben und importiert werden kann.
        -   Lösche die Voreinstellung "screen1".
        -   Lege den Hauptbildschirm als Standard fest

        Mache Dir keine Sorgen über das Hinzufügen von Code an diesem Punkt; dazu kommen wir im nächsten Level.
      CSDU6 - UI and Inputs - dropdown setText: |-
        # setText und getText

        Häufig wirst du den Text eines Oberflächenelements abrufen und damit den Text eines anderen Elements auf dem Bildschirm festlegen wollen. Kannst du den Text aus der Dropdown-Liste holen, wenn der Benutzer eine neue Eingabe auswählt, und damit den Text des Labels "choiceDisplay" einstellen.
      CSDU6 - UI and Inputs - get set with text input: |-
        # setText und getText

        Du hast bereits gesehen, wie man getText und setText verwendet. Kannst du dafür sorgen, dass diese App den Text erhält, den der Benutzer eingegeben hat, sobald er die Eingabetaste gedrückt hat, und ihn im Textfeld unten anzeigen?

        _Tipp: Das Ereignis "change" wird ausgelöst, wenn der Benutzer auf "enter" in einem Feld klickt. Benutze einen Event-Handler für die Texteingabe, der auf das Ereignis "change" achtet._
      CSDU6 - UI and Inputs - getNumber: |-
        # getNumber

        **Starter Code:** Dieses Programm erstellt einen einfachen Taschenrechner, aber **es stimmt etwas nicht mit ihm. Versuche 2 + 2. einzusetzen.**

        Wir können dies beheben, indem wir `getNumber()` anstelle von `getText()` verwenden. Kannst du das Programm reparieren, indem du `getText()` zu `getNumber()` änderst?
      CSDU6 - UI and Inputs - getNumber practice: |-
        # getNumber

        **Startcode:** Das Programm versucht, die Wertanzeige zu aktualisieren, wenn sich der Schiebereglerwert ändert, setzt aber immer den Wert auf 10.

        Kannst du `getNumber()` verwenden, um den Wert des Schiebereglers abzurufen und die valueDisplay bei Änderungen zu aktualisieren?
      CSDU6 - UI and Inputs - getText: |-
        # getText

        Versuche, einen Event-Handler einzurichten, der den Text aus dem Dropdown erhält, wenn ein Benutzer ein neues Element aus dem Dropdown auswählt. Du wirst den Getter `getText()` verwenden müssen. Wann immer Du einen Getter verwendest, solltest Du ihn in einer Variable speichern. Verwende `console.log()`, um sicherzustellen, dass es funktioniert.
      CSDU6 - UI and Inputs - hide show: |-
        # Verstecken und Anzeigen

        Es ist ein wenig seltsam, dass beide Knöpfe gleichzeitig auf dem Bildschirm zu sehen sind. Du brauchst den Stop-Alarmknopf nicht, bis der Alarm eingeschaltet ist. Kannst Du dafür sorgen, dass die Knöpfe nur dann angezeigt werden, wenn sie gebraucht werden?

        -   Du möchtest, dass die Alarmtaste beim Programmstart ausgeblendet wird. Dies kann man im Designmodus tun.

        Tipp: Wenn du auf den Auslösealarm-Button klickst, solltest du den Text ändern, den Auslösealarm-Button ausblenden, _und_ den Stoppalarm-Button anzeigen.
      CSDU6 - UI and Inputs - setProperty: |-
        # setProperty Hintergrundfarbe

        Ändere die Hintergrundfarbe einer Schaltfläche jedes Mal, wenn sie mit `setProperty()` angeklickt wird, auf eine neue Zufallsfarbe.
      CSDU6 - UI and Inputs - setProperty Image: "# setProperty image\n\n**Hinweis:**
        Dieses Level beginnt im Designmodus.\n\nEs ist ein Bildelement für dich eingerichtet,
        das jedoch nicht angezeigt wird, wenn du den Designmodus verlässt, da ihm
        nicht mitgeteilt wurde, welches Bild angezeigt werden soll. \n\n-   Benutze
        den Befehl `setProperty()`, um das Bild des UI Image Elements auf dem Bildschirm
        einzustellen."
      CSDU6 - UI and Inputs - setProperty first level: |-
        # setProperty

        **Starter Code:** Es gibt einen Aufruf von `setProperty()`, der die Textfarbe auf blau setzt, wenn du das Programm ausführst.

        Kannst du weitere Aufrufe zu `setProperty()` hinzufügen, die andere Dinge am Text ändern, wenn du das Programm ausführst? Probiere, mindestens 3 weitere Dinge zu ändern.
      CSDU6 - UI and Inputs - setScreen: "# setScreen\n\nBeginnen wir mit einem Setter,
        den Sie vor `setScreen()` verwendet haben. \n\n-   Sorge dafür, dass die Schaltfläche
        \"About Me\" auf der Startseite zur Seite \"About Me\" führt.\n-   Die Schaltfläche
        Zurück auf der Seite Über mich soll anschließend noch dafür sorgen, dass sie
        zur Startseite gelangen."
      CSDU6 - UI and Inputs - setText: |-
        # setText

        Wir fangen an, eine Alarm-App zu erstellen. Wir haben bereits einen Event-Handler für den "triggerAlarmButton" eingerichtet, der den "statusLabel"-Text auf ON ändert, wenn er angeklickt wird. Kannst du den Stop-Alarm-Button dazu bringen, den Text auf OFF zu ändern, wenn er angeklickt wird?
      CSDU6 making new arrays_2019: |-
        # Making New Arrays

        Jetzt, da Sie Arrays ändern können, ist es an der Zeit, dass Sie Ihre eigenen erstellen.

        # Mach folgendes

        -   Erstelle ein neues Array mit beliebigen Noten. Sie können in verschiedenen Oktaven, in einer bestimmten Tonart usw. angeordnet sein. Alles, was du willst!
        -   Lasse den Summer eine zufällige Note aus Ihrem Array spielen, wenn du die Taste **rechts** drückst.
      Course 4 Artist 1: "Hilf mir, meine Box fertig zu zeichnen.\\\n(Jede Linie ist
        200 Pixel lang) \n\n<br/><br/>"
      Course 4 Artist 11: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"
        width=\"200px\"/>\n\nJetzt eine Herausforderung!  \n\nHier ist ein Design,
        das nur Bausteine verwendet, die dir bereits gezeigt wurden.  Kannst du herausfinden,
        wie du es nachbilden kannst?  Fühle dich frei, es auszuprobieren. Es wird
        nicht erwartet, dass es beim ersten Mal perfekt ist.\n\nDie wiederholte Form
        ist fast identisch mit der aus dem letzten Puzzle, außer dass die Länge der
        ersten Schleife etwas kleiner ist. "
      Course 4 Artist 2: |-
        Kannst du eine Schleife verwenden, um das ausgegraute Quadrat zu zeichnen? \
        (Jede Seite ist 300 Pixel lang)
      Course 4 Artist 3: "Versuche herauszufinden, was passiert, wenn du diesen Code
        ausführst (oder drücke \"Ausführen\", um ihn zu testen).  \n\nWiederhole ihn
        dann so oft, bis die Zeichnung vollständig ist."
      Course 4 Artist 4: |-
        Wie viele Grad sind in einem Kreis?\
        Fülle den Wiederhole-Baustein mit dieser Zahl aus, um einen Farbkreis zu erstellen.
      Course 4 Artist 5: "Zeichne die andere Hälfte dieses Designs, sodass es symmetrisch
        ist. Die Dreiecke sind gleichseitig und 50 Pixel lang. \n\nEventuell musst
        du den Code mehrmals ausführen, um alle Bausteine zu finden, die du ergänzen
        musst."
      Course 4 Artist 6: Vervollständige den Code, um diese drei, gleichseitigen Dreiecke
        zu zeichnen.
      Course 4 Artist 7: 'Erstelle nun eine Schleife in einer weiteren Schleife um
        10 Dreiecke zu zeichnen. '
      Course 4 Artist 8: Zeichne diese Sonne, indem du diesen ganzen Code-Baustein
        mehrmals durchlaufen lässt.
      Course 4 Artist 8a: Erinnerst du dich an diese Form?  Jetzt kannst du sie bauen,
        bekommst zum Anfang jedoch keine Bausteine von uns!
      Course 4 Artist 9: 'Wiederhole dieses Design 10 Mal und stelle sicher, dass
        du Dich zwischen jeder gezeichneten Form drehst. '
      Course 4 Artist For Loops 11: "Erinnerst du dich an eine frühere Phase, in der
        wir eine Variable benutzt haben, um die Anzahl der Seiten in einer Form zu
        kontrollieren? Wir werden jetzt dasselbe mit der \"Counter\"-Variablen machen.
        \ \n\nDieses Muster beginnt mit einem Dreieck und addiert eine Seite nach
        der anderen, bis es ein Zehneck (10 Seiten) zeichnet. Jede Seite sollte 100
        Pixel lang sein. \n\nWie wirst Du die `counter`-Variable aus der `for`-Schleife
        verwenden, um diese Zeichnung neu zu erstellen?"
      Course 4 Artist For Loops 6a: Nimm drei kleine Änderungen an dem Code aus dem
        vorherigem Level vor, um dies zu erreichen!
      Course 4 Artist For Loops inspire: |-
        <br/><br/>
        <img src="https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png" width="250px"/>\
        <br/><br/>
        **Freispiel Inspiration:** Du hast jetzt alles gelernt, was du wissen musst um ein Muster wie dieses zu erstellen! Wenn dieses Bild Dich inspiriert, versuche, etwas Ähnliches zu machen. Ansonsten kannst du auch etwas ganz Eigenes erschaffen.
      Course 4 Artist Vars 1: |-
        Kannst du mir helfen, ein gleichseitiges Dreieck zu zeichnen? Es soll auf jeder Seite genau 100 Pixel lang sein.

        <br/>
      Course 4 Artist Vars 12: |-
        Setzen wir die Variable "Seiten" auf 5. Je mehr Seiten wir zu diesem Algorithmus hinzufügen, desto größer wird das ganze Muster!

        Beachte, dass es eine weitere Variable namens "Länge" gibt. Wir können sie nun überall dort verwenden, wo wir einen "bewege vorwärts"-Baustein haben.

        Setze die Variable "Länge" für diese Form auf 75.
      Course 4 Artist Vars 13: "Wenn eine Form viele Seiten hat, muss jede Seite kürzer
        sein, wenn das gesamte Muster auf den Bildschirm passen soll. \n\nLasse uns
        den Algorithmus für dieses erstaunliche Muster neu erstellen, aber anstatt
        die `Länge`-Variable manuell zu setzen, verwenden wir einen Mathematikblock
        mit der `Seiten`-Variablen im Inneren, um sicherzustellen, dass jede Form
        richtig passt.  \n\nDer Umfang jedes Polygons beträgt 300 Pixel."
      Course 4 Artist Vars 2: Statt „um 150 vorwärts bewegen“ verwendet der „Bewegen“-Baustein
        jetzt eine Variable namens „Länge“. Kannst du „Länge“ auf 150 einstellen,
        um dieses neue Dreieck zu zeichnen?
      Course 4 Artist Vars 4: Nun möchte ich ein Rechteck zeichnen, das doppelt so
        lang wie breit ist. Dazu haben wir eine Variable namens „Breite“, die auf
        100 eingestellt werden muss. Kannst Du die Mathematik-Bausteine verwenden,
        um den Code zu vervollständigen?
      Course 4 Artist Vars 6: "Hier ist ein Code, der jedes reguläre Polygon zeichnen
        kann. \n\nEs gibt eine neue Variable namens \"Seiten\", die auf 4 gesetzt
        ist. \nKann man die Variable \"Seiten\" (zusammen mit dem Mathematikbaustein)
        verwenden, um die richtige Menge zu drehen, unabhängig davon, wie viele Seiten
        das Polygon hat?"
      Course 4 Bee 1: |-
        Die Biene weiß nicht, was sich unter der Wolke verbirgt!

        Benutze den „Wenn“-Baustein, um nachzusehen und **NUR DANN** Nektar zu sammeln, wenn eine Blume unter der Wolke ist.
      Course 4 Bee 2: |-
        Verwende den `wenn/ansonsten`-Baustein, um bei jedem Objekt zu prüfen, ob es sich um eine Blume oder Honigwabe handelt.

        Wenn es eine Blume ist, sammle Nektar... ansonsten, mache Honig!
      Course 4 Bee 3: Das unbekannte Objekt ist entweder eine Blume oder eine Bienenwabe.
        Benutze den `wenn/ansonsten`-Baustein, um Nektar zu machen, **wenn** es eine
        Blüte ist, **ansonsten** mache Honig (denn dann wäre es eine Honigwabe).
      Course 4 Bee Params 7: |-
        Versuche, mit Ihrer neuen Funktion all diesen Nektar zu sammeln.

        <br/>
      Course 4 EC 1a: "**Extrem-Herausforderung:** Es gibt keine Regeln oder Hinweise,
        nur die Aufgabe!"
      Course 4 EC 1b: "**Extrem-Herausforderung:** Es gibt keine Regeln oder Hinweise,
        nur die Aufgabe!"
      Course 4 EC 2a: "**Extrem-Herausforderung:** Es gibt keine Regeln oder Hinweise,
        nur die Aufgabe!"
      Course 4 EC 2b: "**Extrem-Herausforderung:** Es gibt keine Regeln oder Hinweise,
        nur die Aufgabe!"
      Course 4 EC 2c: "**Extrem-Herausforderung:** Es gibt keine Regeln oder Hinweise,
        nur die Aufgabe!"
      Course 4 Maze 4: Versuche, das Rätsel mit dem „Wiederholen“-Baustein zu lösen,
        damit du weniger Bausteine benötigst...
      Course 4 SCFL 3: "**For-Schleifen Super Challenge:** Kannst Du herausfinden,
        wie Du diese Zeichnung wiederherstellen kannst? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"
        width=\"350px\"/>"
      CourseD_Dance_Party_01: |-
        _Los geht‘s mit der Tanzparty!_

        Ziehen Sie den Block "einen Neuen erstellen" in den Arbeitsbereich, und verbinden Sie ihn mit dem "Setup" -Block, um Ihren ersten Tänzer zu erstellen.

        -   _Sie können auch auf die Glühbirne links klicken, wenn Sie weitere Informationen oder zusätzliche Herausforderungen möchten._
      CourseD_Dance_Party_02: |-
        Lassen Sie den Elch tanzen!

        Ziehen Sie den Block <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> in den Arbeitsbereich. Verbinden Sie ihn unterhalb des Blocks <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"Takte"</title></block></xml>. Ihr Tänzer sollte nach dem vierten Takt mit einem neuen Tanzschritt beginnen.

        **Takte** sind die zeitliche Struktur von Musik. In diesem Tutorial ist ein Takt vier Schläge lang.
      CourseD_Dance_Party_03: |-
        _Jetzt grooven wir!_

        Füge einen Block <xml><block type="Dancelab_atTimestamp" block-text="after 6 measures"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> zu deinem Arbeitsbereich hinzu. Lasse den Tänzer nach 6 Takten einen neuen Tanzschritt beginnen.
      CourseD_Dance_Party_04: |-
        _Dieser Tanz braucht etwas Pep!_

        Suchen Sie in Ihrer Toolbox nach einem neuen Block, der Ihrem Tänzer einen Hintergrundeffekt hinzufügt. Beobachten Sie, wie sich die Effekte passend zur Musik verändern.
      CourseD_Dance_Party_05: |-
        Verwenden Sie einen weiteren neuen Block, damit der Tänzer **alle 2 Takte** den Tanzschritt wechselt!

        -   Durch Auswahl von "(nächster)", "(vorheriger)" oder "(zufällig)" wird der Tänzer bei jeder Ausführung des Codes einen anderen Tanzschritt ausführen.
      CourseD_Dance_Party_06: |-
        _Wir brauchen noch mehr Tänzer!_

        Erstellen Sie einen Backup-Tänzer namens "backup\_dancer1", der mit der Katze tanzt.
      CourseD_Dance_Party_08: |-
        Jeder Tänzer hat eine Reihe von _Eigenschaften_, die steuern, wie er aussieht.

        Sie können es aussehen lassen, als befinde sich der Tänzer im Hintergrund, indem Sie seine _Größe_ kleiner machen. Können Sie beide Backup-Tänzer gleich groß machen?
      CourseD_Dance_Party_09: |-
        Tänzer haben eine "Farbton" -Eigenschaft, mit der man eine Farbschicht hinzufügen kann. Versuchen Sie, den Farbton eines Ihrer Tänzer zu verändern.

        -   Farbtöne mischen die gewählte Farbe mit den Farben des Tänzers.
      CourseD_Dance_Party_10: |-
        Jetzt wissen wir, wie wir die Eigenschaften eines Tänzers ändern. Mit diesem Block können wir dafür sorgen, dass immer die gleichen Eigenschaften automatisch auf die Musik reagieren:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Dieses Programm verwendet den "Bass" (die tiefen Töne) der Musik, um die Höhe eines Tänzers zu kontrollieren. Können Sie die anderen Tänzer auch auf die Musik reagieren lassen?
      CourseD_Dance_Party_11: |-
        Mit dem Block <xml><block type="Dancelab_whenKey"></block></xml> können Sie Code ausführen, wenn die Pfeiltaste nach oben gedrückt wird.

        Sie können den Tanzschritt verändern, die Eigenschaften eines Tänzers verändern oder einen schnellen einmaligen Tanzschritt tun. Seien Sie kreativ und halten Sie Ausschau nach neuen Blöcken!
      CourseD_Dance_Party_11_5: |-
        Schaue dir diesen Baustein an:

        <xml>
          <block type="Dancelab_makeNewDanceSpriteGroup" block-text="Make 6 new ducks in a circle">
            <title name="N">6</title>
            <title name="COSTUME">"DUCK"</title>
            <title name="LAYOUT">"circle"</title>
          </block></xml>

        Jetzt kannst du eine ganze Reihe von Tänzern auf einmal erstellen!

        Verwende einige der "alle Enten"-Bausteine, um Code zu schreiben, der alle Enten gemeinsam tanzen lässt.
      CourseD_Dance_Party_11b: Es ist Zeit für einen Tanz-Wettbewerb! Die Katze dabt,
        wenn Sie die linke Pfeiltaste drücken. Lassen Sie den Roboter "droppen", indem
        Sie die rechte Pfeiltaste drücken.
      CourseD_Dance_Party_12: Grooven Sie los! Erstellen Sie einen eigenen Tanz und
        teilen Sie ihn mit Ihren Freunden.
      CourseE_HOC 2018 Level_1: Du benötigst für deine Reise Vorräte. Sammle ein **Boot**
        ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        aus der **Truhe** ein![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Irgendwo in diesem Ozeanmonument versteckt sich ein
        **Tintenfisch** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png).
        Findest du ihn?
      CourseE_HOC 2018 Level_11: Baue eine Mauer aus **Prismarin** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        um den schwarzen Beton. Dies aktiviert den **Aquisator** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        und schließt die Herausforderung ab!
      CourseE_HOC 2018 Level_2: Boote sind viel bequemer, als im offenen Wasser zu
        schwimmen! Begib dich zum Ende des Anlegestegs, um an Bord zu gehen.
      CourseE_HOC 2018 Level_3: Schnapp dir die Ruder und fahre auf das offene Meer,
        um den **Kabeljau** zu fangen![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Füttere den **dolphin** mit dem Kabeljau![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Verwende einen "Wiederholen"-Block, um den Ozean schneller zu überqueren.
      CourseE_HOC 2018 Level_5: Irgendwo ist eine **Nautilusmuschel** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        versteckt! Erkunde das Schiffswrack, um die **Truhe** zu erreichen![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      CourseE_HOC 2018 Level_6: Sieht kalt aus! Fange auf dem Weg zu den Unterwasserruinen
        einen **Lachs** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png).
      CourseE_HOC 2018 Level_7a: Du hast die Unterwasserruine gefunden. Suche im Sandstein
        nach eine **Truhe** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        mit **Prismarin** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      CourseE_HOC 2018 Level_8: Erst Eisberge, nun Lava? Durchquere diese Vulkaninsel,
        und finde die **Tropenfische** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        im Korallenriff.
      CourseE_HOC 2018 Level_9b: Du hast das Riff erreicht. Suche jetzt nach dem **Herz
        des Meeres** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)!
        Verwende blaue und rote Korallen, um die Schatz**truhe** zu erreichen![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      Crack Random Substitution: |-
        # Breche eine zufällige Substitutions-Verschlüsselung auf!

        Diese Version des Tools bietet Dir mehr Informationen über den verschlüsselten Text und mehr Möglichkeiten, wie du verschiedene Substitutionen ausprobieren kannst.

        ### Verschiedene Möglichkeiten, Text zu analysieren

        -   Spiele mit einigen der Sortieroptionen, die auf der Registerkarte Zufällige Verschlüsselung verfügbar sind, um verschiedene Ansichten über die Häufigkeiten der Buchstaben im Eingabetext sowie im englischen Standardtext zu erhalten.
            ![](https://images.code.org/82efbca1807206c9a07de520fdb22027-image-1443572614493.23.28.png)

        ### Unterschiedliche Möglichkeiten der Substitution

        -   Um einen Buchstaben zu ersetzen, kannst du einen blauen Buchstaben des Alphabets direkt unter den orangefarbenen Buchstaben ziehen, den du im ursprünglichen Chiffriertext ändern möchtest.
            ![](https://images.code.org/da9a7af7568d8c1698872ab91b4d79d7-image-1443572471212.gif)

        ### Spielen.  Immer spielen.

        -   Es gibt andere Möglichkeiten, Zeichen zu analysieren und zu ersetzen, die du finden kannst, indem du auf die Schaltflächen klickst und ausprobierst, was immer du möchtest.
        -   Denke daran: Du kannst es nicht brechen :)

        Schau, wie lange du brauchst, um die Verschlüsslung zu knacken! Ist dies eine gute Methode, um geheime Daten zu verschlüsseln?

        <img src="http://code.org/api/hour/finish_encryption.png">
      Crack a Caesar Cipher: |-
        # Knacke eine Caesar-Verschlüsslung!

        Mit diesem Tool kannst du mit Text spielen und eine Caesar-Verschlüsselung verwenden. Du kannst damit eine Nachricht entweder verschlüsseln oder entschlüsseln.

        # Mache Folgendes

        -   Lade eine **Beispielnachricht** aus dem Dropdown-Menü der Nachricht. Dadurch wird eine Nachricht geladen, die mit einer Caesar-Verschlüsselung verschlüsselt wurde.

        ![](https://images.code.org/347139486c8c729bf3c6e72ce67da878-image-1476286380409.gif)

        -   Mit den Schaltflächen auf der Registerkarte Caesar-Ersetzung kannst du das Alphabet vorwärts oder rückwärts verschieben, um zu versuchen, die Nachricht zu entschlüsseln.

        ![](https://images.code.org/ef9ebc16d2f1442dc46fba9bd48b5d43-image-1476285966821.gif)

        Schau, wie lange du benötigst, um die Verschlüsselung zu knacken! Ist dies eine gute Methode, um geheime Daten zu verschlüsseln?

        <img src="http://code.org/api/hour/begin_encryption.png">
      Dance Party 2_2019: |-
        Der Außerirdische war stolz auf seine Tanzkunst auf dem Mars, aber jetzt kann er sich nur noch von einer Seite zur anderen bewegen.

        Ersetze den Baustein zum Verhalten in<xml>
        <block type="gamelab_addBehaviorSimple" block-text="the sprite begins block">
                <value name="SPRITE">
                  <block type="gamelab_allSpritesWithAnimation">
                    <title name="ANIMATION">"blue alien"</title>
                  </block>
                </value>
              </block></xml> durch einen anderen, der den Außerirdischen zum Drehen bringt!
      Dance Party 3_2019: |-
        Erstelle ein neues Sprite, das wie ein rosa Alien aussieht. <img src="https://levelbuilder-studio.code.org/media?u=https%3A%2F%2Flevelbuilder-studio.code.org%2Fapi%2Fv1%2Fanimation-library%2FecnW7rdKTB0fUrKRKrqIHbrHVvyWh5hu%2Fcategory_characters%2FalienPink.png" width="3%"></img>

        Lasse es jede beliebige Bewegung ausführen, wenn es angeklickt wird. Versuche es diesmal mit einer neuen Bewegung!
      Dance Party 4_2019: "Bildet eine außerirdische Tanzcrew! \n\n-   Erstelle ein
        drittes Sprite, das wie ein gelber Außerirdischer aussieht, und lass es eine
        Tanzbewegung beginnen, wenn es angeklickt wird.\n-   Stelle alle deine Aliens
        so ein, dass sie in einer horizontalen Linie stehen, so wie hier:\n\n![](https://images.code.org/09380fc01069e79d9d33a979379a666b-image-1555960752137.png)"
      Dance Party 5_2019: "<!-- Wir können alle möglichen Dinge in diesem Programm
        ändern, wenn du auf die Sprites klickst. Füge Code hinzu, um die Farbe jedes
        Aliens zu ändern, wenn er angeklickt wird. -->\n\nLasse uns mit einer anderen
        Veranstaltung weitermachen. \n\nErstelle ein einzelnes Tastendruckereignis
        mit <xml><block type=\"gamelab_keyPressed\" block-text=\"the keypress event
        block\"></block></xml>. \n\nFür dieses Ereignis solltest du es so gestalten,
        dass beim Drücken einer Taste jeder deiner Außerirdischen seine Farbe wechselt!
        Wähle eine beliebige Taste. Wenn du einen Touchscreen verwendest, empfehlen
        wir _up_, _down_, _left_ oder _right_."
      Dance Party 6_2019: |-
        Diese Außerirdischen werden verrückt! Beruhigen wir sie, indem wir eine Glocke läuten.

        Füge zuerst ein neues Sprite hinzu, das wie eine Glocke aussieht.

        Dann füge ein Ereignis hinzu, das jeden Außerirdischen zum Tanzen bringt, wenn die Glocke angeklickt wird, und zwar mit <xml><block type="gamelab_removeAllBehaviors" block-text="the stops everything block"><value name="SPRITE"><block type="gamelab_allSpritesWithAnimation"><title name="ANIMATION">"blue alien"</title></block></value></block></xml>!
      Dance Party 7_2019: "Für den rosa Außerirdischen ist der Spaß ansteckend! Wer
        ihn berührt will tanzen! \n\nBenutze <xml><block type=\"gamelab_checkTouching\"
        block-text=\"the when touching event block\"><title name=\"CONDITION\">\"when\"</title><value
        name=\"SPRITE1\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"blue
        alien\"</title></block></value><value name=\"SPRITE2\"><block type=\"gamelab_allSpritesWithAnimation\"><title
        name=\"ANIMATION\">\"pink alien\"</title></block></value></block></xml>, damit
        der blaue Außerirdische eine neue Tanzbewegung beginnt, wenn der rosa Außerirdische
        ihn berührt."
      Dance Party Freeplay_2019: |-
        Erstelle jetzt deine eigene Alien-Disco! Auf der Suche nach Inspiration? Probiere diese Ideen aus:

        -   Erstelle einen anderen Außerirdischen, der eine weitere Bewegung ausführt, wenn er angeklickt wird.
        -   Lasse Außerirdische mehr Tanzbewegungen machen, wenn sie sich berühren.
      Dance Party Predict_2019: "**Mache eine Vorhersage:** Hier ist ein Sprite, das
        wie ein blauer Außerirdischer aussieht!   \n\nWas wird deiner Meinung nach
        passieren, wenn du darauf klickst?  "
      Dance_2019_01: "_Lassen Sie uns eine Tanzparty veranstalten!_\n\nZiehen Sie
        den <xml><block type=\"Dancelab_makeAnonymousDanceSprite\" block-text=\"make
        a new dancer\"><title name=\"COSTUME\" config=\"&quot;CAT&quot;, &quot;PINEAPPLE&quot;\">\"CAT\"</title><title
        name=\"LOCATION\">{x: 200, y: 200}</title></block></xml> in den Arbeitsbereich
        und verbinden Sie ihn innerhalb des <xml><block type=\"Dancelab_whenSetup2\"
        next_connection_disabled=\"true\" block-text=\"setup\"></block></xml> Blocks,
        um Ihren ersten Tänzer zu erstellen. \n\n-   Sie können auch auf die Glühbirne
        auf der linken Seite klicken, wenn Sie weitere Informationen benötigen oder
        zusätzliche Herausforderungen hinzufügen möchten.\\_"
      Dance_2019_02: |-
        Mit dem Block <xml><block type="Dancelab_whenKey" block-text="when up pressed"></block></xml> können Sie Code ausführen, wenn Sie den Pfeil nach oben drücken. Verwenden Sie den <xml><block type="Dancelab_doMoveEachLR" block-text="do once"><title name="GROUP">"CAT"</title><title name="MOVE">MOVES.XClapSide</title><title name="DIR">-1</title></block></xml> Block, um die Tänzerin klatschen zu lassen, wenn Sie den Pfeil nach oben drücken, oder probieren Sie eine andere Bewegung aus!
        _Achten Sie darauf, Ihren Pfeil nach oben oder ![](<https://images.code.org/419e704e6841c0b696016bf5029b8cb9-image-1571864825506.06.45 PM.png>) zu drücken, nachdem Sie die Schaltfläche Ausführen angeklickt haben!_
      Dance_2019_03: Es ist Zeit für einen Tanzwettbewerb!  Programmieren Sie jeden
        Tänzer so, dass er sich bewegt, wenn Sie verschiedene Tasten drücken. Wählen
        Sie für jeden Tänzer Ihre Lieblingsbewegung aus oder stellen Sie ihn für etwas
        völlig Unvorhersehbares auf stellen Sie für etwas völlig Unvorhersehbares
        "(Random)“ ein!
      Dance_2019_04: "Bringen Sie die Tänzer dazu, sich im Takt der Musik zu bewegen!
        \n\nZiehen Sie den<xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title
        name=\"UNIT\">\"measures\"</title></block></xml> Block auf den Arbeitsbereich.
        Verbinden Sie ihn unter dem <xml><block type=\"Dancelab_changeMoveEachLR\"><title
        name=\"GROUP\">\"SHARK\"</title><title name=\"MOVE\">MOVES.ThisOrThat</title><title
        name=\"DIR\">-1</title></block></xml> block. Ihr Tänzer sollte nach dem vierten
        Takt eine neue Bewegung beginnen. \n\n**Takte** werden verwendet, um die Zeit
        in der Musik zu zählen. In diesem Tutorial besteht ein Takt aus vier Schlägen."
      Dance_2019_05: |-
        _Jetzt grooven wir!_

        Füge einen <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> Baustein zu Deienem Arbeitsbereich hinzu. Lasse den Tänzer nach 6 Takten einen neuen Tanzschritt beginnen.
      Dance_2019_06: "Verwenden Sie diesen neuen Block, um eine Gruppe kleinerer Ersatztänzer
        um einen Lead-Tänzer in der Mitte herum zu erstellen.\n  <xml><block type=\"Dancelab_makeNewDanceSpriteGroup\">\n
        \   <title name=\"N\">???</title>\n    <title name=\"COSTUME\" config=\"&quot;BEAR&quot;,
        &quot;CAT&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;,
        &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n
        \ </block></xml> \nJetzt können Sie mehrere Tänzer auf einmal erstellen!"
      Dance_2019_07: |-
        Jeder Tänzer hat eine Reihe von _Eigenschaften_, die steuern, wie er aussieht.

        Verwende <xml><block type="Dancelab_setPropEach" block-text="the set block"><title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;">???</title><title name="PROPERTY">"scale"</title><title name="VAL">???</title></block></xml> unter einem grünen Ereignisblock, um Tänzer näher oder weiter weg erscheinen zu lassen.
      Dance_2019_08: Tänzer haben eine "Farb"-Eigenschaft, mit der eine Farbschicht
        hinzufügt werden kann. Versuchen Sie, den Farbton eines Ihrer Tänzer (oder
        einer ganzen Gruppe) zu ändern!
      Dance_2019_09: "Dies ist eine besondere Art von Ereignis, das immer wieder ausgelöst
        wird.\n\n <xml><block type=\"Dancelab_everySeconds\"><title name=\"N\">2</title><title
        name=\"UNIT\">\"measures\"</title></block></xml> \n\nDie anderen neuen Blöcke
        in Ihrer Toolbox ermöglichen es Ihnen, die Eigenschaften der Tänzer im Laufe
        der Zeit schrittweise (oder zufällig!) zu ändern. \n_Seien kreativ und haben
        Sie Spaß dabei!_"
      Dance_2019_10: Grooven Sie los! Erstellen Sie einen eigenen Tanz und teilen
        Sie ihn mit Ihren Freunden.
      Dance_Party_01: |-
        _Los geht‘s mit der Tanzparty!_

        Ziehen Sie den Block "einen Neuen erstellen" in den Arbeitsbereich, und verbinden Sie ihn mit dem "Setup" -Block, um Ihren ersten Tänzer zu erstellen.

        -   _Sie können auch auf die Glühbirne links klicken, wenn Sie weitere Informationen oder zusätzliche Herausforderungen möchten._
      Dance_Party_02: |-
        Lasse den Elch tanzen!

        Ziehe den Baustein <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new&#95;dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> in den Arbeitsbereich. Verbinde ihn unterhalb des Bausteins <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Dein Tänzer sollte nach dem vierten Takt mit einem neuen Tanzschritt beginnen.

        **Takte** sind die zeitliche Struktur von Musik. In diesem Tutorial ist ein Takt vier Schläge lang.
      Dance_Party_03: |-
        _Jetzt grooven wir!_

        Füge einen <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> Baustein zu Deienem Arbeitsbereich hinzu. Lasse den Tänzer nach 6 Takten einen neuen Tanzschritt beginnen.
      Dance_Party_04: |-
        _Dieser Tanz braucht etwas Pep!_

        Suchen Sie in Ihrer Toolbox nach einem neuen Block, der Ihrem Tänzer einen Hintergrundeffekt hinzufügt. Beobachten Sie, wie sich die Effekte passend zur Musik verändern.
      Dance_Party_05: |-
        Verwenden Sie einen weiteren neuen Block, damit der Tänzer **alle 2 Takte** den Tanzschritt wechselt!

        -   Durch Auswahl von "(nächster)", "(vorheriger)" oder "(zufällig)" wird der Tänzer bei jeder Ausführung des Codes einen anderen Tanzschritt ausführen.
      Dance_Party_06: |-
        _Wir brauchen noch mehr Tänzer!_

        Erstellen Sie einen Backup-Tänzer namens "backup\_dancer1", der mit der Katze tanzt.
      Dance_Party_08: |-
        Jeder Tänzer hat eine Reihe von _Eigenschaften_, die steuern, wie er aussieht.

        Sie können es aussehen lassen, als befinde sich der Tänzer im Hintergrund, indem Sie seine _Größe_ kleiner machen. Können Sie beide Backup-Tänzer gleich groß machen?
      Dance_Party_09: |-
        Tänzer haben eine "Farbton" -Eigenschaft, mit der man eine Farbschicht hinzufügen kann. Versuchen Sie, den Farbton eines Ihrer Tänzer zu verändern.

        -   Farbtöne mischen die gewählte Farbe mit den Farben des Tänzers.
      Dance_Party_10: |-
        Jetzt wissen wir, wie wir die Eigenschaften eines Tänzers ändern. Mit diesem Block können wir dafür sorgen, dass immer die gleichen Eigenschaften automatisch auf die Musik reagieren:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Dieses Programm verwendet den "Bass" (die tiefen Töne) der Musik, um die Höhe eines Tänzers zu kontrollieren. Können Sie die anderen Tänzer auch auf die Musik reagieren lassen?
      Dance_Party_11: |-
        Mit dem <xml><block type="Dancelab_whenKey"></block></xml> Baustein kannst du Code ausführen, wenn die Pfeiltaste nach oben gedrückt wird.

        Du kannst den Tanzschritt verändern, die Eigenschaften eines Tänzers verändern oder einen schnellen einmaligen Tanzschritt tun. Sei kreativ und halte Ausschau nach neuen Blöcken!
      Dance_Party_11_5: |-
        Schau dir diesen Block an:

        <xml>
          <block type="Dancelab_makeNewDanceSpriteGroup">
            <title name="N">6</title>
            <title name="COSTUME">"DUCK"</title>
            <title name="LAYOUT">"circle"</title>
          </block></xml>

        Nun kannst du mehrere Tänzer auf einmal erstellen!

        Versuche die "Alle Enten"-Bausteine zu nutzen, um Code zu erstellen, welcher die Enten zusammen tanzen lässt.
      Dance_Party_11b: Es ist Zeit für einen Tanz-Wettbewerb! Die Katze dabt, wenn
        Sie die linke Pfeiltaste drücken. Lassen Sie den Roboter "droppen", indem
        Sie die rechte Pfeiltaste drücken.
      Dance_Party_12: Grooven Sie los! Erstellen Sie einen eigenen Tanz und teilen
        Sie ihn mit Ihren Freunden.
      Dance_Party_extras_alternate_2019: |-
        # Hin und her!

        Manchmal möchtest du vielleicht ein Muster von Tanzbewegungen erstellen, die du wählst. Mit diesem neuen Baustein kannst du genau das tun.

        <xml><block type="Dancelab_alternateMoves"><title name="GROUP">sprites</title><title name="N">2</title><title name="MOVE1">MOVES.Roll</title><title name="MOVE2">MOVES.ClapHigh</title></block></xml>

        Die oben gewählten Züge werden sich für immer wiederholen.

        -   Erstelle eine abwechselnde Routine für die Leadtänzerin an der Front!
        -   Verwende verschiedene Zahlen, um die Geschwindigkeit zu ändern, mit der sich die Bewegungen abwechseln. Versuche `1` oder `0.5`, um schneller zu wechseln!
      Dance_Party_extras_battle: |-
        # Tanz-Crews

        Hier ist ein Tanzduell zwischen zwei Crews. Die Pfeiltasten steuern einen der Tänzer und die Tasten „w, a, s, d“ steuern den anderen. Liefere dir ein Tanzduell mit einem Freund, und versuche dann, dieses Tanzduell zu verbessern.

        -   Füge weitere Tasten zum Steuern der Tänzer hinzu
        -   Bringe die Backup-Tänzer dazu, ebenfalls zu reagieren, wenn die Tasten betätigt werden
        -   Wechsle die Tänzer nach jeweils 4 Takten durch das Festlegen ihrer Sichtbarkeit
      Dance_Party_extras_battle_2019: |-
        # Tanz-Crews

        Hier ist ein Tanzduell zwischen zwei Crews. Die Pfeiltasten steuern einen der Tänzer und die Tasten „w, a, s, d“ steuern den anderen. Liefere dir ein Tanzduell mit einem Freund, und versuche dann, dieses Tanzduell zu verbessern.

        -   Füge weitere Tasten zum Steuern der Tänzer hinzu
        -   Bringe die Backup-Tänzer dazu, ebenfalls zu reagieren, wenn die Tasten betätigt werden
        -   Wechsle die Tänzer nach jeweils 4 Takten durch das Festlegen ihrer Sichtbarkeit
      Dance_Party_extras_every_beat: |-
        # Viertelnoten

        Für die meisten unserer Tänze wurden ganze Takte verwendet, aber jeder Takt setzt sich aus 4 Viertelnoten zusammen. Für diesen Tanz werden „alle 0,25 Takte“ verwendet, um den Tänzer bei jeder Viertelnote zum Klatschen zu bringen.

        Für diesen Tanz wird auch ein _vorbehaltlicher_Block verwendet, um zu kontrollieren, wann der „alle 0,25 Takte“-Block den Tanz ändern kann. Versuche, die Zahlen in dem vorbehaltlichen Block zu ändern, um zu sehen, wie es den Tanz verändert.

        -   Experimentiere mit anderen Tondauern (wie 0,5 für eine halbe Note oder 0,125 für eine Achtelnote).
        -   Füge einige Events „nach dem Takt“ hinzu.
        -   Tausche „Takte“ und „Sekunden“ und versuche, deine Tänze auf diese Weise zeitlich abzustimmen.
      Dance_Party_extras_every_beat_2019: |-
        # Viertelnoten

        Die meisten unserer Tänze haben ganze Takte verwendet, aber jeder Takt besteht aus 4 Viertelnoten. Dieser Tanz verwendet <xml><block type="controls_if"><value name="IF0"><block type="logic_compare"><title name="OP">LT</title><value name="A"><block type="Dancelab_getTime"><title name="UNIT">"measures"</title></block></value><value name="B"><block type="math_number"><title name="NUM">5</title></block></value></block></value><statement name="DO0"></statement></block></xml>, um die Tänzerin auf jede Viertelnote klatschen zu lassen, aber nur für die ersten 4 Takte.

        Versuche, die Zahlen in den Blöcken zu ändern, um zu sehen, wie es den Tanz verändert.

        -   Experimentiere mit anderen Notenlängen (z. B. 0,5 für eine Halbe Note oder 0,125 für eine Achtelnote).
        -   Füge weitere Ereignisse hinzu.
      Dance_Party_extras_layout: |-
        # Nehmen wir die Formation ein!

        Schaue dir diesen Tanz an, der den „Layout“-Block verwendet, um die Formation der Backup-Tänzer während des Tanzes zu ändern. Probiere eine dieser Ideen aus, um ihn zu verlängern:

        -   Erstelle eine zweite Gruppe von Tänzern in einem anderen Layout
        -   Ändere das Layout, wenn eine Taste gedrückt wird
        -   Ändere eine Eigenschaft, wenn die Tänzer ihre Formation ändern
      Dance_Party_extras_layout_2019: |-
        # Let's Get in Formation!

        Schau dir diesen Tanz an, der den <xml><block type="Dancelab_layoutSprites" block-text="layout"><title name="GROUP">"MOOSE"</title><title name="FORMAT">???</title></block></xml> Baustein verwendet, um die Formation der Backup-Tänzer während des gesamten Tanzes zu ändern. Probiere eine dieser Ideen aus, um sie zu erweitern:

        -   Erstellung einer zweiten Gruppe von Tänzern in einem anderen Layout
        -   Layout ändern, wenn eine Taste gedrückt wird
        -   Ändern einer Eigenschaft, wenn die Tänzer die Formation wechseln
      Dance_Party_extras_mixed_2019: |-
        # Mehr Interaktion

        Mit diesem Tanz kannst du die Eigenschaften der Tänzer in Echtzeit steuern, während sie automatisch tanzen. Versuche, andere Eigenschaften zu ändern, wenn du die Tasten drückst. Zum Beispiel:

        -   Randomisiere den Farbton der Tänzerin, wenn du "runter" drückst.
        -   Füge eine Gruppe von Tänzern mit einem zufälligen Layout hinzu, wenn du "space" drückst.
      Dance_Party_extras_on_beat: |-
        # Bass, Mitten und Höhen

        Dieser Tanz verwendet „Peak“-Ereignisse, um den Code auszulösen, wenn verschiedene Teile der Musik laut werden. Versuche, mit verschiedenen Liedern herumzuexperimentieren, um zu sehen, wie sie den Tanz verändern.
      Dance_Party_extras_on_beat_2019: |-
        # Bass, Mitten und Höhen

        Dieser Tanz verwendet „Peak“-Ereignisse, um den Code auszulösen, wenn verschiedene Teile der Musik laut werden. Versuche, mit verschiedenen Liedern herumzuexperimentieren, um zu sehen, wie sie den Tanz verändern.
      Dance_Party_extras_speed: |-
        # Beschleunigen, verlangsamen

        Dieser letzte Tanz nutzt den Block „festgelegte Geschwindigkeit“, um zu kontrollieren, wie schnell sich jeder Tänzer bewegt. Versuche, an verschiedenen Stellen im Lied mit unterschiedlichen Geschwindigkeiten zu experimentieren. Zögere nicht, bei diesem Tanz herumzuexperimentieren oder kehre zu einem der bisherigen Tänze zurück, um ihn noch cooler zu machen.
      Dance_Party_extras_speed_2019: |-
        # Beschleunigen, verlangsamen

        Dieser letzte Tanz nutzt den <xml><block type="Dancelab_setDanceSpeedEach"><title name="GROUP">"SHARK"</title><title name="SPEED">2</title></block></xml> Baustein, um zu kontrollieren, wie schnell sich jeder Tänzer bewegt. Versuche, an verschiedenen Stellen im Lied mit unterschiedlichen Geschwindigkeiten zu experimentieren. Zögere nicht, bei diesem Tanz herumzuexperimentieren oder kehre zu einem der bisherigen Tänze zurück, um ihn noch cooler zu machen.
      Dance_Party_extras_visible: |-
        # Wo würden sie hingehen?

        Dieser Tanz blendet zwei verschiedene Gruppen von Tänzern ein und aus. Sieh ihn dir an und versuche dann, dein eigenes Flair hinzuzufügen.

        -   Füge eine weitere Gruppe von Tänzern hinzu
        -   Blende Tänzer mithilfe der Pfeiltasten ein- und aus
        -   Blende alle der Tänzer aus und wechsle zu einem spannenden Hintergrundeffekt
      Dance_Party_extras_visible_2019: |-
        # Wo würden sie hingehen?

        Dieser Tanz blendet zwei verschiedene Gruppen von Tänzern ein und aus. Sieh ihn dir an und versuche dann, dein eigenes Flair hinzuzufügen.

        -   Füge eine weitere Gruppe von Tänzern hinzu
        -   Blende Tänzer mithilfe der Pfeiltasten ein- und aus
        -   Blende alle der Tänzer aus und wechsle zu einem spannenden Hintergrundeffekt
      Escape Room Example: |-
        # Room Escape

        In der heutigen Werkstatt wirst du daran arbeiten, eine Room-Escape-App zu entwickeln!  Diese Ebene hat eine Beispiel-App, mit der du herumspielen solltest, um das Gefühl dafür zu bekommen, was du erschaffen wirst.

        # Mache folgendes

        -   Klicken Sie auf "▶ AUSFÜHREN", um die App zu starten.
        -   Versuche den Schlüssel zu finden, der die Tür öffnet.
      Final Personal Website: |-
        # Persönliche Website

        Das ist es! Du hast die gesamte Einheit  über an deiner persönlichen Website gearbeitet. Gib ihr den letzten Schliff und schicke sie an deinen Lehrer! Denken daran, den Problemlösungsprozess als Leitfaden bei der Vorbereitung Deines Endprodukts zu verwenden.

        # Mache folgendes

        -   Definiere: Lesen die Rubrik, damit du weißt, was erwartet wird.
        -   Plan: Entscheide, woran du noch arbeiten musst und ordne diese Dinge in der Reihenfolge ihrer Priorität
        -   Versuche es: Implementiere Deine Verbesserungen an Deiner persönlichen Website.
        -   Reflektieren: Hole Dir Feedback von einem Klassenkameraden und entscheide, was von diesem Feedback umgesetzt werden soll.

        Vergiss nicht, einen Screenshot von deiner Homepage zu machen und ihn irgendwo auf deinem Computer zu speichern, damit du ihn später wiederfinden kannst (_Benötigst du Hilfe bei der Erstellung des Screenshots? Schau Dir diese <a href="http://www.take-a-screenshot.org/">Webseite </a> an._)
      Final Personal Website_2018: |-
        # Persönliche Website

        Das ist es! Du hast an deiner persönlichen Website für die gesamte Einheit gearbeitet. Gib ihr den letzten Schliff und zeige sie deinem Lehrer! Denke daran, den Problemlösungsprozess als Leitfaden für die Vorbereitung deines Endprodukts zu verwenden.

        # Mach Folgendes

        -   Definieren: Lies die Rubrik, damit du weißt, was erwartet wird.
        -   Planen: Entscheide, woran du noch arbeiten musst, und lege diese Dinge in die richtige Reihenfolge.
        -   Versuche es: Implementiere die Verbesserungen auf Deiner persönlichen Website.
        -   Reflektieren: Hol dir Feedback von einem Klassenkameraden und entscheide, worauf du reagieren möchtest.

        Vergiss nicht, einen Screenshot von deiner Homepage zu machen und ihn irgendwo auf deinem Computer zu speichern, damit du ihn später finden kannst (*Brauchst du Hilfe bei der Erstellung eines Screenshot? Schau dir das an <a href="http://www.take-a-screenshot.org/" target="_new">Website </a>.*)
      Final Personal Website_2019: |-
        # Persönliche Website

        Das ist es! Du hast an deiner persönlichen Website für die gesamte Einheit gearbeitet. Gib ihr den letzten Schliff und zeige sie deinem Lehrer! Denke daran, den Problemlösungsprozess als Leitfaden für die Vorbereitung deines Endprodukts zu verwenden.

        # Mach Folgendes

        -   Definieren: Lies die Rubrik, damit du weißt, was erwartet wird.
        -   Planen: Entscheide, woran du noch arbeiten musst, und lege diese Dinge in die richtige Reihenfolge.
        -   Versuche es: Implementiere die Verbesserungen auf Deiner persönlichen Website.
        -   Reflektieren: Hol dir Feedback von einem Klassenkameraden und entscheide, worauf du reagieren möchtest.

        Vergiss nicht, einen Screenshot von deiner Homepage zu machen und ihn irgendwo auf deinem Computer zu speichern, damit du ihn später finden kannst (*Brauchst du Hilfe bei der Erstellung eines Screenshot? Schau dir das an <a href="http://www.take-a-screenshot.org/" target="_new">Website </a>.*)
      Final Room Escape App: "# Du hast es geschafft!\n\nDu hast einen Escape Room
        erstellt! Jetzt ist es an der Zeit, diesen anzupassen. \n\nZiehe in Betracht:\n\n-
        \  dem Raum mehr Stil zu geben\n-   weiterer Dinge hinzuzufügen, mit denen
        Benutzer im Raum interagieren kann.\n-   versuche, Ihren Geheimcode zufällig
        zu machen.\n-   füge weiterer Räume hinzu"
      Fish Tank 2-validated_2019: "Lasst uns ein Aquarium bauen!  \n\nVerwandle das
        Ambrosia-Sprite in jede Art von Fisch, indem du auf <xml><block type=\"gamelab_allSpritesWithAnimation\"
        block-text=\"the sprite picker block\"><title name=\"ANIMATION\">\"tumbleweed\"</title></block></xml>
        klickst.\n\nAchte darauf, dass du auch das Kostüm dieses Sprites in <xml><block
        type=\"gamelab_addBehaviorSimple\" block-text=\"the add behavior block\"></block></xml>
        aktualisierst."
      Fish Tank 3-validated_2019: "Dem Fisch wird schwindelig! \n\nÄndere das Verhalten
        der Fische so, dass sie nach links und rechts schwimmen."
      Fish Tank 4-validated_2019: "Unser Aquarium braucht etwas Wasser! \n\nVerwende
        <xml><block type=\"gamelab_setBackground\" inline=\"true\" block-text=\"the
        set background color block\">\n    <value name=\"COLOR\">\n      <block type=\"colour_picker\">\n
        \       <title name=\"COLOUR\">#0000ff</title>\n      </block>\n    </value>\n
        \ </block></xml>, um den Hintergrund in einer beliebigen Farbe darzustellen.
        Wir empfehlen blau!"
      Fish Tank 5-validated_2019: Der Fisch ist abenteuerlustig und will neue Kreaturen
        im Meer treffen. Füge ein weiteres Sprite in das Aquarium hinzu. Dieses Sprite
        kann jedes andere Kostüm haben, außer dem, das du für deine Fische benutzt!
      Fish Tank 6-validated_2019: |-
        Was soll der neue Freund deines Fisches tun?

        Füge ein Verhalten hinzu und beobachte die Beiden!
      Frequency Analysis: |-
        # Knacke ein zufällige Substitutions-Verschlüsselung!

        Nachrichten, die mit der **Caesar-Verschlüsselung** verschlüsselt sind, lassen sich sehr leicht knacken. Was wäre, wenn wir, anstatt das ganze Alphabet zu verschieben, jeden Buchstaben des Alphabets auf einen anderen Buchstaben des Alphabets abgebildet hätten? Dies wird als **zufällige Substitutions-Verschlüsselung** bezeichnet.

        In dieser Version des Tools wirst du mehr mit den Diagrammen interagieren, die die Häufigkeit der Buchstaben anzeigen. Indem du die Häufigkeit der Buchstaben in der verschlüsselten Eingabemeldung im Vergleich zur Häufigkeit der Buchstaben in einem typischen Stück englischer Prosa analysierst, kannst du beginnen, dich darauf zu beschränken, was einige der Buchstabenzuordnungen sein könnten. Wusstest du, dass _'E'_ der am häufigsten verwendete Buchstabe in der englischen Sprache ist? Vielleicht ist daher auch der häufigste Buchstabe in Deinem verschlüsselten Texten ein _'E'_, aber vielleicht auch nicht! Du musst ein wenig raten und prüfen, ob diese Ersetzung Sinn macht.

        # Mache folgendes

        -   Lade die **Sample message (hard)** aus dem Dropdown-Menü der Nachricht. Dadurch wird eine Nachricht geladen, die mit einer zufälligen Ersetzungschiffre verschlüsselt wurde.
            ![](https://images.code.org/04c6230c9607110126581c298bc09183-image-1443569176380.gif)

        -   Du knackst die Nachricht knacken, indem du errätst, welcher Buchstaben des Alphabets im ursprünglichen Verschlüsselungstext geändert werden soll. Du kannst dies tun, indem du die blauen Buchstaben des Alphabets direkt unter den orangefarbenen Buchstaben ziehst, den du im ursprünglichen Verschlüsselungstext ändern möchtest. Buchstaben, die mit deiner Vermutungen geändert wurden, werden im Nachrichtenfenster links nicht mehr orange hervorgehoben.
            ![](https://images.code.org/da9a7af7568d8c1698872ab91b4d79d7-image-1443572471212.gif)

        -   Spiele mit einigen der Sortieroptionen, die auf der Registerkarte "Zufällige Ersetzung von Verschlüsselungen" verfügbar sind, um verschiedene Ansichten über die Häufigkeiten der Buchstaben im Eingabetext sowie im englischen Standardtext zu erhalten.
            ![](https://images.code.org/82efbca1807206c9a07de520fdb22027-image-1443572614493.23.28.png)

        Schau, wie lange du brauchst, um die Verschlüsselung zu knacken! Ist dies eine gute Methode, um geheime Daten zu verschlüsseln?
      Function intro Ryan: "In deinem Arbeitsbereich befindet sich eine **Funktion**
        namens \"Brücke bauen\".  Sie umfasst den gesamten Code, den du zum Überqueren
        des Flusses benötigst! \\\r\n \\\r\nDocke den kleinen, grünen Block zweimal
        in deinem Arbeitsbereich an, um den Weg zu reparieren und {currentPlayerName}
        zur Redstone-Fackel [redstone_torch] zu bringen."
      Function intro Ryan_2019: "In deinem Arbeitsbereich befindet sich eine **Funktion**
        namens \"Brücke bauen\".  Sie umfasst den gesamten Code, den du zum Überqueren
        des Flusses benötigst! \\\r\n \\\r\nDocke den kleinen, grünen Block zweimal
        in deinem Arbeitsbereich an, um den Weg zu reparieren und {currentPlayerName}
        zur Redstone-Fackel [redstone_torch] zu bringen."
      Gamelab StartScreen Change State: |-
        # Zustand ändern

        Da du jetzt je nach Zustand deines Programms einen anderen Bildschirm anzeigen kannst, brauchst du eine Möglichkeit, zwischen den Zuständen zu wechseln.  Um vom "start"-Zustand in den "playing"-Zustand zu wechseln, kannst du den Benutzer die "s"-Taste drücken lassen.  Du wirst **nur** wollen, dass das Programm nach dem Tastendruck sucht, wenn das Programm im "start"-Zustand ist, also wird dein Code dafür in die "start"-Bedingung gehen.  Einen \`if'-Baustein in einen anderen zu setzen, wird **verschachtelte Bedingung** genannt.

        ## Mache Folgendes

        -   Innerhalb der `if` Anweisung, die prüft, ob der Benutzer "startet", füge eine neue `if` Anweisung ein, die prüft, ob der Benutzer die "s"-Taste gedrückt hat.  (`if (TasteDown("s")) {`)
        -   Innerhalb deiner neuen `if` Anweisung, setze den Wert deiner `gameState` Variable auf "spielen". (`gameState = "spielen";`)
        -   Teste den Code, indem Du das Spiel startest und "s" drückst.  Das Spiel sollte nach dem Drücken der Taste starten.

        Wenn das Spiel nicht auf dem Startbildschirm startet, überprüfe, dass die `gameState` Variable zu Beginn des Programms erstellt wurde und ihr Wert "starting" ist.  (`var gameState = "starting";`)
      Gamelab StartScreen Check State: |-
        # Spielstatus überprüfen

        Nun, da du deinen Spielstatus in einer Variable gespeichert hast, kannst du ihn überprüfen, um zu bestimmen, was angezeigt werden soll.  Dies sollte innerhalb der Zeichenschleife geschehen, da es etwas ist, das sich während der Ausführung des Programms ändert.  Das Programm sollte prüfen, ob das Spiel im "Spiel"-Zustand ist, und das Programm nur dann ausführen, wenn dies der Fall ist.  Um die anderen Zustände können wir uns später kümmern.

        ## Mache Folgendes

        -   Innerhalb der Zeichenschleife füge eine Bedingung (`if` Anweisung) hinzu.
        -   Für die Bedingung, überprüfe, ob `gameState == "play"`.
        -   Verschiebe den Rest des Codes aus der draw-Schleife innerhalb der `if`-Anweisung, so dass er nur läuft, wenn das Spiel "spielt".
        -   Führe das Programm aus.  Es sollte nichts passieren, weil das Spiel noch im "Start"-Zustand ist.
        -   Gehe zurück zu der Stelle, an der du den Wert deiner `gameState` Variable gesetzt hast und ändere ihn von "starting" auf "playing".
        -   Lasse das Spiel erneut laufen, und es sollte normal spielen, da es sich jetzt im "Spiel"-Zustand befindet.
        -   Ändere den Wert der Variable wieder auf "starting".

        (Es ist wichtig, Wege zu finden, um deinen Code zu überprüfen, während du arbeitest, anstatt bis zum Ende vieler komplexer Änderungen zu warten, um ihn auszuführen.  Indem du sowohl den Spiel- als auch den Startzustand überprüfst, weißt du, dass deine Bedingung richtig funktioniert und dass das Spiel spielen sollte, während es sich im "Spiel"-Zustand befindet)
      Gamelab StartScreen Check States: |-
        # Überprüfe alle Zustände

        Im Moment ist der einzige Zustand, mit dem Dein Programm umgehen kann, das "Spielen", aber Du kannst weitere Bedingungen hinzufügen, um die anderen drei Zustände zu berücksichtigen.

        ## Mache Folgendes

        -   Innerhalb der Draw-Schleife füge drei weitere `if'-Anweisungen hinzu, die auf`gameState == "starting"`,`gameState == "won"`, und`gameState == "lost"\`, jeweils prüfen.
        -   Innerhalb jeder `if` Anweisung füge Code hinzu, der Text auf den Bildschirm zeichnet, so dass du die Ergebnisse der verschiedenen Zustände sehen kannst.  Du kannst auch `drawSprites` verwenden, damit du das Hintergrundbild und die Spieler-Sprites sehen kannst, aber stelle sicher, dass du den Text über die Sprites zeichnest.
        -   Überprüfe Deinen Code, indem Du das Programm in den verschiedenen Zuständen ausführst.  (Mache Dir noch keine Gedanken darüber, sie perfekt zu machen, stelle nur sicher, dass die Bedingungen so funktionieren, wie sie sollten).

        Um den Überblick über Deinen Code zu behalten, könntest Du es nützlich finden, eine Funktion für jede der verschiedenen Textanzeigen zu erstellen und dann diese Funktionen innerhalb der Bedingungen aufzurufen.
      Gamelab StartScreen End Game: |-
        # Das Spiel beenden

        Als nächstes musst du Code hinzufügen, der den Zustand des Spiels ändert, wenn du verlierst.   Scrolle bis zum Ende des Programms, bis zur Funktion `gameStatus`.  Innerhalb der Funktion kontrolliert das Programm den Spielstand und die `lives`-Variable, um zu prüfen, ob das Spiel gewonnen oder verloren ist.  Anstatt eine Gewinn- oder Verlustmeldung anzuzeigen, solltest du den Status des Spiels auf "won" (= gewonnen) oder "lost"  (= verloren) ändern;

        ## Mache Folgendes

        -   Innerhalb der `gameStatus` Funktion ersetze den Code `text("Du hast gewonnen!", 35, 200);` mit `gameState = "won"`.
        -   Innerhalb der `gameStatus` Funktion, ersetze den Code `text("Du hast verloren!", 35, 200);` mit `gameState = "lost"`.
        -   Überprüfe deinen Code, indem du das Spiel ausführst und verlierst.
        -   Überprüfe deinen Code, indem du das Spiel startest und gewinnst.

        (Um das Spiel viel einfacher zu gewinnen, ändere die ursprüngliche Anzahl der Leben auf 1000, indem Du `var lives = 3;` durch `var lives = 1000;` ersetzst.)
      Gamelab StartScreen Hide Sprites: |-
        # Verstecke und Zeige Sprites

        Du kannst es vorziehen, dass die Plattform, die Münze und die Rock-Sprites nur während des Spiels sichtbar sind.  Du kannst die Spieleinstellung ändern, um ihre sichtbare Eigenschaft zu Beginn des Spiels auf `false` zu setzen, dann auf `true`, wenn du das Spiel startest, dann wieder `false`, wenn das Spiel gewonnen oder verloren wird.

        ## Mache Folgendes

        -   Füge nach der Erstellung Ihrer Sprite-Gruppen "Plattformen", "Gold" und "Felsen" Code hinzu, der die sichtbaren Eigenschaften dieser Sprite-Gruppen auf "falsch" setzt (z.B. "platforms.setVisibileEach(false)"; "\`")
        -   An den gleichen drei Stellen, an denen du `gameState = "spielen";` setzt, setze die sichtbaren Eigenschaften der Sprite-Gruppen auf `true`.
        -   An den gleichen Stellen, an denen du `gameState = "lost";` und `gameState = "won";` setzt, setze die sichtbaren Eigenschaften der Sprite-Gruppen auf `true`.
        -   Überprüfe Deinen Code, indem Du das Spiel ausführen und das Spiel verlieren und neu starten.
        -   Überprüfe Deinen Code, indem Du das Spiel ausführst und gewinnst und das Spiel neu startest.
      Gamelab StartScreen Intro: |-
        # Start- und Endbildschirme

        Dieses Tutorial zeigt Dir, wie du Start- und Endbildschirme im Game Lab erstellst und das Spiel vom Endbildschirm aus neu gestarten werden kann.

        Drücke "Ausführen", um das Spiel auf der linken Seite zu spielen.  Befolge zum Abspielen die Anweisungen auf dem Startbildschirm.  Wenn das Spiel beendet ist, folge den Anweisungen auf dem Endbildschirm, um das Spiel neu zu starten.

        In der nächsten Textblase siehst du den Code für das Spiel. Beginne deinen eigenen Start- und Endbildschirme hinzuzufügen.

        ## Startbildschirm

        Der Startbildschirm ist der Einführungsbildschirm, der erscheint, bevor der Benutzer mit dem Spielen des Spiels beginnt.  Dieser enthält in der Regel den Titel des Spiels und einige grundlegende Anweisungen zum Spielen.  Es kann auch den Spieleentwickler nennen.

        ## Endbildschirm

        Der Endbildschirm erscheint, nachdem der Benutzer das Spiel gewonnen oder verloren hat.  Es beinhaltet manchmal die Punktezahl, eine Highscore oder andere Informationen.  Es kann auch eine Option haben, das Spiel erneut zu spielen.
      Gamelab StartScreen Restart Game: |-
        # Das Spiel neu starten

        Zuletzt musst Du einen Code hinzufügen, der das Spiel neu startet.   Dies ist ähnlich wie beim Start des Spiels, bei dem der Benutzer die "s"-Taste drückt.  Dieses Mal musst du während der Zustände "lost" und "won" nachsehen.  Wenn der Benutzer die "r" Taste während eines dieser Zustände drückt, solltest Du das Spiel neu starten, indem Du den `gameState` auf "playing" setzt und auch die `score` und `lives` Variablen auf 0 bzw. 3 zurücksetzt.

        ## Mache Folgendes

        -   Füge innerhalb der `if (gameState == "lost") {` Anweisung eine if-Anweisung hinzu, die prüft, ob der Benutzer die "r"-Taste gedrückt hat.
        -   Innerhalb deiner neuen `if` Anweisung, setze `score` auf 0, `lives` auf 3 und `gameState` auf "playing".
        -   Füge innerhalb der `if (gameState == "won") {` Anweisung eine if-Anweisung hinzu, die prüft, ob der Benutzer die "r"-Taste gedrückt hat.
        -   Innerhalb Deiner neuen `if` Anweisung setze `score` auf 0, `lives` auf 3 und `gameState` auf "playing".
        -   Innerhalb der `gameStatus` Funktion ersetzen Sie den Code `text("You Lost!", 35, 200);` mit `gameState = "lost"`.
        -   Überprüfe Deinen Code, indem Du das Spiel ausführst und verlierst und das Spiel neu startest.
        -   Überprüfe Deinen Code, indem Du das Spiel ausführst und gewinnst und das Spiel neu startest.
      Gamelab StartScreen State: |-
        # Spielstatus Variable

        Unser Beispielspiel hatte vier verschiedene Szenarien (oder **Zustände**, engl. "states"), die wir im Auge behalten müssen, um den richtigen Bildschirm anzuzeigen: "Starten", "Spielen", "Gewonnen" und "Verloren".  Der erste Schritt beim Hinzufügen eines Start- oder Endbildschirms zum Spiel ist das Erstellen einer Variable, um alle Änderungen des Spielzustands zu verfolgen.

        ## Mache Folgendes

        -   Deklariere eine Variable namens `gameState` am Anfang des Programms.  (Ein guter Ort, dies zu tun, wäre in der Nähe der Deklaration von `score` und `lives`.
        -   Setze den Anfangswert der `gameState` Variable auf "starting".

        (Da du diese Variable noch nicht verwendest, siehst du ein Warndreieck neben der Zeile, in der sie deklariert ist.  Es hat auch keinen Einfluss darauf, wie das Programm läuft.)
      Gamelab StartScreen base code: |-
        # Spielecode

        Dies ist der Code für das Spiel ohne den Start- und Endbildschirm.  Die Funktion `gameStatus` (aufgerufen auf Zeile 43 und definiert auf Zeile 208) prüft, ob der Benutzer gewonnen oder verloren hat, fügt aber nur eine Textnachricht auf dem Bildschirm hinzu.  Das Spiel wird auch nach dem Ende des Spiels fortgesetzt.

        ## Mache Folgendes

        Lies den Code, insbesondere den Code vor dem Draw Loop (Zeilen 1-24), innerhalb des Draw Loops (Zeilen 27-43) und innerhalb der `gameStatus` Funktion (Zeilen 209-224).  Es ist in Ordnung, wenn Du nicht alles im Spiel verstehst, aber Du solltest sehen, dass der Code vor der Schleife die Sprites aufbaut, und der Code innerhalb der Schleife das Spiel steuert.
      HOC 2018 Level_1: Du benötigst für deine Reise Vorräte. Sammle ein **Boot**
        ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        aus der **Truhe** ein![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Irgendwo in diesem Ozeanmonument versteckt sich ein **Tintenfisch**
        ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png).
        Findest du ihn?
      HOC 2018 Level_11: Baue eine Mauer aus **Prismarin** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        um den schwarzen Beton. Dies aktiviert den **Aquisator** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        und schließt die Herausforderung ab!
      HOC 2018 Level_12: Glückwunsch! Die offene Meereswelt erwartet dich. Baue ein
        Korallenriff! Einen Vulkan! Ein Schiffswrack! Du hast die Wahl.
      HOC 2018 Level_2: Boote sind viel bequemer, als im offenen Wasser zu schwimmen!
        Begib dich zum Ende des Anlegestegs, um an Bord zu gehen.
      HOC 2018 Level_3: Schnapp dir die Ruder und fahre auf das offene Meer, um den
        **Kabeljau** zu fangen![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Füttere den **dolphin** mit dem Kabeljau![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Verwende einen "Wiederholen"-Block, um den Ozean schneller zu überqueren.
      HOC 2018 Level_5: Irgendwo ist eine **Nautilusmuschel** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        versteckt! Erkunde das Schiffswrack, um die **Truhe** zu erreichen![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      HOC 2018 Level_6: Sieht kalt aus! Fange auf dem Weg zu den Unterwasserruinen
        einen **Lachs** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png).
      HOC 2018 Level_7a: Du hast die Unterwasserruine gefunden. Suche im Sandstein
        nach eine **Truhe** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        mit **Prismarin** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      HOC 2018 Level_8: Erst Eisberge, nun Lava? Durchquere diese Vulkaninsel, und
        finde die **Tropenfische** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        im Korallenriff.
      HOC 2018 Level_9b: Du hast das Riff erreicht. Suche jetzt nach dem **Herz des
        Meeres** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)!
        Verwende blaue und rote Korallen, um die Schatz**truhe** zu erreichen![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      Intro to Web Lab - Part 1_2019: |-
        ## Zu berücksichtigende Frage:

        -   Was sind die verschiedenen Teile von Web Lab und wofür werden sie verwendet?
      Intro to Web Lab - Part 2_2019: |-
        ## Zu berücksichtigende Fragen

        -   Warum sind HTML-Tags nützlich?
        -   Was bewirkt das Absatz-Tag?
      Introduction to Variables - Part 1_2019: |-
        ## Zu berücksichtigende Fragen

        -   Wozu werden Variablen verwendet?
        -   Wie erstellt man eine Variable und weist ihr einen Wert zu?
        -   Was kann in eine Variable aufnehmen?
      K-1 Bee Loops 2: Benutze eine `wiederhole`-schleife, um dich zu bewegen, und
        dann nimm den Nektar und mache Honig!
      K-1 Bee Loops 3: Verwenden Sie drei `wiederhole`-Schleifen, um den Nektar zu
        erhalten und Honig zu machen!
      K-1 Bee Loops 4: Verwende `wiederhole`-Schleifen, um den Nektar zu erhalten,
        Honig zu machen und dich zu bewegen!
      K-1 Bee Loops 5: Verwende „Wiederhole"-Schleifen, um den Nektar und den Honig
        zu sammeln.
      K-1 Bee Loops 6: Benutze eine `wiederhole`-Schleife, um den Nektar zu bekommen,
        Honig zu bekommen und dich zu bewegen!
      K-1 Maze Loops 10: Bringt mich zum Schwein!\\ Die Verwendung der `Wiederhole`-Schleife
        macht es viel einfacher.
      K-1 Maze Loops 11: |-
        Bring mich zum Schwein!\
        Mit der „Wiederholen“-Schleife geht es leichter.
      K-1 Maze Loops 12: |-
        Bring mich zum Schwein!\
        Mit der „Wiederholen“-Schleife geht es leichter.
      K-1 Maze Loops 2: Benutze die “Wiederholen"-Schleife, um mich zum Schwein zu
        bringen.
      K-1 Maze Loops 3: |-
        Bring mich zum Schwein!\
        Achte darauf `wiederhole`-Schleifen zu verwenden.
      K-1 Maze Loops 5: |-
        Bring mich zum Schwein!\
        Achte darauf `wiederhole`-Schleifen zu verwenden.
      K-1 Maze Loops 6: |-
        Bring mich zum Schwein!\
        Achte darauf `wiederhole`-Schleifen zu verwenden.
      K-1 Maze Loops 7: |-
        Bring mich zum Schwein!\
        Achte darauf `wiederhole`-Schleifen zu verwenden.
      K-1 Maze Loops 8: Benutze `Wiederhole`-Schleifen, um mich zum Schwein zu bringen.
      K-1 Maze Loops Assessment 1: |-
        Sieh dir an, was wir alles gelernt haben!\
        Benutze eine `Wiederhole` Schleife, um mich zum Schwein zu bringen!
      MC HOC 2016 SCORE LEVEL: |-
        Bei einigen Spielen kann man den Punktestand verfolgen. Spiele mit diesen Eisernen Golems Fangen und benutze den <xml>  <block type="craft_addScore">
            <title name="SCORE">1</title>
          </block></xml>-Baustein, um Dir selbst einen Punkt zu geben, wenn du diese berührtst.

        Erreiche fünf Punkte, um zu gewinnen!
      MC_HOC_2017_01_RETRY: "{currentPlayerName} ist im Haus gefangen. Der Agent steht
        jedoch zur Hilfe bereit!   \\\r\n \\\r\n   \\\r\nDocke im Arbeitsbereich einen
        \"vorwärts bewegen\"-Block unter dem \"beim Ausführen\"-Block ein, um den
        Agenten auf die Druckplatte [PressurePlate_Up] zu bringen. Wähle dann \"Ausführen\"
        aus und verwende die Pfeiltasten, um {currentPlayerName} aus dem Haus zu bewegen
        und die **Truhe** [chest] einzusammeln.  "
      MC_HOC_2017_01_RETRY_2019: "{currentPlayerName} ist im Haus gefangen. Der Agent
        steht jedoch zur Hilfe bereit!   \\\r\n \\\r\n   \\\r\nDocke im Arbeitsbereich
        einen \"vorwärts bewegen\"-Block unter dem \"beim Ausführen\"-Block ein, um
        den Agenten auf die Druckplatte [PressurePlate_Up] zu bringen. Wähle dann
        \"Ausführen\" aus und verwende die Pfeiltasten, um {currentPlayerName} aus
        dem Haus zu bewegen und die **Truhe** [chest] einzusammeln.  "
      MC_HOC_2017_02_Cole: "{currentPlayerName} geht auf Abenteuertour! Hol die **Karte**
        [map_empty] hinter der verschlossenen Tür rechts. \\\r\n \\\r\nDocke Code
        im Arbeitsbereich an, um den Agenten auf die Druckplatte zu bewegen [PressurePlate_Up],
        damit {currentPlayerName} durchkann. "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} geht auf Abenteuertour! Hol die
        **Karte** [map_empty] hinter der verschlossenen Tür rechts. \\\r\n \\\r\nDocke
        Code im Arbeitsbereich an, um den Agenten auf die Druckplatte zu bewegen [PressurePlate_Up],
        damit {currentPlayerName} durchkann. "
      MC_HOC_2017_03_Cole: "{currentPlayerName} setzt sein Abenteuer fort und benötigt
        den **Kompass** [compass], um sich auf die Reise vorzubereiten.  \\\r\n   \\\r\nProgrammiere
        den Agenten, um das Tor zu öffnen. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} setzt sein Abenteuer fort und
        benötigt den **Kompass** [compass], um sich auf die Reise vorzubereiten.  \\\r\n
        \  \\\r\nProgrammiere den Agenten, um das Tor zu öffnen. "
      MC_HOC_2017_04POINT5_RYAN: "Du bist drüben! \\\r\n\\\r\nBringe {currentPlayerName}
        jetzt sicher durch das Labyrinth, um die **Axt** [diamond_axe] einzusammeln.\\\r"
      MC_HOC_2017_04POINT5_RYAN_2019: "Du bist drüben! \\\r\n\\\r\nBringe {currentPlayerName}
        jetzt sicher durch das Labyrinth, um die **Axt** [diamond_axe] einzusammeln.\\\r"
      MC_HOC_2017_04_Cole: "Der Agent kann sich über Wasser bewegen!  \\\r\n \\\r\nVerwende
        eine \"wiederholen\"-Schleife, um diese Aufgabe zu lösen und {currentPlayerName}
        den **Eimer** [bucket_empty] hinter der Tür holen zu lassen. "
      MC_HOC_2017_04_Cole_2019: "Der Agent kann sich über Wasser bewegen!  \\\r\n
        \\\r\nVerwende eine \"wiederholen\"-Schleife, um diese Aufgabe zu lösen und
        {currentPlayerName} den **Eimer** [bucket_empty] hinter der Tür holen zu lassen. "
      MC_HOC_2017_05_Cole: "Oh nein! Die Brücke ist kaputt! \\\r\n\\\r\nProgrammiere
        den Agenten mit dem \"platzieren\"-Block, um die Brücke neu zu bauen. Dann
        kann {currentPlayerName} die **Schaufel** [diamond_shovel] erreichen."
      MC_HOC_2017_05_Cole_2019: "Oh nein! Die Brücke ist kaputt! \\\r\n\\\r\nProgrammiere
        den Agenten mit dem \"platzieren\"-Block, um die Brücke neu zu bauen. Dann
        kann {currentPlayerName} die **Schaufel** [diamond_shovel] erreichen."
      MC_HOC_2017_06_Cole: "Noch ein Fluss. Aber dieser ist viel breiter! \\\r\n \\\r\nÄndere
        den Code, damit der Agent eine Brücke baut. Dann kann {currentPlayerName}
        die **Spitzhacke** [diamond_pickaxe] erreichen. "
      MC_HOC_2017_06_Cole_2019: "Noch ein Fluss. Aber dieser ist viel breiter! \\\r\n
        \\\r\nÄndere den Code, damit der Agent eine Brücke baut. Dann kann {currentPlayerName}
        die **Spitzhacke** [diamond_pickaxe] erreichen. "
      MC_HOC_2017_07_Cole: "Da ist Eis im Weg!  \\\r\n \\\r\nDie \"Weg räumen\"-Funktion
        hilft dir dabei, das Eis zu zerstören und {currentPlayerName} zur Lore [minecart_normal]
        zu bringen! "
      MC_HOC_2017_07_Cole_2019: "Da ist Eis im Weg!  \\\r\n \\\r\nDie \"Weg räumen\"-Funktion
        hilft dir dabei, das Eis zu zerstören und {currentPlayerName} zur Lore [minecart_normal]
        zu bringen! "
      MC_HOC_2017_10_RETRY: "Siehst du den Unterschied zwischen den beiden Funktionen
        im Arbeitsbereich? \\\r\n \\\r\nVerwende die Funktionen und anderen Code aus
        der Werkzeugkiste, um einen Pfad für die Lore zu räumen und dann das **Feuerzeug**
        [flint_and_steel] einzusammeln. \\\r\n "
      MC_HOC_2017_10_RETRY_2019: "Siehst du den Unterschied zwischen den beiden Funktionen
        im Arbeitsbereich? \\\r\n \\\r\nVerwende die Funktionen und anderen Code aus
        der Werkzeugkiste, um einen Pfad für die Lore zu räumen und dann das **Feuerzeug**
        [flint_and_steel] einzusammeln. \\\r\n "
      MC_HOC_2017_Ali: 'Sieh dir die Funktionen unten an. Wie kannst du diese verwenden,
        um die Ghasts zu vermeiden und {currentPlayerName} beim sicheren Erreichen
        des **Zauberbuchs** [book_enchanted] zu helfen?  '
      MC_HOC_2017_Ali_2019: 'Sieh dir die Funktionen unten an. Wie kannst du diese
        verwenden, um die Ghasts zu vermeiden und {currentPlayerName} beim sicheren
        Erreichen des **Zauberbuchs** [book_enchanted] zu helfen?  '
      MC_HOC_2017_FP20x20: "**Freies Spiel:** Jetzt bist du dran! Verwende den Code
        des Agenten, um die Welt zu erkunden."
      MC_HOC_2017_FP20x20_2019: "**Freies Spiel:** Jetzt bist du dran! Verwende den
        Code des Agenten, um die Welt zu erkunden."
      NEW Course 4 Artist Functions 14: Es ist Freispielzeit! Zeichne was immer du
        willst!
      NEW Course 4 Artist Functions 4: 'Benutze die Funktion `Zeichne ein Quadrat`,
        um dieses Muster zu zeichnen. '
      NEW Course 4 Artist Functions 9: Kannst du das lösen, indem du nur einen Baustein
        hinzufügst?
      NEW Course 4 Artist Params 2: Erstelle eine Funktion „Zeichne ein Dreieck“ mit
        einer Seitenlänge von 50 Pixeln von Grund auf.
      NEW Course 4 Artist Vars 4: 'Probieren wir es noch einmal. Kannst du die Variable
        „Länge“ so einstellen, dass dieses coole Design aus Sechsecken entsteht? Hinweis:
        Es ist ein Vielfaches von 10.'
      NEW Course 4 Artist Vars 6: 'Zeichne dieses Muster, indem du die Längenvariable
        an die richtigen Stellen setzt und dann den richtigen Wert für die Länge eingibst.
        (Hinweis: Es ist ein Vielfaches von 10).So braucht man die Länge nur an einer
        Stelle zu setzen - und der Code verwendet den richtigen Wert an jeder Stelle!'
      NetSim Standalone Freeplay: |-
        # Internet-Simulator-Freispiel

        In dieser Version des Internet-Simulators sind die meisten Optionen eingeschaltet und konfigurierbar. Nachrichten können an jeden Router innerhalb der Klasse gesendet werden, und die Nachrichten nehmen verschiedene Wege, um ihr Ziel zu erreichen.

        Dein Lehrer wird dir genauere Anweisungen für diese Aktivität geben.
      OPD-K5 Closing: |-
        > Wenn Ihnen dieser Kurs gefallen hat, melden Sie sich für einen persönlichen Workshop an.
        >
        > [Melden Sie sich jetzt an](http://code.org/professional-development-workshops), um weiterhin Informatik und ihre Didaktik zu lernen. Die kostenlosen persönlichen Workshops sind ein wertvoller Ort, um mit anderen leidenschaftlichen Pädagogen in Ihrer Nähe zusammenzuarbeiten und sich zu engagieren.
      OPD-K5 EventsVid: |-
        Sehen Sie sich dieses Video an, das "Ereignisse" definiert und zeigt, wie sie in den Informatik-Grundlagen funktionieren. Danach werden Sie einige Rätsel ausprobieren, bei denen Sie Ereignisse kodieren müssen.

        > Ein Ereignis ist eine Codezeile, die Ihren Computer anweist, auf etwas zu "hören" und dann eine Aktion durchzuführen. Zum Beispiel können Sie auf Webseiten oft ein Drop-Down-Menü anzeigen, wenn Sie mit der Maus über die Navigationsleiste fahren. Der "Maus-Rollover" ist ein "Ereignis", das eine Aktion auslöst.
      OPD-K5 FirstProgram: Sieh dir das Video unten an, das das allererste Programm
        erklärt, das junge Studenten in [Kurs A](https://studio.code.org/s/coursea-2018?section_id=2042045)
        schreiben werden. Auf der nächsten Seite kannst du ein ähnliches Programm
        selbst schreiben!
      OPD-K5 LessonPlanning: "Bis jetzt haben Sie einige unserer Unplugged-Stundenpläne
        kennengelernt. Es gibt jedoch für jede einzelne Informatik-Grundlagen-Lektion
        Unterrichtspläne - sowohl plugged als auch online. Die vollständige Liste
        der Lektionen für jeden Kurs finden Sie unten:\n<br/>\n<br/> \n[Course A lesson
        plans](https://curriculum.code.org/csf-18/coursea/)<br/> \n[Course B lesson
        plans](https://curriculum.code.org/csf-18/courseb/)<br/>\n[Course C lesson
        plans](https://curriculum.code.org/csf-18/coursec/)<br/> \n[Course D lesson
        plans](https://curriculum.code.org/csf-18/coursed/)<br/> \n[Course E lesson
        plans](https://curriculum.code.org/csf-18/coursee/)<br/> \n[Course F lesson
        plans](https://curriculum.code.org/csf-18/coursef/)<br/> \n\nVielleicht möchten
        Sie diese Lektionen jedoch anpassen oder Ihre eigenen erstellen! Das Video
        unten erklärt die Struktur der Informatik-Grundlagen-Lektionen, gibt aber
        auch Tipps, falls Sie eigene Lektionen entwickeln wollen."
      OPD-K5 RepeatBlock: Sehen Sie sich das folgende Video an, das die Funktionsweise
        von Schleifen erklärt und den 'Repeat'-Block in den Informatik-Grundlagen
        einführt.
      OPD-K5 WhatIsCS: 'Hast du dich jemals gefragt: "Was genau ist Informatik?" Oder:
        "Warum werden manche Computerprogramme mit Worten geschrieben und manche mit
        Bildern?" Wenn ja, dann schau dir dieses Video an; es ist eine großartige
        Einführung in das Gebiet der Informatik.'
      Overworld Move to Sheep: Füge einen zweiten „Vorwärts“-Befehl hinzu, um zu den
        Schafen zu gelangen.
      Overworld Move to Sheep_2019: Füge einen zweiten „Vorwärts“-Befehl hinzu, um
        zu den Schafen zu gelangen.
      Pixelation - Lesson 15 - Color Shades: |-
        # Farbzerlegungen: Aufgabe 2

        **Anweisungen:**
        <img src='https://images.code.org/548d1daa698a17b1005b1747f152587f-image-1439476855059.png' style="width: 150px; float:right">Wir beginnen mit der Reihe von Rottönen, die Maddie im Video kreiert hat. Experimentiere mit 6-Bit-Farben, indem du die untere Zeile des Bildes mit Farbtönen einer anderen Farbe ausfüllst. Hier ist ein Beispiel mit einigen Blautönen. Probiere deine eigene Farbe!
      Pixelation - Lesson 15 - Color Shades 4x4: "# Pixelation: Aufgabe 3\n\n<img
        src = \"https://code.org/images/cspunit1/ColorTask3.png\" style=\"float:right;
        margin:0 20px\" width=200>\n\n**Anweisungen:**\nWir beginnen Sie mit dem 4x4
        Bild, das Maddie im Video erstellt hat.\n\nDeine Aufgabe ist es, ein 4x4-Raster
        mit Farben zu füllen, indem du _12 Bit pro Pixel_ verwendest. Das Ergebnis
        sollte ungefähr so aussehen wie das rechts dargestellte Bild.  \n\nHier sind
        die Anforderungen:\n\n-   Reihe 1 - füllen Sie mit Rottönen. \n-   Reihe 2
        - Grüntöne. \n-   Reihe 3 - Blautöne. \n-   Reihe 4 - Graustufen."
      Pixelation - Lesson 15 - Complete 3-bit color: "# Farbzerlegung: Aufgabe 1\n\n**Anweisungen:**\n\n-
        \  Wir beginnen mit dem 4x2-Bild, das Maddie erstellt hat, aber wir haben
        die letzten beiden Felder weggelassen. \n-   Vervollständige das Bild, indem
        du herausfindest, welche zwei Farben fehlen und kodiere diese."
      Pixelation 4x4 Empty: Die Breite und Höhe sind nun in den Pixeldaten kodiert.
        Kannst du herausfinden, wie du die Abmessungen anpassen kannst?
      Pixelation Bee: |-
        # Beispiel für 12 Bits pro Pixel

        -   Dieses größere Bild einer Biene kodiert Farbe mit 12 Bit pro Pixel, aber das Betrachten in Hexadezimalen macht es einfacher, die Farbe jedes Pixels zu sehen.
        -   Wenn du in den Binärmodus wechselst - halten Dich fest - sind es viele Bits.
        -   Hier ist noch eine weitere spannende Sache, die du ausprobieren kannst: Schiebe die Bits pro Pixel hoch bis auf 24 Bits pro Pixel. Was passiert dann? Kannst du dieses Verhalten erklären?
      Pixelation Flappy: |-
        # Beispiel für mehr Bits pro Pixel

        Hier ist ein größeres Bild mit 9 Bit pro Pixel. Mit 9 Bit pro Pixel können 512 verschiedene Farben darstellt werden. Klicke dich durch, um das nächste Bild zu sehen, das noch ausgefeilter, aber einfacher zu verstehen ist.
      Room Escape Workshop - 1: |-
        # Räume einrichten

        <img src="https://images.code.org/9d103d74f7c2da05aeccd5fc317e6ab6-image-1490368234432.08.44 AM.png" style="width:200px; float:right">

        Um eine Escape Room zu erstellen müssen Sie den Raum zunächst einrichten, in dem der Benutzer Abenteuer erleben kann. Ein Teil der Arbeit wurde bereits für Sie erledigt.  Sie müssen nur entscheiden, wie die verschiedenen Teile des Raumes aussehen werden, indem Sie Bilder auswählen!

        # Mache folgendes

        -   Das Level beginnt im Designmodus.
        -   Füge für jedes leere Bildelement (graues Rechteck) ein entsprechendes Bild ein. Du brauchst beispielsweise ein Türbild für das Bildelement Tür mit der Bezeichnung Tür.
        -   Ein Beispiel dafür, wie der Raum aussehen könnte, findest du auf der rechten Seite.
      Room Escape Workshop - 10: |-
        # Tür öffnen

        <img src="https://images.code.org/3651f7d5306bdcfd2d9a3d9bb842626e-image-1491066778787.12.36 PM.png" style="width:200px;float:right">

        Wir kommen dem Ganzen näher! Lasst uns die Tür einrichten, um sie zum Öffnen vorzubereiten.

        # Mach folgendes

        -   Bild für den Außenbereich hinzufügen
        -   Gib ihm eine gute ID (vielleicht _außen_).
        -   Das Bild für den Außenbereich ausblenden (Es wird beim Öffnen der Tür angezeigt)
      Room Escape Workshop - 10 - 2: |-
        # Tür öffnen

        <img src="https://images.code.org/57407cb51f50e08ecddb8ce7d2d89157-image-1491065952915.58.58 PM.png" style="width:200px;float:right">

        Öffne die Tür, wenn man den Schlüssel hat!

        # Mach folgendes

        -   Füge einen `onEvent` Block hinzu, wenn auf die Tür geklickt wurde.
        -   Fügen Sie eine `if`-Anweisung innerhalb des `onEvent` Events hinzu, um zu überprüfen, ob sich die Schlüsselposition nach unten bewegt hat.
            -   Hinzufügen einer if-Anweisung
            -   In der if-Anweisung fügen Sie `==` hinzu.
            -   Auf einer Seite der `==` befindet sich die x-Position, auf die Sie den Schlüssel bewegen, wenn er angeklickt wird.
            -   Auf der anderen Seite fügen Sie den Block `getXPosition()` hinzu - Die ID dafür sollte die ID Ihres Schlüssels sein!
        -   Verwenden Sie innerhalb der `if`-Anweisung `showElement`, um das versteckte Außenbild anzuzeigen, wenn man den Schlüssel hat
      Room Escape Workshop - 3: |-
        # Den Code verstecken

        <img src="https://images.code.org/6fa80456a39d9b6417545f5f66ec83a5-image-1490368827625.png" style="width:400px;float:right">

        1.  Klicke im Designmodus auf das weiße Quadrat auf dem "CODE" steht. Ändere es, um einen Geheimcode deiner Wahl anzuzeigen.
        2.  Ziehe das Bild nach unten, um den Geheimcode abzudecken.

        ![](<>)
      Room Escape Workshop - 3-2: |-
        # Bild bewegen

        Machen Sie es nun so, dass der Benutzer den Geheimcode durch Anklicken des Bildes finden kann. Wenn sie auf das Bild klicken, sollte es sich nach oben und aus dem Weg bewegen.

        # Mach folgendes

        -   Ziehe einen `onEvent` Baustein in den Arbeitsbereich
        -   Ändere die im `onEvent` Baustein in "Bild" (das ist die ID des Bildelements)
        -   Füge innerhalb des `onEvent` Bausteins den Baustein `setPosition` mit den folgenden Eingaben hinzu
            -   ID: "Bild"
            -   Die nächsten beiden Eingaben sind x- und y-Werte - testen Sie einige Werte, um zu versuchen, das Bild wie in den Bildern rechts zu bewegen
      Room Escape Workshop - 4: "# Den Safe einrichten\n\nDu hast einen Geheimcode
        generiert und ihn so verwendet, dass Benutzer in den zweiten Raum navigieren
        können. Geben wir dem Benutzer nun die Möglichkeit den Geheimcode einzugeben
        wenn er auf den Safe klickt.\n\n# Mach folgendes\n\n-   Hinzufügen eines `onEvent`-Bausteins\n
        \   -   Wähle die ID für den Safe aus.\n-   Füge innerhalb des `onEvent` Bausteins
        einen <img src=\"https://images.code.org/c0964a8543728d018d5d9583319e22b9-image-1491060910093.34.36
        AM.png\" style=\"width:300px\"> Baustein hinzu.\n    -   Ändere auf der linken
        Seite das _x_ (den Namen der Variable) in _guess_. \n    -   Ändere auf der
        rechten Seite _\"Einen Wert eingeben\"_  (also die Benutzeraufforderung) auf
        _\"Den Code eingeben\"_"
      Room Escape Workshop - 5: |-
        # Überprüfen des Geheimcodes

        Nachdem du nun eine Vermutung des Geheimcodes vom Benutzer entgegen gennommen hast, musst du nur prüfen, ob diese korrekt ist! Wir können dies mit einer `if`-Anweisung tun. Eine if-Anweisung prüft, ob eine Bedingung true ist, in diesem Fall wird geprüft, ob die vom Benutzer eingegebene Nummer mit dem Geheimcode übereinstimmt.

        # Mach folgendes

        -   Füge innerhalb des `onEvent`-Bausteins für den Safe unterhalb des Prompt-Befehls eine <img src="https://images.code.org/5e9a434b1ad6b8f010db928b668127a5-image-1491061131564.37.01 AM.png" style="width:100px">-Anweisung hinzu.
        -   Erstelle die Bedingung, indem du den <img src="https://images.code.org/f0680979704c30975550211b03ed222e-image-1491061134985.37.08 AM.png" style="width:100px"> Baustein herausziehst, der prüft, ob zwei Dinge gleich sind
        -   Auf der einen Seite von <img src="https://images.code.org/f0680979704c30975550211b03ed222e-image-1491061134985.37.08 AM.png" style="width:100px"> setze _guess_ (der Name des Wertes, den wir zum Speichern der Benutzer guess verwendet haben)
        -   Auf der anderen Seite gibst du den Wert für deinen Geheimcode ein
      Room Escape Workshop - 7: "# Zeige das innere des Safes\n\n<img src=\"https://images.code.org/71e74305187a46d0badeb29a9a69ac56-image-1490371014841.55.37
        AM.png\" style=\"width:200px;float:right\">\n\nSobald du das Programm hast
        das den Geheimcode überprüft, willst du auch, dass sich der Safe \"öffnet\"
        und den Schlüssel innen angezeigt wird. Zuerst müssen Sie diese Elemente aber
        noch im Designmodus erstellen.\n\n# Mach folgendes\n\n-   Gehe in den Designmodus
        und fügen Sie ein graues quadratisches Bild hinzu.\n    -   Klicke und ziehe
        ein Bildelement <img src=\"https://images.code.org/8f4bc108415d83e5c528c9204502efc2-image-1491059181186.06.13
        AM.png\" style=\"width:75px\"> auf den Bildschirm.\n    -   Gib ihm eine gute
        ID (vielleicht _insideSafe_).\n    -   Finde ein graues Quadrat, das als Bild
        verwendet werden soll.\n    -   Dies dient als Innenseite des Tresors, da
        es die Vorderseite des Tresors verdeckt, wenn es gezeigt wird.\n-   Hinzufügen
        eines Schlüsselbildes\n    -   Klicke und ziehe ein Bildelement <img src=\"https://images.code.org/8f4bc108415d83e5c528c9204502efc2-image-1491059181186.06.13
        AM.png\" style=\"width:75px\"> auf den Bildschirm.\n    -   Gib ihm eine gute
        ID (vielleicht _Schlüssel_)\n    -   Finde ein Schlüsselbild zur Verwendung
        \n-   Klicke im Designmodus auf die versteckte Eigenschaft für das graue Quadrat
        und die Taste. Wenn sie ausgeblendet sind, wird es im Designmodus so aussehen
        wie unten beschrieben.\n\n<img src=\"https://images.code.org/2c2c7e9996515f2b30d416b558fd1360-image-1489605526794.17.55
        PM.png\" style=\"width:200px\">"
      Room Escape Workshop - 8: |-
        # Zeige das Innere des Safes

        Richte nun den Code so ein, dass der Schlüssel und das graue Quadrat angezeigt werden, wenn der Benutzer den richtigen Code eingibt.

        # Mach folgendes

        -   Innerhalb der `if`-Anweisung, die du im Befehl `onEvent` für den Safe erstellt hast, füge ein:
            -   Der `showElement` Baustein um das graue Quadrat anzuzeigen
            -   Der `showElement` Baustein um den Schlüssel anzuzeigen
      Room Escape Workshop - 9-2: "# Schlüssel-Klick\n\n<img src=\"https://images.code.org/1a736d2774860bebc5072b8ae8b38f34-image-1491066638078.10.00
        PM.png\" style=\"width:170px;float:right\">\n\nSobald ein Benutzer auf den
        Schlüssel klickt, möchtest du zeigen, dass er den Schlüssel hält. Du kannst
        dies tun, indem du den Schlüssel in die untere Ecke des Raumes bewegst. \n\n#
        Mache folgendes\n\n-   Fügt einen `onEvent`-Baustein hinzu für das Ereignis
        wenn der Benutzer auf den Schlüssel klickt. \n-   Innerhalb des Blocks `onEvent`:\n
        \   -   Verwende `setPosition`, um die Taste in die untere Ecke des Bildschirms
        zu bewegen"
      Standalone_Artist_2: Zeichne diesen Diamanten indem du Winkel von 120 und 60
        Grad, sowie 150 Pixel lange Seiten verwendest.
      Standalone_Artist_3: Kannst du ein Hexagon (Sechseck) mit 100 Pixel Seitenlänge
        und 60°-Drehungen zeichnen?
      Standalone_Artist_4: 'Nun kannst du mit einem neuen Block experimentieren: Der
        Schleife. Diese wird die Befehle die in dem Block der Schleife sind wiederholen.
        Was passiert, wenn du die Befehle in der Schleife sechs mal wiederholst?'
      Standalone_Artist_5: Wie oft musst du eine Schleife, die die Befehle enthält
        um einen Diamanten zu zeichnen wiederholen, um eine Blume zu zeichnen?
      Standalone_Artist_5.5: "Schau mal, wie schön wir den Blumen-Code vereinfacht
        haben, indem wir eine Schleife verwendet haben. Du kannst die ganze Folge
        12 Mal wiederholen, um die Blume zu zeichnen. \nHinweis: Du musst vor dem
        Ende der Diamantschleife noch eine 30 Grad Drehung einbauen, damit du gerade
        gezeichneten Diamanten nicht wieder übermalst."
      Standalone_Artist_6: "Wiederhole diesen Sechseck-Code 6 Mal, um die Figur zu
        zeichnen. Um wie viel Grad musst du jedesmal drehen? \nHinweis: Teile die
        Gradzahl in einem Kreis (360°) durch die Anzahl der Wiederholungen."
      Standalone_Artist_7: "Eine Funktion ist ein weiteres Programmierwerkzeug, dass
        dir hilft nicht immer wieder viel Code zu wiederholen. Die Funktion in diesem
        Beispiel zeichnet eine Blume. Du kannst sie also immer benutzen (man sagt
        auch aufrufen), wenn du eine Blume zeichnen möchtest indem du die Funktion
        die die Blume zeichnet aufrufst. Benutze jetzt diese Funktion und den neuen
        Springen-Baustein, um drei Blumen zu zeichnen. \nHinweis: Die Blumen liegen
        jeweils 150 Pixel auseinander."
      Standalone_Artist_8: Hier ist eine Funktion die ein Sechseck zeichnet. Führe
        den Code aus, um zu sehen was er macht und experimentiere dann mit der Funktion,
        um zu sehen was passiert. Kannst du mit ihr ein Muster von Quadraten, Dreiecken
        oder Fünfecken zeichnen?
      Standalone_Artist_9: Leg los und zeichne ein Bild deiner Wahl! Du erhältst dafür
        eine leere Funktion, mit der du machen kannst was du möchtest!
      U4 Model Program 1_2018: |-
        # Hinzufügen eines neuen Bildschirms

        Um Deine App zu vervollständigen, brauchst Du mehr als nur einen Startbildschirm. Jede Karte, die du in Deinem Papier-Prototypen erstellt hast, wird im App Lab durch einen "Bildschirm" repräsentiert. Um weitere Bildschirme zu erstellen, klicke einfach auf das Dropdown-Menü oben in der App-Anzeige und wähle "Neuer Bildschirm...".

        <img src="https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png" style="width: 200px">

        # Mache Folgendes

        -   **Erstelle einen neuen Bildschirm** und gib ihm die ID "about".
      U4 Model Program 1_2019: |-
        # Hinzufügen eines neuen Bildschirms

        Um Deine App zu vervollständigen, brauchst Du mehr als nur einen Startbildschirm. Jede Karte, die du in Deinem Papier-Prototypen erstellt hast, wird im App Lab durch einen "Bildschirm" repräsentiert. Um weitere Bildschirme zu erstellen, klicke einfach auf das Dropdown-Menü oben in der App-Anzeige und wähle "Neuer Bildschirm...".

        <img src="https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png" style="width: 200px">

        # Mache Folgendes

        -   **Erstelle einen neuen Bildschirm** und gib ihm die ID "about".
      U4 Model Program 3_2018: |-
        # Button Events

        Mit unseren Bildschirmen an Ort und Stelle ist es Zeit, die App tatsächlich zu _programmieren_, so dass sie auf Tastenklicks reagiert. Für jeden Button auf jedem Bildschirm solltest Du einen `onEvent` Block hinzufügen, der darauf achtet, dass der Button angeklickt wird und entsprechend reagiert. Als erstes werden wir einfach den `home_search_btn` Button beobachten und etwas auf der Konsole ausgeben, wenn er angeklickt wird

        Mache Folgendes

        Du bist jetzt im Code-Modus (du kannst mit den Buttons über deiner App zwischen Code-Modus und Design-Modus wechseln). Hier kannst du den Code schreiben, der auf die Interaktion der Benutzer mit deiner App reagiert.

        ![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)

        -   **Ziehe einen `onEvent`-Baustein** aus der Code-Toolbox heraus.
        -   **Wähle `home_search_btn`** aus der "id" Dropdown-Liste aus.
        -   **Ziehe einen \`console.log'-Baustein** aus der Variablen-Schublade heraus.
        -   **Starte Deine App**.
        -   **Klicke auf den Suchen-Button** und suche nach Meldungen in der Konsole.
      U4 Model Program 3_2019: |-
        # Button Events

        Mit unseren Bildschirmen an Ort und Stelle ist es Zeit, die App tatsächlich zu _programmieren_, so dass sie auf Tastenklicks reagiert. Für jeden Button auf jedem Bildschirm solltest Du einen `onEvent` Block hinzufügen, der darauf achtet, dass der Button angeklickt wird und entsprechend reagiert. Als erstes werden wir einfach den `home_search_btn` Button beobachten und etwas auf der Konsole ausgeben, wenn er angeklickt wird

        Mache Folgendes

        Du bist jetzt im Code-Modus (du kannst mit den Buttons über deiner App zwischen Code-Modus und Design-Modus wechseln). Hier kannst du den Code schreiben, der auf die Interaktion der Benutzer mit deiner App reagiert.

        ![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)

        -   **Ziehe einen `onEvent`-Baustein** aus der Code-Toolbox heraus.
        -   **Wähle `home_search_btn`** aus der "id" Dropdown-Liste aus.
        -   **Ziehe einen \`console.log'-Baustein** aus der Variablen-Schublade heraus.
        -   **Starte Deine App**.
        -   **Klicke auf den Suchen-Button** und suche nach Meldungen in der Konsole.
      U4 Model Program 4_2018: |-
        # Wechseln der Bildschirme bei Klick

        Der `setScreen` Baustein wird Deine App auf den von Dir angegebenen Bildschirm ändern. Wenn Du einen `setScreen` Block _innerhalb_ eines `onEvent` Bausteins platzierst, kannst Du Deine Buttons so programmieren, dass sie auf den richtigen Bildschirm wechseln.

        # Mache Folgendes

        Benutze den `onEvent` Baustein, den Du erstellt hast, um Dein Programm auf den "Such"-Bildschirm zu wechseln, wenn der `home_search_btn` angeklickt wird.

        -   Ziehe einen `setScreen`-Baustein heraus und setze ihn in den `onEvent`-Baustein.
        -   Wähle "Suchen "\*\* aus dem `setScreen` Dropdown-Menü.
        -   Starte Deine Anwendung und teste den "Home Search" Button.
      U4 Model Program 4_2019: |-
        # Wechseln der Bildschirme bei Klick

        Der `setScreen` Baustein wird Deine App auf den von Dir angegebenen Bildschirm ändern. Wenn Du einen `setScreen` Block _innerhalb_ eines `onEvent` Bausteins platzierst, kannst Du Deine Buttons so programmieren, dass sie auf den richtigen Bildschirm wechseln.

        # Mache Folgendes

        Benutze den `onEvent` Baustein, den Du erstellt hast, um Dein Programm auf den "Such"-Bildschirm zu wechseln, wenn der `home_search_btn` angeklickt wird.

        -   Ziehe einen `setScreen`-Baustein heraus und setze ihn in den `onEvent`-Baustein.
        -   Wähle "Suchen "\*\* aus dem `setScreen` Dropdown-Menü.
        -   Starte Deine Anwendung und teste den "Home Search" Button.
      U4 Model Program 5_2019: |-
        # Wire Up the Other Buttons

        Nachdem du nun eine Taste zum Funktionieren gebracht hast, folgen nun einfach dem gleichen Muster für alle anderen.

        # Mach folgendes

        -   Erstelle für jede Schaltfläche ein Ereignis, das beim Drücken der Taste auf den entsprechenden Bildschirm verweist.
        -   Führe Deine App aus und teste, ob alle Schaltflächen funktionieren.
      Underground If Statements: Jetzt wird des knifflig. Baue 3 Redstone-Bausteine
        ab, aber falle nicht in die Lava. Benutze einen „Wenn“-Befehl, um Kopfsteinpflaster
        über alle von dir entdeckte Lava zu platzieren.
      Underground If Statements_2019: Jetzt wird des knifflig. Baue 3 Redstone-Bausteine
        ab, aber falle nicht in die Lava. Benutze einen „Wenn“-Befehl, um Kopfsteinpflaster
        über alle von dir entdeckte Lava zu platzieren.
      'Video: Intro to CSS Part 2_2019': |-
        ## Zu berücksichtigend Frage

        -   Woher weiß die Webseite, welches Stylesheet sie verwenden soll?
      'Video: Intro to CSS_2019': |-
        ## Zu berücksichtigende Fragen

        -   Inwiefern unterscheidet sich der Stil einer Webseite von der Struktur?
        -   Warum möchtest du, dass die Webseite einen bestimmten Stil hat?
      Vigenere: "# Verschlüsseln und Entschlüsseln einer Nachricht mit der Vigenère-Verschlüsselung\n\nDies
        ist eine interaktive Version der Vigenère-Chiffre, die die Ver- und Entschlüsselung
        animiert, während sie stattfindet, mit einem Stück Text zum Ver- und Entschlüsseln
        und dem Schlüssel.\n\n# Mache Folgendes\n\n### Eine Nachricht verschlüsseln\n\nKlicke
        mehrmals auf \"Schritt\" und verfolge, was passiert. Achte darauf:\n\n-   Wie
        der Chiffriertext entsteht\n-   Was passiert, wenn man zum letzten Zeichen
        des Schlüssels gelangt?\n-   Nachdem du ein paar Zeichen durchgegangen bist,
        klicke auf \"Ausführen\", um den Rest zu sehen.\n-   Klicke auf Neustart und
        spiele die Animation erneut ab. Du kannst den Geschwindigkeitsregler verwenden,
        um die Animation zu beschleunigen oder zu verlangsamen.  \n\n![](https://images.code.org/06858f88ac12997bba73f4f76638a068-image-1443574425185.gif)\n\n###
        Eine Nachricht entschlüsseln\n\nVerschlüssele eine Nachricht wie oben beschrieben,
        dann:\n\n-   Markiere und kopiere den verschlüsselten Text\n-   Füge diesen
        in den Klartextbereich ein. Hinweis: Ändere den Schlüssel nicht.\n-   Ändere
        den Umschalter Verschlüsseln/Entschlüsseln auf \"Entschlüsseln\".\n-   Drücke
        \"Schritt\"  ein paar Mal und dann \"Ausführen\"\n\nDu solltest sehen, wie
        der Originaltext entsteht.\n![](https://images.code.org/dc89d6c19c17adb23b6b5ff9a62c4583-image-1443574425182.gif)\n\nWie
        schwer wäre es, eine mit dieser Verschlüsslungsmethode verschlüsselten Nachricht
        zu knacken? Macht die Länge der Passfeder einen Unterschied?"
      Virtual Pet 1_2019: "**Freispiel**: Uiuiui! Schau dir dieses coole Haustier
        an! \n\nWährend du den untenstehenden Code lesen, fragen dich selbst:\n\n-
        \  Wie befiehlt man dem Haustier, sich zu bewegen? \n-   Was passiert, wenn
        das Haustier den Eisbecher berührt? Was ist mit dem Pfeffer?\n-   Wie wird
        die Variable `energy` verwendet? Wie kannst du den aktuellen `energy`-Wert
        des Haustieres überprüfen?\n\nFühre den Code aus und spiele mit dem Haustier!
        Wenn du fertig bist, klicke auf **Beenden**."
      Virtual Pet 2_2019: "Jetzt bist du an der Reihe, dein eigenes virtuelles Haustier
        zu erstellen! Beginne, indem du ihm einen Look gibst, der Dir gefällt.\n\n1.
        \ Klicke auf die Registerkarte **Kostüme** oben links auf dem Bildschirm (neben
        **Code**). \n2.  Bearbeite das Startkostüm oder füge ein neues hinzu, das
        Dir gefällt. \n3.  Ändere das Kostüm des Sprites in deinem eigenen im untenstehenden
        Code.\n4.  Klicke auf **Laufen**, um den neuen Look Ihres Haustieres zu sehen!"
      Virtual Pet 3_2019: |-
        Erstelle Events, damit sich Dein Haustier auf Befehl bewegt!

        Beginne, indem du <xml><block type="gamelab_keyPressed" block-text="the while up key pressed event block"><title name="CONDITION">"while"</title><title name="KEY">"up"</title></block></xml> zusammen mit <xml><block type="gamelab_moveInDirection" block-text="the move in direction action block"><title name="DIRECTION">"North"</title></block></xml> verwendest, um Dein Haustier dazu zu bringen, sich nach Norden zu bewegen \*\*während der Pfeil nach oben gedrückt wird.

        Wiederhole die obigen Schritte für die anderen drei Richtungen (Süd, West, Ost) und die Pfeiltasten (unten, links, rechts)!
      Virtual Pet 4_2019: "Lasst uns wanderndes Essen machen!\n\n1.  Füge **zwei\\*\\***
        Sprites zu deiner Welt hinzu. \n2.  Lasse ein Sprite so aussehen, wie es dein
        Haustier essen **möchte**, und das andere so, wie es **nicht** essen möchte.\n3.
        \ Lasse jeden Nahrungs-Sprite mit dem **wandern** Verhalten beginnen, unmittelbar
        nachdem es erscheint."
      Virtual Pet 5_2019: |-
        Verwende <xml><block type="gamelab_checkTouching" block-text="the when touching block"></block></xml> mit <xml><block type="gamelab_jumpTo" block-text="the jump to location block"></block></xml> zum **simulierten** "Essen" in der virtuellen Welt!

        1.  Erstelle ein Ereignis, bei dem eines der Nahrungs-Sprites an einen beliebigen Ort springt, wenn Dein Haustier es berührt.
        2.  Wiederhole das oben Gesagte für das andere Nahrungsprite.
      Virtual Pet 6_2019: "Benutze  <xml><block type=\"variables_set\" block-text=\"the
        set variable block\"><title name=\"VAR\">energy</title></block></xml> zusammen
        mit  <xml><block type=\"math_change\" block-text=\"the change variable block\"><title
        name=\"VAR\">energy</title></block></xml>, damit die Nahrungsaufnahme deines
        Tieres auch seine Energie beeinflusst! Je mehr Energie es hat, desto schneller
        bewegt es sich! \n\n1.  Stelle die Variable `energy` beim Programmstart auf
        5.\n2.  Wenn Dein Haustier Futter isst, das es **mag**, gib 1 zu `energy`.\n3.
        \ Wenn dein Haustier Nahrung isst, die es **nicht mag**, stell `energy` wieder
        auf 5 ein.\n4.  Ändere jedes Pfeiltastenereignis so, dass dein Haustier nun
        `energy`-Pixel anstelle einer bestimmten Zahl bewegt."
      Virtual Pet 7_2019: "Du kannst den `energy`-Wert deines Haustieres mit <xml><block
        type=\"gamelab_printText\" block-text=\"the print block\"></block></xml> überprüfen,
        einem neuen Baustein, der in der Kategorie `Welt` zu finden ist! \n\nErstelle
        ein Ereignis, bei dem der Wert von `energy` gedruckt wird, wenn das Haustier-Sprite
        angeklickt wird. "
      Virtual Pet 8_2019: "**Freispiel:** Dein virtuelles Haustier ist _ABSOLUT UNGLAUBLICH!_.
        \n\nWas kannst du noch tun? Probiere diese Ideen aus:\n\n-   Ändere den Hintergrund
        in eine Farbe oder ein Bild.\n-   Mehr anzeigen! Versuche *\"Yum! Energie
        erhöht!\" \\_ anzeigen zu lassen wenn das Haustier Nahrung isst, die es mag,
        oder \\_\"Yuck! Energie zurückgesetzt!\"* wenn es Nahrung isst, die es nicht
        mag.\n-   Füge ein weiteres Sprite hinzu, das auf eine andere Weise mit deinem
        Haustier interagiert. Wie wäre es mit einem **Spielzeug** Sprite?\n-   Füge
        eine weitere Variable hinzu, die dein Haustier oder die Welt beeinflussen
        kann. Was könnte `happiness` oder `age` bewirken?\n-   Experimentiere mit
        Verhaltensweisen! Versuche das **Wandern**-Verhalten zu bearbeiten um die
        Nahrungs-Sprites zu verlangsamen oder zu beschleunigen (Hinweis: Ihre \"Geschwindigkeit\"
        ist derzeit 5...)."
      'Widget: Text Compression': Suche im Text nach Mustern (Worte oder Sätze die
        sich wiederholen). Trage die Muster die du findest in das Wörterbuch rechts
        ein. Wenn du einen Eintrag in das Wörterbuch machst, wird das Symbol des Eintrags
        die Muster im Text ersetzen.
      behaviors 1: |-
        Mach eine Vorhersage! Lies den Code.

        -   Das Sprite wird sich drehen.
        -   Das Sprite wird schrumpfen.
        -   Das Sprite wird sich bewegen.
        -   Das Sprite wechselt die Farbe.
      behaviors 2: |-
        Fliege die Rakete zu den Sternen!

        -   Ändere das Verhalten der Rakete so, dass sie im Anzeigebereich nach oben fliegt.
      behaviors 3: |-
        Hilf dem Rover, den Roboter zu überholen!

        -   Editiere das Verhalten des Rover-Sprites (oben), so dass es sich schneller bewegt als der Roboter.
      behaviors 3a: |-
        Der <xml><block type="sprite_parameter_get" block-text="this sprite"><title name="VAR">this sprite</title></block></xml> Baustein sollte anstelle des Bausteins `Kostüm` verwendet werden. Dadurch funktioniert es für jedes Sprite, unabhängig davon, welches Kostüm es verwendet.

        **Debug:** Lasse alle Sterne auf die gleiche Weise drehen!
      behaviors 4: Mach eine Vorhersage! Welchen Weg wird der Satellit nehmen, um
        das Sonnensystem zu erreichen?
      behaviors 5: |-
        Schreibe Dein eigenes Verhalten.

        -   Schreibe ein neues Verhalten für diesen Astronauten, um ihn zu einem der vier Schiffe im Ausstellungsbereich zu führen.
      behaviors 6: |-
        Lass den Ball rollen.

        -   Erstelle ein neues Verhalten und benutze es, um den Ball zum Rollen zu bringen. Dein Verhalten sollte zwei verschiedene Aktionen kombinieren.

        ![](<https://images.code.org/4c81af6da51ce5b8ce83e9056dbfe34c-image-1567714812224.2019-09-05 16_19_45.gif>)
      behaviors 7: |-
        Fahren Sie in den Horizont!

        -   Erstelle ein neues Verhalten und benutze es, damit das Auto nach oben fährt (Norden) und schrumpft. Wenn du es richtig machst, könnte es so aussehen, als würde es in den Horizont hinausfahren.

        ![](<https://images.code.org/e0ea2b008bf557ea81e99a27dd03ef03-image-1567713536857.2019-09-05 15_58_25.gif>)
      behaviors free play: "**Freiespiel:** Erstelle deine eigene Weltraumszene!"
      course1_artist_loops_challenge2: Lasst uns ein Spiel spielen! Zeichne so viele
        X's wie möglich! Kannst du drei hintereinander bekommen?
      course1_artist_loops_challenge3: |-
        **Zwitscher!**

        _"Kannst du mir helfen, zwei Vogelhäuser zu bauen?"_
      course1_maze_debugging_challenge1: Beseitige die Fehler in diesem Level. Entferne
        die Blöcke, welche nicht passen, und füge die fehlenden Blöcke hinzu. Bring
        den Vogel zum Schwein!
      course1_maze_seq_challenge2: Du kannst dich nur bis zu viermal in jede Richtung
        bewegen. Kannst du einen Weg finden, bevor dir die Bausteine ausgehen?
      course1_playlab_events_challenge1: |-
        "Wo verstecken sich meine Freunde? In diesem Spiel wird mit einem Klick auf mich meine Freundin Olive die Katze sichtbar!"\_

        Ein Klick auf Olive lässt Robin erscheinen! Kannst du Code schreiben, um auch den Rest der Charaktere anzuzeigen?

        Achten bei diesem Rätsel darauf, dass du auf Hinweise klickst! Die Hinweise helfen Dir, dieses Projekt Schritt für Schritt durchzuführen!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      course1_playlab_events_challenge2: |-
        _"Lasst uns eine Party feiern! Gib meinen Freunden etwas zu tun, indem du sie anklickst oder antippst."_

        Was werden die Tiere sagen? Was wird sonst noch passieren?

        Achte bei diesem Rätsel darauf, dass du auf Hinweise klickst! Die Hinweise werden dir lustige Dinge zum Ausprobieren geben!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      course2_artist_prog_challenge1: Zeichne Räume für jedes Tier. Es gibt viele
        verschiedene Möglichkeiten, dieses Rätsel zu lösen, also viel Spaß!
      course2_artist_prog_challenge2: _Hilf mir, die gelben Linien auf dieser Straße
        zu zeichnen!_
      course2_bee_conditionals_challenge1: Sammle den ganzen Nektar oder mache den
        ganzen Honig. Du kannst nur Nektar aus Blumen sammeln und Honig aus Waben
        herstellen. Überprüfe, ob es eine Blume oder eine Wabe gibt.
      course2_collector_loops_challenge2: |-
        _"Lasst uns nach Schätzen suchen - mit Schleifen!"_

        Hilf dem Sammler, indem du diesen Code debugst. Hol dir den ganzen Schatz!
      course2_collector_prog_challenge1: Schau genau! Kannst du alle **10** Schätze
        einsammeln?
      course2_collector_prog_challenge2: Es gibt **20** Schätze in dieser Höhle zu
        finden. Sammle mindestens die Hälfte, um diese Herausforderung zu beenden!
      course2_harvester_loops_challenge1: Sammle den gesamten Mais ein.
      course2_harvester_loops_challenge2: Sammle den gesamten Salat ein. Vermeide
        die Bäume und Felder!
      course2_maze_programming_challenge1: '"Das Schwein versteckt sich! Kannst du
        mir helfen, mich zurechtzufinden?"\_'
      course2_maze_programming_challenge2: Manchmal gibt es mehr als eine Lösung für
        ein Problem. Manchmal ist es schneller, rückwärts zu gehen, als vorwärts!
      course3_bee_functions_challenge2: Für diese Herausforderung bist du auf dich
        allein gestellt!
      course3_farmer_condLoops_challenge1: "Die Kürbisse markieren die Stelle, an
        der du dich drehen solltest. Andernfalls fahre weiter vorwärts, aber denke
        daran, den gesamten Salat oder Mais auf dem Weg zu sammeln. \n\n**Jede versteckte
        Erntestelle hat nur einen Mais oder Salat.**"
      course3_maze_debugging_challenge1: _"Gehe ich hier nur immer im Kreis herum?"_
      course3_maze_debugging_challenge2: _"Wenn ich mich zu oft drehe, wird mir schwindelig!
        Hilf mir, das Schwein mit nur vier Drehbefehlen zu erreichen."_
      course4_artist_binary_challenge1: Du kannst jeden Binärwert (0 oder 1) nur jeweils
        einmal in diesem Rätsel verwenden. Versuche verschachtelte Schleifen zu verwenden,
        um diese Zeichnung zu vervollständigen.
      course4_artist_binary_challenge2: |-
        Auf diesem Gitter sind 256 Bits dargestellt - das bedeutet, dass es für eine kleine Änderung leicht ist, große Probleme zu verursachen. Bist du emsig genug, um dieses Logo wiederherzustellen?
        ![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)
      course4_artist_fwp_challenge1: Versuche, dieses Programm auszuführen und verändere
        es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert?
        (Oder lösche es und ersetze es durch etwas ganz anderes)
      courseA_artist_loops10: |-
        ## Zeit um wieder an Land zu gehen. Hilf mir Steine abzulegen, so dass ich nicht ins Wasser falle!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2018: |-
        ## Zeit um wieder an Land zu gehen. Hilf mir Steine abzulegen, so dass ich nicht ins Wasser falle!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2019: |-
        ## Zeit um wieder an Land zu gehen. Hilf mir Steine abzulegen, so dass ich nicht ins Wasser falle!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops11: |-
        ## Hilf mir Stufen zu bauen, um zu sehen, wie das Schiff davon segelt.

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops11_2018: |-
        ## Hilf mir Stufen zu bauen, um zu sehen, wie das Schiff davon segelt.

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops11_2019: |-
        ## Hilf mir Stufen zu bauen, um zu sehen, wie das Schiff davon segelt.

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops12: |-
        Der Zeichner sah etwas Lustiges in der Ferne. Zeichne, was Du denkst, was er sah!

        * * *

        ### Ideen

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2018: |-
        Der Zeichner sah etwas Lustiges in der Ferne. Zeichne, was Du denkst, was er sah!

        * * *

        ### Ideen

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2019: |-
        Der Zeichner sah etwas Lustiges in der Ferne. Zeichne, was Du denkst, was er sah!

        * * *

        ### Ideen

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops2: |-
        Hilf dem Künstler diese Linie 2 mal vorwärts zu zeichnen.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2018: |-
        Hilf dem Künstler diese Linie 2 mal vorwärts zu zeichnen.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2019: |-
        Hilf dem Künstler diese Linie 2 mal vorwärts zu zeichnen.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops3: |-
        Unser Künstler versucht 5 mal eine Linie zu zeichnen, aber er schafft es nicht. Kannst du helfen?

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2018: |-
        Unser Künstler versucht 5 mal eine Linie zu zeichnen, aber er schafft es nicht. Kannst du helfen?

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2019: |-
        Unser Künstler versucht 5 mal eine Linie zu zeichnen, aber er schafft es nicht. Kannst du helfen?

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops4: |-
        Verwende jetzt eine <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> Schleife um die Linie 5 mal zu zeichnen!

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2018: |-
        Verwende jetzt eine <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> Schleife um die Linie 5 mal zu zeichnen!

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2019: |-
        Verwende jetzt eine <xml><block type="controls_repeat_simplified_dropdown" block-text="repeat"><title name="TIMES" config="2-6">5</title></block></xml> Schleife um die Linie 5 mal zu zeichnen!

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops5: |-
        ## Zeichne eine Linie, welche 5 Schritte lang ist. Das wird unser Horizont.

        ![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)
      courseA_artist_loops5_2018: |-
        ## Zeichne eine Linie, welche 5 Schritte lang ist. Das wird unser Horizont.

        ![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)
      courseA_artist_loops5_2019: |-
        ## Zeichne eine Linie, welche 5 Schritte lang ist. Das wird unser Horizont.

        ![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)
      courseA_artist_loops6: |-
        ## Lass uns einen schönen Hügel in den Hintergrund zeichnen.

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2018: |-
        ## Lass uns einen schönen Hügel in den Hintergrund zeichnen.

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2019: |-
        ## Lass uns einen schönen Hügel in den Hintergrund zeichnen.

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops7: |-
        ## Benutze die <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> Schleife um Wellen zum Wasser hinzuzufügen.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2018: |-
        ## Benutze die <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> Schleife um Wellen zum Wasser hinzuzufügen.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2019: |-
        Benutze die <xml><block type="controls_repeat_simplified_dropdown" block-text="repeat"><title name="TIMES" config="3-10">???</title></block></xml>-Schleife, um dem Wasser Wellen hinzuzufügen.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops8: |-
        ## Wir brauchen eine Leiter hinauf aufs Boot.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2018: |-
        ## Wir brauchen eine Leiter hinauf aufs Boot.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2019: |-
        ## Wir brauchen eine Leiter hinauf aufs Boot.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops9: |-
        ## **Herausforderung:** Die Treppe zum Dock ist kaputt. Hilf mir, die Treppe zu reparieren.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2018: |-
        ## **Herausforderung:** Die Treppe zum Dock ist kaputt. Hilf mir, die Treppe zu reparieren.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2019: |-
        ## **Herausforderung:** Die Treppe zum Dock ist kaputt. Hilf mir, die Treppe zu reparieren.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops_challenge1: |-
        Du kannst eine Schleife nehmen um viele Linien hintereinander zu zeichnen.

        Kannst du ein Haus zeichnen? Mach es so, wie es dir gefällt! Versuche Muster zu finden, die sich wiederholen!

        Hier sind ein paar Ideen:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2018: |-
        Du kannst eine Schleife nehmen um viele Linien hintereinander zu zeichnen.

        Kannst du ein Haus zeichnen? Mach es so, wie es dir gefällt! Versuche Muster zu finden, die sich wiederholen!

        Hier sind ein paar Ideen:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2019: |-
        Du kannst eine Schleife nehmen um viele Linien hintereinander zu zeichnen.

        Kannst du ein Haus zeichnen? Mach es so, wie es dir gefällt! Versuche Muster zu finden, die sich wiederholen!

        Hier sind ein paar Ideen:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge2a: |-
        _"Hilf mir den Zeltplatz fertigzustellen!"_

        Benutze die Blöcke im Werkzeugkasten um diese drei Zelte zu zeichnen.
      courseA_artist_loops_challenge2a_2018: |-
        _"Hilf mir den Zeltplatz fertigzustellen!"_

        Benutze die Blöcke im Werkzeugkasten um diese drei Zelte zu zeichnen.
      courseA_artist_loops_challenge2a_2019: |-
        _"Hilf mir den Zeltplatz fertigzustellen!"_

        Benutze die Blöcke im Werkzeugkasten um diese drei Zelte zu zeichnen.
      courseA_collector_loops1: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie umher und sammle so viele Schätze wie du kannst.

        Ziehe Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du einen Schatz einsammeln kannst. Du brauchst mindestens einen Diamant um dieses Level zu bestehen.
      courseA_collector_loops12: |-
        _"Heureka!  Hol dir so viele Schätze wie möglich!"_\
        (Du musst nicht alle einsammeln.)
      courseA_collector_loops12_2018: |-
        _"Heureka!  Hol dir so viele Schätze wie möglich!"_\
        (Du musst nicht alle einsammeln.)
      courseA_collector_loops12_2019: |-
        _"Heureka!  Hol dir so viele Schätze wie möglich!"_\
        (Du musst nicht alle einsammeln.)
      courseA_collector_loops1_2018: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie umher und sammle so viele Schätze wie du kannst.

        Ziehe Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du einen Schatz einsammeln kannst. Du brauchst mindestens einen Diamant um dieses Level zu bestehen.
      courseA_collector_loops1_2019: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie umher und sammle so viele Schätze wie du kannst.

        Ziehe Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du einen Schatz einsammeln kannst. Du brauchst mindestens einen Diamant um dieses Level zu bestehen.
      courseA_collector_loops2: |-
        Sammle alle Schätze ein! Bewege Laurel zu jedem Edelstein und benutze dann diesen Block:
        <xml><block type="collector_collect"/></xml>
      courseA_collector_loops2_2018: 'Hole alle drei Haufen! Bewege Laurel auf jedes
        Stück des Schatzes und benutze dann diesen Baustein: <xml><block type="collector_collect"/></xml>'
      courseA_collector_loops2_2019: 'Sammle alle drei Schätze ein! Bewege Laurel
        zu jedem Edelstein und benutze dann diesen <xml><block type="collector_collect"
        block-text="get treasure"/></xml> Baustein. '
      courseA_collector_loops3: Wie kann Laurel alle fünf Schätze einsammeln, wenn
        sie nur einen <xml><block type="maze_moveEast"/></xml> Block benutzt?
      courseA_collector_loops3_2018: Wie kann Laurel alle fünf Schätze einsammeln,
        wenn sie nur einen <xml><block type="maze_moveEast"/></xml> Block benutzt?
      courseA_collector_loops3_2019: Wie kann Laurel alle fünf Schätze einsammeln,
        wenn sie nur einen <xml><block type="maze_moveEast" block-text="move east"/></xml>
        Block benutzt?
      courseA_collector_loops_challenge1: _"Kannst du mir helfen Fehler im Code zu
        finden? Ich weiß, welchen Weg ich gehen will, aber ich bin mir nicht sicher,
        wieviel Schritte ich machen muss."_
      courseA_collector_loops_challenge1_2018: _"Kannst du mir helfen Fehler im Code
        zu finden? Ich weiß, welchen Weg ich gehen will, aber ich bin mir nicht sicher,
        wieviel Schritte ich machen muss."_
      courseA_collector_loops_challenge1_2019: _"Kannst du mir helfen Fehler im Code
        zu finden? Ich weiß, welchen Weg ich gehen will, aber ich bin mir nicht sicher,
        wieviel Schritte ich machen muss."_
      courseA_collector_preLoops1: "Das ist Laurel, die Abenteurerin! \n\nDrücken
        Sie \"Ausführen\", um zu sehen, wie sie zum Schatz geht und ihn sich schnappt."
      courseA_collector_preLoops2: "Großartig!  Jetzt können Sie selbst Code hinzufügen!
        \ \n\nRaste den ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
        Baustein am unteren Rand des Programms ein und klicke auf \"Ausführen\"!"
      courseA_collector_preLoops3: Um den Schatz zu ergattern, raste zwei ![](https://images.code.org/54c206b62a02f1d7ea8f1bee52664ecb-image-1508905670742.25.37.png)
        Bausteine und einen ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
        Baustein an den unteren Rand des Programms ein und klicke auf "Ausführen"!
      courseA_collector_preLoops7: |-
        Sammle alle Schätze ein! Bewege Laurel zu jedem Edelstein und benutze dann diesen Block:
        <xml><block type="collector_collect"/></xml>
      courseA_harvester_loops1: Hilf dem Mähdrescher, den ganzen Mais zu pflücken!
      courseA_harvester_loops10: Hilf der Erntemaschine alle fünf Ähren Mais zu pflücken!
      courseA_harvester_loops10_2019: Hilf der Erntemaschine alle fünf Ähren Mais
        zu pflücken!
      courseA_harvester_loops11: 'Versuchs noch einmal alleine! '
      courseA_harvester_loops11_2019: 'Versuchs noch einmal alleine! '
      courseA_harvester_loops1_2019: Hilf dem Mähdrescher, den ganzen Mais zu pflücken!
      courseA_harvester_loops2: Der Mähdrescher muss den ganzen Mais pflücken! Erkennst
        du ein Muster?
      courseA_harvester_loops2_2019: Der Mähdrescher muss den ganzen Mais pflücken!
        Erkennst du ein Muster?
      courseA_harvester_loops3: Kannst du den ganzen Mais mit nur **einem** Gehe-Baustein
        pflücken?
      courseA_harvester_loops3_2019: Kannst du den ganzen Mais mit nur **einem** Gehe-Baustein
        pflücken?
      courseA_harvester_loops4: |-
        _"Ich brauche Hilfe, um zu herausfinden, was hier falsch läuft!"_

        Kannst du dem Mähdrescher helfen, den Fehler in ihrem Code zu finden?
      courseA_harvester_loops4_2019: |-
        _"Ich brauche Hilfe, um zu herausfinden, was hier falsch läuft!"_

        Kannst du dem Mähdrescher helfen, den Fehler in ihrem Code zu finden?
      courseA_harvester_loops5: Versuchs selbst! Kannst du auch den Mais am Ende pflücken?
      courseA_harvester_loops5_2019: Versuchs selbst! Kannst du auch den Mais am Ende
        pflücken?
      courseA_harvester_loops5a: Sieh dir den ganzen Mais an? Kannst du ihn ganz alleine
        ernten?
      courseA_harvester_loops5a_2019: Sieh dir den ganzen Mais an? Kannst du ihn ganz
        alleine ernten?
      courseA_harvester_loops5b: Kannst du deinen Code ändern, damit der Mähdrescher
        den gesamten Mais pflückt?
      courseA_harvester_loops5b_2019: Kannst du deinen Code ändern, damit der Mähdrescher
        den gesamten Mais pflückt?
      courseA_harvester_loops6: Du brauchst **einen**<xml><block type="maze_moveWest"
        block-text="move west"></block></xml> Baustein und **einen**<xml><block type="maze_moveNorth"
        block-text="move north"></block></xml> Baustein, um dieses Puzzle zu lösen!
      courseA_harvester_loops6_2019: Du brauchst **einen**<xml><block type="maze_moveWest"
        block-text="move west"></block></xml> Baustein und **einen**<xml><block type="maze_moveNorth"
        block-text="move north"></block></xml> Baustein, um dieses Puzzle zu lösen!
      courseA_harvester_loops7: 'Probier es selbst aus! '
      courseA_harvester_loops7_2019: 'Probier es selbst aus! '
      courseA_harvester_loops9: Kannst du herausfinden, wie man den _gesamten_ Mais
        pflückt?
      courseA_harvester_loops9_2019: Kannst du herausfinden, wie man den _gesamten_
        Mais pflückt?
      courseA_harvester_seq1: Hilf dem Mähdrescher, den Mais zu finden!
      courseA_harvester_seq10: Der Mähdrescher muss den ganzen Mais pflücken! Erkennst
        du ein Muster?
      courseA_harvester_seq10_2019: Der Mähdrescher muss den ganzen Mais pflücken!
        Erkennst du ein Muster?
      courseA_harvester_seq11: Versuche es selbst! Pflück den ganzen Mais.
      courseA_harvester_seq11_2019: Versuche es selbst! Pflück den ganzen Mais.
      courseA_harvester_seq12: "_Danke, dass du mir hilfst!_ \n\nPflück den ganzen
        Mais."
      courseA_harvester_seq12_2019: "_Danke, dass du mir hilfst!_ \n\nPflück den ganzen
        Mais."
      courseA_harvester_seq13: Hilf der Erntemaschine Mais zu pflücken!
      courseA_harvester_seq13_2019: Hilf der Erntemaschine Mais zu pflücken!
      courseA_harvester_seq1_2019: Hilf dem Mähdrescher, den Mais zu finden!
      courseA_harvester_seq2: 'Verwende <xml><block type="maze_moveWest"/></xml> **drei**
        mal, um den Mähdrescher zum Mais zu bringen! '
      courseA_harvester_seq2_2019: 'Benutze **drei** <xml><block type="maze_moveWest"
        block-text="move west"/></xml> Bausteine, um die Erntemaschine zum Mais zu
        bringen! '
      courseA_harvester_seq3: Benutzer <xml><block type="maze_moveNorth"/></xml> **drei**
        mal, um den Mähdrescher zum Mais zu bringen! Vergiss nicht, den Mais am Ende
        zu pflücken.
      courseA_harvester_seq3_2019: Benutze **drei** <xml><block type="maze_moveNorth"
        block-text="move north"/></xml> Bausteine, um die Erntemaschine zum Mais zu
        bringen! Vergiss nicht, den Mais am Ende aufzunehmen.
      courseA_harvester_seq4: Füge _einen_ Baustein hinzu, um dem Mähdrescher zu helfen,
        den Mais zu sammeln.
      courseA_harvester_seq4_2019: Füge _einen_ Baustein hinzu, um dem Mähdrescher
        zu helfen, den Mais zu sammeln.
      courseA_harvester_seq5: Kannst du herausfinden, was mit diesem Code nicht stimmt?
        Hilf dem Mähdrescher den Mais zu pflücken!
      courseA_harvester_seq5_2019: Kannst du herausfinden, was mit diesem Code nicht
        stimmt? Hilf dem Mähdrescher den Mais zu pflücken!
      courseA_harvester_seq6: Versuche es selbst!
      courseA_harvester_seq6_2019: Versuche es selbst!
      courseA_harvester_seq7: Man muss sich in zwei Richtungen bewegen, um zum Mais
        zu gelangen! Hilf dem Mähdrescher die richtige Richtung zu finden.
      courseA_harvester_seq7_2019: Man muss sich in zwei Richtungen bewegen, um zum
        Mais zu gelangen! Hilf dem Mähdrescher die richtige Richtung zu finden.
      courseA_harvester_seq8: Jetzt muss der Erntemaschine zweimal Mais pflücken!
      courseA_harvester_seq8_2019: Jetzt muss der Erntemaschine zweimal Mais pflücken!
      courseA_harvester_seq9: Füge zwei Blöcke hinzu, um dieses Puzzle zu beenden!
      courseA_harvester_seq9_2019: Füge zwei Blöcke hinzu, um dieses Puzzle zu beenden!
      courseA_maze_ramp2_2018: Füge die beiden <xml><block type="maze_moveEast"/></xml>
        Bausteine an den <xml><block type="when_run"/></xml> Baustein an, um Deinen
        Code zu vervollständigen. Klicke dann auf "▶ Ausführen".
      courseA_maze_ramp2_2019: Füge die beiden<xml><block type="maze_moveEast" block-text="move
        east"/></xml> an den<xml><block type="when_run" block-text="when run"/></xml>
        an, um Deinen Code zu vervollständigen. Klicke dann auf "▶ Ausführen".
      courseA_maze_ramp3a_2018: Nimm einen <xml><block type="maze_moveNorth"/></xml>
        Baustein aus der Toolbox und füge ihn unten in die anderen Bausteine ein,
        um diesen Code abzuschließen. Dann klicke auf "▶ Ausführen".
      courseA_maze_ramp3a_2019: Nimm einen <xml><block type="maze_moveNorth" block-text="move
        north"/></xml> Baustein aus der Toolbox und füge ihn unten in die anderen
        Bausteine ein, um diesen Code abzuschließen. Dann klicke auf "▶ Ausführen".
      courseA_maze_ramp3b_2018: "Es gibt einen zusätzlichen Baustein am Ende dieses
        Codes!  \n\nZieh ihn zurück in den Werkzeugkasten, um diesen wegzuwerfen."
      courseA_maze_ramp3b_2019: "Es gibt einen zusätzlichen Baustein am Ende dieses
        Codes!  \n\nZieh ihn zurück in den Werkzeugkasten, um diesen wegzuwerfen."
      courseA_maze_ramp4a_2018: Kannst du herausfinden, welchen Block du am Ende der
        anderen Blöcke hinzufügen musst, um diesen Code zu vervollständigen?
      courseA_maze_ramp4a_2019: Kannst du herausfinden, welchen Block du am Ende der
        anderen Blöcke hinzufügen musst, um diesen Code zu vervollständigen?
      courseA_maze_ramp5a_2018: Probiere dies ganz alleine aus!
      courseA_maze_ramp5a_2019: Probiere dies ganz alleine aus!
      courseA_maze_seq1: _"Nimm diese Bausteine zu Hilfe und versuche, mich zum Schwein
        zu führen!"_
      courseA_maze_seq10: |-
        **Herausforderung:** Geh um das TNT herum, um den Vogel zum Schwein zu bringen!

        ![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)
      courseA_maze_seq10_2018: "**Herausforderung:** Vermeide das TNT, um den Vogel
        zum Schwein zu bringen!"
      courseA_maze_seq10_2019: "**Herausforderung:** Vermeide das TNT, um den Vogel
        zum Schwein zu bringen!"
      courseA_maze_seq11: |-
        Es ist zeit für eine kleinere Aufgabe! Gehe zuerst in eine Richtung und dann in eine andere, um den Vogel zum Schwein zu bringen.

        ![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)
      courseA_maze_seq11_2018: Es ist zeit für eine kleinere Aufgabe! Gehe zuerst
        in eine Richtung und dann in eine andere, um den Vogel zum Schwein zu bringen.
      courseA_maze_seq11_2019: Es ist zeit für eine kleinere Aufgabe! Gehe zuerst
        in eine Richtung und dann in eine andere, um den Vogel zum Schwein zu bringen.
      courseA_maze_seq12: |-
        Hole dir das Schwein!

        ![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)
      courseA_maze_seq12_2018: Hole dir das Schwein!
      courseA_maze_seq12_2019: Hole dir das Schwein!
      courseA_maze_seq13_2019: Hole dir das Schwein auf irgendeine Art und Weise!
      courseA_maze_seq1_2018: _"Nimm diese Bausteine zu Hilfe und versuche, mich zum
        Schwein zu führen!"_
      courseA_maze_seq1_2019: _"Nimm diese Bausteine zu Hilfe und versuche, mich zum
        Schwein zu führen!"_
      courseA_maze_seq2: |-
        _"Ein Fehler! Bring den Code in Ordnung um mich zum Schwein zu bringen."_

        ![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)
      courseA_maze_seq3: |-
        _"Bring den Code in Ordnung um mich zum Schwein zu bringen!"_

        ![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)
      courseA_maze_seq4: |-
        _"Irgendwas stimmt hier nicht."_

        ENTFERNE einen Block um den Vogel zum Schwein zu bringen!

        ![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)
      courseA_maze_seq5: |-
        Versuche diese Aufgabe von Anfang an allein zu schaffen.

        ![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)
      courseA_maze_seq5_2018: Probiere dies hier mal aus.
      courseA_maze_seq5_2019: Probiere dies hier mal aus.
      courseA_maze_seq5a_2018: |-
        _"Hier Schweinchen, hier!"_

        Was kannst du am Ende dieses Codes hinzufügen, um den Vogel zum Schwein zu bringen?
      courseA_maze_seq5a_2019: |-
        _"Hier Schweinchen, hier!"_

        Was kannst du am Ende dieses Codes hinzufügen, um den Vogel zum Schwein zu bringen?
      courseA_maze_seq6: |-
        Gehe zuerst in eine Richtung und dann in eine andere, um den Vogel zum Schwein zu bringen!

        ![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)
      courseA_maze_seq6_2018: Gehe zuerst in eine Richtung und dann in eine andere,
        um den Vogel zum Schwein zu bringen!
      courseA_maze_seq6_2019: Gehe zuerst in eine Richtung und dann in eine andere,
        um den Vogel zum Schwein zu bringen!
      courseA_maze_seq7: |-
        Finde heraus was fehlt, und füge dann Blöcke hinzu, um den Vogel zum Schwein zu bringen!

        ![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)
      courseA_maze_seq8: |-
        Löse dieses Level und bring den Vogel zum Schwein!

        ![expandable](https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)
      courseA_maze_seq8_2018: Löse dieses Level und bring den Vogel zum Schwein!
      courseA_maze_seq8_2019: Löse dieses Level und bring den Vogel zum Schwein!
      courseA_maze_seq9: |-
        **Herausforderung:**Repariere dieses Level, indem Du Blöcke hinzufügst um den Vogel zum Schwein zu bewegen!

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq_challenge1: Beseitige die Fehler in diesem Level. Entferne
        die Blöcke, welche nicht passen, und füge die fehlenden Blöcke hinzu. Bring
        den Vogel zum Schwein!
      courseA_maze_seq_challenge1_2018: Beseitige die Fehler in diesem Level. Entferne
        die Blöcke, welche nicht passen, und füge die fehlenden Blöcke hinzu. Bring
        den Vogel zum Schwein!
      courseA_maze_seq_challenge1_2019: Beseitige die Fehler in diesem Level. Entferne
        die Blöcke, welche nicht passen, und füge die fehlenden Blöcke hinzu. Bring
        den Vogel zum Schwein!
      courseA_maze_seq_challenge2_2019: Folge dem Weg, der den Vogel zum Schwein bringt.
        Vermeide das TNT, sonst fliegen die Federn!
      courseA_playLab_events1_2019: Dies ist ein Play Lab Level. Bewegen Sie Baustein
        in den Arbeitsbereich und sehen Sie, was passiert!
      courseA_playLab_events2_2019: Jorge, der Hund, will "Hallo." sagen. Kannst du
        ihm helfen?
      courseA_playLab_events3: |-
        Hilf Jorge, dem Hund, sich zu bewegen indem du den <xml><block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">8</title>
          </block></xml> Block mit dem <xml><block type="studio_whenArrow">
            <title name="VALUE">left</title>
          </block></xml> Ereignis-Block, der schon im Arbeitsbereich ist, verbindest.

        Bring Jorge zur Fahne um dieses Level zu beenden!
      courseA_playLab_events3_2018: |-
        Hilf Jorge, dem Hund, sich zu bewegen indem du den <xml><block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">8</title>
          </block></xml> Block mit dem <xml><block type="studio_whenArrow">
            <title name="VALUE">left</title>
          </block></xml> Ereignis-Block, der schon im Arbeitsbereich ist, verbindest.

        Bring Jorge zur Fahne um dieses Level zu beenden!
      courseA_playLab_events3_2019: |-
        Hilf Jorge, dem Hund, sich zu bewegen indem du den <xml><block type="studio_move" block-text="move dog west">
            <title name="SPRITE">1</title>
            <title name="DIR">8</title>
          </block></xml> Block mit dem <xml><block type="studio_whenArrow" block-text="when left arrow">
            <title name="VALUE">left</title>
          </block></xml> Ereignis-Block, der schon im Arbeitsbereich ist, verbindest.

        Bring Jorge zur Fahne um dieses Level zu beenden!
      courseA_playLab_events4: Füge jetzt mehr Blöcke hinzu, um Jorge nach rechts
        zu bewegen wenn die Pfeiltaste nach 'rechts' gedrückt wird.
      courseA_playLab_events4_2018: Füge nun einen weiteren Ereignisbaustein hinzu,
        damit sich Jorge nach rechts bewegt, wenn die rechte Pfeiltaste angeklickt
        wird.
      courseA_playLab_events4_2019: Füge nun einen weiteren Ereignisbaustein hinzu,
        damit sich Jorge nach rechts bewegt, wenn die rechte Pfeiltaste angeklickt
        wird.
      courseA_playLab_events5: Füge Ereignisse hinzu um Jorge nach oben und unten
        zu bewegen, wenn die 'oben' und 'unten' Pfeiltasten gedrückt werden.
      courseA_playLab_events5_2018: Füge Ereignisse hinzu um Jorge nach oben und unten
        zu bewegen, wenn die 'oben' und 'unten' Pfeiltasten gedrückt werden.
      courseA_playLab_events5_2019: Füge Ereignisse hinzu um Jorge nach oben und unten
        zu bewegen, wenn die 'oben' und 'unten' Pfeiltasten gedrückt werden.
      courseA_playLab_events6_2019: Mach das Ganze noch interessanter indem du den
        Hintergrund änderst oder einen zufälligen Ton abspielst, wenn auf Jorge geklickt
        wird.
      courseA_playLab_events7_2018: _Freispiel:_ Füge diesem Spiel alles hinzu, was
        du willst. Kannst du den Dinosaurier verschwinden lassen, wenn Jorge ihn trifft?
      courseA_playLab_events7_2019: _Freispiel:_ Füge diesem Spiel alles hinzu, was
        du willst. Kannst du den Dinosaurier verschwinden lassen, wenn Jorge ihn trifft?
      courseA_playlab_events_challenge1: |-
        Wenn du auf Olive klickst wird Robin erscheinen! Kannst du einen Code schreiben, damit auch die anderen Figuren erscheinen?

        Denk in dieser Aufgabe unbedingt daran, auf die Tipps zu klicken! Die Tipps werden dir helfen dieses Projekt Schritt-für-Schritt zu schaffen!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2018: |-
        Wenn du auf Olive klickst wird Robin erscheinen! Kannst du einen Code schreiben, damit auch die anderen Figuren erscheinen?

        Denk in dieser Aufgabe unbedingt daran, auf die Tipps zu klicken! Die Tipps werden dir helfen dieses Projekt Schritt-für-Schritt zu schaffen!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2019: |-
        Wenn du auf Olive klickst wird Robin erscheinen! Kannst du einen Code schreiben, damit auch die anderen Figuren erscheinen?

        Denk in dieser Aufgabe unbedingt daran, auf die Tipps zu klicken! Die Tipps werden dir helfen dieses Projekt Schritt-für-Schritt zu schaffen!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2: |-
        Gib jeder Figur etwas zu tun, wenn du auf sie klickst. Was werden die Tiere sagen? Was wird ich passieren?

        Denk in dieser Aufgabe unbedingt daran, auf die Tipps zu klicken. In den Tipps gibt es lustige Vorschläge zum Ausprobieren!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2_2018: |-
        Gib jeder Figur etwas zu tun, wenn du auf sie klickst. Was werden die Tiere sagen? Was wird ich passieren?

        Denk in dieser Aufgabe unbedingt daran, auf die Tipps zu klicken. In den Tipps gibt es lustige Vorschläge zum Ausprobieren!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2_2019: |-
        Gib jeder Figur etwas zu tun, wenn du auf sie klickst. Was werden die Tiere sagen? Was wird ich passieren?

        Denk in dieser Aufgabe unbedingt daran, auf die Tipps zu klicken. In den Tipps gibt es lustige Vorschläge zum Ausprobieren!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseB_Scrat_ramp1_2018: Damit Scrat an die Eichel kommt, hänge den <xml><block
        type="maze_moveEast"/></xml> Baustein an das Ende des <xml><block type="when_run"/></xml>
        Baustein ein, dann drücke "▶ Ausführen"!
      courseB_Scrat_ramp1_2019: Damit Scrat an die Eichel kommt, hänge den <xml><block
        type="maze_moveEast" block-text="move East"/></xml> Baustein an das Ende des
        <xml><block type="when_run" block-text="when run"/></xml> Baustein ein, dann
        drücke "▶ Ausführen"!
      courseB_Scrat_ramp3a_2018: Nimm einen <xml><block type="maze_moveNorth"/></xml>
        Baustein aus der Toolbox und füge ihn unten in die anderen Bausteine ein,
        um diesen Code abzuschließen. Dann klicke auf "▶ Ausführen".
      courseB_Scrat_ramp3a_2019: Nimm einen <xml><block type="maze_moveNorth" block-text="move
        north"/></xml> Baustein aus der Toolbox und füge ihn unten in die anderen
        Bausteine ein, um diesen Code abzuschließen. Dann klicke auf "▶ Ausführen".
      courseB_Scrat_ramp4a_2018: Kannst du herausfinden, welchen Block du am Ende
        der anderen Blöcke hinzufügen musst, um diesen Code zu vervollständigen?
      courseB_Scrat_ramp4a_2019: Kannst du herausfinden, welchen Block du am Ende
        der anderen Blöcke hinzufügen musst, um diesen Code zu vervollständigen?
      courseB_Scrat_ramp5a_2018: Probiere dies ganz alleine aus!
      courseB_Scrat_ramp5a_2019: Probiere dies ganz alleine aus!
      courseB_artist_loops1_2019: Dies ist eine neue Art von Aufgabe, sie hießt "Künstler".
        Spiele in diesem Level und zeichne etwas lustiges.
      courseB_artist_loops3_2019: Hilfe dem Künstler, eine Linie siebenmal zu zeichnen,
        um eine Gartenmauer zu bauen.
      courseB_artist_loops4_2019: Jetzt müssen wir den Boden für die Pflanzung vorbereiten.
        Finde die Fehler im Code und helfe mit den Boden vorzubereiten.
      courseB_artist_loops7: "**Aufgabe:** Es ist ein versteckter Garten! Lauf ein
        bisschen herum."
      courseB_artist_loops7_2018: "**Aufgabe:** Es ist ein versteckter Garten! Lauf
        ein bisschen herum."
      courseB_artist_loops7_2019: "**Aufgabe:** Es ist ein versteckter Garten! Lauf
        ein bisschen herum."
      courseB_collector_loops1: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie umher und sammle so viele Schätze wie du kannst.

        Ziehe Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du einen Schatz einsammeln kannst. Du brauchst mindestens einen Diamant um dieses Level zu bestehen.
      courseB_collector_loops10_2019: Hilf Laurel, alle Schätze aus dieser Höhle zu
        holen.
      courseB_collector_loops11_2019: Heureka!  Hol dir so viele Schätze wie möglich!
      courseB_collector_loops2_2019: |-
        Bewege Laurel auf den Schatz und benutze dann den Block<xml><block type="collector_collect" block-text="get treasure"/></xml>, um ihn aufzunehmen.

        Sammle alle vier Edelsteine um dieses Level zu schaffen.
      courseB_collector_loops3: Wie kann Laurel alle fünf Schätze einsammeln, wenn
        sie nur einen <xml><block type="maze_moveEast"/></xml> Block benutzt?
      courseB_collector_loops3_2018: Wie kann Laurel alle fünf Schätze einsammeln,
        wenn sie nur einen <xml><block type="maze_moveEast"/></xml> Block benutzt?
      courseB_collector_loops3_2019: Wie kann Laurel alle fünf Schätze einsammeln,
        wenn sie nur einen <xml><block type="maze_moveEast" block-text="move east"/></xml>
        Block benutzt?
      courseB_collector_loops4_2019: Repariere Laurels Weg, um alles Gold zu bekommen!
      courseB_collector_loops6_2019: Finden sie den Code heraus, um Laurel zu helfen
        und all das Gold zu kassieren!
      courseB_collector_loops7_2019: Schreibe den Code um den ganzen Schatz zu erhalten.
      courseB_collector_loops8_2019: "**Aufgabe:** Das Gold führt die gesamte Treppe
        herunter! Schreibe den Code um Laurel zu helfen, alles zu bekommen."
      courseB_collector_loops9_2019: _"Hilf mir all das Gold aus diesen tiefen Tal
        zu bekommen."_
      courseB_collector_loops_challenge2a: |-
        _"Lass uns den Schatz holen!"_

        Hilf Laurel mindestens **5** Schätze einzusammeln um diese Aufgabe zu beenden.
      courseB_collector_loops_challenge2a_2018: |-
        _"Lass uns den Schatz holen!"_

        Hilf Laurel mindestens **5** Schätze einzusammeln um diese Aufgabe zu beenden.
      courseB_collector_loops_challenge2a_2019: |-
        _"Lass uns den Schatz holen!"_

        Hilf Laurel mindestens **5** Schätze einzusammeln um diese Aufgabe zu beenden.
      courseB_iceage_loops1: Hilf Scrat über das glitschige Eis, um an die Eichel
        zu gelangen!
      courseB_iceage_loops10: Hilf Scrat, den ganzen Weg zur Eichel zu schaffen!
      courseB_iceage_loops10_2019: Hilf Scrat, den ganzen Weg zur Eichel zu schaffen!
      courseB_iceage_loops11: Hilf Skrat zur Eichel zu gelangen!
      courseB_iceage_loops11_2019: Hilf Skrat zur Eichel zu gelangen!
      courseB_iceage_loops12: Gehe zur Eichel, wie du kannst!
      courseB_iceage_loops12_2019: Gehe zur Eichel, wie du kannst!
      courseB_iceage_loops1_2019: Hilf Scrat über das glitschige Eis, um an die Eichel
        zu gelangen!
      courseB_iceage_loops4: Füge einen weiteren Block hinzu, um Scrat bis zur Eichel
        zu bekommen!
      courseB_iceage_loops4_2019: Füge einen weiteren Block hinzu, um Scrat bis zur
        Eichel zu bekommen!
      courseB_iceage_loops6: Kannst du eine Schleife hinzufügen, um an die Eichel
        zu kommen?
      courseB_iceage_loops6_2019: Kannst du eine Schleife hinzufügen, um an die Eichel
        zu kommen?
      courseB_iceage_loops7: 'Scrat möchte wirklich gern zur Eichel kommen! '
      courseB_iceage_loops7_2019: 'Scrat möchte wirklich gern zur Eichel kommen! '
      courseB_iceage_loops8: 'Kannst du diesen Code reparieren? '
      courseB_iceage_loops8_2019: 'Kannst du diesen Code reparieren? '
      courseB_iceage_loops9: Die Eichel ist so weit weg! Kannst du Schleifen benutzen,
        um Scrat zu helfen, dorthin zu gelangen?
      courseB_iceage_loops9_2019: Die Eichel ist so weit weg! Kannst du Schleifen
        benutzen, um Scrat zu helfen, dorthin zu gelangen?
      courseB_maze_seq10_2019: Behebe die Fehler, um Scrat zur Eichel zu bringen.
      courseB_maze_seq11_2019: Es ist an Dir!  Bring Scrat zur Eichel.
      courseB_maze_seq12_2019: Jetzt bekomme das Schwein auf irgendeine Art und Weise!
      courseB_maze_seq3: _"Repariere den Code, damit ich das Schwein bekomme!_"
      courseB_maze_seq4_2019: Benutze **2** Bewegungsbausteine, um den Scrat zur Eichel
        zu bringen.
      courseB_maze_seq5_2019: Dieses Rätsel ist ein wenig knifflig!
      courseB_maze_seq6_2019: Bewege dich in eine Richtung, dann in eine andere, um
        Scrat zur Eichel zu bringen!
      courseB_maze_seq7_2019: Finde heraus, was fehlt und füge dann Blöcke hinzu,
        damit Scrat an die Eichel kommt!
      courseB_maze_seq8_2019: Du bist dran!  Was musst du tun, um Scrat zur Eichel
        zu bringen?
      courseB_starWars_prog11: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Mach weiter!"_'
      courseB_starWars_prog11_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Mach weiter!"_'
      courseB_starWars_prog11_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Mach weiter!"_'
      courseB_starWars_prog7: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Hol''s dir!"_'
      courseB_starWars_prog7_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Hol''s dir!"_'
      courseB_starWars_prog7_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Hol''s dir!"_'
      courseC19_playLab_EOC2: "Verwende Bausteine wie Ereignisse und Aktionen, damit
        sich Ihr Spieler bewegt, wenn du die Pfeiltasten drückst.  \n\nBringe den
        Spieler zu den Zielen, um dieses Rätsel zu lösen."
      courseC19_playLab_EOC4: |-
        Viele Charaktere und die Bewegung der Schauspieler ist ein großartiger Anfang für ein Spiel, aber wir müssen mehr tun, damit es sich wie ein echtes Spiel anfühlt. Lasst uns eine Punktzahl hinzufügen!

        Verwende Ereignisblöcke wie den `Wenn der Schauspieler berührt...`, um die Punktzahl zu ändern oder das Spiel zu gewinnen. Erreiche 5 Punkte oder gewinne das Spiel, um dieses Rätsel zu lösen.
      courseC19_playLab_EOC5: Tolle Arbeit! Du hast alle grundlegenden Komponenten
        für ein funktionierendes Spiel. Verbringe nun Zeit damit, sicherzustellen,
        dass das Spiel so funktioniert, wie du es dir vorstellst. Wenn du fertig bist,
        klicke "Fertig"!
      courseC_PlayLab_events6_2019: Schreibe nun ein Programm, um Waddles den Pinguin
        dazu zu bringen, sich mit den Tasten hoch / runter / links / rechts zu bewegen,
        um alle Ziele zu treffen!
      courseC_PlayLab_eventsA_embed_2019: Lasst uns ein Spiel spielen. Erreiche 5
        Punkte, indem du den Pinguin zum Oktopus bewegst.
      courseC_PlayLab_events_challenge1_2018: |-
        Benutze einen neuen Baustein, damit sich die Waddles automatisch zum Start zurückbewegen, wenn er in den Dinosaurier läuft und einen Punkt erzielt. Dies wird dein Spiel herausfordernder und unterhaltsamer machen!

        Spiele das Spiel und bewege die Waddles mit den Pfeilen, bis du 5 oder mehr Punkte bekommst. Um diese Herausforderung zu meistern, muss Waddles in die Position "Mitte links" des Bildschirms gebracht werden.
      courseC_PlayLab_events_challenge1_2019: |-
        Benutze einen neuen Baustein, damit sich die Waddles automatisch zum Start zurückbewegen, wenn er in den Dinosaurier läuft und einen Punkt erzielt. Dies wird dein Spiel herausfordernder und unterhaltsamer machen!

        Spiele das Spiel und bewege die Waddles mit den Pfeilen, bis du 5 oder mehr Punkte bekommst. Um diese Herausforderung zu meistern, muss Waddles in die Position "Mitte links" des Bildschirms gebracht werden.
      courseC_artist_loop1: "Fantastisch!  \n\nLass uns etwas Stil hinzufügen, indem
        wir den Pinsel mit dem `set pattern` Baustein wechseln, bevor unsere Schleife
        beginnt."
      courseC_artist_loop1_2018: "_\"Fantastisch!\"\"_ \n\nLasst uns etwas Stil hinzufügen,
        indem wir den Pinsel mit dem<xml><block type=\"draw_line_style_pattern\">
        <title name=\"VALUE\">DEFAULT</title></block></xml> Baustein ändern, bevor
        unsere Schleife beginnt."
      courseC_artist_loop1_2019: "_\"Fantastisch!\"\"_ \n\nLasst uns etwas Stil hinzufügen,
        indem wir den Pinsel mit dem<xml><block type=\"draw_line_style_pattern\" block-text=\"set
        pattern\"> <title name=\"VALUE\">DEFAULT</title></block></xml> Baustein ändern,
        bevor unsere Schleife beginnt."
      courseC_artist_loops1a_2018: "**Freispiel:** Lasst uns etwas Größeres bauen,
        einen Schritt nach dem anderen!  \n\nBenutze den `springe zu 200 über 200
        runter` Baustein, um den Zeichner in die Mitte des Spielbereichs zu bringen,
        und benutze dann den Baustein `Zeichne einen Aufkleber`, um einen Vogel erscheinen
        zu lassen.  \n\n* * *\n\nDrücke \"Fertig stellen\", wenn du mit dem, was du
        gemacht hast, zufrieden bist."
      courseC_artist_loops1a_2019: |-
        **Freispiel:** Lasst uns etwas Größeres bauen, einen Schritt nach dem anderen!

        Bringe den Zeichner mit dem <xml> <block type="jump_to" block-text="jump to the middle center position"><title name="VALUE">13</title></block></xml> Baustein in die Mitte des Spielfeldes und verwenden dann den <xml><block type="sticker" block-text="draw sticker"><title name="VALUE">Beaver</title></block></xml> Baustein, um etwas erscheinen zu lassen.

        * * *

        Drücke "Fertig stellen", wenn du mit dem, was du gemacht hast, zufrieden bist.

        ![expandable](https://images.code.org/1435d3650553df44eba973572d409a50-image-1553096405891.png)
        ![expandable](https://images.code.org/6912d2144b90aa7087fe854742d1e8b9-image-1553096425394.png)
        ![expandable](https://images.code.org/8de9e1aa15fdfe30ffed763e0e1d6e04-image-1553096428531.png)
      courseC_artist_loops1b_2019: "Ändere die Richtung, in die Dein Aufkleber zeigt,
        indem du dem Code einen `Drehe`-Befehl hinzufügst. \n\n* * *\n\nDrücke \"Fertig
        stellen\", wenn du mit dem, was du gemacht hast, zufrieden bist.\n\n![expandable](https://images.code.org/30fe9d37758abd27055d9a6e5a890680-image-1553097358155.png)\n![expandable](https://images.code.org/61feed00662019b99ac774322231f084-image-1553097362176.png)\n![expandable](https://images.code.org/fd123bb703ea4c630218a12eb5994053-image-1553097354066.png)"
      courseC_artist_loops2a_2019: |-
        Verwende nun eine Schleife, um weitere Kopien Deines Aufklebers zu erstellen. Versuche, die Zahlenwerte für die Drehung zu ändern und wiederhole Bausteine, um verschiedene Muster zu erstellen.

        * * *

        Drücke "Fertig stellen", wenn du mit dem, was du gemacht hast, zufrieden bist.

        ![expandable](https://images.code.org/8b4352a1abe72419043d278752261b57-image-1553097917337.png)
        ![expandable](https://images.code.org/5211e2fe2852e25a884a790155ba47d5-image-1553097923167.png)
        ![expandable](https://images.code.org/0e3fbe8bbd20526cc735dfd26d2473ee-image-1553097925789.png)
      courseC_artist_loops3a_2019: "Das macht Spaß!  \n\nFüge nun einen zweiten Aufkleber
        direkt über dem ersten hinzu, um ein Bild wie das untenstehende zu erstellen.\n\n*
        * *\n\nDrücke \"Fertig stellen\", wenn du mit dem, was du gemacht hast, zufrieden
        bist.\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)\n![expandable](https://images.code.org/dd0e0eee69d37493c5ba584164316a9f-image-1553098351969.png)\n![expandable](https://images.code.org/880908899d8e6ceac8a8ce1bd0bf47eb-image-1553098355311.png)"
      courseC_artist_loops4a_2018: |-
        Editiere deinen Code so, dass du um 75 Pixel nach vorne springst, zwischen dem Stempeln des Vogels und des Schlägers. In diesem Rätsel stelle sicher, dass du innerhalb deiner Schleife zu 200 über 200 nach unten gesprungen bist, damit du in der Mitte bleibst!

        * * *

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
      courseC_artist_loops4a_2019: |-
        Bearbeite Deinen Code so, dass du zwischen den beiden Aufklebern vorwärts springst. In diesem Puzzle stelle sicher, dass du innerhalb der Schleife an Mitte gesprungen bist, um in der Mitte zu bleiben!

        * * *

        Drücke "Fertig stellen", wenn du mit dem, was du gemacht hast, zufrieden bist.

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
        ![expandable](https://images.code.org/5774170704916cfddcf2e98c2c01d718-image-1553099207939.png)
        ![expandable](https://images.code.org/9b016314df4aed5165c76282bab0cea1-image-1553099212229.png)
        ![expandable](https://images.code.org/2cf50b8e9ae75803f15908304c22a10b-image-1553099215987.png)
      courseC_artist_loops5a: |-
        Was passiert, wenn man einen oder beide Aufkleber durch eine andere Kreatur ersetzt?

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2018: |-
        Was passiert, wenn man einen oder beide Aufkleber durch eine andere Kreatur ersetzt?

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2019: |-
        Was passiert, wenn man einen oder beide Aufkleber durch eine andere Kreatur ersetzt?

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5b_2019: "Was passiert, wenn du dich vorwärts und rückwärts
        um 100, 200 oder 400 Pixel irgendwo innerhalb der Schleife bewegst?  \n\n-
        \  Versuche den Baustein `Setze Muster` zu verwenden bevor die Schleife beginnt,
        um ein Kunstwerk zu erstellen!\n\n* * *\n\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)\n![expandable](https://images.code.org/55285e9e5c5ae1cf1c895cc0bf92824d-image-1553100970790.png)\n![expandable](https://images.code.org/6b8e67db2a3b341bc56fa53f67c284c2-image-1553100974645.png)"
      courseC_artist_loops6a_2019: |-
        Füge einen dritten Aufkleber an beliebiger Stelle in der Schleife hinzu! Wie sieht es jetzt aus?

        -   Ändere das Muster auf deines Pinsels für mehr Vielfalt!

        * * *

        ![expandable](https://images.code.org/edc53f27379e018e61a6ab9dcc2717ea-image-1560984648573.png)
        ![expandable](https://images.code.org/c41b00a743f245f98d2cfb66cb18e771-image-1560984690182.png)
        ![expandable](https://images.code.org/4c8910f72a7f0cd81713ded7b866a883-image-1560984706203.png)
      courseC_artist_loops7a_2019: |-
        Versuche die `wiederhole`-Schleife so zu ändern, dass sie eine andere Anzahl von Malen ausführt wird.  Wie weit muss man sich drehen, um im Kreis zu gehen?

        -   Versuche zu ändern, wie oft du dich drehst.
            -   Versuche eine 60-Grad-Drehung, 6 mal
            -   Versuche eine 20-Grad-Drehung, 18 mal.

        * * *

        Das erste Bild verwendet einen Piraten, einen Ninja und eine Giraffe. Sie wiederholen 18 mal eine 20 Grad Drehung.

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
        ![expandable](https://images.code.org/9f28cb9b434b914846c3846bc6652f66-image-1560982666379.png)
        ![expandable](https://images.code.org/e9128684956504b0172708d63b65f93a-image-1560982686482.png)
        ![expandable](https://images.code.org/8e9cf52ecaf72678c65558f18f3e0d3e-image-1560982695632.png)
      courseC_artist_loopsPre1a: |-
        Und jetzt, setze diesen Code in eine ˋWiederholenˋ Schleife und wiederhole sie **6** mal.

        -   Siehst du, wir haben am Schluss des zu wiederholenden Codes ein 60 Grad Drehung eingesetzt, um eine volle Drehung zu erhalten.
      courseC_artist_loopsPre1a_2018: |-
        Und jetzt, setze diesen Code in eine ˋWiederholenˋ Schleife und wiederhole sie **6** mal.

        -   Siehst du, wir haben am Schluss des zu wiederholenden Codes ein 60 Grad Drehung eingesetzt, um eine volle Drehung zu erhalten.
      courseC_artist_loopsPre1a_2019: |-
        Und jetzt, setze diesen Code in eine ˋWiederholenˋ Schleife und wiederhole sie **6** mal.

        -   Siehst du, wir haben am Schluss des zu wiederholenden Codes ein 60 Grad Drehung eingesetzt, um eine volle Drehung zu erhalten.
      courseC_artist_loopsPrePre1a: |-
        Benutze den <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml> Block um den Künstler in die Mitte des Spielbereichs zu bringen.\
        Male dann eine 50 Pixel lange Linie mit dem <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">50</title></block></xml> Block.
      courseC_artist_loopsPrePre1a_2018: |-
        ### Der Zeichner ist an der falschen Stelle!

        Benutze den Baustein <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml>, um den Zeichner in die Mitte des Spielbereichs zu bringen.
        Zeichne dann eine 50 Pixel lange Linie mit dem Baustein <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">50</title></block></xml>.
      courseC_artist_loopsPrePre1a_2019: "Der Künstler ist an der falschen Stelle!
        \ \n\nBenutzen Sie den <xml><block type=\"jump_to_xy\" id=\"callMe\" block-text=\"jump
        to 200 over 200 down\"><title name=\"XPOS\">200</title><title name=\"YPOS\">200</title></block></xml>
        Baustein, um den Künstler in die Mitte des Spielbereichs zu bringen.\nZeichne
        dann eine 50 Pixel lange Linie mit dem <xml><block type=\"draw_move_by_constant\"
        block-text=\"move forward\"><title name=\"DIR\">moveForward</title><title
        name=\"VALUE\">50</title></block></xml> Baustein."
      courseC_artist_prog6_2018: |-
        _"Jetzt ein Schild für Belle!"_

        Zeichne dieses Quadrat mit 200 Pixel Seiten.
      courseC_artist_prog6_2019: |-
        _"Jetzt ein Schild für Belle!"_

        Zeichne dieses Quadrat mit 200 Pixel Seiten.
      courseC_collector_loops_challenge2: |-
        _„Lass uns zusammen nach Schätzen suchen!“_

        Hilf der Sammlerin mindestens **5** Schätze zu sammeln.
      courseC_collector_loops_challenge2_2018: |-
        _„Lass uns zusammen nach Schätzen suchen!“_

        Hilf der Sammlerin mindestens **5** Schätze zu sammeln.
      courseC_collector_loops_challenge2_2019: |-
        _„Lass uns zusammen nach Schätzen suchen!“_

        Hilf der Sammlerin mindestens **5** Schätze zu sammeln.
      courseC_collector_prog1: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie und sammle soviel Schätze wie möglich ein. Benutze den 'sammle' Block um die Schätze aufzuheben!

        Ziehe die Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du die Schätze einsammeln kannst. Du brauchst mindestens einen Schatz um dieses Level zu bestehen.
      courseC_collector_prog1_2018: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie und sammle soviel Schätze wie möglich ein. Benutze den 'sammle' Block um die Schätze aufzuheben!

        Ziehe die Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du die Schätze einsammeln kannst. Du brauchst mindestens einen Schatz um dieses Level zu bestehen.
      courseC_collector_prog1_2019: |-
        **Freies Spiel:** Das ist Laurel, die Abenteurerin! Bewege sie und sammle soviel Schätze wie möglich ein. Benutze den 'sammle' Block um die Schätze aufzuheben!

        Ziehe die Blöcke in den Arbeitsbereich und versuche herauszufinden, wie du die Schätze einsammeln kannst. Du brauchst mindestens einen Schatz um dieses Level zu bestehen.
      courseC_collector_prog2: Bewegen Laurel zum Schatz und benutze dann <xml><block
        type="collector_collect"/></xml> um ihn aufzuheben.
      courseC_collector_prog2_2018: Bewegen Laurel zum Schatz und benutze dann <xml><block
        type="collector_collect"/></xml> um ihn aufzuheben.
      courseC_collector_prog2_2019: Bewegen Laurel zum Schatz und benutze dann den
        <xml><block type="collector_collect" block-text="collect"/></xml> Baustein
        um ihn aufzunehmen.
      courseC_collector_prog3: |-
        _"Die Reihenfolge ist wichtig!"_

        Die Blöcke, die du brauchst, sind schon im Arbeitsbereich, aber noch nicht verbunden.\
        Ordne diese Blöcke so an, dass der Schatz eingesammelt wird, und löse damit die Aufgabe.
      courseC_collector_prog3_2018: |-
        _"Die Reihenfolge ist wichtig!"_

        Die Blöcke, die du brauchst, sind schon im Arbeitsbereich, aber noch nicht verbunden.\
        Ordne diese Blöcke so an, dass der Schatz eingesammelt wird, und löse damit die Aufgabe.
      courseC_collector_prog3_2019: |-
        _"Die Reihenfolge ist wichtig!"_

        Die Blöcke, die du brauchst, sind schon im Arbeitsbereich, aber noch nicht verbunden.\
        Ordne diese Blöcke so an, dass der Schatz eingesammelt wird, und löse damit die Aufgabe.
      courseC_collector_prog4: |-
        _"Die Reihenfolge ist wichtig!"_

        Die Blöcke, die du brauchst, sind schon im Arbeitsbereich, aber noch nicht verbunden.

        Ordne diese Blöcke so an, dass alle Schätze eingesammelt werden, und löse damit die Aufgabe.
      courseC_collector_prog4_2018: |-
        _"Die Reihenfolge ist wichtig!"_

        Die Blöcke, die du brauchst, sind schon im Arbeitsbereich, aber noch nicht verbunden.

        Ordne diese Blöcke so an, dass alle Schätze eingesammelt werden, und löse damit die Aufgabe.
      courseC_collector_prog4_2019: |-
        _"Die Reihenfolge ist wichtig!"_

        Die Blöcke, die du brauchst, sind schon im Arbeitsbereich, aber noch nicht verbunden.

        Ordne diese Blöcke so an, dass alle Schätze eingesammelt werden, und löse damit die Aufgabe.
      courseC_collector_prog5: |-
        _"Hilf mir alle Schätze einzusammeln!"_

        Diese Blöcke sind in der falschen Reihenfolge angeordnet. Kannst du das in Ordnung bringen?
      courseC_collector_prog5_2018: |-
        _"Hilf mir alle Schätze einzusammeln!"_

        Diese Blöcke sind in der falschen Reihenfolge angeordnet. Kannst du das in Ordnung bringen?
      courseC_collector_prog5_2019: |-
        _"Hilf mir alle Schätze einzusammeln!"_

        Diese Blöcke sind in der falschen Reihenfolge angeordnet. Kannst du das in Ordnung bringen?
      courseC_collector_prog6: |-
        _"Hilf mir, alle Schätze einzusammeln!"_

        Dies Blöcke haben die Flasche Reihenfolge. Ordne sie richtig an um alle Schätze einzusammeln.
      courseC_collector_prog6_2018: |-
        _"Hilf mir, alle Schätze einzusammeln!"_

        Dies Blöcke haben die Flasche Reihenfolge. Ordne sie richtig an um alle Schätze einzusammeln.
      courseC_collector_prog6_2019: |-
        _"Hilf mir, alle Schätze einzusammeln!"_

        Dies Blöcke haben die Flasche Reihenfolge. Ordne sie richtig an um alle Schätze einzusammeln.
      courseC_collector_prog7: |-
        **Herausforderung:** _"Was ist hier los?"_

        Auch wenn wir alle in die richtige Reihenfolge bringen, fehlen immer noch Schätze.\
        Benutze weitere Blöcke aus der Werkzeugkiste um alle Schätze einzusammeln.
      courseC_collector_prog7_2018: |-
        **Herausforderung:** _"Was ist hier los?"_

        Auch wenn wir alle in die richtige Reihenfolge bringen, fehlen immer noch Schätze.\
        Benutze weitere Blöcke aus der Werkzeugkiste um alle Schätze einzusammeln.
      courseC_collector_prog7_2019: |-
        **Herausforderung:** _"Was ist hier los?"_

        Auch wenn wir alle in die richtige Reihenfolge bringen, fehlen immer noch Schätze.\
        Benutze weitere Blöcke aus der Werkzeugkiste um alle Schätze einzusammeln.
      courseC_collector_prog8: _"Bleib weiter so gut an der Arbeit! Hilf mir, alle
        Schätze einzusammeln."_
      courseC_collector_prog8_2018: _"Bleib weiter so gut an der Arbeit! Hilf mir,
        alle Schätze einzusammeln."_
      courseC_collector_prog8_2019: _"Bleib weiter so gut an der Arbeit! Hilf mir,
        alle Schätze einzusammeln."_
      courseC_collector_prog9: _"Lass uns alle Schätze sammeln!"_
      courseC_collector_prog9_2018: _"Lass uns alle Schätze sammeln!"_
      courseC_collector_prog9_2019: _"Lass uns alle Schätze sammeln!"_
      courseC_collector_prog_challenge2: In dieser Höhle gibt es 20 Schätze. Sammle
        mindestens **10** ein um diese Herausforderung zu beenden!
      courseC_collector_prog_challenge2_2018: In dieser Höhle gibt es 20 Schätze.
        Sammle mindestens **10** ein um diese Herausforderung zu beenden!
      courseC_collector_prog_challenge2_2019: In dieser Höhle gibt es 20 Schätze.
        Sammle mindestens **10** ein um diese Herausforderung zu beenden!
      courseC_data wizard: Drücke "Ausführen". Der Zauberer lässt Tiere erscheinen.
        Zähle sie. Was fällt dir auf?
      courseC_flappy_events1: "Hänge den `normal flattern`-Baustein an das Ereignis
        `beim Klicken` an und drücke dann \"Ausführen\".  \n\n* * *\n\nKlicke oder
        tippe auf die Abspielfläche, um Flappy zum Ziel zu bewegen."
      courseC_flappy_events10: "Erstellen Dein eigenes Flappy-Spiel! \n\nDu kannst
        das Aussehen und die Regeln ändern... sogar die Schwerkraft! \nWenn du fertig
        bist, klicke auf \"Fertigstellen\", um es mit Freunden auf deren Handys zu
        teilen."
      courseC_flappy_events10_2018: "Erstellen Dein eigenes Flappy-Spiel! \n\nDu kannst
        das Aussehen und die Regeln ändern... sogar die Schwerkraft! \nWenn du fertig
        bist, klicke auf \"Fertigstellen\", um es mit Freunden auf deren Handys zu
        teilen."
      courseC_flappy_events10_2019: "Erstellen Dein eigenes Flappy-Spiel! \n\nDu kannst
        das Aussehen und die Regeln ändern... sogar die Schwerkraft! \nWenn du fertig
        bist, klicke auf \"Fertigstellen\", um es mit Freunden auf deren Handys zu
        teilen."
      courseC_flappy_events1_2018: "Hänge den `normal flattern`-Baustein an das Ereignis
        `beim Klicken` an und drücke dann \"Ausführen\".  \n\n* * *\n\nKlicke oder
        tippe auf die Abspielfläche, um Flappy zum Ziel zu bewegen."
      courseC_flappy_events1_2019: "Hänge den `normal flattern`-Baustein an das Ereignis
        `beim Klicken` an und drücke dann \"Ausführen\".  \n\n* * *\n\nKlicke oder
        tippe auf die Abspielfläche, um Flappy zum Ziel zu bewegen."
      courseC_flappy_events6: "Klicke auf den Abwärtspfeil innerhalb des Bausteins
        \"schlage normal mit den Flügeln\", um eine andere Schlagkraft auszuwählen.
        \ \n\nSchau, ob du immer noch einen Punkt erzielen kannst, nachdem du Flappy
        Flappy jedes Mal, wenn du klickst, entweder einen kleineren oder größeren
        Betrag gemacht hast."
      courseC_flappy_events6_2018: "Klicke auf den Abwärtspfeil innerhalb des Bausteins
        \"schlage normal mit den Flügeln\", um eine andere Schlagkraft auszuwählen.
        \ \n\nSchau, ob du immer noch einen Punkt erzielen kannst, nachdem du Flappy
        Flappy jedes Mal, wenn du klickst, entweder einen kleineren oder größeren
        Betrag gemacht hast."
      courseC_flappy_events6_2019: "Klicke auf den Abwärtspfeil innerhalb des Bausteins
        \"schlage normal mit den Flügeln\", um eine andere Schlagkraft auszuwählen.
        \ \n\nSchau, ob du immer noch einen Punkt erzielen kannst, nachdem du Flappy
        Flappy jedes Mal, wenn du klickst, entweder einen kleineren oder größeren
        Betrag gemacht hast."
      courseC_flappy_events8: "Du kannst den Hintergrund unter jedem Ereignis einstellen,
        nicht nur zu Beginn des Spiels. \n\nProbiere eine **zufällige** Szene einzustellen,
        wenn andere Ereignisse eintreten...zum Beispiel beim Passieren eines Hindernisses."
      courseC_flappy_events8_2018: "Du kannst den Hintergrund unter jedem Ereignis
        einstellen, nicht nur zu Beginn des Spiels. \n\nProbiere eine **zufällige**
        Szene einzustellen, wenn andere Ereignisse eintreten...zum Beispiel beim Passieren
        eines Hindernisses."
      courseC_flappy_events8_2019: "Du kannst den Hintergrund unter jedem Ereignis
        einstellen, nicht nur zu Beginn des Spiels. \n\nProbiere eine **zufällige**
        Szene einzustellen, wenn andere Ereignisse eintreten...zum Beispiel beim Passieren
        eines Hindernisses."
      courseC_flappy_events9: Versuche, um die Dinge durcheinander zu bringen, anstatt
        das Spiel zu beenden, wenn Flappy auf ein Hindernis stößt, den Punktestand
        wieder auf 0 zu setzen.
      courseC_flappy_events9_2018: Versuche, um die Dinge durcheinander zu bringen,
        anstatt das Spiel zu beenden, wenn Flappy auf ein Hindernis stößt, den Punktestand
        wieder auf 0 zu setzen.
      courseC_flappy_events9_2019: Versuche, um die Dinge durcheinander zu bringen,
        anstatt das Spiel zu beenden, wenn Flappy auf ein Hindernis stößt, den Punktestand
        wieder auf 0 zu setzen.
      courseC_harvester_loops10: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops10_2018: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops10_2019: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops11: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops11_2018: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops11_2019: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops3: Sammle alle Kürbisse ein.
      courseC_harvester_loops3_2018: Sammle alle Kürbisse ein.
      courseC_harvester_loops3_2019: Sammle alle Kürbisse ein.
      courseC_harvester_loops5: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops5_2018: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops5_2019: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops6: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops6_2018: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops6_2019: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops7: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops7_2018: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops7_2019: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops9: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops9_2018: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops9_2019: Sammele den ganzen Mais und alle Kürbisse ein.
      courseC_harvester_loops_challenge2: Sammle den gesamten Salat ein. Vermeide
        die Bäume und Felder!
      courseC_harvester_loops_challenge2_2018: Sammle den gesamten Salat ein. Vermeide
        die Bäume und Felder!
      courseC_harvester_loops_challenge2_2019: Sammle den gesamten Salat ein. Vermeide
        die Bäume und Felder!
      courseC_maze_programming1: Für diese Aufgabe musst du alle Blöcke zusammensetzen,
        auf 'Ausführen' klicken und zusehen, wie es läuft!
      courseC_maze_programming1_2018: Für diese Aufgabe musst du alle Blöcke zusammensetzen,
        auf 'Ausführen' klicken und zusehen, wie es läuft!
      courseC_maze_programming1_2019: Für diese Aufgabe musst du alle Blöcke zusammensetzen,
        auf 'Ausführen' klicken und zusehen, wie es läuft!
      courseC_maze_programming2: Ziehe einen weiteren <xml><block type="maze_moveForward"/></xml>
        Block aus dem Werkzeugkasten um deinen Code fertigzustellen.
      courseC_maze_programming2_2018: Ziehe einen weiteren <xml><block type="maze_moveForward"/></xml>
        Block aus dem Werkzeugkasten um deinen Code fertigzustellen.
      courseC_maze_programming2_2019: Ziehe einen weiteren <xml><block type="maze_moveForward"
        block-text="move forward"/></xml> Block aus dem Werkzeugkasten um deinen Code
        fertigzustellen.
      courseC_maze_programming3: |-
        _"Dieses Schwein ärgert mich."_

        Hier ist ein Block, der den Vogel gegen etwas krachen läßt.\
        Wirf es weg indem du es von den grauen Blöcken losmachst und in den Werkzeugkasten zurückziehst.
      courseC_maze_programming3_2018: |-
        _"Dieses Schwein ärgert mich."_

        Hier ist ein Block, der den Vogel gegen etwas krachen läßt.\
        Wirf es weg indem du es von den grauen Blöcken losmachst und in den Werkzeugkasten zurückziehst.
      courseC_maze_programming3_2019: |-
        _"Dieses Schwein ärgert mich."_

        Hier ist ein Block, der den Vogel gegen etwas krachen läßt.\
        Wirf es weg indem du es von den grauen Blöcken losmachst und in den Werkzeugkasten zurückziehst.
      courseC_maze_programming6: |-
        _"Bleib ruhig und hilf mir das böse Schwein zu finden. Sonst könnte ich wütend werden!"_

        Bring den Vogel zum Schwein und vermeide das TNT.
      courseC_maze_programming6_2018: |-
        _"Bleib ruhig und hilf mir das böse Schwein zu finden. Sonst könnte ich wütend werden!"_

        Bring den Vogel zum Schwein und vermeide das TNT.
      courseC_maze_programming6_2019: |-
        _"Bleib ruhig und hilf mir das böse Schwein zu finden. Sonst könnte ich wütend werden!"_

        Bring den Vogel zum Schwein und vermeide das TNT.
      courseC_maze_programming7: |-
        _"Es ist Zeit wütend zu werden!"_

        **Herausforderung:** In diesem Code stecken viele Fehler. Du musst einige Blöcke entfernen und andere hinzufügen.
      courseC_maze_programming7_2018: |-
        _"Es ist Zeit wütend zu werden!"_

        **Herausforderung:** In diesem Code stecken viele Fehler. Du musst einige Blöcke entfernen und andere hinzufügen.
      courseC_maze_programming7_2019: |-
        _"Es ist Zeit wütend zu werden!"_

        **Herausforderung:** In diesem Code stecken viele Fehler. Du musst einige Blöcke entfernen und andere hinzufügen.
      courseC_maze_programming8: _"Bleib ruhig und hilf mir das böse Schwein zu finden."_
      courseC_maze_programming8_2018: _"Bleib ruhig und hilf mir das böse Schwein
        zu finden."_
      courseC_maze_programming8_2019: _"Bleib ruhig und hilf mir das böse Schwein
        zu finden."_
      courseC_maze_programming8_predict1: _"Bleib ruhig und hilf mir das böse Schwein
        zu finden."_
      courseC_maze_programming8_predict1_2018: _"Bleib ruhig und hilf mir das böse
        Schwein zu finden."_
      courseC_maze_programming8_predict1_2019: _"Bleib ruhig und hilf mir das böse
        Schwein zu finden."_
      courseC_maze_programming9: _"Und jetzt, hilf mir mich zum Schwein zu schleichen,
        egal auf welchem Weg!"_
      courseC_maze_programming9_2018: _"Und jetzt, hilf mir mich zum Schwein zu schleichen,
        egal auf welchem Weg!"_
      courseC_maze_programming9_2019: _"Und jetzt, hilf mir mich zum Schwein zu schleichen,
        egal auf welchem Weg!"_
      courseC_maze_programming_challenge1: 'Der Vogel braucht deine Hilfe! Das Schwein
        versteckt sich und das Ziel ist es, es zu finden. '
      courseC_maze_programming_challenge1_2018: 'Der Vogel braucht deine Hilfe! Das
        Schwein versteckt sich und das Ziel ist es, es zu finden. '
      courseC_maze_programming_challenge1_2019: 'Der Vogel braucht deine Hilfe! Das
        Schwein versteckt sich und das Ziel ist es, es zu finden. '
      courseC_maze_programming_challenge2: Manchmal gibt es mehr als eine Lösung für
        ein Problem. Manchmal ist es schneller, rückwärts zu gehen, als vorwärts!
      courseC_maze_programming_challenge2_2018: Manchmal gibt es mehr als eine Lösung
        für ein Problem. Manchmal ist es schneller, rückwärts zu gehen, als vorwärts!
      courseC_maze_programming_challenge2_2019: Manchmal gibt es mehr als eine Lösung
        für ein Problem. Manchmal ist es schneller, rückwärts zu gehen, als vorwärts!
      courseC_starWars_loops1: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Geh den Schrott sammeln, BB-8!"_

        Nimm 5 mal den gleichen Block um den Metallschrott zu sammeln. Metallschrott sieht so aus: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseC_starWars_loops10: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
         _"Los, BB-8!"_

        Du machst das super! Mach weiter so!
      courseC_starWars_loops10_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
         _"Los, BB-8!"_

        Du machst das super! Mach weiter so!
      courseC_starWars_loops10_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
         _"Los, BB-8!"_

        Du machst das super! Mach weiter so!
      courseC_starWars_loops11: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8!"_

        Du hast es fast geschafft! Suche dir dieses Mal einen Pfad, so wie du ihn magst!
      courseC_starWars_loops11_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8!"_

        Du hast es fast geschafft! Suche dir dieses Mal einen Pfad, so wie du ihn magst!
      courseC_starWars_loops11_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8!"_

        Du hast es fast geschafft! Suche dir dieses Mal einen Pfad, so wie du ihn magst!
      courseC_starWars_loops1_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Geh den Schrott sammeln, BB-8!"_

        Nimm 5 mal den gleichen Block um den Metallschrott zu sammeln. Metallschrott sieht so aus: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseC_starWars_loops1_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Geh den Schrott sammeln, BB-8!"_

        Nimm 5 mal den gleichen Block um den Metallschrott zu sammeln. Metallschrott sieht so aus: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseC_starWars_loops2: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Los, BB-8!"_

        Um den ganzen Metallschrott aufzusammeln, versuche eine Schleife zu erstellen, in der nur ein Block im 'wiederholen' Block verwendet wird.
      courseC_starWars_loops2_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Los, BB-8!"_

        Um den ganzen Metallschrott aufzusammeln, versuche eine Schleife zu erstellen, in der nur ein Block im 'wiederholen' Block verwendet wird.
      courseC_starWars_loops2_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Los, BB-8!"_

        Um den ganzen Metallschrott aufzusammeln, versuche eine Schleife zu erstellen, in der nur ein Block im 'wiederholen' Block verwendet wird.
      courseC_starWars_loops4: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8."_

        Um in dieser Aufgabe BB-8 zum ganzen Metallschrott zu bringen und dabei so wenig Blöcke wie möglich zu verwenden werden dir 2 'wiederholen' Schleifen helfen!
      courseC_starWars_loops4_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8."_

        Um in dieser Aufgabe BB-8 zum ganzen Metallschrott zu bringen und dabei so wenig Blöcke wie möglich zu verwenden werden dir 2 'wiederholen' Schleifen helfen!
      courseC_starWars_loops4_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8."_

        Um in dieser Aufgabe BB-8 zum ganzen Metallschrott zu bringen und dabei so wenig Blöcke wie möglich zu verwenden werden dir 2 'wiederholen' Schleifen helfen!
      courseC_starWars_loops5: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Los, BB-8!"_'
      courseC_starWars_loops5_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Los, BB-8!"_'
      courseC_starWars_loops5_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Los, BB-8!"_'
      courseC_starWars_loops6: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Kannst du alles aufsammeln?"_

        Schleifen funktionieren auch mit mehr als einem Block drin! Kannst du diese Abfolge in einer Schleife zusammenfassen?
      courseC_starWars_loops6_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Kannst du alles aufsammeln?"_

        Schleifen funktionieren auch mit mehr als einem Block drin! Kannst du diese Abfolge in einer Schleife zusammenfassen?
      courseC_starWars_loops6_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Kannst du alles aufsammeln?"_

        Schleifen funktionieren auch mit mehr als einem Block drin! Kannst du diese Abfolge in einer Schleife zusammenfassen?
      courseC_starWars_loops7: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Du schaffst das!"_

        Schaffst du es mit nur einer Schleife den ganzen Metallschrott zu sammeln? Versuche zuerst alle Schritte einzeln zu programmieren und finde dann heraus, welchen wiederholenden Code du in ein Schleife geben kannst.
      courseC_starWars_loops7_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Du schaffst das!"_

        Schaffst du es mit nur einer Schleife den ganzen Metallschrott zu sammeln? Versuche zuerst alle Schritte einzeln zu programmieren und finde dann heraus, welchen wiederholenden Code du in ein Schleife geben kannst.
      courseC_starWars_loops7_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Du schaffst das!"_

        Schaffst du es mit nur einer Schleife den ganzen Metallschrott zu sammeln? Versuche zuerst alle Schritte einzeln zu programmieren und finde dann heraus, welchen wiederholenden Code du in ein Schleife geben kannst.
      courseC_starWars_loops8: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8."_

        **Herausforderung:** Kombiniere Ideen aus den letzten paar Aufgaben um dieses Level abzuschließen.
      courseC_starWars_loops8_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8."_

        **Herausforderung:** Kombiniere Ideen aus den letzten paar Aufgaben um dieses Level abzuschließen.
      courseC_starWars_loops8_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter, BB-8."_

        **Herausforderung:** Kombiniere Ideen aus den letzten paar Aufgaben um dieses Level abzuschließen.
      courseC_starWars_loops9: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter!"_

        Benutze, was du bisher gelernt hast um den ganzen Metallschrott aufzusammeln!
      courseC_starWars_loops9_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter!"_

        Benutze, was du bisher gelernt hast um den ganzen Metallschrott aufzusammeln!
      courseC_starWars_loops9_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Mach so weiter!"_

        Benutze, was du bisher gelernt hast um den ganzen Metallschrott aufzusammeln!
      courseD_artist_3_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Lass uns eine Schneeflocke machen..”_

        Um diesen Code in eine Schneeflocke zu verwandeln, schachtele den gesamten Code in eine weitere `wiederhole`-Schleife und lasse diese insgesamt **6** Mal laufen.  Du solltest nur einen Block hinzufügen müssen.
      courseD_artist_3_2018_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Lass uns eine Schneeflocke machen..”_

        Um diesen Code in eine Schneeflocke zu verwandeln, schachtele den gesamten Code in eine weitere `wiederhole`-Schleife und lasse diese insgesamt **6** Mal laufen.  Du solltest nur einen Block hinzufügen müssen.
      courseD_artist_5_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Versuche, die Formen oder die Längen der Linien zu ändern, um diese nach
        deinem Geschmack aussehen zu lassen!\"_\n\n<br/>  \n\n**Inspiration:** Du
        kannst deine Zeichnung beliebig ändern, aber hier ist eine Idee:\n\n-   Versuche,
        die Formen in der Mitte der Schneeflocke mit denen am Ende jeder Linie zu
        tauschen!"
      courseD_artist_binary_challenge1_2018: Du kannst jeden Binärwert (0 oder 1)
        nur jeweils einmal in diesem Rätsel verwenden. Versuche verschachtelte Schleifen
        zu verwenden, um diese Zeichnung zu vervollständigen.
      courseD_artist_binary_challenge1_2019: Du kannst jeden Binärwert (0 oder 1)
        nur jeweils einmal in diesem Rätsel verwenden. Versuche verschachtelte Schleifen
        zu verwenden, um diese Zeichnung zu vervollständigen.
      courseD_artist_binary_challenge2_2018: |-
        Auf diesem Gitter sind 256 Bits dargestellt - das bedeutet, dass es für eine kleine Änderung leicht ist, große Probleme zu verursachen. Bist du emsig genug, um dieses Logo wiederherzustellen?
        ![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)
      courseD_artist_binary_challenge2_2019: |-
        Auf diesem Gitter sind 256 Bits dargestellt - das bedeutet, dass es für eine kleine Änderung leicht ist, große Probleme zu verursachen. Bist du emsig genug, um dieses Logo wiederherzustellen?
        ![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)
      courseD_bee_conditionals7_predict2_2018: "Manchmal bedeckt eine Wolke eine Blume,
        manchmal eine Wabe! \n\nBenutze den `wenn/sonst` Block, um Nektar an Blumen
        zu sammeln und Honig an Waben zu machen. Denke daran: es gibt immer nur _eine_
        Wabe oder _eine_ Blume hinter jeder Wolke."
      courseD_bee_conditionals7_predict2_2019: "Manchmal bedeckt eine Wolke eine Blume,
        manchmal eine Wabe! \n\nBenutze den `wenn/sonst` Block, um Nektar an Blumen
        zu sammeln und Honig an Waben zu machen. Denke daran: es gibt immer nur _eine_
        Wabe oder _eine_ Blume hinter jeder Wolke."
      courseD_bee_nestedLoops8: Sammle den gesamten Nektar jeder Blüte und erzeuge
        Honig bei jeder Honigwabe. Benutze eine verschachtelte Schleife.
      courseD_bee_nestedLoops8_2018: Sammle den gesamten Nektar jeder Blüte und erzeuge
        Honig bei jeder Honigwabe. Benutze eine verschachtelte Schleife.
      courseD_bee_nestedLoops8_2019: Sammle den gesamten Nektar jeder Blüte und erzeuge
        Honig bei jeder Honigwabe. Benutze eine verschachtelte Schleife.
      courseD_bounce_events10s_2018: "An der Oberseite befindet sich nun ein Korb.
        \ \n\nBefestige den Baustein `Punkt` an dem Ereignis `wenn der Ball im Tor`
        und den Block `Punkt für den Gegner` an dem Ereignis `wenn der Ball die Hand
        trifft`, um ein Spiel zu machen. \n\n* * *\n\nSchaue wie viele Punkte du erreichen
        kannst, bevor dein Gegner zweimal punktet."
      courseD_bounce_events10s_2019: "An der Oberseite befindet sich nun ein Korb.
        \ \n\nBefestige den Baustein `Punkt` an dem Ereignis `wenn der Ball im Tor`
        und den Block `Punkt für den Gegner` an dem Ereignis `wenn der Ball die Hand
        trifft`, um ein Spiel zu machen. \n\n* * *\n\nSchaue wie viele Punkte du erreichen
        kannst, bevor dein Gegner zweimal punktet."
      courseD_bounce_events11s_2018: |-
        Jetzt hast du den Ball unter Kontrolle!  Bringe den Baustein "Neuen Ball werfen" an allen Stellen an, an denen das Spiel einen neuen Ball benötigt.

        * * *

        Schau wie viele Punkte du erreichen kannst, bevor dein Gegner zweimal punktet!
      courseD_bounce_events11s_2019: |-
        Jetzt hast du den Ball unter Kontrolle!  Bringe den Baustein "Neuen Ball werfen" an allen Stellen an, an denen das Spiel einen neuen Ball benötigt.

        * * *

        Schau wie viele Punkte du erreichen kannst, bevor dein Gegner zweimal punktet!
      courseD_bounce_events1s_2018: "Auf zum Reifen!     \n\nHänge einen Block an
        das Ereignis `Wenn der linke Pfeil` an und drücke auf \"Ausführen \", um den
        Spieler ins Netz zu bringen."
      courseD_bounce_events1s_2019: "Auf zum Reifen!     \n\nHänge einen Block an
        das Ereignis `Wenn der linke Pfeil` an und drücke auf \"Ausführen \", um den
        Spieler ins Netz zu bringen."
      courseD_bounce_events2s_2018: Nun hänge einen Baustein an das "when right event"
        an, so dass die Hand zu beiden Körben gelangen kann.
      courseD_bounce_events2s_2019: Nun hänge einen Baustein an das "when right event"
        an, so dass die Hand zu beiden Körben gelangen kann.
      courseD_bounce_events5s_2018: Wir werden einen Basketball schicken, der zur
        Hand hinunterfliegt.  Hänge einen Baustein ans Ereignis "When ball hits hand"
        an, um sicherzustellen, dass der Ball den Korb erreicht.
      courseD_bounce_events5s_2019: Wir werden einen Basketball schicken, der zur
        Hand hinunterfliegt.  Hänge einen Baustein ans Ereignis "When ball hits hand"
        an, um sicherzustellen, dass der Ball den Korb erreicht.
      courseD_bounce_events6s_2018: "Nun befindet sich der Korb oben.  \n\nFüge Code
        hinzu, damit der Ball springt, wenn er auf die Wand trifft um dieses Rätsel
        zu lösen."
      courseD_bounce_events6s_2019: "Nun befindet sich der Korb oben.  \n\nFüge Code
        hinzu, damit der Ball springt, wenn er auf die Wand trifft um dieses Rätsel
        zu lösen."
      courseD_bounce_events7s_2018: |-
        Bringe Soundbausteine an, um das Netz zum Rascheln zu bringen, wenn du den Korb triffst, und lass den Pfiff ertönen, wenn der Ball deine Hand verlässt.

        * * *

        Lasse den Ball so lange prallen, bis er das Ziel erreicht hat.
      courseD_bounce_events7s_2019: |-
        Bringe Soundbausteine an, um das Netz zum Rascheln zu bringen, wenn du den Korb triffst, und lass den Pfiff ertönen, wenn der Ball deine Hand verlässt.

        * * *

        Lasse den Ball so lange prallen, bis er das Ziel erreicht hat.
      courseD_collector_debugging6a_2018: 'Herausforderung: Verwende den Code im Arbeitsbereich,
        um mindestens **6** Schätze zu erreichen!'
      courseD_collector_debugging6a_2019: 'Herausforderung: Verwende den Code im Arbeitsbereich,
        um mindestens **6** Schätze zu erreichen!'
      courseD_collector_ramp10: Gehe mit Laurel auf diesem Platz herum und sammele
        den Schatz ein, wenn du ihn findest.
      courseD_collector_ramp8: |-
        Dieses Rätsel ist dem letzten sehr ähnlich, aber jetzt hat Laurel die Abenteurerin die Hauptrolle!

        * * *

        Nimm den gleichen Weg wie vorher, aber dieses Mal benutzte eine Wiederholungsschleife, um die Schätze zu sammeln, wenn du dort ankommst.
      courseD_collector_ramp9: Jetzt gibt es noch mehr Schätze.  Kannst du Laurel
        helfen, alles einzusammeln?
      courseD_farmer_while1: "_\"Hallo, ich bin ein Bauer. Ich brauche deine Hilfe
        beim Glätten meines Feldes um es für das Säen vorzubereiten!\"_  \n\nBewege
        mich zu dem Erdblock und nutze den \"Entfernen\" Baustein um diesen zu entfernen."
      courseD_farmer_while1_2018: "_\"Hallo, ich bin ein Bauer. Ich brauche deine
        Hilfe beim Glätten meines Feldes um es für das Säen vorzubereiten!\"_  \n\nBewege
        mich zu dem Erdblock und nutze den \"Entfernen\" Baustein um diesen zu entfernen."
      courseD_farmer_while1_2019: "_\"Hallo, ich bin ein Bauer. Ich brauche deine
        Hilfe beim Glätten meines Feldes um es für das Säen vorzubereiten!\"_  \n\nBewege
        mich zu dem Erdblock und nutze den \"Entfernen\" Baustein um diesen zu entfernen."
      courseD_farmer_while3: |-
        _"Verschiebe mich zum Erdhaufen und sag mir, wie viele Schaufeln entfernt werden sollen. "_

        Verwende dabei so wenig Bausteine wie möglich.
      courseD_farmer_while3_2018: |-
        _"Verschiebe mich zum Erdhaufen und sag mir, wie viele Schaufeln entfernt werden sollen. "_

        Verwende dabei so wenig Bausteine wie möglich.
      courseD_farmer_while3_2019: |-
        _"Verschiebe mich zum Erdhaufen und sag mir, wie viele Schaufeln entfernt werden sollen. "_

        Verwende dabei so wenig Bausteine wie möglich.
      courseD_iceage_loops1: Hilf Scrat über das glitschige Eis, um an die Eichel
        zu gelangen!
      courseD_iceage_loops10: Hilf Scrat, den ganzen Weg zur Eichel zu schaffen!
      courseD_iceage_loops10_2019: Hilf Scrat, den ganzen Weg zur Eichel zu schaffen!
      courseD_iceage_loops11: Hilf Skrat zur Eichel zu gelangen!
      courseD_iceage_loops11_2019: Hilf Skrat zur Eichel zu gelangen!
      courseD_iceage_loops12: Gehe zur Eichel, wie du kannst!
      courseD_iceage_loops12_2019: Gehe zur Eichel, wie du kannst!
      courseD_iceage_loops1_2019: Hilf Scrat über das glitschige Eis, um an die Eichel
        zu gelangen!
      courseD_iceage_loops2: |-
        Benutze einen <xml><block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block></xml> Baustein, um an die Eichel zu gelangen!
      courseD_iceage_loops2_2019: |-
        Benutze einen <xml><block type="maze_turn" block-text="turn left">
            <title name="DIR">turnLeft</title>
          </block></xml> Baustein, um an die Eichel zu gelangen!
      courseD_iceage_loops4: Füge einen weiteren Block hinzu, um Scrat bis zur Eichel
        zu bekommen!
      courseD_iceage_loops4_2019: Füge einen weiteren Block hinzu, um Scrat bis zur
        Eichel zu bekommen!
      courseD_iceage_loops6: Kannst du eine Schleife hinzufügen, um an die Eichel
        zu kommen?
      courseD_iceage_loops6_2019: Kannst du eine Schleife hinzufügen, um an die Eichel
        zu kommen?
      courseD_iceage_loops7: 'Scrat möchte wirklich gern zur Eichel kommen! '
      courseD_iceage_loops7_2019: 'Scrat möchte wirklich gern zur Eichel kommen! '
      courseD_iceage_loops8: 'Kannst du diesen Code reparieren? '
      courseD_iceage_loops8_2019: 'Kannst du diesen Code reparieren? '
      courseD_iceage_loops9: Die Eichel ist so weit weg! Kannst du Schleifen benutzen,
        um Scrat zu helfen, dorthin zu gelangen?
      courseD_iceage_loops9_2019: Die Eichel ist so weit weg! Kannst du Schleifen
        benutzen, um Scrat zu helfen, dorthin zu gelangen?
      courseD_maze_intro4_2019: '\_"Verfolge den Weg und führe mich zum Schwein."
        \_ '
      courseD_maze_intro5a_2019: Zähle die Felder auf dem Gitter sorgfältig!
      courseD_maze_intro5c_2019: Achte auf das TNT! Hilf Red, zum Schwein zu kommen.
      courseD_maze_nestedLoops4: |-
        Bring mich zu der Sonnenblume!
        (Hinweis: Du musst eine „Wiederholen“-Schleife innerhalb einer anderen benutzen, um dieses Level zu bestehen.
      courseD_maze_nestedLoops4_2018: |-
        Bring mich zu der Sonnenblume!
        (Hinweis: Du musst eine „Wiederholen“-Schleife innerhalb einer anderen benutzen, um dieses Level zu bestehen.
      courseD_maze_nestedLoops4_2019: |-
        Bring mich zu der Sonnenblume!
        (Hinweis: Du musst eine „Wiederholen“-Schleife innerhalb einer anderen benutzen, um dieses Level zu bestehen.
      courseD_maze_ramp1: Für diese Aufgabe musst du alle Blöcke zusammensetzen, auf
        'Ausführen' klicken und zusehen, wie es läuft!
      courseD_maze_ramp1_2018: Für diese Aufgabe musst du alle Blöcke zusammensetzen,
        auf 'Ausführen' klicken und zusehen, wie es läuft!
      courseD_maze_ramp1_2019: Für diese Aufgabe musst du alle Blöcke zusammensetzen,
        auf 'Ausführen' klicken und zusehen, wie es läuft!
      courseD_maze_ramp3_2019: |-
        Hilf dem Vogel, zum Schwein zu kommen. Es gibt einen zusätzlichen blauen `Vorwärts bewegen` Baustein.

        Wirf den übeflüssigen Baustein weg, indem du ihn von den anderen Bausteinen entfernst und ihn zurück in den Werkzeugkasten ziehst.
      courseD_maze_ramp4_2019: '\_"Verfolge den Weg und führe mich zum Eichel." \_ '
      courseD_maze_ramp5a_2019: Zähle die Felder auf dem Gitter sorgfältig!
      courseD_maze_ramp5c: Hilf dem Vogel, an das Schwein zu kommen.
      courseD_maze_ramp5c_2018: Hilf dem Vogel, an das Schwein zu kommen.
      courseD_maze_ramp5c_2019: Hilf Scrat zur Eichel zu gelangen.
      courseD_maze_ramp5d: Bring den Vogel zum Schwein.
      courseD_maze_ramp5d_2018: Bring den Vogel zum Schwein.
      courseD_maze_ramp5d_2019: Bring den Vogel zum Schwein.
      courseD_maze_ramp6: |-
        _"Bleib ruhig und hilf mir, das böse Schwein zu finden. Sonst werde ich vielleicht wütend!"_

        Wenn du mehrere gleiche Bausteine hintereinander hast, versuche es mit einer "wiederhole"-Schleife.  Das macht dasselbe mit weniger Code!
      courseD_maze_ramp7: |-
        _"Es ist Zeit, wütend zu werden! "_

        Benutze, was du gelernt hast, um den Vogel zum Schwein zu bringen!
      courseD_scrat_ramp1: Für diese Aufgabe musst du alle Blöcke zusammensetzen,
        auf 'Ausführen' klicken und zusehen, wie es läuft!
      courseD_scrat_ramp5: Vermeiden Sie das gerissene Eis!
      courseD_scrat_ramp7: Hilf Skrat zur Eichel zu gelangen!
      courseE_aboutme_1: "![](https://images.code.org/93e1c04857ff781bb5c4cc76b15ed563-image-1557179820861.png)
        _\"Hallo, Welt! Mein Name ist Rikki und hier sind einige Dinge, die ich über
        mich erzählen möchte!\"_\n\n**Freispiel**: Rikki verwendet Sprite Lab, um
        ein _interaktives Poster_ über sich selbst zu erstellen, das sie im Internet
        teilen kann.  \n\nRikki hat dir die Erlaubnis gegeben, ihr Poster zu sehen.
        Du kannst sogar ihren Code bearbeiten! \n\nSpielen Sie mit Rikkis Poster und
        Code und klicken Sie dann auf **Finish**."
      courseE_aboutme_2: "![](https://images.code.org/2bae4bc7c7d59fac0cd4b1370d3c4a11-image-1557179992653.png)
        _\"Rikki hier! Ich helfe dir, ein cooles Poster zu machen. Zuerst klickst
        du auf die Registerkarte Kostüme!\"_\n\n1.  Klicke auf die Registerkarte **Kostüme**
        oben links auf Deinem Bildschirm (neben **Code**). \n2.  Bearbeite das Startkostüm
        oder füge ein neues hinzu, das Dir gefällt. \n3.  Ändere das Kostüm des Sprites
        in deinem eigenen im untenstehenden Code.\n4.  Klicke auf **Ausführen**, um
        den neuen Look Ihres Sprites zu sehen!"
      courseE_aboutme_3: "![](https://images.code.org/2bae4bc7c7d59fac0cd4b1370d3c4a11-image-1557179992653.png)
        _\"Sag etwas über dich selbst und stelle sicher, dass es sicher ist!\"_\n\nBenutze
        <xml><block type=\"gamelab_spriteClicked\" block-text=\"the when sprite clicked
        event block\"></block></xml> und <xml><block type=\"gamelab_printText\" block-text=\"the
        print text block\"></block></xml> (in der Kategorie `Welt`), um Informationen
        über dich selbst auszutauschen, wenn dein Sprite angeklickt wird! \n\n\\*\\*Stelle
        nur sicher, dass die Informationen, die du weitergibst, SICHER sind.\n\n*
        * *\n\n#### Beispiele für SICHERE- und UNSICHERE-Informationen\n\n| SICHER
        \             | UNSICHER              |\n| ------------------- | ---------------------
        |\n| first name          | full name             |\n| favorite things     |
        home address          |\n| respectful opinions | phone number or email |"
      courseE_aboutme_4: |-
        ![](https://images.code.org/2bae4bc7c7d59fac0cd4b1370d3c4a11-image-1557179992653.png) _"Füge weitere Sprites zu deinem Poster hinzu! Vergiss nicht, ihnen Kostüme zu geben!"_

        Füge **mindestens zwei** andere Sprites zu deinem Poster hinzu. Gib jedem Sprite ein einzigartiges Kostüm!
      courseE_aboutme_5: |-
        ![](https://images.code.org/0c3ec1da3493c3e10f5ec714ef1670e3-image-1557185359875.png) _"Erzähl der Welt mehr von dir selbst durch deine neuen Sprites!"_

        Lass deine anderen Sprites Informationen anzeigen, wenn sie angeklickt werden. Stelle sicher, dass alles, was du teilst, SICHER ist!
      courseE_aboutme_6: "![](https://images.code.org/4e9c4465463d0c061b2b47b23d5817ca-image-1557185863600.png)
        _\"Wow! Dein Poster ist fast so cool wie meines! Naja, beinahe. \U0001F609\"_\n\nWessen
        Welt ist das?! Sie gehört dir! \n\nAlso mach weiter! Hier sind ein paar Ideen,
        um Ihr Poster noch besser zu machen:\n\n-   Füge einen Hintergrund hinzu!
        Wähle einen Hintergrund, der zu Ihrem Poster passt.\n-   Füge Verhaltensweisen
        hinzu! Lasse jedes deiner Sprites anders reagieren, wenn es angeklickt wird.\n-
        \  Füge weitere Events hinzu! Verwende die anderen Bausteine in der Kategorie
        `Events`."
      courseE_bee_functions3: Funktionen sind Programm-Bausteine, die eine Aufgabe
        ausführen. Verwende die „hohle 5“- Funktion, um gleichzeitig 5 mal Nektar
        zu holen. Stelle sicher, dass eine Schleife verwendet wird, die eine optimale
        Blockzählung ermöglicht.
      courseE_farmer_functions4b: Benutze deine neue Funktion um dieses Puzzle zu
        lösen.
      courseF_artist_variables2: "Jetzt nutze eine andere Schleife um drei dieser
        Dreiecke nebeneinander zu zeichnen.   \n\nDu kann den Code aus dem letzten
        Puzzle innerhalb einfügen."
      courseF_artist_variables2_2018: "Jetzt nutze eine andere Schleife um drei dieser
        Dreiecke nebeneinander zu zeichnen.   \n\nDu kann den Code aus dem letzten
        Puzzle innerhalb einfügen."
      courseF_artist_variables2_2019: "Jetzt nutze eine andere Schleife um drei dieser
        Dreiecke nebeneinander zu zeichnen.   \n\nDu kann den Code aus dem letzten
        Puzzle innerhalb einfügen."
      courseF_artist_variables3: "Bevor die Sache knifflig wird, kannst du die Länge
        von 50 in einer Variable festlegen, damit wir sie in den nächsten Puzzles
        nutzen können? \n\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2018: "Bevor die Sache knifflig wird, kannst du die
        Länge von 50 in einer Variable festlegen, damit wir sie in den nächsten Puzzles
        nutzen können? \n\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2019: "Bevor die Sache knifflig wird, kannst du die
        Länge von 50 in einer Variable festlegen, damit wir sie in den nächsten Puzzles
        nutzen können? \n\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables4: Jetzt nutze die `length` Variable, damit der Künster
        vorwärts springt und runter `length` Pixel zwischen den Dreiecken.
      courseF_artist_variables4_2018: Jetzt nutze die `length` Variable, damit der
        Künster vorwärts springt und runter `length` Pixel zwischen den Dreiecken.
      courseF_artist_variables4_2019: Jetzt nutze die `length` Variable, damit der
        Künster vorwärts springt und runter `length` Pixel zwischen den Dreiecken.
      courseF_artist_variables6: "**OOPS!** \n\nDie Dreiecke sollen eigentlich 60
        Pixel breit sein, mit 60 Pixel Sprüngen.  \n\nBist du nicht froh, eine Variable
        zu nutzen?"
      courseF_artist_variables6_2018: "**OOPS!** \n\nDie Dreiecke sollen eigentlich
        60 Pixel breit sein, mit 60 Pixel Sprüngen.  \n\nBist du nicht froh, eine
        Variable zu nutzen?"
      courseF_artist_variables6_2019: "**OOPS!** \n\nDie Dreiecke sollen eigentlich
        60 Pixel breit sein, mit 60 Pixel Sprüngen.  \n\nBist du nicht froh, eine
        Variable zu nutzen?"
      courseF_artist_variables6a: Nutze was du gelernt hast um dieses Design zu entwerfen,
        bei dem die Quadrate 80 Pixel Seiten haben und der Künstler über 80 Pixel
        zwischen jedem springt.
      courseF_artist_variables6a_2018: Nutze was du gelernt hast um dieses Design
        zu entwerfen, bei dem die Quadrate 80 Pixel Seiten haben und der Künstler
        über 80 Pixel zwischen jedem springt.
      courseF_artist_variables6a_2019: Nutze was du gelernt hast um dieses Design
        zu entwerfen, bei dem die Quadrate 80 Pixel Seiten haben und der Künstler
        über 80 Pixel zwischen jedem springt.
      courseF_bee_for_challenge2: Löse diese Aufgabe mit so wenig Bausteinen wie möglich.
      courseF_bee_for_challenge2_2018: Löse diese Aufgabe mit so wenig Bausteinen
        wie möglich.
      courseF_bee_for_challenge2_2019: Löse diese Aufgabe mit so wenig Bausteinen
        wie möglich.
      courseF_bee_variables_4_2019: |-
        "Lasst uns weitermachen!"

        Bearbeite den Code, damit er für dieses Rätsel funktioniert.
      coursea_maze_ramp1_2018: Um den Vogel zum Schwein zu bringen, hänge den<xml><block
        type="maze_moveEast"/></xml> Baustein unten am <xml><block type="when_run"/></xml>
        Baustein ein und drücke dann auf "▶ Ausführen"!
      coursea_maze_ramp1_2019: Um den Vogel zum Schwein zu bringen, hänge den<xml><block
        type="maze_moveEast" block-text="move east"/></xml> Baustein unten am <xml><block
        type="when_run" block-text="when run"/></xml> Baustein ein und drücke dann
        auf "▶ Ausführen"!
      csd U3 conditional statements video_2019: |-
        ## Zu berücksichtigende Frage

        -   Wann möchtest du eine wenn-Anweisung verwenden?
      csd u5 recommender sample: "# Beispiel-App\n\nHier ist ein Beispiel für eine
        App, die Daten verwendet, um dem Benutzer bei der Lösung eines Problems zu
        helfen.  Spiele die App mit einem Partner ein paar Mal durch, um zu sehen,
        wie sie funktioniert.\n\nBespreche die folgenden Fragen mit Deinem Partner:\n\n-
        \  Bei welcher Wahl unterstützt die App den Benutzer? \n-   Welche Daten verwendet
        sie, um diese Empfehlung abzugeben?\n-   Wie haben sich die Entwickler der
        App Deiner Meinung nach für den Algorithmus entschieden, mit dem sie die Wahl
        treffen?"
      csd u5 recommender sample_2019: "# Beispiel-App\n\nHier ist ein Beispiel für
        eine App, die Daten verwendet, um dem Benutzer bei der Lösung eines Problems
        zu helfen.  Spiele die App mit einem Partner ein paar Mal durch, um zu sehen,
        wie sie funktioniert.\n\nBespreche die folgenden Fragen mit Deinem Partner:\n\n-
        \  Bei welcher Wahl unterstützt die App den Benutzer? \n-   Welche Daten verwendet
        sie, um diese Empfehlung abzugeben?\n-   Wie haben sich die Entwickler der
        App Deiner Meinung nach für den Algorithmus entschieden, mit dem sie die Wahl
        treffen?"
      frozen circle: Ein Kreis ist eine besondere Form. Kannst du herausfinden, durch
        welche Zahl du das Fragezeichen ersetzen musst, um einen Kreis zu zeichnen?
      frozen circle function: Verwende den neuen „Erzeuge einen Kreis“-Baustein, um
        10 sich überschneidende Kreise zu erstellen. Vergiss nicht zwischen den Kreisen
        nach vorn zu springen.
      frozen circle function in circle: Jetzt erstellen wir 20 überschneidende Kreise
        und drehen die einzelnen Kreise um 18 Grad.
      frozen circle function with parameter: Hier ist ein „Erzeuge einen Kreis“-Baustein,
        der Kreise verschiedener Größe zeichnen kann. Kannst du ihn benutzen, um einen
        kleinen Kreis, mit der Größe 5, und einen größeren Kreis, mit der Größe 10,
        zu erstellen?
      frozen cross: Wir brauchen hier noch einen „Wiederholen"-Baustein, um ein Plus-Zeichen
        zu zeichnen! Hast du bemerkt, dass sich Elsa vor und zurück bewegen kann?
      frozen cross rotate: Jetzt versuche, es zehn Mal zu wiederholen. Wie viel Grad
        musst du zwischen den einzelnen Linien drehen?
      frozen cross rotate dense: 'Wiederhole es 90 Mal! Wie oft geht 90 in 360? Hinweis:
        Es ist eine sehr kleine Zahl.'
      frozen diamond: Du kannst ein Parallelogramm zeichnen, indem Du um diesen Code
        einen „wiederholen“-Baustein einfügst. Es ist wie ein Rechteck, hat aber verschiedene
        große Winkel. Dieses hier hat Winkel von 60 Grad und 120 Grad, statt nur 90-Grad-Winkel.
      frozen diamond mini snowflake: Wusstest du schon, dass jede Schneeflocke eine
        andere Form hat? Nun erstellen wir eine neue Schneeflocke mit dem Wiederholen-Baustein,
        um ein Parallelogramm 4 Mal zu wiederholen und dabei jeweils 90 Grad nach
        rechts zu drehen.
      frozen diamond snowflake: Nun erstellen wir eine neue Schneeflocke mit dem Wiederholen-Baustein,
        um ein Parallelogramm 10 Mal zu wiederholen und dabei jeweils 36 Grad nach
        rechts zu drehen.
      frozen freeplay: Du bist ein richtiger Künstler geworden. Zeichne ein Winter-Wunderland.
      frozen perpendicular: Jetzt schauen wir mal, ob wir zwei Linien zeichnen können,
        die in einem 90° Winkel zueinander stehen. Du musst sowohl den „Drehen“-Baustein
        als auch den „Bewegen“-Baustein benutzen.
      frozen snowflake branch: Verwende den „Erstelle einen Schneeflockenzweig"-Baustein,
        um drei Zweige zu erstellen, die beginnen wie eine Schneeflocke auszusehen.
      frozen snowflake full: Jetzt wiederhole das 8 Mal, um eine schöne Schneeflocke
        zu machen!
      frozen snowflower: Komplizierte Schneemuster können mit sehr einfachen Formen
        erstellt werden. Kannst du ein Muster machen, das 5 Kreise der Größe 5 und
        5 Kreise der Größe 10 wiederholt?
      frozen square iterative: Es scheint, als hätten wir die Hälfte eines Quadrates
        geschafft. Lass uns 4 Linien benutzen, um ein Quadrat zu erstellen.
      frozen square loop: Hallo, ich bin Anna von Arendelle! Lass uns ein Quadrat
        mit dem „Wiederholen“-Baustein zeichnen, dadurch brauchen wir weniger Blöcke.
        Wie oft (???) muss der „Wiederholen“-Baustein die inneren Bausteine durchlaufen,
        damit ein Quadrat entsteht?
      frozen square loop 3x: Lass uns drei Quadrate erstellen und nach jedem Quadrat
        drehen. Stell sicher, dass du vor jedem neuen Quadrat um 120° drehst.
      frozen square snowflake: Kannst du eine Schneeflocke erstellen, indem du den
        „Wiederholen"-Baustein 10 mal benutzt, um ein Quadrat zu erstellen und nach
        jedem Quadrat den „Drehen"-Baustein mit 36° benutzt?
      grade2_collector_10: |-
        Du bist fast fertig!

        Sammle so viele Schätze wie du kannst ein, um diesen Teil zu beenden!
      grade2_collector_10_2018: |-
        Du bist fast fertig!

        Sammle so viele Schätze wie du kannst ein, um diesen Teil zu beenden!
      grade2_collector_10_2019: |-
        Du bist fast fertig!

        Sammle so viele Schätze wie du kannst ein, um diesen Teil zu beenden!
      grade2_collector_A: Hilf Laurel alle Schätze einzusammeln.
      grade2_collector_A_2018: Hilf Laurel alle Schätze einzusammeln.
      grade2_collector_A_2019: Hilf Laurel alle Schätze einzusammeln.
      grade5_artist_variables_triangles1: "Lass uns, ein gleichseitiges Dreieck zu
        zeichnen. \n\nEs soll auf jeder Seite genau 50 Pixel lang sein."
      grade5_artist_variables_triangles1_2018: "Lass uns, ein gleichseitiges Dreieck
        zu zeichnen. \n\nEs soll auf jeder Seite genau 50 Pixel lang sein."
      grade5_artist_variables_triangles1_2019: "Lass uns, ein gleichseitiges Dreieck
        zu zeichnen. \n\nEs soll auf jeder Seite genau 50 Pixel lang sein."
      grade5_pixelation: |-
        # Erstelle dein eigenes Bild in beliebiger Größe

        ![](https://images.code.org/01c15fed4f1a2c6c3af531edc35e736e-image-1439596066108.png)
        ![](https://images.code.org/24efcaa184d1fc852f37c32911b3b87c-image-1439596070178.png)
        ![](https://images.code.org/c9a5d0fd5ba445b7f6b5744e08b50e49-image-1439596071878.png)
        ![](https://images.code.org/f14e1b8dd722b0ca5bc54fa96b34f2eb-image-1439596074236.png)
        ![](https://images.code.org/fe938c0c16453b9d461b4023098079df-image-1439596075744.png)
        ![](https://images.code.org/02c88a7da51289b2f2d1f64bd8c97b28-image-1439596077514.png)
        ![](https://images.code.org/309e3157dcfd91956181007f483f8e58-image-1439596079084.png)

        **Anleitung:**

        -   Kodiere ein Bild von allem, was du magst, mit `binary`.
        -   Die binäre Sprache wird nur mit `0` und `1` dargestellt.
        -   Vielleicht möchtest du zuerst etwas auf Millimeterpapier planen und skizzieren.
        -   Stelle etwas dar, vielleicht deinen ausgeschriebenen Namen, deine Initialen, ein Symbol oder Logo irgendeiner Art.
        -   Werde kreativ! Das Bild muss kein perfektes Quadrat sein, es kann lang und dünn sein.
      mike3bit: "# 3-Bit-Farbe\n\n**Anweisungen**\n\n-   Wir beginnen mit dem 4x2-Bild
        das Maddie erstellt hat, aber wir haben die letzten Pixel weggelassen. \n-
        \  Beende das Bild, indem Du herausfindest, welche Farben fehlt und kodieren
        diese anschließend."
      mike3bitbird: "# 3-Bit-Farbe\n\nHier ist ein Beispiel für ein Bild, das mit
        einer 3-Bit-Farbe erstellt wurde. Versuche, es zu ändern, um zu verstehen,
        wie es funktioniert. \n\n_Wenn du das Bild zurücksetzen möchten, drücken Sie
        \"Zurücksetzen\"._"
      mike3bitfreeplay: |-
        # 3-Bit-Farbe

        Du hast eine letzte Chance um zu experimentieren und kreativ zu werden mit dem Pixelation Widget. Mache etwas Fantastisches und teile es mit deinen Klassenkameraden!

        -   _Tipp:_ Du kannst den Wert eines Pixels kopieren und einfügen, um ihn wiederholt zu verwenden.
      mike3bitmario: "# 3-Bit-Farbe\n\n**Herausforderung:\\*** \n\nEin unvorsichtiger
        Binärcodierer hat versehentlich in EINE zusätzliche 0 oder 1 irgendwo die
        Bilddaten eingegebn. Dadurch sieht Marion nun etwas komisch aus! \n\nLösche
        das zusätzliche Bit, um Mario wieder normal aussehen zu lassen!\n\n![](<https://images.code.org/8b7c17ba204a1a4d33e1bd6de7f01d76-image-1477306657312.54.57
        AM.png>)"
      ramp_artist_loops4_2019: Du kannst diesen Stern erzeugen, indem du eine Schleife
        aus einer Folge von ´bewege vorwärts´ und ´drehe rechts um 144 Grad´ Sätzen
        drehen.
      simconfig: |-
        # Modifizieren und vorhersagen

        Wähle eine der Variablen, die diese Simulation steuert um zu ändern bzw. vorherzusagen, wie sich das Ergebnis ändern wird.

        Nachdem du deine Vorhersage aufgeschrieben haben, führen Sie die Simulation 5 mal durch und notieren Sie Ihre Ergebnisse. War deine Vorhersage richtig?
      simstarter: |-
        # Datenerhebung

        Führen Sie diese Simulation 5 mal aus. Verwenden Sie jedes Mal den Leitfaden zur Erfassung von Daten zur Aufzeichnung:

        -   Wie viele Äpfel hat der Elefant gesammelt?
        -   Wie viele Äpfel hat das Nilpferd gesammelt?
        -   Wie viel Zeit hat es gedauert, bis alle Äpfel gesammelt wurden?
