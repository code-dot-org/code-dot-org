"ka":
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: თუ თქვენ გამოიყენებთ ბლოკს, რომელიც `წინ 100 პიქსელით
          გადამაადგილებს`, მე ავტომატურად დავხატავ ხაზს.
        2-3_Artist_1_new_b: კუთხეები გაგიჭირდათ? გამოიყენეთ `შეტრიალდი 90 გრადუსით`
          ბლოკი.
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: 'კუთხეების დადგენა გაგიჭირდათ? თქვენ მოგიწევთ 360 გრადუსით
          შემოტრიალება 8 სვლის განმავლობაში. რას უდრის 360/8? '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: წრეწირში 360 გრადუსია, ამიტომ თუ მხატვარი ციკლის ყოველ იტერაციაზე
          1 გრადუსით შეტრიალდება, მას დასჭირდება ციკლის 360-ჯერ გავლა.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: როგორც ჩანს მხატვარი არასწორი მიმართულებით იყურება. შეგიძლიათ
          შეატრიალოთ მხატვარი, სანამ ხაზის ხატვას დაიწყებთ?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: რას უდრის 100-70? თამაშის იდეაზე დაყრდნობით, შეგვიძლია
          დავასკვნათ, თუ რამდენად მაღალი უნდა იყოს ქუდი!
        2-3_Artist_3new_b: როგორც ჩანს მხატვარი არასწორი მიმართულებით იყურება. შეგიძლიათ
          შეატრიალოთ მხატვარი, სანამ ხაზის ხატვას დაიწყებთ?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: სახლის დასამთავრებლად მხოლოდ კვადრატის დახატვა გვჭირდება!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'ამ პატარა კუთხეების შესაქმნელად, თქვენ მოგიწევთ *უფრო მეტად*
          მობრუნება, ვიდრე ამას კვადრატის ხატვის დროს აკეთებდით.   '
        2-3_Artist_6_b: იქიდან გამომდინარე, რომ სწორი მიმართულებით უკვე ვიყურები,
          სამკუთხედის დასახატად ყველაზე მარტივი იქნება წინ მოძრაობის დაწყება, შემდეგ
          კი მარცხნივ მრავალჯერ შეტრიალება.
        2-3_Artist_6_c: სამკუთხედის ყოველი გვერდი იგივე სიგრძისაა, რაც კვადრატის გვერდი...
          100 პიქსელი!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: ამ თავსატეხის ამოხსნის უმარტივესი გზაა თავიდან კვადრატის დახატვა,
          შემდეგ კი, მეორე კვადრატის ხატვის დაწყებამდე, მხატვრის ქვედა მიმართულებით
          მიმართვა.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: თუ 200-ს გაყოფთ შუაზე, რამდენი პიქსელი სიგანის უნდა იყოს თითოეული
          კვადრატი?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: ეს რომბი სინამდვილეში მობრუნებული კვადრატია
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: ყოველი ნაბიჯი 100 პიქსელი სიგანის და 100 პიქსელი სიმაღლისაა.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: ეს რომბი უბრალოდ 45 გრადუსით მობრუნებული კვადრატია.
        2-3_Artist_9_b: |-
          არ დაგავიწყდეთ, ხატვის დაწყებამდე მხატვრის 45 გრადუსით მობრუნება!

          ![](https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: გახსოვდეთ, მართვის პანელი უნდა იყოს 10 პიქსელით
          *უფრო განიერი*...ამიტომ, არ დაგავიწყდეთ 10-ის **დამატება** იმ რიცხვისთვის,
          რომელსაც შეცვლით.
        2-3_Artist_Debugging_10_b: "**მოსინჯვა და შეცდომის დაშვება აქ სრულიად მისაღებია!**
          \ \n\nდაიწყეთ თითო ჯერზე ერთი რიცხვის შეცვლით.\n\nრომელი რიცხვი რას აკეთებს?
          \ \n\nთუ ყველაფერი ერთმანეთში აგერიათ, უბრალოდ დააწექით ღილაკს \"თავიდან\"
          და თქვენი კოდი საწყის მდგომარეობას დაუბრუნდება."
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'მითითება: ყოველი ულვაში 75 პიქსელის სიგრძისაა.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: მობრუნებებიდან ერთ-ერთი 15 გრადუსით უფრო პატარაა,
          ვიდრე საჭიროა.
        2-3_Artist_Debugging_3_b: თუ პროგრამა ზედმეტად სწრაფად გაიშვა იმისათვის, რომ
          შეამჩნიოთ, რა მოხდა, სცადეთ მისი შენელება სლაიდერის საშუალებით.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: რა მოხთება, თუ პირველი ხაზის დახატვის შემდეგ, მხატვარს
          უკან გადაადგილებთ ან გადაახტუნებთ?
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          რამდენჯერ გამეორდა ჩემი ფიგურა?

          რამდენჯერ *უნდა* გამეორებულიყო ჩემი ფიგურა?

          პროგრამაში სად შეგიძლიათ ამის შეცვლა?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: მხატვარი მარცხნივ კიდევ 60 გრადუსით უნდა შეტრიალდეს
          იმისათვის, რომ ხატვა დაიწყოს!
        2-3_Artist_Debugging_9_b: სრულად მობრუნებისთვის თქვენ არ გიწევთ კიდევ ერთი
          ბლოკის დამატება, უბრალოდ დაუმატეთ 60 გრადუსი `შეტრიალდი მარცხნივ` ბლოკს,
          რომელიც უკვე გვაქვს!
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: ყოველ კვადრატს აქვს 100 პიქსელის ტოლი გვერდი, რაც
          იმას ნიშნავს, რომ თქვენ მოგიწევთ 175 პიქსელით წინ გადაადგილება, სანამ მეორე
          კვადრატის ხატვას დაიწყებთ.
        2-3_Artist_Functions_1_b: სათვალის ხატვისას ერთმანეთის გადამკვეთი ხაზების
          დახატვა დაშვებულია.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: ყოველ კვადრატს აქვს 100 პიქსელის ტოლი გვერდი, რაც
          იმას ნიშნავს, რომ თქვენ მოგიწევთ 175 პიქსელით წინ გადაადგილება, სანამ მეორე
          კვადრატის ხატვას დაიწყებთ.
        2-3_Artist_Functions_1_b: სათვალის ხატვისას ერთმანეთის გადამკვეთი ხაზების
          დახატვა დაშვებულია.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: თქვენ მოგიწევთ ფუნქციის საშუალებით არა მხოლოდ გვერდების
          რაოდენობისა და სიგრძის შეცვლა, არამედ იმ კუთხის შეცვლა, რომლითაც მხატვარი
          ბრუნდება გვერდებს შორის.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: თქვენ მოგიწევთ ფუნქციის საშუალებით არა მხოლოდ გვერდების
          რაოდენობისა და სიგრძის შეცვლა, არამედ იმ კუთხის შეცვლა, რომლითაც მხატვარი
          ბრუნდება გვერდებს შორის.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: სცადეთ ჯერ გაუშვათ კოდი, რათა ნახოთ, თუ რისი დამატება
          გჭირდებათ.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: სცადეთ ჯერ გაუშვათ კოდი, რათა ნახოთ, თუ რისი დამატება
          გჭირდებათ.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          თქვენი პროგრამა უნდა:
          - იყენებდეს ფუნქციას
          - მოძრაობდეს წინ 100 + 75 პიქსელით
          - იყენებდეს ფუნქციას
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          თქვენი პროგრამა უნდა:
          - იყენებდეს ფუნქციას
          - მოძრაობდეს წინ 100 + 75 პიქსელით
          - იყენებდეს ფუნქციას
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: კვადრატებს შორის მხატვარი უნდა ბრუნდებოდეს 120 გრადუსით,
          რათა დაასრულოს ეს დიზაინი.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: კვადრატებს შორის მხატვარი უნდა ბრუნდებოდეს 120 გრადუსით,
          რათა დაასრულოს ეს დიზაინი.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          ალბათ გახსოვთ, რომ წინა თავსატეხის კოდი ეს იყო:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_colour" inline="true">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <title name="VALUE" config="45,60,90,120,180">45</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">მოძრაობაწინ</title>
          <title name="VALUE">50</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <title name="VALUE" config="45,60,90,120,180">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">მოძრაობაწინ</title>
          <title name="VALUE">50</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
        2-3_Artist_Loops_New_11_b: ახლა ციკლის შიგნით მოქცეული კოდის **end** ნაწილისაკენ
          უნდა გადაადგილდეთ.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: სწორ ბილიკზე მოსახვედრად, ბრილიანტზე მუშაობის დაწყებამდე
          ხელოვანმა მარცხნივ უნდა შეუხვიოს 60º-ით.
        2-3_Artist Loops_New_12_b: მას შემდეგ რაც ხელოვანი წინ 100 პიქსელს გაივლის,
          მან მარჯვნივ უნდა შეუხვიოს 120 გრადუსით, რათა მახვილი კუთხე შექმნას.
        2-3_Artist Loops_New_12_c: ბლაგვი კუთხის შესაქმნელად ხელოვანს მარჯვნივ 60º-ით
          მობრუნება მოუწევს.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: |-
          თითოეული ბრილიანტის ბოლოს ხელოვანი მომდევნო ბრილიანტზე მუშაობის დასაწყებად სწორი მიმართულების პირისპირ აღმოჩნდება.

          ამის გამო, დამატებითი მობრუნების ბლოკები აღარ დაგვჭირდება.
        2-3_Artist_Loops_New_13_b: "თითოეული ბრილიანტის გასაკეთებლად, ხელოვანი უნდა:
          \n-ამოძრავდეს\n-შეუხვიოს მარჯვნივ 120 გრადუსით\n-გააგრძელოს მოძრაობა\n-შეუხვიოს
          მარჯვნივ 60 გრადუსით\n\nშემდეგ გაიმეორეთ!"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: ხატვის დაწყებამდე ხელოვანმა მარჯვნივ 45º გრადუსით
          უნდა შეუხვიოს.
        2-3_Artist_Loops_New_9_b: ეს "V" მართლაც რომ უბრალოდ კვადრატის ნახევარია.
          რა უნდა დაწეროთ ჩვენს კოდში, იმისათვის რომ კვადრატის ნახევარი დავხატოთ?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: გახსოვდეთ, რომ ყველა ნაცრისფერი ბლოკი თქვენ მიერ
          შექმნილ ციკლში უნდა ჩასვათ.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: |-
          კუთხეებთან დაკავშირებით დახმარება გჭირდებათ?
          **360/12=30**
        2-3_Artist_Nested_Loops_3_b: გახსოვდეთ, რომ კოდის ყველა ნაცრისფერი ნაწილი
          და თქვენი მოსაბრუნებელი ბლოკი ციკლი შიგნით უნდა ჩასვათ.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: |-
          კუთხეებთან დაკავშირებით დახმარება გჭირდებათ?
          **360/12=30**
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "იმისათვის რომ კვადრატის თავიდან იმ ადგილზე მოხვდეთ,
          სადაც მე-2 კვადრატზე მუშაობა უნდა დაიწყო, გამოიყენეთ წინ გადახტომის` ბლოკი.
          \nრა სიშორეზე უნდა გადახტეთ, თუ კვადრატები 20 პიქსელის სიმაღლისაა და ერთმანეთისგანაც
          20 პიქსელით არის დაშორებული?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: |-
          რა სიშორეზე უნდა შეუხვიოთ თითოეულ ციკლში?
          რას უდრის: 360/10?
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: "სწორი კუთხის საპოვნელად დახმარება გჭირდებათ?
          \n**360/12=30**"
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: გიჭირთ იმის გამორკვევა, როგორ უნდა ჩამოიტანოთ ბლოკები
          ქვემოთ? სცადეთ წითელ ყვავილს ზუსტად ისე მოეპყროთ, როგორც მეწამული ფერის
          ყვავილს!
        2-3_Bee_Conditionals_14_b: წითელი ყვავილი რომ მეწამული ფერის ყოფილიყო, შეძლებდით
          გამოგერკვიათ, როგორ უნდა გამოიყენოთ `გამეორების`ციკლი, იმისათვის, რომ კოდის
          მოცულობა შეამციროთ?
        2-3_Bee_Conditionals_14_c: |-
          სცადეთ ქვემოთ მოყვანილი ინფორმაცია 2 ნაწილად გაყოთ:
          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)
          1) შეაგროვეთ ნექტარი 3-ჯერ
          -გადაადგილდით წინ 5-ჯერ
          -შეამოწმეთ, თუ ხედავთ კოდის შემდეგ ნაწილს-----------------------------------????
          -შეუხვიეთ მარცხნივ
          2)გააკეთეთ თაფლი
          -გადაადგილდით წინ ერთხელ
          -გააკეთეთ ორი თაფლი
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'გახსოვდეთ: მეწამული ფერის ყვავილებს აქვთ მხოლოდ
          2 ტიპის ნექტარი, 0 ან 1 და ისინი შეიძლება შეიცვალოს ყოველ ჯერზე, როდესაც
          კოდს გაააქტიურებთ.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: კოდი უმოკლესი იქნება თუ წინ მოძრაობის, ნექტარის
          შეგროვებისა და თაფლის გაკეთების დროს სხვადასხვა ციკლს გამოიყენებთ.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'გახსოვდეთ: პროგრამის გაშვებისას, იასამნისფერი ყვავილების
          ნექტარის შემცველობა იცვლება 0-სა და 1-ს შორის!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: 'როდესაც იპოვით და შეასწორებთ შეცდომას, დააკვირდით:
          იქნებთ დაინახოთ კოდის ნაწილები, რომელთა გამარტივება შესაძლებელია `გამეორების`
          ციკლის საშუალებით?'
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: 'როდესაც იპოვით და შეასწორებთ შეცდომას, დააკვირდით:
          იქნებთ დაინახოთ კოდის ნაწილები, რომელთა გამარტივება შესაძლებელია `გამეორების`
          ციკლის საშუალებით?'
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: არის თუ არა რამე ადგილი სადაც ფუტკარი უაზრო რაღაცებს
          აკეთებს? რა მოხდება თუ შეცვლით ამ ბლოკს?
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: არ არის საჭირო გამოიყენოთ ციკლი ფუნქციასთან ერთად.
          სცადეთ გადაადგილდეთ, გამოიყენოთ ფუნქცია, შემდეგ კიდევ გადაადგილდეთ და ისევ
          გამოიყენოთ ფუნქცია.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: არ არის საჭირო გამოიყენოთ ციკლი ფუნქციასთან ერთად.
          სცადეთ გადაადგილდეთ, გამოიყენოთ ფუნქცია, შემდეგ კიდევ გადაადგილდეთ და ისევ
          გამოიყენოთ ფუნქცია.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        2-3_Bee_Functions_8_b: |-
          არ დაგავიწყდეთ თქვენი კოდის აწყობა მწვანე ფუნქციის ბლოკის შიგნით.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: საბოლოოდ თქვენს ციკლში ოთხი ბლოკი უნდა იყოს.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: საბოლოოდ თქვენს ციკლში 6 ბლოკი უნდა იყოს.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: თქვენ დაგჭირდებათ ორი განსხვავებული `გამეორების` ციკლის
          გამოყენება ერთმანეთის მიყოლებით.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: საბოლოოდ თქვენს ციკლში ხუთი ბლოკი უნდა იყოს.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: პირველი ქმედება არა გადაადგილება, არამედ მობრუნება იქნება.
        2-3_Bee_Loops_4A_b: პროგრამის ბოლო ნაწილის დასრულება შესაძლებელია მის ბოლოში,
          ციკლის გარეთ, კოდის დაწერით.
        2-3_Bee_Loops_4A_c: თუ ჯერ ციკლებს ვერ ამჩნევთ, სცადეთ გრძელი ამოხსნა დაწეროთ,
          შემდეგ კი დააკვირდეთ, რა შეიძლება გააერთიანოთ პროგრამის ბოლოში განთვასებულ
          ერთ `გამეორების` ციკლში.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: თუ "გამეორება"-ში მოსათავსებელ ბლოკებს მაშინვე ვერ ამჩნევთ,
          თითოეული მოძრაობისათვის დაწერეთ კოდი და სცადეთ იპოვოთ მსგავსებები.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: თუ არ იცით, რა უნდა შევიდეს ციკლში "გამეორება", სცადეთ
          ბლოკები სათითაოდ გამოწიოთ და ნახოთ, რამე მსგავსებას თუ ამჩნევთ.
        2-3_Bee_Loops_6_b: როცა მორჩებით, ციკლში 6 ბლოკი უნდა იყოს.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: პირველი ქმედება არა გადაადგილება, არამედ მობრუნება იქნება.
        2-3_Bee_Loops_7_b: 'თუ თავიდან ციკლის სტრუქტურას კარგად ვერ ხედავთ, სცადეთ
          კოდი სრულად დაწეროთ და იპოვოთ მსგავსი ნაწილები.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: იმისათვის რომ გამოიყენოთ "წინ გადაადგილების" ბლოკი, გამოწიეთ
          ის პანელიდან, გადაიტანეთ სამუშაო სივრცეში და დაუკავშირეთ ბლოკს "გაშვებისას".
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში ჩასვამთ,
          სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
        2-3_Maze_16_b: იმისათვის, რომ ბევრი ბლოკი მოათავსოთ ციკლში "გამეორება", უბრალოდ
          გადმოქაჩეთ ციკლი სამუშაო სივრცეში და მასში ჩაყარეთ საწყისი პროგრამის ყველა
          ბლოკი!
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში
          ჩასვამ, სცადე ყველაფერისთვის კოდი თავიდან დაწერო და ნახო, რა მეორდება კვლავ
          და კვლავ.
        2-3_Maze_Loops_17_b: საწყისი კოდი წაგეშალათ? დააწექით ღილაკს "თავიდან" და
          აღადგინეთ ის!
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში
          ჩასვამთ, სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: თუ გაიჭედა, სცადეთ კოდი ციკლების გარეშე დაწეროთ და იპოვეთ
          მსგავსებები.
        2-3_Maze_Loops_19_b: ერთი ციკლის შიგნით მეორე ციკლის ჩასმამ შესაძლოა გამოყენებული
          ბლოკების რაოდენობა შეამციროს.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: იმისათვის, რომ გამოიყენოთ ციკლი ამ ლაბირინთში, იპოვეთ
          კოდის ის ნაწილი, რომელსაც კიბის საფეხურის ფორმა აქვს.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: თუ ვერ პოულობთ კოდის იმ ნაწის, რომელსაც კიბის საფეხურის
          ფორმა აქვს, სცადეთ კოდს თითი გააყოლოთ.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: თითოეული ხაზის დახატვის შემდეგ, დარწმუნდით, რომ თქვენს ციკლში
          ხელოვანი უკან და ზემოთ ხტუნავს.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: "თუ მართკუთხედის ფორმის ყვავილნარის პერიმეტრი 600 პიქსელია,
          ხოლო მისი 2 გვერდის სიგრძე 200 პიქსელი, მაშინ ყვავილნარის დარჩენილი ორი
          გვერდის სიგრძე შემდეგნაირად უნდა გამოვთვალოთ: \n**600 - 200 - 200 = 200**\nმივიღეთ
          დარჩენილი 2 გვერდის სიგრძეების ჯამი; რას უდრის თითოეულის სიგრძე: \n** 200
          / 2?**"
        4-5_Artist_3_b: თუ მაშინვე ვერ ხვდებით ციკლი "გამეორება" სად უნდა მოთავსდეს
          კოდში, მაშინ სცადეთ სრულად დაწეროთ კოდი და იპოვოთ მსგავსი ნაწილები.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: |-
          წრეში 360 გრადუსია!

          ზუსტად ამდენჯერ უნდა გაიმეოროთ ეს კოდი (ყოველ ჯერზე 1 გრადუსით მობრუნებით) სანამ დაასრულებთ წრეს!
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: |-
          შემოწმება და შეცდომების გამოსწორება მშვენიერი მეთოდია, მაგრამ თქვენ ასევე შეგიძლიათ გადაწყვიტოთ ეს პრობლემა 90 გრადუსიანი კუთხის სამ ნაწილად გაყოფით.

          **90 / 3 = _____**
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: 'რომელი კუთხეა ყველაზე პატარა? რომელ კუთხეზე დგას მხატვარი? '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "ყოველი გრძელი გვერდი უდრის 240 პიქსელს. ეს იმას ნიშანვს,
          რომ 2 მოკლე გვერდი ჯამში უნდა შეადგენდეს:\n\n**800 - 240 - 240 = 320**\n\nრას
          უდრის **320/2** ? "
        4-5_Artist_8_b: |-
          ამ სურათის შექმნა 2 გზითაა შესაძლებელი!
          - დახატეთ ორი მართკუთხედი, რომლებიც იქნება **120** ერთეულის სიგრძის და **160** ერთეულის სიმაღლის და ექნებათ საერთო გვერდი

          - დახატეთ ერთი მართკუთხედი, რომელიც იქნება **240** ერთეულის სიგრძის და **160** ერთეულის სიმაღლის, შემდეგ დაამატეთ შუაში ხაზი.
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: 'როდესაც სამკუთხედი ტოლგვერდაა, მისი ყველა გვერდი და კუთხე
          ტოლია.

'
        4-5_Artist_9_b: თქვენ დაგჭირდებათ სამი ტოლი ზომის სამკუთხედის დახატვა. არ
          დაგავიწყდეთ ყოველი ახალი ფიგურის დახატვისას ახალ პოზიციაზე გადასვლა.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: ამ თავსატეხის ამოსახსნელად დაგრჩათ მხოლოდ გარე
          სამკუთხედის დახატვა.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: თუ წრეში 360 გრადუსია და ყოველი ციკლი ასრულებს 3
          გრადუსიან მობრუნებას, რამდენჯერ უნდა დაატრიალოთ ციკლი ნახევარწრის დასახატად?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: 'დააკვირდით: იქიდან გამომდინარე, რომ კვადრატები 20
          პიქსელის სიგრძისაა, თქვენ მოგიწევთ 20 პიქსელით გადახტომა, სანამ შემდეგ კვადრატის
          ხატვას დაიწყებთ.'
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: ყოველთვის ფრთხილად იყავით, როდესაც პანელიდან ახალი
          სრული ბლოკის გამოწევას ცდილობთ.
        4-5_Artist_Patterns_3_b: თუ თქვენი კოდი ზედმეტად გაუგებარი გახდება, ყოველთვის
          შეგიძლიათ დაიწყოთ თავიდან და კიდევ სცადოთ!
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: |-
          ახლა, როდესაც მხატვარმა დაასრულა ყველა რომბი, ის იყურება სამუშაოს გასაგრძელებლად საჭირო მიმართულების საპირისპიროდ.

          რამდენი გრადუსით უნდა შემოტრიალდეს მხატვარი, რომ სწორად დადგეს?
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: თქვენ შეგიძლიათ ამოხსნათ ეს თავსატეხი მხოლოდ სამუშაო
          სივრცეში განთავსებული ბლოკების საშუალებით. რა თანმიმდევრობით უნდა განალაგოთ
          ისინი?
        4-5 Bee Conditionals 6_b: ამ თავსატეხის ამოსახსნელად, დარწმუნდით, რომ მართლაც
          ამოწმებთ, შეიცავს თუ არა ყვავილი **0**-ზე მეტ ნექტარს მინიმუმ **3**-ჯერ.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: თუ შეცდომის პოვნას ვერ ახერხებთ, სცადეთ გაუშვათ პროგრამა,
          რათა დაიჭიროთ ის მომენტი, როცა კოდი არასწორად მუშაობს.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: შეხედეთ ამ თავსატეხს, როგორც გრძელ მართკუთხედს,
          რომელშიც სრული გზის გასავლელად ფუტკარმა უნდა იმოძრაოს წინ, შემდეგ რამდენჯერმე
          შეუხვიოს მარცხნივ.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: "თუ მაშინვე ვერ ხვდებით, როგორ უნდა გამოიყენოთ ციკლები იმისათვის,
          რომ თავსატეხი ამოხსნათ, მაშინ ჯერ გრძელი ამონახსნი დაწერეტ და შემდეგ სცადეთ
          ციკლის სტრუქტურა ამოიცნოთ. \nრა უნდა ჩასვათ \"გამეორებაში\", იმისათვის რომ
          კოდი შეამოკლოთ?"
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: თუ გიჭირთ იმის გარკვევა, სად უნდა განათავსოთ კოდის ნაწილი "გამეორება",
          სცადეთ გაშალოთ კოდი და ამოიცნოთ მისი სტრუქტურა.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: ყოველ ჯერზე როდესაც 2-ზე მეტი ნაბიჯით "წინ გადაადგილება" დაგჭირდებათ,
          სცადეთ გამოიყენოთ ციკლი "გამეორება".
        4-5_Maze_5_b: თავსატეხში შეგიძლიათ გამოიყენოთ 1-ზე მეტი "გამეორების" ციკლი.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "სცადეთ თითით გაჰყვეთ  ბილიკს. \nარის თუ არა ეს უმოკლესი ბილიკი?"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: |-
          **გინდათ, კოდი მაქსიმალურად შეამოკლოთ?**
          გადახედეთ ბლოკების კონფიგურაციას. რამე ხომ მეორდება? სცადეთ ჩასვათ ეს ნაწილი ციკლში!
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 2_authored_hint: []
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: "არ დაგავიწყდეთ, რომ შიდა ციკლის შემდეგ უნდა შეუხვიოთ.
          \n\nციკლში უნდა გაატაროთ 6 სამკუთხედი ისე, რომ ჯამში 360 გრადუსი მოიცვან.\n\n**360
          / 6 = ?**"
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          ციკლის ამგვარი კონსტრუქცია 360 გრადუსით 10-ჯერ გამეორდება.

          **360 / 10 = ?**
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          თქვენ გაიმეორებთ ამ 360 გრადუსიან ციკლს 6-ჯერ.

          **360 / 6 = ?**
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: კოდის ყოველ ნაწილს დასჭირდება საკუთარი "მაშინ როდესაც"
          ციკლი.
      AppLab Intro 3 - Change Screen Color_authored_hint: []
      AppLab Intro 4 - Change Screen Color_authored_hint: []
      AppLab Intro 5 - Change Screen Color_authored_hint: []
      AppLab Intro 6 - Change Screen Color_authored_hint: []
      AppLab Intro 7 - Change Screen Color_authored_hint: []
      Artist Inspiration_authored_hint:
        brush_width: მანამ სანამ რამეს გავაკეთებთ, ჯაგრისის სიგანე 1-ს გავუტოლოთ და
          ლურჯი ფერი მივცეთ.
        double_loop: 'სცადეთ "გამეორების" ციკლის შიგნით მოათავსოთ კოდის ბლოკი: "for
          ციკლი".'
        specifics: |-
          კენტი რაოდენობის გვერდების მქონე ფიგურის დასახატად, 6 "ყვავილის ფურცელიდან" თითოეულისათვის`for ციკლი` 3-დან 17-მდე-ჯერ უნდა გავუშვათ.

          ბლოკი `განსაზღვრე ალფა` იყენებს გაყოფას მთვლელის ზრდის შესაბამისად ფერის გასამკრთალებლად.
        after: როდესაც ყვავილის თითოეულ ფურცელზე მუშაობას მორჩებით, მანამ სანამ 60
          გრადუსით მოუხვევთ, დარწმუნდით რომ ჯერ "წინ გადაადგილდებით" 20 პიქსელით.
        solution: |-
          **ამოხსნა**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: იმისათვის რომ გამოიყენოთ "წინ გადაადგილების" ბლოკი, გამოწიეთ
          ის პანელიდან, გადაიტანეთ სამუშაო სივრცეში და დაუკავშირეთ ბლოკს "გაშვებისას".
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: "ექვსკუთხედის ნახევარს აქვს \"30-ის ტოლი სიგრძე\" და
          ბრუნავს მარჯვნივ **60 გრადუსით**.\n  "
        Course_4_Artist_11_b: 'სამკუთხედის 2/3-ს აქვს **80-ის ტოლი სიგრძე** და ბრუნავს
          მარჯვნივ **120 გრადუსით**. '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'თითოეული განმეორებითი ფორმა წარმოადგენს **ნახევარი
          ექვსკუთხედის** კომბინაციას, რომელსაც მოჰყვება **სამკუთხედის 2/3**. '
        Course_4_Artist_12_b: 'ფიგურული საზომი ერთეული თითქმის იგივეა, რაც ბოლო თავსატეხში,
          იმის გამოკლებით, რომ ბოლო თავსატეხში ნახევარი ექვსკუთხედის ზომა ოდნავ დიდია. '
        Course_4_Artist_12_c: "1) პირველი 3 ხაზი არის 60 პიხსელი სიგრძის და უნდა მოუხვიოთ
          60 გრადუსით. \n2) მომდევნო 2 ხაზი არის 80 პიქსელი ზომის და უნდა მოუხვიოთ
          120 გრადუსით "
        Course_4_Artist_12_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">მოძრაობაწინ</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">მოძრაობაწინ</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: 360-გრადუსიანი ბრუნვის შიგნით არის 3 სამკუთხედი... რამდეჯერ
          მოთავსდება 3 360-ში?
      Course 4 Artist 7_authored_hint: []
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: "დახმარება გჭირდებათ, იმის გამორკვევაში, თუ რამხელაზე
          უნდა მოუხვიოთ? \n360 გრადუსიანი ბრუნვის შიგნით მოთავსებულია 3 საკუთხედი.
          \nრამდენჯერ მოთავსდება 3 360-ში?"
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: "გინდათ, იცოდეთ, რამდენით უნდა მოაბრუნოთ? \nრას უდრის
          360 გაყოფილი 10-ზე?"
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: ეს კოდი იყენებს ორ `for ციკლს`. პირველი
          ზრდადობით ითვლის 1-დან 8-მდე, ხოლო მეორე კლებადონით, 8-დან 1-მდე.
        Course_4_Artist_Binary_Free_Play_2b_b: თითოეულ `for ციკლის` ბლოკს აქვს სამი
          გამეორება. პირველი გამეორება უკიდურეს მარცხენა მხარეში განათავსებს 1-ების
          წყებას, მეორე გამეორება შუაში ათავსებს 0-ების წყებას, ხოლო მესამე 1-ების
          წყებას ათავსებს მარჯვენა მხარეს.
        Course_4_Artist_Binary_Free_Play_2b_c: თითოეული გამეორების ბლოკში თქვენ დაგჭირდებათ
          `მრიცხველი` 1-ებისათვის და `16-(2 x მრიცხველი)` 0-ებისათვის.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **ამოხსნა:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">მთვლელი</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">მთვლელი</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">მთვლელი</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">მთვლელი</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">მთვლელი</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">მთვლელი</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "მობრუნების კუთხე შეიცვლება თითოეულ ფიგურასთან!
          \ \nიმისათვის, რომ გაიგოთ კუთხის გრადუსული ზომა, გამოიყენეთ მათემატიკური
          ბლოკი, სადაც შეიყვანთ შემდეგ არითმეტიკულ გამოსახულებას: 360 გაყოფილი ფიგურის
          გვერდების რაოდენობაზე. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: 'თუ 360-ს ფიგურის გვერდების რაოდენობაზე გაყოფთ,
          მიიღებთ იმ რიცხვს, რამდენი გრადუსითაც უნდა შემობრუნდეთ. '
        Course_4_Artist_For_Loops_11a_b: 'ყოველ ჯერზე, მოგიწევთ წინ მოძრაობა მანძილით,
          რომელიც უდრის 10-ჯერ გვერდების რაოდენობას. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: იმისათვის რომ, `for` ციკლმა თქვენი მოძრაობა
          მართოს, საჭიროა დარწმუნდეთ, რომ თანაბარი მანძილით გადაადგილების მიზნით `მრიცხველს`იყენებთ.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "**რა არის უმცირესი რიცხვი, რომელიც დაგჭირდებათ?
          \nრა არის უდიდესი რიცხვი?\nრამდენად დიდია ზრდა ყოველ ჯერზე?**\n\nეს არის
          კითხვები, რომლებზეც პასუხის გაცემა გჭირდებათ იმისათვის, რომ  `for` ციკლში
          გამოტოვებული ადგილები შეავსოთ."
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: უდიდეს ფიგურას აქვს 19 გვერდი. უმცირესს
          - მხოლოდ 2.
        Course_4_Artist_For_Loops_Challenge_b: ციკლი `for` ორეულობით, ზრდადობით ითვლის
          ყოველ ჯერზე.
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: უდიდეს მრავალკუთხედს აქვს 19 გვერდი.
        Course_4_Artist_For_Loops_Challenge_b: ყველა პოლიგონი დაუსრულებელია, თითოულ
          მათგანს იმაზე ერთი გვერდით ნაკლები აქვს, ვიდრე უნდა ჰქონდეს.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: ამ კოდის საფუძველი იგივეა, რაც წინა სავარჯიშოს
          ამონახსნი...ცოტაოდენი ცვლილებებით.
        Course_4_Artist_For_Loops_inspire_b: მოსინჯეთ `for`ციკლი, რომელიც 3-დან 10-მდე
          იზრდება, 1-ის ტოლი ბიჯით.
        Course_4_Artist_For_Loops_inspire_c: "`for`ციკლის შიგნით თითოეული ციკლისათვის
          არსებობს 2 ტიპის გამეორება, მაგრამ მე-2 ტიპის გამეორება უხვევს საწინააღმდეგო
          მიმართულებით."
        Course_4_Artist_For_Loops_inspire_d: "**ამოხსნა:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">მთვლელი</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">მოძრაობაწინ</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">მობრუნებამარჯვნივ</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">მთვლელი</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">მთვლელი</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">მოძრაობაწინ</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">მობრუნებამარცხნივ</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">მთვლელი</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: დაიწყეთ ბოლო თავსატეხში გამოყენებული
          კოდით და გამეორების ბლოკში დაამატეთ 3-გრადუსიანი `მარჯვნივ მოხვევის` ერთი
          ბლოკი.
        Course_4_Artist_Functions_Inspiration_b: სცადეთ 90-ზე მეტი გრადუსით მობრუნდეთ
          "გამეორების ციკლის" გარეთ, მაგრამ ისე რომ `for ციკლიდან` არ გამოხვიდეთ.
        Course_4_Artist_Functions_Inspiration_c: "**ამოხსნა:**\n<xml>\n<block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n<next>\n<block type=\"controls_for_counter\"
          inline=\"true\">\n<mutation counter=\"counter\"></mutation>\n<value name=\"FROM\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">1</title>\n</block>\n</value>\n<value
          name=\"TO\">\n<block type=\"math_number\">\n<title name=\"NUM\">14</title>\n</block>\n</value>\n<value
          name=\"BY\">\n<block type=\"math_number\">\n<title name=\"NUM\">1</title>\n</block>\n</value>\n<statement
          name=\"DO\">\n<block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n<value
          name=\"COLOUR\">\n<block type=\"colour_random\"/>\n</value>\n<next>\n<block
          type=\"controls_repeat_ext\" inline=\"true\">\n<value name=\"TIMES\">\n<block
          type=\"variables_get\">\n<title name=\"VAR\">მთვლელი</title>\n</block>\n</value>\n<statement
          name=\"DO\">\n<block type=\"procedures_callnoreturn\">\n<mutation name=\"draw
          a square 20\"></mutation>\n<next>\n<block type=\"jump_by_constant\">\n<title
          name=\"DIR\">jumpForward</title>\n<title name=\"VALUE\">20</title>\n<next>\n<block
          type=\"draw_turn_by_constant\">\n<title name=\"DIR\">მობრუნებამარჯვნივ</title>\n<title
          name=\"VALUE\">3</title>\n</block>\n</next>\n</block>\n</next>\n</block>\n</statement>\n<next>\n<block
          type=\"draw_turn_by_constant\">\n<title name=\"DIR\">მობრუნებამარცხნივ</title>\n<title
          name=\"VALUE\">100</title>\n</block>\n</next>\n</block>\n</next>\n</block>\n</statement>\n</block>\n</next>\n</block>\n</xml>\n
          \nContext | Request Context\n"
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: ფუნქციების სწორად გამოსაყენებლად იმაშიც
          უნდა გაერკივიოთ, თუ რომელი ფუნქცია გჭირდებათ და რომლები არა.
        Course_4_Artist_Functions_challenge_b: გამოიყენეთ `for ციკლი`, შემდეგ ჩასმული
          გამეორების ციკლის შიგნით გამოიყენეთ მისი მთვლელის ცვლადი.
        Course_4_Artist_Functions_challenge_c: ციკლის ყოველი იტერაციისას უნდა დახატოთ
          კვადრატი, შემდეგ კი წინ გადახტეთ.
        Course_4_Artist_Functions_challenge_d: თქვენ მოგიწევთ 90 გრადუსით მარცხნივ
          მობრუნება `გამეორების` ციკლის გარეთ, მაგრამ `for ციკლის` შიგნით.
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: როდესაც დაასრულებთ ერთ კვადრატს, სცადეთ წინ გადახტომა
          მისი სიგრძის ნახევრით, სანამ მობრუნდებით და შემდეგის ხატვას დაიწყებთ.
        Course_4_Artist_Inspire_b: თითოეული კვადრატი და ნახტომი მეორდება 4-ჯერ (ნახტომებს
          შორის გამოიყენეთ მარცხნივ მოხვევის ბლოკი), იმისათვის რომ სათამაშო ქარის
          ბზრიალას მსგავსი სრული ერთეული შევქმნათ.
        Course_4_Artist_Inspire_c: 'თითოეული სათამაშო ქარის ბზრიალა მეორდება 4-ჯერ,
          ის ბრუნავს მარჯვნივ გრადუსული ზომით: **360/გვერდების რაოდენობა**.'
        Course_4_Artist_Inspire_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: თქვენ დაგჭირდებათ ორი გამეორების ციკლი (ერთი მეორეს
          შიგნით მოთავსებული). ორივე მათგანი უნდა მეორდებოდეს იმდენჯერ, რამდენიც `გვერდი`
          გვაქვს.
        Course_4_Artist_Vars_13_b: |-
          გამეორების შიდა ციკლი ხატავს რვაკუთხედს (მარცხნივ მობრუნებით).

          ამის შემდეგ წინ გადაადგილება და მარჯვნივ მობრუნება მხოლოდ გარე ციკლში დაგჭირდებათ.
        Course_4_Artist_Vars_13_c: იმისათვის, რომ ფიგურა იგივე ზომის იყოს, როდესაც
          გვერდების რაოდენობა შეიცვლება, გამოიყენეთ მათემატიკის ბლოკი, რათა გაყოთ
          პიქსელებში გამოსახული სიგრძე გვერდების რაოდენობაზე.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: წესიერი მრავალკუთხედის დასახატად ყოველ ჯერზე შეტრიალდით
          **360/გვერდების რაოდენობა**-ჯერ.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: თუ თქვენ გაყოფთ საწყის სიგრძეს გვერდების რაოდენობაზე,
          ყოველი გვერდის სიგრძე შემცირდება, ხოლო გვერდების რაოდენობა გაიზრდება.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: 'ხვდებით პრინციპს, რომლის მიხედვითაც ნექტარის რაოდენობა იცვლება? '
        count_with_for: მიაქციეთ ყურადღება იმას, რომ ნექტარი იზრდება ეტაპობრივად,
          ნაბიჯ-ნაბიჯ. ბლოკის რა სახეობა შეგიძლიათ გამოიყენოთ იმისათვის, რომ ერთნაირი
          რამ შეასრულოთ მრავალჯერ სანამ მთვლელი იზრდება?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: დაშვებულია ყოველ ჯერზე თაფლისა და ნექტარის რაოდენობის
          შემოწმება. თუ რომელიმე გათავდა, შესაბამისი რიცხვი შეიძლება 0 იყოს.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: თქვენ მოგიწევთ ახტომის ფუნქციის "რედაქტირების"
          ღილაკზე დაკლიკვა და მისი ისე შეცვლა, რომ ეს ფუნქცია ასევე იყენებდეს `სიმაღლის`
          პარამეტრს.
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: დარწმუნდით, რომ `dog_speed`-ზე მინიჭებული რიცხვი
          აღემატება `cat_speed`-ზე მინიჭებულს.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: რას დაუმატებდით თქვენს `for` ციკლს, რათა
          მან ყოველ ჯერზე გამოტოვოს ლუწი რიცხვები?
      Course 4 Playlab For Loop Freeplay_authored_hint: []
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: დროშები დაახლოებით 330 პიქსელით არის დაშორებული
          პერსონაჟებს.
        Course_4_Playlab_For_Loops_4b_b: როგორ შეიძლება ყოველმა პერსონაჟმა მიაღწიოს
          330 პიქსელს მოძრაობების ტოლი რაოდენობით და განსხვავებული საწყისი და საბოლოო
          რიცხვებით?
        Course_4_Playlab_For_Loops_4b_c: გახსოვდეთ, არ აქვს მნიშვნელობა, თუ რამდენად
          გასცდება პერსონაჟი დროშას ბოლო ნაბიჯზე. მთავარია ყველა პერსონაჟმა ტოლი რაოდენობის
          ნაბიჯი გადადგას დროშასთან მისასვლელად.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: პერსონაჟები დაახლოებით 175 პიქსელით არის
          დაშორებული ცენტრს.
        Course_4_Playlab_For_Loops_5b_b: გახსოვდეთ, პერსონაჟის შემდეგი ნაბიჯი წინაზე
          გრძელი იქნება, რადგან მთვლელი იზრდება.
      Course 4 Playlab For Loops 6b_authored_hint: []
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: ყოველ ექვსკუთხედს 40 პიქსელის ტოლი გვერდები აქვს.
        Course_4_SCF_1_b: ყველა ჰორიზონტალურ ხაზზში, თითოეულ ექვსკუთხედს შორის არის
          120 პიქსელიანი ნახტომი.
        Course_4_SCF_1_c: "სანამ ექვსკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          60 გრადუსით მარჯვნივ და გადახტეთ წინ 40 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ \n უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან
          320 პიქსელით."
        Course_4_SCF_1_d: "სანამ ექვსკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          60 გრადუსით მარჯვნივ და გადახტეთ წინ 40 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან 440
          პიქსელით. (120 პიქსელით უფრო შორს ვიდრე `გადაიწიეთ ქვემოთ/წინ` ფუნქცია. "
        Course_4_SCF_1_e: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/forward"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/backward"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">დახატეთ ექვსკუთხედი</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">გადაადგილდით ქვემოთ/უკან</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">440</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">დახატეთ ექვსკუთხედების ხაზი</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a hexagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">120</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/forward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">320</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: გაიხსენეთ თქვენი ფუნქციები მე-16 დონიდან.
        Course_4_SCF_1a_b: |-
          შეხედეთ ამ გზას, როგორც თქვენს მთავარ მარშრუტს:

          ![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)
        Course_4_SCF_1a_c: სასურველია სცადოთ `for ციკლის` გამოყენება. არა ნაბიჯებისთვის,
          არამედ ფუნქციის პარამეტრებისთვის.
        Course_4_SCF_1a_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">left</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">right</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">0</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">21</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathLeft</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">right</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <title name="NAME">get nectar</title>
          <statement name="STACK">
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"></block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: |-
          ყურადღება მიაქციეთ იმას, რომ ყველა თაფლის წერტილის ფორმა მასგავსია.

          აქ ფუნქციის გამოყენება შეგვიძლია!
        Course_4_SCF_1b_b: |-
          შეხედეთ ამ მოსაზრებას, თუ როგორ შეიძლება ფუტკარმა იმოგზაუროს:

          ![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)
        Course_4_SCF_1b_c: სასურველია სცადოთ `for ციკლის` გამოყენება ფუტკრის მოგზაურობის
          მანძილის განსასაზღვრად.
        Course_4_SCF_1b_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">თაფლის შექმნა</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: ყოველ რვაკუთხედს 40 პიქსელის ტოლი გვერდები აქვს.
        Course_4_SCF_2_b: ყველა ჰორიზონტალურ ხაზზში, თითოეულ რვაკუთხედს შორის არის
          136 პიქსელიანი ნახტომი.
        Course_4_SCF_2_c: "სანამ რვაკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          45 გრადუსით მარჯვნივ და გადახტეთ წინ 96 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ \n უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან
          408 პიქსელით. "
        Course_4_SCF_2_d: |-
          გაითვალისწინეთ: იქიდან გამომდინარე, რომ ლუწ რიგებში ნაკლები რვაკუთხედია, თქვენ არ მოგიწევთ უკან გადახტომა საწყის პოზიციაზე მოსახვედრად კენტ რიგებში.

          ეს კი იმას ნიშნავს, რომ თქვენ შეგიძლიათ გამოიყენოთ იგივე ფუნქცია ყველა რიგისთვის.
        Course_4_SCF_2_e: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="numOctagons"></arg>
          </mutation>
          <title name="NAME">დახატე დრაკონები</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">numOctagons</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw an octagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">136</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">დახატე რვაკუთხედი</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">გადაადგილდი წინ</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">96</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">408</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'ეს რვაკუთხედების მიმდევრობაა, რომელთა გვერდების სიგრძე
          `მთვლელის` ტოლია. '
        Course_4_SCF_3_c: 'ყოველი რვაკუთხედი გამოიძახება `for` ციკლიდან, რომელიც მცირდება
          200-დან 2-ს ტოლი ბიჯით. '
        Course_4_SCF_3_d: 'არ დაგავიწყდეთ 22.5 გრადუსით მობრუნება ყოველი იტერაციის
          ბოლოს. '
        Course_4_SCF_3_e: ყოველი რვაკუთხედის ფერი და კალმის სიგანე დამოკიდებულია `მთვლელის`
          ცვლადზე.
        Course_4_SCF_3_f: |-
          **ამოხსნა:**

          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">დახატე რვაკუთხედი</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1_b: 'სცადეთ ორი `for` ციკლის გამოყენება: ერთი ასაცოცად და ნექტარის
          შესაგროვებლად, ხოლო მეორე ქვემოთ ჩამოსაძვრომად და თაფლის გასაკეთებლად.'
        Course_4_SCFL_1_c: |-
          გაითვალისწინეთ, რომ ზრდადი კიბისებრი კოდის დასაწერად, `for` ციკლი საჭიროებს რამდენიმე ჩვეულებრივ ციკლს `მთვლელჯერ`, შესრულებულს გამეორების ციკლის შიგნით.

          მეორე `for` ციკლი საჭიროებს მხოლოდ ერთ ჩვეულებრივ ციკლს, რათა გააკეთოს `მთვლელის` ტოლი თაფლის რაოდენობა.
        Course_4_SCFL_1_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: ბლოკების მინიმალური რაოდენობის გამოსაყენებლად შესაძლოა
          ჯამში მეტის გავლა მოგიწიოთ.
        Course_4_SCFL_1a_b: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)
        Course_4_SCFL_1a_c: "`for ციკლი` დაგეხმარებათ იგივე ნიმუშის შესრულებაში, მაგრამ
          ნაბიჯების რაოდენობის ცვლილებით. დააკვირდით: საჭირო ნაბიჯების რაოდენობა მცირდება
          7-დან 5-მე 1-ის ტოლი ბიჯით."
        Course_4_SCFL_1a_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: სცადეთ `for ციკლის` გამოყენება.
        Course_4_SCFL_1b_b: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)
        Course_4_SCFL_1b_c: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)
        Course_4_SCFL_2_b: გაითვალისწინეთ, რომ ამ `for` ციკლის ყოველ იტერაციაზე არსებობს
          სამი წერტილი, რომელზეც თქვენ უნდა გაჩერდეთ, რათა იმუშაოთ ობიექტებთან.
        Course_4_SCFL_2_c: "`for` ციკლის ყოველ იტერაციაზე ყოველი ობიექტის რიცხვი `მთვლელის`
          ცვლადზე იგივენაირადაა დამოკიდებული."
        Course_4_SCFL_2_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: "`კალმის სიგანე` 1-ია. პირველი კვადრატის გვერდები 50 პიქსელია,
          ხოლო ყოველი შემდეგი კვადრატის გვერდი 50 პიქსელით უფრო ფართოა, ვიდრე წინასი."
        Course_4_SCFL_3_b: ფუნჯის გამჭვირვალობა ყოველთვის ტოლია`მთვლელი`/2-ის.
        Course_4_SCFL_3_c: როდესაც დახატავთ ყველა კვადრატს არ დაგავიწყდეთ უკან გადახტომა,
          მობრუნება, ისევ გადახტომა და უკან მობრუნება!
        Course_4_SCFL_3_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: ფერის შეცვლა ხდება `განსაზღვრე ფერი წითლად, მწვანედ, ლურჯად`
          ბლოკით. წითელი ყოველთვის ტოლია `მთვლელის` მნიშვნელობის, მწვანე `255-მთვლელის`,
          ხოლო ლურჯი რჩება უცვლელად 255-ის ტოლი.
        Course_4_SCFL_4_b: ყოველი ფიგურა არის კვადრატი, რომლის გვერდების სიგრძე `მთვლელის`
          ტოლია, ანუ, იწყება 5 პიქსელიდან და იზრდება 5 პიქსელით მანამ, სანამ არ გახდება
          200.
        Course_4_SCFL_4_c: ყოველი კვადრატის შემდეგ მხატვარი 15 გრადუსით ბრუნდება.
        Course_4_SCFL_4_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: ფერის შეცვლა ხდება `განსაზღვრე ფერი წითლად, მწვანედ, ლურჯად`
          ბლოკით. წითელი ყოველთვის ტოლია 255-ის, მწვანე `მთვლელის`, ხოლო ლურჯი ყოველთვის
          არის`255 - მთვლელი`.
        Course_4_SCFL_6_b: კოდი გაცილებით უფრო მარტივია, ვიდრე შეიძლება იფიქროთ. უბრალოდ
          განსაზღვრეთ ფერი `for ციკლის` შიგნით, გადაადგილდით წინ, შემდეგ კი შებრუნდით.
        Course_4_SCFL_6_c: "`for ციკლი` იზდება 5-დან 250-მდე 2-ის ტოლი ბიჯით. "
        Course_4_SCFL_6_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: ფერის შეცვლა ხდება `განსაზღვრე ფერი წითლად, მწვანედ, ლურჯად`
          ბლოკით. წითელი ყოველთვის ტოლია `მთვლელის` მნიშვნელობის, მწვანე `255-მთვლელის`,
          ხოლო ლურჯი რჩება უცვლელად 255-ის ტოლი.
        Course_4_SCFL_7_b: 'ეს ნახატი შექმნილია ორი მსგავსი `for ციკლის` გამოყენებით.
          ერთი იწყება 5-დან და იზრდება 200-მდე 2-ის ტოლი ბიჯით, ხოლო მეორე პირიქით
          - მცირდება 200-დან 5-მდე 2-ის ტოლი ბიჯით. '
        Course_4_SCFL_7_c: ყოველი `for ციკლის` შიგნით უნდა გადაადგილდეთ წინ 5 პიქსელით
          სანამ შებრუდენბით `360/მთვლელი`-ით. სანამ დაიწყებთ, არ დაგავიწყდეთ განსაზღვროთ
          თქვენი ფუნჯის სიგანე, როგორც `მთვლელის` ტოლი!
        Course_4_SCFL_7_d: თქვენ მოგიწევთ 225 გრადუსით მობრუნება ორ `for ციკლს` შორის.
        Course_4_SCFL_7_e: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'ცვლადები ძალიან გამოსადეია, რადგან შეგიძლიათ მათი გაზრდა
          ციკლის ყოველ იტერაციაზე. '
        Course_4_SCV_1_b: ამ თავსატეხში ერთი ციკლი ქმნის პოლიგონს, მეორე ციკლი იმეორებს
          პოლიგონს იმდენჯერ, რამდენიც არის`გვერდი`, შემდეგ კიდევ ერთი ციკლი იმეორებს
          ამ ყველაფერს იმდენჯერ, რამდენიც არის `გვერდების` ცვლადს დამატებული 5.
        Course_4_SCV_1_c: "`გვერდებისთვის` და `სიგრძისთვის` ცალკე ცვლადების გამოყენება
          ხელს უწყობს კოდის სისუფთავეს, რადგან თქვენ შეგიძლიათ ციკლით შეასრულოთ ერთი
          და იგივე კოდი რამდენჯერმე, იმის მაგივრად, რომ ყოველ ჯერზე შექმნათ ახალი
          რიცხვების მიმდევრობები."
        Course_4_SCV_1_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "დასრულებული სურათი შედგება 10 ასეთი \"ყვავილისგან\":  \n![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)\n
          \       \n...რომელებიც, თავის მხრივ შედგებიან 10 ათკუთხედისგან:  \n![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)"
        Course_4_SCV_2_b: 'ეს ნიმუში შეიცავს ჩადგმულ ციკლებს. ყველა ციკლი სრულდება
          `გვერდების` მნიშვნელობის ტოლი რაოდენობით. '
        Course_4_SCV_2_c: მხატვარი ბრუნდება მარცხნივ ყოველი ათკუთხედის შექმნისას,
          მაგრამ უხვევას მარჯვნივ ორივე სხვა ციკლში.
        Course_4_SCV_2_d: ყველა 10-ფურცლიანი "ყვავილის" ერთ ადგილას დახატვის თავიდან
          ასაცილებლად, დარწმუნდით, რომ გადახტებით წინ `სიგრძე/გვერდები` რაოდენობაზით
          სანამ მობრუნდებით 360/`გვერდები` რაოდენობით თქვენს გარე ციკლში.
        Course_4_SCV_2_e: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'გამოიყენეთ მათემატიკური ბლოკი, რათა მიამატოთ და გამოაკლოთ
          ქულები `ქულების` ცვლადს მაშინ, როდესაც სპრაიტები დაეჯახებიან ერთმანეთს. '
        Course_4_SCV_3_b: თქვენ შეგიძლიათ შეცვალოთ პარამეტრი იმისათვის, რომ განსაზღვროთ,
          როგორ იმოძრავებს სპრაიტი ისრების ღილაკებზე დაჭერის დროს.
        Course_4_SCV_3_c: |-
          **ამოხსნა:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">ქულები</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">ზემოთ</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">ქვემოთ</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">მარცხნივ</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">მარჯვნივ</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">ქულები</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">ქულები</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">ქულები</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">დამატება</title><value name="A"><block type="variables_get"><title name="VAR">ქულები</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">ქულები</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">მინუს</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">ქულები</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: ამ დავალების შესრულებაში სამი ცვლადი გამოგადგებათ. ერთი
          ნექტარის რაოდენობის აღსარიცხად, მეორე თაფლის რაოდენობის შესანახად, ხოლო
          მესამე იმის აღსანიშნად, თუ რამდენად შორს უნდა გადაადგილდეს ფუტკარი ყოველ
          იტერაციაზე.
        Course_4_SCV_4_b: 'გამოსადეგი იქნება, თუ ამ სამ ციკლს თქვენს მთავარ ციკლში
          ჩასვამთ. ერთი ციკლი წინ მოძრაობისთვის, ერთი ნექტარის შესაგროვებლად და ერთიც
          თაფლის გასაკეთებლად. '
        Course_4_SCV_4_c: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)
        Course_4_SCV_4_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">თაფლი</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">ნექტარი</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">ნექტარი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">თაფლი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">თაფლი</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">დამატება</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">თაფლი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">ნექტარი</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">მინუს</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">ნექტარი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: ციკლის ყოველ იტერაციაზე, ყვავილებს ორით ნაკლები ნექტარი
          აქვთ და ფუტკარმა ერთით მეტი თაფლი უნდა გააკეთოს.
        Course_4_SCV_5_c: გაითვალისწინეთ, რომ გარე ციკლის დასაწყისში, ფუტკარი გადაადგილდება
          იმდენჯერ, რამდენი ნექტარიცაა შემდეგ ყვავილში.
        Course_4_SCV_5_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          შეხედეთ: ასე გამოიყურება დამთავრებული ფიგურა

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: '8 ცვლადის შექმნა დაგეხმარებათ დავალების შესრულებაში: წითელი1,
          მწვანე1, ლურჯი1, წითელი2, ლურჯი2, სიგრძე და გვერდები.'
        Course_4_SCV_6_c: 'თითოეული ფიგურის 5 გვერდი დაშლილია შემდეგი რაოდენობის ნაწილებად:
          `სიგრძე`/`გვერდების რაოდენობა`, სადაც ტეხილის ერთი ნაწილი მუქი მომწვანო-მოლურჟო
          ფერისაა (rgb = 0,175,200), ხოლო მეორე - მეწამული (rgb = 100, 50, 150).'
        Course_4_SCV_6_d: 'იმისათვის რომ ტეხილის ერთ მხარეს აღმოჩნდეთ, მოუხვიეთ მარცხნივ  შემდეგი
          გრადუსული ზომით: `360`/`გვერდების რაოდენობა`. ტეხილის მეორე მხარეს მოსახვედრად,
          შეუხვიეთ მარჯვნივ, გრადული ზომით: `360`/`გვერდების რაოდენობა`. '
        Course_4_SCV_6_e: 'პროგრამის დარჩენილი ნაწილი არაფრით არ განსხვავდება ფიგურიდან
          სრული 360°-იანი ბრუნვის გასაკეთებელი სხვა პროგრამებისგან, იმის გამოკლებით
          რომ ჩვენს შემთხვევაში ეს ფიგურები ერთმანეთს სანახევროდ ეფარება, ამიტომ საჭიროა
          მოვბრუნდეთ მარჯვნივ შემდეგი გრადუსული ზომით: `180`/`გვერდების რაოდენობა`,
          რაც იმას ნიშნავს რომ მოგვიწევს იმაზე 2-ჯერ მეტით მოვუხვიოთ, ვიდრე ჩვეულებრივ
          (`გვერდების რაოდენობა`*`2` გამეორება). '
        Course_4_SCV_6_f: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: დარწმუნდით, რომ `dog_speed`-ზე მინიჭებული რიცხვი
          აღემატება `cat_speed`-ზე მინიჭებულს.
      D_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project3_b: |-
          სცადეთ ჩადგმული ციკლების გამოყენება!

          გამოიყენეთ კოდი, რომელიც შექმენით ხაზების დასახატად და ჩასვით ისინი სხვა ციკლში. ქვემოთ, გარე ციკლის დამთავრებამდე დაამატეთ ბლოკი, რომელიც შეატრიალებს ელზას.

          -სცადეთ 72 გრადუსი, თუ გარე ციკლს იმეორებთ 5-ჯერ
          -სცადეთ 60 გრადუსი, თუ გარე ციკლს იმეორებთ 6-ჯერ
      D_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |
          მოცემულია რვაკუთხა და სამკუთხა ფიფქები, მათ შორის 36-გრადუსიანი კუთხით.

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          ეს კვადრატებიანი ექვსკუთხედების მიმდევრობაა:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: საცდელად, დახატეთ თქვენი პირველი ფიფქრი, შემდეგ
          დახატეთ მეორე.
      D_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          2 ექვსკუთხედისგან და 4 სამკუთხედისგან შემდგარი მწკრივები:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      D_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          ეს კიბის საფეხური იყენებს 76-გრადუსიან ბრუნს და მეორდება 4-ჯერ.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ეს ორნამენტები ძალიან ჰგავს კიბის საფეხურებს სხვა
          თავსატეხებიდან, ოღონდ სხვა ზომის კუთხეა გამოყენებული.
      D_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          ეს ნახატი შეიქმნა 4 კიბის ციკლისა და `მარჯვნივ 180 გრადუსით მობრუნების` ბლოკის `ორჯერ გამეორების` ბლოკში მოთავსებით.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      D_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: ფიგურის სატრიალებლად განსხვავებული სიდიდეების
          გამოყენება შეგიძლიათ! რას იტყვით 18-ჯერ 20 გრადუსიან მობრუნებაზე?
      D_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          აქ ორი განსხვავებული სიგრძის მქონე ფიფქია, ერთი დახატულია მეორის შემდეგ (მათ შორის 30 გრადუსიანი მობრუნებით.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          ეს არის პირველი მინიშნება.
          მას აქვს *რამდენიმე* **ძირითადი** `მარკირება`
        second_hint: |-
          ეს არის მეორე მინიშნება. მას აქვს სურათი.
          ![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: ეს არის მესამე და ბოლო მინიშნება. მას განსაკუთრებული მახასიათებელი
          არ აქვს.
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          ეს არის პირველი მინიშნება.
          მას აქვს *რამდენიმე* **ძირითადი** `მარკირება`
        second_hint: |-
          ეს არის მეორე მინიშნება. მას აქვს სურათი.
          ![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: ეს არის მესამე და ბოლო მინიშნება. მას განსაკუთრებული მახასიათებელი
          არ აქვს.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: If you call the functions correctly, this is the path
          you will travel...
        Function_intro_Ryan_a: თქვენს პროგრამაში ფუნქციის გამოძახება მრავალჯერ შეგიძლიათ!
          სცადეთ მისი ორჯერ გამოძახება ამ თავსატეხის ამოსახნსელად.
      Harvesting_authored_hint:
        pointer_harvester_test: რა ტიპის ბლოკის გამოყენება შემიძლია იმისათვის, რომ
          რამე შევამოწმო და მივიღო გადაწყვეტილება?
      Inspirational Artwork_authored_hint:
        brush_width: მანამ სანამ რამეს გავაკეთებთ, ჯაგრისის სიგანე 1-ს გავუტოლოთ და
          ლურჯი ფერი მივცეთ.
        double_loop: 'სცადეთ "გამეორების" ციკლის შიგნით მოათავსოთ კოდის ბლოკი: "for
          ციკლი".'
        specifics: |-
          კენტი რაოდენობის გვერდების მქონე ფიგურის დასახატად, 6 "ყვავილის ფურცელიდან" თითოეულისათვის`for ციკლი` 3-დან 17-მდე-ჯერ უნდა გავუშვათ.

          ბლოკი `განსაზღვრე ალფა` იყენებს გაყოფას მთვლელის ზრდის შესაბამისად ფერის გასამკრთალებლად.
        after: როდესაც ყვავილის თითოეულ ფურცელზე მუშაობას მორჩებით, მანამ სანამ 60
          გრადუსით მოუხვევთ, დარწმუნდით რომ ჯერ "წინ გადაადგილდებით" 20 პიქსელით.
        solution: |-
          **ამოხსნა**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      InspirationalArtwork_authored_hint: []
      InspirationalArtwork_2018_authored_hint: []
      K2.0 sequence 1_authored_hint:
        K2.0_sequence_1_a: This program is missing one block. Can you figure out which
          one?
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: If you're having trouble, try writing down the steps on
          a piece of paper first.
        K2.0_sequence_10_b: You will need three different kinds of arrows to solve
          this puzzle.
      K2.0 sequence 12_authored_hint:
        K2.0_sequence_12_a: If the pig isn't moving far enough, try adding another
          block.
      K2.0 sequence 2_authored_hint:
        K2.0_sequence_2_a: One of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: If you are having trouble, try to figure out what the correct
          path is and then remove the block that doesn't fit.
      K2.0 sequence 4_authored_hint:
        K2.0_sequence_4_a: Use 2 different arrow blocks to solve this puzzle!
      K2.0 sequence 5_authored_hint:
        K2.0_sequence_5: Your final code should have three movement blocks.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: There is 1 block that you need to add to move the bird
          to the pig.
        K2.0_sequence_6_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: Stuck? Try tracing the bird's path with your finger.
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: If you're having trouble, try writing down the steps on
          a piece of paper first.
        K2.0_sequence_9_b: You will need to go three different directions to solve
          this puzzle.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: If the path you need is unclear, use your finger to trace
          your way from the bird to the pig.
      K2.0 sequence pre_authored_hint:
        K2.0_sequence_pre_a: If you are having trouble getting the bird to move, make
          sure blocks are connected under `when run`.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some minecart tracks so
          you can explore the world!
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: გამოიყენეთ ისრების ღილაკები, რათა მიმარტოთ მოთამაშე
          სახლისკენ. მოსაგებად მიიყვანეთ ის ნარინჯისფერ კვადრატამდე.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Drag one `move forward` block from the toolbox to
          the workspace, and snap it into place beneath the `when run` block.
        MC_HOC_2017_01_RETRY_b: არ დაგავიწყდეთ "გაშვების" ღილაკზე დაწკაპება, რათა
          გაუშვით აგენტის კოდი.
        MC_HOC_2017_01_RETRY_c: Once the Agent has run all of its code, you can move
          the player with the arrow keys!
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Move the Agent forward two spaces to stand on the pressure
          plate.  That will open the door for your player.
        MC_HOC_2017_02_Cole_b: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_02_Cole_c: Once the Agent has opened the door, use the arrow keys
          to move the player to the map!
        MC_HOC_2017_02_Cole_d: Make sure the Agent is following the path outlined
          on the map!
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Move the Agent forward two spaces to stand on the pressure
          plate.  That will open the door for your player.
        MC_HOC_2017_02_Cole_b: |-
          Press "Run Agent"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_02_Cole_c: Once the Agent has opened the door, use the arrow keys
          to move the player to the orange square.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Once you get the Agent to the pressure plate, you can
          use your arrow keys to walk the player to the compass!
        MC_HOC_2017_03_Cole_b: Does the code feel a little long?  Try using a `repeat`
          loop and see if you can figure out how to make it shorter!
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Crossing these two pressure plates will open the path for the player.

          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Use the `turn right` block to change the agent''s
          direction '
        MC_HOC_2017_04POINT5_RYAN_a: The Agent only needs to get to the first pressure
          plate to let Alex or Steve through to the axe.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: The Agent needs to `move forward` 7 times.  How can
          you use a `repeat` loop to make that happen?
        MC_HOC_2017_04_Cole_c: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_04_Cole_b: Once the Agent gets to the pressure plate, he will
          open the door for the player.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: Did you know that you can put more than one piece of
          code inside of a loop?  Try placing a plank **and** moving forward inside
          of a `repeat` to complete this puzzle.
        MC_HOC_2017_05_Cole_b: Get the Agent across the river, building a bridge as
          you go.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: Did you know that you can put more than one piece of
          code inside of a loop?  Try placing a plank **and** moving forward inside
          of a `repeat` to complete this puzzle.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: How many times does this loop run?  How many times
          *should* it run?
        MC_HOC_2017_06_Cole_b: 'Help the Agent build a bridge all the way across the
          water! '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Try putting more than one instruction inside of a `repeat`
          loop!
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: All you need to have the Agent do is clear the path
          to the Minecart.
        MC_HOC_2017_07_Cole_a: To solve this puzzle, figure out what the `clear path`
          function does and call it as many times as you need using the small green
          `clear path` block from the toolbox.
        MC_HOC_2017_07_Cole_b: Try mixing the function blocks with other blocks from
          the toolbox to help you solve this puzzle.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Press "Run Agent"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_08_RY_b: There are LOTS of ways to solve this puzzle.  Try a few!
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Press "Run Agent"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_08_RY_b: There are LOTS of ways to solve this puzzle.  Try a few!
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: Use functions to make solving this puzzle easier!
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: Don't know where to go?  See if you can find the dotted
          line!
        MC_HOC_2017_10_Cole_a: Use functions to make solving this puzzle easier!
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some bridges so that Alex
          or Steve can walk around beyond the edges of the map.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Crossing these two pressure plates will open the path for the player.

          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_08_RY_b: There are LOTS of ways to solve this puzzle.  Try a few!
        MC_HOC_2017_08_RY_c: Try following the dotted line for a simple path through
          the lava.
      MC_HOC_2017_FP10x10_authored_hint: []
      MC_HOC_2017_FP10x10_RE_authored_hint: []
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some bridges so that Alex
          or Steve can walk around beyond the edges of the map.
      MikeStar_authored_hint:
        hint1: Don't give up!
      MikeStarHard_authored_hint:
        hint1: Don't give up!
      MikeStarNested_authored_hint:
        hint1: Don't give up!
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: სცადეთ დაარედაქტირო ფუნქცია `კვადრატის
          ხაზის დახატვა`, ისე რომ ეს ფუნქცია 2-ჯერ არ გამოიძახოთ.
        NEW_Course_4_Artist_Functions_13_c: რომელი კოდის გამოყებნება დაგჭირდებოდათ
          იმ შემთხვევაში, თუ ყუთების ნაცვლად წესიერი ხაზების გამოყენებით დააპირებდით
          ვარსკვლავის გაკეთებას?
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: თითოეული კვადრატის შემდეგ, უნდა გამოიყენოთ
          ბლოკი `შეუხვიე მარჯვნივ 120 გრადუსით`.
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: სცადეთ გააქტიურო კოდი მანამ, სანამ ახალ
          ბლოკებს დაამატებთ. რა იწვევს იმას, რომ ნახატი ოდნავ ცუდად გამოიყურება?
        NEW_Course_4_Artist_Functions_9_b: თუ დანამდვილებით არ შეგიძლიათ თქვათ, სადაა
          შეცდომა, სცადეთ შეანელოთ ხელოვანი მაუსის მარცხნივ გადაადგილებით.
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: აქ არის ერთზე მეტი რიცხვი, რომელსაც ფუნქციის
          შიგნით ცვლადით ჩანაცვლება ესაჭიროება.
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: 'იმისათვის რომ საბოლოო ჯამში ფიგურების ზომა
          იგივე დარჩეს, *პერიმეტრი* უნდა გაყოთ ფიგურის გვერდების რაოდენობაზე. '
      NEW Course 4 Artist Params 14_authored_hint:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times
          to figure out how the function works with different parameters.
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: მანამ სანამ რამეს გავაკეთებთ, ჯაგრისის სიგანე 1-ს გავუტოლოთ და
          ლურჯი ფერი მივცეთ.
        double_loop: 'სცადეთ "გამეორების" ციკლის შიგნით მოათავსოთ კოდის ბლოკი: "for
          ციკლი".'
        specifics: |-
          კენტი რაოდენობის გვერდების მქონე ფიგურის დასახატად, 6 "ყვავილის ფურცელიდან" თითოეულისათვის`for ციკლი` 3-დან 17-მდე-ჯერ უნდა გავუშვათ.

          ბლოკი `განსაზღვრე ალფა` იყენებს გაყოფას მთვლელის ზრდის შესაბამისად ფერის გასამკრთალებლად.
        after: როდესაც ყვავილის თითოეულ ფურცელზე მუშაობას მორჩებით, მანამ სანამ 60
          გრადუსით მოუხვევთ, დარწმუნდით რომ ჯერ "წინ გადაადგილდებით" 20 პიქსელით.
        solution: |-
          **ამოხსნა**


          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      NEW Course 4 Bee For Loops 10a_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number
          of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will
          use a math block.
      NEW Course 4 Bee For Loops 7_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.

          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: |-
          თუ თქვენი ციკლი ზრდადობით ითვლის, ყოველ ჯერზე ზრდის მაჩვენებელი თვენი მთვლელის ცვლადს ემატება.

          რამდენი უნდა დაუმატოთ თითოეულ რიცხვს, იმისათვის რომ მისი მოდევნო რიცხვი მიიღოთ?
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some bridges so that Alex
          or Steve can walk around beyond the edges of the map.
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: არის რამდენიმე ბილიკი, რომელსაც შეგიძლიათ გაყვეთ. რომელია მათგან უმოკლესი?
        mc_8_b: იმისათვის, რომ გაამარტივოთ კოდი, გამოიყენეთ `გამეორების` ციკლები.
        mc_8_c: თქვენი მიზანია შეაღწიოთ ეკრანის თავში მოთავსებული სახლის შესასვლელში.
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: არის რამდენიმე ბილიკი, რომელსაც შეგიძლიათ გაყვეთ. რომელია მათგან უმოკლესი?
        mc_8_b: იმისათვის, რომ გაამარტივოთ კოდი, გამოიყენეთ `გამეორების` ციკლები.
        mc_8_c: თქვენი მიზანია შეაღწიოთ ეკრანის თავში მოთავსებული სახლის შესასვლელში.
      Overworld Chop Tree_authored_hint:
        mc_2_a: იმისთვის, რომ ხის წინ დადგეთ, დაგჭირდება 2-ჯერ გამოიყენოთ ბლოკი`წინ
          გადაადგილდება`.
        mc_2_b: ბრძანება `ბლოკის განადგურება` თქვენს წინ მდებარე ხეს მოჭრის.
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: იმისთვის, რომ ხის წინ დადგეთ, დაგჭირდება 2-ჯერ გამოიყენოთ ბლოკი`წინ
          გადაადგილდება`.
        mc_2_b: ბრძანება `ბლოკის განადგურება` თქვენს წინ მდებარე ხეს მოჭრის.
      Overworld Chop Trees_authored_hint:
        mc_4_a: შეგიძლიათ, ხე მოჭრათ ნებისმიერი თანმიმდევრობით. რომელ ბილიკს დასჭირდება
          ბლოკების უმცირესი რაოდენობა?
        mc_4_b: ბრძანება `ბლოკის განადგურება` თქვენს წინ მდებარე ხეს მოჭრის.
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: შეგიძლიათ, ხე მოჭრათ ნებისმიერი თანმიმდევრობით. რომელ ბილიკს დასჭირდება
          ბლოკების უმცირესი რაოდენობა?
        mc_4_b: ბრძანება `ბლოკის განადგურება` თქვენს წინ მდებარე ხეს მოჭრის.
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: იმისათვის, რომ აირჩიოთ რისი განთავსება გინდათ, დააწექით ისარს ბლოკზე
          `განთავსება`.
        mc_6_b: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
        mc_6_c: ციკლში `გამეორება` შეგიძლიათ მოათავსოთ ერთზე მეტი ბლოკი.
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: იმისათვის, რომ აირჩიოთ რისი განთავსება გინდათ, დააწექით ისარს ბლოკზე
          `განთავსება`.
        mc_6_b: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
        mc_6_c: ციკლში `გამეორება` შეგიძლიათ მოათავსოთ ერთზე მეტი ბლოკი.
      Overworld Move to Sheep_authored_hint:
        mc_1_a: ბლოკი `წინ გადაადგილება` მოთავსებულია პანელის თავში.
        mc_1_b: დარწმუნდით, რომ `წინ გადაადგილების` ორივე ბლოკი მოთავსებულია გაშვების`
          ბლოკში.
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: ბლოკი `წინ გადაადგილება` მოთავსებულია პანელის თავში.
        mc_1_b: დარწმუნდით, რომ `წინ გადაადგილების` ორივე ბლოკი მოთავსებულია გაშვების`
          ბლოკში.
      Overworld Place Wall_authored_hint:
        mc_5_a: ჯერ გამოიყენეთ ბლოკი `განთავსება` და შემდეგ ბლოკი `გადაადგილება`.
        mc_5_b: იმისათვის, რომ კოდი ერთზე მეტჯერ გაუშვათ, დარწმუნდით, რომ ორივე ბლოკი
          `გამეორების` ციკლის შიგნითაა მოქცეული.
        mc_5_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: ჯერ გამოიყენეთ ბლოკი `განთავსება` და შემდეგ ბლოკი `გადაადგილება`.
        mc_5_b: იმისათვის, რომ კოდი ერთზე მეტჯერ გაუშვათ, დარწმუნდით, რომ ორივე ბლოკი
          `გამეორების` ციკლის შიგნითაა მოქცეული.
        mc_5_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      Overworld Plant Crops_authored_hint:
        mc_7_a: იმისათვის, რომ დარგოთ მცენარეულობა იმ სივრცეში, სადაც დგახართ, გამოიყენეთ
          ბლოკი `მცენარეულობის დარგვა`.
        mc_7_b: წყლის პირას მდებარე მუქი ყავისფერი ხმელეთის ორივე ზოლს სჭირდება მარცვლეულობით
          შევსება.
        mc_7_c: ციკლში `გამეორება` შეგიძლიათ მოათავსოთ ერთზე მეტი ბლოკი.
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: იმისათვის, რომ დარგოთ მცენარეულობა იმ სივრცეში, სადაც დგახართ, გამოიყენეთ
          ბლოკი `მცენარეულობის დარგვა`.
        mc_7_b: წყლის პირას მდებარე მუქი ყავისფერი ხმელეთის ორივე ზოლს სჭირდება მარცვლეულობით
          შევსება.
        mc_7_c: ციკლში `გამეორება` შეგიძლიათ მოათავსოთ ერთზე მეტი ბლოკი.
      Overworld Powered Minecart_authored_hint:
        mc_13_a: გამოიყენეთ ბლოკი `რკინიგზის განთავსება` იმისათვის, რომ რკინიგზა განათავსოთ
          იმ კვადრატზე, რომელზეც დგახართ.
        mc_13_b: იმისათვის, რომ კოდი შეამოკლოთ, გამოიყენეთ ციკლები `გამეორება`.
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: გამოიყენეთ ბლოკი `რკინიგზის განთავსება` იმისათვის, რომ რკინიგზა განათავსოთ
          იმ კვადრატზე, რომელზეც დგახართ.
        mc_13_b: იმისათვის, რომ კოდი შეამოკლოთ, გამოიყენეთ ციკლები `გამეორება`.
      Overworld Shear Sheep_authored_hint:
        mc_3_a: "`გაკრეჭვის` ბლოკი თქვენს წინ მოიყვანს ცხვრებს. ხედავთ ცხვრებს თქვენ
          წინ?"
        mc_3_b: თუ გინდათ შეცვალოთ ცხვრებთან შეპირისპირების გზა, გამოიყენეთ `მობრუნების`
          ბლოკი.
        mc_3_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: "`გაკრეჭვის` ბლოკი თქვენს წინ მოიყვანს ცხვრებს. ხედავთ ცხვრებს თქვენ
          წინ?"
        mc_3_b: თუ გინდათ შეცვალოთ ცხვრებთან შეპირისპირების გზა, გამოიყენეთ `მობრუნების`
          ბლოკი.
        mc_3_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      Pattern Bee 1_authored_hint:
        conditional_pointer: |-
          დაიწყეთ ამ ნაწილის შესახებ ფიქრით: გზის ყოველ ნაბიჯზე რა არის განსხვავებული? რა ტიპის ბლოკი შეგიძლიათ, გამოიყენოთ იმისათვის რომ მიიღოთ *გადაწყვეტილება* იმის შესახებ, თუ სად ხართ: ყვავილთან თუ თაფლის ფიჭასთან?
          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: თაფლის გაკეთების გარდა, ხედავთ რამე განსხვავებულს,
          რაც თითოეულ თაფლის ფიჭასთან უნდა გააკეთოთ?
      Planning Farmer_authored_hint:
        conditional_pointer: |-
          დაიწყეთ ამ ნაწილის შესახებ ფიქრით: გზის ყოველ ნაბიჯზე რა არის განსხვავებული? რა ტიპის ბლოკი შეგიძლიათ, გამოიყენოთ იმისათვის რომ მიიღოთ *გადაწყვეტილება* იმის შესახებ, თუ სად ხართ: ყვავილთან თუ თაფლის ფიჭასთან?
          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: თაფლის გაკეთების გარდა, ხედავთ რამე განსხვავებულს,
          რაც თითოეულ თაფლის ფიჭასთან უნდა გააკეთოთ?
      Quantum Bee - Ryan_authored_hint:
        test_hint: ეს არის ტესტის მინიშნება.
      Test embedded K1 Blockly in instructions_authored_hint: []
      Underground Avoiding Lava_authored_hint:
        mc_11_a: ყველა კოდი თავის ადგილზეა. დროა, ლავაზე შეამოწმოთ და გაუმკლავდეთ
          მას. ახლა მხოლოდ გადაადგილების ბლოკის დამატება დაგრჩათ.
        mc_11_b: "`წინ გადაადგილების`ბრძანება `თუ` წინადადების შიგნით უნდა განთავდეს
          თუ მის შემდეგ?"
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: ყველა კოდი თავის ადგილზეა. დროა, ლავაზე შეამოწმოთ და გაუმკლავდეთ
          მას. ახლა მხოლოდ გადაადგილების ბლოკის დამატება დაგრჩათ.
        mc_11_b: "`წინ გადაადგილების`ბრძანება `თუ` წინადადების შიგნით უნდა განთავდეს
          თუ მის შემდეგ?"
      Underground If Statements_authored_hint:
        mc_12_a: სივრცეები წითელი ლაქებით არის ადგილი, სადაც მინერალურ ქვას იპოვით.
        mc_12_b: შეგიძლიათ გამოიყენოთ ციკლი `გამეორება`, იმისათვის, რომ თქვენი კოდი
          შეამოკლოთ?
        mc_12_c: 'გამოიყენეთ `თუ` დებულება, იმისათვის რომ ლავა შეამოწმოთ, შემდეგ განათავსეთ
          რიყის ქვები. '
      Underground If Statements_2018_authored_hint:
        mc_12_a: სივრცეები წითელი ლაქებით არის ადგილი, სადაც მინერალურ ქვას იპოვით.
        mc_12_b: შეგიძლიათ გამოიყენოთ ციკლი `გამეორება`, იმისათვის, რომ თქვენი კოდი
          შეამოკლოთ?
        mc_12_c: 'გამოიყენეთ `თუ` დებულება, იმისათვის რომ ლავა შეამოწმოთ, შემდეგ განათავსეთ
          რიყის ქვები. '
      Underground Iron_authored_hint:
        mc_10_a: რკინის ბლოკები დალაქავებული ადგილებია ჩირაღდნის უკან! როგორ აპირებთ
          იქ მიაღწიოთ?
        mc_10_b: |-
          როდესაც ლავის პირას დგახართ, გამოიყენეთ ბლოკი: `განათავსეთ რიყის ქვა წინ`, იმისათვის რომ უსაფრთხო გახადოთ ბილიკი.
          ამის შემდგ შეგიძლიათ მასზე გაიაროთ!
        mc_10_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      Underground Iron_2018_authored_hint:
        mc_10_a: რკინის ბლოკები დალაქავებული ადგილებია ჩირაღდნის უკან! როგორ აპირებთ
          იქ მიაღწიოთ?
        mc_10_b: |-
          როდესაც ლავის პირას დგახართ, გამოიყენეთ ბლოკი: `განათავსეთ რიყის ქვა წინ`, იმისათვის რომ უსაფრთხო გახადოთ ბილიკი.
          ამის შემდგ შეგიძლიათ მასზე გაიაროთ!
        mc_10_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ თავსატეხი ჯერ არ
          ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      Underground Mining Coal_authored_hint:
        mc_9_a: სახით პირისპირ უყურებ სწორ გზას? `განადგურების ბლოკი` გამოთხრის ამ
          ბლოკს შენს წინ.
        mc_9_b: კედელში შავი ლაქები ქვანახშირია! გამოიყენეთ `განადგურების ბლოკი` მათ
          გამოსათხრელად.
        mc_9_c: იმისათვის, რომ განათავსოთ ჩირაღდანი იმ სივრცეში, სადაც დგახართ, გამოიყენეთ
          ბლოკი `ჩირაღდნის განთავსება`.
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: სახით პირისპირ უყურებ სწორ გზას? `განადგურების ბლოკი` გამოთხრის ამ
          ბლოკს შენს წინ.
        mc_9_b: კედელში შავი ლაქები ქვანახშირია! გამოიყენეთ `განადგურების ბლოკი` მათ
          გამოსათხრელად.
        mc_9_c: იმისათვის, რომ განათავსოთ ჩირაღდანი იმ სივრცეში, სადაც დგახართ, გამოიყენეთ
          ბლოკი `ჩირაღდნის განთავსება`.
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: Each side of the grass is 30 pixels long. Try using
          a stair step pattern.
        Valentine_artist2_01_b: 'Do you see any patterns repeating? You should be
          using two `move forward` blocks and two different `turn` blocks inside a
          loop. '
        Valentine_artist2_01_c: |-
          Try this loop
          <xml><block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: Which direction does the artist need to face to move?
          Which direction does the artist need to face to place a new llama sticker?
        Valentine_artist_01_b: The artist needs to place 10 llama stickers and turn
          90 degrees at each turn.
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: |-
          Snap the `actor 1 throw red hearts down` block into the `when actor 1 clicked` event.

          Don't forget to change `left` to `down`!
        Valentine_playlab_01_b: Use the `move actor 1 left` block by clicking it into
          place beneath the `when left arrow clicked` event.
      aE1_authored_hint: []
      aE2_authored_hint:
        aE2_a: 'მიაქციეთ ყურადღება: რადგან ხელსახოცები 20 პიხსელი სიგრძისაა, მოგიწევთ
          20 პიქსელით გადახტეთ, სანამ მომდევნო ციკლს დაიწყებთ.'
      aE3_authored_hint:
        aE3_a: ბოლო საფეხურიდან **ჩასმული ციკლის** გაშვების შემდეგ, თქვენ უნდა გადახტეთ
          კოდის პირველ ხაზზე.
        aE3_b: |-
          არ დაგავიწყდეთ მხატვრის ქვემოთ ჩამოყვანა, სანამ ფიგურების ახალ მწკრივს დაიწყებთ!

          მხატვრის ქვემოთ ჩამოსაყვანად და სწორი მიმართულებით შესატრიალებლად, დარწმუნდით რომ:
          - შებრუდნით 90 გრადუსით (ქვემოთ შესაბრუნებლად)
          - გადახტით 20 პიქსელით (ახალ მწკრივთან მოსახვედრად)
          - შებრუნდით 90 გრადუსით (სწორი მიმართულებით შესატრიალებლად)
        aE3_c: როდესაც ყველაფერს დაასრულებთ, თქვენი **ჩადგმული ციკლები** სამი გამეორების
          ტოლი სიღრმის უნდა იყოს.
        aE3_d: თუ თქვენი კოდი ზედმეტად გაუგებარი გახდება, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან და კიდევ სცადოთ!
      aE3alternate_authored_hint:
        aE3alternate_a: ბოლო საფეხურიდან **ჩასმული ციკლის** გაშვების შემდეგ, თქვენ
          უნდა გადახტეთ კოდის პირველ ხაზზე.
        aE3alternate_b: |-
          არ დაგავიწყდეთ მხატვრის ქვემოთ ჩამოყვანა, სანამ ფიგურების ახალ მწკრივს დაიწყებთ!

          მხატვრის ქვემოთ ჩამოსაყვანად და სწორი მიმართულებით შესატრიალებლად, დარწმუნდით რომ:
          - შებრუდნით 90 გრადუსით (ქვემოთ შესაბრუნებლად)
          - გადახტით 20 პიქსელით (ახალ მწკრივთან მოსახვედრად)
          - შებრუნდით 90 გრადუსით (სწორი მიმართულებით შესატრიალებლად)
        aE3alternate_c: როდესაც ყველაფერს დაასრულებთ, თქვენი **ჩადგმული ციკლები**
          სამი გამეორების ტოლი სიღრმის უნდა იყოს.
        aE3alternate_d: თუ თქვენი კოდი ზედმეტად გაუგებარი გახდება, ყოველთვის შეგიძლიათ
          დაიწყოთ თავიდან და კიდევ სცადოთ!
      aE3alternateB_authored_hint:
        aE4alternateB_a: ბოლო საფეხურიდან **ჩასმული ციკლის** გაშვების შემდეგ, თქვენ
          უნდა გადახტეთ კოდის პირველ ხაზზე.
        aE4alternateB_b: |-
          არ დაგავიწყდეთ მხატვრის ქვემოთ ჩამოყვანა, სანამ ფიგურების ახალ მწკრივს დაიწყებთ!

          მხატვრის ქვემოთ ჩამოსაყვანად და სწორი მიმართულებით შესატრიალებლად, დარწმუნდით რომ:
          - შებრუდნით 90 გრადუსით (ქვემოთ შესაბრუნებლად)
          - გადახტით 20 პიქსელით (ახალ მწკრივთან მოსახვედრად)
          - შებრუნდით 90 გრადუსით (სწორი მიმართულებით შესატრიალებლად)
        aE4alternateB_c: როდესაც ყველაფერს დაასრულებთ, თქვენი **ჩადგმული ციკლები**
          სამი გამეორების ტოლი სიღრმის უნდა იყოს.
        aE4alternateB_d: თუ თქვენი კოდი ზედმეტად გაუგებარი გახდება, ყოველთვის შეგიძლიათ
          დაიწყოთ თავიდან და კიდევ სცადოთ!
      aE4_authored_hint:
        aE4_a: ბოლო საფეხურიდან **ჩასმული ციკლის** გაშვების შემდეგ, თქვენ უნდა გადახტეთ
          კოდის პირველ ხაზზე.
        aE4_b: |-
          არ დაგავიწყდეთ მხატვრის ქვემოთ ჩამოყვანა, სანამ ფიგურების ახალ მწკრივს დაიწყებთ!

          მხატვრის ქვემოთ ჩამოსაყვანად და სწორი მიმართულებით შესატრიალებლად, დარწმუნდით რომ:
          - შებრუდნით 90 გრადუსით (ქვემოთ შესაბრუნებლად)
          - გადახტით 20 პიქსელით (ახალ მწკრივთან მოსახვედრად)
          - შებრუნდით 90 გრადუსით (სწორი მიმართულებით შესატრიალებლად)
        aE4_c: როდესაც ყველაფერს დაასრულებთ, თქვენი **ჩადგმული ციკლები** სამი გამეორების
          ტოლი სიღრმის უნდა იყოს.
        aE4_d: თუ თქვენი კოდი ზედმეტად გაუგებარი გახდება, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან და კიდევ სცადოთ!
      aE5_authored_hint: []
      aE6_authored_hint:
        aE6_a: |-
          თუ ნახევარწრეში 180 გრადუსია და ყოველი ციკლი ასრულებს 3 გრადუსიან მობრუნებას, რამდენჯერ უნდა დაატრიალოთ ციკლი ნახევარწრის დასახატად?

          **180 ÷ 3 = ?**
      aE7_authored_hint:
        aE7_a: დახატეთ წრის ქვედა ნახევარი, შემდეგ კი წრის ზედა ნახევარი ერთი სეგმენტის
          შესაქმნელად.
        aE7_b: ამ თავსატეხის დასასრულებლად თქვენ დაგჭირდებათ 4 სეგმენტი.
      aE8_authored_hint:
        aE8_a: |-
          ხაზისგან კვადრატის შესაქმნელად თქვენ დაგჭირდებათ:
          - ხაზის დახატვა
          - მოღუნული კუთხის გამოყეენბა

          გაიმეორეთ ეს ბიჯები 4 ჯერ.
      allHallows2017_authored_hint:
        allHallows2017_a: Careful!  GT might follow behind you on his bike and erase
          your line!
        allHallows2017_g: 'Sarah says: "Are you cold? Come sit in the corner... It''s
          90 degrees!"'
        allHallows2017_c: 'Jordyn says: "You crayon''t stop now! Keep going!"'
        allHallows2017_d: 'Josh says: "You will need to draw on your coding skills
          to complete this puzzle!"'
        allHallows2017_e: 'Dani says: "I''m not good at puns. Try using a repeat block!"'
        allHallows2017_b: 'Baker says: "The Chicago crayon only works on the *green
          line*."'
        allHallows2017_f: 'Amy says: "You can do it! Just think outside the box"'
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      artistFunctionsVideo1_authored_hint: []
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ შეცვალოთ
          ბლოკის თავში განლაგებული რიცხვი.
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ შეცვალოთ
          ბლოკის თავში განლაგებული რიცხვი.
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: სცადეთ და გამოიყენეთ თქვენი ცოდნა გამეორების ბლოკების შესახებ
          ამ თავსატეხის ამოსახსნელად!
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: გაიჭედეთ? სცადეთ კოდის გაშვება, რომ ნახოთ, რომელი ბლოკი შეიცავს
          შეცდომას.
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: ამ თავსატეხის ამოსახსნელად 4-ივე საწყისი ბლოკი უნდა მოთავსდეს
          გამეორების ბლოკში.
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: სცადეთ კოდის გაშვება ბაგის საპოვნელად.
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: ამ თავსატეხში საჭირო ყველა ბლოკი უკვე განთავსებულია სამუშაო
          სივრცეში!
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: სცადეთ კოდის გაშვება ბაგის საპოვნელად.
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: ამ გამოწვევაში მიმდევრულად გამოიყენება ოთხი ციკლი!
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: გამოიყენეთ ახტომის ბლოკი, ხაზის დახატვის გარეშე, წინ გადასაადგილებლად.
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: ამ თავსატეხის ამოსახსნელად, თქვენს ციკლში უნდა იყოს სამი
          ბლოკი.
      artistLoopsKFP_authored_hint: []
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: Comments are also helpful when other people try
          to read your code.
        courseC_maze_programming4_b: Add a comment when you change directions- what
          would have happened if you turned the other way?
      conditionals_forvideo_harvester_authored_hint: []
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |
          კედლების და სახურავის შესაქმნელად შეგიძლიათ გამოიყენოთ ციკლები. სცადეთ სხვადასხვა ბლოკის გამეორება.



          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          შექმენით თქვენი საკუთარი ან დააკლიკეთ აქ ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) იდეების მისაღებად!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2_authored_hint:
        harvey_tictactoe: თქვენ შეგიძლიათ `ახტომის` ბლოკების გამოყენება სხვა ადგილებზე
          მოსახვედრად.
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_left"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseA_artist_loops_challenge2_b: როდესაც დაასრულებთ ერთი ჩიტის სახლის მშენებლობას,
          `გადახტით` შემდეგზე!
        courseA_artist_loops_challenge2_c: ამ გამოწვევისთვის დაგჭირდებათ ციკლში ძალიან
          ბევრი ბლოკის განთავსება.
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_right"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseB_artist_loops_challenge1_b: როდესაც დაასრულებთ ერთ კამათელს, `გადახტით`
          შემდეგზე!
        courseB_artist_loops_challenge1_c: 'რამდენიმე ხაზზე თქვენ დაგჭირდებათ `გადაადგილდეთ`
          ან `ახტეთ` ორ-ორჯერ. '
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: თუ პროგრამაში რამე არასწორად შესრულდა,
          სცადეთ თითოეულ ციკლში რიცხვების შეცვლა.
        courseA_collector_loops_challenge1_b: თუ რამეს ერთჯერადად ასრულებთ, ციკლის
          გამოყენება არ გჭირდებათ.
        courseA_collector_loops_challenge1_c: გამოქვაბულის მარჯვენა მხარეს 6 ძვირფასი
          ქვაა, თუმცა თქვენ უნდა გადაადგილდეთ და შეაგროვოთ ისინი მხოლოდ 5-ჯერ. ხვდებით
          რატომ?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: ამ პრობლემის გადასაჭრელად თქვენ მხოლოდ
          ერთი ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) ბლოკის გამოყენება გჭირდებათ.
        courseA_collector_loops_challenge2_a: |-
          სამხრეთით მოძრაობის დაწყებამდე, შეგიძლიათ ბილიკზე მეორეჯერ გადაადგილდეთ უკან.
          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |
          დაიწყეთ შემდეგი ბრძანებების ციკლში გატარებით: `იმოძრავე სამხრეთით` და `შეაგროვე განძი`.
          <xml>
          <block type="maze_moveSouth"/><next>
          <block type="collector_collect"/></next>
          </xml>
        courseB_collector_loops_challenge1_a: |
          ჩრდილოეთის ნიმუში ოდნავ განსხვავდება სამხრეთის ნიმუშისგან.
          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>
          </xml>
        courseB_collector_loops_challenge1_c: |
          ბილიკებს შორის იმოძრავეთ აღმოსავლეთით ორჯერ.
          <xml>
            <block type="maze_moveEast"/><next>
            <block type="maze_moveEast"/></next>
            </xml>
          ამის გაკეთება მხოლოდ 14 ბლოკის საშუალებით შეგიძლიათ. დააკლიკეთ კიდევ ერთი რჩევის სანახავად.
        courseB_collector_loops_challenge1_d: |-
          სცადეთ ეს!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: თუ რამე არ გამოგდით, ნუ შეგეშინდებათ
          თავიდან დაწყების. არ დანებდეთ!
        courseB_collector_loops_challenge2_b: |-
          თუ კოდის ამ სტრუქტურას გამოიყენებთ, გამოქვაბულის ბოლოს ლორელი კედელს არ დაეჯახება!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: იმისათვის რომ მოიპოვოთ საგანძურის უკანასკნელი
          გროვა, სცადეთ გამოიყენოთ`გამეორების` ბლოკი!
        courseB_collector_loops_challenge2_d: |-
          მოსინჯეთ ეს ამოხსნა:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: ზოგიერთი გზა დინამიტთან მიგიყვანთ, თუ ზედმეტად
          შორს გადაადგილდებით.
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: ამ თავსატეხის ამოსახსნელად თქვენ არ გჭირდებათ
          დაამატოთ ან წაიღოთ ბლოკები.
        courseB_maze_seq_challenge2_b: ახლებურად განალაგეთ ბლოკები და გაყევით შუა
          გზას.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: სცადეთ ჰარების თითით დათვლა. საწყისი ჰარი არ
          ჩათვალოთ!
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: ამჯერად უმოკლესი ბილიკი შეიძლება არ გამოგვადგეს.
        courseB_maze_seq_challenge1_b: დასაწყებად, სცადეთ დასავლეთისკენ მოძრაობა.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "გამოაჩინეთ პინგვინი ვოლდსი, როდესაც
          რობინზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "გამოაჩინეთ მოჩვენება სახელად ბუა, როდესაც
          ვოდლსზე დააწკაპებთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "გამოაჩინეთ ფუმფულა მონსტრი ჯეიდენი,
          როდესაც დააკლიკავთ ბუაზე!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "გამოაჩინეთ რობოტი სპიფი, როდესაც მონსტრზე
          დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "საბოლოოდ, გამოაჩინეთ ჯადოქარი ვენდელი,
          როდესაც სპიფზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "შეგიძლიათ ჩიტი აამღეროთ.\n<xml> \n  <block
          type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">ჭიკ-ჭიკ</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "შეგიძლიათ რობოტს ხმოვანი სიგნალი ამოაშვებინოთ.\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n
          \ </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          შეგიძლიათ აღრენინოთ გაბრაზებულ მონსტრს.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">რრრ!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: დაიწყეთ ჩასმული ციკლის შექმნით, რათა
          დახატოთ ოთხი რვაკუთხედი. მობრუნდით 45 გრადუსით რომ გააკეთოთ რვაკუთხედი.
          გადახტით და მობრუნდით 90 გრადუსით თითოეულის შემდეგ.
        courseD_artist_nestedLoops_challenge1_b: დაამატეთ კოდი, რომ დახატოთ სამკუთხედი
          ჩასმულ ციკლში. გამოიყენეთ 120 გრადუსიანი ბრუნები თქვენი სამკუთხედისათვის.
        courseD_artist_nestedLoops_challenge1_c: |-
          გამოიყენეთ ჩასმული ციკლი:
          - გაიმეორეთ 8-ჯერ
          - დახატეთ რვაკუთხედი
          - დახატეთ სამკუთხედი
          - გადახტით წინ 50 პიქსელით
          - შეტრიალდით მარცხნივ 90 გრადუსით
      course2_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: ჩვეულებრივი რვაკუთხედის დასახატად
          მხატვარმა უნდა შეასრულოს 45 გრადუსიანი ბრუნი 8-ჯერ.
        courseD_artist_nestedLoops_challenge2_b: კვადრატის დასახატად, მხატვარმა უნდა
          შეასრულოს ბრუნი 90 გრადუსით 4-ჯერ.
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: 'მართკუთხედი 200 პიქსელის სიგანისაა და 100
          პიქსელის სიმაღლის. '
      course2_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "თქვენ შეგიძლიათ განალაგოთ ბრძანებები `გამეორების`
          ციკლში, რათა მრავალჯერ გაიმეოროთ ისინი. სცადეთ!\n<xml>\n  \n          <block
          type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">მოძრაობაწინ</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: |-
          შეგიძლიათ იპოვოთ გზა, რომელიც ხეებთან დაჯახების გარეშე მიგიყვანთ ყველა ყვავილამდე და ფიჭამდე? საუკეთესო გზა სპირალურია.

          **ამის ამოხსნა შეგიძლიათ მარცხნივ შეხვევის გარეშე.**
        courseD_bee_conditionals_challenge1_b: ამ თავსატეხში ყოველი თავისუფალი ადგილი
          შეიძლება იყოს ყვავილი, ფიჭა ან არაფერი. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ
          გაიმეოროთ `თუ/სხვაგვარად`პირობითი ბლოკი ყოველ კვადრატთან.
      course2_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          ზუსტად ისე, როგორც `თუ ყვავილია` ბლოკის შიგნით, `სანამ ნექტარი > 0` ბლოკის შიგნით განლაგებული კოდი გაიშვება მხოლოდ მაშინ, როდესაც ფუტკარი ყვავილთანაა. განსხვავება იმაშია, რომ შიგნით მოთავსებული კოდი გაიშვება განმეორებითად მანამ, სანამ ნექტარი გათავდება. სცადეთ ეს ნიმუში:

          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      course2_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: საწყისი კოდი მშვენივრად მუშაობს - მაშინმ
          როდესაც თითოეულ გროვაში მხოლოდ ერთი განძის ნაწილაკია!
        courseC_maze_loops_challenge2_b: გამოიყენეთ ციკლები, რათა გეყოთ `შეგროვების`
          ბლოკები!
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: გამოიყენეთ `შეგროვების` ბრძანება უფრო
          ხშირად, რათა შეაგროვოთ დამატებითი განძი.
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: გამოიყენეთ `შეგროვების` ბრძანება უფრო
          ხშირად, რათა შეაგროვოთ დამატებითი განძი.
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: არც კი იფიქროთ ამის ამოხსნა ციკლების
          გარეშე სცადოთ!
        courseC_harvester_loops_challenge1_b: თქვენ შეგიძლიათ გამოიყენოთ `წინ მოძრაობა`
          და `სიმინდის შეგროვება` იმდენჯერ, რამდენჯერაც დაგჭირდებათ, შემდეგ კი `შეტრიალდეთ
          მარჯვნივ` ყოველ კუთხესთან.
        courseC_harvester_loops_challenge1_c: |-
          სიმინდის შესაგროვებლად საუკეთესო ამონახსნი იყენებს `გამეორების` ბლოკს სხვა `გამეორების` ბლოკის შიგნით. თქვენ შეგიძლიათ ამ ნიმუშის გამოყენება დანარჩენი თავსატეხისთვისაც!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      course2_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: ამის ამოხსნის ერთი გზა ტეხილივით გამოიყენება.
          მეორე გზა - სპირალივით! ამგვარ თავსატეხს ბევრი ამონახსნი აქვს. მთავარია,
          არ დანებდე!
        courseC_harvester_loops_challenge2_b: თქვენ შეგიძლიათ გაიმეოროთ "წინ გადაადგილება"
          და "სალათის ფურცლის შეგროვება", იმდენჯერ, რამდენჯერაც დაჭირდებათ, შემდეგ,
          თითოეულ კუთხესთან შეუხვიეთ.
        courseC_harvester_loops_challenge2_c: |
          თავსატეხის მხოლოდ 20 ბლოკით დასასრულებლად, ზიგზაგის ფორმის ფიგურა შეიძლება ორჯერ გამეორდეს!
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          ამ სპირალის ფორმის ფიგურის კოდის დასაწერად 18 ბლოკია საკმარისი!
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: წარმოიდგინეთ, რომ ეს ბილიკი 3 განსხვავებული
          ნაწილისგან შედგება. თითოეულს აქვს სტრუქტურა, რომელიც შეგიძლიათ გაიმეოროთ.
        courseC_maze_loops_challenge1_b: გამეორების ბლოკებს შორის ციყვის მომდევნო
          მოქმედებისათვის გასამზადებლად, დაგჭირდებათ "მარცხნივ შეხვევა" ან "მარჯვნივ
          შეხვევა".
        courseC_maze_loops_challenge1_c: |-
          თუ აქამე მოხვედით, უბრალოდ გჭირდებათ რამდენჯერმე `შეუხვიოთ მარცხნივ` შემდეგ კი `გადაადგილდეთ წინ`. არ დანებდეთ!

          ![](https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png)
      course2_maze_programming_challenge1_authored_hint: []
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "*თუ უკან გამაგზავნით, გამოიჩინეთ სიფრთხილე
          და დარწმუნდით, რომ სწორად შევტრიალდები*"
        courseC_maze_programming_challenge2_b: უმოკლესი ამონახსნი იყენებს მხოლოდ 5
          ბლოკს, თუმცა ასევე იყენებს `გამეორების` ბლოკს!
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: სცადეთ ჰარების თითით დათვლა. საწყისი ჰარი არ
          ჩათვალოთ!
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: ამჯერად უმოკლესი ბილიკი შეიძლება არ გამოგვადგეს.
        courseB_maze_seq_challenge1_b: დასაწყებად, სცადეთ დასავლეთისკენ მოძრაობა.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: "ექვსკუთხედის ნახევარს აქვს \"30-ის ტოლი
          სიგრძე\" და ბრუნავს მარჯვნივ **60 გრადუსით**.\n  "
        courseE_artist_concept_challenge1_b: 'სამკუთხედის 2/3-ს აქვს **80-ის ტოლი
          სიგრძე** და ბრუნავს მარჯვნივ **120 გრადუსით**. '
      course3_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: თუ ამ ფუნქციას კიდევ ერთხელ გამოიძახებთ,
          შეგიძლიათ შექმნათ იგივე დიზაინი საბოლოო კუთხეში. თქვენ, აგრეთვე, შეგიძლიათ
          `გადახტეთ` სხვა პოზიციებზე, ან შეცვალოთ ყველაფერი, როგორც მოგესურვებათ!
      course3_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n
          \   <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n
          \ </block>\n  </xml>\n  \nეს `გადახტომის` ბლოკი საშუალებას გაძლევთ ამოძრაოთ
          ზომბი სახატავი ბადის ნებისმიერ პიქსელზე, სადაც მოგესურვებათ. ბლოკი მუშაობს
          ზომის რაღაც პიქსელებით მარჯვნივ და რაღაც პიქსელებით დაბლა გადაყვანით. ათვლა
          ყოველთვის იწყება ზედა მარცხენა კუთხიდან, რაც ნიშნავს, რომ არ აქვს მნიშვნელობა,
          თუ სადაა ზომბი მხატვარი, სანამ ბრძანება გაეშვება!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course3_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: რატომ არ მუშაობს პროგრამის პირველი ნაწილი?
          იფიქრეთ იმაზე, რატომ უნდა იმოძრაოს ფუტკარმა უკანა მიმართულებით. რამდენ ნექტარს
          აგროვებს ფუტკარი, როდესაც ყვავილზე გადადის?
        courseD_bee_debugging_challenge1_b: უკანა გზაზე ამოძრავეთ ფუტკარი იგივე პრინციპით.
          რამდენი თაფლი უნდა გააკეთოს ფუტკარმა ყოველჯერ, როდესაც ფიჭაზე გაივლის?
        courseD_bee_debugging_challenge1_c: |-
          როდესაც ფუტკარი მიაღწევს ქვედა მწკრივს, გაამეორებინეთ მას შემდეგი ბრძანებები:

          *გაიმეორე 2-ჯერ:
          * გადაადგილდი წინ
          * გააკეთე 3 თაფლი
          * გადაადგილდი უკანა მიმართულებით
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions_challenge1_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა მწვანე
          ფუნქციის ბლოკში.
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions_challenge1_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა მწვანე
          ფუნქციის ბლოკში.
      course3_bee_functions_challenge3_authored_hint:
        courseF_bee_functions_challenge1_a: გამოიყენეთ ფუნქციები ინსტრუმენტების პანელიდან.
          თქვენ შეგიძლიათ გამოიძახოთ ფუნქცია სხვა ფუნქციის განსაზღვრებაში!
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          თუ გზა მარჯვნივაა მიმართული, თქვენ უნდა მოიქცეთ შემდეგნაირად:
          * შეაგროვოთ ნებისმიერი რაოდენობის ნექტარი ან გააკეთოთ ნებისმიერი რაოდენობის თაფლი
          * შებრუდენდეთ მარჯვნივ, გვერდითი გზისკენ
          * გაიაროთ გვერდითი გზა ბოლომდე
          * შებრუნდეთ მარჯვნივ

          თუ ზემოთ ჩამოთვლილ ქმედებებს ორჯერ გაიმეორებთ, თქვენ იქნებით მზად დაუბრუნდეთ მთავარ გზას.

          **რჩევის ღილაკს მხოლოდ იმ შემთხვევაში უნდა დააჭიროთ, თუ მთლიანი ამონახსნის ნახვა გინდათ!**
        courseF_bee_functions_challenge2_b: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">შეამოწმეთ ნექტარია თუ თაფლი</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">გადაადგილდი და შეამოწმე</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "ყურადღება გაამახვილეთ პირველი ორი
          გროვიდან ორი ძვირფასი ქვის შეგროვებაზე.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png)\nგამოიყენეთ ეს ბლოკები.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">მოძრაობაწინ</title>\n\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "შემდეგ, შეაგროვეთ ამ მწკრივში დარჩენილი
          ძვირფასი ქვები.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png)\nდაამატეთ ეს ბლოკები თქვენს პროგრამაში.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">მოძრაობაუკან</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "საბოლოოდ, შეაგროვეთ დარჩენილი განძი.
          დაამატეთ ეს ბლოკები თქვენს პროგრამაში.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">მობრუნებამარჯვნივ</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          ესეც ამ თავსატეხის სრული ამონახსნი.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: "`ნაბიჯის` ღილაკი შეიძლება ძალიან გამოგადგეთ
          ამ გამოწვევასთან გასამკლავებლად."
        courseD_farmer_condLoops_challenge1_b: ჩვეულებრივ, თქვენ უბრალოდ `აიღებდით
          გოგრას` თუ გოგრასთან იქნებოდით. კიდევ რისი გაკეთება გიწევთ, თუ გოგრასთან
          იქნებით?
      course3_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: ყოველ სივრცეში ბოსტნეულის სხვადასხვა
          რაოდენობაა. გამოიყენეთ `სანამ` ციკლი.
      course3_farmer_until_challenge2_authored_hint: []
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: მარცხნივ თუ მარჯვნივ? ეს თქვენი გადასაწყვეტია!
        courseC_maze_debugging_challenge1_b: ციყვის ბილიკს მართკუთხედის ფორმა აქვს!
          ყოველ ჯერზე ერთიდაიგივენაირად უნდა შეუხვიოთ!
        courseC_maze_debugging_challenge1_c: თუ გაიჭედეთ, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან, ან მოაშოროთ მთელი კოდი და იპოვოთ თქვენი გზა!
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: ამის ამოხსნის ერთ-ერთი გზაა წინ, მოხვევებს
          შორის დაამატოთ მეტი საფეხურები.
        courseC_maze_debugging_challenge2_b: თუ გაიჭედეთ, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან, ან მოაშოროთ მთელი კოდი და იპოვოთ თქვენი გზა!
        courseC_maze_debugging_challenge2_c: |-
          არსებობს ორი სხვადასხვა გზა, რომელთაც შეგიძლიათ გაჰყვეთ `წინ გადაადგილების` და მხოლოდ ოთხი მობრუნების გამოყენებით. თუ მოიფიქრებთ, როგორ გამოიყენოთ `გამეორების` ბლოკი, შესაძლოა მეტიც იყოს!

          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      course3_maze_until_challenge1_authored_hint: []
      course3_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          აქ მოცემულია რაღაცები, რისი გაკეთებაც შეგიძლიათ, როდესაც მოთამაშე თამაშს მოიგებს:

          * გააქრეთ დინოზავრი.
          * გახადეთ ციყვები და მხედარი ბედნიერი.
          * შეცვალეთ ფონი.
          * ათქმევინეთ მხედარს მადლობა დახმარებისათვის.
          * გააქრეთ ყველა მოქმედი პირი და გამოაჩინეთ "თქვენ მოიგეთ!" ტექსტი.
        courseE_playLab_challenge1_b: |-
          აქ მოცემულია რაღაცები, რისი გაკეთებაც შეგიძლიათ, როდესაც მოთამაშე თამაშს წააგებს:

          * გააქრეთ მხედარი.
          * გახადეთ ციყვები ნაღვლიანი.
          * ათქმევინეთ დინოზავრს რამე.
          * შეცვლაეთ ფონი.
          * გააქრეთ ყველა მოქმედი პირი და გამოაჩინეთ "თამაში დასრულებულია!" ტექსტი.
      course3_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          მსახიობმა იცის, რა თქვას მისი განწყობიდან გამომდინარე. ეცადეთ შეცვალოთ რაღაცები, რაც ჯადოქარმა შეიძლება თქვას.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">კონცენტრირდი და იკითხე თავიდან!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "ისეთი წარმოდგენა შეიქმნება, რომ თამაში თავიდან
          იწყება, თუ კვლავ გამოიძახებთ `შეკითხვის დასმის` ფუნქციას პირობითი ბრძანებების
          სიის ქვემოთ.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n
          \              \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"კითხვის
          დასმა\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "დაგჭირდებათ მეტი პირობითი დებულების დამატება,
          რომ მსახიობებს მეტი რამის თქმა შეეძლოთ.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\"
          inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value
          name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement
          name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n
          \           <value name=\"SPRITE\">\n              <block type=\"math_number\">\n
          \               <title name=\"NUM\">1</title>\n              </block>\n
          \           </value>\n            <value name=\"TEXT\">\n              <block
          type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n
          \           </value>\n            <value name=\"TIME\">\n              <block
          type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n
          \           </value>\n          </block>\n              </statement></block></xml>\n
          \             \nარ დაგავიწყდეთ შეცვალოთ, თუ რომელ განწყობებს აჩვენებს მსახიობი
          `გაიმეორე უსასრულოდ` ციკლში. აგრეთვე შეგიძლიათ განწყობები დააყენოთ შემთხვევითად!"
        courseE_playlab_challenge2_d: |-
          მას შემდეგ, რაც გაიგებთ მთელ კოდს, რომელიც უკავშირდება 1-ლ მსახიობთ, სცადეთ გადაწეროთ იგივე კოდი, მაგრამ, ამჯერად, მე-2 მსახიობისთვის.

          არ დაგავიწყდეთ `სათაურის ჩვენების` ბლოკში ინსტრუქციების ისე შეცვლა, რომ აზრი არ დაიკარგოს!
        courseE_playlab_challenge2_e: |-
          როდესაც ყველაფერს მორჩებით, უნდა შეგეძლოთ თითოეულ მსახიობზე დაკლიკება და 8 სხვადასხვა შეტყობინებინს მიღება. შესაძლებელია ამის კიდევ უფრო მეტად გავრცობა?

          გამოაცდევინეთ თქვენს მეგობარს აპლიკაცია, როდესაც მორჩებით!
      course4_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: |-
          საუკეთესო რჩევა, რაც შემიძლია მოგცეთ, არის ის, რომ დააჭიროთ `⟲ თავიდან დაწყებას`, თუ ყველაფერი არევას დაიწყებს.

          ორიგინალ პროგრამაში მხოლოდ რამდენიმე ხაზია შეცდომით. თუ პირველ მცდელობას ჩააფლავებთ, დაბრუნდით და ისევ სცადეთ. გამოსავალი ნამდვილად არსებობს!
      course4_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: მას შემდეგ, რაც განსაზღვრავთ ფუნქციას,
          შეგიძლიათ გამოიძახოთ ის რამდენჯერაც გინდათ - როცა და სადაც გინდათ!
        courseE_artist_concept_challenge2_b: |-
          შეგიძლიათ, ამ ბრძანების გამოყენებით, ტილოს სხვადასხვა პოზიციაზე გადახტეთ:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      course4_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n
          \   <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n
          \ </block>\n  </xml>\n  \nეს `გადახტომის` ბლოკი საშუალებას გაძლევთ ამოძრაოთ
          ზომბი სახატავი ბადის ნებისმიერ პიქსელზე, სადაც მოგესურვებათ. ბლოკი მუშაობს
          ზომის რაღაც პიქსელებით მარჯვნივ და რაღაც პიქსელებით დაბლა გადაყვანით. ათვლა
          ყოველთვის იწყება ზედა მარცხენა კუთხიდან, რაც ნიშნავს, რომ არ აქვს მნიშვნელობა,
          თუ სადაა ზომბი მხატვარი, სანამ ბრძანება გაეშვება!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course4_artist_fwp_challenge1_authored_hint: []
      course4_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: ყოველი ვერტიკალური ხაზის სიგრძეა `10`.
          ყოველი ჰორიზონტალური ხაზის სიგრძე უნდა იყოს `სიგრძე`.
        courseF_artist_variables_challenge1_b: თქვენ **ორჯერ** მოგიწევთ ციკლის შიგნით
          `სიგრძის` მნიშვნელობის 10-თ გაზრდა.
        courseF_artist_variables_challenge1_c: ამ ნიმუშის დასამთავრებლად თქვენ მოგიწევთ
          ორჯერ მარცხნივ შებრუნება, ორჯერ მარჯვნივ და ასევე იმოძრაოთ წინ ჯამში ოთხჯერ.
        courseF_artist_variables_challenge1_d: |-
          ეს თავსატეხი იყენებს ერთ ციკლს. ცვლადების გარეშე, მსგავსი გზა შეიძლება ტეხილი იყოს.

          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)

          თუ პრობლემები შეგექმნათ, სცადეთ ამ სურათის შექმნა, შემდეგ მონახეთ ადგილები, სადაც შეგიძლიათ ცვლადების გამოყენება ჰორიზონტალური ხაზების სიგრძის შესაცვლელად.
        courseF_artist_variables_challenge1_e: |-
          აი ამოხსნაც:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'ცვლადები ძალიან გამოსადეია, რადგან
          შეგიძლიათ მათი გაზრდა ციკლის ყოველ იტერაციაზე. '
        courseF_artist_variables_challenge2_b: ამ თავსატეხში ერთი ციკლი ქმნის პოლიგონს,
          მეორე ციკლი იმეორებს პოლიგონს იმდენჯერ, რამდენიც არის`გვერდი`, შემდეგ კიდევ
          ერთი ციკლი იმეორებს ამ ყველაფერს იმდენჯერ, რამდენიც არის `გვერდების` ცვლადს
          დამატებული 5.
        courseF_artist_variables_challenge2_c: "`გვერდებისთვის` და `სიგრძისთვის` ცალკე
          ცვლადების გამოყენება ხელს უწყობს კოდის სისუფთავეს, რადგან თქვენ შეგიძლიათ
          ციკლით შეასრულოთ ერთი და იგივე კოდი რამდენჯერმე, იმის მაგივრად, რომ ყოველ
          ჯერზე შექმნათ ახალი რიცხვების მიმდევრობები."
        courseF_artist_variables_challenge2_d: |-
          **ამოხსნა:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_for_challenge1_authored_hint: []
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          მთავარი პროგრამა დაახლოებით ასე უნდა გამოიყურებოდეს:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          ნახეთ რამდენი სიმინდის შეგროვებაა შესაძლებელი თითოეულ სივრცეში. ხედავთ მთვლელის ნიმუშს? `for ციკლში` `სიგრძის` პარამეტრს მაქსიმალური მნიშვნელობა უნდა მიანიჭოთ.

          არ დაგავიწყდეთ მოსავლის აღების შემდეგ ფერმერის მთავარ გზაზე დაყენება!
        courseF_bee_fwp_challenge1_c: |-
          განათავსეთ `for ციკლი` ფუნქციაში და დაათვლევინეთ მას `1`-დან `სიგრძემდე` `1`-ით.
          ციკლის შიგნით თქვენ უნდა იმოძრაოთ წინ და შეაგროვოთ მთელი სიმინდი.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          `for ციკლის` შიგნით, თქვენ დაგჭირდებათ `გადაადგილდეთ წინ` და შემდეგ `აიღოთ ნექტარი` **მთვლელჯერ**.
          `for ციკლის` შემდეგ შეგიძლიათ უბრალოდ დაბრუნდეთ უკან **სიგრძეჯერ**.
          პირობის გასაგებად შეიძლება დაგჭირდეთ მინიშნების რამდენჯერმე წაკითხვა. **გამუქებული** ბლოკის კოდის ნაწილი არის მინიშნება იმაზე, თუ როგორ გამოვიყენოთ `გამეორების` 2 ბლოკი, რომელიც გვჭირდება.
        courseF_bee_fwp_challenge1_e: |
          **აი, ამოხსნაც:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          თავიდან, დარწმუნდით იმაში, რომ გესმით, როგორ **უნდა** იმუშავოს ფუნქციამ. როდესაც ფერმერი იმოძრავებს ქვემოთ, ის უბრალოდ ცდის სიმინდის შეგროვებას. ამის მაგივრად, როგორ შეიძლება შევამოწმებინოთ მას ყოველი ადგილი 3-ივე ბოსტნეულის არსებობაზე და შევაგროვებინოთ მხოლოდ ისინი, რომლებსაც იპოვის?

          დაამატეთ პირობითი ბრძანებები ფუნქციაში, რათა შეამოწმოთ ადგილები სიმინდის, გოგრის და სალათის არსებობაზე.
        courseF_bee_fwp_challenge2_b: |-
          გითავდებათ `წინ გადაადგილების` ბლოკები?
          სცადეთ *მეორე* `for ციკლის` გამოყენება თქვენს მთავარი პროგრამაში.

          **მითითება:** არ აგერიოთ `მთვლელი` და `მთვლელი2`.
        courseF_bee_fwp_challenge2_c: |-
          **აი როგორ უნდა გამოიყურებოდეს თქვენი ფუნქცია:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **თქვენი მთავარი პროგრამა ასე უნდა გამოიყურებოდეს:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">მთვლელი2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: არ დაგავიწყდეთ, რომ შეგიძლიათ `გაიმეოროთ`
          როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ `გაიმეოროთ`
          `გამეორების` ბლოკი!
        courseD_bee_nested_loops_challenge2_b: 4-ვე ძვირფასი ქვის შესაგროვებლად ჯერ
          გამოიყენეთ ციკლი, რათა მოშორდეთ ცენტრს. შებრუნდით მარცხნივ ან მარჯვნივ,
          შემდეგ გამოიყენეთ ჩასმული ციკლი, რათა იმოძრავოთ განძის ერთი ბლოკიდან მეორისკენ.
          თუ გაიმეორებთ ჩადგმულ ციკლს საკმარისი რაოდენობით, შემგროვებელი მოივლის *მთლიან*
          გვირაბს!
        courseD_bee_nested_loops_challenge2_c: უმოკლესი პროგრამა, რომელიც აგროვებს
          მთელ განძს იყენებს ერთ `შეგროვების` ბლოკს და ორ მობრუნებას.
        courseD_bee_nested_loops_challenge2_d: |-
          **ამოხსნა:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: სავარაუდოდ, თქვენ უკვე გამოიყენეთ
          ციკლი, რათა შექმნათ ტეხილის მსგავსი ნიმუში. თუ გახსოვთ ეს ალგორითმი, შეგიძლიათ
          შეიტანოთ მასში მცირე ცვლილებები.
      course4_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          თქვენ დაგჭირდებათ დამატებითი ბლოკები ინსტრუმენტების პანელიდან, რათა აალაპარაკოთ მსახიობები.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">კაკუ-კაკუ.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      course4_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          მსახიობმა იცის, თუ რა თქვას, რადგან ის ამოწმებს `იღბალის` ცვლადის მიმდინარე მნიშვნელობას.

          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">კონცენტრირდი და იკითხე თავიდან!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          ისეთი წარმოდგენა შექიმნება, რომ თამაში თავიდან იწყება, თუ კვლავ გამოიძახებთ `შეკითხვის დასმის` ფუნქციას მას შემდეგ, რაც მსახიობი იტყვის იღბალს.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">იღბალი</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "თქვენ მოგიწევთ მეტი პირობითი გამოსახულების
          დამატება, რათა მისცეთ მსახიობებს მეტის თქმის საშუალება.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\"
          inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value
          name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement
          name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n
          \               <title name=\"VAR\">fortune</title>\n                <value
          name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n
          \                   <title name=\"TEXT\">???</title>\n                  </block>\n
          \               </value>\n              </block>\n              </statement></block></xml>\n
          \             \nარ დაგავიწყდეთ იმის შეცვლა, თუ რომელ ემოციებს გამოხატავს
          მსახიობი `გაიმეორე უსასრულოდ` ციკლის შიგნით. თქვენ ასევე შეგიძლიათ გააკეთოთ
          ისე, რომ ეს ემოციები იყოს შემთხვევითი!"
        courseF_playlab_variables_challenge3_d: |-
          როდესაც გაიაზრებთ მთელ კოდს, რომელიც უკავშირდება 1-ლ მსახიობს, სცადეთ იგივე კოდის დაწერა მე-2 მსახიობისთვის.

          არ დაგავიწყდეთ ინსტრუქციების შეცვლა `შეკითხვის დასმის` ფუნქციაში, რათა ამ ყველაფერს აზრი ჰქონდეს!
        courseF_playlab_variables_challenge3_e: |-
          როდესაც ყველაფერს მორჩებით, უნდა შეგეძლოთ თითოეულ მსახიობზე დაკლიკება და 8 სხვადასხვა შეტყობინებინს მიღება. შესაძლებელია ამის კიდევ უფრო მეტად გავრცობა?

          გამოაცდევინეთ თქვენს მეგობარს აპლიკაცია, როდესაც მორჩებით!
      courseA_artist_loops10_authored_hint: []
      courseA_artist_loops10_2018_authored_hint: []
      courseA_artist_loops11_authored_hint: []
      courseA_artist_loops11_2018_authored_hint: []
      courseA_artist_loops11_predict2_authored_hint: []
      courseA_artist_loops12_authored_hint: []
      courseA_artist_loops12_2018_authored_hint: []
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching
          blocks to the `when run` block to see what happens.
        courseA_artist_loops2_b: გამოიყენეთ ეს ბლოკი <xml><block type="simple_move_right"/></xml>
          ამ თავსატეხის ამოსახსნელად.
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching
          blocks to the <xml><block type="when_run"/></xml> block to see what happens.
        courseA_artist_loops2_b: გამოიყენეთ ეს ბლოკი <xml><block type="simple_move_right"/></xml>
          ამ თავსატეხის ამოსახსნელად.
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Is something not quite right?  Trace slowly through
          the program with your finger to see where it goes wrong.
        courseA_artist_loops3_b: |-
          ამ თავსატეხის ამოსახსნელად შესაძლოა ამ ბლოკის მსგავსის გამოყენება მოგინდეთ.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Trace slowly through the program with your finger
          to see where it goes wrong.
        courseA_artist_loops3_b: |-
          ამ თავსატეხის ამოსახსნელად შესაძლოა ამ ბლოკის მსგავსის გამოყენება მოგინდეთ.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
        courseA_artist_loops4_b: |-
          იქიდან გამომდინარე, რომ თქვენ შეგიძლიათ მხოლოდ ერთი <xml><block type="simple_move_right"/></xml>
          ბლოკის გამოყენება, სცადეთ მისი მოთავსება <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block> ციკლში.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
        courseA_artist_loops4_b: |-
          იქიდან გამომდინარე, რომ თქვენ შეგიძლიათ მხოლოდ ერთი <xml><block type="simple_move_right"/></xml>
          ბლოკის გამოყენება, სცადეთ მისი მოთავსება <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block> ციკლში.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: Try using what you've learned about repeat blocks
          to complete this puzzle!
        courseA_artist_loops5_b: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
        courseA_artist_loops5_c: "იქიდან გამომდინარე, რომ თქვენ შეგიძლიათ მხოლოდ ერთი
          <xml><block type=\"simple_move_right\"/></xml> ბლოკის გამოყენება, სცადეთ
          მისი მოთავსება \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\nციკლში."
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: Try using what you've learned about <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> blocks to complete
          this puzzle!
        courseA_artist_loops5_b: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
        courseA_artist_loops5_c: "იქიდან გამომდინარე, რომ თქვენ შეგიძლიათ მხოლოდ ერთი
          <xml><block type=\"simple_move_right\"/></xml> ბლოკის გამოყენება, სცადეთ
          მისი მოთავსება \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\nციკლში."
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing
          with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: ამ თავსატეხის ამოსახსნელად, თქვენ დაგჭირდებათ 2 მიმართულებით
          2 ბლოკის განთავსება.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing
          with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: ამ თავსატეხის ამოსახსნელად, თქვენ დაგჭირდებათ 2 მიმართულებით
          2 ბლოკის განთავსება.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: ჯერ დაწერეთ კოდი ერთი ტალღისთვის, შემდეგ გაიმეორეთ
          იგივე მოქმედება მომდევნო ორი ტალღის დასახატად.
        courseA_artist_loops7_c: |-
          გახსოვდეთ, რომ შეგიძლია ჩასვათ 1-ზე მეტი ბლოკი შემდეგ ციკლში: <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: ჯერ დაწერეთ კოდი ერთი ტალღისთვის, შემდეგ გაიმეორეთ
          იგივე მოქმედება მომდევნო ორი ტალღის დასახატად.
        courseA_artist_loops7_c: |-
          გახსოვდეთ, რომ შეგიძლია ჩასვათ 1-ზე მეტი ბლოკი შემდეგ ციკლში: <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: ჯერ დაწერეთ კოდი ერთი ტალღისთვის, შემდეგ გაიმეორეთ
          იგივე მოქმედება მომდევნო ორი ტალღის დასახატად.
        courseA_artist_loops7_c: |-
          გახსოვდეთ, რომ შეგიძლია ჩასვათ 1-ზე მეტი ბლოკი შემდეგ ციკლში: <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Try running the code to see what has been written
          for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to
          you?
        courseA_artist_loops8_c: "What does the code do?  \nWhat is it supposed to
          do?  \nWhat does that tell you?"
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Try running the code to see what has been written
          for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to
          you?
        courseA_artist_loops8_c: "What does the code do?  \nWhat is it supposed to
          do?  \nWhat does that tell you?"
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: 'You don''t have to delete everything!  Some of the
          code is good. Use it to build the rest of the stairs. '
        courseA_artist_loops9_b: |-
          დამატებული ბლოკი ამ ციკლში უნდა განთავსდეს
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Add another block to the code you are given to draw
          the rest of the stairs.
        courseA_artist_loops9_b: |-
          დამატებული ბლოკი ამ ციკლში უნდა განთავსდეს
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
      courseA_artist_loops_challenge1_authored_hint: []
      courseA_artist_loops_challenge1_2018_authored_hint: []
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_left"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseA_artist_loops_challenge2_b: როდესაც დაასრულებთ ერთი ჩიტის სახლის მშენებლობას,
          `გადახტით` შემდეგზე!
        courseA_artist_loops_challenge2_c: ამ გამოწვევისთვის დაგჭირდებათ ციკლში ძალიან
          ბევრი ბლოკის განთავსება.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_left"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_left"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_artist_loops_challenge3_authored_hint:
        harvey_tictactoe: თქვენ შეგიძლიათ `ახტომის` ბლოკების გამოყენება სხვა ადგილებზე
          მოსახვედრად.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to get nectar once the bee finds a flower.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq10_authored_hint: []
      courseA_bee_seq11_authored_hint: []
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to get nectar once the bee finds a flower.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq13_authored_hint: []
      courseA_bee_seq14_authored_hint: []
      courseA_bee_seq2_authored_hint: []
      courseA_bee_seq3_authored_hint: []
      courseA_bee_seq4_authored_hint: []
      courseA_bee_seq5_authored_hint: []
      courseA_bee_seq6_authored_hint: []
      courseA_bee_seq7_authored_hint: []
      courseA_bee_seq8_authored_hint: []
      courseA_bee_seq9_authored_hint: []
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          როდესაც მიაღწევთ განძის შემცველ კვადრატს, მის ასაღებად  გამოიყენეთ ეს ბლოკი.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: მარტივი ამონახსნია აღმოსავლეთისკენ 2-ჯერ გადაადგილდება,
          შემდეგ კი განძეულობის შეგროვება.
      courseA_collector_loops10_authored_hint: []
      courseA_collector_loops10_2018_authored_hint: []
      courseA_collector_loops11_authored_hint: []
      courseA_collector_loops11_2018_authored_hint: []
      courseA_collector_loops11_predict2_authored_hint: []
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          როდესაც მიაღწევთ განძის შემცველ კვადრატს, მის ასაღებად  გამოიყენეთ ეს ბლოკი.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: მარტივი ამონახსნია აღმოსავლეთისკენ 2-ჯერ გადაადგილდება,
          შემდეგ კი განძეულობის შეგროვება.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: სანამ განძეულობის შეგროვებას შეძლებთ, უნდა გადაადგილდეთ.
        courseA_collector_loops2_b: |-
          როდესაც მიაღწევთ განძის შემცველ კვადრატს, მის ასაღებად  გამოიყენეთ ეს ბლოკი.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: სანამ განძეულობის შეგროვებას შეძლებთ, უნდა გადაადგილდეთ.
        courseA_collector_loops2_b: |-
          როდესაც მიაღწევთ განძის შემცველ კვადრატს, მის ასაღებად  გამოიყენეთ ეს ბლოკი.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: |-
          სცადეთ
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> ციკლის გამოყენება!
        courseA_collector_loops3_b: გახსოვდეთ, თქვენ შეგიძლიათ 1-ზე მეტი ბლოკის განთავსება
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> ციკლში.
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: |-
          სცადეთ
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> ციკლის გამოყენება!
        courseA_collector_loops3_b: გახსოვდეთ, თქვენ შეგიძლიათ 1-ზე მეტი ბლოკის განთავსება
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> ციკლში.
      courseA_collector_loops3_predict1_authored_hint: []
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: To change how far the adventurer goes, change
          the number of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that the adventurer needs to walk
          down and collect gold after she finishes the `repeat` loop!
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and
          collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: If you can't figure out the answer right away,
          try using a piece of paper to figure out what arrows you will need and look
          for a pattern.
        courseA_collector_loops5_b: 'სცადეთ პრობლემის დაყოფა ორ ნაწილად: ჯერ გვერდზე
          გადაადგილება, შემდეგ კი ქვემოთ.'
        courseA_collector_loops5_c: თქვენ მოგიწევთ <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ციკლით დაწყება, რომელიც
          გადაადგილებს ლაურიელს დასავლეთისკენ და აგროვებს განძს.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: If you can't figure out the answer right away,
          try using a piece of paper to figure out what arrows you will need and look
          for a pattern.
        courseA_collector_loops5_b: 'სცადეთ პრობლემის დაყოფა ორ ნაწილად: ჯერ გვერდზე
          გადაადგილება, შემდეგ კი ქვემოთ.'
        courseA_collector_loops5_c: თქვენ მოგიწევთ <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ციკლით დაწყება, რომელიც
          გადაადგილებს ლაურიელს დასავლეთისკენ და აგროვებს განძს.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: Can't figure out what's wrong? Try running the
          code a couple of times to see what happens.
        courseA_collector_loops6_b: ყველაზე მოკლე ამოხსნა იყენებს 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ციკლს, ერთს მეორის
          შემდეგ.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: Can't figure out what's wrong? Try running the
          code a couple of times to see what happens.
        courseA_collector_loops6_b: ყველაზე მოკლე ამოხსნა იყენებს 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ციკლს, ერთს მეორის
          შემდეგ.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: If you can't figure out what comes next, try running
          the code to see where Laurel ends up.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: If you can't figure out what comes next, try running
          the code to see where Laurel ends up.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: If you are having trouble figuring this puzzle
          out, try writing the moves down on a piece of paper and look for a pattern.
        courseA_collector_loops8_b: სცადეთ ამ თავსატეხის სამ ნაწილად დაყოფა და თითოეულისთვის
          ციკლის დაწერა.
        courseA_collector_loops8_c: გახსოვდეთ, რომ შეგიძლიათ კოდის ერთი ნაწილი დაწეროთ,
          შემდეგ კი "გაშვების" ღილაკზე დაჭერით ნახოთ, თუ რისი გაკეთება მოგიწევთ შემდეგ.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: If you are having trouble figuring this puzzle
          out, try writing the moves down on a piece of paper and looking for a pattern.
        courseA_collector_loops8_b: სცადეთ ამ თავსატეხის სამ ნაწილად დაყოფა და თითოეულისთვის
          ციკლის დაწერა.
        courseA_collector_loops8_c: გახსოვდეთ, რომ შეგიძლიათ კოდის ერთი ნაწილი დაწეროთ,
          შემდეგ კი "გაშვების" ღილაკზე დაჭერით ნახოთ, თუ რისი გაკეთება მოგიწევთ შემდეგ.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: Does the code feel really long?  Try putting two
          of your `repeat` loops inside of another loop to make it much shorter!
        courseA_collector_loops9_b: სცადეთ 2 ციკლის <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ჩადგმა მესამე ციკლში,
          რათა შეამოკლოთ თქვენი კოდი!
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: 'If you can''t spot the best places to use loops,
          try coding it out step-by-step and look for a pattern. '
        courseA_collector_loops9_b: სცადეთ 2 ციკლის <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ჩადგმა მესამე ციკლში,
          რათა შეამოკლოთ თქვენი კოდი!
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: სცადეთ თითოეულ ციკლში რიცხვების შეცვლა,
          თუ კოდში რაიმე პრობლემაა.
        courseA_collector_loops_challenge1_b: თუ რამეს ერთჯერადად ასრულებთ, ციკლის
          გამოყენება არ გჭირდებათ.
        courseA_collector_loops_challenge1_c: გამოქვაბულის მარჯვენა მხარეს 6 ძვირფასი
          ქვაა, თუმცა თქვენ უნდა გადაადგილდეთ და სამხრეთისკენ მოძრაობისას შეაგროვოთ
          ისინი მხოლოდ 5-ჯერ. ხვდებით რატომ?
        courseA_collector_loops_challenge1_d: |-
          თავიდან მოცემული პროგრამა არ აგროვებს ბოლო 2 ძვირფას ქვას. სცადეთ პროგრამის ბოლოში ამ კოდის დამატება:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: სცადეთ თითოეულ ციკლში რიცხვების შეცვლა,
          თუ კოდში რაიმე პრობლემაა.
        courseA_collector_loops_challenge1_b: თუ რამეს ერთჯერადად ასრულებთ, ციკლის
          გამოყენება არ გჭირდებათ.
        courseA_collector_loops_challenge1_c: გამოქვაბულის მარჯვენა მხარეს 6 ძვირფასი
          ქვაა, თუმცა თქვენ უნდა გადაადგილდეთ და სამხრეთისკენ მოძრაობისას შეაგროვოთ
          ისინი მხოლოდ 5-ჯერ. ხვდებით რატომ?
        courseA_collector_loops_challenge1_d: |-
          თავიდან მოცემული პროგრამა არ აგროვებს ბოლო 2 ძვირფას ქვას. სცადეთ პროგრამის ბოლოში ამ კოდის დამატება:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: ამის ამოსახსნელად თქვენ გჭირდებათ მხოლოდ
          1 ბლოკი.
        courseA_collector_loops_challenge2_a: სამხრეთით მოძრაობის დაწყებამდე, შეგიძლიათ
          ბილიკზე მეორეჯერ გადაადგილდეთ უკან.
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_preLoops1_authored_hint: []
      courseA_collector_preLoops2_authored_hint: []
      courseA_collector_preLoops3_authored_hint: []
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: 'To grab the treasure, snap two ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          block to the bottom of the program and click "Run"!

'
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: You'll need to go two different directions
          to get even one gem!
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: You will need to use two ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          blocks to solve this puzzle.
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          როდესაც მიაღწევთ განძის შემცველ კვადრატს, მის ასაღებად  გამოიყენეთ ეს ბლოკი.
          <xml>  <block type="collector_collect"/></xml>
      courseA_forVideoTest_artist_authored_hint: []
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">3</title>
          </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops10_authored_hint: []
      courseA_harvester_loops11_authored_hint: []
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: 'Your code will have **four** `move West` blocks
          and **four** `pick corn` blocks. '
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: კოდის გასამეორებლად, გადმოათრიეთ `გამეორების`
          ციკლი, შემდეგ კი განათავსეთ მასში სასურველი ბლოკი.
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times
          does your code repeat?
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: თუ გაიჭედეთ, სცადეთ ამ თავსატეხის ამოხსნა 2 ნაწილად,
          ერთი ნაწილი კუთხემდე, მეორე ნაწილი კი კუთხის შემდეგ.
        courseA_harvester_loops5_b: Your final code will have **one** `repeat` loop,
          **one** `move South` block, and **one** `move East` block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: პირველი ციკლის შემდეგ თქვენ დაგჭირდებათ კიდევ
          ერთი `გამეორების` ციკლის გამოყენება.
        courseA_harvester_loops5a_b: One loop will repeat `move South`, and the other
          will repeat `move East`.
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of
          times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_a: თუ გაიჭედებით, სცადეთ ნაბიჯების ფურცელზე ჩანიშვნა
          და განმეორებადი კოდის მოძებნა.
        courseA_harvester_loops6_b: This is the path you should take to pick all the
          corn.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: You will need two `repeat` loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops8_authored_hint: []
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts.
          One part to the first corner, one part to the second corner, and one part
          to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part
          to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!

          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a
          piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do
          this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq11_authored_hint: []
      courseA_harvester_seq12_authored_hint: []
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml>
          to pick the corn!
        courseA_harvester_seq2_b: Try writing down the steps on paper to find a solution!
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure
          out the answer.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the
          corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud.
          It could help you figure out the right path.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before
          the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should
          take.
      courseA_harvester_seq8_authored_hint: []
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where
          does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need
          **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Snap both `East` blocks to the bottom of the `when run` block.
      courseA_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the pig.
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: The bird will need to move `W <--` three times to get
          to the pig.
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseA_maze_seq10_b: You will need to go three different directions to solve
          this puzzle.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 directions to solve this puzzle.
      courseA_maze_seq11_authored_hint: []
      courseA_maze_seq11_2018_authored_hint: []
      courseA_maze_seq12_authored_hint: []
      courseA_maze_seq12_2018_authored_hint: []
      courseA_maze_seq12_predict2_authored_hint: []
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to
          trace your way from the bird to the pig.
        courseA_maze_seq13_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, რათა ნახოთ, რა მოხდება.
        courseA_maze_seq13_c: |-
          ეს <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> ბლოკები დაგეხმარებათ გოჭთან მიახლოებაში.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to
          trace your way from the bird to the pig.
        courseA_maze_seq13_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, რათა ნახოთ, რა მოხდება.
        courseA_maze_seq13_c: |-
          ეს <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> ბლოკები დაგეხმარებათ გოჭთან მიახლოებაში.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: This program is missing one block. Can you figure out
          which one?
        courseA_maze_seq2_b: სცადეთ, ჯერ გაუშვათ კოდი, რათა ნახოთ, სად მოხვდება ჩიტი.
          შემდეგ რა უნდა გააკეთოთ?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: This program is missing 1 block. Can you figure out which
          one?
        courseA_maze_seq2_b: სცადეთ, ჯერ გაუშვათ კოდი, რათა ნახოთ, სად მოხვდება ჩიტი.
          შემდეგ რა უნდა გააკეთოთ?
      courseA_maze_seq2_predict1_authored_hint: []
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: One of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseA_maze_seq3_b: სცადეთ ნაბიჯის ღილაკის გამოყენება, რათა იპოვოთ, სად იქცევა
          პროგრამა არასწორად. პირველივე ნაბიჯზე? მეორეზე?
        courseA_maze_seq3_c: ეს <xml><block type="maze_moveNorth"/></xml> ბლოკი აშკარად
          არ ამოძრავებს ჩიტს სწორი მიმართულებით. შეგიძლიათ ჩაანაცვლოთ ის სხვა ბლოკით?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: 1 of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseA_maze_seq3_b: სცადეთ ნაბიჯის ღილაკის გამოყენება, რათა იპოვოთ, სად იქცევა
          პროგრამა არასწორად. პირველივე ნაბიჯზე? მეორეზე?
        courseA_maze_seq3_c: ეს <xml><block type="maze_moveNorth"/></xml> ბლოკი აშკარად
          არ ამოძრავებს ჩიტს სწორი მიმართულებით. შეგიძლიათ ჩაანაცვლოთ ის სხვა ბლოკით?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: If you are having trouble, try to figure out what the
          correct path is and then remove the block that doesn't fit.
        courseA_maze_seq4_b: სცადეთ ამ კოდის პირდაპირ გაშვება. რამე არასწორად ხდება?
          რომელი ბლოკის ამოღება შეგიძლიათ? როგორ უნდა გაასწოროთ შეცდომა?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: If you are having trouble, try to figure out what the
          correct path is and then remove the block that doesn't fit.
        courseA_maze_seq4_b: სცადეთ ამ კოდის პირდაპირ გაშვება. რამე არასწორად ხდება?
          რომელი ბლოკის ამოღება შეგიძლიათ? როგორ უნდა გაასწოროთ შეცდომა?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: თუ პრობლემა გექმნებათ, სცადეთ რუკაზე სწორი გზის პოვნა
          თითის გაყოლებით. რა გზა შემოხაზეთ თქვენი თითით?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: Try writing down the steps on paper to find a solution!
        courseA_maze_seq5_b: თქვენ დაგჭირდებათ ორი სხვადასხვა მიმართულების ბლოკი.
      courseA_maze_seq5_2018_authored_hint:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Your final code should have three movement blocks.
        courseA_maze_seq6_b: თუ გაიჭედეთ, სცადეთ ამ თავსატეხის ამოხსნა 2 ნაწილად,
          ერთი ნაწილი კუთხემდე, მეორე ნაწილი კი კუთხის შემდეგ.
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: თუ გაიჭედეთ, სცადეთ ამ თავსატეხის ამოხსნა 2 ნაწილად,
          ერთი ნაწილი კუთხემდე, მეორე ნაწილი კი კუთხის შემდეგ.
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: Stuck? Try tracing the bird's path with your finger.
        courseA_maze_seq9_b: თუ არ ხართ დარწმუნებული, თუ რა უნდა გააკეთოთ, სცადეთ
          "თავიდან" ღილაკზე დაკლიკვა და დააკვირდით, რა ხდება არასწორად.
        courseA_maze_seq9_c: ამ თავსატეხის ამოსახსნელად სამი მიმართულებით მოძრაობა
          მოგიწევთ.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: Stuck? Try tracing the bird's path with your finger.
        courseA_maze_seq9_b: თუ არ ხართ დარწმუნებული, თუ რა უნდა გააკეთოთ, სცადეთ
          "თავიდან" ღილაკზე დაკლიკვა და დააკვირდით, რა ხდება არასწორად.
        courseA_maze_seq9_c: ამ თავსატეხის ამოსახსნელად სამი მიმართულებით მოძრაობა
          მოგიწევთ.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: ამ თავსატეხის ამოხსნის ორი გზა არსებობს.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: ამ თავსატეხის ამოხსნის ორი გზა არსებობს.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: სცადეთ ჰარების თითით დათვლა. საწყისი ჰარი არ
          ჩათვალოთ!
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: სცადეთ ჰარების თითით დათვლა. საწყისი ჰარი არ
          ჩათვალოთ!
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: "Here is the block you should connect to the `when
          run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
        courseA_playLab_events2_b: |-
          ეს ამ თავსატეხის ამოსახსნელად საჭირო კოდია:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Look for a block that that makes the dog say something.
        courseA_playLab_events2_b: |-
          ეს ამ თავსატეხის ამოსახსნელად საჭირო კოდია:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: არ დაგავიწყდეთ, რომ პროგრამის დასრულების შემდეგ
          ჯორჯის დროშისკენ გადაადგილება შეგიძლიათ მარცხენა ისრის ღილაკით. როდესაც
          დროშა გამწვანდება, ამ დონეს დაასრულებთ!
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: არ დაგავიწყდეთ, რომ პროგრამის დასრულების შემდეგ
          ჯორჯის დროშისკენ გადაადგილება შეგიძლიათ მარცხენა ისრის ღილაკით. როდესაც
          დროშა გამწვანდება, ამ დონეს დაასრულებთ!
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:

          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:

          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:

          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:

          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to
          use to move Jorge up and down:\n\n![](https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png)\nand
          \n![](https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png)"
        courseA_playLab_events5_b: |-
          იცოდით, რომ თუ დააწკაპებთ ღილაკის მოვლენას, შეძლებთ ამ მოვლენისათვის ახალი ღილაკის არჩევას?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to
          use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          იცოდით, რომ თუ დააწკაპებთ ღილაკის მოვლენას, შეძლებთ ამ მოვლენისათვის ახალი ღილაკის არჩევას?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:

          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:

          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:

          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:

          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          გამოიყენეთ ეს ბლოკი, რათა აკონტროლოთ, თუ რა მოხდება მაშინ, როდესაც მსახიობები ერთმანეთს დაეჯახებიან.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          გამოიყენეთ ეს ბლოკი, რათა აკონტროლოთ, თუ რა მოხდება მაშინ, როდესაც მსახიობები ერთმანეთს დაეჯახებიან.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_challengeTemplate_authored_hint: []
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "გამოაჩინეთ პინგვინი ვოლდსი, როდესაც
          რობინზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "გამოაჩინეთ მოჩვენება სახელად ბუა, როდესაც
          ვოდლსზე დააწკაპებთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "გამოაჩინეთ ფუმფულა მონსტრი ჯეიდენი,
          როდესაც დააკლიკავთ ბუაზე!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "გამოაჩინეთ რობოტი სპიფი, როდესაც მონსტრზე
          დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "საბოლოოდ, გამოაჩინეთ ჯადოქარი ვენდელი,
          როდესაც სპიფზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "გამოაჩინეთ პინგვინი ვოლდსი, როდესაც
          რობინზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "გამოაჩინეთ მოჩვენება სახელად ბუა, როდესაც
          ვოდლსზე დააწკაპებთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "გამოაჩინეთ ფუმფულა მონსტრი ჯეიდენი,
          როდესაც დააკლიკავთ ბუაზე!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "გამოაჩინეთ რობოტი სპიფი, როდესაც მონსტრზე
          დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "საბოლოოდ, გამოაჩინეთ ჯადოქარი ვენდელი,
          როდესაც სპიფზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "შეგიძლიათ ჩიტი აამღეროთ.\n<xml> \n  <block
          type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">ჭიკ-ჭიკ</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "შეგიძლიათ რობოტს ხმოვანი სიგნალი ამოაშვებინოთ.\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_c: |-
          შეგიძლიათ აღრენინოთ გაბრაზებულ მონსტრს.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">რრრ!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "შეგიძლიათ ჩიტი აამღეროთ.\n<xml> \n  <block
          type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">ჭიკ-ჭიკ</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "შეგიძლიათ რობოტს ხმოვანი სიგნალი ამოაშვებინოთ.\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n
          \ </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          შეგიძლიათ აღრენინოთ გაბრაზებულ მონსტრს.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">რრრ!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "შეგიძლიათ ჩიტი აამღეროთ.\n<xml> \n  <block
          type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">ჭიკ-ჭიკ</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "შეგიძლიათ რობოტს ხმოვანი სიგნალი ამოაშვებინოთ.\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n
          \ </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          შეგიძლიათ აღრენინოთ გაბრაზებულ მონსტრს.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">რრრ!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "გამოაჩინეთ პინგვინი ვოლდსი, როდესაც
          რობინზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "გამოაჩინეთ მოჩვენება სახელად ბუა, როდესაც
          ვოდლსზე დააწკაპებთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "გამოაჩინეთ ფუმფულა მონსტრი ჯეიდენი,
          როდესაც დააკლიკავთ ბუაზე!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "გამოაჩინეთ რობოტი სპიფი, როდესაც მონსტრზე
          დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "საბოლოოდ, გამოაჩინეთ ჯადოქარი ვენდელი,
          როდესაც სპიფზე დააკლიკავთ!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_toMakeLoopsVideo_Collector_authored_hint: []
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have
          been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops10_authored_hint: []
      courseB_artist_loops10_2018_authored_hint: []
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
        courseB_artist_loops2_b: სცადეთ კოდის გაშვება იმისათვის, რომ ნახოთ, სად წყვეტს
          მხატვარი მოძრაობას.
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
        courseB_artist_loops2_b: სცადეთ კოდის გაშვება იმისათვის, რომ ნახოთ, სად წყვეტს
          მხატვარი მოძრაობას.
      courseB_artist_loops3_authored_hint:
        courseB_artist_loops3_a: Remember to use a `repeat` loop for better code!
        courseB_artist_loops3_b: ამ ხაზის დასახატად მხატვარი სამხრეთით უნდა გადაადგილდეს.
      courseB_artist_loops3_2018_authored_hint:
        courseB_artist_loops3_a: Remember to use a `repeat` loop for better code!
        courseB_artist_loops3_b: ამ ხაზის დასახატად მხატვარი სამხრეთით უნდა გადაადგილდეს.
      courseB_artist_loops4_authored_hint:
        courseB_artist_loops4_a: ახტომის ბლოკი საშუალებას გაძლევთ ხაზის დახატვის გარეშე
          გადაადგილდეთ წინ.
        courseB_artist_loops4_b: ამ თავსატეხის ამოსახსნელად დაგჭირდებათ გამეორების
          ციკლში ბლოკი დაამატოთ.
        courseB_artist_loops4_c: არ დაგავიწყდეთ, შეცვალოთ ციკლის გამეორების რიცხვი.
      courseB_artist_loops4_2018_authored_hint:
        courseB_artist_loops4_a: ახტომის ბლოკი საშუალებას გაძლევთ ხაზის დახატვის გარეშე
          გადაადგილდეთ წინ.
        courseB_artist_loops4_b: ამ თავსატეხის ამოსახსნელად დაგჭირდებათ გამეორების
          ციკლში ბლოკი დაამატოთ.
        courseB_artist_loops4_c: არ დაგავიწყდეთ, შეცვალოთ ციკლის გამეორების რიცხვი.
      courseB_artist_loops5_authored_hint:
        courseB_artist_loops5_a: Drag out a `repeat` loop, then put the other blocks
          inside of it. How many times do you need to repeat?
      courseB_artist_loops5_2018_authored_hint:
        courseB_artist_loops5_a: Drag out a `repeat` loop, then put the other blocks
          inside of it. How many times do you need to repeat?
      courseB_artist_loops6_authored_hint:
        courseB_artist_loops6_b: სცადეთ სვლების ქაღალდზე ჩაწერა, შემდეგ კი მსგავსების
          პოვნა.
      courseB_artist_loops6_2018_authored_hint:
        courseB_artist_loops6_b: სცადეთ სვლების ქაღალდზე ჩაწერა, შემდეგ კი მსგავსების
          პოვნა.
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: This challenge uses FOUR loops, one right after another!
        courseB_artist_loops7_b: |-
          Notice that every loop makes a stair pattern that travels in a different direction.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "The loops should do this:\n- Loop 1\n  - Right\n
          \ - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n-
          Loop 4\n  - Left\n  - Down"
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: This challenge uses **4** loops, one right after
          another!
        courseB_artist_loops7_b: |-
          Notice that every loop makes a stair pattern that goes a different direction.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "The loops should do this:\n- Loop 1\n  - Right\n
          \ - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n-
          Loop 4\n  - Left\n  - Down"
      courseB_artist_loops8_authored_hint:
        courseB_artist_loops8_a: How many times should you repeat the pattern to make
          the ladder?
        courseB_artist_loops8_b: სცადეთ მოცემული კოდის გაშვება მისი მოქმედების სანახავად.
      courseB_artist_loops8_2018_authored_hint:
        courseB_artist_loops8_a: How many times should you repeat the pattern to make
          the ladder?
        courseB_artist_loops8_b: სცადეთ მოცემული კოდის გაშვება მისი მოქმედების სანახავად.
      courseB_artist_loops8_predict1_authored_hint: []
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_a: გახსოვდეთ, რომ ახტომის ბლოკები გაძლევთ საშუალებას
          იმოძრაოთ ხაზების ხატვის გარეშე.
        courseB_artist_loops9_b: ამ თავსატეხის ამოსახსნელად დაგჭირდებათ W ბლოკის გამოყენება.
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_a: გახსოვდეთ, რომ ახტომის ბლოკები გაძლევთ საშუალებას
          იმოძრაოთ ხაზების ხატვის გარეშე.
        courseB_artist_loops9_b: ამ თავსატეხის ამოსახსნელად დაგჭირდებათ W ბლოკის გამოყენება.
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_right"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseB_artist_loops_challenge1_b: როდესაც დაასრულებთ ერთ კამათელს, `გადახტით`
          შემდეგზე!
        courseB_artist_loops_challenge1_c: 'რამდენიმე ხაზზე თქვენ დაგჭირდებათ `გადაადგილდეთ`
          ან `ახტეთ` ორ-ორჯერ. '
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: 'ამის მსგავსი ბლოკები: <xml>  <block type="simple_move_up_right"/></xml>
          დაეხმარებიან თქვენს მხატვარს დახრილ ზედაპირებზე მოძრაობაში!'
        courseB_artist_loops_challenge1_b: როდესაც დაასრულებთ ერთ კამათელს, `გადახტით`
          შემდეგზე!
        courseB_artist_loops_challenge1_c: 'რამდენიმე ხაზზე თქვენ დაგჭირდებათ `გადაადგილდეთ`
          ან `ახტეთ` ორ-ორჯერ. '
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_a: თქვენ უკვე გაქვთ X-ის დასახატად საჭირო
          კოდი. ახლა მხოლოდ ის დაგრჩათ, რომ გაიმეოროთ X და მომდევნო ადგილზე გადახტომა.
        courseB_artist_loops_challenge2_b: თქვენ შეგიძლიათ `ახტომის` ბლოკების გამოყენება
          სხვა ადგილებზე მოსახვედრად.
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_a: თქვენ უკვე გაქვთ X-ის დასახატად საჭირო
          კოდი. ახლა მხოლოდ ის დაგრჩათ, რომ გაიმეოროთ X და მომდევნო ადგილზე გადახტომა.
        courseB_artist_loops_challenge2_b: თქვენ შეგიძლიათ `ახტომის` ბლოკების გამოყენება
          სხვა ადგილებზე მოსახვედრად.
      courseB_collector_loops1_authored_hint:
        courseB_collector_loops1_a: 'ეს ბლოკი: <xml><block type="collector_collect_simplified"/></xml>
          შეგვიძლია გამვიყენოთ საგანძურის ასაღებად მაშინ, როდესაც განძის თავზე ვდგავართ.'
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: You'll need three `repeat` loops to solve this
          puzzle.
        courseB_collector_loops10_b: სცადეთ ფურცელზე ჩამოწეროთ სვლები და იპოვოთ გამეორებადი
          ნაწილები.
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: If you can't figure out where to put the `repeat`
          loops, write out the code step-by-step and look for a pattern.
        courseB_collector_loops10_b: სცადეთ ფურცელზე ჩამოწეროთ სვლები და იპოვოთ გამეორებადი
          ნაწილები.
      courseB_collector_loops1_2018_authored_hint:
        courseB_collector_loops1_a: 'ეს ბლოკი: <xml><block type="collector_collect_simplified"/></xml>
          შეგვიძლია გამვიყენოთ საგანძურის ასაღებად მაშინ, როდესაც განძის თავზე ვდგავართ.'
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: სანამ განძეულობის შეგროვებას შეძლებთ, უნდა გადაადგილდეთ.
        courseB_collector_loops2_b: 'როდესაც საგანძურამდე მიაღწევთ, მის ასაღებად ეს
          ბლოკი გამოიყენეთ: <xml><block type="collector_collect"/></xml>.'
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: სანამ განძეულობის შეგროვებას შეძლებთ, უნდა გადაადგილდეთ.
        courseB_collector_loops2_b: 'როდესაც საგანძურამდე მიაღწევთ, მის ასაღებად ეს
          ბლოკი გამოიყენეთ: <xml><block type="collector_collect"/></xml>.'
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_a: Try using a `repeat` block to collect your gold.
        courseB_collector_prog3_b: გახსოვდეთ გამეორების ციკლში შეგიძლიათ მოათავსოთ
          ერთზე მეტი ბლოკი.
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> block to collect your
          treasure.
        courseB_collector_prog3_b: გახსოვდეთ გამეორების ციკლში შეგიძლიათ მოათავსოთ
          ერთზე მეტი ბლოკი.
      courseB_collector_loops3_predict1_authored_hint:
        courseB_collector_prog3_a: Try using a `repeat` block to collect your gold.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_a: Is something not right? Try using the step button
          to figure out where things go wrong.
        courseB_collector_loops4_b: To change how far the adventurer goes, change
          the number of times that the loop runs.
        courseB_collector_loops4_c: გამეორების ციკლის შემდეგ, ლორენი ფეხით უნდა დაუყვეს
          გზას ქვევით, იმისათვის რომ საგანძური აიღოს!
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_a: Try using the step button to figure out where
          things go wrong.
        courseB_collector_loops4_b: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseB_collector_loops4_c: გამეორების ციკლის შემდეგ, ლორენი ფეხით უნდა დაუყვეს
          გზას ქვევით, იმისათვის რომ საგანძური აიღოს!
      courseB_collector_loops5_authored_hint:
        courseB_collector_loops5_a: Try using more than one loop to get the job done.
        courseB_collector_loops5_b: სცადეთ რამდენჯერმე გაუშვათ კოდი და რომ ნახოთ,
          რა მოხდება.
      courseB_collector_loops5_2018_authored_hint:
        courseB_collector_loops5_a: Use more than one loop to get the job done.
        courseB_collector_loops5_b: სცადეთ რამდენჯერმე გაუშვათ კოდი და რომ ნახოთ,
          რა მოხდება.
      courseB_collector_loops6_authored_hint:
        courseB_collector_loops6_a: Can't figure out where things start going wrong?
          Use the "Step" button to run through your program one block at a time.
        courseB_collector_loops6_b: '"3"-ზე დაკლიკებითა და განსხვავებული რიცხვის არჩევით
          შეგიძლიათ, შეცვალოთ ციკლის გამეორების რაოდენობა.'
        courseB_collector_loops6_c: ამ თავსატეხის ამოსახსნელად თქვენ 3 `გამეორების`
          ბლოკის გამოყენება დაგჭირდებათ.
        courseB_collector_loops6_d: თუ დაიბენით, სცადეთ დაშალოთ თავსატეხი 3 ნაწილად.
      courseB_collector_loops6_2018_authored_hint:
        courseB_collector_loops6_a: Can't figure out where things start going wrong?
          Use the "Step" button to run through your program one block at a time.
        courseB_collector_loops6_b: '"3"-ზე დაკლიკებითა და განსხვავებული რიცხვის არჩევით
          შეგიძლიათ, შეცვალოთ ციკლის გამეორების რაოდენობა.'
        courseB_collector_loops6_c: ამ თავსატეხის ამოსახსნელად თქვენ 3 `გამეორების`
          ბლოკის გამოყენება დაგჭირდებათ.
        courseB_collector_loops6_d: თუ დაიბენით, სცადეთ დაშალოთ თავსატეხი 3 ნაწილად.
      courseB_collector_loops7_authored_hint:
        courseB_collector_loops7_a: If you are having a hard time with the puzzle,
          try drawing it on paper to help you figure it out.
        courseB_collector_loops7_b: ამ თავსატეხის ამოსახსნელად დაგჭირდებათ გამეორების
          3 ციკლი. ასევე, არ დაგავიწყდეთ, რომ ბოლოში დამატებითი საუნჯე გელოდებათ!
      courseB_collector_loops7_2018_authored_hint:
        courseB_collector_loops7_a: If you are having a hard time with the puzzle,
          try drawing it on paper to help you figure it out.
        courseB_collector_loops7_b: ამ თავსატეხის ამოსახსნელად დაგჭირდებათ გამეორების
          3 ციკლი. ასევე, არ დაგავიწყდეთ, რომ ბოლოში დამატებითი საუნჯე გელოდებათ!
      courseB_collector_loops8_authored_hint:
        courseB_collector_loops8_challenge_a: 'If you can''t figure out where to put
          the repeat loops, program it out step-by-step and look for a pattern. '
      courseB_collector_loops8_2018_authored_hint:
        courseB_collector_loops8_challenge_a: If you can't figure out where to put
          the repeat loops, write out the code step-by-step and look for a pattern.
      courseB_collector_loops9_authored_hint:
        courseB_collector_loops9_a: 'Does this seem too hard?  Break it up into 3
          little problems to make it feel easier.  '
        courseB_collector_loops9_b: ამ ამოცანის ამოსახსნელად დაგჭირდებათ გამეორების
          3 ციკლი ერთმანეთის მიყოლებით.
      courseB_collector_loops9_2018_authored_hint:
        courseB_collector_loops9_a: 'Does this seem too hard?  Break it up into 3
          little problems to make it feel easier.  '
        courseB_collector_loops9_b: ამ ამოცანის ამოსახსნელად დაგჭირდებათ გამეორების
          3 ციკლი ერთმანეთის მიყოლებით.
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |
          დაიწყეთ შემდეგი ბრძანების ციკლში მოთავსებით:

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |
          თითოეულ ბილიკს შორის ორჯერ გადაადგილდით აღმოსავლეთისაკენ.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>.
        courseB_collector_loops_challenge1_d: |-
          სცადეთ ეს!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |
          დაიწყეთ შემდეგი ბრძანების ციკლში მოთავსებით:

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |
          თითოეულ ბილიკს შორის ორჯერ გადაადგილდით აღმოსავლეთისაკენ.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>.
        courseB_collector_loops_challenge1_d: |-
          სცადეთ ეს!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: თუ რამე არ გამოგდით, ნუ შეგეშინდებათ
          თავიდან დაწყების. არ დანებდეთ!
        courseB_collector_loops_challenge2_b: |-
          თუ კოდის ამ სტრუქტურას გამოიყენებთ, გამოქვაბულის ბოლოს ლორელი კედელს არ დაეჯახება!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: იმისათვის რომ მოიპოვოთ საგანძურის უკანასკნელი
          გროვა, სცადეთ გამოიყენოთ`გამეორების` ბლოკი!
        courseB_collector_loops_challenge2_d: |-
          მოსინჯეთ ეს ამოხსნა:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a_authored_hint:
        courseB_collector_loops_challenge2a_a: If something goes wrong, try debugging
          it. Don't give up!
        courseB_collector_loops_challenge2a_b: Look at this option for getting through
          the maze. Do you see a pattern that you can repeat?
        courseB_collector_loops_challenge2a_c: To collect all of the treasure, you
          will either need to add two  <xml> <block type="collector_collect"/></xml>
          blocks inside your loop, or put the block inside of its own `repeat` block.
      courseB_collector_loops_challenge2a_2018_authored_hint:
        courseB_collector_loops_challenge2a_a: If something goes wrong, try debugging
          it. Don't give up!
        courseB_collector_loops_challenge2a_b: Look at this option for getting through
          the maze. Do you see a pattern that you can repeat?
        courseB_collector_loops_challenge2a_c: To collect all of the treasure, you
          will either need to add two  <xml> <block type="collector_collect"/></xml>
          blocks inside your loop, or put the block inside of its own `repeat` block.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: ამ პრობლემის გადასაჭრელად თქვენ მხოლოდ
          ერთი ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) ბლოკის გამოყენება გჭირდებათ.
        courseA_collector_loops_challenge2_a: |-
          სამხრეთით მოძრაობის დაწყებამდე, შეგიძლიათ ბილიკზე მეორეჯერ გადაადგილდეთ უკან.
          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_collector_prog3_authored_hint:
        courseB_collector_prog3_a: Try using a `repeat` block to collect your gold.
      courseB_iceage_loops1_authored_hint:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:
          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops2_authored_hint:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Use this new block!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: კოდის გასამეორებლად, გადმოათრიეთ `გამეორების` ციკლი,
          შემდეგ კი განათავსეთ მასში სასურველი ბლოკი.
      courseB_iceage_loops4_authored_hint:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get
          to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops6_authored_hint:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseB_iceage_loops8_authored_hint:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you
          change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops9_authored_hint:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: დაუკავშირეთ ბლოკები <xml><block type="when_run"/></xml>
          ბლოკს, იმისათვის რომ აამოძრაოთ ჩიტი!
        courseB_maze_seq1_b: იმისათვის, რომ ჩიტი ღორთან მიიყვანოთ, გამოქაჩეთ სამი
          ამ <xml><block type="maze_moveSouth"/></xml> ისართაგან და დაუკავშირეთ ის
          <xml><block type="when_run"/></xml> ბლოკს.
      courseB_maze_seq10_authored_hint:
        courseB_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseB_maze_seq10_b: გოჭთან მისაღწევად 2 სხვადასხვა მიმართულებით გადაადგილება
          დაგჭირდებათ.
      courseB_maze_seq10_2018_authored_hint: []
      courseB_maze_seq10_predict1_authored_hint: []
      courseB_maze_seq10_predict1_2018_authored_hint: []
      courseB_maze_seq11_authored_hint:
        courseB_maze_seq11_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseB_maze_seq11_b: |-
          ამოხსენით ეს თავსატეხი 2 ნაწილად: პირველი ნაწილი -
           კუთხემდე და მეორე ნაწილი - კუთხის შემდეგ.
      courseB_maze_seq11_2018_authored_hint: []
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: დაუკავშირეთ ბლოკები <xml><block type="when_run"/></xml>
          ბლოკს, იმისათვის რომ აამოძრაოთ ჩიტი!
        courseB_maze_seq1_b: იმისათვის, რომ ჩიტი ღორთან მიიყვანოთ, გამოქაჩეთ სამი
          ამ <xml><block type="maze_moveSouth"/></xml> ისართაგან და დაუკავშირეთ ის
          <xml><block type="when_run"/></xml> ბლოკს.
      courseB_maze_seq1_predict1_authored_hint: []
      courseB_maze_seq1_predict1_2018_authored_hint: []
      courseB_maze_seq2_authored_hint:
        courseB_maze_seq2_a: This program is missing one block. Can you figure out
          which one?
        courseB_maze_seq2_b: სცადეთ მოცემული კოდის გაშვება იმის სანახავად, თუ რისი
          გაკეთება სჭირდება ჩიტს შემდეგ.
      courseB_maze_seq2_2018_authored_hint:
        courseB_maze_seq2_a: This program is missing one block. Can you figure out
          which one?
        courseB_maze_seq2_b: სცადეთ მოცემული კოდის გაშვება იმის სანახავად, თუ რისი
          გაკეთება სჭირდება ჩიტს შემდეგ.
      courseB_maze_seq3_authored_hint:
        courseB_maze_seq3_a: One of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseB_maze_seq3_b: სცადეთ გამოიყენოთ ნაბიჯის ღილაკი, იმისათვის რომ ნახოთ,
          სად არის პროგრამაში შეცდომა. პირველ ნაბიჯში? მეორე ნაბიჯში?
        courseB_maze_seq3_c: კოდი <xml><block type="maze_moveWest"/></xml> სავარაუდოდ,
          არ გადააადგილებს ჩიტს სწორი მიმართულებით.
      courseB_maze_seq3_2018_authored_hint:
        courseB_maze_seq3_a: One of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseB_maze_seq3_b: სცადეთ გამოიყენოთ ნაბიჯის ღილაკი, იმისათვის რომ ნახოთ,
          სად არის პროგრამაში შეცდომა. პირველ ნაბიჯში? მეორე ნაბიჯში?
        courseB_maze_seq3_c: კოდი <xml><block type="maze_moveWest"/></xml> სავარაუდოდ,
          არ გადააადგილებს ჩიტს სწორი მიმართულებით.
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to
          the pig.
        courseB_maze_seq4_b: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ ამ ბლოკის
          გამოყენება <xml><block type="maze_moveEast"/></xml>.
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to
          the pig.
        courseB_maze_seq4_b: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ ამ ბლოკის
          გამოყენება <xml><block type="maze_moveEast"/></xml>.
      courseB_maze_seq5_authored_hint:
        courseB_maze_seq5_a: თუ გაიჭედეთ, სცადეთ ბილიკი ფურცელზე გადმოხატოთ.
        courseB_maze_seq5_b: ამ თავსატეხის ამოხსნის 2 გზა არსებობს!
        courseB_maze_seq5_c: Not sure how to get to the pig?  Try this path.
      courseB_maze_seq5_2018_authored_hint:
        courseB_maze_seq5_a: თუ გაიჭედეთ, სცადეთ ბილიკი ფურცელზე გადმოხატოთ.
        courseB_maze_seq5_b: ამ თავსატეხის ამოხსნის 2 გზა არსებობს!
        courseB_maze_seq5_c: Not sure how to get to the pig?  Try this path.
      courseB_maze_seq6_authored_hint:
        courseB_maze_seq6_a: Your final code should have three movement blocks.
        courseB_maze_seq6_b: თუ გაიჭედეთ, სცადეთ ამ თავსატეხის ორ ნაწილად ამოხსნა,
          პირველი ამონახსნი გვერდებზე განათავსეთ, ხოლო მეორე მაღლა და დაბლა.
        courseB_maze_seq5_c: ამ თავსატეხის ამოხსნის 2 გზა არსებობს.
        courseB_maze_seq5_d: Not sure how to get to the pig? Try this path!
      courseB_maze_seq6_2018_authored_hint:
        courseB_maze_seq6_a: Your final code should have three movement blocks.
        courseB_maze_seq6_b: თუ გაიჭედეთ, სცადეთ ამ თავსატეხის ორ ნაწილად ამოხსნა,
          პირველი ამონახსნი გვერდებზე განათავსეთ, ხოლო მეორე მაღლა და დაბლა.
        courseB_maze_seq5_c: ამ თავსატეხის ამოხსნის 2 გზა არსებობს.
        courseB_maze_seq5_d: Not sure how to get to the pig? Try this path!
      courseB_maze_seq7_authored_hint:
        courseB_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseB_maze_seq7_b: სცადეთ გამოიყენოთ მოცემული ბლოკი და ნახეთ, სად აღმოჩნდებით
          ბოლოს.
        courseB_maze_seq7_c: Can't get to the pig?  Try this path!
      courseB_maze_seq7_2018_authored_hint:
        courseB_maze_seq7_a: Add 1 block to move the bird to the pig.
        courseB_maze_seq7_b: სცადეთ გამოიყენოთ მოცემული ბლოკი და ნახეთ, სად აღმოჩნდებით
          ბოლოს.
        courseB_maze_seq7_c: Can't get to the pig?  Try this path!
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_a: If you're stuck, try adding one block at a time until
          you solve the puzzle.
        courseB_maze_seq8_b: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseB_maze_seq8_c: Don't know which way to go? Try this path!
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_a: Try adding one block at a time until you solve the puzzle.
        courseB_maze_seq8_b: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseB_maze_seq8_c: Don't know which way to go? Try this path!
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseB_maze_seq9_b: ააგეთ პროგრამა თითო ჯერზე თითო ბლოკის დამატებით და აგებისას
          პარალელურად ტესტეთ იგი.
        courseB_maze_seq9_c: ამ თავსატეხის ამოხსნის 2 გზა არსებობს.
        courseB_maze_seq9_d: Stuck?  Try this path!
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_a: Try writing down all of the steps on a piece of paper
          first.
        courseB_maze_seq9_b: ააგეთ პროგრამა თითო ჯერზე თითო ბლოკის დამატებით და აგებისას
          პარალელურად ტესტეთ იგი.
        courseB_maze_seq9_c: ამ თავსატეხის ამოხსნის 2 გზა არსებობს.
        courseB_maze_seq9_d: Stuck?  Try this path!
      courseB_maze_seq9_challenge1_authored_hint: []
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: Stuck? Try tracing the bird's path with your finger.
        courseB_maze_seqCold_b: The extra blocks need to be added before the last
          ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51
          PM.png )
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: ამჯერად უმოკლესი ბილიკი შეიძლება არ გამოგვადგეს.
        courseB_maze_seq_challenge1_b: 'დასაწყაბად სცადეთ გამოიყენოთ ბლოკი: <xml><block
          type="maze_moveWest"/></xml>.'
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: ამჯერად უმოკლესი ბილიკი შეიძლება არ გამოგვადგეს.
        courseB_maze_seq_challenge1_b: 'დასაწყაბად სცადეთ გამოიყენოთ ბლოკი: <xml><block
          type="maze_moveWest"/></xml>.'
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: ამ თავსატეხის ამოსახსნელად თქვენ არ გჭირდებათ
          დაამატოთ ან წაიღოთ ბლოკები.
        courseB_maze_seq_challenge2_b: გადააწყვეთ ბლოკები და კიბის ფორმით დაალაგეთ.
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: ამ თავსატეხის ამოსახსნელად თქვენ არ გჭირდებათ
          დაამატოთ ან წაიღოთ ბლოკები.
        courseB_maze_seq_challenge2_b: გადააწყვეთ ბლოკები და კიბის ფორმით დაალაგეთ.
      courseB_playlab_challenge1_Template_authored_hint: []
      courseB_playlab_challenge1_Template_2018_authored_hint: []
      courseB_playlab_events2_authored_hint:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018_authored_hint:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events3_authored_hint:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018_authored_hint:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4_authored_hint:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          ეს არის ბლოკი, რომელიც რაინდს მარცხნივ ამოძრავებს.
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018_authored_hint:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          ეს არის ბლოკი, რომელიც რაინდს მარცხნივ ამოძრავებს.
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5_authored_hint:
        courseB_playlab_events5_a: "This is the event block that controls the right
          arrow: \n\n![](https://images.code.org/d14e2a6cdf78c4ae7d2010113ea8d321-image-1475695765628.29.00.png)"
        courseB_playlab_events5_b: "This is the block that makes the knight run away.
          \n\n![](https://images.code.org/2e4f0701a371a9932a37853294a170fe-image-1475695777801.29.09.png)"
      courseB_playlab_events5_2018_authored_hint:
        courseB_playlab_events5_a: "This is the event block that controls the right
          arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n
          \ </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away.
          \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n
          \   <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events6_authored_hint:
        courseB_playlab_events6_a: |-
          You will need these event blocks:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          განსხვავებული მიმართულების ასარჩევად გამოიყენეთ ქვემოთ მიმართული ისარი, რომელიც განთავსებულია შემდეგი მოვლენის ბლოკზე: `როდესაც ___ ისარს დავაწვებით`.
          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: დავალების შესასრულებლად მიაღწიეთ ყველა დროშამდე!
      courseB_playlab_events6_2018_authored_hint:
        courseB_playlab_events6_a: |-
          You will need these event blocks:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          განსხვავებული მიმართულების ასარჩევად გამოიყენეთ ქვემოთ მიმართული ისარი, რომელიც განთავსებულია შემდეგი მოვლენის ბლოკზე: `როდესაც ___ ისარს დავაწვებით`.
          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: დავალების შესასრულებლად მიაღწიეთ ყველა დროშამდე!
      courseB_playlab_events7_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_eventsTemplate_authored_hint: []
      courseB_playlab_eventsTemplate_2018_authored_hint: []
      courseB_playlab_eventsToolbox_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:

          ![](https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.

          ![](https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png)
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:

          ![](https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: "ქვემოთ ჩამოიყვანეთ სხვა ცხოველები, როდესაც
          დააწვებით ღილაკს  `▼`. \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          შეცვალეთ ცხოველების მოძრაობის სიჩქარე ამ ბლოკის გამოყენებით:
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          რას იტყვის ყველა, როცა რბოლა დამთავრდება? ალაპარაკე ისინი ამ მოვლენის გამოყენებით:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: "ქვემოთ ჩამოიყვანეთ სხვა ცხოველები, როდესაც
          დააწვებით ღილაკს  `▼`. \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          შეცვალეთ ცხოველების მოძრაობის სიჩქარე ამ ბლოკის გამოყენებით:
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          რას იტყვის ყველა, როცა რბოლა დამთავრდება? ალაპარაკე ისინი ამ მოვლენის გამოყენებით:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: ამ თამაშში დაკლიკვაზე თითოეული ცხოველი
          უნდა გაქრეს. გარდა ამისა, ის უკან უნდა დაბრუნდეს ორი ან სამი დაკლიკვის შემდეგ!
        courseB_playlab_events_challenge2_b: |-
          გამოიყენეთ სხვა მოვლენის ბლოკი, იმისათვის რომ გააქროთ სხვა ცხოველები!
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          გამოიყენეთ დამატებითი ბრძანებები იმისათვის, რომ ცხოველებზე დაკლიკებისას ქულები დააგროვოთ ან ცხოველებმა ხმა გამოსცენ!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "ცვლილებების დროა!\n\nზოგ ცხოველს სხვებზე
          მეტი ქულა მიანიჭეთ. \nგამოიყენეთ სხვადასხვა ხმები.\nშეცვალეთ ცხოველების
          ხასიათი!"
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: ამ თამაშში დაკლიკვაზე თითოეული ცხოველი
          უნდა გაქრეს. გარდა ამისა, ის უკან უნდა დაბრუნდეს ორი ან სამი დაკლიკვის შემდეგ!
        courseB_playlab_events_challenge2_b: |-
          გამოიყენეთ სხვა მოვლენის ბლოკი, იმისათვის რომ გააქროთ სხვა ცხოველები!
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          გამოიყენეთ დამატებითი ბრძანებები იმისათვის, რომ ცხოველებზე დაკლიკებისას ქულები დააგროვოთ ან ცხოველებმა ხმა გამოსცენ!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "ცვლილებების დროა!\n\nზოგ ცხოველს სხვებზე
          მეტი ქულა მიანიჭეთ. \nგამოიყენეთ სხვადასხვა ხმები.\nშეცვალეთ ცხოველების
          ხასიათი!"
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: ამ თამაშში დაკლიკვაზე თითოეული ცხოველი
          უნდა გაქრეს. გარდა ამისა, ის უკან უნდა დაბრუნდეს ორი ან სამი დაკლიკვის შემდეგ!
        courseB_playlab_events_challenge2_b: |-
          გამოიყენეთ სხვა მოვლენის ბლოკი, იმისათვის რომ გააქროთ სხვა ცხოველები!
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          გამოიყენეთ დამატებითი ბრძანებები იმისათვის, რომ ცხოველებზე დაკლიკებისას ქულები დააგროვოთ ან ცხოველებმა ხმა გამოსცენ!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "ცვლილებების დროა!\n\nზოგ ცხოველს სხვებზე
          მეტი ქულა მიანიჭეთ. \nგამოიყენეთ სხვადასხვა ხმები.\nშეცვალეთ ცხოველების
          ხასიათი!"
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: ამ თამაშში დაკლიკვაზე თითოეული ცხოველი
          უნდა გაქრეს. გარდა ამისა, ის უკან უნდა დაბრუნდეს ორი ან სამი დაკლიკვის შემდეგ!
        courseB_playlab_events_challenge2_b: |-
          გამოიყენეთ სხვა მოვლენის ბლოკი, იმისათვის რომ გააქროთ სხვა ცხოველები!
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          გამოიყენეთ დამატებითი ბრძანებები იმისათვის, რომ ცხოველებზე დაკლიკებისას ქულები დააგროვოთ ან ცხოველებმა ხმა გამოსცენ!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "ცვლილებების დროა!\n\nზოგ ცხოველს სხვებზე
          მეტი ქულა მიანიჭეთ. \nგამოიყენეთ სხვადასხვა ხმები.\nშეცვალეთ ცხოველების
          ხასიათი!"
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: ამ თამაშში დაკლიკვაზე თითოეული ცხოველი
          უნდა გაქრეს. გარდა ამისა, ის უკან უნდა დაბრუნდეს ორი ან სამი დაკლიკვის შემდეგ!
        courseB_playlab_events_challenge2_b: |-
          გამოიყენეთ სხვა მოვლენის ბლოკი, იმისათვის რომ გააქროთ სხვა ცხოველები!
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          გამოიყენეთ დამატებითი ბრძანებები იმისათვის, რომ ცხოველებზე დაკლიკებისას ქულები დააგროვოთ ან ცხოველებმა ხმა გამოსცენ!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: "ცვლილებების დროა!\n\nზოგ ცხოველს სხვებზე
          მეტი ქულა მიანიჭეთ. \nგამოიყენეთ სხვადასხვა ხმები.\nშეცვალეთ ცხოველების
          ხასიათი!"
      courseB_scrat_forVideo_authored_hint: []
      courseB_starWars_prog1_authored_hint:
        courseB_starWars_prog1_a: სცადეთ თითო ჯერზე თითო ბლოკი დაამატოთ, შემდეგ, იმის
          სანახავად თუ რა მოხდება, დააკლიკეთ "გაშვებას".
        courseB_starWars_prog1_b: |
          ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ აღმოსავლეთით გადაადგილება. რა სიშორეზე უნდა გადაადგილდეთ?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog10_authored_hint: []
      courseB_starWars_prog10_2018_authored_hint: []
      courseB_starWars_prog11_authored_hint: []
      courseB_starWars_prog11_2018_authored_hint: []
      courseB_starWars_prog1_2018_authored_hint:
        courseB_starWars_prog1_a: სცადეთ თითო ჯერზე თითო ბლოკი დაამატოთ, შემდეგ, იმის
          სანახავად თუ რა მოხდება, დააკლიკეთ "გაშვებას".
        courseB_starWars_prog1_b: |
          ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ აღმოსავლეთით გადაადგილება. რა სიშორეზე უნდა გადაადგილდეთ?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2_authored_hint:
        courseB_starWars_prog2_a: გაყავით ეს პრობლემა ორ ნაწილად. მოიპოვეთ ჯართის
          ერთი გროვა, შემდეგ გაარკვიეთ, როგორ მოიპოვოთ ჯართის მეორე გროვა.
      courseB_starWars_prog2_2018_authored_hint:
        courseB_starWars_prog2_a: გაყავით ეს პრობლემა ორ ნაწილად. მოიპოვეთ ჯართის
          ერთი გროვა, შემდეგ გაარკვიეთ, როგორ მოიპოვოთ ჯართის მეორე გროვა.
      courseB_starWars_prog3_authored_hint:
        courseB_starWars_prog3_a: ამ თავსატეხის ამოსახსნელად 3 სვლის გაკეთება მოგიწევთ.
        courseB_starWars_prog3_b: თითო ჯერზე დაწერეთ კოდის ერთი ბლოკი. გაუშვით კოდი,
          რომ გაარკვიოთ, რა უნდა იყოს შემდეგი ნაბიჯი.
      courseB_starWars_prog3_2018_authored_hint:
        courseB_starWars_prog3_a: ამ თავსატეხის ამოსახსნელად 3 სვლის გაკეთება მოგიწევთ.
        courseB_starWars_prog3_b: თითო ჯერზე დაწერეთ კოდის ერთი ბლოკი. გაუშვით კოდი,
          რომ გაარკვიოთ, რა უნდა იყოს შემდეგი ნაბიჯი.
      courseB_starWars_prog4_authored_hint:
        courseB_starWars_prog4_a: თითო ჯერზე დაწერეთ კოდის ერთი ბლოკი. გაუშვით კოდი,
          რომ გაარკვიოთ, რა უნდა იყოს შემდეგი ნაბიჯი.
        courseB_starWars_prog4_b: |-
          უფრო მოკლე კოდის შესაქმნელად, სცადეთ გამოიყენოთ `გამეორების` ბლოკი.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018_authored_hint:
        courseB_starWars_prog4_a: თითო ჯერზე დაწერეთ კოდის ერთი ბლოკი. გაუშვით კოდი,
          რომ გაარკვიოთ, რა უნდა იყოს შემდეგი ნაბიჯი.
        courseB_starWars_prog4_b: |-
          უფრო მოკლე კოდის შესაქმნელად, სცადეთ გამოიყენოთ `გამეორების` ბლოკი.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5_authored_hint:
        courseB_starWars_prog5_a: ხომ არ ჰგავს ამ მაგალითის სტრუქტურა უკანასკნელ თავსატეხს?
        courseB_starWars_prog5_b: BB-8 აიღებს ჯართს, როდესაც გადაუვლის მას.
        courseB_starWars_prog5_c: გაყევით თითით ამ ნიმუშს. მოძრაობის დროს დათვალეთ
          მეტალის ნატეხები.
        courseB_starWars_prog5_da: |-
          Look what happens if you use the same solution as the stair-step puzzle:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018_authored_hint:
        courseB_starWars_prog5_a: ხომ არ ჰგავს ამ მაგალითის სტრუქტურა უკანასკნელ თავსატეხს?
        courseB_starWars_prog5_b: BB-8 აიღებს ჯართს, როდესაც გადაუვლის მას.
        courseB_starWars_prog5_c: გაყევით თითით ამ ნიმუშს. მოძრაობის დროს დათვალეთ
          მეტალის ნატეხები.
        courseB_starWars_prog5_da: |-
          Look what happens if you use the same solution as the stair-step puzzle:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6_authored_hint:
        courseB_starWars_prog6_a: ეს ნიმუში უბრალოდ კიბის საფეხურია ორი ბიჯით თითო
          მიმართულებაზე!
        courseB_starWars_prog6_b: |-
          უფრო მოკლე კოდის შესაქმნელად, სცადეთ გამოიყენოთ `გამეორების` ბლოკი.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018_authored_hint:
        courseB_starWars_prog6_a: ეს ნიმუში უბრალოდ კიბის საფეხურია ორი ბიჯით თითო
          მიმართულებაზე!
        courseB_starWars_prog6_b: |-
          უფრო მოკლე კოდის შესაქმნელად, სცადეთ გამოიყენოთ `გამეორების` ბლოკი.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7_authored_hint:
        courseB_starWars_prog7_a: ხომ არ ჰგავს ამ მაგალითის სტრუქტურა უკანასკნელ თავსატეხს?
        courseB_starWars_prog7_b: BB-8 აიღებს ჯართს, როდესაც გადაუვლის მას.
        courseB_starWars_prog7_c: სცადეთ ამ თავსატეხში დიდი კიბის დახატვა. ფარავს
          თუ არა ის მთელ ჯართს?
      courseB_starWars_prog7_2018_authored_hint:
        courseB_starWars_prog7_a: ხომ არ ჰგავს ამ მაგალითის სტრუქტურა უკანასკნელ თავსატეხს?
        courseB_starWars_prog7_b: BB-8 აიღებს ჯართს, როდესაც გადაუვლის მას.
        courseB_starWars_prog7_c: სცადეთ ამ თავსატეხში დიდი კიბის დახატვა. ფარავს
          თუ არა ის მთელ ჯართს?
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: არაუშავს, თუ უკან დაუბრუნდებით სივრცეების იმ წყებას,
          სადაც უკვე გიმოგზაურიათ.
        courseB_starWars_prog8_b: |-
          სცადეთ გამოიყენოთ გამეორების ბლოკი იმისათვის, რომ ნახოთ, რა მოსდის ბლოკს, რომელიც შიგნით მოათავსეთ.
          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: არაუშავს, თუ უკან დაუბრუნდებით სივრცეების იმ წყებას,
          სადაც უკვე გიმოგზაურიათ.
        courseB_starWars_prog8_b: |-
          სცადეთ გამოიყენოთ გამეორების ბლოკი იმისათვის, რომ ნახოთ, რა მოსდის ბლოკს, რომელიც შიგნით მოათავსეთ.
          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ
          თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
        courseB_starWars_prog9_b: ამ თავსატეხის ამოხსნის ბევრი გზა არსებობს.
        courseB_starWars_prog9_c: გამოგვადეგებოდა თუ არა აქ`გამეორების` ციკლი?
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი, თუ
          თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
        courseB_starWars_prog9_b: ამ თავსატეხის ამოხსნის ბევრი გზა არსებობს.
        courseB_starWars_prog9_c: გამოგვადეგებოდა თუ არა აქ`გამეორების` ციკლი?
      courseC_PlayLab_embed_events9_authored_hint: []
      courseC_PlayLab_events1_authored_hint:
        courseC_PlayLab_events1_a: |-
          მიამაგრეთ ეს ბლოკი, ბლოკს `გაშვებისას`:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018_authored_hint:
        courseC_PlayLab_events1_a: |-
          მიამაგრეთ ეს ბლოკი, ბლოკს `გაშვებისას`:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events2_authored_hint:
        courseC_PlayLab_events2_a: |-
          მიამაგრეთ ამ ბლოკებიდან ორი ბლოკს `გაშვებისას`:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: გამოიყენეთ ბლოკზე განთავსებული ჩამოსასშლელი მენიუ,
          იმისათვის რომ შეცვალოთ მოსაუბრე მსახიობები.
      courseC_PlayLab_events2_2018_authored_hint:
        courseC_PlayLab_events2_a: |-
          მიამაგრეთ ამ ბლოკებიდან ორი ბლოკს `გაშვებისას`:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: გამოიყენეთ ბლოკზე განთავსებული ჩამოსასშლელი მენიუ,
          იმისათვის რომ შეცვალოთ მოსაუბრე მსახიობები.
      courseC_PlayLab_events3_authored_hint:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about
          25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: არის ინსტრუმენტების პანელში ბლოკი, რომელმაც შეიძლება,
          აამოძრავოს მსახიობი?
        courseC_PlayLab_events3_c: |-
          მიამაგრეთ ეს ბლოკი ბლოკს `გაშვებისას`:
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018_authored_hint:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about
          25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: არის ინსტრუმენტების პანელში ბლოკი, რომელმაც შეიძლება,
          აამოძრავოს მსახიობი?
        courseC_PlayLab_events3_c: |-
          მიამაგრეთ ეს ბლოკი ბლოკს `გაშვებისას`:
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events4_authored_hint:
        courseC_PlayLab_events4_b: Jorge needs to move right 100 pixels to reach the
          cat.
        courseC_PlayLab_events4_a: You will need to attach a block to the `when actor
          touches` event to solve this puzzle.
      courseC_PlayLab_events4_2018_authored_hint:
        courseC_PlayLab_events4_b: When the "Run" button is clicked, Jorge needs to
          move right **100** pixels to reach Olive the Cat.
        courseC_PlayLab_events4_a: You will need to attach an `actor __ say` block
          to the `when actor touches` event to solve this puzzle.
      courseC_PlayLab_events5_authored_hint:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the
          `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: პროგრამის გაშვებისას დააწექით ოქტავიას, იმისათვის
          რომ შეამოწმოთ, როგორ მუშაობს ის!
      courseC_PlayLab_events5_2018_authored_hint:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the
          `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: პროგრამის გაშვებისას დააწექით ოქტავიას, იმისათვის
          რომ შეამოწმოთ, როგორ მუშაობს ის!
      courseC_PlayLab_events6_authored_hint:
        courseC_PlayLab_events6_a: თითოეულ მწვანე `როცა ისარი` ბლოკს ქვემოთ უნდა ჰქონდეს
          ერთი მოქმედება.
        courseC_PlayLab_events6_b: გამოიყენეთ ბლოკზე `გადაადგილე მსახიობი 1` განთავსებული
          ჩამოსაშლელი მენიუ, იმისათვის რომ შეცვალოთ ვადლეს მოძრაობის მიმართულება.
        courseC_PlayLab_events6_c: როცა მორჩებით, უნდა შეგეძლოთ, თქვენს კომპიუტერზე
          განთავსებული ისრის ღილაკების გამოყენებით ამოძრაოთ ბაჯბაჯა პერსონაჟები!
      courseC_PlayLab_events6_2018_authored_hint:
        courseC_PlayLab_events6_a: თითოეულ მწვანე `როცა ისარი` ბლოკს ქვემოთ უნდა ჰქონდეს
          ერთი მოქმედება.
        courseC_PlayLab_events6_b: გამოიყენეთ ბლოკზე `გადაადგილე მსახიობი 1` განთავსებული
          ჩამოსაშლელი მენიუ, იმისათვის რომ შეცვალოთ ვადლეს მოძრაობის მიმართულება.
        courseC_PlayLab_events6_c: როცა მორჩებით, უნდა შეგეძლოთ, თქვენს კომპიუტერზე
          განთავსებული ისრის ღილაკების გამოყენებით ამოძრაოთ ბაჯბაჯა პერსონაჟები!
      courseC_PlayLab_events7_authored_hint:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block
          and the `move actor 2 down 400 pixels` block inside the `repeat forever`
          loop to solve this puzzle. '
        courseC_PlayLab_events7_b: ციკლს `გამეორება უსასრულოდ` არ სჭირდება რომელიმე
          სხვა მოვლენის ბლოკთან დაკავშირება. ის თავისით გააქტიურდება.
      courseC_PlayLab_events7_2018_authored_hint:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block
          and the `move actor 2 down 400 pixels` block inside the `repeat forever`
          loop to solve this puzzle. '
        courseC_PlayLab_events7_b: ციკლს `გამეორება უსასრულოდ` არ სჭირდება რომელიმე
          სხვა მოვლენის ბლოკთან დაკავშირება. ის თავისით გააქტიურდება.
      courseC_PlayLab_events8_authored_hint:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor
          touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the
          toolbox should help you out!
      courseC_PlayLab_events8_2018_authored_hint:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor
          touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the
          toolbox should help you out!
      courseC_PlayLab_events9_authored_hint:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve
          this puzzle.
        courseC_PlayLab_events9_b: 'დარწმუნდით რომ თქვენი ახალი `როცა პერსონაჟი ეხება`
          ბლოკი ამბობს: მოქმედი პირი **1** და მოქმედი პირი **3**.'
        courseC_PlayLab_events9_c: თქვენს სამუშაო სივრცეში ერთსა და იმავე დროს შეგიძლიათ,
          გქონდეთ ერთზე მეტი `როცა პერსონაჟი ეხება`მოვლენა, ასე რომ საჭირო არაა პირველი
          წაშალოთ!
      courseC_PlayLab_events9_2018_authored_hint:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve
          this puzzle.
        courseC_PlayLab_events9_b: 'დარწმუნდით რომ თქვენი ახალი `როცა პერსონაჟი ეხება`
          ბლოკი ამბობს: მოქმედი პირი **1** და მოქმედი პირი **3**.'
        courseC_PlayLab_events9_c: თქვენს სამუშაო სივრცეში ერთსა და იმავე დროს შეგიძლიათ,
          გქონდეთ ერთზე მეტი `როცა პერსონაჟი ეხება`მოვლენა, ასე რომ საჭირო არაა პირველი
          წაშალოთ!
      courseC_PlayLab_eventsA_authored_hint:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor
          to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ, სპეციალურად
          გამოწიოთ და სამუშაო სივრცეში ჩააგდოთ მოვლენის ბლოკი`გაშვებისას`.
      courseC_PlayLab_eventsA_2018_authored_hint:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor
          to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ, სპეციალურად
          გამოწიოთ და სამუშაო სივრცეში ჩააგდოთ მოვლენის ბლოკი`გაშვებისას`.
      courseC_PlayLab_eventsFP_authored_hint:
        idea1: |-
          *Need an idea?*

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*

          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_eventsFP_2018_authored_hint:
        idea1: |-
          *Need an idea?*

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*

          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: "სათამაშო სივრცეში პერსონაჟების სხვადასხვა
          ადგილას გადასაადგილებლად, შეგიძლიათ გამოიყენოთ ეს ბლოკი: \n<xml> <block
          type=\"studio_setSpritePosition\">\n<title name=\"SPRITE\">0</title>\n<title
          name=\"VALUE\">12</title>\n</block></xml>\n"
        courseC_PlayLab_events_challenge_b: სხვა მსახიობებიდან ერთ-ერთთან შეხებისას
          სცადეთ, გამოიყენოთ ბლოკი `მოათავსეთ მსახიობი 1 მარცხენა შუა პოზიციაზე`.
          ეს თავიდან დაიწყებს თქვენს თამშს და ამგვარად, მოთამაშე შეძლებს გააგრძელოს
          ცდა!
        courseC_PlayLab_events_challenge_c: "იმისათვის, რომ თამაში გააადვილოთ ან მეტად
          გამომწვევი გახადოთ, თქვენ ასევე შეგიძლიათ სხვადასხვა პერსონაჟს შეუცვალოთ
          მოძრაობის სიჩქარე. \n<xml>  <block type=\"studio_setSpriteSpeed\">\n<title
          name=\"SPRITE\">0</title>\n<title name=\"VALUE\">Studio.SpriteSpeed.FAST</title>\n</block></xml>"
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: "სათამაშო სივრცეში პერსონაჟების სხვადასხვა
          ადგილას გადასაადგილებლად, შეგიძლიათ გამოიყენოთ ეს ბლოკი: \n<xml> <block
          type=\"studio_setSpritePosition\">\n<title name=\"SPRITE\">0</title>\n<title
          name=\"VALUE\">12</title>\n</block></xml>\n"
        courseC_PlayLab_events_challenge_b: სხვა მსახიობებიდან ერთ-ერთთან შეხებისას
          სცადეთ, გამოიყენოთ ბლოკი `მოათავსეთ მსახიობი 1 მარცხენა შუა პოზიციაზე`.
          ეს თავიდან დაიწყებს თქვენს თამშს და ამგვარად, მოთამაშე შეძლებს გააგრძელოს
          ცდა!
        courseC_PlayLab_events_challenge_c: "იმისათვის, რომ თამაში გააადვილოთ ან მეტად
          გამომწვევი გახადოთ, თქვენ ასევე შეგიძლიათ სხვადასხვა პერსონაჟს შეუცვალოთ
          მოძრაობის სიჩქარე. \n<xml>  <block type=\"studio_setSpriteSpeed\">\n<title
          name=\"SPRITE\">0</title>\n<title name=\"VALUE\">Studio.SpriteSpeed.FAST</title>\n</block></xml>"
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: ბლოკზე დატანილი ეს ორი მაჩვენებელი საშუალებას
          გაძლევთ სათამაშო სივრცეში ნებისმიერი პიქსელის დაშორებით გადაადგილოთ მსახიობი.
          თქვენ შეგიძლიათ აირჩიოთ ნებისმიერი რიცხვი 0-400.
        courseC_PlayLab_events_challenge_b: |-
          თუ მოიფიქრებთ, ზედა მარცხენა კუთხიდან რა სიშორეზე ისურვებდით გადაადგილებას, შეძლებთ სწორად აარჩიოთ გამოსაყენებელი რიცხვები.
          <xml><block type="studio_setSpriteXY" inline="true">
          <value name="SPRITE">
          <block type="math_number" movable="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="XPOS">
          <block type="math_number" movable="false">
          <title name="NUM">37</title>
          </block>
          </value>
          <value name="YPOS">
          <block type="math_number" movable="false">
          <title name="NUM">187</title>
          </block>
          </value>
          </block></xml>
          ![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)
      courseC_artist_loop1_authored_hint:
        courseC_artist_loop1_a: ციკლში არაფრის შეცვლა არ გჭირდება, უბრალოდ თავზე ერთი
          ბლოკი დაამატეთ.
        courseC_artist_loop1_b: |-
          ეს ბლოკი დაგჭირდებათ კოდის შაბლონის შესაქმნელად:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          აირჩიეთ ნებისმიერი შაბლონი, რომელიც მოგწონთ!
      courseC_artist_loop1_2018_authored_hint:
        courseC_artist_loop1_a: ციკლში არაფრის შეცვლა არ გჭირდება, უბრალოდ თავზე ერთი
          ბლოკი დაამატეთ.
        courseC_artist_loop1_b: |-
          ეს ბლოკი დაგჭირდებათ კოდის შაბლონის შესაქმნელად:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          აირჩიეთ ნებისმიერი შაბლონი, რომელიც მოგწონთ!
      courseC_artist_loops1a_authored_hint:
        courseC_artist_loops1a_a: |-
          თავიდან ეს ბლიკი დაგჭირდებათ:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          სტიკერის დასახატად გამოიყენეთ ეს ბლოკი!
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018_authored_hint:
        courseC_artist_loops1a_a: |-
          თავიდან ეს ბლიკი დაგჭირდებათ:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          სტიკერის დასახატად გამოიყენეთ ეს ბლოკი!
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops2a_authored_hint:
        courseC_artist_loops2a_a: ციკლის შიგნით თქვენ დაგჭირდებათ ახტეთ 200-მდე სიგრძეზე
          ზემოთ და 200-მდე სიგრძეზე ქვემოთ, შემდეგ დახატოთ ჩიტის ეტიკეტი, შემდეგ შემობრუნდეთ
          30 გრადუსით.
        courseC_artist_loops2a_b: დააწექით რიცხვს `გამეორების` ციკლის თავზე, იმისათვის
          რომ შეცვალოთ ციკლის გამეორების რაოდენობა.
      courseC_artist_loops2a_2018_authored_hint:
        courseC_artist_loops2a_a: ციკლის შიგნით თქვენ დაგჭირდებათ ახტეთ 200-მდე სიგრძეზე
          ზემოთ და 200-მდე სიგრძეზე ქვემოთ, შემდეგ დახატოთ ჩიტის ეტიკეტი, შემდეგ შემობრუნდეთ
          30 გრადუსით.
        courseC_artist_loops2a_b: დააწექით რიცხვს `გამეორების` ციკლის თავზე, იმისათვის
          რომ შეცვალოთ ციკლის გამეორების რაოდენობა.
      courseC_artist_loops3a_authored_hint:
        courseC_artist_loops3a_a: ჩიტის სტიკერის შემდეგ, ციკლის შიგნით მხოლოდ ერთი
          ბლოკის განთავსება დაგჭირდებათ.
        courseC_artist_loops3a_b: ღამურის ეტიკეტის საპოვნელად გამოიყენეთ ბლოკის `დახატე
          ეტიკეტი` თავზე განთავსებული ჩამოსაშლელი მენიუ.
      courseC_artist_loops3a_2018_authored_hint:
        courseC_artist_loops3a_a: ჩიტის სტიკერის შემდეგ, ციკლის შიგნით მხოლოდ ერთი
          ბლოკის განთავსება დაგჭირდებათ.
        courseC_artist_loops3a_b: ღამურის ეტიკეტის საპოვნელად გამოიყენეთ ბლოკის `დახატე
          ეტიკეტი` თავზე განთავსებული ჩამოსაშლელი მენიუ.
      courseC_artist_loops4a_authored_hint:
        courseC_artist_loops4a_a: |-
          წინ გადასახტომად გამოიყენეთ ეს ბლოკი:
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          არ დაგავიწყდეთ შეცვალოთ გადახტომის მანძილი!
      courseC_artist_loops4a_2018_authored_hint:
        courseC_artist_loops4a_a: |-
          წინ გადასახტომად გამოიყენეთ ეს ბლოკი:
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          არ დაგავიწყდეთ შეცვალოთ გადახტომის მანძილი!
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          სცადეთ `გადახტომის` ბლოკის გამოყენება, მხატვრის ცენტრისკენ გადასაადგილებლად:

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops5a_authored_hint:
        courseC_artist_loops5a_a: გამოიყენეთ ჩამოსაშლელი სიები `სტიკერის დახატვის`
          ბლოკებზე, რათა შეცვალოთ სურათები.
      courseC_artist_loops5a_2018_authored_hint:
        courseC_artist_loops5a_a: გამოიყენეთ ჩამოსაშლელი სიები `სტიკერის დახატვის`
          ბლოკებზე, რათა შეცვალოთ სურათები.
      courseC_artist_loops5b_authored_hint:
        courseC_artist_loops5b_a: |-
          გამოიყენეთ ეს ბლოკი, რათა განსაზღვროთ თქვენი ხაზების ნიმუში:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: ზემოთ განთავსებული დიზაინის მსგავსის ასაწყობად უნდა
          გადაადგილდეთ უკან იმდენივე ერთეულით, რამდენითაც წინ გადაადგილდებით.
      courseC_artist_loops5b_2018_authored_hint:
        courseC_artist_loops5b_a: |-
          გამოიყენეთ ეს ბლოკი, რათა განსაზღვროთ თქვენი ხაზების ნიმუში:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: ზემოთ განთავსებული დიზაინის მსგავსის ასაწყობად უნდა
          გადაადგილდეთ უკან იმდენივე ერთეულით, რამდენითაც წინ გადაადგილდებით.
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: |
          სცადეთ სამკუთხედი ყვავილი:
          <img src="https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png" width="150px" />

          ან პატარა მწვანე ხოჭო:
          <img src="https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png" width="150px" />
      courseC_artist_loops6a_authored_hint:
        courseC_artist_loops6a_a: ზემოთ განთავსებული დიზაინის მსგავსის ასაწყობად,
          სტიკერებს შორის გადახტით წინ 75 პიქსელზე ნაკლებით.
      courseC_artist_loops6a_2018_authored_hint:
        courseC_artist_loops6a_a: ზემოთ განთავსებული დიზაინის მსგავსის ასაწყობად,
          სტიკერებს შორის გადახტით წინ 75 პიქსელზე ნაკლებით.
      courseC_artist_loops7a_authored_hint:
        courseC_artist_loops7a_a: |-
          წრე შეიცავს 360 გრადუსს. გაამრავლეთ მობრუნების გრადუსი გამეორებების რაოდენობაზე. უდრის თუ არა პასუხი 360-ს?
          შეამოწმეთ შემოთავაზებული მობრუნებები, რათა ნახოთ, როგორ მუშაობს ეს ნიმუში!
      courseC_artist_loops7a_2018_authored_hint:
        courseC_artist_loops7a_a: |-
          წრე შეიცავს 360 გრადუსს. გაამრავლეთ მობრუნების გრადუსი გამეორებების რაოდენობაზე. უდრის თუ არა პასუხი 360-ს?
          შეამოწმეთ შემოთავაზებული მობრუნებები, რათა ნახოთ, როგორ მუშაობს ეს ნიმუში!
      courseC_artist_loopsPre1a_authored_hint:
        courseC_artist_loopsPre1a_a: არ დაგავიწყდეთ თქვენს ციკლში `მობრუნების` ბლოკის
          მოთავსება.
        courseC_artist_loopsPre1a_b: 'თქვენს `გამეორების` ციკლში 3 ბლოკი უნდა იყოს:
          `გადახტი 200-თ და ჩახტი 200-თ`, `გადაადგილდი წინ 50 პიქსელით` და `შეტრიალდი
          მარცნივ 60 გრადუსით`.'
      courseC_artist_loopsPre1a_2018_authored_hint:
        courseC_artist_loopsPre1a_a: არ დაგავიწყდეთ თქვენს ციკლში `მობრუნების` ბლოკის
          მოთავსება.
        courseC_artist_loopsPre1a_b: 'თქვენს `გამეორების` ციკლში 3 ბლოკი უნდა იყოს:
          `გადახტი 200-თ და ჩახტი 200-თ`, `გადაადგილდი წინ 50 პიქსელით` და `შეტრიალდი
          მარცნივ 60 გრადუსით`.'
      courseC_artist_loopsPrePre1a_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          პირველი ბლოკი, რომელიც დაგჭირდებათ არის:

          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          50 პიქსელით წინ გადასაადგილებლად გამოიყენეთ ეს ბლოკი

          ![](https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_loopsPrePre1a_2018_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          პირველი ბლოკი, რომელიც დაგჭირდებათ არის:

          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          50 პიქსელით წინ გადასაადგილებლად გამოიყენეთ ეს ბლოკი

          ![](https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_prog1_authored_hint: []
      courseC_artist_prog1_2018_authored_hint: []
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: If you use the block to have me `move forward by 100
          pixels`, I will draw a line automatically.
        courseC_artist_prog2_b: Having trouble turning the corner? Use the `turn right
          90 degrees` block.
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: '*"If you use the <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>
          block, I will draw a line."*'
        courseC_artist_prog2_b: Having trouble turning the corner? Use the <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml> block.
      courseC_artist_prog3_authored_hint:
        courseC_artist_prog3_a: |-
          To create this window, just draw a square with 100 pixel sides.

          - move forward
          - turn
          - move forward
          - turn
          - move forward
          - turn
          - move forward
        courseC_artist_prog3_b: გინდათ შეამოკლოთ კოდი? სცადეთ ამ თავსატეხში ციკლის
          გამოყენება.
      courseC_artist_prog3_2018_authored_hint:
        courseC_artist_prog3_a: |-
          To create this window, just draw a square with 100 pixel sides.
          - move forward
          - turn
          - move forward
          - turn
          - move forward
          - turn
          - move forward
        courseC_artist_prog3_b: გინდათ შეამოკლოთ კოდი? სცადეთ ამ თავსატეხში ციკლის
          გამოყენება.
      courseC_artist_prog4_authored_hint:
        courseC_artist_prog4_a: To finish the rocket, just draw the triangle on top!
        courseC_artist_prog4_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseC_artist_prog4_c: |-
          სამკუთხედის დასახატად, თქვენ მოგიწევთ:
          - გადაადგილდეთ წინ
          - მობრუნდეთ მარცხნივ 120 გრადუსით
          - გადაადგილდეთ წინ
          - მობრუნდეთ მარცხნივ 120 გრადუსით
          - გადაადგილდეთ წინ
      courseC_artist_prog4_2018_authored_hint:
        courseC_artist_prog4_a: To finish the rocket, just draw the triangle on top!
        courseC_artist_prog4_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseC_artist_prog4_c: |-
          სამკუთხედის დასახატად, თქვენ მოგიწევთ:
          - გადაადგილდეთ წინ
          - მობრუნდეთ მარცხნივ 120 გრადუსით
          - გადაადგილდეთ წინ
          - მობრუნდეთ მარცხნივ 120 გრადუსით
          - გადაადგილდეთ წინ
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_a: Use the "Step" button to run your code line by line
          to see where things go wrong.
        courseC_artist_prog5_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
        courseC_artist_prog5_c: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseC_artist_prog5_d: ყოველი მობრუნების კუთხე უნდა იყოს 90 გრადუსი და უნდა
          იყოს მიმართული მარჯვნისაკენ.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_a: Slow the slider down all the way until you can run
          your code line-by-line to see where things go wrong.
        courseC_artist_prog5_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
        courseC_artist_prog5_c: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseC_artist_prog5_d: ყოველი მობრუნების კუთხე უნდა იყოს 90 გრადუსი და უნდა
          იყოს მიმართული მარჯვნისაკენ.
      courseC_artist_prog6_authored_hint:
        courseC_artist_prog6_a: The artist is already facing the correct way to draw
          his first line.
        courseC_artist_prog6_b: This diamond is really just a square that's standing
          on its corner.
        courseC_artist_prog6_c: Since this diamond is also a square, be sure to turn
          90 degrees at the corners.
      courseC_artist_prog6_2018_authored_hint:
        courseC_artist_prog6_a: The artist is already facing the correct way to draw
          his first line.
        courseC_artist_prog6_b: This diamond is really just a square that's standing
          on its corner.
        courseC_artist_prog6_c: Since this diamond is also a square, be sure to turn
          90 degrees at the corners.
      courseC_artist_prog6_predict1_authored_hint: []
      courseC_artist_prog6_predict1_2018_authored_hint: []
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_a: Every angle is either 45 or 90 degrees.
        courseC_artist_prog7_b: "Does it work at the first step?  \nHow about the
          second?  \nWhere does it go wrong?"
        courseC_artist_prog7_c: თქვენ შეგიძლიათ `მობრუნების` ბლოკების ჩამოსაშლელი
          სიების გამოყენება, რათა გაიგოთ, თუ რომელი კუთხე გჭირდებათ!
        courseC_artist_prog7_d: |-
          თქვენ დაგჭირდებათ:
          - წინ გადაადგილდება
          - 45 გრადუსით მარჯვნივ მობრუნება
          - წინ გადაადგილება
          - 90 გრადუსით მარჯვნივ მობრუნება
          - წინ გადაადგილება
          - 45 გრადუსით მარჯვნივ მობრუნება

          გაიმეორეთ ეს ნიმუში 2-ჯერ!
        courseC_artist_prog7_e: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_a: Every angle is either 45 or 90 degrees.
        courseC_artist_prog7_b: "Does it work at the first step?  \nHow about the
          second?  \nWhere does it go wrong?"
        courseC_artist_prog7_c: თქვენ შეგიძლიათ `მობრუნების` ბლოკების ჩამოსაშლელი
          სიების გამოყენება, რათა გაიგოთ, თუ რომელი კუთხე გჭირდებათ!
        courseC_artist_prog7_d: |-
          თქვენ დაგჭირდებათ:
          - წინ გადაადგილდება
          - 45 გრადუსით მარჯვნივ მობრუნება
          - წინ გადაადგილება
          - 90 გრადუსით მარჯვნივ მობრუნება
          - წინ გადაადგილება
          - 45 გრადუსით მარჯვნივ მობრუნება

          გაიმეორეთ ეს ნიმუში 2-ჯერ!
        courseC_artist_prog7_e: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseC_artist_prog8_authored_hint: []
      courseC_artist_prog8_2018_authored_hint: []
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: გამოიყენეთ 60 გრადუსიანი კუთხეები სახურავის ასაშენებლად.
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: თქვენ შეგიძლიათ ამის დახატვა შუაში ხაზგასმული
          მართკუთხედის ან ორი განსხვავებული კვადრატის სახით!
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: თქვენ შეგიძლიათ ამის დახატვა შუაში ხაზგასმული
          მართკუთხედის ან ორი განსხვავებული კვადრატის სახით!
      courseC_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "თქვენ შეგიძლიათ განალაგოთ ბრძანებები `გამეორების`
          ციკლში, რათა მრავალჯერ გაიმეოროთ ისინი. სცადეთ!\n<xml>\n  \n          <block
          type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">მოძრაობაწინ</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      courseC_artist_prog_challenge2a_authored_hint:
        courseC_artist_prog_challenge2_a: After you draw the first line, try turning
          left before you draw your second line.
        courseC_artist_prog_challenge2_b: After you draw the second line, try turning
          right before you draw your third line.
      courseC_artist_prog_challenge2a_2018_authored_hint:
        courseC_artist_prog_challenge2_a: After you draw the first line, turn left
          before you draw your second line.
        courseC_artist_prog_challenge2_b: After you draw the second line, turn right
          before you draw your third line.
      courseC_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: გამოიყენეთ ციკლები, რათა გეყოთ `შეგროვების`
          ბლოკები!
      courseC_collector_loops_challenge2_2018_authored_hint:
        courseC_maze_loops_challenge2_b: გამოიყენეთ ციკლები, რათა გეყოთ `შეგროვების`
          ბლოკები!
      courseC_collector_prog1_authored_hint:
        courseC_collector_prog1_a: როდესაც განძის შემცველ ადგილზე დგახართ, გამოიყენეთ
          <xml><block type="collector_collect"/></xml> ბლოკი, რათა აიღოთ ის.
        courseC_collector_prog1_b: უმარტივესი ამონახსნი იქნებოდა ერთხელ გადაადგილება
          წინ, შემდეგ კი განძის შეგროვება.
      courseC_collector_prog1_2018_authored_hint:
        courseC_collector_prog1_a: როდესაც განძის შემცველ ადგილზე დგახართ, გამოიყენეთ
          <xml><block type="collector_collect"/></xml> ბლოკი, რათა აიღოთ ის.
        courseC_collector_prog1_b: უმარტივესი ამონახსნი იქნებოდა ერთხელ გადაადგილება
          წინ, შემდეგ კი განძის შეგროვება.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_a: You can use four `move forward` blocks or use the
          `repeat 4 times` block to make your program shorter.
        courseC_collector_prog2_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_a: You can use four <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> blocks or use the <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          block to make your program shorter.
        courseC_collector_prog2_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseC_collector_prog3_authored_hint:
        courseC_collector_prog3_a: The program will only run the blocks that are connected
          to the `when run` block.
        courseC_collector_prog3_b: Try using the "Step" button to run your code one
          line at a time.  Do you see where the code goes wrong?
        courseC_collector_prog3_c: თუ გიჭირთ ამ თავსატეხისათვის ამოხსნა, სცადეთ მოძრაობები
          ფურცელზე დაწეროთ.
      courseC_collector_prog3_2018_authored_hint:
        courseC_collector_prog3_a: The program will only run the blocks that are connected
          to the <xml><block type="when_run"/></xml> block.
        courseC_collector_prog3_b: Try using the "Step" button to run your code one
          line at a time.  Do you see where the code goes wrong?
        courseC_collector_prog3_c: თუ გიჭირთ ამ თავსატეხისათვის ამოხსნა, სცადეთ მოძრაობები
          ფურცელზე დაწეროთ.
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_a: თუ გაიჭედეთ, სცადეთ ნაბიჯების ქაღალდზე ჩაწერა.
        courseC_collector_prog4_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
        courseC_collector_prog4_c: Try this option for a path.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_a: თუ გაიჭედეთ, სცადეთ ნაბიჯების ქაღალდზე ჩაწერა.
        courseC_collector_prog4_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
        courseC_collector_prog4_c: Try this option for a path.
      courseC_collector_prog5_authored_hint:
        courseC_collector_prog5_a: "Where does this program go wrong?\n\n- Does it
          work at the first step?\n- Does it work at the second step? \n- Where do
          things go wrong?"
        courseC_collector_prog5_b: If you fixed one bug and the program still doesn't
          work, use the steps above to find more bugs.
        courseC_collector_prog5_c: თუ გაიჭედეთ, სცადეთ ნაბიჯების ქაღალდზე ჩაწერა.
        courseC_collector_prog5_d: Follow the path to collect the treasure.
      courseC_collector_prog5_2018_authored_hint:
        courseC_collector_prog5_a: "\"Does it work at the first step?\nDoes it work
          at the second step? \nWhere do things go wrong?\""
        courseC_collector_prog5_b: If you fixed one bug and the program still doesn't
          work, use the steps above to find more bugs.
        courseC_collector_prog5_c: თუ გაიჭედეთ, სცადეთ ნაბიჯების ქაღალდზე ჩაწერა.
        courseC_collector_prog5_d: Follow the path to collect the treasure.
      courseC_collector_prog6_authored_hint:
        courseC_collector_prog6_a: "Can you figure out what is going wrong?  \n\nTry
          using the \"Step\" button to find errors by running your code line by line."
        courseC_collector_prog6_b: მთლიანი განძის შეგროვების მრავალი გზა არსებობს.
          არ შეგეშინდეთ თუ უმოკლესი ამონახსნის საპოვნელად ერთზე მეტი გზის ცდა მოგიწევთ.
      courseC_collector_prog6_2018_authored_hint:
        courseC_collector_prog6_a: "Can you figure out what is going wrong?  \n\nTry
          using the \"Step\" button to find errors by running your code line by line."
        courseC_collector_prog6_b: მთლიანი განძის შეგროვების მრავალი გზა არსებობს.
          არ შეგეშინდეთ თუ უმოკლესი ამონახსნის საპოვნელად ერთზე მეტი გზის ცდა მოგიწევთ.
      courseC_collector_prog7_authored_hint:
        courseC_collector_prog7_a: 'There is already a lot of great code in the workspace.  You
          don''t need to delete any of it to solve this puzzle.  '
        courseC_collector_prog7_b: Don't see the block you need to get the adventurer
          moving in the right direction?  Pull one from the toolbox.
        courseC_collector_prog7_c: Having trouble seeing a route to collect all of
          the treasure?  Try this path!
      courseC_collector_prog7_2018_authored_hint:
        courseC_collector_prog7_a: 'There is already a lot of great code in the workspace.  You
          don''t need to delete any of it to solve this puzzle.  '
        courseC_collector_prog7_b: Don't see the block you need to get the adventurer
          moving in the right direction?  Pull one from the toolbox.
        courseC_collector_prog7_c: Having trouble seeing a route to collect all of
          the treasure?  Try this path!
      courseC_collector_prog8_authored_hint: []
      courseC_collector_prog8_2018_authored_hint: []
      courseC_collector_prog9_authored_hint: []
      courseC_collector_prog9_2018_authored_hint: []
      courseC_collector_progA_authored_hint:
        courseC_collector_progA_a: Try using the "Step" button to go through your
          code line by line.
      courseC_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: გამოიყენეთ `შეგროვების` ბრძანება უფრო
          ხშირად, რათა შეაგროვოთ დამატებითი განძი.
      courseC_collector_prog_challenge1_2018_authored_hint:
        courseC_collector_prog_challenge1_a: გამოიყენეთ `შეგროვების` ბრძანება უფრო
          ხშირად, რათა შეაგროვოთ დამატებითი განძი.
      courseC_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: გამოიყენეთ `შეგროვების` ბრძანება უფრო
          ხშირად, რათა შეაგროვოთ დამატებითი განძი.
        courseC_collector_prog_challenge1_b: Lost your way?  Try this path to solve
          the puzzle!
      courseC_collector_prog_challenge2_2018_authored_hint:
        courseC_collector_prog_challenge1_a: გამოიყენეთ `შეგროვების` ბრძანება უფრო
          ხშირად, რათა შეაგროვოთ დამატებითი განძი.
        courseC_collector_prog_challenge1_b: Lost your way?  Try this path to solve
          the puzzle!
      courseC_external_events_authored_hint: []
      courseC_flappy_events1_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2_authored_hint:
        courseC_flappy_events2_a: 'ბლოკს, რომელიც გჭირდებათ, ჰქვია `სისწრაფის განსაზღვრა`. '
        courseC_flappy_events2_b: დააკავშირეთ `განსაზღვრე სისწრაფე` ბლოკი `გაშვებისას`
          ბლოკს, რათა ამოხსნათ ეს თავსატეხი.
      courseC_flappy_events2_2018_authored_hint:
        courseC_flappy_events2_a: 'ბლოკს, რომელიც გჭირდებათ, ჰქვია `სისწრაფის განსაზღვრა`. '
        courseC_flappy_events2_b: დააკავშირეთ `განსაზღვრე სისწრაფე` ბლოკი `გაშვებისას`
          ბლოკს, რათა ამოხსნათ ეს თავსატეხი.
      courseC_flappy_events3_authored_hint:
        courseC_flappy_events3_a: თუ რამე არასწორად მუშაობს, დარწმუნდით, რომ თქვენი
          ბლოკები სწორ მოვლენებს უკავშირდება სამუშაო სივრცეში.
      courseC_flappy_events3_2018_authored_hint:
        courseC_flappy_events3_a: თუ რამე არასწორად მუშაობს, დარწმუნდით, რომ თქვენი
          ბლოკები სწორ მოვლენებს უკავშირდება სამუშაო სივრცეში.
      courseC_flappy_events4_authored_hint:
        courseC_flappy_events4_a: დააკავშირეთ `თამაშის დასრულების` ბლოკი `დაბრკოლებასთან
          დაჯახების` ბლოკს, რათა ამოხსნათ ეს თავსატეხი.
      courseC_flappy_events4_2018_authored_hint:
        courseC_flappy_events4_a: დააკავშირეთ `თამაშის დასრულების` ბლოკი `დაბრკოლებასთან
          დაჯახების` ბლოკს, რათა ამოხსნათ ეს თავსატეხი.
      courseC_flappy_events5_authored_hint:
        courseC_flappy_events5_a: თქვენ მოგიწევთ `ქულის მიღების` ბლოკის გამოყენება,
          რათა დაასრულოთ ეს დონე.
      courseC_flappy_events5_2018_authored_hint:
        courseC_flappy_events5_a: თქვენ მოგიწევთ `ქულის მიღების` ბლოკის გამოყენება,
          რათა დაასრულოთ ეს დონე.
      courseC_flappy_events6_authored_hint:
        courseC_flappy_events6_a: სცადეთ `აქნიე ____ რაოდენობით` ბლოკის დაკავშირება
          `როცა დააწკაპებთ` მოვლენასთან.
      courseC_flappy_events6_2018_authored_hint:
        courseC_flappy_events6_a: სცადეთ `აქნიე ____ რაოდენობით` ბლოკის დაკავშირება
          `როცა დააწკაპებთ` მოვლენასთან.
      courseC_flappy_events7_authored_hint:
        courseC_flappy_events7_a: 'თქვენ შეგიძლიათ ფონის შეცვლა `განსაზღვრე სცენა`
          ბლოკის გამოყენებით. '
      courseC_flappy_events7_2018_authored_hint:
        courseC_flappy_events7_a: 'თქვენ შეგიძლიათ ფონის შეცვლა `განსაზღვრე სცენა`
          ბლოკის გამოყენებით. '
      courseC_flappy_events8_authored_hint:
        courseC_flappy_events8_a: სცადეთ მეორე `სცენის განსაზღვრის` ბლოკის დაკავშირება,
          `დაბრკოლების გავლისას` მოვლენასთან, რათა დაასრულოთ ეს დონე.
      courseC_flappy_events8_2018_authored_hint:
        courseC_flappy_events8_a: სცადეთ მეორე `სცენის განსაზღვრის` ბლოკის დაკავშირება,
          `დაბრკოლების გავლისას` მოვლენასთან, რათა დაასრულოთ ეს დონე.
      courseC_flappy_events9_authored_hint:
        courseC_flappy_events9_a: დააკავშირეთ `განსაზღვრე ქულა როგორ 0` ბლოკი, `როდესაც
          დაეჯახები დაბრკოლებას` მოვლენას, რათა დაასრულოთ ეს დონე.
      courseC_flappy_events9_2018_authored_hint:
        courseC_flappy_events9_a: დააკავშირეთ `განსაზღვრე ქულა როგორ 0` ბლოკი, `როდესაც
          დაეჯახები დაბრკოლებას` მოვლენას, რათა დაასრულოთ ეს დონე.
      courseC_flappy_events_template_authored_hint: []
      courseC_flappy_events_template_2018_authored_hint: []
      courseC_harvester_loops1_authored_hint:
        courseC_harvester_loops1_a: როდესაც მიაღწევთ გოგრას, გამოიყენეთ <xml><block
          type="harvester_pumpkin"/></xml> ბლოკი მის შესაგროვებლად.
        courseC_harvester_loops1_b: თქვენ შეგიძლიათ ციკლის გამოყენება <xml><block
          type="harvester_pumpkin"/></xml> ბლოკთან ერთად, რათა შეაგროვოთ კვადრატიდან
          ერთზე მეტი გოგრა.
      courseC_harvester_loops10_authored_hint: []
      courseC_harvester_loops10_2018_authored_hint: []
      courseC_harvester_loops11_authored_hint: []
      courseC_harvester_loops11_2018_authored_hint: []
      courseC_harvester_loops1_2018_authored_hint:
        courseC_harvester_loops1_a: როდესაც მიაღწევთ გოგრას, გამოიყენეთ <xml><block
          type="harvester_pumpkin"/></xml> ბლოკი მის შესაგროვებლად.
        courseC_harvester_loops1_b: თქვენ შეგიძლიათ ციკლის გამოყენება <xml><block
          type="harvester_pumpkin"/></xml> ბლოკთან ერთად, რათა შეაგროვოთ კვადრატიდან
          ერთზე მეტი გოგრა.
      courseC_harvester_loops2_authored_hint:
        courseC_harvester_loops2_a: თუ გაიჭედებით, სცადეთ ნაბიჯების ფურცელზე ჩანიშვნა
          და განმეორებადი კოდის მოძებნა.
        courseC_harvester_loops2_b: პირველი ციკლის შემდეგ თქვენ დაგჭირდებათ კიდევ
          ერთი `გამეორების` ციკლის გამოყენება.
        courseC_harvester_loops2_c: ერთი ციკლი გაიმეორებს `წინ მოძრაობის` ბრძანებას,
          ხოლო მეორე გაიმეორებს `გოგრის შეგროვების` ბრძანებას.
      courseC_harvester_loops2_2018_authored_hint:
        courseC_harvester_loops2_a: თუ გაიჭედებით, სცადეთ ნაბიჯების ფურცელზე ჩანიშვნა
          და განმეორებადი კოდის მოძებნა.
        courseC_harvester_loops2_b: პირველი ციკლის შემდეგ თქვენ დაგჭირდებათ კიდევ
          ერთი `გამეორების` ციკლის გამოყენება.
        courseC_harvester_loops2_c: ერთი ციკლი გაიმეორებს `წინ მოძრაობის` ბრძანებას,
          ხოლო მეორე გაიმეორებს `გოგრის შეგროვების` ბრძანებას.
      courseC_harvester_loops3_authored_hint:
        courseC_harvester_loops3_a: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
        courseC_harvester_loops3_b: პირველი გოგრებისთვის წინა თავსატეხის მსგავსი კოდის
          გამოყენება შეგიძლიათ. სად უნდა შეუხვიოთ ამის შემდეგ?
        courseC_harvester_loops3_c: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseC_harvester_loops3_2018_authored_hint:
        courseC_harvester_loops3_a: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
        courseC_harvester_loops3_b: პირველი გოგრებისთვის წინა თავსატეხის მსგავსი კოდის
          გამოყენება შეგიძლიათ. სად უნდა შეუხვიოთ ამის შემდეგ?
        courseC_harvester_loops3_c: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseC_harvester_loops4_authored_hint:
        courseC_harvester_loops4_a: გამოიყენეთ ახალი - `შეაგროვე სიმინდი` ბლოკი, რათა
          შეაგროვოთ სიმინდი.
        courseC_harvester_loops4_b: თქვენ შეგიძლიათ გაამრავლოთ გამეორების ციკლები
          კოდში, ზოგი გამოიყენოთ სიმინდის შესაგროვებლად, ხოლო ზოგი გოგრების შესაგროვებლად.
        courseC_harvester_loops4_c: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseC_harvester_loops4_2018_authored_hint:
        courseC_harvester_loops4_a: გამოიყენეთ ახალი - `შეაგროვე სიმინდი` ბლოკი, რათა
          შეაგროვოთ სიმინდი.
        courseC_harvester_loops4_b: თქვენ შეგიძლიათ გაამრავლოთ გამეორების ციკლები
          კოდში, ზოგი გამოიყენოთ სიმინდის შესაგროვებლად, ხოლო ზოგი გოგრების შესაგროვებლად.
        courseC_harvester_loops4_c: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseC_harvester_loops5_authored_hint:
        courseC_harvester_loops5_a: თუ გაიჭედებით, სცადეთ მთლიანი პროგრამის დახატვა
          და განმეორებადი კოდის მოძებნა.
        courseC_harvester_loops5_b: გეცნობათ თუ არა ეს კიბის საფეხური წინა თავსატეხებიდან?
          მოძრაობები იგივე უნდა იყოს, უბრალოდ არ დაგავიწყდეთ გზაში მარცხვლეულის შეგროვება.
      courseC_harvester_loops5_2018_authored_hint:
        courseC_harvester_loops5_a: თუ გაიჭედებით, სცადეთ მთლიანი პროგრამის დახატვა
          და განმეორებადი კოდის მოძებნა.
        courseC_harvester_loops5_b: გეცნობათ თუ არა ეს კიბის საფეხური წინა თავსატეხებიდან?
          მოძრაობები იგივე უნდა იყოს, უბრალოდ არ დაგავიწყდეთ გზაში მარცხვლეულის შეგროვება.
      courseC_harvester_loops6_authored_hint:
        courseC_harvester_loops6_a: გახსოვდეთ, რომ ერთ გამეორების ციკლში რამდენიმე
          ბლოკის განლაგება შეგიძლიათ.
        courseC_harvester_loops6_b: არ დაგავიწყდეთ მობრუნება სიმინდის მწკრივის ბოლოს.
      courseC_harvester_loops6_2018_authored_hint:
        courseC_harvester_loops6_a: გახსოვდეთ, რომ ერთ გამეორების ციკლში რამდენიმე
          ბლოკის განლაგება შეგიძლიათ.
        courseC_harvester_loops6_b: არ დაგავიწყდეთ მობრუნება სიმინდის მწკრივის ბოლოს.
      courseC_harvester_loops7_authored_hint:
        courseC_harvester_loops7_a: 'ამ თავსატეხის ამოხსნა ორი გზით შეგიძლიათ: ჯერ
          შეაგროვოთ ან სიმინდი ან გოგრები.'
        courseC_harvester_loops7_b: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ რამდენიმე
          `გამეორების` ციკლი.
      courseC_harvester_loops7_2018_authored_hint:
        courseC_harvester_loops7_a: 'ამ თავსატეხის ამოხსნა ორი გზით შეგიძლიათ: ჯერ
          შეაგროვოთ ან სიმინდი ან გოგრები.'
        courseC_harvester_loops7_b: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ რამდენიმე
          `გამეორების` ციკლი.
      courseC_harvester_loops8_authored_hint:
        courseC_harvester_loops8_a: გეცნობათ თუ არა ეს კიბის საფეხური წინა თავსატეხებიდან?
          მოძრაობები იგივე უნდა იყოს, უბრალოდ არ დაგავიწყდეთ გზაში მარცხვლეულის შეგროვება.
        courseC_harvester_loops8_b: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseC_harvester_loops8_2018_authored_hint:
        courseC_harvester_loops8_a: გეცნობათ თუ არა ეს კიბის საფეხური წინა თავსატეხებიდან?
          მოძრაობები იგივე უნდა იყოს, უბრალოდ არ დაგავიწყდეთ გზაში მარცხვლეულის შეგროვება.
        courseC_harvester_loops8_b: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseC_harvester_loops9_authored_hint: []
      courseC_harvester_loops9_2018_authored_hint: []
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: ციკლების გარეშე ამის შესრულება ძალიან
          რთული იქნება!
        courseC_harvester_loops_challenge1_b: თქვენ შეგიძლიათ გამოიყენოთ `წინ მოძრაობა`
          და `სიმინდის შეგროვება` იმდენჯერ, რამდენჯერაც დაგჭირდებათ, შემდეგ კი შეტრიალდეთ
          მარჯვნივ ყოველ კუთხესთან.
        courseC_harvester_loops_challenge1_c: |-
          სიმინდის შესაგროვებლად საუკეთესო ამონახსნი იყენებს `გამეორების` ბლოკს სხვა `გამეორების` ბლოკის შიგნით. თქვენ შეგიძლიათ ამ ნიმუშის გამოყენება დანარჩენი თავსატეხისთვისაც!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_a: ციკლების გარეშე ამის შესრულება ძალიან
          რთული იქნება!
        courseC_harvester_loops_challenge1_b: თქვენ შეგიძლიათ გამოიყენოთ `წინ მოძრაობა`
          და `სიმინდის შეგროვება` იმდენჯერ, რამდენჯერაც დაგჭირდებათ, შემდეგ კი შეტრიალდეთ
          მარჯვნივ ყოველ კუთხესთან.
        courseC_harvester_loops_challenge1_c: |-
          სიმინდის შესაგროვებლად საუკეთესო ამონახსნი იყენებს `გამეორების` ბლოკს სხვა `გამეორების` ბლოკის შიგნით. თქვენ შეგიძლიათ ამ ნიმუშის გამოყენება დანარჩენი თავსატეხისთვისაც!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_a: ციკლების გარეშე ამის შესრულება ძალიან
          რთული იქნება!
        courseC_harvester_loops_challenge1_b: თქვენ შეგიძლიათ გამოიყენოთ `წინ მოძრაობა`
          და `სიმინდის შეგროვება` იმდენჯერ, რამდენჯერაც დაგჭირდებათ, შემდეგ კი შეტრიალდეთ
          მარჯვნივ ყოველ კუთხესთან.
        courseC_harvester_loops_challenge1_c: |-
          სიმინდის შესაგროვებლად საუკეთესო ამონახსნი იყენებს `გამეორების` ბლოკს სხვა `გამეორების` ბლოკის შიგნით. თქვენ შეგიძლიათ ამ ნიმუშის გამოყენება დანარჩენი თავსატეხისთვისაც!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: ამის ამოხსნის ერთი გზა ტეხილივით გამოიყენება.
          მეორე გზა - სპირალივით! ამგვარ თავსატეხს ბევრი ამონახსნი აქვს. მთავარია,
          არ დანებდე!
        courseC_harvester_loops_challenge2_b: თქვენ შეგიძლიათ გაიმეოროთ "წინ გადაადგილება"
          და "სალათის ფურცლის შეგროვება", იმდენჯერ, რამდენჯერაც დაჭირდებათ, შემდეგ,
          თითოეულ კუთხესთან შეუხვიეთ.
        courseC_harvester_loops_challenge2_c: |
          თავსატეხის მხოლოდ 20 ბლოკით დასასრულებლად, ზიგზაგის ფორმის ფიგურა შეიძლება ორჯერ გამეორდეს!
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          ამ სპირალის ფორმის ფიგურის კოდის დასაწერად 18 ბლოკია საკმარისი!
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_challenge2_2018_authored_hint:
        courseC_harvester_loops_challenge2_a: ამის ამოხსნის ერთი გზა ტეხილივით გამოიყენება.
          მეორე გზა - სპირალივით! ამგვარ თავსატეხს ბევრი ამონახსნი აქვს. მთავარია,
          არ დანებდე!
        courseC_harvester_loops_challenge2_b: თქვენ შეგიძლიათ გაიმეოროთ "წინ გადაადგილება"
          და "სალათის ფურცლის შეგროვება", იმდენჯერ, რამდენჯერაც დაჭირდებათ, შემდეგ,
          თითოეულ კუთხესთან შეუხვიეთ.
        courseC_harvester_loops_challenge2_c: |
          თავსატეხის მხოლოდ 20 ბლოკით დასასრულებლად, ზიგზაგის ფორმის ფიგურა შეიძლება ორჯერ გამეორდეს!
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          ამ სპირალის ფორმის ფიგურის კოდის დასაწერად 18 ბლოკია საკმარისი!
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_forVid_authored_hint: []
      courseC_maze_debugging1_authored_hint:
        courseC_maze_debugging1_a: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging1_b: ამ თავსატეხის დასასრულებლად გჭირდებათ ერთი ბლოკის
          დამატება.
      courseC_maze_debugging1_2018_authored_hint:
        courseC_maze_debugging1_a: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging1_b: ამ თავსატეხის დასასრულებლად გჭირდებათ ერთი ბლოკის
          დამატება.
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_a: There is a lot of valuable code in the workspace.  Don't
          just delete it all and start over!
        courseC_maze_debugging2_b: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging2_c: Can't figure out what's wrong? Try running the
          code a couple of times to see what happens.
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_a: There is a lot of valuable code in the workspace.  Don't
          just delete it all and start over!
        courseC_maze_debugging2_b: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging2_c: Can't figure out what's wrong? Try running the
          code a couple of times to see what happens.
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_a: |-
          To remove a block, pull the other blocks aside to get to the one you're trying to delete, then drag that one off to the trash.

          Don't forget to put your other blocks back!

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Can't figure out what's wrong? Try running the
          code a couple of times to see what happens.
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_a: |-
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.

          Drag the block you want to delete back to the toolbox.

          Finally, put your other blocks back where they belong.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Can't figure out what's wrong? Try running the
          code a couple of times to see what happens.
      courseC_maze_debugging4_authored_hint:
        courseC_maze_debugging4_a: Use the "Step" button to run through the instructions
          one at a time.  Does that help you find the line where things go wrong?
        courseC_maze_debugging4_b: ერთ-ერთი ბრუნს ციყვი მიჰყავს მცდარი მიმართულებით,
          შეგიძლიათ გამოარკვიოთ, რომელია ეს ბრუნი?
      courseC_maze_debugging4_2018_authored_hint:
        courseC_maze_debugging4_a: Use the "Step" button to run through the instructions
          one at a time.  Does that help you find the line where things go wrong?
        courseC_maze_debugging4_b: ერთ-ერთი ბრუნს ციყვი მიჰყავს მცდარი მიმართულებით,
          შეგიძლიათ გამოარკვიოთ, რომელია ეს ბრუნი?
      courseC_maze_debugging5_authored_hint:
        courseC_maze_debugging5_a: "There are lots of helpful blocks in the workspace
          already.  Don't delete them all! \n\nUse the \"Step\" button to go through
          and figure out where the code goes wrong."
        courseC_maze_debugging5_b: Try saying what Skrat should do out loud.  Is it
          the same as the code in the workspace?  What goes wrong?
      courseC_maze_debugging5_2018_authored_hint:
        courseC_maze_debugging5_a: "There are lots of helpful blocks in the workspace
          already.  Don't delete them all! \n\nUse the \"Step\" button to go through
          and figure out where the code goes wrong."
        courseC_maze_debugging5_b: Try saying what Scrat should do out loud.  Is it
          the same as the code in the workspace?  What goes wrong?
      courseC_maze_debugging6_authored_hint:
        courseC_maze_debugging6_a: |-
          - What is Skrat supposed to do?
          - What does Skrat do?
          - What does that tell you?
        courseC_maze_debugging6_b: |-
          კოდში პირველი დეფექტის პოვნისა და არმოფხვრის შემდეგ, გააგრძელეთ კოდში შეცდომების ძიებისა და მათი აღმოფხვრის პროცესი, იმისათვის რომ იპოვოთ შემდეგი.
          იმეორეთ ეს პროგრამა მანამ სანამ პროგრამა სწორად არ იმუშავებს!
      courseC_maze_debugging6_2018_authored_hint:
        courseC_maze_debugging6_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
        courseC_maze_debugging6_b: |-
          კოდში პირველი დეფექტის პოვნისა და არმოფხვრის შემდეგ, გააგრძელეთ კოდში შეცდომების ძიებისა და მათი აღმოფხვრის პროცესი, იმისათვის რომ იპოვოთ შემდეგი.
          იმეორეთ ეს პროგრამა მანამ სანამ პროგრამა სწორად არ იმუშავებს!
      courseC_maze_debugging7_authored_hint:
        courseC_maze_debugging7_a: |-
          - Does everything work at the first step?
          - How about the second step?
          - Where does it go wrong?
        courseC_maze_debugging7_b: Don't forget to use the "Step" button to run the
          program line by line!
        courseC_maze_debugging7_c: |-
          After you find and fix the first bug, make sure to use the debugging process again to find the next one.

          Repeat the debugging process until the program works!
      courseC_maze_debugging7_2018_authored_hint:
        courseC_maze_debugging7_a: |-
          - Does everything work at the first step?
          - How about the second step?
          - Where does it go wrong?
        courseC_maze_debugging7_b: Don't forget to use the "Step" button to run the
          program line by line!
        courseC_maze_debugging7_c: |-
          After you find and fix the first bug, make sure to use the debugging process again to find the next one.

          Repeat the debugging process until the program works!
      courseC_maze_debugging8_authored_hint:
        courseC_maze_debugging8_a: |-
          - What is Skrat supposed to do?
          - What does Skrat do?
          - What does that tell you?
      courseC_maze_debugging8_predict1_authored_hint: []
      courseC_maze_debugging8_predict1_2018_authored_hint: []
      courseC_maze_debugging9_authored_hint: []
      courseC_maze_debugging9_2018_authored_hint: []
      courseC_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: მარცხნივ თუ მარჯვნივ? ეს თქვენი გადასაწყვეტია!
        courseC_maze_debugging_challenge1_b: ციყვის ბილიკს მართკუთხედის ფორმა აქვს!
          ყოველ ჯერზე ერთიდაიგივენაირად უნდა შეუხვიოთ!
        courseC_maze_debugging_challenge1_c: თუ გაიჭედეთ, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან, ან მოაშოროთ მთელი კოდი და იპოვოთ თქვენი გზა!
      courseC_maze_debugging_challenge1_2018_authored_hint:
        courseC_maze_debugging_challenge1_a: მარცხნივ თუ მარჯვნივ? ეს თქვენი გადასაწყვეტია!
        courseC_maze_debugging_challenge1_b: ციყვის ბილიკს მართკუთხედის ფორმა აქვს!
          ყოველ ჯერზე ერთიდაიგივენაირად უნდა შეუხვიოთ!
        courseC_maze_debugging_challenge1_c: თუ გაიჭედეთ, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან, ან მოაშოროთ მთელი კოდი და იპოვოთ თქვენი გზა!
      courseC_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_b: თუ გაიჭედეთ, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან, ან მოაშოროთ მთელი კოდი და იპოვოთ თქვენი გზა!
        courseC_maze_debugging_challenge2_c: |-
          თუ მხოლოდ "წინ გადაადგილებისა" და 4 მობრუნების უფლება გაქვთ, მაშინ ორი განსხვავებული ბილიკი არსებობს, რომელთაც შეგიძლიათ გაყვეთ. თუ აღმოაჩენთ ბილიკს, რომელზეც ციკლის გამოყენებას შეძლებთ, ეს უკეთესი იქნება!
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_debugging_challenge2_2018_authored_hint:
        courseC_maze_debugging_challenge2_b: თუ გაიჭედეთ, ყოველთვის შეგიძლიათ დაიწყოთ
          თავიდან, ან მოაშოროთ მთელი კოდი და იპოვოთ თქვენი გზა!
        courseC_maze_debugging_challenge2_c: |-
          თუ მხოლოდ "წინ გადაადგილებისა" და 4 მობრუნების უფლება გაქვთ, მაშინ ორი განსხვავებული ბილიკი არსებობს, რომელთაც შეგიძლიათ გაყვეთ. თუ აღმოაჩენთ ბილიკს, რომელზეც ციკლის გამოყენებას შეძლებთ, ეს უკეთესი იქნება!
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_loops10_authored_hint: []
      courseC_maze_loops10_predict2_authored_hint: []
      courseC_maze_loops11_authored_hint: []
      courseC_maze_loops2_authored_hint:
        courseC_maze_loops2_a: You can solve this puzzle with just three blocks, including
          `when run`.
        courseC_maze_loops2_b: Try putting the `move forward` block inside of a `repeat`
          block to create a loop.
        courseC_maze_loops2_c: You need to repeat the `move forward` command 5 times
          to solve this puzzle.
      courseC_maze_loops2_predict1_authored_hint:
        courseC_maze_loops2_a: You can solve this puzzle with just three blocks, including
          `when run`.
        courseC_maze_loops2_b: Try putting the `move forward` block inside of a `repeat`
          block to create a loop.
        courseC_maze_loops2_c: You need to repeat the `move forward` command 5 times
          to solve this puzzle.
      courseC_maze_loops3_authored_hint:
        courseC_maze_loops3_a: This puzzle is very similar to the last one.
        courseC_maze_loops3_b: Use a `repeat 5 times` block to create the loop.
      courseC_maze_loops4_authored_hint:
        courseC_maze_loops4_a: Not all command blocks should be repeated.
        courseC_maze_loops4_b: Use two `repeat` blocks set to different numbers.
        courseC_maze_loops4_c: "`Turn right` once between the two loops."
      courseC_maze_loops5_authored_hint:
        courseC_maze_loops5_a: The best solution uses two `move forward` commands
          and one loop.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_a: If the pattern is hard to see, try coding it all out
          first and see what repeats over and over before you put the loops in.
        courseC_maze_loops6_b: იმისათვის, რომ ბევრი ბლოკი მოათავსოთ ციკლში "გამეორება",
          უბრალოდ გადმოქაჩეთ ციკლი სამუშაო სივრცეში და მასში ჩაყარეთ საწყისი პროგრამის
          ყველა ბლოკი!
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში
          ჩასვამთ, სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
      courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Try thinking about this problem
          in small parts. Take your time. You don't need to solve it on the first
          try!
        courseC_puppy_loops8courseC_maze_loops8_b: The first half of this path is
          similar to the stairs from the last puzzle, but it goes in a different direction.
        courseC_puppy_loops8courseC_maze_loops8_c: "There are different ways to solve
          this. \n\nYou will want to use at least two loops, and repeat a set of actions
          in the first one, then a single `move forward` in the other."
      courseC_maze_loops9_authored_hint:
        courseC_maze_loops9_1: 'If you''re having trouble finding where the code should
          repeat, try writing it down on a piece of paper and looking for a pattern. '
      courseC_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: წარმოიდგინეთ, რომ ეს ბილიკი 3 განსხვავებული
          ნაწილისგან შედგება. თითოეულს აქვს სტრუქტურა, რომელიც შეგიძლიათ გაიმეოროთ.
        courseC_maze_loops_challenge1_b: გამეორების ბლოკებს შორის ციყვის მომდევნო
          მოქმედებისათვის გასამზადებლად, დაგჭირდებათ "მარცხნივ შეხვევა" ან "მარჯვნივ
          შეხვევა".
      courseC_maze_loops_challenge1a_authored_hint:
        courseC_maze_loops_challenge1_a: Think about this path as being two different
          pieces. Each one has a pattern you can repeat.
        courseC_maze_loops_challenge1_b: Can you remember how to use loops to repeat
          a staircase pattern?
      courseC_maze_loops_challenge1a_2018_authored_hint:
        courseC_maze_loops_challenge1_a: Think about this path as being two different
          pieces. Each one has a pattern you can repeat.
        courseC_maze_loops_challenge1_b: Can you remember how to use loops to repeat
          a staircase pattern?
      courseC_maze_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: საწყისი კოდი მშვენივრად მუშაობს - მაშინმ
          როდესაც თითოეულ გროვაში მხოლოდ ერთი განძის ნაწილაკია!
        courseC_maze_loops_challenge2_b: გამოიყენეთ ციკლები, რათა გეყოთ `შეგროვების`
          ბლოკები!
      courseC_maze_programming1_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure
          all three of the blocks have been fully clicked together, then click "Run"
          again.
      courseC_maze_programming1_2018_authored_hint:
        courseC_maze_programming1_0: Make sure all of the blocks have been fully snapped
          together, then click "Run" again.
      courseC_maze_programming2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: If the bird isn't getting to the pig, make sure
          all of the blocks have been fully clicked together, then click "Run" again.
      courseC_maze_programming2_2018_authored_hint:
        courseC_maze_programming2_a: To use a <xml><block type="maze_moveForward"/></xml>
          block, drag it out of the toolbox and snap it to the <xml><block type="when_run"/></xml>
          block.
        courseC_maze_programming2_b: Make sure all of the blocks have been fully snapped
          together, then click "Run" again.
      courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: Try running the code first to see where it goes
          wrong.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          კოდის შუა ნაწილიდან ბლოკის წასაშლელად ყველა სხვა ბლოკი სამუშაო სივრცის სხვა ნაწილას გამოწიეთ.
          ინსტრუმენტების პანელიდან უკან შეწიეთ ბლოკი, რომლის წაშლაც გინდათ.
          საბოლოოდ, ყველა ბლოკი თავის ადგილზე დააბრუნეთ.
      courseC_maze_programming3_2018_authored_hint:
        courseC_maze_programming3_a: Try running the code first to see where it goes
          wrong.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          კოდის შუა ნაწილიდან ბლოკის წასაშლელად ყველა სხვა ბლოკი სამუშაო სივრცის სხვა ნაწილას გამოწიეთ.
          ინსტრუმენტების პანელიდან უკან შეწიეთ ბლოკი, რომლის წაშლაც გინდათ.
          საბოლოოდ, ყველა ბლოკი თავის ადგილზე დააბრუნეთ.
      courseC_maze_programming4_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the pig.
      courseC_maze_programming4_2018_authored_hint:
        courseC_maze_programming4_a: Remember that when you turn, you are turning
          from the *bird's* point of view.  If you turn right, the bird will point
          down.
        courseC_maze_programming4_b: |-
          To follow the path:
          - move forward
          - turn one way
          - move forward
          - turn back the other way
          - move forward
      courseC_maze_programming5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: თავსატეხის დასასრულებლად ჩიტს დასჭირდება შეუხვიოს
          ერთხელ. შეგიზლია გამოარკვიო რომელ გზაზე უნდა შეუხვიოს მან?
        courseC_maze_programming5_c: ამოხსნას ექნება ორი "წინ გადაადგილების" ბლოკი,
          ერთი მოხვევა, და ორით მეტი `წინ გადაადგილების` ბლოკი.
      courseC_maze_programming5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: თავსატეხის დასასრულებლად ჩიტს დასჭირდება შეუხვიოს
          ერთხელ. შეგიზლია გამოარკვიო რომელ გზაზე უნდა შეუხვიოს მან?
        courseC_maze_programming5_c: ამოხსნას ექნება ორი "წინ გადაადგილების" ბლოკი,
          ერთი მოხვევა, და ორით მეტი `წინ გადაადგილების` ბლოკი.
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseC_maze_programming6_b: მიაყოლეთ თითი გზას, რომელი საფეხურები გაიარეთ
          ჩიტიდან ღორამდე?
        courseC_maze_programming6_c: გახსოვდეთ, მას შემდეგ, რაც ჩიტი სახით კედლისკენ
          დადგება, უპირველეს ყოვლისა უნდა შეუხვიოთ.
        courseC_maze_programming6_d: Feel stuck?  Look at this path!
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseC_maze_programming6_b: მიაყოლეთ თითი გზას, რომელი საფეხურები გაიარეთ
          ჩიტიდან ღორამდე?
        courseC_maze_programming6_c: გახსოვდეთ, მას შემდეგ, რაც ჩიტი სახით კედლისკენ
          დადგება, უპირველეს ყოვლისა უნდა შეუხვიოთ.
        courseC_maze_programming6_d: Feel stuck?  Look at this path!
      courseC_maze_programming7_authored_hint:
        courseC_maze_programming7_a: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseC_maze_programming7_b: თუ გიჭირთ ამ თავსატეხისათვის ამოხსნა, სცადეთ
          მოძრაობები ფურცელზე დაწეროთ.
      courseC_maze_programming7_2018_authored_hint:
        courseC_maze_programming7_a: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseC_maze_programming7_b: თუ გიჭირთ ამ თავსატეხისათვის ამოხსნა, სცადეთ
          მოძრაობები ფურცელზე დაწეროთ.
      courseC_maze_programming8_authored_hint:
        courseC_maze_programming8_a: გახსოვდეთ, თუ გაიჭედებით, შეგიძლიათ გამოიყენოთ
          ღილაკი "ნაბიჯი", იმისათვის რომ ნაბიჯ-ნაბიჯ, ხაზ-ხაზად გააკვირდეთ თქვენს
          კოდს.
        courseC_maze_programming8_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseC_maze_programming8_2018_authored_hint:
        courseC_maze_programming8_a: გახსოვდეთ, თუ გაიჭედებით, შეგიძლიათ გამოიყენოთ
          ღილაკი "ნაბიჯი", იმისათვის რომ ნაბიჯ-ნაბიჯ, ხაზ-ხაზად გააკვირდეთ თქვენს
          კოდს.
        courseC_maze_programming8_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseC_maze_programming8_predict1_authored_hint: []
      courseC_maze_programming8_predict1_2018_authored_hint: []
      courseC_maze_programming9_authored_hint: []
      courseC_maze_programming9_2018_authored_hint: []
      courseC_maze_programming_challenge1_authored_hint:
        courseC_maze_programming_challenge1_a: გოჭთან მრავალი მისასვლელი გზა არსებობს.
          გააყოლეთ თითი გზის საპოვნელად, შემდეგ კი დაწერეთ შესაბამისი პროგრამა!
      courseC_maze_programming_challenge1_2018_authored_hint:
        courseC_maze_programming_challenge1_a: გოჭთან მრავალი მისასვლელი გზა არსებობს.
          გააყოლეთ თითი გზის საპოვნელად, შემდეგ კი დაწერეთ შესაბამისი პროგრამა!
      courseC_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "*თუ უკან გამაგზავნით, გამოიჩინეთ სიფრთხილე
          და დარწმუნდით, რომ სწორად შევტრიალდები!*"
        courseC_maze_programming_challenge2_b: |-
          უმოკლესი ამონახსნი იყენებს მხოლოდ 5 ბლოკს, მაგრამ მათ შორის ამ ბლოკს:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018_authored_hint:
        courseC_maze_programming_challenge2_a: "*თუ უკან გამაგზავნით, გამოიჩინეთ სიფრთხილე
          და დარწმუნდით, რომ სწორად შევტრიალდები!*"
        courseC_maze_programming_challenge2_b: |-
          უმოკლესი ამონახსნი იყენებს მხოლოდ 5 ბლოკს, მაგრამ მათ შორის ამ ბლოკს:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_playLab_embedded_authored_hint: []
      courseC_puppy_loops10_authored_hint:
        courseC_puppy_loops9_1: I need to move two or three time between each turn.
      courseC_puppy_loops11_authored_hint: []
      courseC_puppy_loops8_authored_hint:
        2-3_Maze_Loops_17_a: Try thinking about this problem in small parts. Take
          your time. You don't need to solve it on the first try!
        2-3_Maze_Loops_17_b: The first half of this path is similar to the stair step
          from the last puzzle, but it goes a different direction.
        courseC_puppy_loops8_c: There are different ways to solve this. You will want
          to use at least two loops, and repeat either a set of actions or a single
          movement.
      courseC_puppy_loops8courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Try thinking about this problem
          in small parts. Take your time. You don't need to solve it on the first
          try!
        courseC_puppy_loops8courseC_maze_loops8_b: The first half of this path is
          similar to the stairs from the last puzzle, but it goes in a different direction.
        courseC_puppy_loops8courseC_maze_loops8_c: "There are different ways to solve
          this. \n\nYou will want to use at least two loops, and repeat a set of actions
          in the first one, then a single `move forward` in the other."
      courseC_puppy_loops9_authored_hint:
        courseC_puppy_loops9_1: If you repeat the first few actions, you can get me
          to the pig with just four more blocks!
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_a: როდესაც BB-8 ზედ გადაუვლის ჯართს, ის მას ავტომატურად
          აგროვებს.
        courseC_starWars_loops1_b: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი,
          თუ თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
        courseC_starWars_loops1_c: ამ თავსატეხის ამოსახნელად ხუთჯერ მოგიწევთ `წინ
          გადაადგილება`.
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_a: ნუთუ არ ჰგავს ეს ნიმუში გიგანტური კიბის საფეხურებს?
          ნახეთ, შეგიძლიათ თუ არა წინა თავსატეხებში ნასწავლი მასალის გამოყენება ყველა
          მობრუნების შესასრულებლად.
        courseC_starWars_loops10_b: |-
          თუ ნაკლები კოდის გამოყენება გსურთ, შეგიძლიათ განათავსოთ ერთი `გამეორების ციკლი` მეორეში!
          ამას ეწოდება **ჩასმული ციკლი**.
        courseC_starWars_loops10_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი,
          თუ თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_a: ნუთუ არ ჰგავს ეს ნიმუში გიგანტური კიბის საფეხურებს?
          ნახეთ, შეგიძლიათ თუ არა წინა თავსატეხებში ნასწავლი მასალის გამოყენება ყველა
          მობრუნების შესასრულებლად.
        courseC_starWars_loops10_b: |-
          თუ ნაკლები კოდის გამოყენება გსურთ, შეგიძლიათ განათავსოთ ერთი `გამეორების ციკლი` მეორეში!
          ამას ეწოდება **ჩასმული ციკლი**.
        courseC_starWars_loops10_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი,
          თუ თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      courseC_starWars_loops10_predict2_authored_hint: []
      courseC_starWars_loops10_predict2_2018_authored_hint: []
      courseC_starWars_loops11_authored_hint: []
      courseC_starWars_loops11_2018_authored_hint: []
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_a: როდესაც BB-8 ზედ გადაუვლის ჯართს, ის მას ავტომატურად
          აგროვებს.
        courseC_starWars_loops1_b: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი,
          თუ თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
        courseC_starWars_loops1_c: ამ თავსატეხის ამოსახნელად ხუთჯერ მოგიწევთ `წინ
          გადაადგილება`.
      courseC_starWars_loops2_authored_hint:
        courseC_starWars_loops2_a: კოდის გასამეორებლად, გადმოათრიეთ `გამეორების` ციკლი,
          შემდეგ კი განათავსეთ მასში სასურველი ბლოკი.
      courseC_starWars_loops2_2018_authored_hint:
        courseC_starWars_loops2_a: კოდის გასამეორებლად, გადმოათრიეთ `გამეორების` ციკლი,
          შემდეგ კი განათავსეთ მასში სასურველი ბლოკი.
      courseC_starWars_loops4_authored_hint:
        courseC_starWars_loops4_c: მობრუნების ბლოკზე "მარცხნივ"-ის გვერდით განთავსებულ
          ისარზე დაკლიკვით თქვენ შეგიძლიათ შეცვალოთ ის "მარჯვენაზე".
        courseC_starWars_loops4_a: გამოიყენეთ ორი `გამეორების` ბლოკი.
        courseC_starWars_loops4_b: 'ყოველ `გამეორების` ციკლში მოთავსდება მხოლოდ ერთი
          ბრძანება: `გადაადგილდეთ წინ`.'
      courseC_starWars_loops4_2018_authored_hint:
        courseC_starWars_loops4_c: მობრუნების ბლოკზე "მარცხნივ"-ის გვერდით განთავსებულ
          ისარზე დაკლიკვით თქვენ შეგიძლიათ შეცვალოთ ის "მარჯვენაზე".
        courseC_starWars_loops4_a: გამოიყენეთ ორი `გამეორების` ბლოკი.
        courseC_starWars_loops4_b: 'ყოველ `გამეორების` ციკლში მოთავსდება მხოლოდ ერთი
          ბრძანება: `გადაადგილდეთ წინ`.'
      courseC_starWars_loops5_authored_hint:
        courseC_starWars_loops5_b: ქვემოთ სამოძრაოდ უნდა შეტრიალდეთ და შემდეგ იმოძრაოთ
          წინ.
        courseC_starWars_loops5_a: საუკეთესო ამოხსნის გზა იყენებს მობრუნებას, შემდეგ
          ერთმაგ `წინ გადაადგილებას`, კიდევ ერთ მობრუნებს და ციკლს.
      courseC_starWars_loops5_2018_authored_hint:
        courseC_starWars_loops5_b: ქვემოთ სამოძრაოდ უნდა შეტრიალდეთ და შემდეგ იმოძრაოთ
          წინ.
        courseC_starWars_loops5_a: საუკეთესო ამოხსნის გზა იყენებს მობრუნებას, შემდეგ
          ერთმაგ `წინ გადაადგილებას`, კიდევ ერთ მობრუნებს და ციკლს.
      courseC_starWars_loops6_authored_hint:
        courseC_starWars_loops6_a: სცადეთ სვლების ქაღალდზე ჩაწერა, შემდეგ კი მსგავსების
          პოვნა.
        courseC_starWars_loops6_b: |-
          თუ ნაკლები კოდის გამოყენება გსურთ, შეგიძლიათ განათავსოთ ერთი `გამეორების ციკლი` მეორეში!
          ამას ეწოდება **ჩასმული ციკლი**.
      courseC_starWars_loops6_2018_authored_hint:
        courseC_starWars_loops6_a: სცადეთ სვლების ქაღალდზე ჩაწერა, შემდეგ კი მსგავსების
          პოვნა.
        courseC_starWars_loops6_b: |-
          თუ ნაკლები კოდის გამოყენება გსურთ, შეგიძლიათ განათავსოთ ერთი `გამეორების ციკლი` მეორეში!
          ამას ეწოდება **ჩასმული ციკლი**.
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_a: ეს ნიმუში უფრო რთულად შეიძლება ჩანდეს, ვიდრე სინამდვილეში
          არის. ფარავს თუ არა ის მთელ ჯართს?
        courseC_starWars_loops7_b: თუ ამ თავსატეხის ამოხსნას ვერ ახერხებთ, სცადეთ
          ყველა სვლის ფურცელზე გადაწერა და მსგავსების მოძებნა.
        courseC_starWars_loops7_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი,
          თუ თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_a: ეს ნიმუში უფრო რთულად შეიძლება ჩანდეს, ვიდრე სინამდვილეში
          არის. ფარავს თუ არა ის მთელ ჯართს?
        courseC_starWars_loops7_b: თუ ამ თავსატეხის ამოხსნას ვერ ახერხებთ, სცადეთ
          ყველა სვლის ფურცელზე გადაწერა და მსგავსების მოძებნა.
        courseC_starWars_loops7_c: შეცდომის დაშვების ნუ შეგეშინდებათ! მაშინაც კი,
          თუ თავსატეხი ჯერ არ ამოგიხსნიათ, გაუშვით კოდი და ნახეთ, რა მოხდება.
      courseC_starWars_loops8_authored_hint:
        course_starWars_loops8_a: Try thinking about this problem in small parts.
          Take your time. You don't need to solve it on the first try!
        course_starWars_loops8_b: შეხედეთ ამოცანას პირველ ნახევარს, როგორც კიბის საფეხურის
          ამოცანას. აქამდე როგორ ხსნიდით ასეთ ამოცანებს?
        course_starWars_loops8_c: როდესაც დაასრულებთ კიბის ნიმუშს, ამოძრავეთ BB-8
          ზემოთ, რათა შეაგროვოთ დანარჩენი ჯართი!
      courseC_starWars_loops8_2018_authored_hint:
        course_starWars_loops8_a: Try thinking about this problem in small parts.
          Take your time. You don't need to solve it on the first try!
        course_starWars_loops8_b: შეხედეთ ამოცანას პირველ ნახევარს, როგორც კიბის საფეხურის
          ამოცანას. აქამდე როგორ ხსნიდით ასეთ ამოცანებს?
        course_starWars_loops8_c: როდესაც დაასრულებთ კიბის ნიმუშს, ამოძრავეთ BB-8
          ზემოთ, რათა შეაგროვოთ დანარჩენი ჯართი!
      courseC_starWars_loops9_authored_hint:
        course_starWars_loops9_b: "`გამეორების`ციკლში ერთზე მეტი ბლოკის მოთავსება
          შეგიძლიათ."
        course_starWars_loops9_c: ამ თავსატეხის ამოსახსნელად მარცხნივ მობრუნება არ
          დაგჭირდებათ. შესაძლებელია, თქვენი ყველა ბრუნი იყოს მარჯვნივ.
      courseC_starWars_loops9_2018_authored_hint:
        course_starWars_loops9_b: "`გამეორების`ციკლში ერთზე მეტი ბლოკის მოთავსება
          შეგიძლიათ."
        course_starWars_loops9_c: ამ თავსატეხის ამოსახსნელად მარცხნივ მობრუნება არ
          დაგჭირდებათ. შესაძლებელია, თქვენი ყველა ბრუნი იყოს მარჯვნივ.
      courseD_Frozen_nested1_authored_hint:
        courseD_artist_project1_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project1_b: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
      courseD_Frozen_nested2_authored_hint:
        courseD_artist_project2_a: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
        courseD_artist_project2_b: მას შემდეგ, რაც დახატავთ და გადაადგილდებით პირველად,
          თქვენ შეგიძლიათ კოდის გამეორება მისი ციკლში მოთავსებით.
      courseD_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project3_b: |-
          სცადეთ ჩადგმული ციკლების გამოყენება!

          გამოიყენეთ კოდი, რომელიც შექმენით ხაზების დასახატად და ჩასვით ისინი სხვა ციკლში. ქვემოთ, გარე ციკლის დამთავრებამდე დაამატეთ ბლოკი, რომელიც შეატრიალებს ელზას.

          -სცადეთ 72 გრადუსი, თუ გარე ციკლს იმეორებთ 5-ჯერ
          -სცადეთ 60 გრადუსი, თუ გარე ციკლს იმეორებთ 6-ჯერ
      courseD_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |
          მოცემულია რვაკუთხა და სამკუთხა ფიფქები, მათ შორის 36-გრადუსიანი კუთხით.

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          ეს კვადრატებიანი ექვსკუთხედების მიმდევრობაა:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: საცდელად, დახატეთ თქვენი პირველი ფიფქრი, შემდეგ
          დახატეთ მეორე.
      courseD_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          2 ექვსკუთხედისგან და 4 სამკუთხედისგან შემდგარი მწკრივები:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          ეს კიბის საფეხური იყენებს 76-გრადუსიან ბრუნს და მეორდება 4-ჯერ.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ეს ორნამენტები ძალიან ჰგავს კიბის საფეხურებს სხვა
          თავსატეხებიდან, ოღონდ სხვა ზომის კუთხეა გამოყენებული.
      courseD_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          ეს ნახატი შეიქმნა 4 კიბის ციკლისა და `მარჯვნივ 180 გრადუსით მობრუნების` ბლოკის `ორჯერ გამეორების` ბლოკში მოთავსებით.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: ფიგურის სატრიალებლად განსხვავებული სიდიდეების
          გამოყენება შეგიძლიათ! რას იტყვით 18-ჯერ 20 გრადუსიან მობრუნებაზე?
      courseD_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          აქ ორი განსხვავებული სიგრძის მქონე ფიფქია, ერთი დახატულია მეორის შემდეგ (მათ შორის 30 გრადუსიანი მობრუნებით.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_1_2018_authored_hint:
        courseD_artist_project1_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project1_b: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
      courseD_artist_2_2018_authored_hint:
        courseD_artist_project1_b: Remember that `move` draws a line, while `jump`
          does not.
        courseD_artist_project1_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
      courseD_artist_3_2018_authored_hint: []
      courseD_artist_4_2018_authored_hint: []
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to
          switch their angles, too!
      courseD_artist_6_2018_authored_hint: []
      courseD_artist_7_2018_authored_hint:
        courseD_artist_project2a_a: |
          ეს ნახატი შეიქმნა 4 კიბის ციკლისა და `მარჯვნივ 180 გრადუსით მობრუნების` ბლოკის `ორჯერ გამეორების` ბლოკში მოთავსებით.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_8_2018_authored_hint:
        courseD_artist_project3a_a: ფიგურის სატრიალებლად განსხვავებული სიდიდეების
          გამოყენება შეგიძლიათ! რას იტყვით 18-ჯერ 20 გრადუსიან მობრუნებაზე?
      courseD_artist_9_2018_authored_hint:
        courseD_artist_project4a_a: |
          აქ ორი განსხვავებული სიგრძის მქონე ფიფქია, ერთი დახატულია მეორის შემდეგ (მათ შორის 30 გრადუსიანი მობრუნებით.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_Template_2018_authored_hint: []
      courseD_artist_binary1_authored_hint:
        courseD_artist_binary1_a: ჩაანაცვლეთ "???" ტექსტსის ბლოკში იმ ორობითი სურათით,
          რომელიც გსურთ, ნულებისა და ერთების გამოყენებით.
        courseD_artist_binary1_b: მხატვარი დახატავს თეთრ სივრცეს თითოეული 1-სათვის
          და შავ სივრცეს თითოეული 0-ისათვის.
        courseD_artist_binary1_c: |-
          აი, ასე უნდა შეიყვანოთ თქვენი ორობითი კოდი:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018_authored_hint:
        courseD_artist_binary1_a: ჩაანაცვლეთ "???" ტექსტსის ბლოკში იმ ორობითი სურათით,
          რომელიც გსურთ, ნულებისა და ერთების გამოყენებით.
        courseD_artist_binary1_b: მხატვარი დახატავს თეთრ სივრცეს თითოეული 1-სათვის
          და შავ სივრცეს თითოეული 0-ისათვის.
        courseD_artist_binary1_c: |-
          აი, ასე უნდა შეიყვანოთ თქვენი ორობითი კოდი:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2_authored_hint:
        courseD_artist_binary2_a: უბრალოდ დააჭირეთ `გაშვებას`, რათა იხილოთ ეს პროგრამა
          მოქმედებაში!
      courseD_artist_binary2_2018_authored_hint:
        courseD_artist_binary2_a: უბრალოდ დააჭირეთ `გაშვებას`, რათა იხილოთ ეს პროგრამა
          მოქმედებაში!
      courseD_artist_binary3_authored_hint:
        courseD_artist_binary3_a: ინსტრუმენტების პანელში მდებარე ოთხი ორობითი ორნამენტიდან
          ერთი ამ თავსატეხს ამოხსნის!
        courseD_artist_binary3_b: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ გაიგებთ, რა ხდება.
      courseD_artist_binary3_2018_authored_hint:
        courseD_artist_binary3_a: ინსტრუმენტების პანელში მდებარე ოთხი ორობითი ორნამენტიდან
          ერთი ამ თავსატეხს ამოხსნის!
        courseD_artist_binary3_b: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ გაიგებთ, რა ხდება.
      courseD_artist_binary4_authored_hint:
        courseD_artist_binary4_a: შეხედეთ ზედა რიგის პირველ სამ კვადრატს. შეგიძლიათ
          გაიმეოროთ ეს სამი, მთლიანი ორნამენტის მისაღებად?
        courseD_artist_binary4_b: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, რათა ნახოთ, თუ რა მოხდება, თუნდაც ჯერ ამოხსნილი
          არ გქონდეთ თავსატეხი.
      courseD_artist_binary4_2018_authored_hint:
        courseD_artist_binary4_a: შეხედეთ ზედა რიგის პირველ სამ კვადრატს. შეგიძლიათ
          გაიმეოროთ ეს სამი, მთლიანი ორნამენტის მისაღებად?
        courseD_artist_binary4_b: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, რათა ნახოთ, თუ რა მოხდება, თუნდაც ჯერ ამოხსნილი
          არ გქონდეთ თავსატეხი.
      courseD_artist_binary5_authored_hint:
        courseD_artist_binary5_a: პირველ რიგში სცადეთ კოდის გაშვება, რომ ნახოთ, თუ
          რასთან გაქვთ საქმე.
        courseD_artist_binary5_b: ღიმილის მისაღებად მხოლოდ ორი რიგისათვის გჭირდებათ
          ადგილების გაცვლა.
        courseD_artist_binary5_c: თუ ამ თავსატეხის ამოხსნას ვერ ახერხებთ, სცადეთ ორობითი
          ხაზების ფურცელზე გადაწერა და ნახეთ, რომელი ნაწილები მეორდება.
      courseD_artist_binary5_2018_authored_hint:
        courseD_artist_binary5_a: პირველ რიგში სცადეთ კოდის გაშვება, რომ ნახოთ, თუ
          რასთან გაქვთ საქმე.
        courseD_artist_binary5_b: ღიმილის მისაღებად მხოლოდ ორი რიგისათვის გჭირდებათ
          ადგილების გაცვლა.
        courseD_artist_binary5_c: თუ ამ თავსატეხის ამოხსნას ვერ ახერხებთ, სცადეთ ორობითი
          ხაზების ფურცელზე გადაწერა და ნახეთ, რომელი ნაწილები მეორდება.
      courseD_artist_binary6_authored_hint:
        courseD_artist_binary6_a: დაიწყეთ ზედა მარცხენა კუთხიდან. სადამდე გიწევთ წაკითხვა,
          სანამ ორნამენტი გამეორებას დაიწყებს?
        courseD_artist_binary6_b: თქვენი ორობითი სტრინგი ეტაპობრივად შეგიძლიათ ააშენოთ
          და თან გააგრძელოთ ცდა!
      courseD_artist_binary6_2018_authored_hint:
        courseD_artist_binary6_a: დაიწყეთ ზედა მარცხენა კუთხიდან. სადამდე გიწევთ წაკითხვა,
          სანამ ორნამენტი გამეორებას დაიწყებს?
        courseD_artist_binary6_b: თქვენი ორობითი სტრინგი ეტაპობრივად შეგიძლიათ ააშენოთ
          და თან გააგრძელოთ ცდა!
      courseD_artist_binary7_authored_hint:
        courseD_artist_binary7_a: დაიწყეთ ზედა მარცხენა კუთხიდან. სადამდე გიწევთ წაკითხვა,
          სანამ ორნამენტი გამეორებას დაიწყებს?
        courseD_artist_binary7_b: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, რათა ნახოთ, თუ რა მოხდება, თუნდაც ჯერ ამოხსნილი
          არ გქონდეთ თავსატეხი.
      courseD_artist_binary7_2018_authored_hint:
        courseD_artist_binary7_a: დაიწყეთ ზედა მარცხენა კუთხიდან. სადამდე გიწევთ წაკითხვა,
          სანამ ორნამენტი გამეორებას დაიწყებს?
        courseD_artist_binary7_b: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, რათა ნახოთ, თუ რა მოხდება, თუნდაც ჯერ ამოხსნილი
          არ გქონდეთ თავსატეხი.
      courseD_artist_binary8_authored_hint:
        courseD_artist_binary8_a: სპირალი შეიძლება ზოგჯერ დამაბნეველიც იყოს. თქვენს
          გონებაში გააცალკევეთ თითოეული ჰორიზონტალური ხაზი, როდესაც ამ დიზაინს შექმნით.
        courseD_artist_binary8_b: პირველ რიგში სცადეთ კოდის გაშვება, რომ ნახოთ, თუ
          რასთან გაქვთ საქმე.
        courseD_artist_binary8_c: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ გაიგებთ, რა ხდება.
      courseD_artist_binary8_2018_authored_hint:
        courseD_artist_binary8_a: სპირალი შეიძლება ზოგჯერ დამაბნეველიც იყოს. თქვენს
          გონებაში გააცალკევეთ თითოეული ჰორიზონტალური ხაზი, როდესაც ამ დიზაინს შექმნით.
        courseD_artist_binary8_b: პირველ რიგში სცადეთ კოდის გაშვება, რომ ნახოთ, თუ
          რასთან გაქვთ საქმე.
        courseD_artist_binary8_c: არ შეუშინდეთ შეცდომის დაშვებას! სცადეთ ორობითად
          დაწერა და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ გაიგებთ, რა ხდება.
      courseD_artist_binaryFP_authored_hint: []
      courseD_artist_binaryFP8_authored_hint: []
      courseD_artist_binaryFP_2018_authored_hint: []
      courseD_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: თავდაპირველ პროგრამაში რამდენიმე ხაზი
          შეცდომითაა.
      courseD_artist_binary_challenge2_2018_authored_hint:
        courseD_artist_binary_challenge2_a: თავდაპირველ პროგრამაში რამდენიმე ხაზი
          შეცდომითაა.
      courseD_artist_binary_challenge3_authored_hint:
        courseD_artist_binary_challenge3_a: |-
          საუკეთესო რჩევა, რაც შემიძლია მოგცეთ, არის ის, რომ დააჭიროთ `⟲ თავიდან დაწყებას`, თუ ყველაფერი არევას დაიწყებს.

          ორიგინალ პროგრამაში მხოლოდ რამდენიმე ხაზია შეცდომით. თუ პირველ მცდელობას ჩააფლავებთ, დაბრუნდით და ისევ სცადეთ. გამოსავალი ნამდვილად არსებობს!
      courseD_artist_embed_frozen_authored_hint: []
      courseD_artist_embed_frozen2_authored_hint: []
      courseD_artist_embedded_project1a_authored_hint: []
      courseD_artist_functions10_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, except
          the function draws a different kind of line.
        courseD_artist_functions10_a: To get around using multiple `move forward`
          blocks, create a `draw hexagon` function and call that multiple times.
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          თქვენი პროგრამა უნდა:
          - იყენებდეს ფუნქციას
          - მოძრაობდეს წინ 100 + 75 პიქსელით
          - იყენებდეს ფუნქციას
      courseD_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
      courseD_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Try using a function!
      courseD_artist_functions5_authored_hint:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
      courseD_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll
          create a function for it in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops, where the inner
          loop makes the square and the outer loop rotates the square four times.
      courseD_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then adding
          in windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just
          jump the artist 100 pixels forward for each top window, and 150 pixels down
          to get the bottom windows.
      courseD_artist_functions8_authored_hint:
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_b: After your first line of squares, you need to
          move the artist down and back before you start your second line of squares.
        courseD_artist_functions8_c: You should move the artist back a different number
          of pixels for even lines than for odd ones.
      courseD_artist_functions9_authored_hint:
        courseD_artist_functions9_a: To get around the need to have multiple `move
          forward` blocks, create a `draw triangle` function and call that multiple
          times.
        courseD_artist_functions9_b: This drawing is made by creating a line of triangles
          and turning either 60 or 120 degrees after each time you draw the triangle
          line.
      courseD_artist_nestedLoops1_authored_hint:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward
          and use right turns.
        courseD_artist_nestedLoops1_b: შეგიძლიათ ეს სამკუთხედი `განმეორების` ციკლში
          ორი ბლოკის მოთავსებით დახატოთ. რომელი ბლოკები დაგჭირდებათ?
        courseD_artist_nestedLoops1_c: სცადეთ ნაბიჯების ფურცელზე დაწერა და ორნამენტების
          მოძებნა, რომლების გამარტივებაც ციკლების საშუალებით იქნება შესაძლებელი.
      courseD_artist_nestedLoops10_authored_hint: []
      courseD_artist_nestedLoops10_2018_authored_hint: []
      courseD_artist_nestedLoops1_2018_authored_hint:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward
          and use right turns.
        courseD_artist_nestedLoops1_b: შეგიძლიათ ეს სამკუთხედი `განმეორების` ციკლში
          ორი ბლოკის მოთავსებით დახატოთ. რომელი ბლოკები დაგჭირდებათ?
        courseD_artist_nestedLoops1_c: სცადეთ ნაბიჯების ფურცელზე დაწერა და ორნამენტების
          მოძებნა, რომლების გამარტივებაც ციკლების საშუალებით იქნება შესაძლებელი.
      courseD_artist_nestedLoops1a_authored_hint:
        courseD_artist_nestedLoops1a_a: 'You will need to draw a total of 6 triangles,
          each rotated 60 degrees.  '
        courseD_artist_nestedLoops1a_b: თუ თქვენ თქვენს სამკუთხედს ციკლით შექმნით,
          მხატვარი სახით უნდა იყოს იმავე მიმართულებით, რა მიმართულებითც იყო დაწყებისას.
          ეს 60 გრადუსიან ბრუნებს ბევრად გაამარტივებს.
        courseD_artist_nestedLoops1a_c: თუ ფერები გინდათ, გამოიყენეთ `ფერის შერჩევის`
          ბლოკი თქვენს კოდში. არაა აუცილებელი, თქვენი ფერები შაბლონის სურათის ფერებს
          ემთხვეოდეს.
      courseD_artist_nestedLoops1a_2018_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: თუ თქვენ თქვენს სამკუთხედს ციკლით შექმნით,
          მხატვარი სახით უნდა იყოს იმავე მიმართულებით, რა მიმართულებითც იყო დაწყებისას.
          ეს 60 გრადუსიან ბრუნებს ბევრად გაამარტივებს.
        courseD_artist_nestedLoops1a_c: თუ ფერები გინდათ, გამოიყენეთ `ფერის შერჩევის`
          ბლოკი თქვენს კოდში. არაა აუცილებელი, თქვენი ფერები შაბლონის სურათის ფერებს
          ემთხვეოდეს.
      courseD_artist_nestedLoops2_authored_hint:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle
          code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: არ დაგავიწყდეთ `მობრუნების` ბლოკის ციკლში მოთავსება,
          რათა მხატვარი თითოეული სამკუთხედის შემდეგ მობრუნდეს.
      courseD_artist_nestedLoops2_2018_authored_hint:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle
          code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: არ დაგავიწყდეთ `მობრუნების` ბლოკის ციკლში მოთავსება,
          რათა მხატვარი თითოეული სამკუთხედის შემდეგ მობრუნდეს.
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "იმისათვის რომ კვადრატის თავიდან იმ ადგილზე
          მოხვდეთ, სადაც მე-2 კვადრატზე მუშაობა უნდა დაიწყო, გამოიყენეთ წინ გადახტომის`
          ბლოკი. \nრა სიშორეზე უნდა გადახტეთ, თუ კვადრატები 20 პიქსელის სიმაღლისაა
          და ერთმანეთისგანაც 20 პიქსელით არის დაშორებული?"
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve
          this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'დაიწყეთ `განმეორების` ციკლის გამოყენებით,
          რომ შექმნათ ერთი კვადრატი. შემდეგ გაიმეორეთ ის კვადრატი რვაჯერ, კვადრატებს
          შორის 40 პიქსელით გადაადგილებით. '
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "იმისათვის რომ კვადრატის თავიდან იმ ადგილზე
          მოხვდეთ, სადაც მე-2 კვადრატზე მუშაობა უნდა დაიწყო, გამოიყენეთ წინ გადახტომის`
          ბლოკი. \nრა სიშორეზე უნდა გადახტეთ, თუ კვადრატები 20 პიქსელის სიმაღლისაა
          და ერთმანეთისგანაც 20 პიქსელით არის დაშორებული?"
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve
          this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'დაიწყეთ `განმეორების` ციკლის გამოყენებით,
          რომ შექმნათ ერთი კვადრატი. შემდეგ გაიმეორეთ ის კვადრატი რვაჯერ, კვადრატებს
          შორის 40 პიქსელით გადაადგილებით. '
      courseD_artist_nestedLoops4_authored_hint:
        courseD_artist_nestedLoops4_d: To solve this correctly, you'll need to move
          **before** you turn, or else your circles will be off by the tiniest little
          amount!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:
          - Repeat 360 times
          - Move forward 1 pixel
          - Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between
          circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops4_2018_authored_hint:
        courseD_artist_nestedLoops4_d: To solve this correctly, you'll need to move
          **before** you turn, or else your circles will be off by the tiniest little
          amount!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:
          - Repeat 360 times
          - Move forward 1 pixel
          - Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between
          circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops5_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:

          - repeat 4 times
          - make a circle
          - jump forward 50 pixels
          - turn right 90 degrees
        courseD_artist_nestedLoops5_b: წრის შესაქმნელად განმეორების ციკლი ისე უნდა
          დააყენოთ, რომ მან 360-ჯერ გაიმეოროს. ციკლის შიგნით გაადგილდით წინ 1 პიქსელით
          და მობრუნდით 1 გრადუსით.
      courseD_artist_nestedLoops5_2018_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:

          - repeat 4 times
          - make a circle
          - jump forward 50 pixels
          - turn right 90 degrees
        courseD_artist_nestedLoops5_b: წრის შესაქმნელად განმეორების ციკლი ისე უნდა
          დააყენოთ, რომ მან 360-ჯერ გაიმეოროს. ციკლის შიგნით გაადგილდით წინ 1 პიქსელით
          და მობრუნდით 1 გრადუსით.
      courseD_artist_nestedLoops6_authored_hint:
        courseD_artist_nestedLoops6_a: You'll need to repeat your outer loop 6 times
          now, instead of only 4.
        courseD_artist_nestedLoops6_b: 'Now that you''re breaking 360 degrees into
          six pieces instead of only four, you will only need to turn 60 degrees between
          circles. '
      courseD_artist_nestedLoops7_authored_hint:
        courseD_artist_nestedLoops7_a: |-
          Use a nested loop, where the inner loop is the code for a square.

          - repeat 6 times
          - make square
          - jump forward by 50 pixels
          - turn 60 degrees
        courseD_artist_nestedLoops7_b: |-
          გამოიყენეთ ჩასმული ციკლი, სადაც შიდა ციკლი კვადრატის კოდია.

          - გაიმეორეთ 6-ჯერ
          - გააკეთეთ კვადრატი
          - გადახტით წინ **50 პიქსელით**
          - მობრუნდით **60 გრადუსით**
      courseD_artist_nestedLoops7_2018_authored_hint:
        courseD_artist_nestedLoops7_a: You'll need to use nested loops here. First,
          use a loop to draw a square. What will the outer loop do if the inner loop
          draws a square?
        courseD_artist_nestedLoops7_b: |-
          გამოიყენეთ ჩასმული ციკლი, სადაც შიდა ციკლი კვადრატის კოდია.

          - გაიმეორეთ 6-ჯერ
          - გააკეთეთ კვადრატი
          - გადახტით წინ **50 პიქსელით**
          - მობრუნდით **60 გრადუსით**
      courseD_artist_nestedLoops8_authored_hint:
        courseD_artist_nestedLoops8_a: If you're stuck, start by looking at the last
          puzzle, then change the things that are different.
        courseD_artist_nestedLoops8_b: თუ გაიჭედეთ, გადახედეთ უკანასკნელ თავსატეხს,
          შემდეგ კი შეცვალეთ, რაც განსხვავებულია.
        courseD_artist_nestedLoops8_c: |-
          გამოიყენეთ ჩასმული ციკლი:

          - გაიმეორეთ 8-ჯერ
          - დახატეთ ექვსკუთხედი
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 45 გრადუსით
      courseD_artist_nestedLoops8_2018_authored_hint:
        courseD_artist_nestedLoops8_a: To have 8 hexagons in your drawing, you'll
          need to turn **45 degrees** between each of them. Why? Because 360 degrees
          (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.
        courseD_artist_nestedLoops8_b: თუ გაიჭედეთ, გადახედეთ უკანასკნელ თავსატეხს,
          შემდეგ კი შეცვალეთ, რაც განსხვავებულია.
        courseD_artist_nestedLoops8_c: |-
          გამოიყენეთ ჩასმული ციკლი:

          - გაიმეორეთ 8-ჯერ
          - დახატეთ ექვსკუთხედი
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 45 გრადუსით
      courseD_artist_nestedLoops9_authored_hint:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before,
          but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end
          of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          გამოიყენეთ ორი ჩასმული ციკლი:
          - გაიმეორეთ 8-ჯერ
          - დახატეთ კვადრატი
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 45 პიქსელით
          - გაიმეორეთ 8-ჯერ
          - დახატეთ სამკუთხედ
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 45 პიქსელით
      courseD_artist_nestedLoops9_2018_authored_hint:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before,
          but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end
          of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          გამოიყენეთ ორი ჩასმული ციკლი:
          - გაიმეორეთ 8-ჯერ
          - დახატეთ კვადრატი
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 45 პიქსელით
          - გაიმეორეთ 8-ჯერ
          - დახატეთ სამკუთხედ
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 45 პიქსელით
      courseD_artist_nestedLoops9_predict1_authored_hint: []
      courseD_artist_nestedLoops9_predict1_2018_authored_hint: []
      courseD_artist_nestedLoopsFP_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          This image was made using similar code to other levels in this series, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsFP_2018_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsPre1_authored_hint: []
      courseD_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: დაიწყეთ ჩასმული ციკლის შექმნით, რათა
          დახატოთ ოთხი რვაკუთხედი. მობრუნდით 45 გრადუსით რომ გააკეთოთ რვაკუთხედი.
          გადახტით და მობრუნდით 90 გრადუსით თითოეულის შემდეგ.
        courseD_artist_nestedLoops_challenge1_b: დაამატეთ კოდი, რომ დახატოთ სამკუთხედი
          ჩასმულ ციკლში. გამოიყენეთ 120 გრადუსიანი ბრუნები თქვენი სამკუთხედისათვის.
        courseD_artist_nestedLoops_challenge1_c: |-
          გამოიყენეთ ჩასმული ციკლი:
          - გაიმეორეთ 4-ჯერ
          - დახატეთ რვაკუთხედი
          - დახატეთ სამკუთხედი
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 90 გრადუსით
        courseD_artist_nestedLoops_challenge1_d: Put all of your code inside of a
          `repeat 4 times` loop to finish it off.
      courseD_artist_nestedLoops_challenge1_2018_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: დაიწყეთ ჩასმული ციკლის შექმნით, რათა
          დახატოთ ოთხი რვაკუთხედი. მობრუნდით 45 გრადუსით რომ გააკეთოთ რვაკუთხედი.
          გადახტით და მობრუნდით 90 გრადუსით თითოეულის შემდეგ.
        courseD_artist_nestedLoops_challenge1_b: დაამატეთ კოდი, რომ დახატოთ სამკუთხედი
          ჩასმულ ციკლში. გამოიყენეთ 120 გრადუსიანი ბრუნები თქვენი სამკუთხედისათვის.
        courseD_artist_nestedLoops_challenge1_c: |-
          გამოიყენეთ ჩასმული ციკლი:
          - გაიმეორეთ 4-ჯერ
          - დახატეთ რვაკუთხედი
          - დახატეთ სამკუთხედი
          - გადახტით წინ 50 პიქსელით
          - მობრუნდით მარჯვნივ 90 გრადუსით
        courseD_artist_nestedLoops_challenge1_d: Put all of your code inside of a
          `repeat 4 times` loop to finish it off.
      courseD_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: ჩვეულებრივი რვაკუთხედის დასახატად
          მხატვარმა უნდა შეასრულოს 45 გრადუსიანი ბრუნი 8-ჯერ.
        courseD_artist_nestedLoops_challenge2_b: კვადრატის დასახატად, მხატვარმა უნდა
          შეასრულოს ბრუნი 90 გრადუსით 4-ჯერ.
      courseD_artist_nestedLoops_challenge2_2018_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: ჩვეულებრივი რვაკუთხედის დასახატად
          მხატვარმა უნდა შეასრულოს 45 გრადუსიანი ბრუნი 8-ჯერ.
        courseD_artist_nestedLoops_challenge2_b: კვადრატის დასახატად, მხატვარმა უნდა
          შეასრულოს ბრუნი 90 გრადუსით 4-ჯერ.
      courseD_artist_project1_authored_hint:
        courseD_artist_project1_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project1_b: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
      courseD_artist_project1_2018_authored_hint:
        courseD_artist_project1_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project1_b: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
      courseD_artist_project1a_authored_hint:
        courseD_artist_project1a_a: |
          ეს კიბის საფეხური იყენებს 76-გრადუსიან ბრუნს და მეორდება 4-ჯერ.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ეს ორნამენტები ძალიან ჰგავს კიბის საფეხურებს სხვა
          თავსატეხებიდან, ოღონდ სხვა ზომის კუთხეა გამოყენებული.
      courseD_artist_project1a_2018_authored_hint:
        courseD_artist_project1a_a: |
          ეს კიბის საფეხური იყენებს 76-გრადუსიან ბრუნს და მეორდება 4-ჯერ.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ეს ორნამენტები ძალიან ჰგავს კიბის საფეხურებს სხვა
          თავსატეხებიდან, ოღონდ სხვა ზომის კუთხეა გამოყენებული.
      courseD_artist_project2_authored_hint:
        courseD_artist_project2_a: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
        courseD_artist_project2_b: მას შემდეგ, რაც დახატავთ და გადაადგილდებით პირველად,
          თქვენ შეგიძლიათ კოდის გამეორება მისი ციკლში მოთავსებით.
      courseD_artist_project2Template_authored_hint: []
      courseD_artist_project2Template_2018_authored_hint: []
      courseD_artist_project2_2018_authored_hint:
        courseD_artist_project2_a: გაიხსენეთ, რომ `წინ გადაადგილება` ხატავს ხაზს,
          ხოლო `წინ გადახტომა` - არა.
        courseD_artist_project2_b: მას შემდეგ, რაც დახატავთ და გადაადგილდებით პირველად,
          თქვენ შეგიძლიათ კოდის გამეორება მისი ციკლში მოთავსებით.
      courseD_artist_project2a_authored_hint:
        courseD_artist_project2a_a: |
          ეს ნახატი შეიქმნა 4 კიბის ციკლისა და `მარჯვნივ 180 გრადუსით მობრუნების` ბლოკის `ორჯერ გამეორების` ბლოკში მოთავსებით.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018_authored_hint:
        courseD_artist_project2a_a: |
          ეს ნახატი შეიქმნა 4 კიბის ციკლისა და `მარჯვნივ 180 გრადუსით მობრუნების` ბლოკის `ორჯერ გამეორების` ბლოკში მოთავსებით.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3_authored_hint:
        courseD_artist_project3_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project3_b: |-
          სცადეთ ჩადგმული ციკლების გამოყენება!

          გამოიყენეთ კოდი, რომელიც შექმენით ხაზების დასახატად და ჩასვით ისინი სხვა ციკლში. ქვემოთ, გარე ციკლის დამთავრებამდე დაამატეთ ბლოკი, რომელიც შეატრიალებს ელზას.

          -სცადეთ 72 გრადუსი, თუ გარე ციკლს იმეორებთ 5-ჯერ
          -სცადეთ 60 გრადუსი, თუ გარე ციკლს იმეორებთ 6-ჯერ
      courseD_artist_project3_2018_authored_hint:
        courseD_artist_project3_a: გამოიყენეთ ჩამოსაშლელი მენიუ `მობრუნების` ბლოკებზე,
          რომ შეარჩიოთ თქვენთვის სასურველი კუთხე!
        courseD_artist_project3_b: |-
          სცადეთ ჩადგმული ციკლების გამოყენება!

          გამოიყენეთ კოდი, რომელიც შექმენით ხაზების დასახატად და ჩასვით ისინი სხვა ციკლში. ქვემოთ, გარე ციკლის დამთავრებამდე დაამატეთ ბლოკი, რომელიც შეატრიალებს ელზას.

          -სცადეთ 72 გრადუსი, თუ გარე ციკლს იმეორებთ 5-ჯერ
          -სცადეთ 60 გრადუსი, თუ გარე ციკლს იმეორებთ 6-ჯერ
      courseD_artist_project3a_authored_hint:
        courseD_artist_project3a_a: ფიგურის სატრიალებლად განსხვავებული სიდიდეების
          გამოყენება შეგიძლიათ! რას იტყვით 18-ჯერ 20 გრადუსიან მობრუნებაზე?
      courseD_artist_project3a_2018_authored_hint:
        courseD_artist_project3a_a: ფიგურის სატრიალებლად განსხვავებული სიდიდეების
          გამოყენება შეგიძლიათ! რას იტყვით 18-ჯერ 20 გრადუსიან მობრუნებაზე?
      courseD_artist_project4_authored_hint:
        courseD_artist_project4_a: |
          მოცემულია რვაკუთხა და სამკუთხა ფიფქები, მათ შორის 36-გრადუსიანი კუთხით.

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          ეს კვადრატებიანი ექვსკუთხედების მიმდევრობაა:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: საცდელად, დახატეთ თქვენი პირველი ფიფქრი, შემდეგ
          დახატეთ მეორე.
      courseD_artist_project4_2018_authored_hint:
        courseD_artist_project4_a: |
          მოცემულია რვაკუთხა და სამკუთხა ფიფქები, მათ შორის 36-გრადუსიანი კუთხით.

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          ეს კვადრატებიანი ექვსკუთხედების მიმდევრობაა:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: საცდელად, დახატეთ თქვენი პირველი ფიფქრი, შემდეგ
          დახატეთ მეორე.
      courseD_artist_project4a_authored_hint:
        courseD_artist_project4a_a: |
          აქ ორი განსხვავებული სიგრძის მქონე ფიფქია, ერთი დახატულია მეორის შემდეგ (მათ შორის 30 გრადუსიანი მობრუნებით.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018_authored_hint:
        courseD_artist_project4a_a: |
          აქ ორი განსხვავებული სიგრძის მქონე ფიფქია, ერთი დახატულია მეორის შემდეგ (მათ შორის 30 გრადუსიანი მობრუნებით.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5_authored_hint:
        courseD_artist_project4_a: |
          2 ექვსკუთხედისგან და 4 სამკუთხედისგან შემდგარი მწკრივები:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018_authored_hint:
        courseD_artist_project4_a: |
          2 ექვსკუთხედისგან და 4 სამკუთხედისგან შემდგარი მწკრივები:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_projectTemplate_authored_hint: []
      courseD_artist_projectTemplate_2018_authored_hint: []
      courseD_artist_project_embedded_authored_hint: []
      courseD_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: გვერდის დასახატად, გამოიყენეთ `გადაადგილდი წინ 100
          პიქსელით` ბლოკი, შემდეგ შეცვალეთ ის 100-დან 200-მდე.
        courseD_artist_ramp11b: |-
          4 გვერდის დასახატად ჩასვით `გადაადგილდი წინ 200 პიქსელით` ბლოკი გამეორების ციკლში და დარწმუნდით, რომ ციკლი ხატავს მიმდევრობას 4-ჯერ.

          ამის შემდეგ კი, არ გადავიწყდეთ მობრუნება!
        courseD_artist_ramp11_c: არ დაგავიწყდეთ თქვენს ციკლში `მობრუნების` ბლოკის
          მოთავსება!
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: თავიდან შეგიძლიათ დახატოთ ჯერ კვადრატი, შემდეგ კი
          სამკუთხედი, ან პირიქით!
        courseD_artist_ramp12_b: სცადეთ ამ პრობლემის ორ ნაწილად გაყოფა და ორი ციკლის
          გამოყენება.
        courseD_artist_ramp12_c: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
      courseD_bee_conditionals1_authored_hint:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals10_authored_hint: []
      courseD_bee_conditionals10_2018_authored_hint: []
      courseD_bee_conditionals1_predict1_authored_hint:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals1_predict1_2018_authored_hint:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals2_authored_hint:
        courseD_bee_conditionals2_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals2_a: Sometimes a flower will be there, sometimes it
          won't.  If you want your code to run in both cases, make sure to use an
          `if` statement.
        courseD_bee_conditionals2_b: ამ ლაბირინთის გასავლელად თქვენ შეგიძლიათ `გამეორების`
          ციკლის ან `სანამ წინ გზა არის` ბლოკების გამოყენება.
        courseD_bee_conditionals2_c: თქვენ არ გიწევთ ღრუბლებში ფიჭების შემოწმება,
          იქ მხოლოდ ყვავილები ან ცარიელი სივრცეებია.
        courseD_bee_conditionals2_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals2_2018_authored_hint:
        courseD_bee_conditionals2_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals2_a: Sometimes a flower will be there, sometimes it
          won't.  If you want your code to run in both cases, make sure to use an
          `if` statement.
        courseD_bee_conditionals2_b: ამ ლაბირინთის გასავლელად თქვენ შეგიძლიათ `გამეორების`
          ციკლის ან `სანამ წინ გზა არის` ბლოკების გამოყენება.
        courseD_bee_conditionals2_c: თქვენ არ გიწევთ ღრუბლებში ფიჭების შემოწმება,
          იქ მხოლოდ ყვავილები ან ცარიელი სივრცეებია.
        courseD_bee_conditionals2_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals2_test_authored_hint:
        courseD_bee_conditionals2_aa: Need help getting started?  Here is a little
          hint video.
        courseD_bee_conditionals2_a: Sometimes a flower will be there, sometimes it
          won't.  If you want your code to run in both cases, make sure to use an
          `if` statement.
        courseD_bee_conditionals2_b: ამ ლაბირინთის გასავლელად თქვენ შეგიძლიათ `გამეორების`
          ციკლის ან `სანამ წინ გზა არის` ბლოკების გამოყენება.
        courseD_bee_conditionals2_c: თქვენ არ გიწევთ ღრუბლებში ფიჭების შემოწმება,
          იქ მხოლოდ ყვავილები ან ცარიელი სივრცეებია.
        courseD_bee_conditionals2_d: Need help finishing things up?  Watch this hint
          video.
      courseD_bee_conditionals3_authored_hint:
        courseD_bee_conditionals3_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals3_a: Be sure to use an `if` statement to check each
          space to see if it has either a flower or nothing.
        courseD_bee_conditionals3_b: თქვენ შეგიძლიათ `გამეორების` ან `სანამ` ციკლის
          გამოყენება ფუტკრის წინ გადასაადგილებლად. გამოიყენეთ ის, რომელიც უფრო მოგწონთ!
        courseD_bee_conditionals3_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
        courseD_bee_conditionals3_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals3_2018_authored_hint:
        courseD_bee_conditionals3_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals3_a: Be sure to use an `if` statement to check each
          space to see if it has either a flower or nothing.
        courseD_bee_conditionals3_b: თქვენ შეგიძლიათ `გამეორების` ან `სანამ` ციკლის
          გამოყენება ფუტკრის წინ გადასაადგილებლად. გამოიყენეთ ის, რომელიც უფრო მოგწონთ!
        courseD_bee_conditionals3_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
        courseD_bee_conditionals3_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals4_a: You can still treat every space as if there is
          a cloud over it, even though you can see the whole path.
        courseD_bee_conditionals4_b: 'Use an `if` statement inside your loop to check
          each space. '
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          ბლოკის გამოყენებით, თქვენ უნდა იმოძრაოთ წინ და შეამოწმოთ, არის თუ არა სადმე
          ყვავილი. თუ იქ ყვავილია, რა უნდა გააკეთოს ფუტკარმა?
        courseD_bee_conditionals4_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals4_a: You can still treat every space as if there is
          a cloud over it, even though you can see the whole path.
        courseD_bee_conditionals4_b: 'Use an `if` statement inside your loop to check
          each space for nectar. '
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          ბლოკის გამოყენებით, თქვენ უნდა იმოძრაოთ წინ და შეამოწმოთ, არის თუ არა სადმე
          ყვავილი. თუ იქ ყვავილია, რა უნდა გააკეთოს ფუტკარმა?
        courseD_bee_conditionals4_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals5_authored_hint:
        courseD_bee_conditionals5_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals5_a: განიხილეთ ამ მართკუთხა გზის ყოველი გვერდი, როგორც
          ცალკე გზა. შექმენით ჩასმული ციკლი გარედან `გამეორების` ბლოკით და შიგნიდან
          `სანამ წინ გზა არის` ციკლით. რამდენი გზის გავლა მოუწევს ფუტკარს, თუ ფუტკარმა
          უნდა იბზუილოს ყოველ ყვავილიან მხარეს?
        courseD_bee_conditionals5_c: მართკუთხედს აქვს 3 გვერდი ყვავილებით, ამიტომ
          კოდი უნდა `განმეორდეს 3-ჯერ`. ყოველი გამეორებისას ფუტკარმა უნდა გააგრძელოს
          გზაზე მოძრაობა, `სანამ წინ გზა არსებობს`. გზაზე მოძრაობის გასაგრძელებლად,
          ფუტკარმა უნდა `იმოძრაოს წინ`. გზაში ფუტკარმა უნდა შეამოწმოს ყვავილის არსებობა.
          `თუ იქ ყვავილია`, ფუტკარმა უნდა `შეაგროვოს ნექტარი`.
        courseD_bee_conditionals5_b: "`სანამ წინ არის გზა` ბლოკის შიგნით თქვენ მოგიწევთ
          წინ მოძრაობა და ყვავილის არსებობის შემოწმება. როგორ შეამოწმებთ, არის თუ
          არა წინ ყვავილი? რას გააკეთებთ, თუ ყვავილი არის?"
        courseD_bee_conditionals5_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals5_2018_authored_hint:
        courseD_bee_conditionals5_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals5_a: განიხილეთ ამ მართკუთხა გზის ყოველი გვერდი, როგორც
          ცალკე გზა. შექმენით ჩასმული ციკლი გარედან `გამეორების` ბლოკით და შიგნიდან
          `სანამ წინ გზა არის` ციკლით. რამდენი გზის გავლა მოუწევს ფუტკარს, თუ ფუტკარმა
          უნდა იბზუილოს ყოველ ყვავილიან მხარეს?
        courseD_bee_conditionals5_c: მართკუთხედს აქვს 3 გვერდი ყვავილებით, ამიტომ
          კოდი უნდა `განმეორდეს 3-ჯერ`. ყოველი გამეორებისას ფუტკარმა უნდა გააგრძელოს
          გზაზე მოძრაობა, `სანამ წინ გზა არსებობს`. გზაზე მოძრაობის გასაგრძელებლად,
          ფუტკარმა უნდა `იმოძრაოს წინ`. გზაში ფუტკარმა უნდა შეამოწმოს ყვავილის არსებობა.
          `თუ იქ ყვავილია`, ფუტკარმა უნდა `შეაგროვოს ნექტარი`.
        courseD_bee_conditionals5_b: "`სანამ წინ არის გზა` ბლოკის შიგნით თქვენ მოგიწევთ
          წინ მოძრაობა და ყვავილის არსებობის შემოწმება. როგორ შეამოწმებთ, არის თუ
          არა წინ ყვავილი? რას გააკეთებთ, თუ ყვავილი არის?"
        courseD_bee_conditionals5_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals6_authored_hint:
        courseD_bee_conditionals6_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals6_a: Make sure to use an `if` statement to check for
          honeycomb beneath each cloud.
        courseD_bee_conditionals6_b: ამ შემთხვევაში, თქვენ არ მოგიწევთ ღრუბლების ქვეშ
          ნექტარის არსებობის შემოწმება.
        courseD_bee_conditionals6_c: არსებობს თუ არა ციკლი, რომელიც თქვენს კოდს გაამარტივებს?
        courseD_bee_conditionals6_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals6_2018_authored_hint:
        courseD_bee_conditionals6_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals6_a: Make sure to use an `if` statement to check for
          honeycomb beneath each cloud.
        courseD_bee_conditionals6_b: ამ შემთხვევაში, თქვენ არ მოგიწევთ ღრუბლების ქვეშ
          ნექტარის არსებობის შემოწმება.
        courseD_bee_conditionals6_c: არსებობს თუ არა ციკლი, რომელიც თქვენს კოდს გაამარტივებს?
        courseD_bee_conditionals6_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals7_authored_hint:
        courseD_bee_conditionals7_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time
          it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve
          the challenge."
        courseD_bee_conditionals7_b: თუ ღრუბლის ქვეშ ყვავილი არაა, იქ ფიჭაა, ამიტომ
          თქვენ არ მოგიწევთ ცარიელი ადგილისთვის კოდის მოფიქრება.
        courseD_bee_conditionals7_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals7_2018_authored_hint:
        courseD_bee_conditionals7_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time
          it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve
          the challenge."
        courseD_bee_conditionals7_b: თუ ღრუბლის ქვეშ ყვავილი არაა, იქ ფიჭაა, ამიტომ
          თქვენ არ მოგიწევთ ცარიელი ადგილისთვის კოდის მოფიქრება.
        courseD_bee_conditionals7_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals7_predict2_authored_hint:
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time
          it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve
          the challenge."
      courseD_bee_conditionals7_predict2_2018_authored_hint:
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time
          it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve
          the challenge."
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals8_a: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
        courseD_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.

          Only check for nectar and honey at the end of your path.
        courseD_bee_conditionals8_c: როგორ უნდა დარწმუნდეთ იმაში, რომ ყოველი გზის
          ბოლომდე გააღწევთ, გზის სიგრძის მიუხედავად?
        courseD_bee_conditionals8_d: |-
          იმის მიუხედავად, რომ თქვენს წინ ღრუბელია, შეგიძლიათ თავიდანვე არ ეწვიოთ მას. სცადეთ კვადრატის მარჯვენა ქვედა მხარეს განლაგებული ღრუბლით დაწყება.

          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals8_a: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
        courseD_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.

          Only check for nectar and honey at the end of your path.
        courseD_bee_conditionals8_c: როგორ უნდა დარწმუნდეთ იმაში, რომ ყოველი გზის
          ბოლომდე გააღწევთ, გზის სიგრძის მიუხედავად?
        courseD_bee_conditionals8_d: |-
          იმის მიუხედავად, რომ თქვენს წინ ღრუბელია, შეგიძლიათ თავიდანვე არ ეწვიოთ მას. სცადეთ კვადრატის მარჯვენა ქვედა მხარეს განლაგებული ღრუბლით დაწყება.

          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals9_authored_hint: []
      courseD_bee_conditionals9_2018_authored_hint: []
      courseD_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: შეგიძლიათ მოძებნოთ გზა, რომელიც მივა
          ყველა ყვავილთან და ფიჭასთან ხესთან დაჯახების გარეშე? საუკეთესო გზა სპირალურია.
        courseD_bee_conditionals_challenge1_b: ამ თავსატეხში ყოველი თავისუფალი ადგილი
          შეიძლება იყოს ყვავილი, ფიჭა ან არაფერი. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ
          გაიმეოროთ `თუ/სხვაგვარად`პირობითი ბლოკი ყოველ კვადრატთან.
      courseD_bee_conditionals_challenge1_2018_authored_hint:
        courseD_bee_conditionals_challenge1_a: შეგიძლიათ მოძებნოთ გზა, რომელიც მივა
          ყველა ყვავილთან და ფიჭასთან ხესთან დაჯახების გარეშე? საუკეთესო გზა სპირალურია.
        courseD_bee_conditionals_challenge1_b: ამ თავსატეხში ყოველი თავისუფალი ადგილი
          შეიძლება იყოს ყვავილი, ფიჭა ან არაფერი. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ
          გაიმეოროთ `თუ/სხვაგვარად`პირობითი ბლოკი ყოველ კვადრატთან.
      courseD_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          ზუსტად ისე, როგორც `თუ ყვავილია` ბლოკის შიგნით, `სანამ ნექტარი > 0` ბლოკის შიგნით განლაგებული კოდი გაიშვება მხოლოდ მაშინ, როდესაც ფუტკარი ყვავილთანაა. განსხვავება იმაშია, რომ შიგნით მოთავსებული კოდი გაიშვება განმეორებითად მანამ, სანამ ნექტარი გათავდება. სცადეთ ეს ნიმუში:

          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2018_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          ზუსტად ისე, როგორც `თუ ყვავილია` ბლოკის შიგნით, `სანამ ნექტარი > 0` ბლოკის შიგნით განლაგებული კოდი გაიშვება მხოლოდ მაშინ, როდესაც ფუტკარი ყვავილთანაა. განსხვავება იმაშია, რომ შიგნით მოთავსებული კოდი გაიშვება განმეორებითად მანამ, სანამ ნექტარი გათავდება. სცადეთ ეს ნიმუში:

          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge3_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          ზუსტად ისე, როგორც `თუ ყვავილია` ბლოკის შიგნით, `სანამ ნექტარი > 0` ბლოკის შიგნით განლაგებული კოდი გაიშვება მხოლოდ მაშინ, როდესაც ფუტკარი ყვავილთანაა. განსხვავება იმაშია, რომ შიგნით მოთავსებული კოდი გაიშვება განმეორებითად მანამ, სანამ ნექტარი გათავდება. სცადეთ ეს ნიმუში:

          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_debugging1_authored_hint:
        courseD_bee_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_bee_debugging1_b: Do you see any patterns that could be made more
          simple using a `repeat` loop?
      courseD_bee_debugging2_authored_hint:
        courseD_bee_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_bee_debugging2_b: Do you see a pattern?  Try using nested loops to
          solve this puzzle.
      courseD_bee_debugging3_authored_hint:
        courseD_bee_debugging3_a: Is there any place where the bee does something
          that doesn't make sense? What happens when you change those blocks?
        courseD_bee_debugging3_b: Try simplifying the code using nested loops.
      courseD_bee_debugging4_authored_hint:
        courseD_bee_debugging4_a: "Try using the debugging process a couple of times
          in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed,
          what goes wrong?"
        courseD_bee_debugging4_b: "If you're having a hard time figuring out how to
          make the stair step pattern, try tracing it with your finger and saying
          the commands out loud. \n\nDon't forget to point out the direction of the
          turns!"
      courseD_bee_debugging5_authored_hint:
        courseD_bee_debugging5_a: |-
          Start by looking at just the first loop.

          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_bee_debugging5_b: Once you have the first loop the way you want it,
          what is left over in your code?
        courseD_bee_debugging5_c: |-
          Try wrapping the leftover loop around the rest of your completed code.  Does is work now?

          If not, what is still going wrong?
      courseD_bee_debugging6_authored_hint:
        courseD_bee_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_bee_debugging6_b: It looks like all of the right steps are here, you
          just need more of them.  How can you repeat the `get nectar` and `make honey`
          actions multiple times?
      courseD_bee_debugging7_authored_hint:
        courseD_bee_debugging7_a: "Try using the \"Step\" button.  Is everything right
          at the first step?  \n\nHow about the second?  \n\nWhere does it go wrong?
          \ "
        courseD_bee_debugging7_b: If something needs to happen several times, try
          adding a `repeat` loop.
      courseD_bee_debugging8_authored_hint:
        courseD_bee_debugging8_a: Do you see a pattern that you can simplify with
          a loop?
        courseD_bee_debugging8_b: Try using a nested loop to make this code shorter.
      courseD_bee_debugging9_authored_hint:
        courseD_bee_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_bee_debugging9_b: Figure out how you would solve the puzzle, then
          move step-by-step to try to make the code match what is in your head.
        courseD_bee_debugging9_c: |+
          დაათვალიერეთ ყვავილებისკენ მიმავალი კიბეების საფეხურებიდან ერთ ერთი.

          ![](https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png)

          შეგიძლიათ ააშენოთ ერთ-ერთი მათგანი სამუშაო სივრცეში და ინსტრუმენტების პანელში განლაგებული ბლოკებით?

      courseD_bee_debugging9_predict1_authored_hint: []
      courseD_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: რატომ არ მუშაობს პროგრამის პირველი ნაწილი?
          იფიქრეთ იმაზე, რატომ უნდა იმოძრაოს ფუტკარმა უკანა მიმართულებით. რამდენ ნექტარს
          აგროვებს ფუტკარი, როდესაც ყვავილზე გადადის?
        courseD_bee_debugging_challenge1_b: უკანა გზაზე ამოძრავეთ ფუტკარი იგივე პრინციპით.
          რამდენი თაფლი უნდა გააკეთოს ფუტკარმა ყოველჯერ, როდესაც ფიჭაზე გაივლის?
        courseD_bee_debugging_challenge1_c: |-
          როდესაც ფუტკარი მიაღწევს ქვედა მწკრივს, გაამეორებინეთ მას შემდეგი ბრძანებები:

          *გაიმეორე 2-ჯერ:
          * გადაადგილდი წინ
          * გააკეთე 3 თაფლი
          * გადაადგილდი უკანა მიმართულებით
      courseD_bee_debugging_challenge1_2018_authored_hint:
        courseD_bee_debugging_challenge1_a: რატომ არ მუშაობს პროგრამის პირველი ნაწილი?
          იფიქრეთ იმაზე, რატომ უნდა იმოძრაოს ფუტკარმა უკანა მიმართულებით. რამდენ ნექტარს
          აგროვებს ფუტკარი, როდესაც ყვავილზე გადადის?
        courseD_bee_debugging_challenge1_b: უკანა გზაზე ამოძრავეთ ფუტკარი იგივე პრინციპით.
          რამდენი თაფლი უნდა გააკეთოს ფუტკარმა ყოველჯერ, როდესაც ფიჭაზე გაივლის?
        courseD_bee_debugging_challenge1_c: |-
          როდესაც ფუტკარი მიაღწევს ქვედა მწკრივს, გაამეორებინეთ მას შემდეგი ბრძანებები:

          *გაიმეორე 2-ჯერ:
          * გადაადგილდი წინ
          * გააკეთე 3 თაფლი
          * გადაადგილდი უკანა მიმართულებით
      courseD_bee_debugging_challenge1a_authored_hint:
        courseD_bee_debugging_challenge1_a: რატომ არ მუშაობს პროგრამის პირველი ნაწილი?
          იფიქრეთ იმაზე, რატომ უნდა იმოძრაოს ფუტკარმა უკანა მიმართულებით. რამდენ ნექტარს
          აგროვებს ფუტკარი, როდესაც ყვავილზე გადადის?
        courseD_bee_debugging_challenge1_b: 'To solve this puzzle, have the bee follow
          the same pattern to make honey that he does when collecting nectar. '
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block></xml>
      courseD_bee_debugging_challenge2_authored_hint:
        courseD_bee_debugging_challenge1_a: რატომ არ მუშაობს პროგრამის პირველი ნაწილი?
          იფიქრეთ იმაზე, თუ რატომ უნდა იმოძრაოს ფუტკარმა უკანა მიმართულებით. რამდენ
          ნექტარს აგროვებს ფუტკარი, როდესაც ყვავილზე გადადის?
        courseD_bee_debugging_challenge1_b: უკანა გზაზე ამოძრავეთ ფუტკარი იგივე პრინციპით.
          რამდენი თაფლი უნდა გააკეთოს ფუტკარმა ყოველჯერ, როდესაც ფიჭაზე გაივლის?
        courseD_bee_debugging_challenge1_c: |-
          როდესაც ფუტკარი მიაღწევს ქვედა მწკრივს, გაამეორებინეთ მას შემდეგი ბრძანებები:

          *გაიმეორე 2-ჯერ:
          * გადაადგილდი წინ
          * გააკეთე 3 თაფლი
          * გადაადგილდი უკანა მიმართულებით
      courseD_bee_nestedLoops1_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see
          what happens line by line.
        courseD_bee_nestedLoops1_b: სცადეთ კოდის დაწერა კვადრატის ერთი გვერდისთვის.
          შეგიძლიათ გამოიყენოთ ეს კოდი ციკლში, რათა შეაგროვოთ მთელი ნექტარი?
        courseD_bee_nestedLoops1_c: არ დაგავიწყდეთ `ნექტარის მოპოვების` ბლოკის გამოყენება
          მაშინ, როდესაც იქნებით ყვავილის შემცვველ კვადრატზე.
      courseD_bee_nestedLoops1_2018_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see
          what happens line by line.
        courseD_bee_nestedLoops1_b: სცადეთ კოდის დაწერა კვადრატის ერთი გვერდისთვის.
          შეგიძლიათ გამოიყენოთ ეს კოდი ციკლში, რათა შეაგროვოთ მთელი ნექტარი?
        courseD_bee_nestedLoops1_c: არ დაგავიწყდეთ `ნექტარის მოპოვების` ბლოკის გამოყენება
          მაშინ, როდესაც იქნებით ყვავილის შემცვველ კვადრატზე.
      courseD_bee_nestedLoops1a_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see
          what happens line by line.
        courseD_bee_nestedLoops1_c: არ დაგავიწყდეთ `ნექტარის მოპოვების` ბლოკის გამოყენება
          მაშინ, როდესაც იქნებით ყვავილის შემცვველ კვადრატზე.
      courseD_bee_nestedLoops1a_2018_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see
          what happens line by line.
        courseD_bee_nestedLoops1_c: არ დაგავიწყდეთ `ნექტარის მოპოვების` ბლოკის გამოყენება
          მაშინ, როდესაც იქნებით ყვავილის შემცვველ კვადრატზე.
      courseD_bee_nestedLoops2_authored_hint:
        courseD_bee_nestedLoops2_a: To solve this puzzle, you will need to nest one
          `repeat` loop inside of another.
        courseD_bee_nestedLoops2_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
        courseD_bee_nestedLoops2_c: გახსოვდეთ, გამეორების ციკლში შეგიძლიათ მოათავსოთ
          ერთზე მეტი ბლოკი.
      courseD_bee_nestedLoops2_2018_authored_hint:
        courseD_bee_nestedLoops2_a: To solve this puzzle, you will need to nest one
          `repeat` loop inside of another.
        courseD_bee_nestedLoops2_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
        courseD_bee_nestedLoops2_c: გახსოვდეთ, გამეორების ციკლში შეგიძლიათ მოათავსოთ
          ერთზე მეტი ბლოკი.
      courseD_bee_nestedLoops2_predict1_authored_hint: []
      courseD_bee_nestedLoops2_predict1_2018_authored_hint: []
      courseD_bee_nestedLoops3_authored_hint:
        grade4_bee_nestedLoops1_a: If you don't understand how to use nested loops
          here, try writing out the instructions step by step on a piece of paper.  Circle
          the patterns that you see.
      courseD_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops4_a: Try building your code line by line and see if
          you can spot the places where a repeat will make the code shorter!
        grade4_bee_nestedLoops4_b: |-
          You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.

          Altogether, you should be using 3 loops.
      courseD_bee_nestedLoops6_authored_hint: []
      courseD_bee_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: If you are stuck, try writing out the code out
          on paper without loops first and look for patterns.
        courseD_maze_nestedLoops6_b: Nesting `repeat` loops can help decrease the
          number of blocks used.
        courseD_maze_nestedLoops6_c: It will take two sets of nested `repeat` loops
          to solve this puzzle.
      courseD_bee_nestedLoops7_authored_hint:
        courseD_bee_nestedLoops7_a: You will need to repeat `get nectar` inside of
          another `repeat` that also has the `move forward` block inside of it.
        courseD_bee_nestedLoops7_b: You will need to use all three of the available
          `repeat` blocks to solve this puzzle.
        courseD_bee_nestedLoops7_c: |
          Nest your blocks three deep, like this:

          - repeat 4
          - repeat 3
          - repeat 12
          - get nectar
          - move forward
          - turn right
      courseD_bee_nestedLoops7_2018_authored_hint:
        courseD_bee_nestedLoops7_a: You will need to repeat `get nectar` inside of
          another `repeat` that also has the `move forward` block inside of it.
        courseD_bee_nestedLoops7_b: You will need to use all three of the available
          `repeat` blocks to solve this puzzle.
        courseD_bee_nestedLoops7_c: |
          Nest your blocks three deep, like this:

          - repeat 4
          - repeat 3
          - repeat 12
          - get nectar
          - move forward
          - turn right
      courseD_bee_nestedLoops8_authored_hint: []
      courseD_bee_nestedLoops8_2018_authored_hint: []
      courseD_bee_nestedLoops9_authored_hint: []
      courseD_bee_nestedLoops9_2018_authored_hint: []
      courseD_bee_nestedLoops9_predict2_authored_hint: []
      courseD_bee_nestedLoops9_predict2_2018_authored_hint: []
      courseD_bee_nested_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge2_a: არ დაგავიწყდეთ, რომ შეგიძლიათ `გაიმეოროთ`
          როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ `გაიმეოროთ`
          `გამეორების` ბლოკი!
        courseD_bee_nested_loops_challenge2_b: 4-ვე ძვირფასი ქვის შესაგროვებლად ჯერ
          გამოიყენეთ ციკლი, რათა მოშორდეთ ცენტრს. შებრუნდით მარცხნივ ან მარჯვნივ,
          შემდეგ გამოიყენეთ ჩასმული ციკლი, რათა იმოძრავოთ განძის ერთი ბლოკიდან მეორისკენ.
          თუ გაიმეორებთ ჩადგმულ ციკლს საკმარისი რაოდენობით, შემგროვებელი მოივლის *მთლიან*
          გვირაბს!
        courseD_bee_nested_loops_challenge2_c: უმოკლესი პროგრამა, რომელიც აგროვებს
          მთელ განძს იყენებს ერთ `შეგროვების` ბლოკს და ორ მობრუნებას.
      courseD_bee_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: არ დაგავიწყდეთ, რომ შეგიძლიათ `გაიმეოროთ`
          როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ `გაიმეოროთ`
          `გამეორების` ბლოკი!
        courseD_bee_nested_loops_challenge2_b: 4-ივე ძვირფასი ქვის შესაგროვებლად ჯერ
          გამოიყენეთ ციკლი, რათა მოშორდეთ ცენტრს. შემდეგ შებრუდნით მარცხნივ ან მარჯვნივ
          და გამოიყენეთ ჩასმული ციკლი ჯერ პირველ განძის გროვაზე, შემდეგ კი მეორეზე.
        courseD_bee_nested_loops_challenge2_c: თუ გამოიყენებთ ჩადგმულ ციკლს საკმარისი
          რაოდენობით, შემგროვებელი მოივლის *მთლიან* გამოქვაბულს!
        courseD_bee_nested_loops_challenge2_d: უმოკლესი პროგრამა, რომელიც აგროვებს
          მთელ განძს იყენებს ერთ `შეგროვების` ბლოკს და ორ მობრუნებას.
      courseD_bounce_events10s_authored_hint:
        courseD_bounce_events10s_a: |-
          თქვენს კოდში უნდა იყოს ეს ორივე მოვლენა:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">მოქნევა</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">სტვენა</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events10s_2018_authored_hint:
        courseD_bounce_events10s_a: |-
          თქვენს კოდში უნდა იყოს ეს ორივე მოვლენა:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">მოქნევა</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">სტვენა</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events11s_authored_hint:
        courseD_bounce_events11s_a: თქვენ მოგიწევთ ბურთის გასროლა თამაშის დაწყებისას,
          ასევე როდესაც მოახვედრებთ ბურთს კალათს და როდესაც ხელი აცდება ბურთს.
      courseD_bounce_events11s_2018_authored_hint:
        courseD_bounce_events11s_a: თქვენ მოგიწევთ ბურთის გასროლა თამაშის დაწყებისას,
          ასევე როდესაც მოახვედრებთ ბურთს კალათს და როდესაც ხელი აცდება ბურთს.
      courseD_bounce_events12s_authored_hint:
        courseD_bounce_events12s_a: თქვენ შეგილიათ ააჩქაროთ ბურთი ან ხელი, ამ ბლოკების
          `გაშვებისას` მოვლენასთან დაკავშირებით.
        courseD_bounce_events12s_b: სცადეთ ყოველი გასროლაზე 2 ქულის მომატება და შეცვალეთ
          გუნდის სიმბოლო თქვენი ქალაქის გუნდის სიმბოლოთი!
      courseD_bounce_events12s_2018_authored_hint:
        courseD_bounce_events12s_a: თქვენ შეგილიათ ააჩქაროთ ბურთი ან ხელი, ამ ბლოკების
          `გაშვებისას` მოვლენასთან დაკავშირებით.
        courseD_bounce_events12s_b: სცადეთ ყოველი გასროლაზე 2 ქულის მომატება და შეცვალეთ
          გუნდის სიმბოლო თქვენი ქალაქის გუნდის სიმბოლოთი!
      courseD_bounce_events1s_authored_hint:
        courseD_bounce_events1s_a: "თქვენ უნდა დაუმატოთ `იმოძრავე მარცხნივ` ბლოკი
          `როდესაც მარცხენა ისარს დააჭერთ` მოვლენას, რათა აამუშავოთ ეს თამაში:\n\n
          <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n
          \   <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n
          \  \n   </xml>"
        courseD_bounce_events1s_b: არ დაგაწვიყდეთ "გაშვებაზე" დაჭერა და კალათთან ხელის
          მიყვანა, რათა ამოხსნათ ეს თავსატეხი.
      courseD_bounce_events1s_2018_authored_hint:
        courseD_bounce_events1s_a: "თქვენ უნდა დაუმატოთ `იმოძრავე მარცხნივ` ბლოკი
          `როდესაც მარცხენა ისარს დააჭერთ` მოვლენას, რათა აამუშავოთ ეს თამაში:\n\n
          <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n
          \   <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n
          \  \n   </xml>"
        courseD_bounce_events1s_b: არ დაგაწვიყდეთ "გაშვებაზე" დაჭერა და კალათთან ხელის
          მიყვანა, რათა ამოხსნათ ეს თავსატეხი.
      courseD_bounce_events2s_authored_hint:
        courseD_bounce_events2s_a: |-
          თქვენ დაგჭირდებათ ორი `მოძრაობის` მოვლენის დაწერა, რათა აამუშავოთ ეს კოდი:

          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2018_authored_hint:
        courseD_bounce_events2s_a: |-
          თქვენ დაგჭირდებათ ორი `მოძრაობის` მოვლენის დაწერა, რათა აამუშავოთ ეს კოდი:

          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events5s_authored_hint:
        courseD_bounce_events5s_a: თქვენ არ გჭირდებათ ხელის გამოძრავება ამ თავსატეხის
          ამოსახსნელად.
        courseD_bounce_events5s_b: |-
          დარწმუნდით, რომ დაამატეთ თქვენი კოდი სამუშაო სივრცეში:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2018_authored_hint:
        courseD_bounce_events5s_a: თქვენ არ გჭირდებათ ხელის გამოძრავება ამ თავსატეხის
          ამოსახსნელად.
        courseD_bounce_events5s_b: |-
          დარწმუნდით, რომ დაამატეთ თქვენი კოდი სამუშაო სივრცეში:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_authored_hint:
        courseD_bounce_events6s_a: |-
          გაქვთ თუ არა მოვლენა, რომელიც ასე გამოიყურება?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: თუ კოდი სწორად დაწერეთ, გასამარჯვებლად ხელის გადაადგილება
          არ უნდა დაგჭირდეთ.
      courseD_bounce_events6s_2018_authored_hint:
        courseD_bounce_events6s_a: |-
          გაქვთ თუ არა მოვლენა, რომელიც ასე გამოიყურება?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: თუ კოდი სწორად დაწერეთ, გასამარჯვებლად ხელის გადაადგილება
          არ უნდა დაგჭირდეთ.
      courseD_bounce_events7s_authored_hint:
        courseD_bounce_events7s_a: თუ გსურთ, შეგიძლიათ დაამატოთ ხმები მეტ ადგილას!
      courseD_bounce_events7s_2018_authored_hint:
        courseD_bounce_events7s_a: თუ გსურთ, შეგიძლიათ დაამატოთ ხმები მეტ ადგილას!
      courseD_bounce_events_template_authored_hint: []
      courseD_bounce_events_template_2018_authored_hint: []
      courseD_collector_debugging1_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging1_c: არ დაგავიწყდეთ `შეგროვების` ბლოკის გამოყენება
          განძთან მისვლის შემდეგ, რათა შეაგროვოთ ის.
      courseD_collector_debugging10_predict1_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging10_predict1_2018_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging1_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging1_c: არ დაგავიწყდეთ `შეგროვების` ბლოკის გამოყენება
          განძთან მისვლის შემდეგ, რათა შეაგროვოთ ის.
      courseD_collector_debugging1a_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_c: არ დაგავიწყდეთ `შეგროვების` ბლოკის გამოყენება
          განძთან მისვლის შემდეგ, რათა შეაგროვოთ ის.
      courseD_collector_debugging1a_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_c: არ დაგავიწყდეთ `შეგროვების` ბლოკის გამოყენება
          განძთან მისვლის შემდეგ, რათა შეაგროვოთ ის.
      courseD_collector_debugging2_authored_hint:
        courseD_collector_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging2_c: სცადეთ განძის შეგროვება ნიმუშის ერთი მხარისთვის.
          შეგიძიათ გაიმეოროთ ეს განძის ყველა მხარიდან შესაგროვებლად?
      courseD_collector_debugging2_2018_authored_hint:
        courseD_collector_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging2_c: სცადეთ განძის შეგროვება ნიმუშის ერთი მხარისთვის.
          შეგიძიათ გაიმეოროთ ეს განძის ყველა მხარიდან შესაგროვებლად?
      courseD_collector_debugging2a_authored_hint:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          რა მოხდება?

          რა უნდა მოხდეს?

          რას გეუბნებათ თქვენ ეს?
      courseD_collector_debugging2a_2018_authored_hint:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          რა მოხდება?

          რა უნდა მოხდეს?

          რას გეუბნებათ თქვენ ეს?
      courseD_collector_debugging3_authored_hint:
        courseD_collector_debugging3_a: არის თუ არა რამე ადგილი სადაც ლაურიელი უაზრო
          რაღაცებს აკეთებს? რა მოხდება თუ შეცვლით ამ ბლოკებს?
        courseD_collector_debugging3_b: Try simplifying the code using nested loops.
      courseD_collector_debugging3_2018_authored_hint:
        courseD_collector_debugging3_a: არის თუ არა რამე ადგილი სადაც ლაურიელი უაზრო
          რაღაცებს აკეთებს? რა მოხდება თუ შეცვლით ამ ბლოკებს?
        courseD_collector_debugging3_b: Try simplifying the code using nested loops.
      courseD_collector_debugging3a_authored_hint:
        courseD_collector_debugging3_a: არის თუ არა რამე ადგილი სადაც ლაურიელი უაზრო
          რაღაცებს აკეთებს? რა მოხდება თუ შეცვლით ამ ბლოკებს?
      courseD_collector_debugging3a_2018_authored_hint:
        courseD_collector_debugging3_a: არის თუ არა რამე ადგილი სადაც ლაურიელი უაზრო
          რაღაცებს აკეთებს? რა მოხდება თუ შეცვლით ამ ბლოკებს?
      courseD_collector_debugging4_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
        courseD_collector_debugging4_c: ამ ციკლს მხოლოდ ერთი ბლოკი აკლია. შეგილიათ
          მიხვდეთ, რომელი?
      courseD_collector_debugging4_2018_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
        courseD_collector_debugging4_c: ამ ციკლს მხოლოდ ერთი ბლოკი აკლია. შეგილიათ
          მიხვდეთ, რომელი?
      courseD_collector_debugging4a_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
      courseD_collector_debugging4a_2018_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
      courseD_collector_debugging5_authored_hint:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.

          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5_b: Once you have the first loop the way you want
          it, what is left over in your code?
      courseD_collector_debugging5_2018_authored_hint:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.

          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5_b: Once you have the first loop the way you want
          it, what is left over in your code?
      courseD_collector_debugging5a_authored_hint:
        courseD_collector_debugging5a_a: |-
          რა აკეთებს?

          რას უნდა აკეთებდეს?

          რას გეუბნებათ ეს?
        courseD_collector_debugging5a_b: როდესაც შეაგროვებთ განძეულობის პირველ რიგს,
          რა იქნება დარჩენილი შესასრულებლად თქვენს კოდში?
      courseD_collector_debugging5a_2018_authored_hint:
        courseD_collector_debugging5a_a: |-
          რა აკეთებს?

          რას უნდა აკეთებდეს?

          რას გეუბნებათ ეს?
        courseD_collector_debugging5a_b: როდესაც შეაგროვებთ განძეულობის პირველ რიგს,
          რა იქნება დარჩენილი შესასრულებლად თქვენს კოდში?
      courseD_collector_debugging6_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: როგორც ჩანს, ყველა საჭირ სვლა უკვე აქაა, თუმცა
          მეტი რაოდენობით გჭირდებათ. როგორ შეგიძლიათ გამოიყენოთ `შეგროვების` ქმედება
          რამდენჯერმე?
      courseD_collector_debugging6_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: როგორც ჩანს, ყველა საჭირ სვლა უკვე აქაა, თუმცა
          მეტი რაოდენობით გჭირდებათ. როგორ შეგიძლიათ გამოიყენოთ `შეგროვების` ქმედება
          რამდენჯერმე?
      courseD_collector_debugging6a_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: როგორც ჩანს, ყველა საჭირო ბლოკი უკვე სამუშაო
          სივრცეშია. თუ ამ ყველაფერმა დაგაბნიათ, სცადეთ "თავიდან დაწყების" ღილაკზე
          დაწკაპება.
      courseD_collector_debugging6a_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: როგორც ჩანს, ყველა საჭირო ბლოკი უკვე სამუშაო
          სივრცეშია. თუ ამ ყველაფერმა დაგაბნიათ, სცადეთ "თავიდან დაწყების" ღილაკზე
          დაწკაპება.
      courseD_collector_debugging7_authored_hint:
        courseD_collector_debugging7_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging7_b: If something needs to happen several times,
          try adding a `repeat` loop.
        courseD_collector_debugging7_c: თუ პრობლემას გადაეყარეთ, სცადეთ სვლების ფურცელზე
          დაწეროთ და შემდეგ შესაბამისი მიმდევრობით განალაგოთ ბლოკები.
      courseD_collector_debugging8_authored_hint:
        courseD_collector_debugging8_a: Do you see a pattern that you can simplify
          with a loop?
        courseD_collector_debugging8_b: Try using a nested loop to make this code
          shorter.
      courseD_collector_debugging8_2018_authored_hint:
        courseD_collector_debugging8_a: Do you see a pattern that you can simplify
          with a loop?
        courseD_collector_debugging8_b: Try using a nested loop to make this code
          shorter.
      courseD_collector_debugging8a_authored_hint: []
      courseD_collector_debugging8a_2018_authored_hint: []
      courseD_collector_debugging9_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging9_2018_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging9a_authored_hint: []
      courseD_collector_debugging9a_2018_authored_hint: []
      courseD_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "ყურადღება გაამახვილეთ პირველი ორი
          გროვიდან ორი ძვირფასი ქვის შეგროვებაზე.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png)\nგამოიყენეთ ეს ბლოკები.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">მოძრაობაწინ</title>\n\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "შემდეგ, შეაგროვეთ ამ მწკრივში დარჩენილი
          ძვირფასი ქვები.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png)\nდაამატეთ ეს ბლოკები თქვენს პროგრამაში.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">მოძრაობაუკან</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "საბოლოოდ, შეაგროვეთ დარჩენილი განძი.
          დაამატეთ ეს ბლოკები თქვენს პროგრამაში.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">მობრუნებამარჯვნივ</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          ესეც ამ თავსატეხის სრული ამონახსნი.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_debugging_challenge2_2018_authored_hint:
        courseD_collector_debugging_challenge2_a: "ყურადღება გაამახვილეთ პირველი ორი
          გროვიდან ორი ძვირფასი ქვის შეგროვებაზე.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png)\nგამოიყენეთ ეს ბლოკები.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">მოძრაობაწინ</title>\n\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "შემდეგ, შეაგროვეთ ამ მწკრივში დარჩენილი
          ძვირფასი ქვები.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png)\nდაამატეთ ეს ბლოკები თქვენს პროგრამაში.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">მოძრაობაუკან</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "საბოლოოდ, შეაგროვეთ დარჩენილი განძი.
          დაამატეთ ეს ბლოკები თქვენს პროგრამაში.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">მობრუნებამარჯვნივ</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          ესეც ამ თავსატეხის სრული ამონახსნი.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: არ დაგავიწყდეთ, რომ შეგიძლიათ `გაიმეოროთ`
          როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ `გაიმეოროთ`
          `გამეორების` ბლოკი!
        courseD_bee_nested_loops_challenge2_b: 4-ვე ძვირფასი ქვის შესაგროვებლად ჯერ
          გამოიყენეთ ციკლი, რათა მოშორდეთ ცენტრს. შებრუნდით მარცხნივ ან მარჯვნივ,
          შემდეგ გამოიყენეთ ჩასმული ციკლი, რათა იმოძრავოთ განძის ერთი ბლოკიდან მეორისკენ.
          თუ გაიმეორებთ ჩადგმულ ციკლს საკმარისი რაოდენობით, შემგროვებელი მოივლის *მთლიან*
          გვირაბს!
        courseD_bee_nested_loops_challenge2_c: უმოკლესი პროგრამა, რომელიც აგროვებს
          მთელ განძს იყენებს ერთ `შეგროვების` ბლოკს და ორ მობრუნებას.
        courseD_bee_nested_loops_challenge2_d: |-
          **ამოხსნა:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_a: არ დაგავიწყდეთ, რომ შეგიძლიათ `გაიმეოროთ`
          როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ `გაიმეოროთ`
          `გამეორების` ბლოკი!
        courseD_bee_nested_loops_challenge2_b: 4-ვე ძვირფასი ქვის შესაგროვებლად ჯერ
          გამოიყენეთ ციკლი, რათა მოშორდეთ ცენტრს. შებრუნდით მარცხნივ ან მარჯვნივ,
          შემდეგ გამოიყენეთ ჩასმული ციკლი, რათა იმოძრავოთ განძის ერთი ბლოკიდან მეორისკენ.
          თუ გაიმეორებთ ჩადგმულ ციკლს საკმარისი რაოდენობით, შემგროვებელი მოივლის *მთლიან*
          გვირაბს!
        courseD_bee_nested_loops_challenge2_c: უმოკლესი პროგრამა, რომელიც აგროვებს
          მთელ განძს იყენებს ერთ `შეგროვების` ბლოკს და ორ მობრუნებას.
        courseD_bee_nested_loops_challenge2_d: |-
          **ამოხსნა:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2a_authored_hint:
        courseD_collector_nested_loops_challenge2a_a: არ დაგავიწყდეთ, რომ შეგიძლიათ
          `გაიმეოროთ` როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ
          `გაიმეოროთ` `გამეორების` ბლოკი!
        courseD_collector_nested_loops_challenge2a_b: Can you figure out how to get
          all four gems without using any more blocks than it takes to get two?
      courseD_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          ყოველი მხრიდან ოთხი `წინ გადაადგილების` ბლოკის გამოყენების მაგივრად, სცადეთ `გამეორების` ციკლში ერთი `წინ გადაადგილების` ბლოკის განთავსება. ასე გააკეთეთ:
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: არ დაგავიწყდეთ ერთი განძეულობის შეაგროვება, შემდეგ
          მოტრიალდით, რომ კვარდატის ახალი გვერდი გამოიკვლიოთ!
        courseD_artist_ramp10_c: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ ჩასვათ
          ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseD_collector_ramp8_authored_hint:
        courseD_collector_ramp8_a: როდესაც მიაღწევთ განძის შემცველ კვადრატს, გამოიყენეთ
          `შეგროვების` ბლოკი მის ასაღებად. ამ თავსატეხში თქვენ დაგჭირდებათ განძის
          შეგროვება ერთზე მეტჯერ!
        courseD_collector_ramp8_b: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseD_collector_ramp9_authored_hint:
        courseD_collector_ramp9_a: დაიწყეთ ლაურიელის პირველ განძთან მიყვანით და განძის
          შეგროვებით. შეგიძლიათ გაიმეოროთ ეს მიმდევრობა მეორე გროვის ასაღებად?
        courseD_collector_ramp9_b: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ
          ჩასვათ ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseD_collector_until_challenge1_authored_hint: []
      courseD_debugging_1_authored_hint:
        courseD_debugging_1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_debugging_1_b: Do you see any patterns that could be made more simple
          using a `repeat` loop?
      courseD_debugging_2_authored_hint:
        courseD_debugging_2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_debugging_2_b: Do you see a pattern?  Try using nested loops to solve
          this puzzle.
      courseD_debugging_3_authored_hint:
        courseD_debugging_3_a: Is there any place where the bee does something that
          doesn't make sense? What happens when you change those blocks?
        courseD_debugging_3_b: Try simplifying the code using nested loops.
      courseD_debugging_4_authored_hint:
        courseD_debugging_4_a: "Try using the debugging process a couple of times
          in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed,
          what goes wrong?"
        courseD_debugging_4_b: "If you're having a hard time figuring out how to make
          the stair step pattern, try tracing it with your finger and saying the commands
          out loud. \n\nDon't forget to point out the direction of the turns!"
      courseD_debugging_5_authored_hint:
        courseD_debugging_5_a: |-
          Start by looking at just the first loop.

          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_debugging_5_b: Once you have the first loop the way you want it, what
          is left over in your code?
        courseD_debugging_5_c: |-
          Try wrapping the leftover loop around the rest of your completed code.  Does is work now?

          If not, what is still going wrong?
      courseD_debugging_6_authored_hint:
        courseD_debugging_6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_debugging_6_b: It looks like all of the right steps are here, you
          just need more of them.  How can you repeat the `get nectar` and `make honey`
          actions multiple times?
      courseD_external_cond_authored_hint: []
      courseD_farmer_condLoops1_authored_hint:
        courseD_farmer_condLoops1_a: You will need to look for corn 5 times, using
          a repeat loop.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you
          might try to pick something that's not there!
      courseD_farmer_condLoops1_2018_authored_hint:
        courseD_farmer_condLoops1_a: You will need to look for corn 5 times, using
          a repeat loop.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you
          might try to pick something that's not there!
      courseD_farmer_condLoops2_authored_hint:
        courseD_farmer_condLoops2_a: 'The best way to do this is to nest `if` statements
          by placing one inside of the other.  '
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else`
          statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: |-
          თქვენი `თუ` ბრძანება შეიძლება ასე გამოიყურებოდეს:

          -თუ სიმინდია
          -აიღე სიმინდი
          -სხვაგვარად
          -თუ სალათია
          \t აიღე სალათი

          თუ იქ არაფერია, არაფერსაც არ აიღებთ!
      courseD_farmer_condLoops2_2018_authored_hint:
        courseD_farmer_condLoops2_a: 'The best way to do this is to nest `if` statements
          by placing one inside of the other.  '
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else`
          statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: |-
          თქვენი `თუ` ბრძანება შეიძლება ასე გამოიყურებოდეს:

          -თუ სიმინდია
          -აიღე სიმინდი
          -სხვაგვარად
          -თუ სალათია
          \t აიღე სალათი

          თუ იქ არაფერია, არაფერსაც არ აიღებთ!
      courseD_farmer_condLoops3_authored_hint:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.

          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else`
          statements and one plain `if` statement.
      courseD_farmer_condLoops3_2018_authored_hint:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.

          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else`
          statements and one plain `if` statement.
      courseD_farmer_condLoops4_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          No one knows how many heads of lettuce will grow from each sprout.

          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`სანამ` ციკლი მიხედავს ცარიელ
          სივრცეებსაც! იქიდან გამომდინარე, რომ სალათი არ არის, ის არ შეაგროვებს მას
          და კოდი გაგრძლედება."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: თქვენ შეგიძლიათ გამოიყენოთ,
          როგორც `სანამ წინ გზა არსებობს` ციკლი, ასევე `გამეორების ციკლი`, რათა მთლიანად
          შეაგროვოთ მოსავალი.
      courseD_farmer_condLoops4_2018_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          No one knows how many heads of lettuce will grow from each sprout.

          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`სანამ` ციკლი მიხედავს ცარიელ
          სივრცეებსაც! იქიდან გამომდინარე, რომ სალათი არ არის, ის არ შეაგროვებს მას
          და კოდი გაგრძლედება."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: თქვენ შეგიძლიათ გამოიყენოთ,
          როგორც `სანამ წინ გზა არსებობს` ციკლი, ასევე `გამეორების ციკლი`, რათა მთლიანად
          შეაგროვოთ მოსავალი.
      courseD_farmer_condLoops4a_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          No one knows how many heads of lettuce will grow from each sprout.

          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
      courseD_farmer_condLoops5_authored_hint:
        courseD_farmer_condLoops5_a: 'ეს ახალი ციკლია: `გამეორება, სანამ გოგრაა`.
          შეგიძლიათ მიხვდეთ, თუ როგორ უნდა გამოიყენოთ ეს თავსატეხში?'
        courseD_farmer_condLoops5_b: ყოველ ადგილას შეიძლება იყოს ერთზე მეტი სიმინდი
          ან სალათი. გამოიყენეთ `სანამ` ციკლი, რათა შეაგროვოთ ყველა მათგანი!
      courseD_farmer_condLoops5_2018_authored_hint:
        courseD_farmer_condLoops5_a: 'ეს ახალი ციკლია: `გამეორება, სანამ გოგრაა`.
          შეგიძლიათ მიხვდეთ, თუ როგორ უნდა გამოიყენოთ ეს თავსატეხში?'
        courseD_farmer_condLoops5_b: ყოველ ადგილას შეიძლება იყოს ერთზე მეტი სიმინდი
          ან სალათი. გამოიყენეთ `სანამ` ციკლი, რათა შეაგროვოთ ყველა მათგანი!
      courseD_farmer_condLoops6_authored_hint:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop to move the farmer
          down each piece of the spiral.
        courseD_farmer_condLoops6_b: You only need to check for corn during most of
          the harvest.  Just pick one pumpkin at the very end of your program.
      courseD_farmer_condLoops6_2018_authored_hint:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop to move the farmer
          down each piece of the spiral.
        courseD_farmer_condLoops6_b: You only need to check for corn during most of
          the harvest.  Just pick one pumpkin at the very end of your program.
      courseD_farmer_condLoops7_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `when path ahead` to keep the farmer
          moving the right number of steps.
      courseD_farmer_condLoops7_2018_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `when path ahead` to keep the harvester
          moving the right number of steps.
      courseD_farmer_condLoops8_authored_hint: []
      courseD_farmer_condLoops8_2018_authored_hint: []
      courseD_farmer_condLoops9_authored_hint: []
      courseD_farmer_condLoops9_2018_authored_hint: []
      courseD_farmer_condLoops9_predict1_authored_hint: []
      courseD_farmer_condLoops9_predict1_2018_authored_hint: []
      courseD_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: '"ნაბიჯის" ღილაკი შეიძლება ძალიან გამოგადგეთ
          ამ გამოწვევასთან გასამკლავებლად.'
        courseD_farmer_condLoops_challenge1_b: ჩვეულებრივ, თქვენ უბრალოდ `აიღებდით
          გოგრას` თუ გოგრასთან იქნებოდით. კიდევ რისი გაკეთება გიწევთ, თუ გოგრასთან
          იქნებით?
      courseD_farmer_condLoops_challenge1_2018_authored_hint:
        courseD_farmer_condLoops_challenge1_a: '"ნაბიჯის" ღილაკი შეიძლება ძალიან გამოგადგეთ
          ამ გამოწვევასთან გასამკლავებლად.'
        courseD_farmer_condLoops_challenge1_b: ჩვეულებრივ, თქვენ უბრალოდ `აიღებდით
          გოგრას` თუ გოგრასთან იქნებოდით. კიდევ რისი გაკეთება გიწევთ, თუ გოგრასთან
          იქნებით?
      courseD_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: ყოველ სივრცეში ბოსტნეულის სხვადასხვა
          რაოდენობაა. გამოიყენეთ `სანამ` ციკლი.
      courseD_farmer_condLoops_challenge2_2018_authored_hint:
        courseD_farmer_condLoops_challenge2_a: ყოველ სივრცეში ბოსტნეულის სხვადასხვა
          რაოდენობაა. გამოიყენეთ `სანამ` ციკლი.
      courseD_farmer_condLoops_challenge2_clone_authored_hint: []
      courseD_farmer_conditionals10_authored_hint: []
      courseD_farmer_conditionals4_authored_hint:
        courseD_farmer_conditionals4_a: Instead of using a `repeat` loop, use a `while`
          loop to keep digging until the pile is gone.
      courseD_farmer_conditionals5_authored_hint:
        courseD_farmer_conditionals5a: Try nesting a `while` loop inside of a `repeat`
          loop.
      courseD_farmer_conditionals6_authored_hint:
        courseD_farmer_conditionals6_a: Make sure you're using the `while` loop to
          figure out how many times to fill each hole.
        courseD_farmer_conditionals6_b: Notice that the farmer needs to move forward
          and down several times in a stair-step pattern.
      courseD_farmer_conditionals7_authored_hint:
        courseD_farmer_conditionals8_a: The `while path ahead` block lets you keep
          going, even if you don't know how many squares are in a path.
      courseD_farmer_conditionals8_authored_hint:
        courseD_farmer_conditionals8_a: You are going to need to use more than one
          `while` loop.
        courseD_farmer_conditionals8_b: Every hole is at the end of a path, so use
          `while path ahead` before using `while there is a hole`.
        courseD_farmer_conditionals8_c: Notice that you need to repeat the `while
          path ahead`, `while there is a hole` code six times.
      courseD_farmer_conditionals9_authored_hint: []
      courseD_farmer_until_challenge2_authored_hint: []
      courseD_farmer_until_challenge2_2018_authored_hint: []
      courseD_farmer_while1_authored_hint:
        courseD_farmer_while1_a: გროვის ასაღებად თქვენ მოგიწევთ წინ ოთხჯერ გადაადგილება.
          შეგიძლიათ თუ არა გამოიყენოთ ამისთვის `გამეორების` ციკლი?
        courseD_farmer_while1_b: მიწის ამოსაღებად გამოიყენეთ ბლოკი `ამოიღე 1`, როდესაც
          იდგებით მიწის გროვაზე.
      courseD_farmer_while10_authored_hint: []
      courseD_farmer_while10_2018_authored_hint: []
      courseD_farmer_while10_predict2_authored_hint: []
      courseD_farmer_while10_predict2_2018_authored_hint: []
      courseD_farmer_while1_2018_authored_hint:
        courseD_farmer_while1_a: გროვის ასაღებად თქვენ მოგიწევთ წინ ოთხჯერ გადაადგილება.
          შეგიძლიათ თუ არა გამოიყენოთ ამისთვის `გამეორების` ციკლი?
        courseD_farmer_while1_b: მიწის ამოსაღებად გამოიყენეთ ბლოკი `ამოიღე 1`, როდესაც
          იდგებით მიწის გროვაზე.
      courseD_farmer_while2_authored_hint:
        courseD_farmer_while2_a: ხვრელთან მისასვლელად მხოლოდ ერთხელ მოგიწევთ გადაადგილება.
        courseD_farmer_while2_b: თქვენი მოგიწევთ `შეავსე 1` ბლოკის გამოყენება ექვსჯერ.
          შეგიძლიათ სიმარტივისთვის ციკლის გამოყენება?
      courseD_farmer_while2_2018_authored_hint:
        courseD_farmer_while2_a: ხვრელთან მისასვლელად მხოლოდ ერთხელ მოგიწევთ გადაადგილება.
        courseD_farmer_while2_b: თქვენი მოგიწევთ `შეავსე 1` ბლოკის გამოყენება ექვსჯერ.
          შეგიძლიათ სიმარტივისთვის ციკლის გამოყენება?
      courseD_farmer_while3_authored_hint:
        courseD_farmer_while3_a: ციკლი დაგეხმარებათ კოდის გამარტივებაში.
        courseD_farmer_while3_b: წესით, გროვასთან მისასვლელად არ უნდა დაგჭირდეთ `მობრუნების`
          ბლოკები.
      courseD_farmer_while3_2018_authored_hint:
        courseD_farmer_while3_a: ციკლი დაგეხმარებათ კოდის გამარტივებაში.
        courseD_farmer_while3_b: წესით, გროვასთან მისასვლელად არ უნდა დაგჭირდეთ `მობრუნების`
          ბლოკები.
      courseD_farmer_while4_authored_hint:
        courseD_farmer_conditionals4_a: Instead of using a `repeat` loop, use a `while`
          loop to keep digging until the pile is gone.
        courseD_farmer_conditionals4_b: ეს ძალიან ჰგავს წინა თავსატეხს, განსხვავება
          მხოლოდ იმაშია, თუ რომელი ციკლში გჭირდებათ.
      courseD_farmer_while4_2018_authored_hint:
        courseD_farmer_conditionals4_a: Instead of using a `repeat` loop, use a `while`
          loop to keep digging until the pile is gone.
        courseD_farmer_conditionals4_b: ეს ძალიან ჰგავს წინა თავსატეხს, განსხვავება
          მხოლოდ იმაშია, თუ რომელი ციკლში გჭირდებათ.
      courseD_farmer_while4_predict1_authored_hint: []
      courseD_farmer_while4_predict1_2018_authored_hint: []
      courseD_farmer_while5_authored_hint:
        courseD_farmer_conditionals5a_a: Try nesting a `while` loop inside of a `repeat`
          loop.
        courseD_farmer_conditionals5a_b: მწკრივის ბოლოში მისასვლელად ფერმერი უნდა
          გადაადგილდეს წინ ჯამში ხუთჯერ. კიდევ რა უნდა გააკეთოს ფერმერმა?
        courseD_farmer_conditionals5a_c: გადაადგილდით წინ 5-ჯერ. წინ ყოველ გადაადგილებაზე
          მოაშორეთ ერთი ნიჩაბი მიწა `სანამ გროვაა` ბლოკის გამოყენებით.
      courseD_farmer_while5_2018_authored_hint:
        courseD_farmer_conditionals5a_a: Try nesting a `while` loop inside of a `repeat`
          loop.
        courseD_farmer_conditionals5a_b: მწკრივის ბოლოში მისასვლელად ფერმერი უნდა
          გადაადგილდეს წინ ჯამში ხუთჯერ. კიდევ რა უნდა გააკეთოს ფერმერმა?
        courseD_farmer_conditionals5a_c: გადაადგილდით წინ 5-ჯერ. წინ ყოველ გადაადგილებაზე
          მოაშორეთ ერთი ნიჩაბი მიწა `სანამ გროვაა` ბლოკის გამოყენებით.
      courseD_farmer_while6_authored_hint:
        courseD_farmer_conditionals6_a: Make sure you're using the `while` loop to
          figure out how many times to fill each hole.
        courseD_farmer_conditionals6_b: Notice that the farmer needs to move forward
          and down several times in a stair-step pattern.
        courseD_farmer_conditionals6_c: |-
          კიბის საფეხურების ნიმუში იყენებს შემდეგ ბლოკებს
          - წინ გადაადგილება
          - ხვრელის გავსება
          - მარჯვნივ მობრუნება
          - წინ გადაადგილება
          - ხვრელის გავსება
          - მარცხნივ მობრუნება

          რამდენჯერ უნდა გამოიყენოთ ეს ნიმუში?

          დარწმუნდით, რომ იყენებთ `როდესაც ხვრელია` ბლოკის მის გასავსებად.
      courseD_farmer_while6_2018_authored_hint:
        courseD_farmer_conditionals6_a: Make sure you're using the `while` loop to
          figure out how many times to fill each hole.
        courseD_farmer_conditionals6_b: Notice that the farmer needs to move forward
          and down several times in a stair-step pattern.
        courseD_farmer_conditionals6_c: |-
          კიბის საფეხურების ნიმუში იყენებს შემდეგ ბლოკებს
          - წინ გადაადგილება
          - ხვრელის გავსება
          - მარჯვნივ მობრუნება
          - წინ გადაადგილება
          - ხვრელის გავსება
          - მარცხნივ მობრუნება

          რამდენჯერ უნდა გამოიყენოთ ეს ნიმუში?

          დარწმუნდით, რომ იყენებთ `როდესაც ხვრელია` ბლოკის მის გასავსებად.
      courseD_farmer_while7_authored_hint:
        courseD_farmer_conditionals8_a: The `while path ahead` block lets you keep
          going, even if you don't know how many squares are in a path.
        courseD_farmer_conditionals8_b: "`სანამ წინ გზაა` ციკლის გამეორების ციკლში
          განლაგება დაგეხმარებათ ამ თავსატეხის ამოხსნაში."
        courseD_farmer_conditionals8_c: რა უნდა გააკეთოთ ყოველი გზის ბოლოს?
      courseD_farmer_while7_2018_authored_hint:
        courseD_farmer_conditionals8_a: The `while path ahead` block lets you keep
          going, even if you don't know how many squares are in a path.
        courseD_farmer_conditionals8_b: "`სანამ წინ გზაა` ციკლის გამეორების ციკლში
          განლაგება დაგეხმარებათ ამ თავსატეხის ამოხსნაში."
        courseD_farmer_conditionals8_c: რა უნდა გააკეთოთ ყოველი გზის ბოლოს?
      courseD_farmer_while8_authored_hint:
        courseD_farmer_conditionals8_a: You are going to need to use more than one
          `while` loop.
        courseD_farmer_conditionals8_b: Every hole is at the end of a path, so use
          `while path ahead` before using `while there is a hole`.
        courseD_farmer_conditionals8_c: Notice that you need to repeat the `while
          path ahead`, `while there is a hole` code six times.
      courseD_farmer_while8_2018_authored_hint:
        courseD_farmer_conditionals8_a: You are going to need to use more than one
          `while` loop.
        courseD_farmer_conditionals8_b: Every hole is at the end of a path, so use
          `while path ahead` before using `while there is a hole`.
        courseD_farmer_conditionals8_c: Notice that you need to repeat the `while
          path ahead`, `while there is a hole` code six times.
      courseD_farmer_while9_authored_hint: []
      courseD_farmer_while9_2018_authored_hint: []
      courseD_farmer_while_challenge1_authored_hint:
        courseD_farmer_while_challenge1_a: ყოველი ხვრელი ან გროვა განლაგებულია გზის
          ბოლოდამ ერთი ნაბიჯით **უკან**.
        courseD_farmer_while_challenge1_b: თუ გამოიყენებთ `სანამ` ციკლს, შეძლებთ უთხრათ
          ფერმერს, რომ მოაშოროს გროვა ან შეავსოს ხვრელი მაშინაც კი, როდესაც ისინი
          იქვე არ არის. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ დააპროგრამოთ ის ისე,
          რომ ფერმერმა ამოიღოს ნებისმიერი მიწის გროვა და შეავსოს ნებისმიერ ხვრელი,
          იმის მიუხედავად თუ სადაა ის განლაგებული.
        courseD_farmer_conditionals8_c: ამის ამოხსნა შესაძლებელია `გამეორების` ციკლების
          გამოყენების გარეშე. ამისთვის თქვენ დაგჭირდებათ ოთხი `სანამ` ციკლის გამოყენება.
      courseD_farmer_while_challenge1_2018_authored_hint:
        courseD_farmer_while_challenge1_a: ყოველი ხვრელი ან გროვა განლაგებულია გზის
          ბოლოდამ ერთი ნაბიჯით **უკან**.
        courseD_farmer_while_challenge1_b: თუ გამოიყენებთ `სანამ` ციკლს, შეძლებთ უთხრათ
          ფერმერს, რომ მოაშოროს გროვა ან შეავსოს ხვრელი მაშინაც კი, როდესაც ისინი
          იქვე არ არის. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ დააპროგრამოთ ის ისე,
          რომ ფერმერმა ამოიღოს ნებისმიერი მიწის გროვა და შეავსოს ნებისმიერ ხვრელი,
          იმის მიუხედავად თუ სადაა ის განლაგებული.
        courseD_farmer_conditionals8_c: ამის ამოხსნა შესაძლებელია `გამეორების` ციკლების
          გამოყენების გარეშე. ამისთვის თქვენ დაგჭირდებათ ოთხი `სანამ` ციკლის გამოყენება.
      courseD_farmer_while_challenge2_authored_hint:
        courseD_farmer_while_challenge1_a: ყოველი ხვრელი ან გროვა განლაგებულია გზის
          ბოლოდამ ერთი ნაბიჯით **უკან**.
        courseD_farmer_while_challenge1_b: თუ გამოიყენებთ `სანამ` ციკლს, შეძლებთ უთხრათ
          ფერმერს, რომ ამოიღოს გროვა ან შეავსოს ხვრელი მაშინაც კი, როდესაც ისინი იქ
          არ არიან. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ დააპროგრამოთ ის ისე, რომ
          მან ამოიღოს მიწის გროვები და გაავსოს ხვრელები ერთ ადილზე დგომისას.
        courseD_farmer_conditionals8_c: ამის ამოხსნა შესაძლებელია `გამეორების` ციკლების
          გამოყენების გარეშე. ამისთვის თქვენ დაგჭირდებათ ოთხი `სანამ` ციკლის გამოყენება.
      courseD_farmer_while_challenge2_2018_authored_hint:
        courseD_farmer_while_challenge1_a: ყოველი ხვრელი ან გროვა განლაგებულია გზის
          ბოლოდამ ერთი ნაბიჯით **უკან**.
        courseD_farmer_while_challenge1_b: თუ გამოიყენებთ `სანამ` ციკლს, შეძლებთ უთხრათ
          ფერმერს, რომ ამოიღოს გროვა ან შეავსოს ხვრელი მაშინაც კი, როდესაც ისინი იქ
          არ არიან. ეს იმას ნიშნავს, რომ თქვენ შეგიძლიათ დააპროგრამოთ ის ისე, რომ
          მან ამოიღოს მიწის გროვები და გაავსოს ხვრელები ერთ ადილზე დგომისას.
        courseD_farmer_conditionals8_c: ამის ამოხსნა შესაძლებელია `გამეორების` ციკლების
          გამოყენების გარეშე. ამისთვის თქვენ დაგჭირდებათ ოთხი `სანამ` ციკლის გამოყენება.
      courseD_harvester_nested_loops_challenge1-broken_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: სავარაუდოდ, თქვენ უკვე გამოიყენეთ
          ციკლი, რათა შექმნათ ტეხილის მსგავსი ნიმუში. თუ გახსოვთ ეს ალგორითმი, შეგიძლიათ
          შეიტანოთ მასში მცირე ცვლილებები.
      courseD_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: სავარაუდოდ, თქვენ უკვე გამოიყენეთ
          ციკლი, რათა შექმნათ ტეხილის მსგავსი ნიმუში. თუ გახსოვთ ეს ალგორითმი, შეგიძლიათ
          შეიტანოთ მასში მცირე ცვლილებები.
        courseD_harvester_nested_loops_challenge1_b: To collect more than one piece
          of corn, you need to use `pick corn` more than one time.
        courseD_harvester_nested_loops_challenge1_c: You will need to put a small
          loop inside of your main loop to solve this puzzle!
      courseD_harvester_nested_loops_challenge1_2018_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: სავარაუდოდ, თქვენ უკვე გამოიყენეთ
          ციკლი, რათა შექმნათ ტეხილის მსგავსი ნიმუში. თუ გახსოვთ ეს ალგორითმი, შეგიძლიათ
          შეიტანოთ მასში მცირე ცვლილებები.
        courseD_harvester_nested_loops_challenge1_b: To collect more than one piece
          of corn, you need to use `pick corn` more than one time.
        courseD_harvester_nested_loops_challenge1_c: You will need to put a small
          loop inside of your main loop to solve this puzzle!
      courseD_iceage_loops1_authored_hint:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:
          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops2_authored_hint:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Use this new block!
          <xml><block type="controls_repeat_dropdown">
          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put
          the block you want repeated inside.
      courseD_iceage_loops4_authored_hint:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get
          to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops6_authored_hint:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward`
          blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseD_iceage_loops8_authored_hint:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops9_authored_hint:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_maze_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge1_a: არ დაგავიწყდეთ, რომ შეგიძლიათ `გაიმეოროთ`
          როგორც ერთი ბრძანება, ასევე უფრო გრძელი კოდი. თქვენ ასევე შეგიძლიათ `გაიმეოროთ`
          `გამეორების` ბლოკი!
        courseD_bee_nested_loops_challenge1_b: 4-ვე ძვირფასი ქვის შესაგროვებლად ჯერ
          გამოიყენეთ ციკლი, რათა მოშორდეთ ცენტრს. შებრუნდით მარცხნივ ან მარჯვნივ,
          შემდეგ გამოიყენეთ ჩასმული ციკლი, რათა იმოძრავოთ განძის ერთი ბლოკიდან მეორისკენ.
          თუ გაიმეორებთ ჩადგმულ ციკლს საკმარისი რაოდენობით, შემგროვებელი მოივლის *მთლიან*
          გვირაბს!
        courseD_bee_nested_loops_challenge1_c: უმოკლესი პროგრამა, რომელიც აგროვებს
          მთელ განძს იყენებს ერთ `შეგროვების` ბლოკს და ორ მობრუნებას.
      courseD_maze_nestedLoops3_authored_hint:
        courseD_maze_nestedLoops3_a: To solve this puzzle, you will need to "nest"
          one `repeat` loop inside of another `repeat` loop.
        courseD_maze_nestedLoops3_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
        courseD_maze_nestedLoops3_c: სცადეთ კოდის დაწერა სწორი გზისთვის და მობრუნებისთვის.
          შეგიძლიათ გაიმეოროთ ეს მზესუმზირასთან მისასვლელად?
      courseD_maze_nestedLoops3_2018_authored_hint:
        courseD_maze_nestedLoops3_a: To solve this puzzle, you will need to "nest"
          one `repeat` loop inside of another `repeat` loop.
        courseD_maze_nestedLoops3_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
        courseD_maze_nestedLoops3_c: სცადეთ კოდის დაწერა სწორი გზისთვის და მობრუნებისთვის.
          შეგიძლიათ გაიმეოროთ ეს მზესუმზირასთან მისასვლელად?
      courseD_maze_nestedLoops4_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Try using this path through the maze.

          ![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)
        courseD_maze_nestedLoops4_b: If the loop pattern is hard to see, try coding
          it all out first and see what things repeat over and over before you put
          the loops in.
        courseD_maze_nestedLoops4_c: Try using one `repeat` loop inside of another
          to cut down on the amount of code you need.
      courseD_maze_nestedLoops4_2018_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Try using this path through the maze.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: If the loop pattern is hard to see, try coding
          it all out first and see what code repeats over and over before you put
          the loops in.
        courseD_maze_nestedLoops4_c: Try using one `repeat` loop inside of another
          to cut down on the amount of code you need.
      courseD_maze_nestedLoops5_authored_hint:
        courseD_maze_nestedLoops5_a: Look for a stair-step pattern in this maze to
          find where a nested loop can be used.
        courseD_maze_nestedLoops5_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
      courseD_maze_nestedLoops5_2018_authored_hint:
        courseD_maze_nestedLoops5_a: Look for a stair-step pattern in this maze to
          find where a nested loop can be used.
        courseD_maze_nestedLoops5_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
      courseD_maze_nestedLoops6_authored_hint:
        courseD_maze_nestedLoops6_a: If you are stuck, try writing out the code out
          on paper without loops first and look for patterns.
        courseD_maze_nestedLoops6_b: Nesting `repeat` loops can help decrease the
          number of blocks used.
        courseD_maze_nestedLoops6_c: It will take two sets of nested `repeat` loops
          to solve this puzzle.
      courseD_maze_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: If you are stuck, try writing out the code out
          on paper without loops first and look for patterns.
        courseD_maze_nestedLoops6_b: Nesting `repeat` loops can help decrease the
          number of blocks used.
        courseD_maze_nestedLoops6_c: It will take two sets of nested `repeat` loops
          to solve this puzzle.
      courseD_maze_ramp1_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          all three of the blocks have been fully clicked together, then click "Run"
          again.
        courseC_maze_programming1_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          all three of the blocks have been fully clicked together, then click "Run"
          again.
        courseC_maze_programming1_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: დარწმუნდით, რომ დაკლიკვა ხდება სამივე ბლოკზე
          და ის დაკავშირებულია `როცა გაიშვება` ბლოკთან.
      courseD_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: დარწმუნდით, რომ დაკლიკვა ხდება სამივე ბლოკზე
          და ის დაკავშირებულია `როცა გაიშვება` ბლოკთან.
      courseD_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
      courseD_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
      courseD_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the pig.
      courseD_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the pig.
      courseD_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp5a_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp5a_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp5b_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp5b_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: გახსოვდეთ, რომ მობრუნებები ჩიტის პერსპერქტივიდან
          იგულისხმება.
        courseC_maze_programming5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_maze_ramp5c_authored_hint: []
      courseD_maze_ramp5c_2018_authored_hint: []
      courseD_maze_ramp5d_authored_hint: []
      courseD_maze_ramp5d_2018_authored_hint: []
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseC_maze_programming6_b: ჩიტი თავიდან სახით კედლისკენ დგას, ამიტომ არ
          დაგავიწყდეთ მოძრაობის დაწყებამდე მობრუნება.
        courseC_maze_programming6_c: გახსოვდეთ, რომ შეგიძლიათ კოდის ერთი ნაწილი დაწეროთ,
          შემდეგ კი "გაშვების" ღილაკზე დაჭერით ნახოთ, თუ რისი გაკეთება მოგიწევთ შემდეგ.
      courseD_maze_ramp6a_authored_hint:
        courseC_maze_programming6a_a: გაოიყენეთ `გამეორების` ციკლი, იმისათვის რომ
          ეს ჩიტი აამოძრავოთ!
      courseD_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseD_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseD_maze_ramp7_c: თუ საკუთარი კოდის გამარტივება გსურთ, შეგიძლიათ ჩასვათ
          ერთი ციკლი მეორეში! ამას ეწოდება **ჩასმული ციკლი**.
      courseD_maze_until1_authored_hint:
        courseD_maze_until1_a: ხედავთ თუ არა მიმდევრობებს, რომელთა ციკლში მოთავსებითაც
          კოდი შემოკლდება?
        courseD_maze_until1_b: სცადეთ ჩასმული ციკლის გამოყენება ამ თავსატეხის ამოსახსნელად.
      courseD_maze_until10_authored_hint: []
      courseD_maze_until10_2018_authored_hint: []
      courseD_maze_until10_predict2_authored_hint: []
      courseD_maze_until10_predict2_2018_authored_hint: []
      courseD_maze_until1_2018_authored_hint:
        courseD_maze_until1_a: ხედავთ თუ არა მიმდევრობებს, რომელთა ციკლში მოთავსებითაც
          კოდი შემოკლდება?
        courseD_maze_until1_b: სცადეთ ჩასმული ციკლის გამოყენება ამ თავსატეხის ამოსახსნელად.
      courseD_maze_until2_authored_hint:
        courseD_maze_until2_a: An `until pig` loop will help you keep going until
          you succeed!
      courseD_maze_until2_predict1_authored_hint: []
      courseD_maze_until2_predict1_2018_authored_hint: []
      courseD_maze_until3_authored_hint:
        courseD_maze_until3_a: |-
          - What does your code do?
          - What is it supposed to do?
          - What does that tell you?
        courseD_maze_until3_b: თუ იჭედებით, სცადეთ ნაბიჯების ფურცელზე ამოწერა და განმეორებადი
          ნაწილების პოვნა.
        courseD_maze_until3_c: არის კიბის საფეხურის მსგავსი მიმდევრობა, რომელსაც შეგიძლიათ
          მიჰყვეთ ამ თავსატეხის ამოსახსნელად?
        courseD_maze_until3_d: არ დაგავიწყდეთ `გამეორება, სანამ` ბლოკის გამოყენება,
          რათა შეამოკლოთ თქვენი კოდი.
      courseD_maze_until3_2018_authored_hint:
        courseD_maze_until3_a: |-
          - What does your code do?
          - What is it supposed to do?
          - What does that tell you?
        courseD_maze_until3_b: თუ იჭედებით, სცადეთ ნაბიჯების ფურცელზე ამოწერა და განმეორებადი
          ნაწილების პოვნა.
        courseD_maze_until3_c: არის კიბის საფეხურის მსგავსი მიმდევრობა, რომელსაც შეგიძლიათ
          მიჰყვეთ ამ თავსატეხის ამოსახსნელად?
        courseD_maze_until3_d: არ დაგავიწყდეთ `გამეორება, სანამ` ბლოკის გამოყენება,
          რათა შეამოკლოთ თქვენი კოდი.
      courseD_maze_until4_authored_hint:
        courseD_maze_until4_a: |-
          Use the "Step" button to go through your code line by line.

          - Does everything work at the first step?
          - Does everything work at the second step?
          - Where does it go wrong?
        courseD_maze_until4_b: არის კიბის საფეხურის მსგავსი მიმდევრობა, რომელსაც შეგიძლიათ
          მიჰყვეთ ამ თავსატეხის ამოსახსნელად?
        courseD_maze_until4_c: არ დაგავიწყდეთ `გამეორება, სანამ` ბლოკის გამოყენება,
          რათა შეამოკლოთ თქვენი კოდი.
      courseD_maze_until4_2018_authored_hint:
        courseD_maze_until4_a: |-
          Use the "Step" button to go through your code line by line.

          - Does everything work at the first step?
          - Does everything work at the second step?
          - Where does it go wrong?
        courseD_maze_until4_b: არის კიბის საფეხურის მსგავსი მიმდევრობა, რომელსაც შეგიძლიათ
          მიჰყვეთ ამ თავსატეხის ამოსახსნელად?
        courseD_maze_until4_c: არ დაგავიწყდეთ `გამეორება, სანამ` ბლოკის გამოყენება,
          რათა შეამოკლოთ თქვენი კოდი.
      courseD_maze_until5_authored_hint:
        courseD_maze_until5_a: Don't forget to use `if path to the left` to keep the
          zombie checking for a place to turn.
        courseD_maze_until5_b: იმისათვის, რომ გამოიყენოთ მხოლოდ ერთი `წინ გადაადგილება`,
          ჩასვით ის `გამეორება მზესუმზირამდე` ბლოკში.
        courseD_maze_until5_c: თითოეული ნაბიჯის შემდეგ ზომბმა უნდა შეამოწმოს, არის
          თუ არა გზა მარცხნივ. როგორ უნდა მოიქცეს ის, როდესაც გზას იპოვის?
      courseD_maze_until5_2018_authored_hint:
        courseD_maze_until5_b: იმისათვის, რომ გამოიყენოთ მხოლოდ ერთი `წინ გადაადგილება`,
          ჩასვით ის `გამეორება მზესუმზირამდე` ბლოკში.
      courseD_maze_until6_authored_hint:
        courseD_maze_until6_a: This time, try the `if path to the right` to keep the
          zombie on track.
        courseD_maze_until6_b: იმისათვის, რომ გამოიყენოთ მხოლოდ ერთი `წინ გადაადგილება`,
          ჩასვით ის `გამეორება მზესუმზირამდე` ბლოკში.
        courseD_maze_until6_c: მიუხედავად იმისა, რომ წინა თავსატეხთან შედარებით აქ
          მეტი მობრუნებაა, თქვენი კოდი შეიძლება თითქმის იგივე იყოს, თუ `გამეორება
          სანამ` ბლოკს გამოიყენებთ!
      courseD_maze_until6_2018_authored_hint:
        courseD_maze_until6_b: იმისათვის, რომ გამოიყენოთ მხოლოდ ერთი `წინ გადაადგილება`,
          ჩასვით ის `გამეორება მზესუმზირამდე` ბლოკში.
      courseD_maze_until7_authored_hint:
        courseD_maze_until7_a: You don't need your code to be any longer, just because
          the maze is!
        courseD_maze_until7_b: მიუხედავად იმისა, რომ წინა თავსატეხთან შედარებით აქ
          მეტი მობრუნებაა, თქვენი კოდი შეიძლება თითქმის იგივე იყოს, თუ `გამეორება
          სანამ` ბლოკს გამოიყენებთ!
        courseD_maze_until7_c: არ დაგავიწყდეთ მარცხნივ გზების შემოწმება, რადგან მარჯვნივ
          მობრუნება არასწორ გზაზე დაგაყენებთ!
      courseD_maze_until7_2018_authored_hint:
        courseD_maze_until7_a: You don't need your code to be any longer than last
          time, just because the maze is!
        courseD_maze_until7_b: მიუხედავად იმისა, რომ წინა თავსატეხთან შედარებით აქ
          მეტი მობრუნებაა, თქვენი კოდი შეიძლება თითქმის იგივე იყოს, თუ `გამეორება
          სანამ` ბლოკს გამოიყენებთ!
      courseD_maze_until8_authored_hint:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the
          zombie headed the right direction.
        courseD_maze_until8_b: "`თუ/სხვაგვარად` ბლოკით: თუ არის გზა წინ, რა უნდა გააკეთოთ?"
        courseD_maze_until8_c: 'თქვენი `თუ/მაშინ` ბლოკით: თუ არ არის გზა წინ, რა უნდა
          გააკეთოთ?'
      courseD_maze_until8_2018_authored_hint:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the
          zombie headed the right direction.
        courseD_maze_until8_b: "`თუ/სხვაგვარად` ბლოკით: თუ არის გზა წინ, რა უნდა გააკეთოთ?"
        courseD_maze_until8_c: 'თქვენი `თუ/მაშინ` ბლოკით: თუ არ არის გზა წინ, რა უნდა
          გააკეთოთ?'
      courseD_maze_until9_authored_hint:
        courseD_maze_until8_a: Using `if path ahead` will keep you going forward whenever
          possible, helping you miss the paths with chompers.
        courseD_maze_until8_b: რა მიმართულებით უნდა შებრუნდეთ, თუ წინ გზა არ არის?
        courseD_maze_until8_c: არ დაგავიწყდეთ თქვენი `გამეორება სანამ` ბლოკის გამოყენება,
          მზესუმზირასთან მისასვლელად!
      courseD_maze_until9_2018_authored_hint:
        courseD_maze_until8_c: არ დაგავიწყდეთ თქვენი `გამეორება სანამ` ბლოკის გამოყენება,
          მზესუმზირასთან მისასვლელად!
      courseD_maze_until_challenge_authored_hint: []
      courseD_maze_until_challenge1-delete-this-copy_authored_hint: []
      courseD_maze_until_challenge1_authored_hint: []
      courseD_maze_until_challenge1_2018_authored_hint: []
      courseD_maze_until_challenge2_authored_hint: []
      courseD_playLab_cond1_authored_hint:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1
          up` block to the `when up arrow` event, then do the same for every other
          direction.
        courseD_playLab_cond1_b: გამოიყენეთ ჩამოსაშლელი მენიუები `როდესაც ისარი` და
          `მსახიობის გადაადგილება` ბლოკებზე, მათი მოძრაობის მიმართულების შესაცვლელად.
        courseD_playLab_cond1_c: არ დაგავიწყდეთ ცალფეხას დრაკონთან მიყვანა, როდესაც
          მთელ კოდს დაწერთ!
      courseD_playLab_cond1_2018_authored_hint:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1
          up` block to the `when up arrow` event, then do the same for every other
          direction.
        courseD_playLab_cond1_b: გამოიყენეთ ჩამოსაშლელი მენიუები `როდესაც ისარი` და
          `მსახიობის გადაადგილება` ბლოკებზე, მათი მოძრაობის მიმართულების შესაცვლელად.
        courseD_playLab_cond1_c: არ დაგავიწყდეთ ცალფეხას დრაკონთან მიყვანა, როდესაც
          მთელ კოდს დაწერთ!
      courseD_playLab_cond2_authored_hint:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point`
          block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond2_2018_authored_hint:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point`
          block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond3_authored_hint:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever`
          loop.  One will choose a random emotion for the dragon (actor 2) and the
          other will wait 1 second before going through the loop again.
      courseD_playLab_cond3_2018_authored_hint:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever`
          loop.  One will choose a random emotion for the dragon (actor 2) and the
          other will wait 1 second before going through the loop again.
      courseD_playLab_cond3a_authored_hint:
        courseD_playLab_cond3_c: "- `თუ` დრაკონი ბედნიერია \n  - `ქულის დამატება`\n
          \ - `ქულის დამატება`  \n  \n  \n \n- `სხვა შემთხვევაში` `ქულის დამატება`"
      courseD_playLab_cond3a_2018_authored_hint:
        courseD_playLab_cond3_c: "- `თუ` დრაკონი ბედნიერია \n  - `ქულის დამატება`\n
          \ - `ქულის დამატება`  \n  \n  \n \n- `სხვა შემთხვევაში` `ქულის დამატება`"
      courseD_playLab_cond3b_authored_hint:
        courseD_playLab_cond3b_a: "`მუდმივად გამეორების` ციკლში ბლოკების დამატება
          დაგჭირდებათ, რომ გააგრძელებინოთ დრაკონს მაღლა და დაბლა მოძრაობა"
      courseD_playLab_cond4_authored_hint:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get
          the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked
          ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the
          `when actor 1 touches actor 3` event.
      courseD_playLab_cond4_2018_authored_hint:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get
          the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked
          ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the
          `when actor 1 touches actor 3` event.
      courseD_playLab_cond5_authored_hint:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score`
          is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: შეგიძლიათ გქონდეთ ერთზე მეტი `მუდმივად გამეორების`
          ციკლი სამუშაო სივრცეში.
      courseD_playLab_cond5_2018_authored_hint:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score`
          is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: შეგიძლიათ გქონდეთ ერთზე მეტი `მუდმივად გამეორების`
          ციკლი სამუშაო სივრცეში.
      courseD_playLab_cond6_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning
          of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position >
          255` block inside of a `repeat forever` block to always check if the pirate
          is below the octopuses.
      courseD_playLab_cond6_2018_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning
          of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position >
          255` block inside of a `repeat forever` block to always check if the pirate
          is below the octopuses.
      courseD_playLab_cond6a_authored_hint:
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat
          forever` loop that checks the pirate position (but not inside the `if` statement)
          to keep points from being removed too quickly.
      courseD_playLab_cond6a_2018_authored_hint:
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat
          forever` loop that checks the pirate position (but not inside the `if` statement)
          to keep points from being removed too quickly.
      courseD_playLab_cond6cloneForTest_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning
          of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position >
          255` block inside of a `repeat forever` block to always check if the pirate
          is below the octopuses.
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat
          forever` loop that checks the pirate position (but not inside the `if` statement)
          to keep points from being removed too quickly.
      courseD_playLab_embed_cond6a_authored_hint: []
      courseD_playLab_embedded_authored_hint: []
      courseD_scrat_predict1_authored_hint: []
      courseD_scrat_predict1_2018_authored_hint: []
      courseD_scrat_ramp1_authored_hint:
        courseC_maze_programming1_a: თუ ციყვი რკოსთან არ მიდის, მაშინ შეამოწმეთ, რომ
          სამივე ბლოკი მიმაგრებულია ერთმანეთს და თავიდან დააწექით "გაშვებას".
        courseC_maze_programming1_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_scrat_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: თუ ციყვი რკოსთან არ მიდის, მაშინ შეამოწმეთ, რომ
          სამივე ბლოკი მიმაგრებულია ერთმანეთს და თავიდან დააწექით "გაშვებას".
        courseC_maze_programming1_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_scrat_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: დარწმუნდით, რომ სამივე `წინ გადაადგილების` ბლოკი
          მიმაგრებულია `გაშვებისას` ბლოკს.
      courseD_scrat_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: დარწმუნდით, რომ სამივე `წინ გადაადგილების` ბლოკი
          მიმაგრებულია `გაშვებისას` ბლოკს.
      courseD_scrat_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: გახსოვდეთ, მარჯვნივ და მარცხნივ მოხვევა ჩიტის
          პერსპექტივიდან განისაზღვრება.
      courseD_scrat_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: გახსოვდეთ, მარჯვნივ და მარცხნივ მოხვევა ჩიტის
          პერსპექტივიდან განისაზღვრება.
      courseD_scrat_ramp4_authored_hint:
        courseC_maze_programming4_a: ციყვის ხედვის არედან შეგიძლიათ შეუხვიოთ მარჯვნივ
          ან მარცხნივ. თუ მარჯვენა მიმართულების პირისპირ დგახართ, მარჯვნივ შეხვევა
          ქვემოთ მიგათითებინებთ.
        courseC_maze_programming4_b: იმისათვის რომ ამ ბილიკს გაყვეთ, იმოძრავეთ წინ
          და შეუხვიეთ ერთ ადგილას, შემდეგ გააგრძელეთ მოძრაობა და შეუხვიეთ საპირისპირო
          მიმართულებით. რკოსთან მისაღწევად კიდევ ერთხელ გადაადგილდით წინ.
        courseC_maze_programming4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_scrat_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: ციყვის ხედვის არედან შეგიძლიათ შეუხვიოთ მარჯვნივ
          ან მარცხნივ. თუ მარჯვენა მიმართულების პირისპირ დგახართ, მარჯვნივ შეხვევა
          ქვემოთ მიგათითებინებთ.
        courseC_maze_programming4_b: იმისათვის რომ ამ ბილიკს გაყვეთ, იმოძრავეთ წინ
          და შეუხვიეთ ერთ ადგილას, შემდეგ გააგრძელეთ მოძრაობა და შეუხვიეთ საპირისპირო
          მიმართულებით. რკოსთან მისაღწევად კიდევ ერთხელ გადაადგილდით წინ.
        courseC_maze_programming4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_scrat_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: რამდენად შორს უნდა გადაადგილდეთ კუთხემდე მისაღწევად?
        courseC_maze_programming5_c: რკოსმდე მისაღწევად კუთხესთან მარცხნივ მოხვევა
          დაგჭირდებათ.
      courseD_scrat_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: რამდენად შორს უნდა გადაადგილდეთ კუთხემდე მისაღწევად?
        courseC_maze_programming5_c: რკოსმდე მისაღწევად კუთხესთან მარცხნივ მოხვევა
          დაგჭირდებათ.
      courseD_scrat_ramp6_authored_hint:
        courseC_maze_programming6a_a: ციყვის ასამოძრავებლად გამოიყენეთ `გამეორების`
          ციკლი!
      courseD_scrat_ramp6_2018_authored_hint:
        courseC_maze_programming6a_a: ციყვის ასამოძრავებლად გამოიყენეთ `გამეორების`
          ციკლი!
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseD_scrat_programming6_b: გახსოვდეთ, რადგან ციყვი არასწორი მიმართულებით
          დგას, მოძრაობის დაწყებამდე ჯერ უნდა მოატრიალოთ.
        courseD_scrat_programming6_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseD_scrat_programming6_b: გახსოვდეთ, რადგან ციყვი არასწორი მიმართულებით
          დგას, მოძრაობის დაწყებამდე ჯერ უნდა მოატრიალოთ.
        courseD_scrat_programming6_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseD_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseD_maze_ramp7_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseD_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseD_maze_ramp7_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseE_artist_concept1_authored_hint:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree
          turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to
          write the code for a hexagon over and over again.
        courseE_artist_concept1_c: გამოიყენეთ `სიგანის დაყენების` ბლოკი თითოეული ფუნქციის
          გამოძახების წინ, კალმის სიგანის შესაცვლელად.
      courseE_artist_concept1_2018_authored_hint:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree
          turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to
          write the code for a hexagon over and over again.
        courseE_artist_concept1_c: გამოიყენეთ `სიგანის დაყენების` ბლოკი თითოეული ფუნქციის
          გამოძახების წინ, კალმის სიგანის შესაცვლელად.
      courseE_artist_concept4_authored_hint:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can
          you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What
          comes next?
        courseE_artist_concept4_c: კვადრატების მწკრივის დახატვის შემდეგ თქვენ შეგიძლიათ
          მობრუნდეთ და დახატოთ მარცხნივ მოძრავი კვადრატების მწკრივი ან გადახტეთ უკან,
          ფიგურის მარცხენა მხარეს, რომ დახატოთ მარჯვნივ მოძრავი კვადრატების მწკრივი.
          რომელი გირჩევნიათ?
      courseE_artist_concept4_2018_authored_hint:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can
          you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What
          comes next?
        courseE_artist_concept4_c: კვადრატების მწკრივის დახატვის შემდეგ თქვენ შეგიძლიათ
          მობრუნდეთ და დახატოთ მარცხნივ მოძრავი კვადრატების მწკრივი ან გადახტეთ უკან,
          ფიგურის მარცხენა მხარეს, რომ დახატოთ მარჯვნივ მოძრავი კვადრატების მწკრივი.
          რომელი გირჩევნიათ?
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: "ექვსკუთხედის ნახევარს აქვს \"30-ის ტოლი
          სიგრძე\" და ბრუნავს მარჯვნივ **60 გრადუსით**.\n  "
        courseE_artist_concept_challenge1_b: 'სამკუთხედის 2/3-ს აქვს **80-ის ტოლი
          სიგრძე** და ბრუნავს მარჯვნივ **120 გრადუსით**. '
        courseE_artist_concept_challenge1_c: |-
          ეს არის დიზაინი, რომელიც უნდა გაიმეოროთ, რომ შექმნათ სრული ფიგურა:

          ![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: "ექვსკუთხედის ნახევარს აქვს \"30-ის ტოლი
          სიგრძე\" და ბრუნავს მარჯვნივ **60 გრადუსით**.\n  "
        courseE_artist_concept_challenge1_b: 'სამკუთხედის 2/3-ს აქვს **80-ის ტოლი
          სიგრძე** და ბრუნავს მარჯვნივ **120 გრადუსით**. '
        courseE_artist_concept_challenge1_c: |-
          ეს არის დიზაინი, რომელიც უნდა გაიმეოროთ, რომ შექმნათ სრული ფიგურა:

          ![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: მას შემდეგ, რაც განსაზღვრავთ ფუნქციას,
          შეგიძლიათ გამოიძახოთ ის რამდენჯერაც გინდათ - როცა და სადაც გინდათ!
        courseE_artist_concept_challenge2_b: |-
          შეგიძლიათ, ამ ბრძანების გამოყენებით, ტილოს სხვადასხვა პოზიციაზე გადახტეთ:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2018_authored_hint:
        courseE_artist_concept_challenge2_a: მას შემდეგ, რაც განსაზღვრავთ ფუნქციას,
          შეგიძლიათ გამოიძახოთ ის რამდენჯერაც გინდათ - როცა და სადაც გინდათ!
        courseE_artist_concept_challenge2_b: |-
          შეგიძლიათ, ამ ბრძანების გამოყენებით, ტილოს სხვადასხვა პოზიციაზე გადახტეთ:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_embed_functions8_authored_hint: []
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: ყოველ კვადრატს აქვს 100 პიქსელის ტოლი გვერდი,
          რაც იმას ნიშნავს, რომ თქვენ მოგიწევთ 175 პიქსელით წინ გადაადგილება, სანამ
          მეორე კვადრატის ხატვას დაიწყებთ.
        courseE_artist_functions1_b: სათვალის ხატვისას ერთმანეთის გადამკვეთი ხაზების
          დახატვა დაშვებულია.
        courseE_artist_functions1_c: უფრო მოკლე კოდის მისაღებად, სცადეთ `გამეორების`
          ციკლის გამოყენება, რომ დახატოთ სათვალის კვადრატული ჩარჩო.
      courseE_artist_functions10_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, except
          the function draws a different kind of line.
        courseD_artist_functions10_a: To get around using multiple `move forward`
          blocks, create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          ხედავთ სად შეიძლება ამ ნახატმა გამოიყენოს ფუნქცია სახელად `ექვსკუთხედების მწკრივი`?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but
          the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks,
          create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          ხედავთ სად შეიძლება ამ ნახატმა გამოიყენოს ფუნქცია სახელად `ექვსკუთხედების მწკრივი`?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: ყოველ კვადრატს აქვს 100 პიქსელის ტოლი გვერდი,
          რაც იმას ნიშნავს, რომ თქვენ მოგიწევთ 175 პიქსელით წინ გადაადგილება, სანამ
          მეორე კვადრატის ხატვას დაიწყებთ.
        courseE_artist_functions1_b: სათვალის ხატვისას ერთმანეთის გადამკვეთი ხაზების
          დახატვა დაშვებულია.
        courseE_artist_functions1_c: უფრო მოკლე კოდის მისაღებად, სცადეთ `გამეორების`
          ციკლის გამოყენება, რომ დახატოთ სათვალის კვადრატული ჩარჩო.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_b: ფუნქია, რომელსაც დაწერთ, უნდა შეიცავდეს არა მთლიან
          პროგრამას, არამედ მხოლოდ იმ ნაწლის, რომელიც ხატავს კვადრატს 100 პიქსელი
          ზომის გვერდებით.
        courseD_artist_functions2_c: |-
          გამოიყენეთ მწვანე `კვადრატის დახატვის` ბლოკი, რომ "გამოიძახოთ" თქვენი ფუნქცია `როცა მირბის` ბლოკის ქვეშ. სხვანაირად თქვენი ფუნქციის კოდი არ გეშვება.
          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/>
          </block></xml>
        courseD_artist_functions2_a: |-
          თქვენი პროგრამა უნდა:
          - იყენებდეს ფუნქციას
          - მოძრაობდეს წინ 100 + 75 პიქსელით
          - იყენებდეს ფუნქციას
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_b: ფუნქია, რომელსაც დაწერთ, უნდა შეიცავდეს არა მთლიან
          პროგრამას, არამედ მხოლოდ იმ ნაწლის, რომელიც ხატავს კვადრატს 100 პიქსელი
          ზომის გვერდებით.
        courseD_artist_functions2_c: |-
          გამოიყენეთ მწვანე `კვადრატის დახატვის` ბლოკი, რომ "გამოიძახოთ" თქვენი ფუნქცია `როცა მირბის` ბლოკის ქვეშ. სხვანაირად თქვენი ფუნქციის კოდი არ გეშვება.
          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/>
          </block></xml>
        courseD_artist_functions2_a: |-
          თქვენი პროგრამა უნდა:
          - იყენებდეს ფუნქციას
          - მოძრაობდეს წინ 100 + 75 პიქსელით
          - იყენებდეს ფუნქციას
      courseE_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: თქვენს ციკლს შიგნით უნდა ჰქონდეს სამივე დასაწყები
          კოდის ბლოკი.
      courseE_artist_functions3_2018_authored_hint:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: თქვენს ციკლს შიგნით უნდა ჰქონდეს სამივე დასაწყები
          კოდის ბლოკი.
      courseE_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: ამოიღეთ `ვარსკვლავის დახატვის` ფუნქციის ბლოკი
          ინსტრუმენტების პანელიდან, რომ დაიწყოთ თქვენი ფუნქციის მშენებლობა. მას უნდა
          ჰქონდეს იგივე კოდი, რაც წინა თავსატეხს, ვინაიდან იგივე ვარსვკლავის ორნამენტს
          ხატავთ.
        courseD_artist_functions4_c: გამოიყენეთ მწვანე `ვარსკვლავის დახატვის` ბლოკი
          თქვენს მთავარ პროგრამაში ამ ფუნქციის გამოსაძახებლად. არ დაგავიწყდეთ ვარსკვლავებს
          შორის წინ გადახტომა!
      courseE_artist_functions4_2018_authored_hint:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: ამოიღეთ `ვარსკვლავის დახატვის` ფუნქციის ბლოკი
          ინსტრუმენტების პანელიდან, რომ დაიწყოთ თქვენი ფუნქციის მშენებლობა. მას უნდა
          ჰქონდეს იგივე კოდი, რაც წინა თავსატეხს, ვინაიდან იგივე ვარსვკლავის ორნამენტს
          ხატავთ.
        courseD_artist_functions4_c: გამოიყენეთ მწვანე `ვარსკვლავის დახატვის` ბლოკი
          თქვენს მთავარ პროგრამაში ამ ფუნქციის გამოსაძახებლად. არ დაგავიწყდეთ ვარსკვლავებს
          შორის წინ გადახტომა!
      courseE_artist_functions5_authored_hint:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
        courseD_artist_functions5_c: დაიწყეთ ვარსკვლავის ფორმის კოდის `ვარსკვლავის
          დახატვის` ფუნქციაში ჩასმით, შემდეგ კი გამოიყენეთ ეს ფუნქცია, რომ დახატოთ
          სამი ვარსკვლავი!
      courseE_artist_functions5_2018_authored_hint:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
        courseD_artist_functions5_c: დაიწყეთ ვარსკვლავის ფორმის კოდის `ვარსკვლავის
          დახატვის` ფუნქციაში ჩასმით, შემდეგ კი გამოიყენეთ ეს ფუნქცია, რომ დახატოთ
          სამი ვარსკვლავი!
      courseE_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll
          create a function for it in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops, where the inner
          loop makes the square and the outer loop rotates the square four times.
        grade4_artist_functions_windows0_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ
          ბლოკების დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი.
          ასე უკეთ მიხვდებით, რა ხდება.
      courseE_artist_functions6_2018_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll
          create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop
          will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ
          ბლოკების დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი.
          ასე უკეთ მიხვდებით, რა ხდება.
      courseE_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then adding
          in windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just
          jump the artist 100 pixels forward for each top window, and 150 pixels down
          to get the bottom windows.
      courseE_artist_functions7_2018_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then add windows
          one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just
          jump the artist 100 pixels between each top window, then down 150 pixels
          to get to the bottom windows.
      courseE_artist_functions8_authored_hint:
        courseD_artist_functions8_f: თქვენ გჭირდებათ მხოლოდ ერთი `წინ გადაადგილების`
          ბლოკი, მაგრამ ამის გარდა, დაგჭირდებათ რამდენიმე `წინ გადახტომის` და/ან `უკან
          გადახტომის` ბლოკი!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          კვადრატების ხაზის გასაკეთებლად,
          - გაიმეორეთ 3-ჯერ
          - დახატეთ კვადრატის **50 პიქსელი** სიგრძის გვერდებით
          - გადახტით წინ **100 პიქსელით**
        courseD_artist_functions8_b: After your first line of squares, you need to
          move the artist down and back before you start your second line of squares.
        courseD_artist_functions8_c: You should move the artist back a different number
          of pixels for even lines than for odd ones.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018_authored_hint:
        courseD_artist_functions8_f: თქვენ გჭირდებათ მხოლოდ ერთი `წინ გადაადგილების`
          ბლოკი, მაგრამ ამის გარდა, დაგჭირდებათ რამდენიმე `წინ გადახტომის` და/ან `უკან
          გადახტომის` ბლოკი!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          კვადრატების ხაზის გასაკეთებლად,
          - გაიმეორეთ 3-ჯერ
          - დახატეთ კვადრატის **50 პიქსელი** სიგრძის გვერდებით
          - გადახტით წინ **100 პიქსელით**
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?

          ![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)
        courseD_artist_functions8_c: At the end of each line of squares, the artist
          will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions9_authored_hint:
        courseD_artist_functions9_e: |-
          შეგიძლიათ იპოვოთ ოთხივე ადგილი ამ ნახატში, სადაც `სამკუთხედების მწკრივის` გამოყენება შეიძლება?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:
          - make the `draw a triangle` function
          - make the `draw a line of triangles` function
          - use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by creating a line of triangles
          and turning either 60 or 120 degrees after each time you draw the triangle
          line.
        courseD_artist_functions9_c: |-
          სამკუთხედების მწკრივის დასახაზად:
          - 4-ჯერ გამეორება
          - სამკუთხედის დახატვა
          - 50 პიქსელით წინ გადახტომა
        courseD_artist_functions9_d: |-
          ბრილიანტის დასახატად:
          - გაიმეორეთ ორჯერ
          - დახატეთ სამკუთხედების ხაზი
          - მობრუნდით 60 გრადუსით
          - დახატეთ სამკუთხედების ხაზი
          - მობრუნდით 120 გრადუსით
      courseE_artist_functions9_2018_authored_hint:
        courseD_artist_functions9_e: |-
          შეგიძლიათ იპოვოთ ოთხივე ადგილი ამ ნახატში, სადაც `სამკუთხედების მწკრივის` გამოყენება შეიძლება?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:
          - make the `draw a triangle` function
          - make the `draw a line of triangles` function
          - use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles
          4 times and turning either 60 or 120 degrees before you draw the next triangle
          line.
        courseD_artist_functions9_c: |-
          სამკუთხედების მწკრივის დასახაზად:
          - 4-ჯერ გამეორება
          - სამკუთხედის დახატვა
          - 50 პიქსელით წინ გადახტომა
        courseD_artist_functions9_d: |-
          ბრილიანტის დასახატად:
          - გაიმეორეთ ორჯერ
          - დახატეთ სამკუთხედების ხაზი
          - მობრუნდით 60 გრადუსით
          - დახატეთ სამკუთხედების ხაზი
          - მობრუნდით 120 გრადუსით
      courseE_artist_functions_challenge_authored_hint:
        courseE_artist_functions_challenge_a: თუ ამ ფუნქციას კიდევ ერთხელ გამოიძახებთ,
          შეგიძლიათ შექმნათ იგივე დიზაინი საბოლოო კუთხეში. თქვენ, აგრეთვე, შეგიძლიათ
          `გადახტეთ` სხვა პოზიციებზე, ან შეცვალოთ ყველაფერი, როგორც მოგესურვებათ!
      courseE_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: თუ ფუნქციას კიდევ ერთხელ გამოიძახებთ,
          შეგიძლიათ შექმნათ იგივე დიზაინი საბოლოო კუთხეში.
        courseE_artist_functions_challenge1_b: აგრეთვე, შეგიძლიათ `გადახტეთ` სხვა
          პოზიციებზე, ან შეცვალოთ ყველაფერი როგორც მოგესურვებათ!
      courseE_artist_functions_challenge1_2018_authored_hint:
        courseE_artist_functions_challenge1_a: თუ ფუნქციას კიდევ ერთხელ გამოიძახებთ,
          შეგიძლიათ შექმნათ იგივე დიზაინი საბოლოო კუთხეში.
        courseE_artist_functions_challenge1_b: აგრეთვე, შეგიძლიათ `გადახტეთ` სხვა
          პოზიციებზე, ან შეცვალოთ ყველაფერი როგორც მოგესურვებათ!
      courseE_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n
          \   <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n
          \ </block>\n  </xml>\n  \nეს `გადახტომის` ბლოკი საშუალებას გაძლევთ ამოძრაოთ
          ზომბი სახატავი ბადის ნებისმიერ პიქსელზე, სადაც მოგესურვებათ. ბლოკი მუშაობს
          ზომის რაღაც პიქსელებით მარჯვნივ და რაღაც პიქსელებით დაბლა გადაყვანით. ათვლა
          ყოველთვის იწყება ზედა მარცხენა კუთხიდან, რაც ნიშნავს, რომ არ აქვს მნიშვნელობა,
          თუ სადაა ზომბი მხატვარი, სანამ ბრძანება გაეშვება!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_challenge2_2018_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n
          \   <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n
          \ </block>\n  </xml>\n  \nეს `გადახტომის` ბლოკი საშუალებას გაძლევთ ამოძრაოთ
          ზომბი სახატავი ბადის ნებისმიერ პიქსელზე, სადაც მოგესურვებათ. ბლოკი მუშაობს
          ზომის რაღაც პიქსელებით მარჯვნივ და რაღაც პიქსელებით დაბლა გადაყვანით. ათვლა
          ყოველთვის იწყება ზედა მარცხენა კუთხიდან, რაც ნიშნავს, რომ არ აქვს მნიშვნელობა,
          თუ სადაა ზომბი მხატვარი, სანამ ბრძანება გაეშვება!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_predict1_authored_hint: []
      courseE_artist_functions_predict1_2018_authored_hint: []
      courseE_artist_functions_predict2_authored_hint: []
      courseE_artist_functions_predict2_2018_authored_hint: []
      courseE_artist_predict1_authored_hint: []
      courseE_artist_predict1_2018_authored_hint: []
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_a: არ დაგავიწყდეთ, თითოეული სამკუთხედის შემდეგ 60 გრადუსით
          მობრუნება. რომელი ციკლში უნდა მოათავსოთ ეს ინსტრუქცია?
        courseD_artist_ramp10_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseD_artist_ramp10_c: |-
          მხატვარი ჯამში ექვს სამკუთხედს დახატავს:

          ![](https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif)
      courseE_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: გვერდის დასახატად, გამოიყენეთ `გადაადგილდი წინ 100
          პიქსელით` ბლოკი, შემდეგ შეცვალეთ ის 100-დან 200-მდე.
        courseD_artist_ramp11b: |-
          4 გვერდის დასახატად ჩასვით `100 პიქსელით წინ გადაადგილების` ბლოკი გამეორების ბლოკში და დარწმუნდით, რომ ციკლი მომართულია 4-ჯერ დასახატად.

          ამის შემდეგ კი, არ დაგავიწყდეთ მობრუნება!
      courseE_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: თავიდან შეგიძლიათ დახატოთ ჯერ კვადრატი, შემდეგ კი
          სამკუთხედი, ან პირიქით!
      courseE_artist_ramp8_authored_hint:
        courseE_artist_ramp8_a: გვერდის დასახატად, გამოიყენეთ `გადაადგილდი წინ 100
          პიქსელით` ბლოკი, შემდეგ შეცვალეთ ის 100-დან 200-მდე.
        courseE_artist_ramp8_b: |-
          4 გვერდის დასახატად ჩასვით `100 პიქსელით წინ გადაადგილების` ბლოკი გამეორების ბლოკში და დარწმუნდით, რომ ციკლი მომართულია 4-ჯერ დასახატად.

          ამის შემდეგ კი, არ დაგავიწყდეთ მობრუნება!
        courseE_artist_ramp8_c: 'თქვენი ციკლი უნდა შეიცავდეს ორ ბლოკს: `წინ გადაადგილება`
          და `90 გრადუსით მარჯვნივ მობრუნება`.'
      courseE_artist_ramp8_2_authored_hint:
        courseE_artist_ramp8_a: გვერდის დასახატად, გამოიყენეთ `გადაადგილდი წინ 100
          პიქსელით` ბლოკი, შემდეგ შეცვალეთ ის 100-დან 200-მდე.
        courseE_artist_ramp8_b: |-
          4 გვერდის დასახატად ჩასვით `100 პიქსელით წინ გადაადგილების` ბლოკი გამეორების ბლოკში და დარწმუნდით, რომ ციკლი მომართულია 4-ჯერ დასახატად.

          ამის შემდეგ კი, არ დაგავიწყდეთ მობრუნება!
        courseE_artist_ramp8_c: 'თქვენი ციკლი უნდა შეიცავდეს ორ ბლოკს: `წინ გადაადგილება`
          და `90 გრადუსით მარჯვნივ მობრუნება`.'
      courseE_artist_ramp8_2018_authored_hint:
        courseE_artist_ramp8_a: გვერდის დასახატად, გამოიყენეთ `გადაადგილდი წინ 100
          პიქსელით` ბლოკი, შემდეგ შეცვალეთ ის 100-დან 200-მდე.
        courseE_artist_ramp8_b: |-
          4 გვერდის დასახატად ჩასვით `100 პიქსელით წინ გადაადგილების` ბლოკი გამეორების ბლოკში და დარწმუნდით, რომ ციკლი მომართულია 4-ჯერ დასახატად.

          ამის შემდეგ კი, არ დაგავიწყდეთ მობრუნება!
        courseE_artist_ramp8_c: 'თქვენი ციკლი უნდა შეიცავდეს ორ ბლოკს: `წინ გადაადგილება`
          და `90 გრადუსით მარჯვნივ მობრუნება`.'
      courseE_artist_ramp8_2_2018_authored_hint:
        courseE_artist_ramp8_a: გვერდის დასახატად, გამოიყენეთ `გადაადგილდი წინ 100
          პიქსელით` ბლოკი, შემდეგ შეცვალეთ ის 100-დან 200-მდე.
        courseE_artist_ramp8_b: |-
          4 გვერდის დასახატად ჩასვით `100 პიქსელით წინ გადაადგილების` ბლოკი გამეორების ბლოკში და დარწმუნდით, რომ ციკლი მომართულია 4-ჯერ დასახატად.

          ამის შემდეგ კი, არ დაგავიწყდეთ მობრუნება!
        courseE_artist_ramp8_c: 'თქვენი ციკლი უნდა შეიცავდეს ორ ბლოკს: `წინ გადაადგილება`
          და `90 გრადუსით მარჯვნივ მობრუნება`.'
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_a: რა საერთო აქვს ამას კვადრატთან? რით განსხვავდება?
        courseD_artist_ramp12_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseD_artist_ramp12_c: თითოეული გვერდის დასახატად უნდა გადაადგილდეთ წინ
          100 პიქსელით, შემდეგ მობრუნდით მარჯვნივ 120 გრადუსით. რამდენი გვერდი დაგჭირდებათ?
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_a: რა საერთო აქვს ამას კვადრატთან? რით განსხვავდება?
        courseD_artist_ramp12_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseD_artist_ramp12_c: თითოეული გვერდის დასახატად უნდა გადაადგილდეთ წინ
          100 პიქსელით, შემდეგ მობრუნდით მარჯვნივ 120 გრადუსით. რამდენი გვერდი დაგჭირდებათ?
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_a: რა საერთო აქვს ამას კვადრატთან? რით განსხვავდება?
        courseD_artist_ramp12_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseD_artist_ramp12_c: თითოეული გვერდის დასახატად უნდა გადაადგილდეთ წინ
          100 პიქსელით, შემდეგ მობრუნდით მარჯვნივ 120 გრადუსით. რამდენი გვერდი დაგჭირდებათ?
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_a: რა საერთო აქვს ამას კვადრატთან? რით განსხვავდება?
        courseD_artist_ramp12_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseD_artist_ramp12_c: თითოეული გვერდის დასახატად უნდა გადაადგილდეთ წინ
          100 პიქსელით, შემდეგ მობრუნდით მარჯვნივ 120 გრადუსით. რამდენი გვერდი დაგჭირდებათ?
      courseE_bee_concept1_authored_hint:
        courseE_bee_concept1_b: არის იქ რაიმე ორნამენტი, რომელიც აქ *მეორდება*?
        courseE_bee_concept1_a: If you don't understand how to use nested loops here,
          try writing out the instructions step by step on a piece of paper.  Circle
          the patterns that you see.
      courseE_bee_concept1_2018_authored_hint:
        courseE_bee_concept1_b: არის იქ რაიმე ორნამენტი, რომელიც აქ *მეორდება*?
        courseE_bee_concept1_a: If you don't understand how to use nested loops here,
          try writing out the instructions step by step on a piece of paper.  Circle
          the patterns that you see.
      courseE_bee_concept2_authored_hint:
        courseE_bee_concept2_a: გამოგადგებათ`სანამ` ციკლი აქ?
        courseE_bee_concept2_d: თქვენ შეგიძლიათ შეამოწმოთ ცარიელი ადგილებიც კი, რათა
          ნახოთ არის თუ არა თაფლი > 0-ზე.
        courseE_bee_concept2_b: შეგიძლიათ გამოიყენოთ `სანამ` ციკლები, თითოეული გზის
          ბოლომდე გასავლელად და თითოეული ადგილიდან მთელი თაფლის შესაგროვებლად.
        courseE_bee_concept2_c: რომელ მხარეს უნდა მობრუნდეს ფუტკარი თითოეული გზის
          შემდეგ?
      courseE_bee_concept2_2018_authored_hint:
        courseE_bee_concept2_a: გამოგადგებათ`სანამ` ციკლი აქ?
        courseE_bee_concept2_d: თქვენ შეგიძლიათ შეამოწმოთ ცარიელი ადგილებიც კი, რათა
          ნახოთ არის თუ არა თაფლი > 0-ზე.
        courseE_bee_concept2_b: შეგიძლიათ გამოიყენოთ `სანამ` ციკლები, თითოეული გზის
          ბოლომდე გასავლელად და თითოეული ადგილიდან მთელი თაფლის შესაგროვებლად.
        courseE_bee_concept2_c: რომელ მხარეს უნდა მობრუნდეს ფუტკარი თითოეული გზის
          შემდეგ?
      courseE_bee_concept3_authored_hint:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
        courseE_bee_concept3a_c: აქ ყვავილების სამი ჯგუფია, ამიტომ თქვენი გარე `გამეორების`
          ციკლი უნდა მეორდებოდეს სამჯერ.
      courseE_bee_concept3_2018_authored_hint:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა ჩასვათ ციკლი,
          სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ გამეორებადი კოდი.
        courseE_bee_concept3a_c: აქ ყვავილების სამი ჯგუფია, ამიტომ თქვენი გარე `გამეორების`
          ციკლი უნდა მეორდებოდეს სამჯერ.
      courseE_bee_concept4_authored_hint:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: კიბის საფეხური ნიმუში შეიძლება დაგეხმაროთ ყვავილებსა
          და ფიჭებში გაღწევაში.
        courseE_bee_concept4_c: თუ ყვავილთან ხართ, რამდენჯერ უნდა სცადოთ ნექტარის
          აღება? იგივეა თუ არა ეს რაოდენობა ყველა ყვავილისათვის?
      courseE_bee_concept4_2018_authored_hint:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: კიბის საფეხური ნიმუში შეიძლება დაგეხმაროთ ყვავილებსა
          და ფიჭებში გაღწევაში.
        courseE_bee_concept4_c: თუ ყვავილთან ხართ, რამდენჯერ უნდა სცადოთ ნექტარის
          აღება? იგივეა თუ არა ეს რაოდენობა ყველა ყვავილისათვის?
      courseE_bee_concept5_authored_hint:
        courseE_bee_concept5_a: 'The flowers follow a rectangular path.  You can trace
          that rectangle using `while path ahead` even with a different number of
          squares per side. '
        courseE_bee_concept5_c: |-
          ეს იმ მართკუთხა გზის სურათია, რომელიც ფუტკარმა შეიძლება გაიაროს.

          ![](https://images.code.org/b0ab0f9ec823fd8fbc9b032d68fd69d0-image-1493152066638.7.8 Hint Drawing.png)
        courseE_bee_concept5_b: You can check every square for a flower using the
          `if` block, even if you already know there's not one there.
      courseE_bee_concept5_2018_authored_hint:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace
          that rectangle using `while path ahead` even with a different number of
          squares per side.
        courseE_bee_concept5_c: |-
          ეს იმ მართკუთხა გზის სურათია, რომელიც ფუტკარმა შეიძლება გაიაროს.

          ![](https://images.code.org/b0ab0f9ec823fd8fbc9b032d68fd69d0-image-1493152066638.7.8 Hint Drawing.png)
        courseE_bee_concept5_b: You can check every square for a flower using the
          `if` block, even if you already know there's not one there.
      courseE_bee_functions1_authored_hint:
        courseE_bee_functions1_a: There is more than one right answer to this puzzle.
        courseE_bee_functions1_b: გამოიყენეთ `გამეორების` ციკლი ნექტარის შეგროვებისთვის,
          რათა შეამოკლოთ თქვენი კოდი.
        courseE_bee_functions1_c: გახსოვდეთ, რომ მარცხენა და მარჯვენა მობრუნებები
          ფუტკრის პერსპექტივიდან იგულისხმება.
      courseE_bee_functions10_authored_hint:
        courseE_bee_functions10_a: თქვენ დაგჭირდებათ `სანამ` ციკლი მთელი თაფლის შესაგროვებლად,
          რადგან მისი რაოდენობა სხვადასხვა ფიჭაში სხვადასხვაა.
        courseE_bee_functions10_b: ჩასვით მობრუნებები და მოძრაობები თქვენს ფუნქციაში,
          რათა შეძლოთ მისი გამოძახება მაშინ, როდესაც ფუტკარი მთავარ გზაზეა.
        courseE_bee_functions10_c: არ დაგავიწყდეთ თქვენი ფუნქციის გამოძახება მთავარ
          პროგრამაში!
      courseE_bee_functions10_2018_authored_hint:
        courseE_bee_functions10_a: თქვენ დაგჭირდებათ `სანამ` ციკლი მთელი თაფლის შესაგროვებლად,
          რადგან მისი რაოდენობა სხვადასხვა ფიჭაში სხვადასხვაა.
        courseE_bee_functions10_b: ჩასვით მობრუნებები და მოძრაობები თქვენს ფუნქციაში,
          რათა შეძლოთ მისი გამოძახება მაშინ, როდესაც ფუტკარი მთავარ გზაზეა.
        courseE_bee_functions10_c: არ დაგავიწყდეთ თქვენი ფუნქციის გამოძახება მთავარ
          პროგრამაში!
      courseE_bee_functions1_2018_authored_hint:
        courseE_bee_functions1_a: Remember that left and right turns are from the
          point of view of the bee.
        courseE_bee_functions1_b: გამოიყენეთ `გამეორების` ციკლი ნექტარის შეგროვებისთვის,
          რათა შეამოკლოთ თქვენი კოდი.
        courseE_bee_functions1_c: გახსოვდეთ, რომ მარცხენა და მარჯვენა მობრუნებები
          ფუტკრის პერსპექტივიდან იგულისხმება.
      courseE_bee_functions2_authored_hint:
        courseE_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
        courseE_bee_functions2_b: ეს <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> ბლოკი იძახებს მოცემულ ფუნქციას.
        courseE_bee_functions2_c: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ წინ
          გადაადგილება და 2 ნექტარის ორჯერ აღება.
      courseE_bee_functions2_2018_authored_hint:
        courseE_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
        courseE_bee_functions2_b: ეს <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> ბლოკი იძახებს მოცემულ ფუნქციას.
        courseE_bee_functions2_c: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ წინ
          გადაადგილება და 2 ნექტარის ორჯერ აღება.
      courseE_bee_functions3_authored_hint:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect
          nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: გამოიძახეთ თქვენი `აიღე 5` ფუნქცია `გაშვებისას`
          ბლოკის ქვემოთ.
        courseE_bee_functions3_c: თქვენი მთავარი პროგრამა გააკონტროლებს ყველა მოძრაობას,
          ფუნქცია მხოლოდ იმისთვისაა, რომ გადაწყვიტოს, რა მოხდება, როდესაც ფუტკარი
          მიაღწევს ყვავილს.
        courseE_bee_functions3_d: Try using this path through.
      courseE_bee_functions3_2018_authored_hint:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect
          nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: გამოიძახეთ თქვენი `აიღე 5` ფუნქცია `გაშვებისას`
          ბლოკის ქვემოთ.
        courseE_bee_functions3_c: თქვენი მთავარი პროგრამა გააკონტროლებს ყველა მოძრაობას,
          ფუნქცია მხოლოდ იმისთვისაა, რომ გადაწყვიტოს, რა მოხდება, როდესაც ფუტკარი
          მიაღწევს ყვავილს.
        courseE_bee_functions3_d: Try using this path through.
      courseE_bee_functions4_authored_hint:
        courseE_bee_functions4_a: Your function will already travel down the side
          paths and return the bee back to the main road.  You don't need to add that
          part to your program.
        courseE_bee_functions4_b: გამოიყენეთ მწვანე `გადაადგილდი და აიღე ნექტარი`
          ბლოკი ამ ფუნქციის გამოსაძახებლად.
        courseE_bee_functions4_c: თქვენ არ გჭირდებათ ამ ფუნქციის შეცვლა, უბრალოდ გამოიყენეთ
          ის თქვენს პროგრამაში.
      courseE_bee_functions4_2018_authored_hint:
        courseE_bee_functions4_a: Your function will already travel down the side
          paths and return the bee back to the main road.  You don't need to add that
          part to your program.
        courseE_bee_functions4_b: გამოიყენეთ მწვანე `გადაადგილდი და აიღე ნექტარი`
          ბლოკი ამ ფუნქციის გამოსაძახებლად.
        courseE_bee_functions4_c: თქვენ არ გჭირდებათ ამ ფუნქციის შეცვლა, უბრალოდ გამოიყენეთ
          ის თქვენს პროგრამაში.
      courseE_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without
          having to change the main program.
        courseE_bee_functions5_c: "`წინ გადაადგილების` ბლოკი შეგიძლიათ ჩაანაწცვლოთ
          `უკან გადაადგილების` ბლოკით. გამოიყენეთ ეს მეთოდი ყოველი გზის ბოლოს მობრუნების
          მაგივრად!"
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n-
          move forward\n- collect all of the nectar\n- turn around\n- move back to
          the main path\n- turn back to the direction that the bee started from"
      courseE_bee_functions5_2018_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without
          having to change the main program.
        courseE_bee_functions5_c: "`წინ გადაადგილების` ბლოკი შეგიძლიათ ჩაანაწცვლოთ
          `უკან გადაადგილების` ბლოკით. გამოიყენეთ ეს მეთოდი ყოველი გზის ბოლოს მობრუნების
          მაგივრად!"
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n-
          move forward\n- collect all of the nectar\n- move backward\n- turn back
          to the direction that the bee started from"
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseE_bee_functions6_b: ფუნქციის ფარგლებში სამოძრაოდ ეს შეიძლება კი იყოს
          გამოსადეგი, მაგრამ ყველა თქვენი `მოძრაობის` ბლოკის აქ გამოყენება საჭირო
          არაა.
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseE_bee_functions6_b: ფუნქციის ფარგლებში სამოძრაოდ ეს შეიძლება კი იყოს
          გამოსადეგი, მაგრამ ყველა თქვენი `მოძრაობის` ბლოკის აქ გამოყენება საჭირო
          არაა.
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseE_bee_functions6_b: ფუნქციის ფარგლებში სამოძრაოდ ეს შეიძლება კი იყოს
          გამოსადეგი, მაგრამ ყველა თქვენი `მოძრაობის` ბლოკის აქ გამოყენება საჭირო
          არაა.
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions7_b: |-
          არ დაგავიწყდეთ თქვენი კოდის აწყობა მწვანე ფუნქციის ბლოკის შიგნით.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down
          the path, collect the nectar, make the honey, then turn the bee around and
          bring him back.
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions7_b: |-
          არ დაგავიწყდეთ თქვენი კოდის აწყობა მწვანე ფუნქციის ბლოკის შიგნით.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down
          the path, collect the nectar, make the honey, then turn the bee around and
          bring him back.
      courseE_bee_functions8_authored_hint:
        courseE_bee_functions8_a: Your function will only need to collect nectar...
          but this time, you will need to use a `while` loop instead of a `repeat`
          loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all
          of the nectar.
        courseE_bee_functions8_c: თქვენი მთავარი პროგრამა საჭიროებს კიბის მსგავსს
          მოძრაობის სტრუქტურას. გახსოვდეთ, მთავარი პროგრამა არის `გაშვებისას` ბლოკის
          ქვემოთ არსებული კოდი.
      courseE_bee_functions8_2018_authored_hint:
        courseE_bee_functions8_a: Your function will only need to collect nectar.
          Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all
          of the nectar.
        courseE_bee_functions8_c: თქვენი მთავარი პროგრამა საჭიროებს კიბის მსგავსს
          მოძრაობის სტრუქტურას. გახსოვდეთ, მთავარი პროგრამა არის `გაშვებისას` ბლოკის
          ქვემოთ არსებული კოდი.
      courseE_bee_functions9_authored_hint:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle
          as you did in the last puzzle.  All you need to do is create a function
          that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: შეიძლება კი იცით, თუ რამდენი ნექტარია ზოგ ყვავილში,
          `სანამ` ციკლში მოთავსებული ფუნქცია ყველა პრობლემას ერთბაშად მოაგვარებს.
      courseE_bee_functions9_2018_authored_hint:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle
          as you did in the last puzzle.  All you need to do is create a function
          that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: შეიძლება კი იცით, თუ რამდენი ნექტარია ზოგ ყვავილში,
          `სანამ` ციკლში მოთავსებული ფუნქცია ყველა პრობლემას ერთბაშად მოაგვარებს.
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions_challenge1_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა მწვანე
          ფუნქციის ბლოკში.
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions_challenge1_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა მწვანე
          ფუნქციის ბლოკში.
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions_challenge1_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა მწვანე
          ფუნქციის ბლოკში.
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseE_bee_functions_challenge1_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა მწვანე
          ფუნქციის ბლოკში.
      courseE_bee_ramp14_authored_hint:
        courseE_bee_ramp14_a: ფუტკარი მოქმედებს ისევე, როგორც ფერმერი წინა თავსატეხში.
          იმოძრავეთ გზის გასწვრივ და შეაგროვოთ ნექტარი მაშინ, როდესაც ის იქ არის (სანამ
          ნექტარი > 0) და გააკეთეთ მთელი თაფლი.
        courseE_bee_ramp14_b: ერთ სივრცეში ერთზე მეტი ყვავილი ან ფიჭა შეიძლება იყოს,
          ამიტომ გამოიყენეთ `სანამ` ციკლი ყველა მათგანის შესაგროვებლად!
        courseE_bee_ramp14_c: ეს და წინა თავსატეხი თითქმის იდენტურია, უბრალოდ ბოსტნეულის
          მაგივრად თაფლი და ნექტარი გვაქვს.
      courseE_bee_ramp14_2018_authored_hint:
        courseE_bee_ramp14_a: ფუტკარი მოქმედებს ისევე, როგორც ფერმერი წინა თავსატეხში.
          იმოძრავეთ გზის გასწვრივ და შეაგროვოთ ნექტარი მაშინ, როდესაც ის იქ არის (სანამ
          ნექტარი > 0) და გააკეთეთ მთელი თაფლი.
        courseE_bee_ramp14_b: ერთ სივრცეში ერთზე მეტი ყვავილი ან ფიჭა შეიძლება იყოს,
          ამიტომ გამოიყენეთ `სანამ` ციკლი ყველა მათგანის შესაგროვებლად!
        courseE_bee_ramp14_c: ეს და წინა თავსატეხი თითქმის იდენტურია, უბრალოდ ბოსტნეულის
          მაგივრად თაფლი და ნექტარი გვაქვს.
      courseE_bee_ramp17_authored_hint:
        courseE_bee_ramp17_a: იქიდან გამომდინარე, რომ ჩვენ არ გვაქვს გამეორების ბლოკი,
          რომელი ბლოკი უნდა გამოვიყენოთ გზაზე სამოძრაოდ?
        courseE_bee_ramp17: თუ ამ თავსატეხის ამოხსნა `სანამ` ბლოკის გამოყენების გარეშე
          მოგიწევთ, სად განათავსებთ გამეორებად კოდს? როგორ შეგიძლიათ გამეორებადი კოდის
          გამოყენება, რათა დაამსგავსოთ მისი მოქმედება `სანამ` ბლოკს და ამოხსნათ თავსატეხი?
        courseE_bee_ramp17_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
        courseE_bee_ramp17_c: თქვენ დაგჭირდებათ კიბე-საფეხუროვანი სტრუქტურის გამოყენება.
          სცადეთ ჯერ შექმნათ ეს სტრუქტურა, შემდეგ დაამატოთ `თუ/სხვაგვარად`ბრძანება
          და `სანამ` ციკლები, რათა შეამოწმოთ ყვავილები და ფიჭები.
      courseE_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          ყოველი მხრიდან ოთხი `წინ გადაადგილების` ბლოკის გამოყენების მაგივრად, სცადეთ `გამეორების` ციკლში ერთი `წინ გადაადგილების` ბლოკის განთავსება. ასე გააკეთეთ:
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: არ დაგავიწყდეთ ერთი განძის შეაგროვება. ყოველი საფეხურების
          რიგის შემდეგ კი მობრუნება!
      courseE_farmer_concept1_authored_hint:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill
          any hole until it's flat.
        courseE_farmer_concept1_b: თქვენ შეგიძლიათ გამოყენოთ კიბის პრინციპი ხვრელებთან
          მისაღწევად.
      courseE_farmer_concept1_2018_authored_hint:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill
          any hole until it's flat.
        courseE_farmer_concept1_b: თქვენ შეგიძლიათ გამოყენოთ კიბის პრინციპი ხვრელებთან
          მისაღწევად.
      courseE_farmer_concept2_authored_hint:
        courseE_farmer_concept2_a: The paths are all the same length, but they are
          a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: აქ გამოგადგებათ ფუნქცია, რომელიც პასუხისმგებელია
          მობრუნებასა და გოგრების შეგროვებაზე და ბრუნდება მთავარ ჰორიზონტალურ გზაზე.
        courseE_farmer_concept2_c: თქვენს მთავარ პროგრამას შეუძლია გამოიძახოს ეს ფუნქცია
          მწვანე `გააკეთე რამე` ბლოკით.
      courseE_farmer_concept2_2018_authored_hint:
        courseE_farmer_concept2_a: The paths are all the same length, but they are
          a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: აქ გამოგადგებათ ფუნქცია, რომელიც პასუხისმგებელია
          მობრუნებასა და გოგრების შეგროვებაზე და ბრუნდება მთავარ ჰორიზონტალურ გზაზე.
        courseE_farmer_concept2_c: თქვენს მთავარ პროგრამას შეუძლია გამოიძახოს ეს ფუნქცია
          მწვანე `გააკეთე რამე` ბლოკით.
      courseE_farmer_concept3_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: The `while path ahead` block lets
          you keep going, even if you don't know how many squares are in a path.
        grade3_robotFarmer_ConditionalsIntro_8_b: რა უნდა გააკეთოთ, როდესაც მიაღწევთ
          გზის ბოლოს?
        grade3_robotFarmer_ConditionalsIntro_8_c: გამოიყენეთ `გამეორების` ციკლი, რათა
          გაუშვათ თქვენი კოდი რამდენჯერმე ყოველი სწორი გზისთვის.
      courseE_farmer_concept3_2018_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: The `while path ahead` block lets
          you keep going, even if you don't know how many squares are in a path.
        grade3_robotFarmer_ConditionalsIntro_8_b: რა უნდა გააკეთოთ, როდესაც მიაღწევთ
          გზის ბოლოს?
        grade3_robotFarmer_ConditionalsIntro_8_c: გამოიყენეთ `გამეორების` ციკლი, რათა
          გაუშვათ თქვენი კოდი რამდენჯერმე ყოველი სწორი გზისთვის.
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: ყოველთვის ფრთხილად იყავით, როდესაც პანელიდან ახალი
          სრული ბლოკის გამოწევას ცდილობთ.
        4-5_Artist_Patterns_3_b: თუ თქვენი კოდი ზედმეტად გაუგებარი გახდება, ყოველთვის
          შეგიძლიათ დაიწყოთ თავიდან და კიდევ სცადოთ!
      courseE_farmer_functions1_authored_hint:
        courseE_farmer_functions1_a: ამჯერად ინსტრუმენტების პანელი ოდნავ განსხვავებულადაა
          ორგანიზებული. დააკლიკეთ განსხვავებულ კატეგორიებს, რათა ნახოთ, რომელი ბლოკები
          გაქვთ.
        courseE_farmer_functions1_b: თქვენ გჭირდებათ მხოლოდ ერთი გოგრის შეგროვება,
          მაგრამ იქნება შეგეძლოთ გოგრამდე მისასვლელად ციკლის გამოყენება?
      courseE_farmer_functions10_authored_hint: []
      courseE_farmer_functions10b_authored_hint:
        courseE_farmer_functions10b_a: პირველ რიგში თქვენი ფუნქცია თავიდან უნდა შექმნათ.
        courseE_farmer_functions10b_b: სად უნდა შეუხვიოთ პირველი გოგრის შემდეგ?
        courseE_farmer_functions10b_c: შეხედეთ წინა თავსატეხს, თუ ფუნქციის შექმნაში
          დახმარება გჭირდებათ.
      courseE_farmer_functions10b_2018_authored_hint:
        courseE_farmer_functions10b_a: პირველ რიგში თქვენი ფუნქცია თავიდან უნდა შექმნათ.
        courseE_farmer_functions10b_b: სად უნდა შეუხვიოთ პირველი გოგრის შემდეგ?
        courseE_farmer_functions10b_c: შეხედეთ წინა თავსატეხს, თუ ფუნქციის შექმნაში
          დახმარება გჭირდებათ.
      courseE_farmer_functions11_predict_authored_hint: []
      courseE_farmer_functions11_predict_2018_authored_hint: []
      courseE_farmer_functions1_2018_authored_hint:
        courseE_farmer_functions1_a: ამჯერად ინსტრუმენტების პანელი ოდნავ განსხვავებულადაა
          ორგანიზებული. დააკლიკეთ განსხვავებულ კატეგორიებს, რათა ნახოთ, რომელი ბლოკები
          გაქვთ.
        courseE_farmer_functions1_b: თქვენ გჭირდებათ მხოლოდ ერთი გოგრის შეგროვება,
          მაგრამ იქნება შეგეძლოთ გოგრამდე მისასვლელად ციკლის გამოყენება?
      courseE_farmer_functions1a_authored_hint:
        courseE_farmer_functions1a_a: Nested `if` and `if/else` statements will really
          help you out here.
        courseE_farmer_functions1a_b: გამოიყენეთ `გამეორება, სანამ` ბლოკი გოგრასთან
          მოსახვედრად!
      courseE_farmer_functions1a_2018_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step
          by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: გამოიყენეთ `გამეორება, სანამ` ბლოკი გოგრასთან
          მოსახვედრად!
      courseE_farmer_functions2a_authored_hint: []
      courseE_farmer_functions2aALT_authored_hint: []
      courseE_farmer_functions2b_authored_hint:
        courseE_farmer_functions2b_a: თქვენ შეგიძლიათ გამოიყენოთ `გამეორება, სანამ
          გოგრაა`, რათა მიაღწიოთ ორივე გზის ბოლომდე.
        courseE_farmer_functions2b_b: დამაკავშირებელ გზაზე სიმინდი არაა, ამიტომ თქვენ
          შეგიძლიათ იმოძრავოთ მის გასწრივ და შებრუნდეთ.
        courseE_farmer_functions2b_c: თქვენ დაგჭირდებათ ორი განცალკევებული `გამეორება,
          სანამ` ბლოკი, რათა შეაგროვოთ მთლიანი მოსავალი.
      courseE_farmer_functions2b_2018_authored_hint:
        courseE_farmer_functions2b_a: თქვენ შეგიძლიათ გამოიყენოთ `გამეორება, სანამ
          გოგრაა`, რათა მიაღწიოთ ორივე გზის ბოლომდე.
        courseE_farmer_functions2b_b: დამაკავშირებელ გზაზე სიმინდი არაა, ამიტომ თქვენ
          შეგიძლიათ იმოძრავოთ მის გასწრივ და შებრუნდეთ.
        courseE_farmer_functions2b_c: თქვენ დაგჭირდებათ ორი განცალკევებული `გამეორება,
          სანამ` ბლოკი, რათა შეაგროვოთ მთლიანი მოსავალი.
      courseE_farmer_functions2ba_authored_hint:
        courseE_farmer_functions2ba_a: გამოიყენეთ მწვანე `სიმინდი და გოგრა` ბლოკი,
          რათა გამოიძახოთ ეს ფუნქცია.
        courseE_farmer_functions2ba_b: ერთიანად გადმოათრიეთ ყველა ბლოკი ინსტრუმენტების
          პანელიდან `გაშვებისას` ბლოკის ქვეშ, რათა ნახოთ, თუ როგორ მუშაობს ეს ფუნქცია.
      courseE_farmer_functions2ba_2018_authored_hint:
        courseE_farmer_functions2ba_a: გამოიყენეთ მწვანე `სიმინდი და გოგრა` ბლოკი,
          რათა გამოიძახოთ ეს ფუნქცია.
        courseE_farmer_functions2ba_b: ერთიანად გადმოათრიეთ ყველა ბლოკი ინსტრუმენტების
          პანელიდან `გაშვებისას` ბლოკის ქვეშ, რათა ნახოთ, თუ როგორ მუშაობს ეს ფუნქცია.
      courseE_farmer_functions3_authored_hint:
        courseE_farmer_functions3_a: Try using a `while path ahead` loop to get you
          where you need to be.
      courseE_farmer_functions3b_authored_hint:
        courseE_farmer_functions1a_a: Nested `if` and `if/else` statements will really
          help you out here.
      courseE_farmer_functions3c_authored_hint:
        courseE_farmer_functions3c_a: რომელი მიმდევრობა მეორდება ხშირად ამ პროგრამაში?
          შეგიძლიათ გადმოათრიოთ ეს ბლოკები ფუნქციაში?
        courseE_farmer_functions3c_b: არ დაგავიწყდეთ თქვენი ფუნქციის გამოძახება მთავარ
          პროგრამაში, როდესაც ამოიღებთ ბლოკებს.
      courseE_farmer_functions3c_2018_authored_hint:
        courseE_farmer_functions3c_a: რომელი მიმდევრობა მეორდება ხშირად ამ პროგრამაში?
          შეგიძლიათ გადმოათრიოთ ეს ბლოკები ფუნქციაში?
        courseE_farmer_functions3c_b: არ დაგავიწყდეთ თქვენი ფუნქციის გამოძახება მთავარ
          პროგრამაში, როდესაც ამოიღებთ ბლოკებს.
      courseE_farmer_functions4_authored_hint:
        courseE_farmer_functions4_a: Drag all of the code out of your `repeat` loop
          and into the `go get pumpkins` function.
        courseE_farmer_functions4_b: Don't forget to put the block that calls the
          `go get pumpkins` functions inside your loop before you run your code.
      courseE_farmer_functions4b_authored_hint:
        courseE_farmer_functions4b_a: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
        courseE_farmer_functions4b_b: არ დაგავიწყდეთ მობრუნება ყოველი გზის გავლის
          შემდეგ.
        courseE_farmer_functions4b_c: მწვანე `სიმინდი და გოგრა` ბლოკები ინსტრუმენტების
          პანელის ფუნქციების კატეგორიაშია.
      courseE_farmer_functions4b_2018_authored_hint:
        courseE_farmer_functions4b_a: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
        courseE_farmer_functions4b_b: არ დაგავიწყდეთ მობრუნება ყოველი გზის გავლის
          შემდეგ.
        courseE_farmer_functions4b_c: მწვანე `სიმინდი და გოგრა` ბლოკები ინსტრუმენტების
          პანელის ფუნქციების კატეგორიაშია.
      courseE_farmer_functions5_authored_hint: []
      courseE_farmer_functions5a_authored_hint: []
      courseE_farmer_functions5b_authored_hint:
        courseE_farmer_functions5b_a: You will need to use a `while corn` loop, a
          `while lettuce` and a `while pumpkin` to make sure you get everything.
      courseE_farmer_functions5c_authored_hint:
        courseE_farmer_functions5c_a: არის თუ არა ამ თავსატეხში სხვა მსგავსი მოქმედებები,
          რომლებიც შეგვიძლია, ციკლში მოვათავსოთ?
        courseE_farmer_functions5c_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
      courseE_farmer_functions5c_2018_authored_hint:
        courseE_farmer_functions5c_a: არის თუ არა ამ თავსატეხში სხვა მსგავსი მოქმედებები,
          რომლებიც შეგვიძლია, ციკლში მოვათავსოთ?
        courseE_farmer_functions5c_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე
          უკეთ მიხვდებით, რა ხდება.
      courseE_farmer_functions6_authored_hint: []
      courseE_farmer_functions6b_authored_hint: []
      courseE_farmer_functions6c_authored_hint:
        courseE_farmer_functions6c_a: დაარედაქტირეთ თქვენი ფუნქცია ისე, რომ შეამოწმოს
          სალათის არსებობაც.
        courseE_farmer_functions6c_b: გამოგადგებათ თუ არა `თუ/სხვაგვარად` ბლოკი იმის
          შესამოწმებლად, არის თუ არა სალათის ფურცლები ადგილზე?
        courseE_farmer_functions6c_c: არ დაივიწყოთ სიმინდის შემოწმების გაგრძელება!
      courseE_farmer_functions6c_2018_authored_hint:
        courseE_farmer_functions6c_a: დაარედაქტირეთ თქვენი ფუნქცია ისე, რომ შეამოწმოს
          სალათის არსებობაც.
        courseE_farmer_functions6c_b: გამოგადგებათ თუ არა `თუ/სხვაგვარად` ბლოკი იმის
          შესამოწმებლად, არის თუ არა სალათის ფურცლები ადგილზე?
        courseE_farmer_functions6c_c: არ დაივიწყოთ სიმინდის შემოწმების გაგრძელება!
      courseE_farmer_functions7_authored_hint: []
      courseE_farmer_functions7b_authored_hint:
        courseE_farmer_functions7b_a: აქ ფუნქცია არ გჭირდებათ, მაგრამ შეგიძლიათ გამოიყენოთ,
          თუ დაგეხმარებათ!
        courseE_farmer_functions7b_b: გამოიყენეთ `თუ/მაშინ` დებულება, რომ შეამოწმოთ
          მოსავალი, შემდეგ მობრუნდით იქიდან გამომდინარე, თუ რომელ მოსავალს იპოვით.
        courseE_farmer_functions7b_c: "`გამეორება გოგრამდე` ციკლი დაგეხმარებათ მთლიანი
          ლაბირინთის გასავლელად."
      courseE_farmer_functions7b_2018_authored_hint:
        courseE_farmer_functions7b_a: აქ ფუნქცია არ გჭირდებათ, მაგრამ შეგიძლიათ გამოიყენოთ,
          თუ დაგეხმარებათ!
        courseE_farmer_functions7b_b: გამოიყენეთ `თუ/მაშინ` დებულება, რომ შეამოწმოთ
          მოსავალი, შემდეგ მობრუნდით იქიდან გამომდინარე, თუ რომელ მოსავალს იპოვით.
        courseE_farmer_functions7b_c: "`გამეორება გოგრამდე` ციკლი დაგეხმარებათ მთლიანი
          ლაბირინთის გასავლელად."
      courseE_farmer_functions8_authored_hint:
        courseE_farmer_functions8_a: Create a function that takes the farmer to the
          corn, gets all of the corn, then turns around and comes back.
      courseE_farmer_functions8b_authored_hint:
        courseE_farmer_functions8b_a: სცადეთ მოცემული კოდის გაშვება, რომ ნახოთ, თუ
          რას აკეთებს ის. რა გჭირდებათ ამის შემდეგ?
        courseE_farmer_functions8b_b: ჩააგდეთ ყველა დასაწყები ბლოკი ფუნქციაში, რომ
          მათი გამოყენება ერთზე მეტჯერ შეძლოთ.
        courseE_farmer_functions8b_c: რამდენჯერ გჭირდებათ ფუნქციის გამოძახება?
      courseE_farmer_functions8b_2018_authored_hint:
        courseE_farmer_functions8b_a: სცადეთ მოცემული კოდის გაშვება, რომ ნახოთ, თუ
          რას აკეთებს ის. რა გჭირდებათ ამის შემდეგ?
        courseE_farmer_functions8b_b: ჩააგდეთ ყველა დასაწყები ბლოკი ფუნქციაში, რომ
          მათი გამოყენება ერთზე მეტჯერ შეძლოთ.
        courseE_farmer_functions8b_c: რამდენჯერ გჭირდებათ ფუნქციის გამოძახება?
      courseE_farmer_functions9_authored_hint:
        courseE_farmer_functions8_a: Create a function that takes the farmer to the
          corn, gets all of the corn, then turns around and comes back.
      courseE_farmer_functions9b_authored_hint:
        courseE_farmer_functions9b_a: შეგიძლიათ გამოიყენოთ ჩასმული `თუ` და `თუ/სხვაგვარად`
          დებულებები გზაზე გადასაადგილებლად?
        courseE_farmer_functions9b_b: გამოიყენეთ `გამეორება გოგრამდე`, რომ გაიაროთ
          მთელი გზა.
        courseE_farmer_functions9b_c: გზებზე ისე უნდა გადაადგილდეთ, თითქოს ისინი კვადრატებია,
          რომლებიც თითოეული ციკლის შემდეგ იზრდება ზომაში.
      courseE_farmer_functions9b_2018_authored_hint:
        courseE_farmer_functions9b_a: შეგიძლიათ გამოიყენოთ ჩასმული `თუ` და `თუ/სხვაგვარად`
          დებულებები გზაზე გადასაადგილებლად?
        courseE_farmer_functions9b_b: გამოიყენეთ `გამეორება გოგრამდე`, რომ გაიაროთ
          მთელი გზა.
        courseE_farmer_functions9b_c: გზებზე ისე უნდა გადაადგილდეთ, თითქოს ისინი კვადრატებია,
          რომლებიც თითოეული ციკლის შემდეგ იზრდება ზომაში.
      courseE_farmer_functions9b_clone_authored_hint: []
      courseE_farmer_predict1_authored_hint:
        courseE_farmer_ramp12a: შეგიძლიათ თავისუფლად დაუბრუნდეთ წინა თავსატეხს, თუ
          გჭირდებათ გახსენება, თუ როგორ უნდა აიღოთ პროდუქტი მხოლოდ მაშინ, **სანამ**
          კვლავ არის დარჩენილი ასაღები პროდუქტი.
      courseE_farmer_predict1_2018_authored_hint:
        courseE_farmer_ramp12a: შეგიძლიათ თავისუფლად დაუბრუნდეთ წინა თავსატეხს, თუ
          გჭირდებათ გახსენება, თუ როგორ უნდა აიღოთ პროდუქტი მხოლოდ მაშინ, **სანამ**
          კვლავ არის დარჩენილი ასაღები პროდუქტი.
      courseE_farmer_predict2_authored_hint: []
      courseE_farmer_predict2_2018_authored_hint: []
      courseE_farmer_ramp11_authored_hint:
        courseE_farmer_ramp11_a: თუ გიჭირთ დანახვა, სად უნდა გამოიყენოთ ციკლები, ჯერ
          მთლიანად დაწერეთ კოდი, შემდეგ კი დააკვირდით, რა ნაწილები მეორდება.
        courseE_farmer_ramp11_b: როგორ შეგიძლიათ `გამეორების` ციკლის მეშვეობით, აიღოთ
          სალათის ფურცლები, 5 `სალათის აღების` ბლოკის გამოყენების გარეშე?
        courseE_farmer_ramp11_c: არაა საჭირო 5 გამეორების ციკლის გამოყენება მთელი
          სალათის ასაღებად. ამის მაგივრად, ჩააგდეთ თქვენი სალათის ამღები გამეორების
          ციკლი მეორე ციკლში (`წინ გადაადგილების` ბლოკთან ერთად) და გამოგივათ
      courseE_farmer_ramp11a_authored_hint:
        courseE_farmer_ramp12_a: 'იმისათვის, რომ უთხრათ ფერმერს, თუ რამდენჯერ აიღოს
          სალათის ფურცლები, `გამეორების` ციკლის გამოყნების მაგივრად, ამჯერად შეგიძლიათ
          გამოიყენოთ `სანამ კვლავ არის სალათი` ბლოკი.  '
        courseE_farmer_ramp12_b: სალათის ასაღებად მხოლოდ ერთხელ გჭირდებათ წინ გადაადგილება.
      courseE_farmer_ramp11a_2018_authored_hint:
        courseE_farmer_ramp12_a: 'იმისათვის, რომ უთხრათ ფერმერს, თუ რამდენჯერ აიღოს
          სალათის ფურცლები, `გამეორების` ციკლის გამოყნების მაგივრად, ამჯერად შეგიძლიათ
          გამოიყენოთ `სანამ კვლავ არის სალათი` ბლოკი.  '
        courseE_farmer_ramp12_b: სალათის ასაღებად მხოლოდ ერთხელ გჭირდებათ წინ გადაადგილება.
      courseE_farmer_ramp11b_authored_hint:
        courseE_farmer_ramp11b_a: კოდის შესამოკლებლად, შეგიძლიათ `სანამ` ციკლი `გამეორების`
          ციკლის შიგნით ჩააშენოთ.
      courseE_farmer_ramp11b_2018_authored_hint:
        courseE_farmer_ramp11b_a: კოდის შესამოკლებლად, შეგიძლიათ `სანამ` ციკლი `გამეორების`
          ციკლის შიგნით ჩააშენოთ.
      courseE_farmer_ramp12_authored_hint:
        courseE_farmer_ramp12_b: თქვენ კვლავ დაგჭირდებათ `გამეორების` ციკლსი გამოყენება
          ამ ყველაფრის გარეთ, რომ უთხრათ ფერმერს, რამდენჯერ გადაადგილდეს წინ და აიღოს
          სალათი.
      courseE_farmer_ramp12_2018_authored_hint:
        courseE_farmer_ramp12_b: თქვენ კვლავ დაგჭირდებათ `გამეორების` ციკლსი გამოყენება
          ამ ყველაფრის გარეთ, რომ უთხრათ ფერმერს, რამდენჯერ გადაადგილდეს წინ და აიღოს
          სალათი.
      courseE_farmer_ramp12_forswap_authored_hint:
        courseE_farmer_ramp12_b: თქვენ კვლავ დაგჭირდებათ `გამეორების` ციკლსი გამოყენება
          ამ ყველაფრის გარეთ, რომ უთხრათ ფერმერს, რამდენჯერ გადაადგილდეს წინ და აიღოს
          სალათი.
      courseE_farmer_ramp12_forswap_2018_authored_hint:
        courseE_farmer_ramp12_b: თქვენ კვლავ დაგჭირდებათ `გამეორების` ციკლსი გამოყენება
          ამ ყველაფრის გარეთ, რომ უთხრათ ფერმერს, რამდენჯერ გადაადგილდეს წინ და აიღოს
          სალათი.
      courseE_farmer_ramp12a_authored_hint:
        courseE_farmer_ramp12b: საჭიროა, შეამოწმოთ თქვენი`თუ` დებულება 21-ჯერ, რომ
          ამოხსნათ ეს თავსატეხი.
        courseE_farmer_ramp12c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
        courseE_farmer_ramp12d: იქ იქნება მხოლოდ სალათი, ასე რომ არ დაგჭირდებათ ცარიელ
          ადგილებზე, სიმინდსა თუ გოგრებზე ზრუნვა.
      courseE_farmer_ramp12a_2018_authored_hint:
        courseE_farmer_ramp12b: საჭიროა, შეამოწმოთ თქვენი`თუ` დებულება 21-ჯერ, რომ
          ამოხსნათ ეს თავსატეხი.
        courseE_farmer_ramp12c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
        courseE_farmer_ramp12d: იქ იქნება მხოლოდ სალათი, ასე რომ არ დაგჭირდებათ ცარიელ
          ადგილებზე, სიმინდსა თუ გოგრებზე ზრუნვა.
      courseE_farmer_ramp12b_authored_hint: []
      courseE_farmer_ramp12b_2018_authored_hint: []
      courseE_farmer_ramp12c_authored_hint:
        courseE_farmer_ramp12b_b: მაინც დაგჭირდებათ, რომ ჯერ`მდე` ციკლი გამოიყენოთ,
          ხოლო მას შემდეგ რაც სალათის ფურცელს მიაღწევთ, გამოიყენეთ `სანამ` ციკლი.
      courseE_farmer_ramp12c_2018_authored_hint:
        courseE_farmer_ramp12b_b: მაინც დაგჭირდებათ, რომ ჯერ`მდე` ციკლი გამოიყენოთ,
          ხოლო მას შემდეგ რაც სალათის ფურცელს მიაღწევთ, გამოიყენეთ `სანამ` ციკლი.
      courseE_farmer_ramp12d_authored_hint:
        courseE_farmer_ramp12d_b: ამ თავსატეხის ამოსახსნელად მაინც დაგჭირდებათ `მოვლენამდე`
          და `სანამ`ციკლების `გამეორების` ციკლში ჩასმა!
      courseE_farmer_ramp12d_2018_authored_hint:
        courseE_farmer_ramp12d_b: ამ თავსატეხის ამოსახსნელად მაინც დაგჭირდებათ `მოვლენამდე`
          და `სანამ`ციკლების `გამეორების` ციკლში ჩასმა!
      courseE_farmer_ramp12e_authored_hint:
        courseE_farmer_ramp12e_b: ამ თავსატეხის ამონახსნი ბოლო თავსატეხის ამონახსნის
          მსგავსი იქნება, თუმცა მიმართულებას შეიცვლის.
      courseE_farmer_ramp12e_2018_authored_hint:
        courseE_farmer_ramp12e_b: ამ თავსატეხის ამონახსნი ბოლო თავსატეხის ამონახსნის
          მსგავსი იქნება, თუმცა მიმართულებას შეიცვლის.
      courseE_farmer_ramp12f_authored_hint:
        courseE_farmer_ramp12f_b: გამოიყენეთ `თუ/კიდევ` ბლოკი იმისათვის, რომ ფერმერს
          დაეხმაროთ და გადააწყვეტინოთ, მარჯვნივ შეუხვიოს თუ მარცხნივ.
      courseE_farmer_ramp12f_2018_authored_hint:
        courseE_farmer_ramp12f_b: გამოიყენეთ `თუ/კიდევ` ბლოკი იმისათვის, რომ ფერმერს
          დაეხმაროთ და გადააწყვეტინოთ, მარჯვნივ შეუხვიოს თუ მარცხნივ.
      courseE_farmer_ramp12g_authored_hint:
        courseE_farmer_ramp12G_b: გამოიყენეთ `თუ/კიდევ` ბლოკი იმისათვის, რომ ფერმერს
          დაეხმაროთ და გადააწყვეტინოთ, მარჯვნივ შეუხვიოს თუ მარცხნივ.
      courseE_farmer_ramp12g_2018_authored_hint:
        courseE_farmer_ramp12G_b: გამოიყენეთ `თუ/კიდევ` ბლოკი იმისათვის, რომ ფერმერს
          დაეხმაროთ და გადააწყვეტინოთ, მარჯვნივ შეუხვიოს თუ მარცხნივ.
      courseE_farmer_ramp13_authored_hint:
        courseE_farmer_ramp13_a: ერთ ადგილას მხოლოდ რომელიმე ერთი სახის მოსავალი შეიძლება
          იყოს, ასე რომ, აუცილებლად გამოიყენეთ `სანამ` ციკლები, მათ მთლიანად ასაღებად!
        courseE_farmer_ramp13_b: გამოიყენეთ `გამეორების` ციკლი, რათა არ მოგიწიოთ თითოეული
          კვადრატისათვის ცალკე "თუ" დებულების დაწერა.
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try
          writing your code step-by-step and look for patterns.
      courseE_farmer_ramp13_2018_authored_hint:
        courseE_farmer_ramp13_a: ერთ ადგილას მხოლოდ რომელიმე ერთი სახის მოსავალი შეიძლება
          იყოს, ასე რომ, აუცილებლად გამოიყენეთ `სანამ` ციკლები, მათ მთლიანად ასაღებად!
        courseE_farmer_ramp13_b: გამოიყენეთ `გამეორების` ციკლი, რათა არ მოგიწიოთ თითოეული
          კვადრატისათვის ცალკე "თუ" დებულების დაწერა.
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try
          writing your code step-by-step and look for patterns.
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_a: გამოიყენეთ `გამეორება გოგრამდე` ბლოკი, რომ მიაღწოთ
          გზის ბოლომდე.
        courseE_farmer_ramp15_b: კიდევ რისი გაკეთებაა საჭირო გოგრისაკენ მიმავალ გზაზე
          მოძრაობისას?
        courseE_farmer_ramp15_c: გოგრისაკენ მიმავალ გზაზე დალაგებულ ყლორტებში იმალება
          სხვადასხვა რაოდენობის სიმინდი ან სალათი, თქვენ კი ის უნდა მოიმკოთ.
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_a: გამოიყენეთ `გამეორება გოგრამდე` ბლოკი, რომ მიაღწოთ
          გზის ბოლომდე.
        courseE_farmer_ramp15_b: კიდევ რისი გაკეთებაა საჭირო გოგრისაკენ მიმავალ გზაზე
          მოძრაობისას?
        courseE_farmer_ramp15_c: გოგრისაკენ მიმავალ გზაზე დალაგებულ ყლორტებში იმალება
          სხვადასხვა რაოდენობის სიმინდი ან სალათი, თქვენ კი ის უნდა მოიმკოთ.
      courseE_farmer_ramp16_authored_hint:
        courseE_farmer_ramp16_a: თუ ჩვენ ვმოძრაობდით გოგრისაკენ მიმავალ გზაზე, რისი
          გაკეთებაა საჭირო ისევ და ისევ? როდის ვწყვეტთ ამის გამეორებას?
        courseE_farmer_ramp16_b: თითოეული ადგილის შემოწმება სიმინდისა და სალათის არსებობაზე
          დაგეხმარებათ კოდის გამარტივებაში. რა უნდა გააკეთოთ, თუ ადგილზე იპოვით მოსავალს?
          და თუ იქ არაფერია?
        courseE_farmer_ramp16_c: გამოიყენეთ `თუ/სხვაგვარად` ბლოკი, რომ არ შეწყვიტოთ
          წინ მოძრაობა. რომელ მხარეს გჭირდებათ შებრუნება, როდესაც წინ მიმავალი გზა
          დაიბლოკება?
      courseE_maze_predict1_authored_hint: []
      courseE_maze_predict1_2018_authored_hint: []
      courseE_maze_ramp1_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure
          all three of the blocks have been fully clicked together, then click "Run"
          again.
        courseC_maze_programming1_b: ამ თავსატეხისათვის დამატებითი ბლოკები არ გჭირდებათ!
      courseE_maze_ramp13_authored_hint:
        courseD_maze_ramp11_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseD_maze_ramp11_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
      courseE_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure
          all three of the blocks have been fully clicked together, then click "Run"
          again.
        courseC_maze_programming1_b: ამ თავსატეხისათვის დამატებითი ბლოკები არ გჭირდებათ!
      courseE_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: დარწმუნდით, რომ სამივე `წინ გადაადგილების` ბლოკი
          მიმაგრებულია `გაშვებისას` ბლოკს.
      courseE_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the
          toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: დარწმუნდით, რომ სამივე `წინ გადაადგილების` ბლოკი
          მიმაგრებულია `გაშვებისას` ბლოკს.
      courseE_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: დაიმახსოვრეთ, რომ მარჯვნივ და მარცხნივ მობრუნება
          განისაზღვრება ჩიტის პერსპექტივიდან.
      courseE_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: დაიმახსოვრეთ, რომ მარჯვნივ და მარცხნივ მობრუნება
          განისაზღვრება ჩიტის პერსპექტივიდან.
      courseE_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the pig.
        courseC_maze_programming4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseE_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the pig.
        courseC_maze_programming4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseE_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: რამდენად შორს უნდა გადაადგილდეთ კუთხემდე მისაღწევად?
        courseC_maze_programming5_c: ღორამდე მისაღწევად საჭიროა კუთხესთან მარცხნივ
          მოხვევა.
      courseE_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: რამდენად შორს უნდა გადაადგილდეთ კუთხემდე მისაღწევად?
        courseC_maze_programming5_c: ღორამდე მისაღწევად საჭიროა კუთხესთან მარცხნივ
          მოხვევა.
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseC_maze_programming6_b: არ დაგავიწყდეთ გადაადგილებამდე მობრუნება, რადგანაც
          ჩიტი კედელთან სახით აღმოჩნდება.
        courseC_maze_programming6_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseC_maze_programming6_b: არ დაგავიწყდეთ გადაადგილებამდე მობრუნება, რადგანაც
          ჩიტი კედელთან სახით აღმოჩნდება.
        courseC_maze_programming6_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების
          დამატება, კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი
          არ გქონდეთ.
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseD_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseD_maze_ramp7_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseD_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseD_maze_ramp7_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseE_maze_ramp_predict1_authored_hint: []
      courseE_multi_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code
          line by line. Can you figure out what you need to do next?
      courseE_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          აქ მოცემულია რაღაცები, რისი გაკეთებაც შეგიძლიათ, როდესაც მოთამაშე თამაშს მოიგებს:

          * გააქრეთ დინოზავრი.
          * გახადეთ ციყვები და მხედარი ბედნიერი.
          * შეცვალეთ ფონი.
          * ათქმევინეთ მხედარს მადლობა დახმარებისათვის.
          * გააქრეთ ყველა მოქმედი პირი და გამოაჩინეთ "თქვენ მოიგეთ!" ტექსტი.
        courseE_playLab_challenge1_b: |-
          აქ მოცემულია რაღაცები, რისი გაკეთებაც შეგიძლიათ, როდესაც მოთამაშე თამაშს წააგებს:

          * გააქრეთ მხედარი.
          * გახადეთ ციყვები ნაღვლიანი.
          * ათქმევინეთ დინოზავრს რამე.
          * შეცვლაეთ ფონი.
          * გააქრეთ ყველა მოქმედი პირი და გამოაჩინეთ "თამაში დასრულებულია!" ტექსტი.
      courseE_playLab_challenge1_2018_authored_hint:
        courseE_playLab_challenge1_a: |-
          აქ მოცემულია რაღაცები, რისი გაკეთებაც შეგიძლიათ, როდესაც მოთამაშე თამაშს მოიგებს:

          * გააქრეთ დინოზავრი.
          * გახადეთ ციყვები და მხედარი ბედნიერი.
          * შეცვალეთ ფონი.
          * ათქმევინეთ მხედარს მადლობა დახმარებისათვის.
          * გააქრეთ ყველა მოქმედი პირი და გამოაჩინეთ "თქვენ მოიგეთ!" ტექსტი.
        courseE_playLab_challenge1_b: |-
          აქ მოცემულია რაღაცები, რისი გაკეთებაც შეგიძლიათ, როდესაც მოთამაშე თამაშს წააგებს:

          * გააქრეთ მხედარი.
          * გახადეთ ციყვები ნაღვლიანი.
          * ათქმევინეთ დინოზავრს რამე.
          * შეცვლაეთ ფონი.
          * გააქრეთ ყველა მოქმედი პირი და გამოაჩინეთ "თამაში დასრულებულია!" ტექსტი.
      courseE_playLab_embed_scaffold5_authored_hint: []
      courseE_playLab_scaffold1_authored_hint:
        courseE_playLab_scaffold1_a: "`მსახიობი 1-ისთვის ??? სურათის დაყენების` ბლოკი
          შეიძლება გამოყენებული იქნას სცენაზე მსახიობის დასამატებლად."
        courseE_playLab_scaffold1_b: ჩასვით `მსახიობის დაყენების` ბლოკი `როდის გაიქცეს`
          ბლოკის ქვეშ, რათა გამოაჩინოთ თქვენი მსახიობი პროგრამის დასაწყისშივე.
        courseE_playLab_scaffold1_c: გამოიყენეთ `???-ის ფონად დაყენება` თქვენი სცენისათვის
          ფონის შესარჩევად.
      courseE_playLab_scaffold1_2018_authored_hint:
        courseE_playLab_scaffold1_a: "`მსახიობი 1-ისთვის ??? სურათის დაყენების` ბლოკი
          შეიძლება გამოყენებული იქნას სცენაზე მსახიობის დასამატებლად."
        courseE_playLab_scaffold1_b: ჩასვით `მსახიობის დაყენების` ბლოკი `როდის გაიქცეს`
          ბლოკის ქვეშ, რათა გამოაჩინოთ თქვენი მსახიობი პროგრამის დასაწყისშივე.
        courseE_playLab_scaffold1_c: გამოიყენეთ `???-ის ფონად დაყენება` თქვენი სცენისათვის
          ფონის შესარჩევად.
      courseE_playLab_scaffold2_authored_hint:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: უნდა გქონდეთ ოთხი `როდესაც ისარი` მოვლენის ბლოკი
          ისეთი მიმართულებით, რომ იმოძრაონ თითოეულის ქვეშ.
        courseE_playLab_scaffold1_c: როდესაც მორჩებით, შეგიძლიათ გადაადგილოთ თქვენი
          გმირი ისრებიანი ღილაკებით!
      courseE_playLab_scaffold2_2018_authored_hint:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: უნდა გქონდეთ ოთხი `როდესაც ისარი` მოვლენის ბლოკი
          ისეთი მიმართულებით, რომ იმოძრაონ თითოეულის ქვეშ.
        courseE_playLab_scaffold1_c: როდესაც მორჩებით, შეგიძლიათ გადაადგილოთ თქვენი
          გმირი ისრებიანი ღილაკებით!
      courseE_playLab_scaffold3_authored_hint: []
      courseE_playLab_scaffold3_2018_authored_hint: []
      courseE_playLab_scaffold4_authored_hint:
        courseE_playLab_scaffold4_a: გამოიყენეთ `ქულის დამატება`, ქულის დასამატებლად
          და `ქულის გამოკლება` - გამოსაკლებად.
      courseE_playLab_scaffold4_2018_authored_hint:
        courseE_playLab_scaffold4_a: გამოიყენეთ `ქულის დამატება`, ქულის დასამატებლად
          და `ქულის გამოკლება` - გამოსაკლებად.
      courseE_playLab_scaffold5_authored_hint:
        courseE_playLab_scaffold5_a: ამ დონის დასასრულებლად უნდა მოიგოთ, ან წააგოთ.
          გამოიყენეთ `თამაშის მოგებულად დასრულება` ან `თამაშის წაგებულად დასრულება`
          ბლოკი დასასრულებლად.
      courseE_playLab_scaffold5_2018_authored_hint:
        courseE_playLab_scaffold5_a: ამ დონის დასასრულებლად უნდა მოიგოთ, ან წააგოთ.
          გამოიყენეთ `თამაშის მოგებულად დასრულება` ან `თამაშის წაგებულად დასრულება`
          ბლოკი დასასრულებლად.
      courseE_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          მსახიობმა იცის, რა თქვას მისი განწყობიდან გამომდინარე. ეცადეთ შეცვალოთ რაღაცები, რაც ჯადოქარმა შეიძლება თქვას.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">კონცენტრირდი და იკითხე თავიდან!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "ისეთი წარმოდგენა შეიქმნება, რომ თამაში თავიდან
          იწყება, თუ კვლავ გამოიძახებთ `შეკითხვის დასმის` ფუნქციას პირობითი ბრძანებების
          სიის ქვემოთ.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n
          \              \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"კითხვის
          დასმა\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "დაგჭირდებათ მეტი პირობითი დებულების დამატება,
          რომ მსახიობებს მეტი რამის თქმა შეეძლოთ.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\"
          inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value
          name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement
          name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n
          \           <value name=\"SPRITE\">\n              <block type=\"math_number\">\n
          \               <title name=\"NUM\">1</title>\n              </block>\n
          \           </value>\n            <value name=\"TEXT\">\n              <block
          type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n
          \           </value>\n            <value name=\"TIME\">\n              <block
          type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n
          \           </value>\n          </block>\n              </statement></block></xml>\n
          \             \nარ დაგავიწყდეთ შეცვალოთ, თუ რომელ განწყობებს აჩვენებს მსახიობი
          `გაიმეორე უსასრულოდ` ციკლში. აგრეთვე შეგიძლიათ განწყობები დააყენოთ შემთხვევითად!"
        courseE_playlab_challenge2_d: |-
          მას შემდეგ, რაც გაიგებთ მთელ კოდს, რომელიც უკავშირდება 1-ლ მსახიობთ, სცადეთ გადაწეროთ იგივე კოდი, მაგრამ, ამჯერად, მე-2 მსახიობისთვის.

          არ დაგავიწყდეთ `სათაურის ჩვენების` ბლოკში ინსტრუქციების ისე შეცვლა, რომ აზრი არ დაიკარგოს!
        courseE_playlab_challenge2_e: |-
          როდესაც ყველაფერს მორჩებით, უნდა შეგეძლოთ თითოეულ მსახიობზე დაკლიკება და 8 სხვადასხვა შეტყობინებინს მიღება. შესაძლებელია ამის კიდევ უფრო მეტად გავრცობა?

          გამოაცდევინეთ თქვენს მეგობარს აპლიკაცია, როდესაც მორჩებით!
      courseE_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          მსახიობმა იცის, თუ რა თქვას, რადგან ის ამოწმებს `იღბალის` ცვლადის მიმდინარე მნიშვნელობას.

          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">კონცენტრირდი და იკითხე თავიდან!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          ისეთი წარმოდგენა შექიმნება, რომ თამაში თავიდან იწყება, თუ კვლავ გამოიძახებთ `შეკითხვის დასმის` ფუნქციას მას შემდეგ, რაც მსახიობი იტყვის იღბალს.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">იღბალი</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "თქვენ მოგიწევთ მეტი პირობითი გამოსახულების
          დამატება, რათა მისცეთ მსახიობებს მეტის თქმის საშუალება.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\"
          inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value
          name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement
          name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n
          \               <title name=\"VAR\">fortune</title>\n                <value
          name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n
          \                   <title name=\"TEXT\">???</title>\n                  </block>\n
          \               </value>\n              </block>\n              </statement></block></xml>\n
          \             \nარ დაგავიწყდეთ იმის შეცვლა, თუ რომელ ემოციებს გამოხატავს
          მსახიობი `გაიმეორე უსასრულოდ` ციკლის შიგნით. თქვენ ასევე შეგიძლიათ გააკეთოთ
          ისე, რომ ეს ემოციები იყოს შემთხვევითი!"
        courseF_playlab_variables_challenge3_d: |-
          როდესაც გაიაზრებთ მთელ კოდს, რომელიც უკავშირდება 1-ლ მსახიობს, სცადეთ იგივე კოდის დაწერა მე-2 მსახიობისთვის.

          არ დაგავიწყდეთ ინსტრუქციების შეცვლა `შეკითხვის დასმის` ფუნქციაში, რათა ამ ყველაფერს აზრი ჰქონდეს!
        courseF_playlab_variables_challenge3_e: |-
          როდესაც ყველაფერს მორჩებით, უნდა შეგეძლოთ თითოეულ მსახიობზე დაკლიკება და 8 სხვადასხვა შეტყობინებინს მიღება. შესაძლებელია ამის კიდევ უფრო მეტად გავრცობა?

          გამოაცდევინეთ თქვენს მეგობარს აპლიკაცია, როდესაც მორჩებით!
      courseF_IceAge_1_authored_hint:
        iceage_hello1_a: ამ თავსატეხის ამოსახსნელად თქვენ მხოლოდ ერთი ბლოკის დამატება
          გჭირდებათ. გადმოათრიეთ `1-ლი მსახიობი ამბობს` ბლოკი პანელიდან და დაუკავშირეთ
          ის `გაშვებისას` მოვლენების ბლოკს, რომელიც უკვე არის სამუშაო სივრცეში. შემდეგ
          ჩაბეჭდეთ შიგნით "გამარჯობა!".
      courseF_IceAge_10_authored_hint:
        iceage_throw_hearts_a: როდის გინდათ ესროლოთ ბებოს გულები? ისრების ღილაკებზე
          დაჭერის დროს? სიდზე დაწკაპების დროს? ბებოზე დაწკაპების დროს? არჩევანი თქვენზეა!
        iceage_throw_hearts_b: იმისათვის, რომ ბებო გააბედნიეროთ გულის მიღების შემდეგ,
          თქვენ მოგიწევთ დააკავშიროთ `განსაზღვრე 2 მსახიობის ხასიათი, როგორც ბედნიერი`
          ბლოკი `როდესაც მეორე მსახიობი შეეხება ნივთს` მოვლენას.
      courseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'შეგიძლიათ მოუწყოთ სიდს და მენის ყინულის კრისტალებით ბრძოლა?  '
        iceage_free_play_b: დააჭერინეთ ბებოს დიეგო. დაასრულეთ თამაში, თუ ის დაიჭერს
          მას.
        iceage_free_play_c: შეგიძლიათ გააკეთოთ ისე, რომ სიდმა დიეგოს ფიფქები ესროლოს,
          ხოლო დიეგო გაიზარდოს ყოველი ფიფქის მოხვედრისას? დაასრულეთ თამაში გამარჯვებით,
          თუ დიეგოს მოხვდება 5 ფიფქი.
      courseF_IceAge_2_authored_hint:
        iceage_hello2_a: 'ამ თავსატეხის ამოსახსნელად თქვენ მოგიწევთ ათქმევინოთ სიდს
          რამე `1-ლი მსახიობი ამბობს` ბლოკით. თქვენ ასევე მოგიწევთ ათქმევინოთ მენის
          რამე `მე-2 მსახიობი ამბობს` ბლოკის საშუალებით. '
      courseF_IceAge_3_authored_hint:
        iceage_hello3_a: გამოიყენეთ `ამოძრავე 1 მსახიობი მარჯვნივ 200 პიქსელით` ბლოკი,
          რათა ამოხსნათ ეს თავსატეხი.
      courseF_IceAge_4_authored_hint:
        iceage_move_to_actor_a: ამ თავსატეხის ამოსახსნელად, თქვენ შეგიძლიათ ან ამოძრავოთ
          დიეგო ქვემოთ 200 პიქსელით, ან ამოძრავოთ მენი ზემოთ 200 პიქსელით.
        iceage_move_to_actor_b: დააკავშირეთ `დაუკარი___ხმა` ბლოკი `როდესაც მსახიობი
          1 შეეხება მსახიობ 2-ს` მოვლენას ამ გამოწვევის დასასრულებად.
      courseF_IceAge_5_authored_hint:
        iceage_repeat_a: გამოიყენეთ `ამოძრავე მსახიობი 1 მარცხნივ` და `ამოძრავე მსახიობი
          1 მარჯვნივ` ბლოკები ამ თავსატეხის ამოსახსნელად.
      courseF_IceAge_6_authored_hint:
        iceage_click_hello_a: ამ თავსატეხის ამოსხსნელად, დაამატეთ ერთი ან მეტი `1
          მსახიობო თქვი` ბლოკები `როცა დააწკაპებთ` მოვლენას.
      courseF_IceAge_7_authored_hint:
        iceage_move_events_a: 'ყოველი `როდესაც___ისარი` მოვლენა საჭიროებს განსხვავებულ
          `ამოძრავე მსახიობი 1` ბრძანებას თავსატეხის ამოსახსნელად. '
      courseF_IceAge_8_authored_hint:
        iceage_sound_and_points_a: თქვენ მოგიწევთ ორი ბლოკის დამატება `როდესაც მსახიობი
          1 შეეხება მსახიობ 2-ს` მოვლენის ქვეშ.
        iceage_sound_and_points_b: 'თქვენ დაგჭირდებათ ორივე: `შეაგროვე ქულა` და `დაუკარი
          ___ ხმა` ბლოკები ამ დონის დასამთავრებლად.'
      courseF_IceAge_9_authored_hint:
        iceage_warn_ice_age_a: 'ამ თავსატეხის დასასრულებლად თქვენ მხოლოდ ორი ბლოკის
          დამატება დაგჭირდებათ. '
        iceage_warn_ice_age_b: დაამატეთ ორივე ახალი ბლოკი `გაშვებისას` მოვლენის შიგნით,
          რათა ისინი პროგრამის გაშვებისთანავე შესრულდნენ.
      courseF_IceAge_template_authored_hint: []
      courseF_artist_embed_for7_authored_hint: []
      courseF_artist_for1_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter
          for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_2018_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter
          for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_predict1_authored_hint: []
      courseF_artist_for10_predict1_2018_authored_hint: []
      courseF_artist_for1_2018_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for2_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.

          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: არ დაგავიწყდეთ 10-ის ტოლი ბიჯით დათვლა თქვენს ციკლში.
        courseF_artist_for2_c: |-
          ეს ის ნიმუშია, რომელსაც მიჰყვება მხატვარი:

          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for2_2018_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.

          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: არ დაგავიწყდეთ 10-ის ტოლი ბიჯით დათვლა თქვენს ციკლში.
        courseF_artist_for2_c: |-
          ეს ის ნიმუშია, რომელსაც მიჰყვება მხატვარი:

          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for3_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.

          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_artist_for3_2018_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.

          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: "**რა არის უმცირესი რიცხვი, რომელიც დაგჭირდებათ? \nრა
          არის უდიდესი რიცხვი?\nრამდენად დიდია ზრდა ყოველ ჯერზე?**\n\nეს არის კითხვები,
          რომლებზეც პასუხის გაცემა გჭირდებათ იმისათვის, რომ  `for` ციკლში გამოტოვებული
          ადგილები შეავსოთ."
        courseF_artist_for4_b: თქვენი კოდი წინა თავსატეხის კოდის მსგავსი იქნება, თუმცა
          არ დაგავიწყდეთ, რომ ამჯერად კვადრატი უნდა დახატოთ!
        courseF_artist_for4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: "**რა არის უმცირესი რიცხვი, რომელიც დაგჭირდებათ? \nრა
          არის უდიდესი რიცხვი?\nრამდენად დიდია ზრდა ყოველ ჯერზე?**\n\nეს არის კითხვები,
          რომლებზეც პასუხის გაცემა გჭირდებათ იმისათვის, რომ  `for` ციკლში გამოტოვებული
          ადგილები შეავსოთ."
        courseF_artist_for4_b: თქვენი კოდი წინა თავსატეხის კოდის მსგავსი იქნება, თუმცა
          არ დაგავიწყდეთ, რომ ამჯერად კვადრატი უნდა დახატოთ!
        courseF_artist_for4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_artist_for5_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making
          this spiral!
        courseF_artist_for5_b: თქვენი `for` ციკლი, მოძრაობის და მობრუნების ბლოკები
          შეიძლება დარჩეს იგივე.
      courseF_artist_for5_2018_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making
          this spiral!
        courseF_artist_for5_b: თქვენი `for` ციკლი, მოძრაობის და მობრუნების ბლოკები
          შეიძლება დარჩეს იგივე.
      courseF_artist_for6_authored_hint:
        courseF_artist_for6_a: თქვენი `for` ციკლი დაითვლის 15-დან 300-მდე 15-ის ტოლი
          ბიჯით.
        courseF_artist_for6_b: განათავსეთ `წინ გადაადგილებისა` და `მობრუნების` ბლოკები
          ამ`for` ციკლში.
        courseF_artist_for6_c: ამჯერად `მობრუნების` ბლოკში მხოლოდ გრადუსების რაოდენობის
          შეცვლა გიწევთ.
      courseF_artist_for6_2018_authored_hint:
        courseF_artist_for6_a: თქვენი `for` ციკლი დაითვლის 15-დან 300-მდე 15-ის ტოლი
          ბიჯით.
        courseF_artist_for6_b: განათავსეთ `წინ გადაადგილებისა` და `მობრუნების` ბლოკები
          ამ`for` ციკლში.
        courseF_artist_for6_c: ამჯერად `მობრუნების` ბლოკში მხოლოდ გრადუსების რაოდენობის
          შეცვლა გიწევთ.
      courseF_artist_for7_authored_hint:
        courseF_artist_for7_a: The increment for this puzzle is 2.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: ამ თავსატეხის `for` ციკლი იწყება 15-ით და ადის 300-მდე
          2-ს ტოლი ბიჯით.
        courseF_artist_for7_d: ეს სურათი იქმნება 89 გრადუსის ტოლი მობრუნებით.
      courseF_artist_for7_2018_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to
          set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: ამ თავსატეხის `for` ციკლი იწყება 15-ით და ადის 300-მდე
          2-ს ტოლი ბიჯით.
        courseF_artist_for7_d: ეს სურათი იქმნება 89 გრადუსის ტოლი მობრუნებით.
      courseF_artist_for8_authored_hint:
        courseF_artist_for8_a: ამ კოდში ყველაფერი უნდა დატოვოთ ძველებურად, გარდა მობრუნების
          კუთხისა.
        courseF_artist_for8_b: სურვილის შემთხვევაში, შეგიძლიათ შეურჩიოთ თქვენს სპირალს
          განსხვავებული ფერი!
      courseF_artist_for8_2018_authored_hint:
        courseF_artist_for8_a: ამ კოდში ყველაფერი უნდა დატოვოთ ძველებურად, გარდა მობრუნების
          კუთხისა.
        courseF_artist_for8_b: სურვილის შემთხვევაში, შეგიძლიათ შეურჩიოთ თქვენს სპირალს
          განსხვავებული ფერი!
      courseF_artist_for9_authored_hint:
        courseF_artist_for9_a: თუ `განსაზღვრე ალფა` ბლოკს განათავსებთ `for` ციკლში
          და გამოიყენეთ `მთვლელის` ცვლადს მის შესაცვლელად, თქვენ შეძლებთ ამის მსგავსი
          დიზაინის შექმნას.
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color.
          The smaller the value, the more transparent the color is.
      courseF_artist_for9_2018_authored_hint:
        courseF_artist_for9_a: თუ `განსაზღვრე ალფა` ბლოკს განათავსებთ `for` ციკლში
          და გამოიყენეთ `მთვლელის` ცვლადს მის შესაცვლელად, თქვენ შეძლებთ ამის მსგავსი
          დიზაინის შექმნას.
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color.
          The smaller the value, the more transparent the color is.
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: "`კალმის სიგანე` 1-ია. პირველი კვადრატის
          გვერდები 50 პიქსელია, ხოლო ყოველი შემდეგი კვადრატის გვერდი 50 პიქსელით უფრო
          ფართოა, ვიდრე წინასი."
        courseF_artist_for_challenge1_b: ფუნჯის გამჭვირვალობა ყოველთვის ტოლია`მთვლელი`/2-ის.
        courseF_artist_for_challenge1_c: როდესაც დახატავთ ყველა კვადრატს არ დაგავიწყდეთ
          უკან გადახტომა, მობრუნება, ისევ გადახტომა და უკან მობრუნება!
        courseF_artist_for_challenge1_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: "`კალმის სიგანე` 1-ია. პირველი კვადრატის
          გვერდები 50 პიქსელია, ხოლო ყოველი შემდეგი კვადრატის გვერდი 50 პიქსელით უფრო
          ფართოა, ვიდრე წინასი."
        courseF_artist_for_challenge1_b: ფუნჯის გამჭვირვალობა ყოველთვის ტოლია`მთვლელი`/2-ის.
        courseF_artist_for_challenge1_c: როდესაც დახატავთ ყველა კვადრატს არ დაგავიწყდეთ
          უკან გადახტომა, მობრუნება, ისევ გადახტომა და უკან მობრუნება!
        courseF_artist_for_challenge1_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: "`for ციკლი` იზდება 5-დან 250-მდე 2-ის ტოლი
          ბიჯით. "
        courseF_artist_for_challenge2_a: ფერის შეცვლა ხდება `განსაზღვრე ფერი წითლად,
          მწვანედ, ლურჯად` ბლოკით. წითელი ყოველთვის ტოლია 255-ის, მწვანე `მთვლელის`,
          ხოლო ლურჯი ყოველთვის არის`255 - მთვლელი`.
        courseF_artist_for_challenge2_b: კოდი გაცილებით უფრო მარტივია, ვიდრე შეიძლება
          იფიქროთ. უბრალოდ განსაზღვრეთ ფერი `for ციკლის` შიგნით, გადაადგილდით წინ,
          შემდეგ კი შებრუნდით.
        courseF_artist_for_challenge2_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: "`for ციკლი` იზდება 5-დან 250-მდე 2-ის ტოლი
          ბიჯით. "
        courseF_artist_for_challenge2_a: ფერის შეცვლა ხდება `განსაზღვრე ფერი წითლად,
          მწვანედ, ლურჯად` ბლოკით. წითელი ყოველთვის ტოლია 255-ის, მწვანე `მთვლელის`,
          ხოლო ლურჯი ყოველთვის არის`255 - მთვლელი`.
        courseF_artist_for_challenge2_b: კოდი გაცილებით უფრო მარტივია, ვიდრე შეიძლება
          იფიქროთ. უბრალოდ განსაზღვრეთ ფერი `for ციკლის` შიგნით, გადაადგილდით წინ,
          შემდეგ კი შებრუნდით.
        courseF_artist_for_challenge2_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_fwp1_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the
          function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number
          of sides in a square.
      courseF_artist_fwp1_2018_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the
          function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number
          of sides in a square.
      courseF_artist_fwp2_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the
          function.  Once you're there, add a parameter called `length` and use it
          inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the
          best possible code!
      courseF_artist_fwp2_2018_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the
          function.  Once you're there, add a parameter called `length` and use it
          inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the
          best possible code!
      courseF_artist_fwp2_predict1_authored_hint: []
      courseF_artist_fwp2_predict1_2018_authored_hint: []
      courseF_artist_fwp3_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp3_2018_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the
          one that is already there!
        courseF_artist_fwp4_c: ფიგურების დასახატად მოგიწევთ თქვენი ფუნქციის სამჯერ
          გამოძახება.
      courseF_artist_fwp4_2018_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the
          one that is already there!
        courseF_artist_fwp4_c: ფიგურების დასახატად მოგიწევთ თქვენი ფუნქციის სამჯერ
          გამოძახება.
      courseF_artist_fwp5_authored_hint:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: თქვენ მგიწევთ ფუნქციის ოდნავ დარედაქტირება, ვინაიდან
          თქვენი წინა ფუნქცია აბრუნებდა მხატვარს მარჯვნივ ყოველი გვერდის შემდეგ, ხოლო
          ეს სურათი უნდა იყოს შებრუნებული მარცხნივ.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number
          of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp5_2018_authored_hint:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: თქვენ მგიწევთ ფუნქციის ოდნავ დარედაქტირება, ვინაიდან
          თქვენი წინა ფუნქცია აბრუნებდა მხატვარს მარჯვნივ ყოველი გვერდის შემდეგ, ხოლო
          ეს სურათი უნდა იყოს შებრუნებული მარცხნივ.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number
          of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp6_authored_hint:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure
          out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to
          finish this code.
      courseF_artist_fwp6_2018_authored_hint:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure
          out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to
          finish this code.
      courseF_artist_fwp7_authored_hint:
        courseF_artist_fwp7_a: 'Did the code get so scrambled up that it''s no longer
          recognizable?  Try clicking the "Start over" button in the upper right-hand
          corner. '
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot
          in your `for` loop, inside the function.
      courseF_artist_fwp7_2018_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking
          the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot
          in your `for` loop, inside the function.
      courseF_artist_fwp8_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to
          change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function
          calls is change the color of the line.
      courseF_artist_fwp8_2018_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to
          change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function
          calls is change the color of the line.
      courseF_artist_fwp9_authored_hint:
        courseF_artist_fwp9_a: |-
          სცადეთ ამ ნახატებიდან ერთ-ერთი:
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp9_2018_authored_hint:
        courseF_artist_fwp9_a: |-
          სცადეთ ამ ნახატებიდან ერთ-ერთი:
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp_challenge1_authored_hint:
        courseF_artist_fwp_challenge1_b: ეს რვაკუთხედების მიმდევრობაა, რომელთა გვერდების
          სიგრძე `მთვლელის` ტოლია.
        courseF_artist_fwp_challenge1_c: ყოველი რვაკუთხედი გამოიძახება `for` ციკლიდან,
          რომელიც მცირდება 200-დან 2-ის ტოლი ბიჯით.
      courseF_artist_fwp_challenge1_2018_authored_hint:
        courseF_artist_fwp_challenge1_b: ეს რვაკუთხედების მიმდევრობაა, რომელთა გვერდების
          სიგრძე `მთვლელის` ტოლია.
        courseF_artist_fwp_challenge1_c: ყოველი რვაკუთხედი გამოიძახება `for` ციკლიდან,
          რომელიც მცირდება 200-დან 2-ის ტოლი ბიჯით.
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'ეს რვაკუთხედების მიმდევრობაა, რომელთა გვერდების
          სიგრძე `მთვლელის` ტოლია. '
        courseF_artist_fwp_challenge1_c: 'ყოველი რვაკუთხედი გამოიძახება `for` ციკლიდან,
          რომელიც მცირდება 200-დან 2-ს ტოლი ბიჯით. '
        courseF_artist_fwp_challenge1_d: 'არ დაგავიწყდეთ 22.5 გრადუსით მობრუნება ყოველი
          იტერაციის ბოლოს. '
        courseF_artist_fwp_challenge1_e: ყოველი რვაკუთხედის ფერი და კალმის სიგანე
          დამოკიდებულია `მთვლელის` ცვლადზე.
        courseF_artist_fwp_challenge1_f: |-
          **ამოხსნა:**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'ეს რვაკუთხედების მიმდევრობაა, რომელთა გვერდების
          სიგრძე `მთვლელის` ტოლია. '
        courseF_artist_fwp_challenge1_c: 'ყოველი რვაკუთხედი გამოიძახება `for` ციკლიდან,
          რომელიც მცირდება 200-დან 2-ს ტოლი ბიჯით. '
        courseF_artist_fwp_challenge1_d: 'არ დაგავიწყდეთ 22.5 გრადუსით მობრუნება ყოველი
          იტერაციის ბოლოს. '
        courseF_artist_fwp_challenge1_e: ყოველი რვაკუთხედის ფერი და კალმის სიგანე
          დამოკიდებულია `მთვლელის` ცვლადზე.
        courseF_artist_fwp_challenge1_f: |-
          **ამოხსნა:**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_predict1_authored_hint: []
      courseF_artist_predict1_2018_authored_hint: []
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_a: არ დაგავიწყდეთ, თითოეული სამკუთხედის შემდეგ 60 გრადუსით
          მობრუნება. რომელი ციკლში უნდა მოათავსოთ ეს ინსტრუქცია?
        courseF_artist_ramp10_b: თუ თქვენი კოდი სამკუთხედისთვის <xml><block type="controls_repeat"><title
          name="TIMES">6</title></block></xml> ციკლია, ეს დავალება გაცილებით უფრო
          მარტივი იქნება.
        courseF_artist_ramp10_c: |-
          ამ დიზაინისთვის, ჯამში ექვსი სამკუთხედი უნდა დახატოთ:

          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_a: არ დაგავიწყდეთ, თითოეული სამკუთხედის შემდეგ 60 გრადუსით
          მობრუნება. რომელი ციკლში უნდა მოათავსოთ ეს ინსტრუქცია?
        courseF_artist_ramp10_b: თუ თქვენი კოდი სამკუთხედისთვის <xml><block type="controls_repeat"><title
          name="TIMES">6</title></block></xml> ციკლია, ეს დავალება გაცილებით უფრო
          მარტივი იქნება.
        courseF_artist_ramp10_c: |-
          ამ დიზაინისთვის, ჯამში ექვსი სამკუთხედი უნდა დახატოთ:

          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp8_authored_hint:
        courseF_artist_ramp8_a: გვერდის დასახატად გამოიყენეთ <xml><block type="draw_move_by_constant"><title
          name="DIR">მოძრაობაწინ</title><title name="VALUE">100</title></block></xml>
          ბლოკი და შეცვალეთ 100 200-ზე.
        courseF_artist_ramp8_b: |-
          4 გვერდის დასახატად განათავსეთ <xml><block type="draw_move_by_constant"><title name="DIR">მოძრაობაწინ</title><title name="VALUE">200</title></block></xml> ბლოკი გამეორების ციკლში და დარწმუნდით, რომ ციკლი ხატავს 4-ჯერ.

          ამის შემდეგ არ დაგავიწყდეთ შებრუნდეთ!
        courseF_artist_ramp8_c: თქვენი მობრუნება ასევე მოთავსდება <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml> ციკლში.
      courseF_artist_ramp8_2018_authored_hint:
        courseF_artist_ramp8_a: გვერდის დასახატად გამოიყენეთ <xml><block type="draw_move_by_constant"><title
          name="DIR">მოძრაობაწინ</title><title name="VALUE">100</title></block></xml>
          ბლოკი და შეცვალეთ 100 200-ზე.
        courseF_artist_ramp8_b: |-
          4 გვერდის დასახატად განათავსეთ <xml><block type="draw_move_by_constant"><title name="DIR">მოძრაობაწინ</title><title name="VALUE">200</title></block></xml> ბლოკი გამეორების ციკლში და დარწმუნდით, რომ ციკლი ხატავს 4-ჯერ.

          ამის შემდეგ არ დაგავიწყდეთ შებრუნდეთ!
        courseF_artist_ramp8_c: თქვენი მობრუნება ასევე მოთავსდება <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml> ციკლში.
      courseF_artist_ramp9_authored_hint:
        courseF_artist_ramp9_a: რა საერთო აქვს ამას კვადრატთან? რით განსხვავდება?
        courseF_artist_ramp9_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseF_artist_ramp9_c: თქვენ მოგიწევთ 100 პიქსელით წინ გადაადგილება, შემდეგ
          ყოველი მხარეს 120 გრადუსით მობრუნება. შეგიძლიათ გამოიყენოთ <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml> ციკლი, თქვენი კოდის გასამარტივებლად?
      courseF_artist_ramp9_2018_authored_hint:
        courseF_artist_ramp9_a: რა საერთო აქვს ამას კვადრატთან? რით განსხვავდება?
        courseF_artist_ramp9_b: სცადეთ `მობრუნების` ბლოკებზე ჩამოსაშლელი სიების გამოყენება,
          რათა გაიგოთ თუ რომელი კუთხე გჭირდებათ!
        courseF_artist_ramp9_c: თქვენ მოგიწევთ 100 პიქსელით წინ გადაადგილება, შემდეგ
          ყოველი მხარეს 120 გრადუსით მობრუნება. შეგიძლიათ გამოიყენოთ <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml> ციკლი, თქვენი კოდის გასამარტივებლად?
      courseF_artist_variables10_authored_hint:
        courseF_artist_variables10_a: გაერთეთ ამ დონეზე! ნახეთ, რა მცირე ცვლილებების
          შეტანა შეგიძლიათ თქვენს კოდში.
        courseF_artist_variables10_b: თქვენ შეგიძლიათ გამოსცადოთ რამდენიმე რამ და
          გაუშვათ თქვენი კოდი რამდენჯერმე.
      courseF_artist_variables10_2018_authored_hint:
        courseF_artist_variables10_a: გაერთეთ ამ დონეზე! ნახეთ, რა მცირე ცვლილებების
          შეტანა შეგიძლიათ თქვენს კოდში.
        courseF_artist_variables10_b: თქვენ შეგიძლიათ გამოსცადოთ რამდენიმე რამ და
          გაუშვათ თქვენი კოდი რამდენჯერმე.
      courseF_artist_variables2_authored_hint:
        courseF_artist_variables2_a: არ დაგავიწყდეთ წინ მოძრაობა ყოველი სამკუთხედის
          დახატვის შემდეგ.
        courseF_artist_variables2_b: თქვენი ახალი ციკლი შეიცავს ციკლს თქვენი სამკუთხედისთვის,
          რომელსაც მოსდევს `წინ მოძრაობის` ბრძანება.
      courseF_artist_variables2_2018_authored_hint:
        courseF_artist_variables2_a: არ დაგავიწყდეთ წინ მოძრაობა ყოველი სამკუთხედის
          დახატვის შემდეგ.
        courseF_artist_variables2_b: თქვენი ახალი ციკლი შეიცავს ციკლს თქვენი სამკუთხედისთვის,
          რომელსაც მოსდევს `წინ მოძრაობის` ბრძანება.
      courseF_artist_variables3_authored_hint:
        courseF_artist_variables3_a: 'ცვლადი `სიგრძე` თქვენი კოდის ორ ნაწილში იქნება
          გამოყენებული: თქვენი სამკუთხედის გვერდის სიგრძეში და სამკუთხედებს შორის
          გადაადგილების სიგრძეში.'
        courseF_artist_variables3_b: 'რიცხვითი ბლოკი, რომლის მნიშვნელობაა 50, უნდა
          იყოს მხოლოდ ერთ ადგილას: `განსაზღვრე ცვლადის სიგრძე` ბლოკის შემდეგ.'
      courseF_artist_variables3_2018_authored_hint:
        courseF_artist_variables3_a: 'ცვლადი `სიგრძე` თქვენი კოდის ორ ნაწილში იქნება
          გამოყენებული: თქვენი სამკუთხედის გვერდის სიგრძეში და სამკუთხედებს შორის
          გადაადგილების სიგრძეში.'
        courseF_artist_variables3_b: 'რიცხვითი ბლოკი, რომლის მნიშვნელობაა 50, უნდა
          იყოს მხოლოდ ერთ ადგილას: `განსაზღვრე ცვლადის სიგრძე` ბლოკის შემდეგ.'
      courseF_artist_variables4_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to jump
          down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          ეს ის ნიმუშია, რომელსაც მიჰყვება მხატვარი:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to jump
          down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          ეს ის ნიმუშია, რომელსაც მიჰყვება მხატვარი:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables5_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost
          the same as the first half, except you will be turning *left*, jumping,
          then turning *right*.
        courseF_artist_variables5_b: თქვენი კოდის პირველი ნაწილი დახატავს პირველ სამ
          სამკუთხედს, ხოლო მეორე სხვა სამ სამკუთხედს.
        courseF_artist_variables5_c: დაიწყეთ პროგრამის პირველი ნაწილიდან კოდის ასლის
          შექმნით, შემდეგ კი შეცვალეთ ის, რათა შექმნათ ნაჩვენები დიზაინი.
        courseF_artist_variables5_d: |-
          ეს ის ნიმუშია, რომელსაც მიჰყვება მხატვარი:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost
          the same as the first half, except you will be turning *left*, jumping,
          then turning *right*.
        courseF_artist_variables5_b: თქვენი კოდის პირველი ნაწილი დახატავს პირველ სამ
          სამკუთხედს, ხოლო მეორე სხვა სამ სამკუთხედს.
        courseF_artist_variables5_c: დაიწყეთ პროგრამის პირველი ნაწილიდან კოდის ასლის
          შექმნით, შემდეგ კი შეცვალეთ ის, რათა შექმნათ ნაჩვენები დიზაინი.
        courseF_artist_variables5_d: |-
          ეს ის ნიმუშია, რომელსაც მიჰყვება მხატვარი:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change
          one number at the top to make this work.
        courseF_artist_variables6_b: თქვენ მოგიწევთ შეცვალოთ ის რიცხვითი ბლოკი, რომლის
          მნიშვნელობაც არის 50. ამ კოდში სხვა არაფრის შეცვლა არ გიწევთ.
      courseF_artist_variables6_2018_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change
          one number at the top to make this work.
        courseF_artist_variables6_b: თქვენ მოგიწევთ შეცვალოთ ის რიცხვითი ბლოკი, რომლის
          მნიშვნელობაც არის 50. ამ კოდში სხვა არაფრის შეცვლა არ გიწევთ.
      courseF_artist_variables6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead
          of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: ეს კოდი ძალიან ჰგავს თქვენს სამკუთხედის კოდს.
          მხოლოდ ფიგურაა განსხვავებული!
        courseF_artist_variables6a_c: პირველ რიგში დაწერეთ კოდი კვადრატისთვის, დაამატეთ
          კოდი, რათა იმოძრაოთ კვადრატებს შორის. საბოლოოდ, შეამოარტყით ამ ყველაფერს
          ციკლი!
        courseF_artist_variables6a_d: |-
          ეს ის ნიმუშია, რომელსაც თქვენ უნდა მიჰყვეთ!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead
          of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: ეს კოდი ძალიან ჰგავს თქვენს სამკუთხედის კოდს.
          მხოლოდ ფიგურაა განსხვავებული!
        courseF_artist_variables6a_c: პირველ რიგში დაწერეთ კოდი კვადრატისთვის, დაამატეთ
          კოდი, რათა იმოძრაოთ კვადრატებს შორის. საბოლოოდ, შეამოარტყით ამ ყველაფერს
          ციკლი!
        courseF_artist_variables6a_d: |-
          ეს ის ნიმუშია, რომელსაც თქვენ უნდა მიჰყვეთ!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7_authored_hint:
        courseF_artist_variables7_a: დაიწყეთ თქვენი კოდი `სიგრძის განსაზღვრის` ბლოკით.
          სიგრძის ცვლადი დააყენეთ 150–ზე.
        courseF_artist_variables7_b: თქვენ შეგიძლიათ გამოიყენოთ `გამეორების` ციკლი,
          რათა გაამარტივოთ თქვენი სამკუთხედის კოდი.
        courseF_artist_variables7_c: სამკუთხედის კუთხეების დასახატად თქვენ მოგიწევთ
          120 გრადუსით მობრუნება.
      courseF_artist_variables7_2018_authored_hint:
        courseF_artist_variables7_a: დაიწყეთ თქვენი კოდი `სიგრძის განსაზღვრის` ბლოკით.
          სიგრძის ცვლადი დააყენეთ 150–ზე.
        courseF_artist_variables7_b: თქვენ შეგიძლიათ გამოიყენოთ `გამეორების` ციკლი,
          რათა გაამარტივოთ თქვენი სამკუთხედის კოდი.
        courseF_artist_variables7_c: სამკუთხედის კუთხეების დასახატად თქვენ მოგიწევთ
          120 გრადუსით მობრუნება.
      courseF_artist_variables8_authored_hint:
        courseF_artist_variables8_b: 'არ დაგავიწყდეთ: თქვენი სამკუთხედის კოდი უნდა
          იწყებოდეს `სიგრძის განსაზღვრის` ბლოკით, ხოლო საწყისი მნიშვნელობა უნდა იყოს
          150 პიქსელი.'
        courseF_artist_variables8_c: დარწმუნდით, რომ იყენებთ `გამეორების` ციკლს სამკუთხედის
          დასახატად.
        courseF_artist_variables8_a: 'Try putting the set of ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png)
          blocks inside your loop at the end.

'
      courseF_artist_variables8_2018_authored_hint:
        courseF_artist_variables8_b: 'არ დაგავიწყდეთ: თქვენი სამკუთხედის კოდი უნდა
          იწყებოდეს `სიგრძის განსაზღვრის` ბლოკით, ხოლო საწყისი მნიშვნელობა უნდა იყოს
          150 პიქსელი.'
        courseF_artist_variables8_c: დარწმუნდით, რომ იყენებთ `გამეორების` ციკლს სამკუთხედის
          დასახატად.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\"
          inline=\"false\">\n                        <title name=\"VAR\">length</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">ADD</title>\n                            <value name=\"A\">\n
          \                             <block type=\"variables_get\">\n                                <title
          name=\"VAR\">length</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks
          inside your loop at the end.\n"
      courseF_artist_variables9_authored_hint:
        courseF_artist_variables9_a: ამ თავსატეხში თქვენ დაგჭირდებათ მხოლოდ ციკლის
          გამეორების რაოდენობის შეცვლა.
        courseF_artist_variables9_b: დარწმუნდით, რომ ბლოკები, რომელბიც ზრდიან `სიგრძეს`
          მოთავსებულია ციკლში, სხვაგვარად ხაზები არ გაიზრდება.
      courseF_artist_variables9_2018_authored_hint:
        courseF_artist_variables9_a: ამ თავსატეხში თქვენ დაგჭირდებათ მხოლოდ ციკლის
          გამეორების რაოდენობის შეცვლა.
        courseF_artist_variables9_b: დარწმუნდით, რომ ბლოკები, რომელბიც ზრდიან `სიგრძეს`
          მოთავსებულია ციკლში, სხვაგვარად ხაზები არ გაიზრდება.
      courseF_artist_variablesFP_authored_hint:
        courseF_artist_variablesFP_a: |-
          სცადეთ ამ ნახატებიდან ერთ-ერთი:
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variablesFP_2018_authored_hint:
        courseF_artist_variablesFP_a: |-
          სცადეთ ამ ნახატებიდან ერთ-ერთი:
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variables_4_authored_hint:
        courseF_artist_variables_4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to move
          down, then turn him back to get ready to move forward again.
        courseF_artist_variables_4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables_6_authored_hint:
        courseF_artist_variables_6_a: Thanks to variables, you only need to change
          one number at the top to make this work.
      courseF_artist_variables_6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead
          of an actual number to solve this puzzle.
      courseF_artist_variables_8_authored_hint:
        courseF_artist_variables_8_a: 'Try putting the set of ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png)
          blocks inside your loop at the end.  '
      courseF_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: ყოველი ვერტიკალური ხაზის სიგრძეა `10`.
          ყოველი ჰორიზონტალური ხაზის სიგრძე უნდა იყოს `სიგრძე`.
        courseF_artist_variables_challenge1_b: თქვენ **ორჯერ** მოგიწევთ ციკლის შიგნით
          `სიგრძის` მნიშვნელობის 10-თ გაზრდა.
        courseF_artist_variables_challenge1_c: ამ ნიმუშის დასამთავრებლად თქვენ მოგიწევთ
          ორჯერ მარცხნივ შებრუნება, ორჯერ მარჯვნივ და ასევე იმოძრაოთ წინ ჯამში ოთხჯერ.
        courseF_artist_variables_challenge1_d: |-
          ეს თავსატეხი იყენებს ერთ ციკლს. ცვლადების გარეშე, მსგავსი გზა შეიძლება ტეხილი იყოს.

          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)

          თუ პრობლემები შეგექმნათ, სცადეთ ამ სურათის შექმნა, შემდეგ მონახეთ ადგილები, სადაც შეგიძლიათ ცვლადების გამოყენება ჰორიზონტალური ხაზების სიგრძის შესაცვლელად.
        courseF_artist_variables_challenge1_e: |-
          აი ამოხსნაც:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018_authored_hint:
        courseF_artist_variables_challenge1_a: ყოველი ვერტიკალური ხაზის სიგრძეა `10`.
          ყოველი ჰორიზონტალური ხაზის სიგრძე უნდა იყოს `სიგრძე`.
        courseF_artist_variables_challenge1_b: თქვენ **ორჯერ** მოგიწევთ ციკლის შიგნით
          `სიგრძის` მნიშვნელობის 10-თ გაზრდა.
        courseF_artist_variables_challenge1_c: ამ ნიმუშის დასამთავრებლად თქვენ მოგიწევთ
          ორჯერ მარცხნივ შებრუნება, ორჯერ მარჯვნივ და ასევე იმოძრაოთ წინ ჯამში ოთხჯერ.
        courseF_artist_variables_challenge1_d: |-
          ეს თავსატეხი იყენებს ერთ ციკლს. ცვლადების გარეშე, მსგავსი გზა შეიძლება ტეხილი იყოს.

          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)

          თუ პრობლემები შეგექმნათ, სცადეთ ამ სურათის შექმნა, შემდეგ მონახეთ ადგილები, სადაც შეგიძლიათ ცვლადების გამოყენება ჰორიზონტალური ხაზების სიგრძის შესაცვლელად.
        courseF_artist_variables_challenge1_e: |-
          აი ამოხსნაც:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">მოძრაობაწინ</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">სიგრძე</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'ცვლადები ძალიან გამოსადეია, რადგან
          შეგიძლიათ მათი გაზრდა ციკლის ყოველ იტერაციაზე. '
        courseF_artist_variables_challenge1_b: ამ თავსატეხში ერთი ციკლი ქმნის პოლიგონს,
          მეორე ციკლი იმეორებს პოლიგონს იმდენჯერ, რამდენიც არის`გვერდი`, შემდეგ კიდევ
          ერთი ციკლი იმეორებს ამ ყველაფერს იმდენჯერ, რამდენიც არის `გვერდების` ცვლადს
          დამატებული 5.
        courseF_artist_variables_challenge1_c: "`გვერდებისთვის` და `სიგრძისთვის` ცალკე
          ცვლადების გამოყენება ხელს უწყობს კოდის სისუფთავეს, რადგან თქვენ შეგიძლიათ
          ციკლით შეასრულოთ ერთი და იგივე კოდი რამდენჯერმე, იმის მაგივრად, რომ ყოველ
          ჯერზე შექმნათ ახალი რიცხვების მიმდევრობები."
        courseF_artist_variables_challenge1_d: |-
          **ამოხსნა:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: ცვლადები ძალიან გამოსადეია, რადგან
          შეგიძლიათ მათი გაზრდა ციკლის ყოველ იტერაციაზე.
        courseF_artist_variables_challenge2_c: "`გვერდებისთვის` და `სიგრძისთვის` ცალკე
          ცვლადების გამოყენება ხელს უწყობს კოდის სისუფთავეს, რადგან თქვენ შეგიძლიათ
          ციკლით შეასრულოთ ერთი და იგივე კოდი რამდენჯერმე, იმის მაგივრად, რომ ყოველ
          ჯერზე შექმნათ ახალი რიცხვების მიმდევრობები."
        courseF_artist_variables_challenge2_d: |-
          **ამოხსნა:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_a: ცვლადები ძალიან გამოსადეია, რადგან
          შეგიძლიათ მათი გაზრდა ციკლის ყოველ იტერაციაზე.
        courseF_artist_variables_challenge2_c: "`გვერდებისთვის` და `სიგრძისთვის` ცალკე
          ცვლადების გამოყენება ხელს უწყობს კოდის სისუფთავეს, რადგან თქვენ შეგიძლიათ
          ციკლით შეასრულოთ ერთი და იგივე კოდი რამდენჯერმე, იმის მაგივრად, რომ ყოველ
          ჯერზე შექმნათ ახალი რიცხვების მიმდევრობები."
        courseF_artist_variables_challenge2_d: |-
          **ამოხსნა:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals10_authored_hint:
        courseF_bee_conditionals10_a: წარმოიდგინეთ, რომ ყველა კუთხე-კუნჭულში ღრუბლებია.
          გეხმარებათ თუ არა ეს კოდის გამარტივებაში?
        courseF_bee_conditionals10_b: გამოიყენეთ `თუ/სხვაგვარად` ბლოკი, რათა შეამოწმოთ
          ყველა თავისუფალი ადგილი ნექტარის ან თაფლის არსებობაზე.
        courseF_bee_conditionals10_c: შეუძლია თუ არა `სანამ` ციკლს გზის ბოლომდე მიგიყვანოთ?
      courseF_bee_conditionals10_2018_authored_hint:
        courseF_bee_conditionals10_a: წარმოიდგინეთ, რომ ყველა კუთხე-კუნჭულში ღრუბლებია.
          გეხმარებათ თუ არა ეს კოდის გამარტივებაში?
        courseF_bee_conditionals10_b: გამოიყენეთ `თუ/სხვაგვარად` ბლოკი, რათა შეამოწმოთ
          ყველა თავისუფალი ადგილი ნექტარის ან თაფლის არსებობაზე.
        courseF_bee_conditionals10_c: შეუძლია თუ არა `სანამ` ციკლს გზის ბოლომდე მიგიყვანოთ?
      courseF_bee_conditionals1_predict1_authored_hint: []
      courseF_bee_conditionals1_predict1_2018_authored_hint: []
      courseF_bee_conditionals2_authored_hint:
        courseF_bee_conditionals2_a: Sometimes a flower will be there, sometimes it
          won't.  If you want your code to run in both cases, make sure to use an
          `if` statement.
        courseF_bee_conditionals2_b: სცადეთ მიმდევრობის ისე გადაწერა, რომ ყველა ადგილას
          შეძლოთ მიღწევა, შემდეგ კი დაამატეთ `თუ` ბრძანება.
      courseF_bee_conditionals2_2018_authored_hint:
        courseF_bee_conditionals2_a: Sometimes a flower will be there, sometimes it
          won't.  If you want your code to run in both cases, make sure to use an
          `if` statement.
        courseF_bee_conditionals2_b: სცადეთ მიმდევრობის ისე გადაწერა, რომ ყველა ადგილას
          შეძლოთ მიღწევა, შემდეგ კი დაამატეთ `თუ` ბრძანება.
      courseF_bee_conditionals3_authored_hint:
        courseF_bee_conditionals3_a: Be sure to use an `if` statement to check each
          space to see if it has either a flower or nothing.
        courseF_bee_conditionals3_b: "`გამეორების` ციკლი გამოსადეგია, რადგან მხოლოდ
          ერთი `თუ` ბლოკის გამოყენება მოგიწევთ."
        courseF_bee_conditionals3_c: სცადეთ პირველი დაწეროთ კოდი, რათა შეამოწმოთ პირველი
          ღრუბელი. შეგიძლიათ გამოიყენოთ ციკლი, რათა შეამოწმოთ ყველა მათგანი?
      courseF_bee_conditionals3_2018_authored_hint:
        courseF_bee_conditionals3_a: Be sure to use an `if` statement to check each
          space to see if it has either a flower or nothing.
        courseF_bee_conditionals3_b: "`გამეორების` ციკლი გამოსადეგია, რადგან მხოლოდ
          ერთი `თუ` ბლოკის გამოყენება მოგიწევთ."
        courseF_bee_conditionals3_c: სცადეთ პირველი დაწეროთ კოდი, რათა შეამოწმოთ პირველი
          ღრუბელი. შეგიძლიათ გამოიყენოთ ციკლი, რათა შეამოწმოთ ყველა მათგანი?
      courseF_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_a: You can still treat every space as if there is
          a cloud over it, even though you can see the whole path.
        courseF_bee_conditionals4_b: 'Use an `if` statement inside your loop to check
          each space for nectar. '
        courseF_bee_conditionals4_c: "`სანამ წინ გზა არსებობს` ბლოკის საშუალებით თქვენ
          უნდა `იმოძრაოთ წინ` და შეამოწმოთ, არსებობს თუ არა მიმდინარე ადგილას ყვავილი.
          `თუ ყვავილი არსებობს`, რა უნდა გააკეთოს ფუტკარმა?"
      courseF_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_a: You can still treat every space as if there is
          a cloud over it, even though you can see the whole path.
        courseF_bee_conditionals4_b: 'Use an `if` statement inside your loop to check
          each space for nectar. '
        courseF_bee_conditionals4_c: "`სანამ წინ გზა არსებობს` ბლოკის საშუალებით თქვენ
          უნდა `იმოძრაოთ წინ` და შეამოწმოთ, არსებობს თუ არა მიმდინარე ადგილას ყვავილი.
          `თუ ყვავილი არსებობს`, რა უნდა გააკეთოს ფუტკარმა?"
      courseF_bee_conditionals5_authored_hint:
        courseF_bee_conditionals5_a: განიხილეთ ამ მართკუთხა გზის ყოველი გვერდი, როგორც
          ცალკე გზა. შექმენით ჩასმული ციკლი გარედან `გამეორების` ბლოკით და შიგნიდან
          `სანამ წინ გზა არის` ციკლით. რამდენი გზის გავლა მოუწევს ფუტკარს, თუ ფუტკარმა
          უნდა იბზუილოს ყოველ ყვავილიან მხარეს?
        courseF_bee_conditionals5_b: "`სანამ წინ არის გზა` ბლოკის შიგნით თქვენ მოგიწევთ
          წინ მოძრაობა და ყვავილის არსებობის შემოწმება. როგორ შეამოწმებთ, არის თუ
          არა წინ ყვავილი? რას გააკეთებთ, თუ ყვავილი არის?"
        courseF_bee_conditionals5_c: 'მართკუთხედს 3 ყვავილებიანი გვერდი აქვს, შესაბამისად
          კოდი უნდა `განმეორდეს 3-ჯერ`. ყოველ გამეორებაზე, ფუტკარმა უნდა გააგრძელოს
          მოძრაობა, `სანამ წინ გზა არსებობს`. '
        courseF_bee_conditionals5_d: მოძრაობის გასაგრძელებლად ფუტკარმა უნდა `იმოძრაოს
          წინ`. სანამ ის გზაშია, ფუტკარმა უნდა შეამოწმოს ყვავილის არსებობა. რა უნდა
          გააკეთოს ფუტკარმა, თუ ყვავილი შეხვდება?
      courseF_bee_conditionals5_2018_authored_hint:
        courseF_bee_conditionals5_a: განიხილეთ ამ მართკუთხა გზის ყოველი გვერდი, როგორც
          ცალკე გზა. შექმენით ჩასმული ციკლი გარედან `გამეორების` ბლოკით და შიგნიდან
          `სანამ წინ გზა არის` ციკლით. რამდენი გზის გავლა მოუწევს ფუტკარს, თუ ფუტკარმა
          უნდა იბზუილოს ყოველ ყვავილიან მხარეს?
        courseF_bee_conditionals5_b: "`სანამ წინ არის გზა` ბლოკის შიგნით თქვენ მოგიწევთ
          წინ მოძრაობა და ყვავილის არსებობის შემოწმება. როგორ შეამოწმებთ, არის თუ
          არა წინ ყვავილი? რას გააკეთებთ, თუ ყვავილი არის?"
        courseF_bee_conditionals5_c: 'მართკუთხედს 3 ყვავილებიანი გვერდი აქვს, შესაბამისად
          კოდი უნდა `განმეორდეს 3-ჯერ`. ყოველ გამეორებაზე, ფუტკარმა უნდა გააგრძელოს
          მოძრაობა, `სანამ წინ გზა არსებობს`. '
        courseF_bee_conditionals5_d: მოძრაობის გასაგრძელებლად ფუტკარმა უნდა `იმოძრაოს
          წინ`. სანამ ის გზაშია, ფუტკარმა უნდა შეამოწმოს ყვავილის არსებობა. რა უნდა
          გააკეთოს ფუტკარმა, თუ ყვავილი შეხვდება?
      courseF_bee_conditionals7_predict2_authored_hint: []
      courseF_bee_conditionals7_predict2_2018_authored_hint: []
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
        courseF_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.

          Only check for nectar and honey at the end of your path.
        courseF_bee_conditionals8_c: რა მოხდება თუ გამოიყენებთ `სანამ წინ გზა არის`
          ბლოკის და ბოლოს აიღებთ პირველ ყვავილს?
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
        courseF_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.

          Only check for nectar and honey at the end of your path.
        courseF_bee_conditionals8_c: რა მოხდება თუ გამოიყენებთ `სანამ წინ გზა არის`
          ბლოკის და ბოლოს აიღებთ პირველ ყვავილს?
      courseF_bee_for1_authored_hint:
        courseF_bee_for1_a: A loop will help you here.
        courseF_bee_for1_b: "`გამეორების` ციკლში თქვენ დაგჭირდებათ ორი ბლოკი, რათა
          შეაგროვოთ მთელი ნექტარი."
      courseF_bee_for10_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you
          need to take and the number of nectars to gather?
        courseF_bee_for10_b: You'll need to have 2 repeats, one will use a math block.
        courseF_bee_for10_c: |-
          ამ თავსატეხში, პირველი ყვავილების მიმდევრობა შედგება **14** ყვავილისგან, ხოლო მეორე **10** ყვავილისგან, მესამე შედგება **6** ყვავილისგან, მეოთხე კი **2**-სგან.

          ამ ნახატში, **7** წითელი კვადრატია, **5** ნარინჯისფერი, **3** მწვანე და **1** ლურჯი ბლოკი.

          ![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)

          რა აქვთ საერთო ამ რიცხვებს?
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for10_2018_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you
          need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**.
          To get to this first set, the bee must buzz down **7 squares** (or 14 squares
          divided by 2.) How many flowers are in the next set and how many squares
          will be the bee have to travel to get there?
        courseF_bee_for10_c: |-
          ამ თავსატეხში, პირველი ყვავილების მიმდევრობა შედგება **14** ყვავილისგან, ხოლო მეორე **10** ყვავილისგან, მესამე შედგება **6** ყვავილისგან, მეოთხე კი **2**-სგან.

          ამ ნახატში, **7** წითელი კვადრატია, **5** ნარინჯისფერი, **3** მწვანე და **1** ლურჯი ბლოკი.

          ![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)

          რა აქვთ საერთო ამ რიცხვებს?
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for11_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than
          12?\n\nDo you see a pattern?"
      courseF_bee_for11_2018_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than
          12?\n\nDo you see a pattern?"
      courseF_bee_for1_2018_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the
          `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: "`გამეორების` ციკლში თქვენ დაგჭირდებათ ორი ბლოკი, რათა
          შეაგროვოთ მთელი ნექტარი."
      courseF_bee_for2_authored_hint:
        courseF_bee_for2_a: You'll need to use at least three loops (one after another)
          to solve this puzzle.
        courseF_bee_for2_b: არ დაგავიწყდეთ წინ გადაადგილება ციკლებს შორის, რათა მიაღწიოთ
          ყოველ ყვავილამდე.
      courseF_bee_for2_2018_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test
          often.
        courseF_bee_for2_b: არ დაგავიწყდეთ წინ გადაადგილება ციკლებს შორის, რათა მიაღწიოთ
          ყოველ ყვავილამდე.
      courseF_bee_for3_authored_hint:
        courseF_bee_for3_a: 'Use the `counter` variable inside the `repeat` loop where
          nectar is gathered to solve this puzzle. '
        courseF_bee_for3_b: Your `for` loop will need to count from 1 to 5 with an
          increment of 1.
      courseF_bee_for3_predict1_authored_hint: []
      courseF_bee_for3_predict1_2018_authored_hint: []
      courseF_bee_for4_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment
          of 1 to solve this puzzle.
        courseF_bee_for4_b: Make sure to use the `counter` variable inside your nested
          `repeat` loop to get enough nectar!
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested
          `repeat` loop to get enough nectar!
      courseF_bee_for4_2018_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment
          of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move
          forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested
          `repeat` loop to get enough nectar!
      courseF_bee_for5_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar`
          block will need to be in separate `repeat` loops, both inside the same `for`
          loop.
        courseF_bee_for5_b: გამოიყენეთ `მთვლელის` ცვლადი ყოველ ციკლში, რათა ფუტკარმა
          დაფაროს სხვადასხვა მანძილი ყვავილებს შორის.
        courseF_bee_for5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_bee_for5_2018_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar`
          block will need to be in separate `repeat` loops, both inside the same `for`
          loop.
        courseF_bee_for5_b: გამოიყენეთ `მთვლელის` ცვლადი ყოველ ციკლში, რათა ფუტკარმა
          დაფაროს სხვადასხვა მანძილი ყვავილებს შორის.
        courseF_bee_for5_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_bee_for6_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat`
          loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move
          forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: თქვენი ციკლი უნდა ითვლიდეს **5-დან 1-მდე**.
      courseF_bee_for6_2018_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat`
          loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move
          forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: თქვენი ციკლი უნდა ითვლიდეს **5-დან 1-მდე**.
      courseF_bee_for7_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move
          forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: არ დაგავიწყდეთ `მთვლელის` ცვლადის გამოყენება თქვენს `გამეორების`
          ციკლში.
      courseF_bee_for7_2018_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move
          forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: არ დაგავიწყდეთ `მთვლელის` ცვლადის გამოყენება თქვენს `გამეორების`
          ციკლში.
      courseF_bee_for8_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to
          your counter variable each time through. \n\nWhat do you need to add to
          each number to get the next amount of nectar?"
        courseF_bee_for8_b: ამ თავსატეხში, ყვევილების შესაგროვებლად, თქვენ დაგჭირდებათ
          კიბის საფეხურისებრი პრინციპით მოძრაობა.
        courseF_bee_for8_c: თქვენ ციკლმა უნდა დაითვალოს *3-დან 15-მდე* გარკვეული ნაზრდით.
          რისი ტოლია ნაზრდი?
      courseF_bee_for8_2018_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to
          your counter variable each time through. \n\nWhat do you need to add to
          each number to get the next amount of nectar?"
        courseF_bee_for8_b: ამ თავსატეხში, ყვევილების შესაგროვებლად, თქვენ დაგჭირდებათ
          კიბის საფეხურისებრი პრინციპით მოძრაობა.
        courseF_bee_for8_c: თქვენ ციკლმა უნდა დაითვალოს *3-დან 15-მდე* გარკვეული ნაზრდით.
          რისი ტოლია ნაზრდი?
      courseF_bee_for9_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.

          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning
          of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment
          is added to your `counter` variable each time through."
      courseF_bee_for9_2018_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.

          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning
          of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment
          is added to your `counter` variable each time through."
      courseF_bee_for_challenge1_authored_hint: []
      courseF_bee_for_challenge1_2018_authored_hint: []
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'სცადეთ ორი `for` ციკლის გამოყენება: ერთი ასაცოცად
          და ნექტარის შესაგროვებლად, ხოლო მეორე ქვემოთ ჩამოსაძვრომად და თაფლის გასაკეთებლად.'
        courseF_bee_for_challenge2_c: |-
          გაითვალისწინეთ, რომ ზრდადი კიბისებრი კოდის დასაწერად, `for` ციკლი საჭიროებს რამდენიმე ჩვეულებრივ ციკლს `მთვლელჯერ`, შესრულებულს გამეორების ციკლის შიგნით.

          მეორე `for` ციკლი საჭიროებს მხოლოდ ერთ ჩვეულებრივ ციკლს, რათა გააკეთოს `მთვლელის` ტოლი თაფლის რაოდენობა.
        courseF_bee_for_challenge2_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'სცადეთ ორი `for` ციკლის გამოყენება: ერთი ასაცოცად
          და ნექტარის შესაგროვებლად, ხოლო მეორე ქვემოთ ჩამოსაძვრომად და თაფლის გასაკეთებლად.'
        courseF_bee_for_challenge2_c: |-
          გაითვალისწინეთ, რომ ზრდადი კიბისებრი კოდის დასაწერად, `for` ციკლი საჭიროებს რამდენიმე ჩვეულებრივ ციკლს `მთვლელჯერ`, შესრულებულს გამეორების ციკლის შიგნით.

          მეორე `for` ციკლი საჭიროებს მხოლოდ ერთ ჩვეულებრივ ციკლს, რათა გააკეთოს `მთვლელის` ტოლი თაფლის რაოდენობა.
        courseF_bee_for_challenge2_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: |-
          მოძრაობის ამ ვარიანტს შეხედეთ:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'სცადეთ ორი `for` ციკლის გამოყენება: ერთი ასაცოცად
          და ნექტარის შესაგროვებლად, ხოლო მეორე ქვემოთ ჩამოსაძვრომად და თაფლის გასაკეთებლად.'
        courseF_bee_for_challenge2_c: |-
          გაითვალისწინეთ, რომ ზრდადი კიბისებრი კოდის დასაწერად, `for` ციკლი საჭიროებს რამდენიმე ჩვეულებრივ ციკლს `მთვლელჯერ`, შესრულებულს გამეორების ციკლის შიგნით.

          მეორე `for` ციკლი საჭიროებს მხოლოდ ერთ ჩვეულებრივ ციკლს, რათა გააკეთოს `მთვლელის` ტოლი თაფლის რაოდენობა.
        courseF_bee_for_challenge2_d: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions2_authored_hint:
        courseF_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
        courseF_bee_functions2_b: დააკლიკეთ ლურჯ რედაქტირების ღილაკს `შეაგროვე მხოლოდ
          ნექტარი` ფუნქციაზე, რათა ნახოთ თუ რას აკეთებს ის.
      courseF_bee_functions2_2018_authored_hint:
        courseF_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
        courseF_bee_functions2_b: დააკლიკეთ ლურჯ რედაქტირების ღილაკს `შეაგროვე მხოლოდ
          ნექტარი` ფუნქციაზე, რათა ნახოთ თუ რას აკეთებს ის.
      courseF_bee_functions3_authored_hint:
        courseF_bee_functions3_a: 'თქვენმა ფუნქციამ ამ თავსატეხში უნდა გააკეთოს მხოლოდ
          თაფლი, მასში არ უნდა იყოს `წინ გადაადგილების` ან `მობრუნების` ბლოკები. '
        courseF_bee_functions3_b: გახსოვდეთ, თქვენი ფუნქცია უნდა აგროვებდეს თაფლს
          მხოლოდ მაშინ, როცა იქ ფიჭაა.
        courseF_bee_functions3_c: გამოიყენეთ მწვანე `უბრალოდ გააკეთე თაფლი` ბლოკი,
          რათა გამოიძახოთ თქვენი ფუნქცია.
        courseF_bee_functions3_d: Check out this path.
      courseF_bee_functions3_2018_authored_hint:
        courseF_bee_functions3_a: 'თქვენმა ფუნქციამ ამ თავსატეხში უნდა გააკეთოს მხოლოდ
          თაფლი, მასში არ უნდა იყოს `წინ გადაადგილების` ან `მობრუნების` ბლოკები. '
        courseF_bee_functions3_b: გახსოვდეთ, თქვენი ფუნქცია უნდა აგროვებდეს თაფლს
          მხოლოდ მაშინ, როცა იქ ფიჭაა.
        courseF_bee_functions3_c: გამოიყენეთ მწვანე `უბრალოდ გააკეთე თაფლი` ბლოკი,
          რათა გამოიძახოთ თქვენი ფუნქცია.
        courseF_bee_functions3_d: Check out this path.
      courseF_bee_functions3a_authored_hint:
        courseF_bee_functions3a_a: 'თქვენი ფუნქცია ამ თავსატეხში მხოლოდ ნექტარს უნდა
          იღებდეს ან თაფლს აკეთებდეს, ის არ უნდა შეიცავდეს `წინ გადაადგილებისა` ან
          ` მობრუნების` ბლოკებს. '
        courseF_bee_functions3a_b: გამოიყენეთ კიბის პრინციპი, რათა შეამოწმოთ პირველი
          ოთხი ღრუბელი.
      courseF_bee_functions3a_2018_authored_hint:
        courseF_bee_functions3a_a: 'თქვენი ფუნქცია ამ თავსატეხში მხოლოდ ნექტარს უნდა
          იღებდეს ან თაფლს აკეთებდეს, ის არ უნდა შეიცავდეს `წინ გადაადგილებისა` ან
          ` მობრუნების` ბლოკებს. '
        courseF_bee_functions3a_b: გამოიყენეთ კიბის პრინციპი, რათა შეამოწმოთ პირველი
          ოთხი ღრუბელი.
      courseF_bee_functions4_authored_hint:
        courseF_bee_functions4_a: თქვენმა ფუნქციამ უნდა გაიაროს გვერდითი გზები ბოლომდე
          და დააბრუნოს ფუტკარი მთავარ გზაზე. თქვენ არ გჭირდებათ მთავარ პროგრამაში
          კოდის დამატება.
        courseF_bee_functions4_b: სცადეთ პროგრამის დაწერა და ფუნქციის ბლოკების გამოყენება
          ისე, რომ ისინი შეესაბამებოდნენ მოლოდინს, შემდეგ კი შექმენით ფუნქცია.
      courseF_bee_functions4_2018_authored_hint:
        courseF_bee_functions4_a: თქვენმა ფუნქციამ უნდა გაიაროს გვერდითი გზები ბოლომდე
          და დააბრუნოს ფუტკარი მთავარ გზაზე. თქვენ არ გჭირდებათ მთავარ პროგრამაში
          კოდის დამატება.
        courseF_bee_functions4_b: სცადეთ პროგრამის დაწერა და ფუნქციის ბლოკების გამოყენება
          ისე, რომ ისინი შეესაბამებოდნენ მოლოდინს, შემდეგ კი შექმენით ფუნქცია.
      courseF_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without
          having to change the main program.
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n-
          move forward\n- collect all of the nectar\n- turn around\n- move back to
          the main path\n- turn back to the direction that the bee started from"
      courseF_bee_functions5a_authored_hint:
        courseF_bee_functions5a_a: |-
          თქვენმა ფუნქციამ უნდა შეამოწმოს, არსებობს თუ არა მარჯვნივ მიმავალი გზა და თუ არსებობს, გაუყვეს გვერდითა გზებს და დააბრუნოს ფუტკარი მთავარ გზაზე.

          თქვენ არ გჭირდებათ თქვენს ძირითად პროგრამაში ამ ნაწილის დამატება.
        courseF_bee_functions5a_b: გამოიყენეთ `სანამ` ციკლი, რათა მოიაროთ ყველა მთავარი
          გზა, რადგან ისინი სხვადასხვა სიგრძის არიან.
        courseF_bee_functions5a_c: თქვენს `სანამ` ციკლში იმოძრავეთ წინ, შემდეგ კი
          გამოიყენეთ თქვენი ფუნქცია გზის შესამოწმებლად.
      courseF_bee_functions5a_2018_authored_hint:
        courseF_bee_functions5a_a: |-
          თქვენმა ფუნქციამ უნდა შეამოწმოს, არსებობს თუ არა მარჯვნივ მიმავალი გზა და თუ არსებობს, გაუყვეს გვერდითა გზებს და დააბრუნოს ფუტკარი მთავარ გზაზე.

          თქვენ არ გჭირდებათ თქვენს ძირითად პროგრამაში ამ ნაწილის დამატება.
        courseF_bee_functions5a_b: გამოიყენეთ `სანამ` ციკლი, რათა მოიაროთ ყველა მთავარი
          გზა, რადგან ისინი სხვადასხვა სიგრძის არიან.
        courseF_bee_functions5a_c: თქვენს `სანამ` ციკლში იმოძრავეთ წინ, შემდეგ კი
          გამოიყენეთ თქვენი ფუნქცია გზის შესამოწმებლად.
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseF_bee_functions6_b: თქვენი ფუნქცია უნდა ამოწმებდეს არის თუ არა გზად
          ყვავილი ან ფიჭა, შეაგროვოს ნექტარი ან გააკეთოს თაფლი, შემდეგ კი შებრუნდეს.
        courseF_bee_functions6_c: იქიდან გამომდინარე, რომ მობრუნება ხდება ფუნქციაში,
          თქვენ გჭირდებათ მხოლოდ ერთი `სანამ` ციკლი, რათა ციკლურად გაიაროთ ამ ლაბირინთში.
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseF_bee_functions6_b: თქვენი ფუნქცია უნდა ამოწმებდეს არის თუ არა გზად
          ყვავილი ან ფიჭა, შეაგროვოს ნექტარი ან გააკეთოს თაფლი, შემდეგ კი შებრუნდეს.
        courseF_bee_functions6_c: იქიდან გამომდინარე, რომ მობრუნება ხდება ფუნქციაში,
          თქვენ გჭირდებათ მხოლოდ ერთი `სანამ` ციკლი, რათა ციკლურად გაიაროთ ამ ლაბირინთში.
      courseF_bee_functions7_authored_hint:
        courseF_bee_functions7_a: თქვენ შეგიძლიათ დაუბრუნდეთ წინა თავსატეხს, რათა
          ნახოთ თქვენი ფუნქცია.
        courseF_bee_functions7_b: სცადეთ თითი გააყოლოთ ლაბირინთის ხაზებს და იპოვოთ
          სწორი გზა. სად უნდა მიიღოს გადაწყვეტილება ფუტკარმა?
      courseF_bee_functions7_2018_authored_hint:
        courseF_bee_functions7_a: თქვენ შეგიძლიათ დაუბრუნდეთ წინა თავსატეხს, რათა
          ნახოთ თქვენი ფუნქცია.
        courseF_bee_functions7_b: სცადეთ თითი გააყოლოთ ლაბირინთის ხაზებს და იპოვოთ
          სწორი გზა. სად უნდა მიიღოს გადაწყვეტილება ფუტკარმა?
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseF_bee_functions8a_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა ფუნქციის რედაქტორში.
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseF_bee_functions8a_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა ფუნქციის რედაქტორში.
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseF_bee_functions7_b: |-
          არ დაგავიწყდეთ თქვენი კოდის აწყობა მწვანე ფუნქციის ბლოკის შიგნით.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: სად უნდა შებრუნდეთ, თუ ფიჭას გადააწყდებით? ყვავილს?
          თუ იქ არაფერია?
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseF_bee_functions7_b: |-
          არ დაგავიწყდეთ თქვენი კოდის აწყობა მწვანე ფუნქციის ბლოკის შიგნით.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: სად უნდა შებრუნდეთ, თუ ფიჭას გადააწყდებით? ყვავილს?
          თუ იქ არაფერია?
      courseF_bee_functions_challenge1_authored_hint:
        courseF_bee_functions_challenge1_a: გამოიყენეთ ფუნქციები ინსტრუმენტების პანელიდან.
          თქვენ შეგიძლიათ გამოიძახოთ ფუნქცია სხვა ფუნქციის განსაზღვრებაში!
      courseF_bee_functions_challenge1_2018_authored_hint:
        courseF_bee_functions_challenge1_a: გამოიყენეთ ფუნქციები ინსტრუმენტების პანელიდან.
          თქვენ შეგიძლიათ გამოიძახოთ ფუნქცია სხვა ფუნქციის განსაზღვრებაში!
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          თუ გზა მარჯვნივაა მიმართული, თქვენ უნდა მოიქცეთ შემდეგნაირად:
          * შეაგროვოთ ნებისმიერი რაოდენობის ნექტარი ან გააკეთოთ ნებისმიერი რაოდენობის თაფლი
          * შებრუდენდეთ მარჯვნივ, გვერდითი გზისკენ
          * გაიაროთ გვერდითი გზა ბოლომდე
          * შებრუნდეთ მარჯვნივ

          თუ ზემოთ ჩამოთვლილ ქმედებებს ორჯერ გაიმეორებთ, თქვენ იქნებით მზად დაუბრუნდეთ მთავარ გზას.

          **რჩევის ღილაკს მხოლოდ იმ შემთხვევაში უნდა დააჭიროთ, თუ მთლიანი ამონახსნის ნახვა გინდათ!**
        courseF_bee_functions_challenge2_b: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">მოძრაობა და შემოწმება</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">ნექტარის ან თაფლის შემოწმება</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          თუ გზა მარჯვნივაა მიმართული, თქვენ უნდა მოიქცეთ შემდეგნაირად:
          * შეაგროვოთ ნებისმიერი რაოდენობის ნექტარი ან გააკეთოთ ნებისმიერი რაოდენობის თაფლი
          * შებრუდენდეთ მარჯვნივ, გვერდითი გზისკენ
          * გაიაროთ გვერდითი გზა ბოლომდე
          * შებრუნდეთ მარჯვნივ

          თუ ზემოთ ჩამოთვლილ ქმედებებს ორჯერ გაიმეორებთ, თქვენ იქნებით მზად დაუბრუნდეთ მთავარ გზას.

          **რჩევის ღილაკს მხოლოდ იმ შემთხვევაში უნდა დააჭიროთ, თუ მთლიანი ამონახსნის ნახვა გინდათ!**
        courseF_bee_functions_challenge2_b: |-
          **ამოხსნა:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">მოძრაობა და შემოწმება</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">ნექტარის ან თაფლის შემოწმება</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        courseF_bee_functions8a_b: არ დაგავიწყდეთ თქვენი კოდის ჩასმა ფუნქციის რედაქტორში.
      courseF_bee_fwp1_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar
          from a flower.
        courseF_bee_fwp1_b: განაგრძეთ გზაზე მოძრაობა `გამეორების` ბლოკის საშუალებით.
          დარწმუნდით, რომ იყენებთ `წინ გადაადგილებას` და ამოწმებთ, არის თუ არა იქ
          ყვავილი `თუ` ბრძანებით.
      courseF_bee_fwp1_2018_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar
          from a flower.
        courseF_bee_fwp1_b: განაგრძეთ გზაზე მოძრაობა `გამეორების` ბლოკის საშუალებით.
          დარწმუნდით, რომ იყენებთ `წინ გადაადგილებას` და ამოწმებთ, არის თუ არა იქ
          ყვავილი `თუ` ბრძანებით.
      courseF_bee_fwp2_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into
          the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when
          run` to call the function that you just built.
      courseF_bee_fwp2_2018_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into
          the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when
          run` to call the function that you just built.
      courseF_bee_fwp3_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're
          facing.
        courseF_bee_fwp3_b: წინ ნექტარის 3 მწკრივია, რა სახის მობრუნებების და მოძრაობების
          შესრულება გჭირდებათ მწკრივებს შორის?
        courseF_bee_fwp3_c: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ ფუნქციის
          3-ჯერ გამოძახება. ყოველ გამოძახებს შორის თქვენ მოგიწევთ 2-ჯერ `მარჯვნივ
          მობრუნება`, `წინ გადაადგილება`, შემდეგ ისევ `მარჯვნივ` მობრუნება. ან თქვენ
          დაგჭირდებათ `მარცხნივ მობრუნება`, 2-ჯერ `წინ გადაადგილება`, შემდეგ ისევ
          `მარცხნივ მობრუნება`.
      courseF_bee_fwp3_2018_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're
          facing.
        courseF_bee_fwp3_b: წინ ნექტარის 3 მწკრივია, რა სახის მობრუნებების და მოძრაობების
          შესრულება გჭირდებათ მწკრივებს შორის?
        courseF_bee_fwp3_c: ამ თავსატეხის ამოსახსნელად თქვენ დაგჭირდებათ ფუნქციის
          3-ჯერ გამოძახება. ყოველ გამოძახებს შორის თქვენ მოგიწევთ 2-ჯერ `მარჯვნივ
          მობრუნება`, `წინ გადაადგილება`, შემდეგ ისევ `მარჯვნივ` მობრუნება. ან თქვენ
          დაგჭირდებათ `მარცხნივ მობრუნება`, 2-ჯერ `წინ გადაადგილება`, შემდეგ ისევ
          `მარცხნივ მობრუნება`.
      courseF_bee_fwp4_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting
          variable in your loop.
        courseF_bee_fwp4_b: პარამეტრი, რომელსაც იყენებთ ფუნქციაში, გამოყენებული იქნება
          გამეორების ციკლში, იმის განსასაზღვრად, თუ რამდენჯერ გადაადგილდება წინ ფუტკარი
          და შეამოწმებს ნექტარის არსებობას.
      courseF_bee_fwp4_2018_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting
          variable in your loop.
        courseF_bee_fwp4_b: პარამეტრი, რომელსაც იყენებთ ფუნქციაში, გამოყენებული იქნება
          გამეორების ციკლში, იმის განსასაზღვრად, თუ რამდენჯერ გადაადგილდება წინ ფუტკარი
          და შეამოწმებს ნექტარის არსებობას.
      courseF_bee_fwp5_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch
          and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: არ დაგავიწყდეთ ფუნქციის მობრუნება ფუნქციის თითოეულ გამოძახებასთან.
      courseF_bee_fwp5_2018_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch
          and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: არ დაგავიწყდეთ ფუნქციის მობრუნება ფუნქციის თითოეულ გამოძახებასთან.
      courseF_bee_fwp6_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you
          could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp6_2018_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you
          could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp7_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only
          a second `if` statement.
        courseF_bee_fwp7_b: დაამატეთ `თუ` ბრძანება თქვენს ფუნქციაში, რათა ფუტკარმა
          შეამოწმოს, როგორც ფიჭების, ასევე ყვავილების არსებობა.
      courseF_bee_fwp7_2018_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only
          a second `if` statement.
        courseF_bee_fwp7_b: დაამატეთ `თუ` ბრძანება თქვენს ფუნქციაში, რათა ფუტკარმა
          შეამოწმოს, როგორც ფიჭების, ასევე ყვავილების არსებობა.
      courseF_bee_fwp8_authored_hint:
        courseF_bee_fwp8_a: როგორ შეიძლება გამოგადგეთ `for` ციკლი ამ თავსატეხში?
        courseF_bee_fwp8_b: იქიდან გამომდინარე, რომ სპირალი პატარავდება შიგნით შესვლასთან
          ერთად, თქვენმა `for` ციკლმა უნდა დაითვალოს კლებადობით.
      courseF_bee_fwp8_2018_authored_hint:
        courseF_bee_fwp8_a: როგორ შეიძლება გამოგადგეთ `for` ციკლი ამ თავსატეხში?
        courseF_bee_fwp8_b: იქიდან გამომდინარე, რომ სპირალი პატარავდება შიგნით შესვლასთან
          ერთად, თქვენმა `for` ციკლმა უნდა დაითვალოს კლებადობით.
      courseF_bee_fwp9_authored_hint: []
      courseF_bee_fwp9_predict1_authored_hint: []
      courseF_bee_fwp9_predict1_2018_authored_hint: []
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          მთავარი პროგრამა დაახლოებით ასე უნდა გამოიყურებოდეს:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'დათვალეთ, რამდენი სიმინდის შეგროვება შეიძლება
          თითოეული თავისუფალი ადგილიდან. დაინახეთ მთვლელის ნიმუში? '
        courseF_bee_fwp_challenge1_b1: |-
          `სიგრძის` პარამეტრმა უნდა განუსაზღვროს `for ციკლს` მაქსიმალური მნიშვნელობა.

          როდესაც დაასრულებთ მოსავლის აღებას, არ დაგავიწყდეთ ფერმერის მთავარ გზაზე დაბრუნება!
        courseF_bee_fwp_challenge1_c: |-
          განათავსეთ `for ციკლი` ფუნქციაში და დაათვლევინეთ მას `1`-დან `სიგრძემდე` `1`-ით.
          ციკლის შიგნით თქვენ უნდა იმოძრაოთ წინ და შეაგროვოთ მთელი სიმინდი.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "`for ციკლის` შიგნით თქვენ მოგიწევთ `წინ მოძრაობე`,
          შემდეგ `სიმინდის აღება` **მთვლელის ტოლი გამეორებით**."
        courseF_bee_fwp_challenge1_d2: "`for ციკლის` შემდეგ თქვენ შეგიძლიათ უბრალოდ
          დაამატოთ `გადაადგილდი უკან` **სიგრძის ტოლჯერ**."
        courseF_bee_fwp_challenge1_e: |
          **აი, ამოხსნაც:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          მთავარი პროგრამა დაახლოებით ასე უნდა გამოიყურებოდეს:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'დათვალეთ, რამდენი სიმინდის შეგროვება შეიძლება
          თითოეული თავისუფალი ადგილიდან. დაინახეთ მთვლელის ნიმუში? '
        courseF_bee_fwp_challenge1_b1: |-
          `სიგრძის` პარამეტრმა უნდა განუსაზღვროს `for ციკლს` მაქსიმალური მნიშვნელობა.

          როდესაც დაასრულებთ მოსავლის აღებას, არ დაგავიწყდეთ ფერმერის მთავარ გზაზე დაბრუნება!
        courseF_bee_fwp_challenge1_c: |-
          განათავსეთ `for ციკლი` ფუნქციაში და დაათვლევინეთ მას `1`-დან `სიგრძემდე` `1`-ით.
          ციკლის შიგნით თქვენ უნდა იმოძრაოთ წინ და შეაგროვოთ მთელი სიმინდი.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "`for ციკლის` შიგნით თქვენ მოგიწევთ `წინ მოძრაობე`,
          შემდეგ `სიმინდის აღება` **მთვლელის ტოლი გამეორებით**."
        courseF_bee_fwp_challenge1_d2: "`for ციკლის` შემდეგ თქვენ შეგიძლიათ უბრალოდ
          დაამატოთ `გადაადგილდი უკან` **სიგრძის ტოლჯერ**."
        courseF_bee_fwp_challenge1_e: |
          **აი, ამოხსნაც:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          თავიდან, დარწმუნდით იმაში, რომ გესმით, როგორ **უნდა** იმუშავოს ფუნქციამ. როდესაც ფერმერი იმოძრავებს ქვემოთ, ის უბრალოდ ცდის სიმინდის შეგროვებას. ამის მაგივრად, როგორ შეიძლება შევამოწმებინოთ მას ყოველი ადგილი 3-ივე ბოსტნეულის არსებობაზე და შევაგროვებინოთ მხოლოდ ისინი, რომლებსაც იპოვის?

          დაამატეთ პირობითი ბრძანებები ფუნქციაში, რათა შეამოწმოთ ადგილები სიმინდის, გოგრის და სალათის არსებობაზე.
        courseF_bee_fwp_challenge2_b: |-
          გითავდებათ `წინ გადაადგილების` ბლოკები?
          სცადეთ *მეორე* `for ციკლის` გამოყენება თქვენს მთავარი პროგრამაში.

          **მითითება:** არ აგერიოთ `მთვლელი` და `მთვლელი2`.
        courseF_bee_fwp_challenge2_c: |-
          **აი როგორ უნდა გამოიყურებოდეს თქვენი ფუნქცია:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **თქვენი მთავარი პროგრამა ასე უნდა გამოიყურებოდეს:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">მთვლელი2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_bee_fwp_challenge2_2018_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          თავიდან, დარწმუნდით იმაში, რომ გესმით, როგორ **უნდა** იმუშავოს ფუნქციამ. როდესაც ფერმერი იმოძრავებს ქვემოთ, ის უბრალოდ ცდის სიმინდის შეგროვებას. ამის მაგივრად, როგორ შეიძლება შევამოწმებინოთ მას ყოველი ადგილი 3-ივე ბოსტნეულის არსებობაზე და შევაგროვებინოთ მხოლოდ ისინი, რომლებსაც იპოვის?

          დაამატეთ პირობითი ბრძანებები ფუნქციაში, რათა შეამოწმოთ ადგილები სიმინდის, გოგრის და სალათის არსებობაზე.
        courseF_bee_fwp_challenge2_b: |-
          გითავდებათ `წინ გადაადგილების` ბლოკები?
          სცადეთ *მეორე* `for ციკლის` გამოყენება თქვენს მთავარი პროგრამაში.

          **მითითება:** არ აგერიოთ `მთვლელი` და `მთვლელი2`.
        courseF_bee_fwp_challenge2_c: |-
          **აი როგორ უნდა გამოიყურებოდეს თქვენი ფუნქცია:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარცხნივ</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">მთვლელი</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">სიგრძე</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაუკან</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">მობრუნებამარჯვნივ</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **თქვენი მთავარი პროგრამა ასე უნდა გამოიყურებოდეს:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">მთვლელი2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">მოძრაობაწინ</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">მთვლელი2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_a: თუ გიჭირთ დანახვა, სად უნდა გამოიყენოთ ციკლები, ჯერ
          მთლიანად დაწერეთ კოდი, შემდეგ კი დააკვირდით, რა ნაწილები მეორდება.
        courseF_farmer_ramp11_b: როგორ შეგიძლიათ <xml><block type="controls_repeat"><title
          name="TIMES">???</title></block></xml> ციკლის გამოყენება ისე, რომ მან შეაგროვოს
          სალათი და არ მოგიწიოთ 5 <xml><block type="harvester_lettuce"/></xml> ბლოკის
          გადმოთრევა?
        courseF_farmer_ramp11_c: თქვენ არ გიწევთ 5 გამეორების ციკლის გამოყენება მთელი
          სალათის შესაგროვებლად. ამის მაგივრად, გადმოათრიეთ სალათის შემგროვებელი გამეორების
          ციკლი სხვა გამეორების ციკლის შიგნით (ამ ბლოკთან ერთად - <xml><block type="maze_moveForward"/></xml>
          - და გამოგივათ!)
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_a: თუ გიჭირთ დანახვა, სად უნდა გამოიყენოთ ციკლები, ჯერ
          მთლიანად დაწერეთ კოდი, შემდეგ კი დააკვირდით, რა ნაწილები მეორდება.
        courseF_farmer_ramp11_b: როგორ შეგიძლიათ <xml><block type="controls_repeat"><title
          name="TIMES">???</title></block></xml> ციკლის გამოყენება ისე, რომ მან შეაგროვოს
          სალათი და არ მოგიწიოთ 5 <xml><block type="harvester_lettuce"/></xml> ბლოკის
          გადმოთრევა?
        courseF_farmer_ramp11_c: თქვენ არ გიწევთ 5 გამეორების ციკლის გამოყენება მთელი
          სალათის შესაგროვებლად. ამის მაგივრად, გადმოათრიეთ სალათის შემგროვებელი გამეორების
          ციკლი სხვა გამეორების ციკლის შიგნით (ამ ბლოკთან ერთად - <xml><block type="maze_moveForward"/></xml>
          - და გამოგივათ!)
      courseF_maze_predict1_authored_hint: []
      courseF_maze_ramp1_authored_hint:
        courseF_maze_ramp1_a: თუ ჩიტი ვერ აღწევს გოჭამდე, დარწმუნდით, რომ ყველა ბლოკი
          სრულადაა დაკავშირებული ერთმანეთთან, შემდეგ კი ისევ დააკლიკეთ "გაშვებას".
        courseF_maze_ramp1_b: აქ არ გჭირდებათ დამატებითი ბლოკები ინსტრუმენტების პანელიდან!
      courseF_maze_ramp13_authored_hint:
        courseF_maze_ramp13_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseF_maze_ramp13_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseF_maze_ramp13_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
        courseF_maze_ramp13_d: როდესაც თქვენი ციკლი დასრულდება, რა უნდა გააკეთოთ,
          რომ უკანასკნელი რამდენიმე კვადრატი გადაადგილოთ? ჩასვით შესაბამისი ბლოკები
          ციკლის შემდეგ.
      courseF_maze_ramp15_authored_hint:
        courseF_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseF_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
      courseF_maze_ramp1_2018_authored_hint:
        courseF_maze_ramp1_a: თუ ჩიტი ვერ აღწევს გოჭამდე, დარწმუნდით, რომ ყველა ბლოკი
          სრულადაა დაკავშირებული ერთმანეთთან, შემდეგ კი ისევ დააკლიკეთ "გაშვებას".
        courseF_maze_ramp1_b: აქ არ გჭირდებათ დამატებითი ბლოკები ინსტრუმენტების პანელიდან!
      courseF_maze_ramp2_authored_hint:
        courseF_maze_ramp2_a: ახალი ბლოკის გამოსაყენებლად გადმოათრიეთ ის ინსტრუმენტების
          პანელიდან სამუშაო სივრცეში და დააკავშირეთ ეს ბლოკი პროგრამაში არსებულ <xml><block
          type="when_run"/></xml> ბლოკთან.
        courseF_maze_ramp2_b: დარწმუნდით, რომ <xml><block type="maze_moveForward"/></xml>
          ბლოკი ციკლის შიგნითაა და მეორდება.
      courseF_maze_ramp2_2018_authored_hint:
        courseF_maze_ramp2_a: ახალი ბლოკის გამოსაყენებლად გადმოათრიეთ ის ინსტრუმენტების
          პანელიდან სამუშაო სივრცეში და დააკავშირეთ ეს ბლოკი პროგრამაში არსებულ <xml><block
          type="when_run"/></xml> ბლოკთან.
        courseF_maze_ramp2_b: დარწმუნდით, რომ <xml><block type="maze_moveForward"/></xml>
          ბლოკი ციკლის შიგნითაა და მეორდება.
      courseF_maze_ramp4_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of
          view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: იმისათვის, რომ გზას გაუყვეთ, იმოძრავეთ წინ და შეუხვიეთ
          ერთ ადგილას, შემდეგ იმოძრავეთ სამჯერ, სანამ შეუხვევთ საპირისპირო მიმართულებით.
          გადაადგილდით წინ კიდევ ერთხელ, რათა მიაღწიოთ გოჭთან.
        courseF_maze_ramp4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_maze_ramp4_2018_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of
          view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: იმისათვის, რომ გზას გაუყვეთ, იმოძრავეთ წინ და შეუხვიეთ
          ერთ ადგილას, შემდეგ იმოძრავეთ სამჯერ, სანამ შეუხვევთ საპირისპირო მიმართულებით.
          გადაადგილდით წინ კიდევ ერთხელ, რათა მიაღწიოთ გოჭთან.
        courseF_maze_ramp4_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება
          და კოდის გაშვება, თუნდაც ჯერ ამოხსნილი არ გქონდეთ თავსატეხი. ასე უკეთ მიხვდებით,
          რა ხდება.
      courseF_maze_ramp5_authored_hint:
        courseF_maze_ramp5_a: Try using the "Step" button to run your code line by
          line. Can you figure out what you need to do next?
        courseF_maze_ramp5_b: გოჭთან მოხვედრის ერთზე მეტი გზა არსებობს.
        courseF_maze_ramp5_c: სცადეთ <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml>
          ციკლის გამოყენება უფრო მოკლე კოდის მისაღებად!
      courseF_maze_ramp5_2018_authored_hint:
        courseF_maze_ramp5_a: Try using the "Step" button to run your code line by
          line. Can you figure out what you need to do next?
        courseF_maze_ramp5_b: გოჭთან მოხვედრის ერთზე მეტი გზა არსებობს.
        courseF_maze_ramp5_c: სცადეთ <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml>
          ციკლის გამოყენება უფრო მოკლე კოდის მისაღებად!
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseF_maze_ramp6_b: ჩიტი თავიდან დგას სახით კედლისკენ, ამიტომ არ დაგავიწყდეთ
          მოძრაობის დაწყებამდე მობრუნება!
        courseF_maze_ramp6_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
        courseF_maze_ramp6_b: ჩიტი თავიდან დგას სახით კედლისკენ, ამიტომ არ დაგავიწყდეთ
          მოძრაობის დაწყებამდე მობრუნება!
        courseF_maze_ramp6_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_b: Don't forget to use the "Step" button to go through
          block by block and look for errors.
        courseF_maze_ramp7_a: გამოიყენეთ გამეორების ბლოკები, რათა მრავალჯერ გაუშვათ
          ერთი ბლოკი ან კოდის რაღაც ნაწილი.
        courseF_maze_ramp7_c: არ შეგეშინდეთ შეცდომის დაშვების! სცადეთ ბლოკების დამატება,
          კოდის გაშვება და ნახეთ, რა მოხდება, თუნდაც თავსატეხი ბოლომდე ამოხსნილი არ
          გქონდეთ.
        courseF_maze_ramp7_d: გოჭთან მოხვედრის ერთზე მეტი გზა არსებობს. რომელი საჭიროებს
          კოდის უმცირეს რაოდენობას?
        courseF_maze_ramp7_aa: |-
          შეხედეთ ამ გზას...


          ![](https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png)
      courseF_playlab_variables1a_authored_hint:
        courseF_playlab_variables1a_a: Put the word "Goal!" inside the green block
          that is connected to the purple `set shout to` block.
      courseF_playlab_variables1a_2018_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should
          I shout?” in the green block with “Goal!”
      courseF_playlab_variables2b_authored_hint:
        courseF_playlab_variables2b_a: თქვენი აზრით, რას იტყვის კიკი, როდესაც დააწკაპებთ
          `გაშვებას`?
      courseF_playlab_variables2b_2018_authored_hint:
        courseF_playlab_variables2b_a: თქვენი აზრით, რას იტყვის კიკი, როდესაც დააწკაპებთ
          `გაშვებას`?
      courseF_playlab_variables3b_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All
          you have to do is put them where they belong!
      courseF_playlab_variables3bEdit_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All
          you have to do is put them where they belong!
      courseF_playlab_variables3b_josh_authored_hint:
        courseF_playlab_variables3b_a: 'ორი ბლოკია ცარიელი ადგილებით: `მსახიობო თქვი`
          ბლოკი და `გაერთიანების` ბლოკი. დაამატეთ აქ ცვლადების ბლოკები!'
      courseF_playlab_variables3b_josh_2018_authored_hint:
        courseF_playlab_variables3b_a: 'ორი ბლოკია ცარიელი ადგილებით: `მსახიობო თქვი`
          ბლოკი და `გაერთიანების` ბლოკი. დაამატეთ აქ ცვლადების ბლოკები!'
      courseF_playlab_variables4b_authored_hint:
        courseF_playlab_variables4b_a: აქ არ გჭირდებათ დამატებითი ბლოკები ინსტრუმენტების
          პანელიდან.
        courseF_playlab_variables4b_b: განათავსეთ ორი `ასაკის` ცვლადი და ერთი `სახელის`
          ცვლადი საუბრის იმ ნაწილში, სადაც მათ აზრი ექნებათ.
      courseF_playlab_variables4b_2018_authored_hint:
        courseF_playlab_variables4b_a: აქ არ გჭირდებათ დამატებითი ბლოკები ინსტრუმენტების
          პანელიდან.
        courseF_playlab_variables4b_b: განათავსეთ ორი `ასაკის` ცვლადი და ერთი `სახელის`
          ცვლადი საუბრის იმ ნაწილში, სადაც მათ აზრი ექნებათ.
      courseF_playlab_variables5c_authored_hint:
        courseF_playlab_variables5c_a: იპოვეთ `პასუხის` ცვლადის ბლოკი ინსტრუმენტების
          პანელში, "ცვლადების" ქვეშ.
        courseF_playlab_variables5c_b: გამოსცადეთ თქვენი კოდი! სცადეთ "red" (წითლის)
          და სხვა ფერების შეყვანა და ნახეთ, რა მოხდება.
      courseF_playlab_variables5c_2018_authored_hint:
        courseF_playlab_variables5c_a: იპოვეთ `პასუხის` ცვლადის ბლოკი ინსტრუმენტების
          პანელში, "ცვლადების" ქვეშ.
        courseF_playlab_variables5c_b: გამოსცადეთ თქვენი კოდი! სცადეთ "red" (წითლის)
          და სხვა ფერების შეყვანა და ნახეთ, რა მოხდება.
      courseF_playlab_variables6c_authored_hint:
        courseF_playlab_variables6c_a: '"შეყვანის" სექციის ქვეშ, გამოიყენეთ `კითხვის`
          ბლოკი, რათა მიიღოთ შეყვანილი ინფორმაცია მომხარებლებისგან.'
      courseF_playlab_variables6c_2018_authored_hint:
        courseF_playlab_variables6c_a: '"შეყვანის" სექციის ქვეშ, გამოიყენეთ `კითხვის`
          ბლოკი, რათა მიიღოთ შეყვანილი ინფორმაცია მომხარებლებისგან.'
      courseF_playlab_variables7b_authored_hint:
        courseF_playlab_variables7b_a: ალაპარაკეთ კატა და ძაღლი მათი საყვარელი საჭმელების
          შესახებ. გამოიყენეთ შეკითხვის ბლოკი, რათა იპოვოთ მათი საყვარელი საჭმელი
          და გამოიყვანოთ ტექსტი ეკრანზე!
        courseF_playlab_variables7b_b: 'დაასმევინეთ თქვენს საყვარელ პერსონაჟს შეკითხვა:
          "გსურთ თუ არა ხუმრობის მოსმენა?". თუ პასუხი არის კი, მაშინ გამოიყვანეთ ხუმრობა
          ეკრანზე.'
      courseF_playlab_variables7b_2018_authored_hint:
        courseF_playlab_variables7b_a: ალაპარაკეთ კატა და ძაღლი მათი საყვარელი საჭმელების
          შესახებ. გამოიყენეთ შეკითხვის ბლოკი, რათა იპოვოთ მათი საყვარელი საჭმელი
          და გამოიყვანოთ ტექსტი ეკრანზე!
        courseF_playlab_variables7b_b: 'დაასმევინეთ თქვენს საყვარელ პერსონაჟს შეკითხვა:
          "გსურთ თუ არა ხუმრობის მოსმენა?". თუ პასუხი არის კი, მაშინ გამოიყვანეთ ხუმრობა
          ეკრანზე.'
      courseF_playlab_variables7c_authored_hint:
        courseF_playlab_variables7c_a: განათავსეთ ახალი `კითხვა` ბლოკი თქვენს `თუ/სხვაგვარად`
          ბრძანებამდე, რათა შეგეძლოთ მისი გამოყენება სხვა დონეებზეც.
      courseF_playlab_variables7c_2018_authored_hint:
        courseF_playlab_variables7c_a: განათავსეთ ახალი `კითხვა` ბლოკი თქვენს `თუ/სხვაგვარად`
          ბრძანებამდე, რათა შეგეძლოთ მისი გამოყენება სხვა დონეებზეც.
      courseF_playlab_variables8c_authored_hint:
        courseF_playlab_variables8c_a: "`გაერთიანების` ბლოკი უკავშირდება `მსახიობო
          თქვი` ბლოკს და გაძლევთ საშუალებას გამოიყენოთ თქვენი ცვლადები უფრო გრძელ
          წინადადებებში."
      courseF_playlab_variables8c_2018_authored_hint:
        courseF_playlab_variables8c_a: "`გაერთიანების` ბლოკი უკავშირდება `მსახიობო
          თქვი` ბლოკს და გაძლევთ საშუალებას გამოიყენოთ თქვენი ცვლადები უფრო გრძელ
          წინადადებებში."
      courseF_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          თქვენ დაგჭირდებათ დამატებითი ბლოკები ინსტრუმენტების პანელიდან, რათა აალაპარაკოთ მსახიობები.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">კაკუ-კაკუ.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge1_2018_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          თქვენ დაგჭირდებათ დამატებითი ბლოკები ინსტრუმენტების პანელიდან, რათა აალაპარაკოთ მსახიობები.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">კაკუ-კაკუ.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_a: დაამატეთ ქულების გამოკლება `ქულების`
          ცვლადში, როდესაც სპრაიტები დაეჯახებიან ერთმანეთს.
        courseF_playlab_variables_challenge2_b: თქვენ შეგიძლიათ შეცვალოთ პარამეტრი
          იმისათვის, რომ განსაზღვროთ, როგორ იმოძრავებს სპრაიტი ისრების ღილაკებზე დაჭერის
          დროს.
        courseF_playlab_variables_challenge2_c: |-
          **ამოხსნა:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_a: დაამატეთ ქულების გამოკლება `ქულების`
          ცვლადში, როდესაც სპრაიტები დაეჯახებიან ერთმანეთს.
        courseF_playlab_variables_challenge2_b: თქვენ შეგიძლიათ შეცვალოთ პარამეტრი
          იმისათვის, რომ განსაზღვროთ, როგორ იმოძრავებს სპრაიტი ისრების ღილაკებზე დაჭერის
          დროს.
        courseF_playlab_variables_challenge2_c: |-
          **ამოხსნა:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          მსახიობმა იცის, თუ რა თქვას, რადგან ის ამოწმებს `იღბალის` ცვლადის მიმდინარე მნიშვნელობას.

          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">კონცენტრირდი და იკითხე თავიდან!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          ისეთი წარმოდგენა შექიმნება, რომ თამაში თავიდან იწყება, თუ კვლავ გამოიძახებთ `შეკითხვის დასმის` ფუნქციას მას შემდეგ, რაც მსახიობი იტყვის იღბალს.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">იღბალი</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "თქვენ მოგიწევთ მეტი პირობითი გამოსახულების
          დამატება, რათა მისცეთ მსახიობებს მეტის თქმის საშუალება.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\"
          inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value
          name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement
          name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n
          \               <title name=\"VAR\">fortune</title>\n                <value
          name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n
          \                   <title name=\"TEXT\">???</title>\n                  </block>\n
          \               </value>\n              </block>\n              </statement></block></xml>\n
          \             \nარ დაგავიწყდეთ იმის შეცვლა, თუ რომელ ემოციებს გამოხატავს
          მსახიობი `გაიმეორე უსასრულოდ` ციკლის შიგნით. თქვენ ასევე შეგიძლიათ გააკეთოთ
          ისე, რომ ეს ემოციები იყოს შემთხვევითი!"
        courseF_playlab_variables_challenge3_d: |-
          როდესაც გაიაზრებთ მთელ კოდს, რომელიც უკავშირდება 1-ლ მსახიობს, სცადეთ იგივე კოდის დაწერა მე-2 მსახიობისთვის.

          არ დაგავიწყდეთ ინსტრუქციების შეცვლა `შეკითხვის დასმის` ფუნქციაში, რათა ამ ყველაფერს აზრი ჰქონდეს!
        courseF_playlab_variables_challenge3_e: |-
          როდესაც ყველაფერს მორჩებით, უნდა შეგეძლოთ თითოეულ მსახიობზე დაკლიკება და 8 სხვადასხვა შეტყობინებინს მიღება. შესაძლებელია ამის კიდევ უფრო მეტად გავრცობა?

          გამოაცდევინეთ თქვენს მეგობარს აპლიკაცია, როდესაც მორჩებით!
      coursea_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something,
          and if it doesn't work, try something else!
      coursef_maze_ramp3_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
        courseF_maze_ramp3_b: გამოიყენეთ ნაბიჯის ღილაკი, რათა გაიაროთ პროგრამა ხაზ-ხაზად.
          სად ხდება შეცდომა?
      coursef_maze_ramp3_2018_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
        courseF_maze_ramp3_b: გამოიყენეთ ნაბიჯის ღილაკი, რათა გაიაროთ პროგრამა ხაზ-ხაზად.
          სად ხდება შეცდომა?
      drawings!_authored_hint:
        triangle_geometry_hint: 'გახსოვდეთ: ტოლგვერდა სამკუთხედს 3 გვერდი აქვს, 60
          გრადუსიანი კუთხეებით მათ შორის!'
        repeat_pointer: თქვენ უნდა დახატოთ გვერდი და შებრუნდეთ 3-ჯერ...რომელი ბლოკის
          გამოყენება შეგიძლიათ, რათა შეასრულოთ ერთი და იგივე ბრძანება მრავალჯერ?
        repeat_bottom_out: გამოიყენეთ `გაიმეორე 3-ჯერ` ბლოკი!
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: ამ თავსატეხის ამოსახსნელად, თქვენ დაგჭირდებათ
          `გამეორების` რამდენიმე ციკლი.
      grade1_adventurer_loops2_authored_hint:
        grade1_adventurer_loops2_a: Try using a `repeat` block to collect your gold.
      grade1_adventurer_loops3_authored_hint:
        grade1_adventurer_loops3_a: რამე არასწორად ხდება? სცადეთ ნაბიჯის ღილაკის გამოყენება,
          რათა იპოვოთ ის ადგილი, სადაც შეცდომა დაუშვით.
      grade1_adventurer_loops4_authored_hint:
        grade1_adventurer_loops4_a: საქმის დასამთავრებლად სცადეთ კიდევ ერთი ციკლის
          გამოყენება.
      grade1_adventurer_loops5_authored_hint:
        grade1_adventurer_loops5_a: Can't figure out where things start going wrong?
          Use the "Step" button to run through your program one block at a time.
      grade1_adventurer_loops6_authored_hint:
        grade1_adventurer_loops6_a: If you are having a hard time with the puzzle,
          try drawing it on paper to help you figure it out.
      grade1_adventurer_loops7_challenge_authored_hint:
        grade1_adventurer_loops7_challenge_a: 'თუ არ შეგიძლიათ გაარკვიოთ, სად უნდა
          ჩასვათ გამეორების ციკლები, სცადეთ ნაწილ-ნაწილ დაწეროთ ამოხსნა და მოძებნოთ
          გამეორებადი კოდი. '
        grade1_adventurer_loops7_challenge_b: არ გეჩვენებათ, რომ ეს კოდი ძალიან გრძელია?
          თქვენ შეგიძლიათ შეამოკლოთ ის გარე ციკლში ორი `გამეორების` ციკლით განთავსებით.
      grade1_adventurer_loops8_challenge_authored_hint:
        grade1_adventurer_loops8_challenge_a: Can you find a pattern in the steps?  Where
          can you use a repeat?
      grade1_adventurer_loops9_authored_hint:
        grade1_adventurer_loops9_a: არ გეჩვენებად ეს რთულად? დაშალეთ ის 4 მცირე პრობლემად,
          რათა გაამარტივოთ კოდი.
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ
          შეცვალოთ ბლოკის თავში განლაგებული რიცხვი.
      grade1_artist_loops2_authored_hint:
        grade1_artist_loops2_a: Remember to use a `repeat` loop for better code!
      grade1_artist_loops3_authored_hint: []
      grade1_artist_loops4_authored_hint:
        grade1_artist_loops4_a: Drag out a `repeat` loop, then put the other blocks
          inside of it. How many times do you need to repeat?
      grade1_artist_loops5_authored_hint: []
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: ამ გამოწვევაში მიმდევრულად გამოიყენება ოთხი ციკლი!
        grade1_artist_loops6_b: |-
          დააკვირდით: ყველა ციკლი ქმნის კიბისებრ პრინციპს, რომელიც მოძრაობს განსხვავებული მიმართულებით.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        grade1_artist_loops6_c: "The loops should do this:\n- Loop 1\n  - Right\n
          \ - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n-
          Loop 4\n  - Left\n  - Down"
      grade1_artist_loops7_authored_hint: []
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: ამ გამოწვევაში მიმდევრულად გამოიყენება ოთხი ციკლი!
        artistLoopsK9_b: |-
          დააკვირდით: ყველა ციკლი ქმნის კიბისებრ პრინციპს, რომელიც მოძრაობს განსხვავებული მიმართულებით.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        artistLoopsK9_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n
          \ \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop
          4\n  - Left\n  - Down"
      grade1_artist_loops7b_authored_hint:
        grade1_artist_loops7b_a: How many times should you repeat the pattern to make
          the ladder?
      grade1_artist_loops8_authored_hint: []
      grade1_artist_loops9_authored_hint: []
      grade1_artist_loopsFP_authored_hint: []
      grade1_maze_sequence1_authored_hint:
        grade1_maze_sequence1_a: This program is missing one block. Can you figure
          out which one?
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
      grade1_maze_sequence2_authored_hint:
        grade1_maze_sequence2_a: One of the blocks is moving the bird in the wrong
          direction. Can you figure out which one and replace it with the correct
          block?
      grade1_maze_sequence3_authored_hint:
        grade1_maze_sequence3_a: Try adding one instruction at a time until you get
          to the pig.
      grade1_maze_sequence5_authored_hint:
        K2.0_sequence_5: Your final code should have three movement blocks.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: There is 1 block that you need to add to move the bird
          to the pig.
      grade1_maze_sequence7_authored_hint:
        grade1_maze_sequence7a: თუ გაიჭედეთ, სცადეთ თითო ჯერზე ერთი ბლოკის დამატება
          მანამდე, სანამ ამოხსნით ამ თავსატეხს.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: Stuck? Try tracing the bird's path with your finger.
        grade1_maze_sequence8_b: The extra blocks need to be added before the last
          ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51
          PM.png )
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
      grade2_CaringForNewPet_0_authored_hint:
        grade2_CaringForNewPet_0: If the bird isn't getting to the pig, make sure
          all three of the blocks have been fully clicked together, then click "Run"
          again.
      grade2_CaringForNewPet_1_authored_hint:
        2-3_Maze_1_a: To use a `move forward` block, drag it from the toolbox out
          into the workspace and connect it to the `when run` block.
      grade2_CaringForNewPet_11_authored_hint: []
      grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo
          delete a block from the middle of your code, drag all of the blocks underneath
          it away to the right and let them sit in the workspace for a while.  \n\nClick
          on the block you want to delete, and drag it back to the toolbox.\n\nFinally,
          put your other blocks back in place where they belong.\n"
      grade2_CaringForNewPet_3_authored_hint:
        hint1: You can turn right or left from the bird's point of view. If you are
          facing right, turning right will make you point downwards.
        hint2: This path is a zig-zag. You need to move forward 3 times and turn 2
          times.
        hint3: To follow the path, move forward and turn one way, then move again
          and turn the opposite way. Move forward one more time to reach the pig.
      grade2_CaringForNewPet_3D_authored_hint: []
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: ამ თავსატეხის ამოსახსნელად ორი ტიპის გზა არსებობს!
      grade2_CaringForNewPet_5_authored_hint:
        grade2_CaringForNewPet_5_a: If you can't quite see what you need to do, try
          saying the steps that your bird will take out loud one-by-one and see if
          they match the blocks in the workspace.
      grade2_CaringForNewPet_6_authored_hint:
        grade2_CaringForNewPet_6_a: You don't have to code the whole solution at once!  Try
          running the code as you go to make sure it works at each step.
      grade2_CaringForNewPet_7D_authored_hint:
        grade2_CaringForNewPet_7D_a: Don't forget to use the "Step" button to go through
          block by block and look for errors.
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: თუ თქვენ გამოიყენებთ ბლოკს, რომელიც `წინ 100 პიქსელით
          გადამაადგილებს`, მე ავტომატურად დავხატავ ხაზს.
        2-3_Artist_1_new_b: კუთხეები გაგიჭირდათ? გამოიყენეთ `შეტრიალდი 90 გრადუსით`
          ბლოკი.
      grade2_MakeDogTag_2_authored_hint:
        2-3_Artist_2_new_a: To create this window, just draw a square with 100 pixel
          sides.
      grade2_MakeDogTag_3_authored_hint:
        2-3_Artist_4_a: To finish the rocket, just draw the triangle on top!
      grade2_MakeDogTag_4_authored_hint: []
      grade2_MakeDogTag_5_authored_hint:
        grade2_MakeDogTag_5a: The artist is already facing the correct way to draw
          his first line.
        grade2_MakeDogTag_5b: This diamond is really just a square that's standing
          on its corner.
        grade2_MakeDogTag_5c: Since this diamond is also a square, be sure to turn
          90 degrees at the corners.
      grade2_MakeDogTag_6_authored_hint:
        grade2_MakeDogTag_6a: Every angle is either 45 or 90 degrees.
        grade2_MakeDogTag_6b: "Does it work at the first step?  \nHow about the second?
          \ \nWhere does it go wrong?"
      grade2_MakeDogTag_7_authored_hint:
        2-3_Artist_11_a: The exterior angles on this triangle are 120 degrees each.
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Remember that the code from the last puzzle was:

          ![](https://images.code.org/e5c7492f509dd41efe2888c7e7895c28-image-1461177002636.29.02.png)
        2-3_Artist_Loops_New_11_b: ახლა ციკლის შიგნით მოქცეული კოდის **end** ნაწილისაკენ
          უნდა გადაადგილდეთ.
      grade2_MakeDogTag_BFP_authored_hint: []
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          რამდენჯერ გამეორდა ჩემი ფიგურა?

          რამდენჯერ *უნდა* გამეორებულიყო ჩემი ფიგურა?

          პროგრამაში სად შეგიძლიათ ამის შეცვლა?
      grade2_PuppyLoops_3_authored_hint:
        hint1: This puzzle is very similar to the last one.
        hint2: Use a `repeat 5 times` block to create the loop.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_PuppyLoops_5_authored_hint:
        hint1: The best solution uses two `move forward` commands and one loop.
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში ჩასვამთ,
          სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
        2-3_Maze_16_b: იმისათვის, რომ ბევრი ბლოკი მოათავსოთ ციკლში "გამეორება", უბრალოდ
          გადმოქაჩეთ ციკლი სამუშაო სივრცეში და მასში ჩაყარეთ საწყისი პროგრამის ყველა
          ბლოკი!
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში
          ჩასვამთ, სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
        2-3_Maze_Loops_17_b: საწყისი კოდი წაგეშალათ? დააწექით ღილაკს "თავიდან" და
          აღადგინეთ ის!
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'მითითება: ყოველი ულვაში 75 პიქსელის სიგრძისაა.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: რა მოხთება, თუ პირველი ხაზის დახატვის შემდეგ, მხატვარს
          უკან გადაადგილებთ ან გადაახტუნებთ?
      grade2_collector_2_authored_hint:
        hint1: You can use four `move forward` blocks or use the `repeat 4 times`
          block to make your program shorter.
      grade2_collector_A_authored_hint: []
      grade2_collector_A_2018_authored_hint: []
      grade2_maze_debuggingFP_authored_hint: []
      grade2_maze_intro4_authored_hint:
        hint_1: Connect a "move forward" block to the bottom of the program.
      grade2_playlab_project_6_authored_hint:
        idea1: |-
          *Need an idea?*

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*

          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      grade2_puppy_loops2_authored_hint:
        hint1: You can solve this puzzle with just three blocks, including `when run`.
        hint2: Try putting the `move forward` block inside of a `repeat` block to
          create a loop.
        hint3: You need to repeat the `move forward` command 5 times to solve this
          puzzle.
      grade2_puppy_loops3_authored_hint:
        hint1: This puzzle is very similar to the last one.
        hint2: Use a `repeat 5 times` block to create the loop.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_puppy_loops4_authored_hint:
        hint1: Not all command blocks should be repeated.
        hint2: Use two `repeat` blocks set to different numbers.
        hint3: "`Turn right` once between the two loops."
      grade2_puppy_loops5_authored_hint:
        hint1: The best solution uses two `move forward` commands and one loop.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში ჩასვამთ,
          სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
        2-3_Maze_16_b: იმისათვის, რომ ბევრი ბლოკი მოათავსოთ ციკლში "გამეორება", უბრალოდ
          გადმოქაჩეთ ციკლი სამუშაო სივრცეში და მასში ჩაყარეთ საწყისი პროგრამის ყველა
          ბლოკი!
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში
          ჩასვამთ, სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: შეხედეთ ამ თავსატეხს, როგორც გრძელ მართკუთხედს,
          რომელშიც სრული გზის გასავლელად ფუტკარმა უნდა იმოძრაოს წინ, შემდეგ რამდენჯერმე
          შეუხვიოს მარცხნივ.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: გიჭირთ იმის გამორკვევა, როგორ უნდა ჩამოიტანოთ ბლოკები
          ქვემოთ? სცადეთ წითელ ყვავილს ზუსტად ისე მოეპყროთ, როგორც მეწამული ფერის
          ყვავილს!
        2-3_Bee_Conditionals_14_b: წითელი ყვავილი რომ მეწამული ფერის ყოფილიყო, შეძლებდით
          გამოგერკვიათ, როგორ უნდა გამოიყენოთ `გამეორების`ციკლი, იმისათვის, რომ კოდის
          მოცულობა შეამციროთ?
        2-3_Bee_Conditionals_14_c: "Try breaking this up into two separate chunks:
          \ \n\n![](https://images.code.org/670ac0889a8f523865ff4099b4c54844-image-1463445460440.36.42.png)\n\n1)
          Gather nectar 3 times\n  - Move forward 5 times\n  - Check to see if nectar,
          if so: get it\n  - Turn left\n  \n2) Make honey \n  - Move forward one time\n
          \ - Make two honey"
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'გახსოვდეთ: მეწამული ფერის ყვავილებს აქვთ მხოლოდ
          2 ტიპის ნექტარი, 0 ან 1 და ისინი შეიძლება შეიცვალოს ყოველ ჯერზე, როდესაც
          კოდს გაააქტიურებთ.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: კოდი უმოკლესი იქნება თუ წინ მოძრაობის, ნექტარის
          შეგროვებისა და თაფლის გაკეთების დროს სხვადასხვა ციკლს გამოიყენებთ.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'გახსოვდეთ: პროგრამის გაშვებისას, იასამნისფერი ყვავილების
          ნექტარის შემცველობა იცვლება 0-სა და 1-ს შორის!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'გახსოვდეთ: პროგრამის გაშვებისას, იასამნისფერი ყვავილების
          ნექტარის შემცველობა იცვლება 0-სა და 1-ს შორის!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: 'როდესაც იპოვით და შეასწორებთ შეცდომას, დააკვირდით:
          იქნებთ დაინახოთ კოდის ნაწილები, რომელთა გამარტივება შესაძლებელია `გამეორების`
          ციკლის საშუალებით?'
      grade3_Debugging_10_authored_hint:
        grade3_Debugging_10_a: |-
          Start by looking at just the first loop.

          What does it do?

          What is it supposed to do?

          What does that tell you?
        grade3_Debugging_10_b: Once you have the first loop the way you want it, what
          is left over in your code?
        grade3_Debugging_10_c: |-
          Try wrapping the leftover loop around the rest of your completed code.  Does is work now?

          If not, what is still going wrong?
      grade3_Debugging_11_authored_hint:
        grade3_Debugging_11_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        grade3_Debugging_11_b: It looks like all of the right steps are here, you
          just need more of them.  How can you repeat the `get nectar` and `make honey`
          actions multiple times?
      grade3_Debugging_2_authored_hint:
        grade3_Debugging_2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        grade3_Debugging_2_b: Do you see any patterns that could be made more simple
          using a `repeat` loop?
      grade3_Debugging_3_authored_hint:
        grade3_Debugging_3_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        grade3_Debugging_3_b: Do you see a pattern?  Try using nested loops to solve
          this puzzle.
      grade3_Debugging_4_authored_hint:
        grade3_Debugging_4_a: Is there any place where the bee does something that
          doesn't make sense? What happens when you change those blocks?
        grade3_Debugging_4_b: Try simplifying the code using nested loops.
      grade3_Debugging_8_authored_hint:
        grade3_Debugging_8_a: "Try using the debugging process a couple of times in
          a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed,
          what goes wrong?"
        grade3_Debugging_8_b: "If you're having a hard time figuring out how to make
          the stair step pattern, try tracing it with your finger and saying the commands
          out loud. \n\nDon't forget to point out the direction of the turns!"
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: არის თუ არა რამე ადგილი სადაც ფუტკარი უაზრო რაღაცებს
          აკეთებს? რა მოხდება თუ შეცვლით ამ ბლოკს?
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: საბოლოოდ თქვენს ციკლში ხუთი ბლოკი უნდა იყოს.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: თუ "გამეორება"-ში მოსათავსებელ ბლოკებს მაშინვე ვერ ამჩნევთ,
          თითოეული მოძრაობისათვის დაწერეთ კოდი და სცადეთ იპოვოთ მსგავსებები.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: თუ არ იცით, რა უნდა შევიდეს ციკლში "გამეორება", სცადეთ
          ბლოკები სათითაოდ გამოწიოთ და ნახოთ, რამე მსგავსებას თუ ამჩნევთ.
        2-3_Bee_Loops_6_b: როცა მორჩებით, ციკლში 6 ბლოკი უნდა იყოს.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: თქვენ დაგჭირდებათ ორი განსხვავებული `გამეორების` ციკლის
          გამოყენება ერთმანეთის მიყოლებით.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: პირველი ქმედება არა გადაადგილება, არამედ მობრუნება იქნება.
        2-3_Bee_Loops_7_b: 'თუ თავიდან ციკლის სტრუქტურას კარგად ვერ ხედავთ, სცადეთ
          კოდი სრულად დაწეროთ და იპოვოთ მსგავსი ნაწილები.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: პირველი ქმედება არა გადაადგილება, არამედ მობრუნება იქნება.
        2-3_Bee_Loops_4A_b: პროგრამის ბოლო ნაწილის დასრულება შესაძლებელია მის ბოლოში,
          ციკლის გარეთ, კოდის დაწერით.
        2-3_Bee_Loops_4A_c: თუ ჯერ ციკლებს ვერ ამჩნევთ, სცადეთ გრძელი ამოხსნა დაწეროთ,
          შემდეგ კი დააკვირდეთ, რა შეიძლება გააერთიანოთ პროგრამის ბოლოში განთვასებულ
          ერთ `გამეორების` ციკლში.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: საბოლოოდ თქვენს ციკლში ოთხი ბლოკი უნდა იყოს.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: საბოლოოდ თქვენს ციკლში 6 ბლოკი უნდა იყოს.
      grade3_RunningFarm_1_authored_hint:
        grade3_RunningFarm_1_a: You will need to look for corn 5 times, using a repeat
          loop.
        grade3_RunningFarm_1_b: Make sure to use an `if at corn` block or you might
          try to pick something that's not there!
      grade3_RunningFarm_10_authored_hint:
        grade3_RunningFarm_10_a: This puzzle uses almost the exact same code as the
          last level, except you only need to repeat 4 times.
      grade3_RunningFarm_11a_authored_hint:
        grade3_RunningFarm_11a_a: You shouldn't need the `while path ahead` loop this
          time.
      grade3_RunningFarm_2_authored_hint:
        grade3_RunningFarm_2_a: 'The best way to do this is to nest `if` statements
          by placing one inside of the other.  '
        grade3_RunningFarm_2_b: For this puzzle, you should have one `if/else` statement
          and one plain `if` statement.
      grade3_RunningFarm_3_authored_hint:
        grade3_RunningFarm_3_a: |-
          To get all of the items, try nesting `if` statements three deep.

          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        grade3_RunningFarm_3_b: For this puzzle, you should have two `if/else` statements
          and one plain `if` statement.
      grade3_RunningFarm_4_authored_hint:
        grade3_RunningFarm_4_a: |-
          No one knows how many heads of lettuce will grow from each sprout.

          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
      grade3_RunningFarm_5_authored_hint:
        grade3_RunningFarm_5_a: You will need to check for each type of crop that
          the farmer can pick.  Try using two `if/else` statements and one  `if` block.
      grade3_RunningFarm_6_authored_hint:
        grade3_RunningFarm_6_a: Use a `while path ahead` loop to move the farmer down
          each piece of the spiral.
        grade3_RunningFarm_6_b: You only need to check for corn during most of the
          harvest.  Just pick one pumpkin at the very end of your program.
      grade3_RunningFarm_7_authored_hint:
        grade3_RunningFarm_7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        grade3_RunningFarm_7_b: Try using `when path ahead` to keep the farmer moving
          the right number of steps.
        grade3_RunningFarm_7_c: 'Use nested `if` statements and `while there is` loops
          to check each space for corn and lettuce, then pick only a single pumpkin
          at the end. '
      grade3_bee_Conditionals_new4_authored_hint:
        grade3_bee_Conditionals_new4_a: Don't forget that you can use loops for shorter
          code!
      grade3_bee_conditionals_new1a_authored_hint:
        grade3_bee_conditionals_new1a_a: Be sure to use an `if` statement to check
          each space to see if it has a flower or nothing.
      grade3_bee_conditionals_new2a_authored_hint:
        grade3_bee_conditionals_new2a_a: You can still treat every space as if there
          is a cloud over it, even though you can see the whole path.
        grade3_bee_conditionals_new2a_b: 'Use an `if` statement inside your loop to
          check each space. '
      grade3_bee_conditionals_new3a_authored_hint:
        grade3_bee_conditionals_new3a_a: In this puzzle, you know that each square
          has either a flower or a honeycomb.  That means you can repeat your `if/else`
          conditional at each square.
      grade3_bee_conditionals_quantum1_authored_hint:
        grade3_bee_conditionals_quantum1_a: You will need to use an `if` block to
          check to see if there is a flower beneath the cloud before you try to get
          nectar.
      grade3_bee_conditionals_quantum2_authored_hint:
        grade3_bee_conditionals_quantum2_a: Sometimes a flower will be there, sometimes
          it won't.  If you want your code to run in both cases, make sure to use
          an `if` statement.
      grade3_bee_conditionals_quantum3_authored_hint:
        grade3_bee_conditionals_quantum3: Make sure to use an `if` statement to check
          for honeycomb beneath each cloud.
      grade3_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll
          want to use a conditional block (`if/else`) to solve the challenge."
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
        grade3_bee_conditionals_quantum5_a: This puzzle is tricky, because you can't
          check blank squares, nectar *and* honey with a single conditional.
      grade3_maze_loops1_authored_hint:
        grade3_maze_loops1_a: Try using the "Step" button to find errors.
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_a: |-
          Try using this path through the maze.

          ![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)
        grade3_maze_loops2_b: თუ სქემა აღსაქმელად რთულია, მანამ სანამ ციკლს სქემაში
          ჩასვამთ, სცადეთ კოდი თავიდან დაწეროთ და ნახოთ, რა მეორდება კვლავ და კვლავ.
        grade3_maze_loops2_c: Try using one `repeat` loop inside of another to cut
          down on the amount of code you need.
      grade3_maze_loops2a_authored_hint:
        grade3_maze_loops2a_a: To solve this puzzle, you will need to "nest" one `repeat`
          loop inside of another `repeat` loop.
      grade3_maze_loops3_authored_hint:
        2-3_Maze_Loops_19_a: If you are stuck, try writing out the code out on paper
          without loops first and look for patterns.
        2-3_Maze_Loops_19_b: Nesting `repeat` loops can help decrease the number of
          blocks used.
        2-3_Maze_Loops_19_c: It will take two sets of nested `repeat` loops to solve
          this puzzle.
      grade3_maze_loops4_authored_hint:
        2-3_Maze_Loops_20_a: Look for a stair-step pattern in this maze to find where
          a nested loop can be used.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: თუ ვერ პოულობთ კოდის იმ ნაწის, რომელსაც კიბის საფეხურის
          ფორმა აქვს, სცადეთ კოდს თითი გააყოლოთ.
      grade3_robotFarmer_ConditionalsIntro_10a_authored_hint: []
      grade3_robotFarmer_ConditionalsIntro_11a_authored_hint: []
      grade3_robotFarmer_ConditionalsIntro_5_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_5a: Try nesting a `while` loop inside
          of a `repeat` loop.
      grade3_robotFarmer_ConditionalsIntro_7_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_7_a: Make sure you're using the `while`
          loop to figure out how many times to fill each hole.
        grade3_robotFarmer_ConditionalsIntro_7_b: Notice that the farmer needs to
          move forward and down several times in a stair-step pattern.
      grade3_robotFarmer_ConditionalsIntro_8_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: The `while path ahead` block lets
          you keep going, even if you don't know how many squares are in a path.
      grade3_robotFarmer_ConditionalsIntro_9_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_9_a: You are going to need to use more
          than one `while` loop.
        grade3_robotFarmer_ConditionalsIntro_9_b: Every hole is at the end of a path,
          so use `while path ahead` before using `while there is a hole`.
        grade3_robotFarmer_ConditionalsIntro_9_c: Notice that you need to repeat the
          `while path ahead`, `while there is a hole` code six times.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          ციკლის ამგვარი კონსტრუქცია 360 გრადუსით 10-ჯერ გამეორდება.

          **360 / 10 = ?**
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          თქვენ გაიმეორებთ ამ 360 გრადუსიან ციკლს 6-ჯერ.

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles2_authored_hint: []
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: "არ დაგავიწყდეთ, რომ შიდა ციკლის შემდეგ უნდა შეუხვიოთ.
          \n\nციკლში უნდა გაატაროთ 6 სამკუთხედი ისე, რომ ჯამში 360 გრადუსი მოიცვან.\n\n**360
          / 6 = ?**"
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: ყოველ კვადრატს აქვს 100 პიქსელის ტოლი გვერდი, რაც
          იმას ნიშნავს, რომ თქვენ მოგიწევთ 175 პიქსელით წინ გადაადგილება, სანამ მეორე
          კვადრატის ხატვას დაიწყებთ.
        2-3_Artist_Functions_1_b: სათვალის ხატვისას ერთმანეთის გადამკვეთი ხაზების
          დახატვა დაშვებულია.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          თქვენი პროგრამა უნდა:
          - იყენებდეს ფუნქციას
          - მოძრაობდეს წინ 100 + 75 პიქსელით
          - იყენებდეს ფუნქციას
      grade4_artist_functions2a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks,
          create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks,
          create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3b_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks,
          create a `draw hexagon` function and call that multiple times.
      grade4_artist_functionsChallenge0_authored_hint:
        grade4_artist_functionsChallenge0_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        grade4_artist_functionsChallenge0_b: After your first line of squares, you
          need to move the artist down and back before you start your second line
          of squares.
        grade4_artist_functionsChallenge0_c: You should move the artist back a different
          number of pixels for even lines than for odd ones.
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: ყოველ ექვსკუთხედს 40 პიქსელის ტოლი გვერდები აქვს.
        Course_4_SCF_1_b: ყველა ჰორიზონტალურ ხაზზში, თითოეულ ექვსკუთხედს შორის არის
          120 პიქსელიანი ნახტომი.
        Course_4_SCF_1_c: "სანამ ექვსკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          60 გრადუსით მარჯვნივ და გადახტეთ წინ 40 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ \n უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან
          320 პიქსელით."
        Course_4_SCF_1_d: "სანამ ექვსკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          60 გრადუსით მარჯვნივ და გადახტეთ წინ 40 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან 440
          პიქსელით. (120 პიქსელით უფრო შორს ვიდრე `გადაიწიეთ ქვემოთ/წინ` ფუნქცია. "
        Course_4_SCF_1_e: |-
          **Solution:**

          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: ყოველ ექვსკუთხედს 40 პიქსელის ტოლი გვერდები აქვს.
        Course_4_SCF_1_b: ყველა ჰორიზონტალურ ხაზზში, თითოეულ ექვსკუთხედს შორის არის
          120 პიქსელიანი ნახტომი.
        Course_4_SCF_1_c: "სანამ ექვსკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          60 გრადუსით მარჯვნივ და გადახტეთ წინ 40 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ \n უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან
          320 პიქსელით."
        Course_4_SCF_1_d: "სანამ ექვსკუთხედების მეორე მწკრივს დახატავთ, უნდა შეტრიალდეთ
          60 გრადუსით მარჯვნივ და გადახტეთ წინ 40 პიქსელით.\n\nროდესაც სწორ ვერტიკალურ
          ადგილას აღმოჩნდებით, ისევ უნდა შემოატრიალოთ მხატვარი და გადახტეთ უკან 440
          პიქსელით. (120 პიქსელით უფრო შორს ვიდრე `გადაიწიეთ ქვემოთ/წინ` ფუნქცია. "
        Course_4_SCF_1_e: |-
          **Solution:**

          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_stars0_authored_hint:
        grade4_artist_functions_stars0_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
      grade4_artist_functions_stars1_authored_hint:
        grade4_artist_functions_stars1_a: Try using a function!
      grade4_artist_functions_stars2_authored_hint:
        grade4_artist_functions_stars2_a: Don't give up!  Remember what you have been
          learning.
        grade4_artist_functions_stars2_b: Functions make it easy to call saved code
          at any time, not just from inside a loop!
      grade4_artist_functions_stars3_authored_hint:
        hint1: Don't give up!
      grade4_artist_functions_windows0_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll
          create a function for it in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops, where the inner
          loop makes the square and the outer loop rotates the square four times.
      grade4_artist_functions_windows2_authored_hint:
        grade4_artist_functions_windows2_a: Try creating your function first then
          adding in windows one at a time.
        grade4_artist_functions_windows2_b: You shouldn't need to add any extra repeat
          loops.  Just jump the artist 100 pixels forward for each top window, and
          150 pixels down to get the bottom windows.
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: "ექვსკუთხედის ნახევარს აქვს \"30-ის ტოლი სიგრძე\" და
          ბრუნავს მარჯვნივ **60 გრადუსით**.\n  "
        Course_4_Artist_11_b: 'სამკუთხედის 2/3-ს აქვს **80-ის ტოლი სიგრძე** და ბრუნავს
          მარჯვნივ **120 გრადუსით**. '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          ციკლის ამგვარი კონსტრუქცია 360 გრადუსით 10-ჯერ გამეორდება.

          **360 / 10 = ?**
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          თქვენ გაიმეორებთ ამ 360 გრადუსიან ციკლს 6-ჯერ.

          **360 / 6 = ?**
      grade4_artist_nested_loop_triangles2_authored_hint: []
      grade4_artist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Don't forget to make a turn after your inner loop.

          You'll be looping 6 triangles over 360 degrees.

          **6 x ? = 360**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_bee_conditionals_new1a_authored_hint:
        grade4_bee_conditionals_new1a_a: An `if` block will help you out in this puzzle.
      grade4_bee_conditionals_new2_authored_hint:
        grade4_bee_conditionals_new2_a: 'The flowers follow a rectangular path.  You
          can trace that rectangle using `while path ahead` even with a different
          number of squares per side. '
        grade4_bee_conditionals_new2_b: You can check every square for a flower using
          the `if` block, even if you already know there's not one there.
      grade4_bee_conditionals_new3b_authored_hint:
        grade4_bee_conditionals_new3b_a: An `if/else` statement could really help
          you out here.
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: |-
          **გახსოვდეთ:**ეს თავსატეხი ყოველ გაშვებაზე იცვლება.

          თქვენ დაგჭირდებათ პირობითი ბლოკის (`თუ` ან `თუ/სხვაგვარად`) გამოყენება ამ გამოწვევის დასაძლევად.
      grade4_bee_functions1_authored_hint:
        grade4_bee_functions1_a: There is more than one right answer to this puzzle.
      grade4_bee_functions10_authored_hint:
        grade4_bee_functions10_a: You can use the exact same function for this puzzle
          as you did in the last puzzle.  All you need to do is create a function
          that collects all of the nectar when you get to each flower.
      grade4_bee_functions2_authored_hint:
        grade4_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
      grade4_bee_functions3_authored_hint:
        grade4_bee_functions3_a: 'Your function for this puzzle only needs to collect
          nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
      grade4_bee_functions4_authored_hint:
        grade4_bee_functions4_a: Your function will travel down the side paths and
          return the bee back to the main road.  You don't need to add that part to
          your program.
      grade4_bee_functions6_authored_hint:
        grade4_bee_functions6_a: Edit the function so that it solves the puzzle without
          having to change the main program.
        grade4_bee_functions6_b: "Your function should make the bee: \n- turn\n- move
          forward\n- collect all of the nectar\n- turn around\n- move back to the
          main path\n- turn back to the direction that the bee started from"
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლოკი, შემდეგ შეამოწმეთ. დაამატეთ კიდევ რამდენიმე და ისევ შეამოწმეთ. ასეთი მეთოდით, თქვენ მალევე ამოხსნით თავსატეხს!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: |-
          თუ თავსატეხის ამოხსნა გერთულებათ, სცადეთ ააწყოთ თქვენი ფუნქცია ეტაპობრივად, პატარა ნაბიჯებით.

          დაამატეთ რამდენიმე ბლეკი, შემდეგ გამოსცადეთ. დაამატეთ კიდევ რამდენიმე და ისევ გამოსცადეთ. ასეთი მეთოდით თქვენ მალევე ამოხსნით თავსატეხს!
        2-3_Bee_Functions_8_b: |-
          არ დაგავიწყდეთ თქვენი კოდის აწყობა მწვანე ფუნქციის ბლოკის შიგნით.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        2-3_Bee_Functions_8_c: This function should turn the bee to head him down
          the path, collect the nectar, make the honey, then turn the bee around and
          bring him back.
      grade4_bee_functions9_authored_hint:
        grade4_bee_functions9_a: Your function will only need to collect nectar...
          but this time, you will need to use a `while` loop instead of a `repeat`
          loop.
        grade4_bee_functions9_b: Use `while nectar > 0` to make sure you get all of
          the nectar.
      grade4_bee_nestedLoops1_authored_hint:
        grade4_bee_nestedLoops1_a: If you don't understand how to use nested loops
          here, try writing out the instructions step by step on a piece of paper.  Circle
          the patterns that you see.
      grade4_bee_nestedLoops2_authored_hint:
        grade4_bee_nestedLoops2_a: You will need to repeat `get nectar` inside of
          another `repeat` that also has the `move forward` block inside of it.
        grade4_bee_nestedLoops2_b: You will need to use all three of the available
          `repeat` blocks to solve this puzzle.
        grade4_bee_nestedLoops2_c: |-
          Nest your blocks three deep, like this:

          - repeat 3
          - repeat 3
          - move forward
          - repeat 12
          - get nectar
          - turn right
      grade4_bee_nestedLoops2a_authored_hint:
        grade4_bee_nestedLoops2a_a: Try using nested `repeat` loops to solve this
          puzzle.
      grade4_bee_nestedLoops4_authored_hint:
        grade4_bee_nestedLoops4_a: Try building your code line by line and see if
          you can spot the places where a repeat will make the code shorter!
        grade4_bee_nestedLoops4_b: |-
          You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.

          Altogether, you should be using 3 loops.
      grade4_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops5_a: You will need 4 repeat blocks!
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: თუ თქვენ გამოიყენებთ ბლოკს, რომელიც `წინ 100 პიქსელით
          გადამაადგილებს`, მე ავტომატურად დავხატავ ხაზს.
        2-3_Artist_1_new_b: კუთხეები გაგიჭირდათ? გამოიყენეთ `შეტრიალდი 90 გრადუსით`
          ბლოკი.
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'ამ პატარა კუთხეების შესაქმნელად, თქვენ მოგიწევთ *უფრო მეტად*
          მობრუნება, ვიდრე ამას კვადრატის ხატვის დროს აკეთებდით.   '
        2-3_Artist_6_b: იქიდან გამომდინარე, რომ სწორი მიმართულებით უკვე ვიყურები,
          სამკუთხედის დასახატად ყველაზე მარტივი იქნება წინ მოძრაობის დაწყება, შემდეგ
          კი მარცხნივ მრავალჯერ შეტრიალება.
        2-3_Artist_6_c: სამკუთხედის ყოველი გვერდი იგივე სიგრძისაა, რაც კვადრატის გვერდი...
          100 პიქსელი!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: თქვენ დაგჭირდებათ ორი განსხვავებული `გამეორების` ციკლის
          გამოყენება ერთმანეთის მიყოლებით.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: საბოლოოდ თქვენს ციკლში 6 ბლოკი უნდა იყოს.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: საბოლოოდ თქვენს ციკლში ხუთი ბლოკი უნდა იყოს.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: ეს კოდი იყენებს ორ `for ციკლს`. პირველი
          ზრდადობით ითვლის 1-დან 8-მდე, ხოლო მეორე კლებადონით, 8-დან 1-მდე.
        Course_4_Artist_Binary_Free_Play_2b_b: თითოეულ `for ციკლის` ბლოკს აქვს სამი
          გამეორება. პირველი გამეორება უკიდურეს მარცხენა მხარეში განათავსებს 1-ების
          წყებას, მეორე გამეორება შუაში ათავსებს 0-ების წყებას, ხოლო მესამე 1-ების
          წყებას ათავსებს მარჯვენა მხარეს.
        Course_4_Artist_Binary_Free_Play_2b_c: თითოეული გამეორების ბლოკში თქვენ დაგჭირდებათ
          `მრიცხველი` 1-ებისათვის და `16-(2 x მრიცხველი)` 0-ებისათვის.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solution:**
          ![solution](https://images.code.org/866a92e042a546de3afcf462a8b5c695-image-1444438735003.58.28.png)
      grade5_artist_for_loops1_authored_hint:
        grade5_artist_for_loops1_a: |-
          If you use this `for` loop, it will run just like a `repeat 3 times` loop.

          ![](https://images.code.org/585d2e24f3021ac2561aec6e96dde430-image-1475906135993.54.11.png)
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: უდიდეს მრავალკუთხედს აქვს 19 გვერდი.
        Course_4_Artist_For_Loops_Challenge_b: ყველა პოლიგონი დაუსრულებელია, თითოულ
          მათგანს იმაზე ერთი გვერდით ნაკლები აქვს, ვიდრე უნდა ჰქონდეს.
      grade5_artist_for_loops1b_authored_hint:
        grade5_artist_for_loops1b_a: |-
          Can you draw something like this:

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      grade5_artist_for_loops2_authored_hint:
        grade5_artist_for_loops2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.

          ![](https://images.code.org/5e9465321a0b7a4d791848a79f3e6715-image-1475908305872.31.26.png)
      grade5_artist_for_loops3_authored_hint:
        Course_4_Artist_For_Loops_3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.

          ![](https://images.code.org/15e87fc7fe408cbf1b63e0e8e69b7ffe-image-1475908502078.31.26.png)
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "**რა არის უმცირესი რიცხვი, რომელიც დაგჭირდებათ?
          \nრა არის უდიდესი რიცხვი?\nრამდენად დიდია ზრდა ყოველ ჯერზე?**\n\nეს არის
          კითხვები, რომლებზეც პასუხის გაცემა გჭირდებათ იმისათვის, რომ  `for` ციკლში
          გამოტოვებული ადგილები შეავსოთ."
      grade5_artist_for_loops5_authored_hint:
        grade5_artist_for_loops5_a: You don't need the traditional repeat loop when
          making this spiral!
      grade5_artist_for_loops7_authored_hint:
        grade5_artist_for_loops7_a: The pen is thinner in this puzzle. You will need
          to set it to `1` before you start.
        grade5_artist_for_loops7_b: Notice that this spiral turns right instead of
          left!
      grade5_artist_for_loops7a_authored_hint: []
      grade5_artist_for_loops7b_authored_hint: []
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "მობრუნების კუთხე შეიცვლება თითოეულ ფიგურასთან!
          \ \nიმისათვის, რომ გაიგოთ კუთხის გრადუსული ზომა, გამოიყენეთ მათემატიკური
          ბლოკი, სადაც შეიყვანთ შემდეგ არითმეტიკულ გამოსახულებას: 360 გაყოფილი ფიგურის
          გვერდების რაოდენობაზე. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: 'თუ 360-ს ფიგურის გვერდების რაოდენობაზე გაყოფთ,
          მიიღებთ იმ რიცხვს, რამდენი გრადუსითაც უნდა შემობრუნდეთ. '
        Course_4_Artist_For_Loops_11a_b: 'ყოველ ჯერზე, მოგიწევთ წინ მოძრაობა მანძილით,
          რომელიც უდრის 10-ჯერ გვერდების რაოდენობას. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: ამ კოდის საფუძველი იგივეა, რაც წინა სავარჯიშოს
          ამონახსნი...ცოტაოდენი ცვლილებებით.
        Course_4_Artist_For_Loops_inspire_b: მოსინჯეთ `for`ციკლი, რომელიც 3-დან 10-მდე
          იზრდება, 1-ის ტოლი ბიჯით.
        Course_4_Artist_For_Loops_inspire_c: "`for`ციკლის შიგნით თითოეული ციკლისათვის
          არსებობს 2 ტიპის გამეორება, მაგრამ მე-2 ტიპის გამეორება უხვევს საწინააღმდეგო
          მიმართულებით."
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  ![Solution](https://images.code.org/d619892fc17ff491c201d86bb917e523-image-1441005190828.12.30.png) "
      grade5_artist_for_loopsfreeplay12_authored_hint:
        grade5_artist_for_loopsfreeplay12_a: The image in the drawing was made using
          a counter for the `set alpha` and `counter` / 10 as a brush size.
        grade5_artist_for_loopsfreeplay12_b: The image in the drawing uses a turn
          of 61 degrees.
        grade5_artist_for_loopsfreeplay12_c: |-
          Want to know how the sample image was done?

          ![](https://images.code.org/fdc5d6c15b357ba9763ac9ea914967a9-image-1475911612774.23.51.png)
      grade5_artist_functionparameters10_authored_hint:
        brush_width: მანამ სანამ რამეს გავაკეთებთ, ჯაგრისის სიგანე 1-ს გავუტოლოთ და
          ლურჯი ფერი მივცეთ.
        double_loop: 'სცადეთ "გამეორების" ციკლის შიგნით მოათავსოთ კოდის ბლოკი: "for
          ციკლი".'
        specifics: |-
          კენტი რაოდენობის გვერდების მქონე ფიგურის დასახატად, 6 "ყვავილის ფურცელიდან" თითოეულისათვის`for ციკლი` 3-დან 17-მდე-ჯერ უნდა გავუშვათ.

          ბლოკი `განსაზღვრე ალფა` იყენებს გაყოფას მთვლელის ზრდის შესაბამისად ფერის გასამკრთალებლად.
        after: როდესაც ყვავილის თითოეულ ფურცელზე მუშაობას მორჩებით, მანამ სანამ 60
          გრადუსით მოუხვევთ, დარწმუნდით რომ ჯერ "წინ გადაადგილდებით" 20 პიქსელით.
        solution: |-
          **Solution**

          ![](https://images.code.org/7e9f4be39d45726d537fe8e6e9147986-image-1456445254361.png)
      grade5_artist_functionparameters8_authored_hint:
        NEW_Course_4_Artist_Params_13_a: The length of sides for each shape is 7 times
          the number of sides it has.
      grade5_artist_functionparameters9_authored_hint:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times
          to figure out how the function works with different parameters.
        grade5_artist_functionparameters9_b: You don't need to add any `move` or `turn`
          blocks to finish this code.
      grade5_artist_functionparameters9a_authored_hint:
        grade5_artist_functionparameters9a_a: 'Did the code get so scrambled up that
          it''s no longer recognizable?  Try clicking the "Start over" button in the
          upper righthand corner. '
        grade5_artist_functionparameters9a_b: Your new `min` variable should go in
          the first slot in your `for` loop, inside the function.
      grade5_artist_functionparameters9b_authored_hint:
        grade5_artist_functionparameters9b_a: If your function is correct, you shouldn't
          need to change it for this puzzle.
        grade5_artist_functionparameters9b_b: The only thing you should need to do
          between function calls is change the color of the line.
      grade5_artist_functionparameters_6_authored_hint:
        grade5_artist_functionparameters_6_a: Use a `for` loop to get the code as
          smooth as you can.
        grade5_artist_functionparameters_6_b: Remember to **add** a parameter.  Don't
          remove the one that is already there!
      grade5_artist_parameters_squares1a_authored_hint:
        grade5_artist_parameters_squares1a_a: Remember, you need to turn 90 degrees
          to draw a square.
        grade5_artist_parameters_squares1a_b: You only need to repeat as many times
          as the number of sides in a square.
      grade5_artist_parameters_squares2_authored_hint:
        grade5_artist_parameters_squares2_a: This gets easier if you put it all in
          a `for` loop.
        grade5_artist_parameters_squares2_b: |-
          Be sure to turn 90 degrees between each square!

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      grade5_artist_parameters_squares2a_authored_hint:
        grade5_artist_parameters_squares2a_a: You need to click the "edit" button
          to get into the function.  Once you're there, add a parameter called `length`
          and use it inside your `move forward` block!
        grade5_artist_parameters_squares2a_b: When calling your function, use a `for
          loop` for the best possible code!
      grade5_artist_parameters_stars1_authored_hint:
        hint1: Don't give up!
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: თუ თქვენ გაყოფთ საწყის სიგრძეს გვერდების რაოდენობაზე,
          ყოველი გვერდის სიგრძე შემცირდება, ხოლო გვერდების რაოდენობა გაიზრდება.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: როდესაც დაასრულებთ ერთ კვადრატს, სცადეთ წინ გადახტომა
          მისი სიგრძის ნახევრით, სანამ მობრუნდებით და შემდეგის ხატვას დაიწყებთ.
        Course_4_Artist_Inspire_b: თითოეული კვადრატი და ნახტომი მეორდება 4-ჯერ (ნახტომებს
          შორის გამოიყენეთ მარცხნივ მოხვევის ბლოკი), იმისათვის რომ სათამაშო ქარის
          ბზრიალას მსგავსი სრული ერთეული შევქმნათ.
        Course_4_Artist_Inspire_c: 'თითოეული სათამაშო ქარის ბზრიალა მეორდება 4-ჯერ,
          ის ბრუნავს მარჯვნივ გრადუსული ზომით: **360/გვერდების რაოდენობა**.'
        Course_4_Artist_Inspire_d: |-
          **Solution:**
          ![Blocks for solution](https://images.code.org/1865aaf1b4a8ba84a5e8a7408401092d-image-1440060930335.43.39.png)
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: თქვენ დაგჭირდებათ ორი გამეორების ციკლი (ერთი მეორეს
          შიგნით მოთავსებული). ორივე მათგანი უნდა მეორდებოდეს იმდენჯერ, რამდენიც `გვერდი`
          გვაქვს.
        Course_4_Artist_Vars_13_b: |-
          გამეორების შიდა ციკლი ხატავს რვაკუთხედს (მარცხნივ მობრუნებით).

          ამის შემდეგ წინ გადაადგილება და მარჯვნივ მობრუნება მხოლოდ გარე ციკლში დაგჭირდებათ.
        Course_4_Artist_Vars_13_c: იმისათვის, რომ ფიგურა იგივე ზომის იყოს, როდესაც
          გვერდების რაოდენობა შეიცვლება, გამოიყენეთ მათემატიკის ბლოკი, რათა გაყოთ
          პიქსელებში გამოსახული სიგრძე გვერდების რაოდენობაზე.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: წესიერი მრავალკუთხედის დასახატად ყოველ ჯერზე შეტრიალდით
          **360/გვერდების რაოდენობა**-ჯერ.
      grade5_artist_variables_triangles1_authored_hint:
        grade5_artist_variables_triangles1_a: იმისათვის, რომ შექმნათ 60 გრადუსის ტოლი
          კუთხე ამ სამკუთხედში, არ დაგავიწყდეთ მხატვრის 120 გრადუსით მობრუნება.
        grade5_artist_variables_triangles1_b: იმისათვის, რომ კოდი შეამოკლოთ, გამოიყენეთ
          `გამეორების` ციკლები.
        grade5_artist_variables_triangles1_c: თქვენს ციკლში მოგიწევთ წინ გადაადგილება
          50 პიქსელით, შემდეგ კი მარცხნივ მობრუნება 120 გრადუსით.
      grade5_artist_variables_triangles1_2018_authored_hint:
        grade5_artist_variables_triangles1_a: იმისათვის, რომ შექმნათ 60 გრადუსის ტოლი
          კუთხე ამ სამკუთხედში, არ დაგავიწყდეთ მხატვრის 120 გრადუსით მობრუნება.
        grade5_artist_variables_triangles1_b: იმისათვის, რომ კოდი შეამოკლოთ, გამოიყენეთ
          `გამეორების` ციკლები.
        grade5_artist_variables_triangles1_c: თქვენს ციკლში მოგიწევთ წინ გადაადგილება
          50 პიქსელით, შემდეგ კი მარცხნივ მობრუნება 120 გრადუსით.
      grade5_bee_for_loops10_authored_hint:
        grade5_bee_for_loops10_a: "How much less is 12 than 15?  \nHow much less is
          9 than 12?\n\nDo you see a pattern?"
      grade5_bee_for_loops11_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number
          of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will
          use a math block.
      grade5_bee_for_loops3_authored_hint:
        grade5_bee_for_loops3_a: 'Use the `counter` variable inside the `repeat` loop
          where nectar is gathered to solve this puzzle. '
        grade5_bee_for_loops3_b: Your `for` loop will need to count from 1 to 5 with
          an increment of 1.
      grade5_bee_for_loops4_authored_hint:
        grade5_bee_for_loops4_a: Use a `for` loop that goes from 1 to 7 with an increment
          of 1 to solve this puzzle.
        grade5_bee_for_loops4_b: Make sure to use the `counter` variable inside your
          nested `repeat` loop to get enough nectar!
      grade5_bee_for_loops5_authored_hint:
        grade5_bee_for_loops5_a: This time, your `move forward` block and your `get
          nectar` block will need to be in separate `repeat` loops.
      grade5_bee_for_loops6_authored_hint:
        grade5_bee_for_loops6_a: Don't forget to use a `counter` variable inside your
          `repeat` loop.
      grade5_bee_for_loops7_authored_hint:
        grade5_bee_for_loops7_a: Your `for` loop will need to count from 1 to 7 by
          2.
      grade5_bee_for_loops8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "If your loop is counting up, the increment
          is added to your counter variable each time through. \n\nWhat do you need
          to add to each number to get the next amount of nectar?"
      grade5_bee_for_loops9_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.

          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        NEW_Course_4_Bee_For_Loops_7_b: 'Remember: If your loop is counting up, the
          increment is added to your `counter` variable each time through.'
      grade5_bee_parameters_new1_authored_hint:
        grade5_bee_parameters_new1_a: Use `if` statements to make sure you're only
          getting nectar from a flower.
      grade5_bee_parameters_new2_authored_hint:
        grade5_bee_parameters_new2_a: "To turn this into a function, simply drag the
          code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        grade5_bee_parameters_new2_b: Don't forget to connect the `rowOfNectar` block
          to `when run` to call the function that you just built.
      grade5_bee_parameters_new3_authored_hint:
        grade5_bee_parameters_new3_a: Your function will run no matter which direction
          you're facing.
      grade5_bee_parameters_new4_authored_hint:
        grade5_bee_parameters_new4_a: You will need to add a parameter and use the
          resulting variable in your loop.
      grade5_bee_parameters_new5_authored_hint:
        grade5_bee_parameters_new5_a: Count the number of spaces you need to check
          in each stretch and use those numbers as your parameters to the function
          call.
      grade5_bee_parameters_new6_authored_hint:
        grade5_bee_parameters_new6_a: Which block automatically increments a variable
          that you could use as a parameter?
      grade5_bee_parameters_new7_authored_hint:
        grade5_bee_parameters_new7_a: You don't need a second parameter for this function,
          only a second `if` statement.
      grade5_bee_parameters_new8a_authored_hint:
        grade5_bee_parameters_new8a_a: This spiral can be simplified with a `for`
          loop.
      grade5_bee_parameters_new9a_authored_hint:
        grade5_bee_parameters_new9a_a: A `for` loop can help you with this stair step
          pattern, too!
        grade5_bee_parameters_new9a_b: For each stair, you'll need to call the function
          once, turn right, call the function again, then turn left.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: დარწმუნდით, რომ `dog_speed`-ზე მინიჭებული რიცხვი
          აღემატება `cat_speed`-ზე მინიჭებულს.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: Try writing down the steps on paper to find a solution!
      gradek_adventurer_loops3_authored_hint:
        gradek_adventurer_loops3_a: To change how far the adventurer goes, change
          the number of times that the loop runs.
        gradek_adventurer_loops3_b: Don't forget that the adventurer needs to walk
          down and collect gold after she finishes the `repeat` loop!
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: If you can't figure out the answer right away,
          try using a piece of paper to figure out what arrows you will need and look
          for a pattern.
      gradek_adventurer_loops4a_authored_hint:
        gradek_adventurer_loops4a_a: Can't figure out what's wrong? Try running the
          code to see what happens.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: If you can't figure out what comes next, try running
          the code to see where Laurel ends up.
      gradek_adventurer_loops6_authored_hint:
        gradek_adventurer_loops6_a: If you are having trouble figuring this puzzle
          out, try writing the moves down on a piece of paper and look for a pattern.
      gradek_adventurer_loops7_challenge_authored_hint:
        gradek_adventurer_loops7_challenge_a: Does the code feel really long?  Try
          putting two of your `repeat` loops inside of another loop to make it much
          shorter!
      gradek_adventurer_loops8_authored_hint:
        gradek_adventurer_loops8_a: If you can't figure out where to put the loops,
          try writing the code out step-by-step and look for a pattern.
      gradek_adventurer_loops9_authored_hint:
        gradek_adventurer_loops9_a: If you can't figure out where to put the loops,
          try writing your code step-by-step and look for patterns.
      gradek_artist_loops1_authored_hint:
        gradek_artist_loops1_a: Can't figure out how to draw a line?  Start attaching
          blocks to the `when run` block to see what happens.
      gradek_artist_loops2_authored_hint:
        gradek_artist_loops2_a: Is something not quite right?  Use the "Step" button
          to see where things go wrong.
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: თუ გსურთ ამ ციკლის 4-ზე მეტჯერ გამეორება, შეგიძლიათ შეცვალოთ
          ბლოკის თავში განლაგებული რიცხვი.
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: სცადეთ და გამოიყენეთ თქვენი ცოდნა გამეორების ბლოკების შესახებ
          ამ თავსატეხის ამოსახსნელად!
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: Can't figure out how to make the hill?  Try playing
          with the blocks a bit to see what each one draws.
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Try running the code to see what has been written
          for you.
        gradek_artist_loops7_b: How would you loop the code that has been given to
          you?
        gradek_artist_loops7_c: "What does the code do?  \nWhat is it supposed to
          do?  \nWhat does that tell you?"
      gradek_artist_loops8_authored_hint:
        gradek_artist_loops8_a: 'You don''t have to delete everything!  Some of the
          code is good. Use it to build the rest of the stairs. '
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: გამოიყენეთ ახტომის ბლოკი, ხაზის დახატვის გარეშე, წინ გადასაადგილებლად.
      gradek_artist_loopsA_authored_hint:
        artistLoopsKB_a: There should be 2 blocks inside of your loop to solve this
          puzzle.
      gradek_artist_loopsFP_authored_hint: []
      gradek_playlab_events1a_authored_hint:
        gradek_playlab_events1a_a: Attach the `move up` block to the `when click`
          event so that the cat moves up when the "up" button is pressed.
      gradek_playlab_events1c_authored_hint:
        gradek_playlab_events1c_a: "Here is the block you should connect to the `when
          run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      gradek_playlab_events2c_authored_hint:
        gradek_playlab_events2c_a: drag this block out ![](https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png)
          and connect it to ![](https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png)
      gradek_playlab_events3c_authored_hint:
        gradek_playlab_events3c_a: |-
          Here is the event block that you will need to get Jorge to move right:

          ![](https://images.code.org/cfc4b696b1ad5762ff40c1c8a17a194d-image-1478141370249.png)
        gradek_playlab_events3c_b: |-
          Here is the block you should connect to the `when right` event:

          ![](https://images.code.org/e5c559cc1deef643c8b997d17ecb78e3-image-1478141726783.png)
      gradek_playlab_events4c_authored_hint:
        gradek_playlab_events4c_a: "Here are the event blocks that you will need to
          use to move Jorge up and down:\n\n![](https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png)\nand
          \n![](https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png)"
      gradek_playlab_events5c_authored_hint:
        gradek_playlab_events5c_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:

          ![](https://images.code.org/6e3a654378643fd0590307ec3a0e429c-image-1478140058859.png)
        gradek_playlab_events5c_b: |-
          Here is the block you would use to change the background:

          ![](https://images.code.org/3f6d7a642b37c3abffe7b0de062ea076-image-1478140261440.png)
        gradek_playlab_events5c_c: |-
          Here is the block you would use to play a random sound:

          ![](https://images.code.org/81a8ef4f64023039438199fef67bb56b-image-1478140125332.png)
      gradek_playlab_eventsA_authored_hint:
        gradek_playlab_eventsA_a: |-
          If this seems like too much to do, try breaking it down into steps:

          1)  Have the actor change to a random size on click.
          2) Play a random sound when you click the actor.

          Now, make sure both of those actions are attached underneath the same event!
      harvester_Kahoot_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step
          by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: გამოიყენეთ `გამეორება, სანამ` ბლოკი გოგრასთან
          მოსახვედრად!
      harvey_snowflake_artist1_authored_hint: []
      harvey_snowflake_artist2_authored_hint: []
      harvey_tictactoe_authored_hint:
        harvey_tictactoe: თქვენ შეგიძლიათ `ახტომის` ბლოკების გამოყენება სხვა ადგილებზე
          მოსახვედრად.
      iceAgeLoopsforVideo_authored_hint: []
      iceage_click_hello_authored_hint:
        iceage_click_hello_a: ამ თავსატეხის ამოსხსნელად, დაამატეთ ერთი ან მეტი `1
          მსახიობო თქვი` ბლოკები `როცა დააწკაპებთ` მოვლენას.
      iceage_click_hello_2018_authored_hint:
        iceage_click_hello_a: ამ თავსატეხის ამოსხსნელად, დაამატეთ ერთი ან მეტი `1
          მსახიობო თქვი` ბლოკები `როცა დააწკაპებთ` მოვლენას.
      iceage_free_play_authored_hint:
        iceage_free_play_a: 'შეგიძლიათ მოუწყოთ სიდს და მენის ყინულის კრისტალებით ბრძოლა?  '
        iceage_free_play_b: დააჭერინეთ ბებოს დიეგო. დაასრულეთ თამაში, თუ ის დაიჭერს
          მას.
        iceage_free_play_c: შეგიძლიათ გააკეთოთ ისე, რომ სიდმა დიეგოს ფიფქები ესროლოს,
          ხოლო დიეგო გაიზარდოს ყოველი ფიფქის მოხვედრისას? დაასრულეთ თამაში გამარჯვებით,
          თუ დიეგოს მოხვდება 5 ფიფქი.
      iceage_free_play_2018_authored_hint:
        iceage_free_play_a: 'შეგიძლიათ მოუწყოთ სიდს და მენის ყინულის კრისტალებით ბრძოლა?  '
        iceage_free_play_b: დააჭერინეთ ბებოს დიეგო. დაასრულეთ თამაში, თუ ის დაიჭერს
          მას.
        iceage_free_play_c: შეგიძლიათ გააკეთოთ ისე, რომ სიდმა დიეგოს ფიფქები ესროლოს,
          ხოლო დიეგო გაიზარდოს ყოველი ფიფქის მოხვედრისას? დაასრულეთ თამაში გამარჯვებით,
          თუ დიეგოს მოხვდება 5 ფიფქი.
      iceage_free_playcourseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'შეგიძლიათ მოუწყოთ სიდს და მენის ყინულის კრისტალებით ბრძოლა?  '
        iceage_free_play_b: დააჭერინეთ ბებოს დიეგო. დაასრულეთ თამაში, თუ ის დაიჭერს
          მას.
        iceage_free_play_c: შეგიძლიათ გააკეთოთ ისე, რომ სიდმა დიეგოს ფიფქები ესროლოს,
          ხოლო დიეგო გაიზარდოს ყოველი ფიფქის მოხვედრისას? დაასრულეთ თამაში გამარჯვებით,
          თუ დიეგოს მოხვდება 5 ფიფქი.
      iceage_hello1_authored_hint:
        iceage_hello1_a: ამ თავსატეხის ამოსახსნელად, თქვენ მხოლოდ ერთი ბლოკის დამატება
          გჭირდებათ. გადმოათრიეთ `თქმნის` ბლოკი პანელიდან და დაუკავშირეთ ის `გაშვებისას`
          მოვლენის ბლოკს, რომელიც უკვე არის სამუშაო სივრცეში. შემდეგ ჩაბეჭდეთ შიგნით
          "გამარჯობა!".
      iceage_hello1_2018_authored_hint:
        iceage_hello1_a: ამ თავსატეხის ამოსახსნელად, თქვენ მხოლოდ ერთი ბლოკის დამატება
          გჭირდებათ. გადმოათრიეთ `თქმნის` ბლოკი პანელიდან და დაუკავშირეთ ის `გაშვებისას`
          მოვლენის ბლოკს, რომელიც უკვე არის სამუშაო სივრცეში. შემდეგ ჩაბეჭდეთ შიგნით
          "გამარჯობა!".
      iceage_hello2_authored_hint:
        iceage_hello2_a: 'ამ თავსატეხის ამოსახსნელად თქვენ მოგიწევთ ათქმევინოთ სიდს
          რამე `1-ლი მსახიობი ამბობს` ბლოკით. თქვენ ასევე მოგიწევთ ათქმევინოთ მენის
          რამე `მე-2 მსახიობი ამბობს` ბლოკის საშუალებით. '
      iceage_hello2_2018_authored_hint:
        iceage_hello2_a: 'ამ თავსატეხის ამოსახსნელად თქვენ მოგიწევთ ათქმევინოთ სიდს
          რამე `1-ლი მსახიობი ამბობს` ბლოკით. თქვენ ასევე მოგიწევთ ათქმევინოთ მენის
          რამე `მე-2 მსახიობი ამბობს` ბლოკის საშუალებით. '
      iceage_move_events_authored_hint:
        iceage_move_events_a: 'ყოველი `როდესაც___ისარი` მოვლენა საჭიროებს განსხვავებულ
          `ამოძრავე მსახიობი 1` ბრძანებას თავსატეხის ამოსახსნელად. '
      iceage_move_events_2018_authored_hint:
        iceage_move_events_a: 'ყოველი `როდესაც___ისარი` მოვლენა საჭიროებს განსხვავებულ
          `ამოძრავე მსახიობი 1` ბრძანებას თავსატეხის ამოსახსნელად. '
      iceage_move_to_actor_authored_hint:
        iceage_move_to_actor_a: ამ თავსატეხის ამოსახსნელად, თქვენ შეგიძლიათ ან ამოძრავოთ
          დიეგო ქვემოთ 200 პიქსელით, ან ამოძრავოთ მენი ზემოთ 200 პიქსელით.
        iceage_move_to_actor_b: დააკავშირეთ `დაუკარი___ხმა` ბლოკი `როდესაც მსახიობი
          1 შეეხება მსახიობ 2-ს` მოვლენას ამ გამოწვევის დასასრულებად.
      iceage_move_to_actor_2018_authored_hint:
        iceage_move_to_actor_a: ამ თავსატეხის ამოსახსნელად, თქვენ შეგიძლიათ ან ამოძრავოთ
          დიეგო ქვემოთ 200 პიქსელით, ან ამოძრავოთ მენი ზემოთ 200 პიქსელით.
        iceage_move_to_actor_b: დააკავშირეთ `დაუკარი___ხმა` ბლოკი `როდესაც მსახიობი
          1 შეეხება მსახიობ 2-ს` მოვლენას ამ გამოწვევის დასასრულებად.
      iceage_move_to_flag_authored_hint:
        iceage_hello3_a: გამოიყენეთ `ამოძრავე 1 მსახიობი მარჯვნივ 200 პიქსელით` ბლოკი,
          რათა ამოხსნათ ეს თავსატეხი.
      iceage_move_to_flag_2018_authored_hint:
        iceage_hello3_a: გამოიყენეთ `ამოძრავე 1 მსახიობი მარჯვნივ 200 პიქსელით` ბლოკი,
          რათა ამოხსნათ ეს თავსატეხი.
      iceage_repeat_authored_hint:
        iceage_repeat_a: გამოიყენეთ `ამოძრავე მსახიობი 1 მარცხნივ` და `ამოძრავე მსახიობი
          1 მარჯვნივ` ბლოკები ამ თავსატეხის ამოსახსნელად.
      iceage_repeat_2018_authored_hint:
        iceage_repeat_a: გამოიყენეთ `ამოძრავე მსახიობი 1 მარცხნივ` და `ამოძრავე მსახიობი
          1 მარჯვნივ` ბლოკები ამ თავსატეხის ამოსახსნელად.
      iceage_sound_and_points_authored_hint:
        iceage_sound_and_points_a: თქვენ მოგიწევთ ორი ბლოკის დამატება `როდესაც მსახიობი
          1 შეეხება მსახიობ 2-ს` მოვლენის ქვეშ.
        iceage_sound_and_points_b: 'თქვენ დაგჭირდებათ ორივე: `შეაგროვე ქულა` და `დაუკარი
          ___ ხმა` ბლოკები ამ დონის დასამთავრებლად.'
      iceage_sound_and_points_2018_authored_hint:
        iceage_sound_and_points_a: თქვენ მოგიწევთ ორი ბლოკის დამატება `როდესაც მსახიობი
          1 შეეხება მსახიობ 2-ს` მოვლენის ქვეშ.
        iceage_sound_and_points_b: 'თქვენ დაგჭირდებათ ორივე: `შეაგროვე ქულა` და `დაუკარი
          ___ ხმა` ბლოკები ამ დონის დასამთავრებლად.'
      iceage_throw_hearts_authored_hint:
        iceage_throw_hearts_a: როდის გინდათ ესროლოთ ბებოს გულები? ისრების ღილაკებზე
          დაჭერის დროს? სიდზე დაწკაპების დროს? ბებოზე დაწკაპების დროს? არჩევანი თქვენზეა!
        iceage_throw_hearts_b: იმისათვის, რომ ბებო გააბედნიეროთ გულის მიღების შემდეგ,
          თქვენ მოგიწევთ დააკავშიროთ `განსაზღვრე 2 მსახიობის ხასიათი, როგორც ბედნიერი`
          ბლოკი `როდესაც მეორე მსახიობი შეეხება ნივთს` მოვლენას.
      iceage_throw_hearts_2018_authored_hint:
        iceage_throw_hearts_a: როდის გინდათ ესროლოთ ბებოს გულები? ისრების ღილაკებზე
          დაჭერის დროს? სიდზე დაწკაპების დროს? ბებოზე დაწკაპების დროს? არჩევანი თქვენზეა!
        iceage_throw_hearts_b: იმისათვის, რომ ბებო გააბედნიეროთ გულის მიღების შემდეგ,
          თქვენ მოგიწევთ დააკავშიროთ `განსაზღვრე 2 მსახიობის ხასიათი, როგორც ბედნიერი`
          ბლოკი `როდესაც მეორე მსახიობი შეეხება ნივთს` მოვლენას.
      iceage_warn_embed_ice_age_authored_hint: []
      iceage_warn_ice_age_authored_hint:
        iceage_warn_ice_age_a: 'ამ თავსატეხის დასასრულებლად თქვენ მხოლოდ ორი ბლოკის
          დამატება დაგჭირდებათ. '
        iceage_warn_ice_age_b: დაამატეთ ორივე ახალი ბლოკი `გაშვებისას` მოვლენის შიგნით,
          რათა ისინი პროგრამის გაშვებისთანავე შესრულდნენ.
      iceage_warn_ice_age_2018_authored_hint:
        iceage_warn_ice_age_a: 'ამ თავსატეხის დასასრულებლად თქვენ მხოლოდ ორი ბლოკის
          დამატება დაგჭირდებათ. '
        iceage_warn_ice_age_b: დაამატეთ ორივე ახალი ბლოკი `გაშვებისას` მოვლენის შიგნით,
          რათა ისინი პროგრამის გაშვებისთანავე შესრულდნენ.
      k1stickerfreeplay_authored_hint: []
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: საბოლოოდ თქვენს ციკლში ხუთი ბლოკი უნდა იყოს.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: თუ "გამეორება"-ში მოსათავსებელ ბლოკებს მაშინვე ვერ ამჩნევთ,
          თითოეული მოძრაობისათვის დაწერეთ კოდი და სცადეთ იპოვოთ მსგავსებები.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: თუ არ იცით, რა უნდა შევიდეს ციკლში "გამეორება", სცადეთ
          ბლოკები სათითაოდ გამოწიოთ და ნახოთ, რამე მსგავსებას თუ ამჩნევთ.
        2-3_Bee_Loops_6_b: როცა მორჩებით, ციკლში 6 ბლოკი უნდა იყოს.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: თქვენ დაგჭირდებათ ორი განსხვავებული `გამეორების` ციკლის
          გამოყენება ერთმანეთის მიყოლებით.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: პირველი ქმედება არა გადაადგილება, არამედ მობრუნება იქნება.
        2-3_Bee_Loops_7_b: 'თუ თავიდან ციკლის სტრუქტურას კარგად ვერ ხედავთ, სცადეთ
          კოდი სრულად დაწეროთ და იპოვოთ მსგავსი ნაწილები.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: პირველი ქმედება არა გადაადგილება, არამედ მობრუნება იქნება.
        2-3_Bee_Loops_4A_b: პროგრამის ბოლო ნაწილის დასრულება შესაძლებელია მის ბოლოში,
          ციკლის გარეთ, კოდის დაწერით.
        2-3_Bee_Loops_4A_c: თუ ჯერ ციკლებს ვერ ამჩნევთ, სცადეთ გრძელი ამოხსნა დაწეროთ,
          შემდეგ კი დააკვირდეთ, რა შეიძლება გააერთიანოთ პროგრამის ბოლოში განთვასებულ
          ერთ `გამეორების` ციკლში.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: საბოლოოდ თქვენს ციკლში ოთხი ბლოკი უნდა იყოს.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: საბოლოოდ თქვენს ციკლში 6 ბლოკი უნდა იყოს.
      playLabDebugVideo1_authored_hint:
        courseA_playLab_events2_a: "Here is the block you should connect to the `when
          run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      sample3_authored_hint:
        sample3_a: |-
          Try writing the code once and looping it seven times:

          ![](https://images.code.org/2a116e75e31ee3a8a8683349c9460286-image-1464307689813.gif)
      sample5_authored_hint:
        sample5_a: Did you know that you can put as many blocks inside of a repeat
          loop as you want to?
        sample5_b: |-
          The bee is looping these actions over and over again:
          - move forward
          - make honey
          - turn left
          - move forward
          - turn right
      sample6_authored_hint:
        sample6_a: Did you know that you can use more than one repeat loop in a puzzle?
        sample6_b: Sometimes repeat loops have lots of blocks inside, and sometimes
          they might only have one!
      sample7assessment_authored_hint: []
