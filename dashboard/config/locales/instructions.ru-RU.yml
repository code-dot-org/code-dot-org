"ru":
  data:
    instructions:
      2-3 Artist 1 new_instruction: "Привет, я художник. Если ты напишешь код, я смогу
        нарисовать почти все, что угодно. Используй несколько блоков, чтобы я рисовал
        по серым линиям на картинке. (Длина каждой линии — 100 пикселей)"
      2-3 Artist 11_instruction: "Сделай рамку для знака остановки, нарисовав восьмиугольник
        с 8 сторонами, 100 пикселей длиной каждая. На сколько градусов ты должен поворачивать?
        (Подсказка: Сколько будет 360 разделить на 8?) "
      2-3 Artist 12_instruction: "Задай блок «повторить несколько раз» таким образом,
        чтобы он нарисовал «круг» для завершения рисунка глаза. Если при каждом движении
        выполняется поворот на один градус направо, сколько раз нужно повторить движение,
        чтобы завершить круг? 180? 360? 500?"
      2-3 Artist 2 new_instruction: "Стена этого дома не достроена. Длина каждой стороны
        — 100, а длина недостроенной стены только 50. Закончи строительство стены. "
      2-3 Artist 2_instruction: "У этого дома одна стена закончена только наполовину.
        Высота каждой стены 100 пикселей, но высота незаконченной стены всего лишь
        50 пикселей. Дорисуйте стену. "
      2-3 Artist 3.4_instruction: "Блок «прыгнуть» перемещает художника без рисования
        линии. Нарисуй пунктирную линию, используя блоки «прыгнуть» и «нарисовать»."
      2-3 Artist 3_instruction: "Высота этой шляпы — 100 пикселей. Нарисуй шляпу на
        70 пикселей ниже."
      2-3 Artist 3new_instruction: "Высота красной шляпы — 100 пикселей. Закончи рисунок
        черной шляпы, которая на 70 пикселей короче. Ширина черной шляпы — 50 пикселей."
      2-3 Artist 4_instruction: "Помоги мне закончить дом для этого кота."
      2-3 Artist 5_instruction: "Замени этот код блоком «повторить несколько раз»,
        чтобы нарисовать такой же дом, используя только 3 блока."
      2-3 Artist 6_instruction: "Этому дому нужна крыша! Нарисуй треугольник.  Подсказка:
        все три стороны имеют одинаковую длину."
      2-3 Artist 7_instruction: "Закончи рисунок правой половины последнего окна.
        Ширина каждого квадрата оконной рамы — 25 пикселей."
      2-3 Artist 8_instruction: "Закончи комнаты для каждого из животных, разделив
        прямоугольник на 2 одинаковых по размеру квадрата. Ширина прямоугольника —
        200 пикселей, высота — 100 пикселей."
      2-3 Artist 9 NEW_instruction: "Закончи рисунок воздушного змея"
      2-3 Artist 9 REPLACEMENT_instruction: "Закончите рисование этих лестниц!"
      2-3 Artist 9_instruction: "Закончи рисунок воздушного змея"
      2-3 Artist Assessment 1_instruction: "Тест: Закончи рисунок последнего зуба
        шириной 25 пикселей и высотой 25 пикселей."
      2-3 Artist Debugging 1_instruction: "Эта шляпа имеет длину 50 точек. Сможешь
        исправить это?"
      2-3 Artist Debugging 10_instruction: "Джойстик моего игрового устройства слишком
        узкий. Подсказка: Расширь его на 10 пикселей."
      2-3 Artist Debugging 11_instruction: "Помоги мне закончить мою красивую снежинку.
        Сколько раз мне нужно использовать блок «повторить», чтобы закончить ее?"
      2-3 Artist Debugging 12_instruction: "Я должен добавить океанскую волну на этот
        рисунок.  Можешь мне помочь?"
      2-3 Artist Debugging 2_instruction: "Код для рисования трех усов, который ты
        видишь, неправильный. Подсказка: длина каждого уса должна быть 75 пикселей.
        Исправь код, чтобы нарисовать усы."
      2-3 Artist Debugging 3_instruction: "В моей лодке дыра! Можешь это исправить,
        изменив угол линии? Подсказка: величина последнего угла задана с ошибкой на
        15 градусов."
      2-3 Artist Debugging 4_instruction: "Что это мы пытаемся нарисовать? Закончи
        рисунок, соединяя точки с помощью подходящих линий и углов."
      2-3 Artist Debugging 5_instruction: "Код для рисования ноги и ступни, который
        ты видишь, неправильный. Подсказка: Ступня слишком длинная, возможно, нам
        надо удалить один шаг (это намеренная игра слов)"
      2-3 Artist Debugging 6_instruction: "Похоже, я сижу на стуле без одной ножки.
        Измени блоки, чтобы дорисовать ножку."
      2-3 Artist Debugging 7_instruction: "Похоже, что буква К в слове «код» нарисована
        задом наперед. Можешь нарисовать ее правильно?"
      2-3 Artist Debugging 8_instruction: "Моя вертушка не закончена. Сколько раз
        мне нужно повторить действие, чтобы закончить ее?"
      2-3 Artist Debugging 9_instruction: "Код для стебля неправильный. Подсказка:
        Величина угла задана с ошибкой в 60 градусов."
      2-3 Artist Debugging Assessment 1_instruction: "Эта форма слишком маленькая.
        Можешь сделать ее побольше? Подсказка: ее длина должна быть 75 пикселей с
        каждой стороны."
      2-3 Artist Free Play_instruction: "Свободная игра! Рисуй все, что тебе хочется."
      2-3 Artist Functions 1_instruction: "Привет. Моя — зомби-художник. Моя любит
        рисовать! Помоги мне нарисовать квадратные очки.  Подсказка: перемычка между
        стеклами на 25 пикселей короче, чем длина квадратов."
      2-3 Artist Functions 10_instruction: "Вот две функции, одна для рисования большой
        шестерни, а другая — шестерни поменьше. Используй их, чтобы нарисовать рисунок
        внутри машины!"
      2-3 Artist Functions 11.5_instruction: "Это та же функция «нарисовать шестиугольник».
        Что произойдет, если при каждом выполнении цикла поворачивать только на 60
        градусов?"
      2-3 Artist Functions 11_instruction: "Мы переименовали функцию «нарисовать квадрат»
        в «нарисовать шестиугольник», только она все еще рисует только квадраты! Можешь
        изменить функцию «нарисовать шестиугольник», чтобы она рисовала шестиугольник
        со сторонами 50 пикселей, и нарисовать рисунок с ее помощью?"
      2-3 Artist Functions 12 Mike_instruction: "Функции прекрасно подходят для того,
        чтобы рисовать сложные фигуры несколько раз. Можешь заполнить оставшуюся часть
        ящика для цветов с помощью функции «нарисовать цветок»? (Подсказка: цветы
        находятся на расстоянии 100 пикселей друг от друга)  "
      2-3 Artist Functions 12_instruction: "Функции прекрасно подходят для того, чтобы
        рисовать сложные фигуры несколько раз. Можешь заполнить оставшуюся часть ящика
        для цветов с помощью функции «нарисовать цветок»? (Подсказка: цветы находятся
        на расстоянии 100 пикселей друг от друга)  "
      2-3 Artist Functions 13_instruction: "Мы дали тебе четыре функции. Используй
        их внутри одного или нескольких циклов, как тебе хочется, чтобы рисовать рисунки,
        которыми ты можешь поделиться с друзьями. Нажми «Выполнить», чтобы увидеть
        пример."
      2-3 Artist Functions 2_instruction: "Функции позволяют создавать новые блоки!
        Мы переместили блоки для рисования квадрата внутрь функции «нарисовать квадрат».
        Можешь использовать функцию «нарисовать квадрат», чтобы нарисовать очки? Расстояние
        между квадратами — 75 пикселей."
      2-3 Artist Functions 3_instruction: "Измени длину стороны квадрата в функции
        «нарисовать квадрат», чтобы она была равна 115, и нарисуй очки большего размера.
        Теперь квадраты должны быть на расстоянии 45 пикселей друг от друга."
      2-3 Artist Functions 4_instruction: "Используй блок «повторить», чтобы нарисовать
        эти 3 квадрата."
      2-3 Artist Functions 7_instruction: "Используй функцию «нарисовать дом», чтобы
        нарисовать два дома с разными параметрами. (Подсказка: размер первого дома
        составляет 100 пикселей)."
      2-3 Artist Functions 9_instruction: "Это функция для рисования снежинки. Поэкспериментируй
        с ней, чтобы создать зимний пейзаж! Это свободная игра, и здесь не нужно решать
        головоломку. Развлекайся!"
      2-3 Artist Loops 1_instruction: "Можешь нарисовать шестиугольник со сторонами
        длиной 100 пикселей, чтобы закончить ячейку? Помни, это значит, что ты должен
        делать поворот только на 60 градусов!"
      2-3 Artist Loops 10_instruction: "Что произойдет с узором, если мы сделаем последний
        шаг вперед в два раза короче?"
      2-3 Artist Loops 11_instruction: "Теперь давай распространим *другой* цикл на
        все наше произведение!  Не забудь добавить угол в конце внешнего цикла."
      2-3 Artist Loops 2_instruction: "Теперь используйте блок повторить, чтобы сделать
        из клетки оболочку."
      2-3 Artist Loops 4_instruction: "Хочешь посмотреть, что произойдет, когда мы
        повторим эту фигуру несколько раз, используя цикл?"
      2-3 Artist Loops 5_instruction: "Теперь давай немного изменим цикл и посмотрим,
        как изменится наш рисунок."
      2-3 Artist Loops 6_instruction: "Добавь в цикл еще одно перемещение и один поворот
        и посмотри, как изменится твой узор."
      2-3 Artist Loops 7_instruction: "Мы можем использовать циклы для создания любых
        многоугольников.  Можешь создать ромб внутри этого шестиугольника?"
      2-3 Artist Loops 8_instruction: "Давай добавим оба элемента в цикл."
      2-3 Artist Loops 9_instruction: |
        Мы собираемся использовать цикл с теми же элементами, но теперь мы добавим расстояние между ними.
        Используй тот же код, что и раньше, но добавь шаг вперед в конце внешнего цикла.
      2-3 Artist Loops New 1_instruction: "Давай нарисуем голову этого робота! Можешь
        нарисовать квадрат со сторонами длиной 100 пикселей?"
      2-3 Artist Loops New 10_instruction: "Теперь соединим множество «V» вместе,
        рисуя с помощью цикла."
      2-3 Artist Loops New 11_instruction: "Восстановите код из последней головоломки,
        но на этот раз, добавьте поворот налево на 30 градусов внутри цикла. Теперь,
        повторите это 24 раза вместо 7."
      2-3 Artist Loops New 12_instruction: "Нарисуй ромб со сторонами 100 пикселей."
      2-3 Artist Loops New 13_instruction: "Теперь нарисуй ромб 3 раза, используя
        цикл."
      2-3 Artist Loops New 14_instruction: "Теперь давай нарисуем ромб 10 раз, каждый
        раз добавляя поворот на 90 градусов между двумя ромбами."
      2-3 Artist Loops New 15_instruction: "Нарисуй что-нибудь веселое."
      2-3 Artist Loops New 2_instruction: "Вот часть кода, который ты использовал,
        чтобы нарисовать квадрат. Что произойдет, если ты используешь блок «повторить»,
        который будет выполнять этот код 4 раза?"
      2-3 Artist Loops New 9_instruction: "Нарисуй просто «V» со сторонами длиной
        50 пикселей, чтобы закончить стрелку."
      2-3 Artist Match Hex Pic_instruction: "Соответствие:  помоги закончить шестиугольник."
      2-3 Artist Match Rho Pic_instruction: "Соответствие:  Допиши недостающий код."
      2-3 Artist Match Sq Pic_instruction: "Соответствие: Допиши недостающий код"
      2-3 Artist Match Tri pic_instruction: "Соответствие:  Впиши недостающий код."
      2-3 Artist Nested Loops 1_instruction: |
        Ранее ты использовал циклы для рисования фигур, но знаешь ли ты, что ты можешь поместить цикл внутрь другого цикла?
        Зацикли весь этот блок кода 3 раза, чтобы нарисовать узор.
      2-3 Artist Nested Loops 10_instruction: "Зацикли этот код 12 раз, чтобы завершить
        узор."
      2-3 Artist Nested Loops 11_instruction: "Зацикли этот код 4 раза, чтобы завершить
        узор, поворачивая на 90 градусов после каждого круга."
      2-3 Artist Nested Loops 12_instruction: "Зацикли этот код 12 раз, чтобы нарисовать
        круги."
      2-3 Artist Nested Loops 2_instruction: "Теперь зацикли треугольник 6 раз. После
        каждого треугольника тебе необходимо повернуть на 60 градусов, прежде чем
        рисовать следующий."
      2-3 Artist Nested Loops 3_instruction: "Тебе необходимо зациклить треугольник
        12 раз, чтобы нарисовать узор. Подели число градусов в круге (360) на число
        фигур, которые тебе нужно нарисовать (12), чтобы узнать, на сколько градусов
        нужно повернуть после рисования очередной фигуры."
      2-3 Artist Nested Loops 4_instruction: "Зацикли этот ромб 12 раз, чтобы нарисовать
        цветок. Подсказка: 12 ромбов — это как 12 треугольников, которые ты уже нарисовал;
        на сколько градусов тебе нужно повернуть после рисования очередной фигуры?"
      2-3 Artist Nested Loops 5_instruction: "Заполни окна здания с помощью вложенного
        цикла. Длина окон — 20 пикселей, расстояние между ними — 20 пикселей."
      2-3 Artist Nested Loops 6_instruction: "Над хвостом этого динозавра 8 шипов;
        длина каждого шипа составляет 30 пикселей. Зацикли треугольник 8 раз, но убедись,
        что будешь перемещаться вперед после каждого шага."
      2-3 Artist Nested Loops 7_instruction: "Зацикли треугольник 10 раз, чтобы нарисовать
        солнце. Тебе необходимо перемещаться и поворачивать после каждого треугольника.
        Ты можешь определить, на сколько градусов нужно поворачивать, разделив число
        градусов в круге на число фигур, образующих круг."
      2-3 Artist Nested Loops 8_instruction: "А теперь добавим немного зелени к нашей
        картинке. Пучки травы находятся на расстоянии 50 пикселей друг от друга."
      2-3 Artist Nested Loops 9_instruction: "Теперь заверши картинку, добавив цветок.
        Чтобы нарисовать цветок, зацикли ромб 12 раз."
      2-3 Artist Nested Loops Free Play_instruction: "Свободная игра. Нарисуй что-нибудь
        интересное с помощью вложенных циклов."
      2-3 Bee Conditionals 1_instruction: "Привет! Я пчела. Помоги мне добыть нектар
        из цветка."
      2-3 Bee Conditionals 10_instruction: "Фиолетовые цветы могут содержать 1 или
        0 порций нектара. Будь осторожен, не собирай нектар с фиолетовых цветов, его
        там нет."
      2-3 Bee Conditionals 11_instruction: "Собирай нектар с цветов, в которых он
        есть."
      2-3 Bee Conditionals 12_instruction: "Используй цикл,чтобы проверить и собрать
        нектар со всех цветов."
      2-3 Bee Conditionals 13_instruction: "Собери нектар и приготовь мед. Подсказка:
        что произойдет, если ты используешь условный оператор «если есть нектар» для
        красного цветка? Можешь выполнить эту задачу с помощью цикла?"
      2-3 Bee Conditionals 14_instruction: "Собери нектар и приготовь мед. Будь осторожен,
        не собирай нектар с фиолетовых цветов, его там нет."
      2-3 Bee Conditionals 15_instruction: "Собери нектар со всех четырех цветов."
      2-3 Bee Conditionals 2_instruction: "Привет, я пчела! Помоги мне собрать весь
        нектар с цветов. Используй цикл."
      2-3 Bee Conditionals 3_instruction: "Помоги мне собрать нектар со всех цветов
        и приготовить мед. Используй цикл."
      2-3 Bee Conditionals 4_instruction: "Помоги мне собрать нектар со всех цветов
        и приготовить весь мед."
      2-3 Bee Conditionals 5_instruction: "Фиолетовые цветы могут содержать 1 или
        0 порций нектара, но ты не знаешь, сколько именно! Будь осторожен, не собирай
        нектар с фиолетовых цветов, его там нет. Проверь, равно ли значение количества
        нектара 1, используя блок «если»."
      2-3 Bee Conditionals 6_instruction: "Проверь наличие нектара в этом цветке,
        используя блок «если»."
      2-3 Bee Conditionals 7_instruction: "Собери нектар со всех цветов, в которых
        он есть."
      2-3 Bee Conditionals 8_instruction: "На поле растут красные и фиолетовые цветы.
        Количество нектара в красных цветах известно, а количество в фиолетовых —
        неизвестно. Собери весь нектар."
      2-3 Bee Conditionals 9_instruction: "Собери весь нектар со всех цветков."
      2-3 Bee Conditionals Assessment 1_instruction: "Тест: Собери весь нектар. Будь
        осторожен, не собирай нектар с фиолетовых цветов, его там нет."
      2-3 Bee Debugging 1_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 10_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 2_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 3_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 4_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 5_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед.  Теперь ты можешь использовать
        кнопки «Выполнить» и «Пошаговое выполнение»."
      2-3 Bee Debugging 6_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар."
      2-3 Bee Debugging 7_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 8_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging 9_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Debugging Assessment 1_instruction: "Тест:  Эти блоки не дают мне покоя.
        Исправь ошибки, чтобы собрать весь нектар и приготовить весь мед."
      2-3 Bee Functions 1_instruction: "Функции — это блоки кода, выполняющие определенную
        задачу. Используй функцию «собрать 2 порции нектара», чтобы собрать нектар
        с каждого цветка."
      2-3 Bee Functions 10_instruction: "Фиолетовые цветы могут содержать 1 или 0
        порций нектара.  Создай функцию для сбора нектара только с фиолетовых цветов,
        в которых он есть."
      2-3 Bee Functions 2_instruction: "Функции — это блоки кода, выполняющие определенную
        задачу. Используй функцию «собрать 5 порций нектара», чтобы собрать 5 порций
        нектара сразу. Также убедись, что ты используешь циклы с оптимальным количеством
        блоков."
      2-3 Bee Functions 3_instruction: "Собери весь нектар со всех цветков."
      2-3 Bee Functions 4_instruction: "Функция «перемещаться и собирать нектар» позволяет
        пчеле поворачивать, собирать нектар и затем возвращаться в начало. Используй
        функцию, чтобы собрать весь нектар."
      2-3 Bee Functions 5_instruction: "Теперь цветы содержат больше нектара. Отредактируй
        заданную функцию, которая собирает 4 порции нектара, и используй ее для сбора
        всего нектара с цветов."
      2-3 Bee Functions 6_instruction: "Теперь используй ту же функцию для сбора нектара
        с трех цветов."
      2-3 Bee Functions 7_instruction: "Теперь цветы находятся дальше. Отредактируй
        заданную функцию и используй ее, чтобы собрать весь нектар с цветов."
      2-3 Bee Functions 8_instruction: "Создай свою функцию, с помощью которой можно
        собрать 7 порций нектара, переместиться вперед и приготовить 7 порций меда.
        Используй функцию, чтобы собрать нектар с каждого цветка и приготовить мед
        в каждой соте."
      2-3 Bee Functions 9_instruction: "Создай свою функцию, чтобы заставить пчелу
        переместиться вниз по дороге, собрать нектар, приготовить мед и вернуться
        в начало дороги."
      2-3 Bee Functions Assessment 1_instruction: "Тест: Используй заданную функцию,
        чтобы собрать нектар с каждого цветка."
      2-3 Bee Functions Assessment 2_instruction: "Тест: Создай функцию, чтобы приготовить
        3 порции меда одновременно."
      2-3 Bee Loops 1_instruction: "Каждый цветок содержит одну порцию нектара. Собери
        нектар со всех цветов."
      2-3 Bee Loops 10_instruction: "Можешь ли ты использовать цикл с предусловием
        внутри двух других циклов, чтобы собрать весь нектар?"
      2-3 Bee Loops 11_instruction: "Используй циклы с предусловием, чтобы собрать
        весь нектар с цветов на этом поле."
      2-3 Bee Loops 12_instruction: "Используй циклы с предусловием, чтобы собрать
        весь нектар с цветов на этом поле."
      2-3 Bee Loops 13_instruction: "Тест: Используй блок «повторить», чтобы собрать
        весь нектар!"
      2-3 Bee Loops 1A_instruction: "Привет, я пчела. Можешь помочь мне собрать нектар
        с этих цветов? "
      2-3 Bee Loops 2_instruction: "Используй цикл, чтобы собрать нектар и приготовить
        мед."
      2-3 Bee Loops 2A_instruction: "Можешь упростить решение этой задачи с помощью
        цикла?"
      2-3 Bee Loops 3_instruction: "Собери нектар с каждого цветка и приготовь мед
        в каждой соте."
      2-3 Bee Loops 3A_instruction: "Можешь использовать цикл для сбора всего нектара?"
      2-3 Bee Loops 3B_instruction: "Теперь используй новый блок «повторить», чтобы
        собрать весь нектар и приготовить весь мед."
      2-3 Bee Loops 4_instruction: "Используй цикл, аналогичный циклу из предыдущей
        головоломки, но добавь в него поворот."
      2-3 Bee Loops 4A_instruction: "Что произойдет, если ты зациклишь эту последовательность
        действий 3 раза? Не забудь приготовить мед в конце!"
      2-3 Bee Loops 5_instruction: "Используй цикл, чтобы спуститься вниз по ступенькам
        и собрать нектар."
      2-3 Bee Loops 6_instruction: "Используй цикл, чтобы собрать нектар с каждого
        цветка и приготовить мед в каждой соте."
      2-3 Bee Loops 7_instruction: "Помести эти блоки внутрь цикла, чтобы собрать
        нектар с каждого цветка."
      2-3 Bee Loops 8_instruction: "Эти фиолетовые цветы содержат неизвестное количество
        нектара. Используй цикл «пока есть нектар», чтобы собрать весь нектар. Этот
        цикл будет выполняться до тех пор, пока условие истинно, в данном случае пока
        количество нектара > 0."
      2-3 Bee Loops 9_instruction: "Цикл с предусловием может выполнять то же действие,
        что и оператор «если» в цикле. Добавь цикл с предусловием в этот код, чтобы
        выполнить то же задание."
      2-3 Bee Loops Assessment 1_instruction: "Оценка. Используй цикл с предусловием,
        чтобы собрать весь нектар с этого цветка."
      2-3 Maze 1_instruction: "Можешь помочь мне поймать непослушную свинью? Составь
        вместе несколько блоков «двигаться вперед» и нажми «Выполнить». "
      2-3 Maze 10_instruction: "Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)"
      2-3 Maze 11_instruction: "Доведи меня до цветка, я хочу есть! Сколько раз тебе
        нужно повторить блок?"
      2-3 Maze 12 (copy 1)_instruction: "Можешь заменить предыдущее решение только
        двумя блоками? (Подсказка: Создай цикл, используя блок «повторить несколько
        раз».)"
      2-3 Maze 12 (copy 2)_instruction: "Можешь заменить предыдущее решение только
        двумя блоками? (Подсказка: Создай цикл, используя блок «повторить несколько
        раз».)"
      2-3 Maze 12 (old)_instruction: "Доведи меня до свиньи, в этот раз используя
        блок «повторить несколько раз»!"
      2-3 Maze 12 - One Move Block_instruction: "Доберитесь до свиньи! Но на этот
        раз, вы можете использовать только один блок «вперед». Вы видите другие блоки,
        которые могут помочь вам?"
      2-3 Maze 12_instruction: "Можешь заменить эти пять блоков только двумя блоками?
        (Подсказка: Чтобы пройти этот уровень, тебе нужно создать цикл, используя
        блок «повторить».)"
      2-3 Maze 13 (old)_instruction: "Доведи меня до свиньи, в этот раз используя
        блоки «повторять, пока не»!"
      2-3 Maze 13_instruction: |
        Доведи меня до свиньи, используя только два блока.
        (Подсказка: Чтобы пройти этот уровень, ты должен использовать блок «повторить»)
      2-3 Maze 14 (old)_instruction: "Доведи меня до свиньи, используя блок «повторять,
        пока не»!"
      2-3 Maze 14_instruction: "Доведи меня до подсолнуха! (Где же этот блок «повторить
        несколько раз», когда он так нужен?)"
      2-3 Maze 15 (old)_instruction: "Доведи меня до свиньи, используя блок «повторять,
        пока не»!"
      2-3 Maze 15_instruction: "Используй два цикла «повторить», чтобы добраться до
        свиньи, используя как можно меньше блоков."
      2-3 Maze 16 (old)_instruction: "Доведи меня до свиньи, используя блок «повторять,
        пока не»!"
      2-3 Maze 16 before_instruction: "Доведи меня до свиньи."
      2-3 Maze 16_instruction: "Доведи меня до подсолнуха. Зацикли последовательность
        действий!"
      2-3 Maze 2_instruction: "Эта свинья меня сильно раздражает. Помоги мне до нее
        добраться!"
      2-3 Maze 3_instruction: "Наметь путь и проведи меня к глупой свинье. Остерегайся
        взрывчатки, не то перья полетят!"
      2-3 Maze 4_instruction: "Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)"
      2-3 Maze 5_instruction: "Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)"
      2-3 Maze 6_instruction: "Сохраняй спокойствие и помоги мне найти вредную свинью.
        Иначе я могу разозлиться!"
      2-3 Maze 7_instruction: "Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)"
      2-3 Maze 8_instruction: "Доведи меня до свиньи!"
      2-3 Maze 9_instruction: "Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)"
      2-3 Maze Loops 1_instruction: "Можешь довести меня до свиньи, используя 5 блоков?"
      2-3 Maze Loops 17_instruction: "Доведи меня до подсолнуха!"
      2-3 Maze Loops 18_instruction: |
        Доведи меня до подсолнуха!
        (Подсказка: Чтобы пройти этот уровень, тебе нужно использовать один цикл «повторить» внутри другого.)
      2-3 Maze Loops 19_instruction: "Доведи меня до подсолнуха!"
      2-3 Maze Loops 20_instruction: "Доведи меня до подсолнуха!"
      2-3 Maze Loops 21_instruction: "Доведи меня до подсолнуха!"
      2-3 Maze Loops Assessment 1_instruction: "Тест:  Доведи меня до подсолнуха,
        используя только 5 блоков! "
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: "Доведи меня до свиньи! Какие блоки нужно повторить?"
      2-3 Maze sq10v2_instruction: "Доведи меня до свиньи! Какие блоки нужно повторить?"
      2-3 maze sq11_instruction: "Доведи меня до свиньи! Какие блоки нужно повторить?"
      2-3 maze sq12_instruction: "Можешь заменить предыдущее решение циклом, используя
        блок «повторить несколько раз»?"
      2-3 maze sq13_instruction: "Уважаемый человек. Моя зомби. Нужно... добраться...
        до подсолнуха. Создай цикл с блоком «повторять, пока не»."
      2-3 maze sq14_instruction: "Можешь добраться до подсолнуха, используя только
        четыре блока?"
      2-3 maze sq15_instruction: "Можешь добраться до подсолнуха, используя только
        пять блоков?"
      2-3 maze sq16_instruction: "Окей, это задание похоже на предыдущее, но есть
        маленькое отличие. Можешь выполнить задание, используя только пять блоков?"
      2-3 Maze sq2_instruction: "Наметь путь и проведи меня к глупой свинье.  Остерегайся
        взрывчатки, не то перья полетят!"
      2-3 Maze sq3_instruction: "Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)"
      2-3 Maze sq4_instruction: "Сохраняй спокойствие и помоги мне найти вредную свинью.
        Иначе я могу разозлиться!"
      2-3 Maze sq5_instruction: "Доведи меня до свиньи! Сколько раз тебе нужно повторить
        блок?"
      2-3 Maze sq6_instruction: "Можешь заменить предыдущее решение только двумя блоками?
        (Подсказка: Создай цикл, используя блок «повторить несколько раз».)"
      2-3 Maze sq7_instruction: "Доведи меня до зеленого пришельца, используя только
        три блока."
      2-3 Maze sq8_instruction: "Доведи меня до свиньи! (Где же этот блок «повторить
        несколько раз», когда он так нужен?)"
      2-3 Maze sq9_instruction: "Чтобы добраться до свиньи, создай цикл, используя
        минимальное количество блоков."
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: "Помоги птице поймать вредную свинью, перемещая ее вперед"
      20hr_farmer_stage9_1_instruction: |
        Hi, I'm a farmer. I need your help to flatten
        the field on my farm so it's ready for planting. Move me to the pile of dirt
        and use the "remove" block to remove it.
      20hr_farmer_stage9_10_instruction: |
        I'm working late, so it's dark out, and
        I can't tell how large the piles are. Now I don't have all the options I
        used to have on the while block. Move me along the field, and if there is
        a pile, remove it
      20hr_farmer_stage9_11_instruction: |
        It's still dark outside. Move me along
        the field. If there is a pile, remove it, and if there is a hole, fill it
        in. Hint: use the dropdown menu of options on the "if" block.
      20hr_farmer_stage9_2_instruction: |
        Next, move me to the hole and fill it with
        TWO shovelfuls of dirt, using the "fill" block.
      20hr_farmer_stage9_3_instruction: |
        Move me to the pile of dirt and tell me
        how many shovelfuls to remove using as few blocks as possible.
      20hr_farmer_stage9_4_instruction: |
        Can you help me remove all four piles of
        dirt? Hint: use a repeat block if you can.
      20hr_farmer_stage9_5_instruction: |
        Help me fill in all these holes with 5 shovelfuls
        of dirt. Hint: you can put a "repeat" block inside the "while" block.
      20hr_farmer_stage9_6_instruction: |
        Remove all the piles of dirt, using as few
        blocks as possible. The new options in the dropdown menu on the "while"
        block tell me if I'm standing on a pile or a hole.
      20hr_farmer_stage9_7_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs. Can you write a program that fills
        it until the ground is even?
      20hr_farmer_stage9_8_instruction: |
        Help me fill in the hole at the end of the
        field, using as few blocks as possible.
      20hr_farmer_stage9_9_instruction: |
        Make me remove all these piles of dirt.
        Try to use as few blocks as possible. Hint: try using a "while" block.
      20hr_maze_stage2_1_instruction: |
        Can you help me to catch the naughty pig?
        Stack a couple of "move forward" blocks together and press "Run" to help
        me get there.
      20hr_maze_stage2_10_instruction: |
        Ok, try the new "repeat until" block -
        it will repeat until I reach the annoying pig.
      20hr_maze_stage2_11_instruction: |
        Ok, one last time for practice - can you
        solve this one using only 4 blocks?
      20hr_maze_stage2_12_instruction: |
        Dear person. Me zombie. Me hungry. Must...
        get... to sunflower... Can you get me there with only 5 blocks?
      20hr_maze_stage2_13_instruction: |
        Ok, this is similar, but slightly different.
        Can you do it in only 5 blocks?
      20hr_maze_stage2_14_instruction: |
        Use the new "if" block to let me decide
        when to turn. Hint: you only need one more block, but learn how we set it
        up so you can do it on your own next time.
      20hr_maze_stage2_15_instruction: |
        Ok, this is just like the last puzzle, but
        you need to remember how you used the "if" block and the "repeat" block
        together.
      20hr_maze_stage2_16_instruction: |
        Me want sunflower! Use an "if" block to
        get me there with the fewest number of blocks.
      20hr_maze_stage2_17_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the chompers!
      20hr_maze_stage2_18_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the sunflower try to use
        this new block.
      20hr_maze_stage2_19_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      20hr_maze_stage2_2_instruction: |
        This pig is ruffling my feathers. Help me
        to find him!
      20hr_maze_stage2_20_instruction: |
        Can you add just 3 blocks to help me solve
        a more complex maze? If you do it right, I can walk any curvy path no matter
        the length.
      20hr_maze_stage2_3_instruction: |
        Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!
      20hr_maze_stage2_4_instruction: |
        Guide me to the green evilness! (Watch out
        for TNT)
      20hr_maze_stage2_5_instruction: |
        Keep calm and help me to find the bad pig.
        Otherwise I might get angry!
      20hr_maze_stage2_6_instruction: |
        There's a way I can get to the silly pig
        using only 2 blocks. Can you figure it out?
      20hr_maze_stage2_7_instruction: |
        Try to get me to the green intruder using
        only three blocks.
      20hr_maze_stage2_8_instruction: |
        Help me banish this bad piggy using the fewest
        number of blocks. Try using more than one "repeat times" block.
      20hr_maze_stage2_9_instruction: |
        When a block is grey, that means you can't
        delete it. Solve this puzzle using the "repeat" block that repeats 3 times.
        Try putting these 3 blocks inside the grey "repeat" block: move, move, turn.
      4-5 Artist 1_instruction: "Помоги мне дорисовать коробку. (Длина каждой стороны
        — 300 пикселей)"
      4-5 Artist 10_instruction: "Нажми «Выполнить» для проверки кода. Затем повтори
        код достаточное число раз, чтобы завершить рисунок. Каждый раз цвета будут
        разными."
      4-5 Artist 11_instruction: "Нарисуй зеленые линии. Длина линий — 300 пикселей,
        расстояние между ними — 15 пикселей."
      4-5 Artist 2_instruction: "Сможешь поместить код в цикл так, чтобы получился
        квадрат?"
      4-5 Artist 3.5_instruction: "Итак, попробуй догадаться, что произойдет при запуске
        кода (или нажми «Выполнить», чтобы узнать). Затем повтори код достаточное
        число раз, чтобы завершить рисунок. Каждый раз цвет линий, скорее всего, будут
        разным."
      4-5 Artist 3_instruction: "Периметр прямоугольной клумбы — 600. Протяженность
        более длинной стороны — 200. Нарисуй прямоугольник."
      4-5 Artist 4_instruction: "Сколько градусов в круге?  Зацикли блоки, чтобы нарисовать
        разноцветный круг."
      4-5 Artist 5_instruction: "Какой угол нужно использовать?"
      4-5 Artist 6_instruction: "Все углы этого равностороннего треугольник равны
        60 градусам. Длина каждой стороны — 200 пикселей. Дорисуй треугольник."
      4-5 Artist 7_instruction: "Углы этого прямоугольного треугольника равны 30,
        60 и 90 градусам. Гипотенуза в два раза длиннее высоты, равной 100 пикселей.
        Дорисуй треугольник."
      4-5 Artist 8_instruction: "Средняя линия футбольного поля перпендикулярна боковым
        линиям. Периметр этого поля равен 800 пикселей, его длина — 240 пикселей.
        Чему равняется ширина поля? Нарисуй границы и среднюю линию поля."
      4-5 Artist 9_instruction: "Нарисуй вторую половину так, чтобы рисунок получился
        симметричным. Треугольники имеют равные стороны длиной 50 пикселей."
      4-5 Artist Assessment 1_instruction: "Тест: Используй цикл, чтобы нарисовать
        равносторонний треугольник. Длина каждой стороны — 300 пикселей."
      4-5 Artist For Loops 1_instruction: "Введи числа от 1 до 10 в блоки ширины и
        запусти код."
      4-5 Artist For Loops 11_instruction: "Дополни блок «цикл со счетчиком» так,
        чтобы его значения были 0, 20, 40, 60, 80... 200."
      4-5 Artist For Loops 12_instruction: "Что произойдет, если ты поменяешь местами
        числа в блоках «от» и «до»? Дополни блок «цикл со счетчиком» так, чтобы его
        значения были 200, 180, 160, 140, 120... 0. "
      4-5 Artist For Loops 13_instruction: "В начале кода для этого рисунка не было
        цикла со счетчиком и в нем используется слишком много блоков!  Используй блок
        «цикл со счетчиком», чтобы завершить спираль.  Подсказка: длина последней
        линии — 250 пикселей."
      4-5 Artist For Loops 14_instruction: "Кто-то начал писать код, но затем понял,
        что его можно укоротить! Используй блок «цикл со счетчиком», чтобы заменить
        блоки и завершить треугольную спираль. (Подсказка: длина последней линии —
        300 пикселей.)"
      4-5 Artist For Loops 15_instruction: "Кто-то начал писать код, но затем понял,
        что его можно укоротить! Используй блок «цикл со счетчиком», чтобы заменить
        блоки и завершить шестиугольную спираль. (Подсказка: длина последней линии
        — 200 пикселей.)"
      4-5 Artist For Loops 2_instruction: Это блок "Повторить". Вместо того, чтобы
        вводить 1, 2, 3..., 10, блок "повторить" может повторять всё, что внутри него
        и считать числа за вас. Введите 10 в окно "до" в блоке "повторить".
      4-5 Artist For Loops 3_instruction: "Как мы можем посчитать от 1 до 50? Измени
        блок «цикл со счетчиком»."
      4-5 Artist For Loops 4_instruction: "Дополни блок «цикл со счетчиком», чтобы
        он считал от 1 до 10 с шагом 1."
      4-5 Artist For Loops 6_instruction: "Нарисуй квадраты со сторонами размером
        50, 60, 70, 80 и 90 пикселей. Тебе необходимо использовать функцию «нарисовать
        квадрат» пять раз."
      4-5 Artist For Loops 7_instruction: "Нарисуй такие же квадраты, но используй
        для изменения размеров блок «считать с шагом». Помести блок «счетчик» в функцию
        «нарисовать квадрат». Подсказка: Это группа «Переменные»."
      4-5 Artist For Loops 8_instruction: "Можешь дополнить программу, поместив блоки
        внутрь блока «цикл со счетчиком», который считает от 10 до 200 с шагом 10?
        Ты найдешь блок «цикл со счетчиком» в группе «Циклы»."
      4-5 Artist For Loops 9_instruction: "Эти круги имеют следующие размеры: 5, 10,
        15, 20, 25, 30 и 35. Нарисуй круги, используя блок «цикл со счетчиком»."
      4-5 Artist Free Draw 1_instruction: "Свободное рисование!  Рисуй все, что захочется."
      4-5 Artist Functions 1_instruction: "Используй цикл «повторить», чтоб нарисовать
        треугольник."
      4-5 Artist Functions 10a_instruction: "Помести этот код внутрь функции «нарисовать
        снежинку» и замени значение «50» параметром «размер». Функция уже задана таким
        образом, чтобы нарисовать снежинку размером 100 пикселей."
      4-5 Artist Functions 10b_instruction: "Используй функцию «нарисовать снежинку»,
        чтобы создать снежинки разных размеров.  Подсказка: длина первой снежинки
        — 25, а каждая следующая снежинка в два раза больше предыдущей."
      4-5 Artist Functions 11_instruction: "Эта функция «нарисовать шестиугольник»
        использует функцию «нарисовать треугольник». Дополни функцию, рисующую шестиугольник.
        (Подсказка: У шестиугольника 6 сторон, каждая длиной 100 пикселей)"
      4-5 Artist Functions 12_instruction: "Дополни функцию «нарисовать волны».  Каждая
        волна состоит из одной верхней волны и одной нижней волны.   Подсказка: Нарисуй
        5 синих волн."
      4-5 Artist Functions 13 Free play_instruction: "Вот некоторые функции для рисования
        планет, звезд, ракет и роботов. Используй их любым желаемым способом, чтобы
        нарисовать рисунки, которыми ты можешь поделиться с друзьями."
      4-5 Artist Functions 14 Free play_instruction: "Здесь мы привели для тебя несколько
        функций.  Используй их внутри одного или нескольких циклов, как тебе хочется,
        чтобы рисовать рисунки, которыми ты можешь поделиться с друзьями. Нажми «Выполнить»,
        чтобы увидеть пример."
      4-5 Artist Functions 15 Assessment_instruction: "Тест:  Используй функцию «нарисовать
        квадрат» для рисования квадратов.  Стороны квадратов равны 50, 100 и 150 пикселей."
      4-5 Artist Functions 2a_instruction: "Теперь объедини эти блоки в новую функцию
        под названием «нарисовать маленький треугольник» и воспользуйся ею."
      4-5 Artist Functions 2b_instruction: "Теперь создай функцию «нарисовать маленький
        треугольник» с использованием предоставленных блоков."
      4-5 Artist Functions 3_instruction: "Теперь создай функции «нарисовать средний
        треугольник» и «нарисовать большой треугольник». Функция «нарисовать маленький
        треугольник» уже создана для тебя. Стороны треугольников имеют следующие длины:
        50 (маленький), 100 (средний) и 150 (большой). "
      4-5 Artist Functions 4_instruction: "Эта новая функция «нарисовать треугольник»
        содержит параметр и может выполнять те же действия, что и все предыдущие функции.
        Нарисуй аналогичные треугольники, используя эту новую функцию."
      4-5 Artist Functions 5_instruction: "Можешь преобразовать функцию «нарисовать
        треугольник» в функцию «нарисовать квадрат», чтобы изменить рисунок?"
      4-5 Artist Functions 6_instruction: "Используй функции «нарисовать треугольник»
        и «нарисовать квадрат» вместе, чтобы нарисовать дом. (Подсказка: Стороны квадрата
        равны 200 пикселей)"
      4-5 Artist Functions 6b_instruction: "Используй функции для рисования квадрата
        и треугольника, а также другие блоки, чтобы нарисовать дом — объедини их в
        функцию «нарисовать дом» и вызови ее."
      4-5 Artist Functions 7_instruction: "Используй функцию «нарисовать дом», чтобы
        нарисовать дома размером 100 пикселей и 50 пикселей. Расстояние между двумя
        домами составляет 50 пикселей."
      4-5 Artist Functions 8_instruction: "Функция «нарисовать цветок» содержит параметр,
        позволяющий установить высоту стебля.  Установи его на 200 и посмотри, что
        произойдет."
      4-5 Artist Functions 9_instruction: "Нарисуй эти 3 цветка. Высота первого цветка
        — 100 пикселей, а каждый следующий цветок на 50 пикселей выше, чем предыдущий.
        Расстояние между цветами — 100 пикселей."
      4-5 Artist Patterns 1_instruction: "Можешь нарисовать этот квадрат с помощью
        цикла? Длина каждой стороны — 20 пикселей."
      4-5 Artist Patterns 10_instruction: "Этот код рисует два ряда шестиугольников
        — зацикли весь код 4 раза, чтобы нарисовать соты. Подсказка: Необходимо задать
        перемещение на 120 пикселей назад в самом внешнем цикле, чтобы убедиться,
        что рисунок не будет выступать за границы экрана."
      4-5 Artist Patterns 11_instruction: "Сколько раз тебе нужно повторить этот цикл,
        чтобы нарисовать полукруг? Подсказка: если в кругу 360 градусов, и в каждом
        цикле происходит перемещение на 3 градуса, сколько раз тебе нужно повторить
        цикл, чтобы нарисовать полный круг?"
      4-5 Artist Patterns 12_instruction: "Что произойдет, если ты скопируешь этот
        цикл и повернешь налево вместо поворота направо? Можешь повторить это и нарисовать
        эту волну?"
      4-5 Artist Patterns 13_instruction: "Теперь давай зациклим весь этот код четыре
        раза, чтобы нарисовать рамку для рисунка. Следи за углами — ты не можешь просто
        поворачивать на 90 градусов! Если цикл со смещением на 3 градуса и поворотом
        60 раз рисует полукруг, какой из этих блоков кода позволит нарисовать четверть
        круга для использования по углам?"
      4-5 Artist Patterns 2_instruction: "Если поместить цикл «нарисовать квадрат»
        внутрь другого цикла, то получится так называемый «вложенный цикл». Что тебе
        нужно добавить во внешний цикл, чтобы все 15 кругов шли один за другим?"
      4-5 Artist Patterns 3_instruction: "Теперь давай перейдем на следующий уровень!
        Мы вложили целый блок кода в другой цикл, но тебе нужно вернуть художника
        в начало, чтобы нарисовать следующую линию. Какой из этих блоков кода можно
        разместить в конце внешнего цикла, чтобы нарисовать всю сетку?"
      4-5 Artist Patterns 4_instruction: "Размер граней этого ромба — 50 пикселей,
        величина углов — 120 и 60 градусов. Используй цикл, чтобы нарисовать его."
      4-5 Artist Patterns 5.5_instruction: "Сколько раз тебе нужно повторить этот
        блок, чтобы нарисовать полную сетку ромбов?"
      4-5 Artist Patterns 5_instruction: "Давай повторим это действие, чтобы нарисовать
        сетку из 6 ромбов. Обрати внимание: мы изменили код для рисования ромбов,
        чтобы он повторялся 2 раза вместо 3. Как ты думаешь, почему?"
      4-5 Artist Patterns 6_instruction: "Сколько раз тебе нужно повторить этот блок,
        чтобы нарисовать полную сетку ромбов?"
      4-5 Artist Patterns 7_instruction: "Давай изменим код из последней головоломки
        так, чтобы нарисовать этот более сложный узор. Обрати внимание, что теперь
        ромбы частично перекрывают друг друга; попробуй изменить значение первой команды
        «прыгнуть назад» со 100 на 50 (т.е. уменьшить наполовину); итак, как далеко
        должен переместиться художник при выполнении второй команды «прыгнуть назад»?"
      4-5 Artist Patterns 8_instruction: "Используй цикл, чтобы нарисовать шестиугольник
        со стороной 40 пикселей и углами в 60 градусов."
      4-5 Artist Patterns 9.5_instruction: "Давай зациклим этот код, чтобы нарисовать
        два ряда шестиугольников. Обрати внимание, как сместился влево наш второй
        ряд."
      4-5 Artist Patterns 9_instruction: "Теперь повтори этот код 3 раза, чтобы нарисовать
        полный ряд. Подсказка: расстояние между крайней левой и крайней правой точками
        каждого шестиугольника равно 80 пикселей."
      4-5 Artist Patterns Free Play_instruction: "Свободная игра: попробуй создать
        свой собственный узор!"
      4-5 Bee Conditionals - FC Test_instruction: "Прямо сейчас пчела нуждается в
        нектаре. Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ
        ОБЛАКО, чтобы узнать, скрывается ли под ним цветок. Если он там, ты можешь
        собрать нектар."
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: "Пчела не может сказать, является ли объект
        цветком или сотой. Собери нектар только с цветов, но сначала проверь, является
        ли объект цветком или сотой."
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: "Прямо сейчас пчела нуждается в нектаре.
        Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ ОБЛАКО, чтобы
        узнать, скрывается ли под ним цветок. Если он там, ты можешь собрать нектар."
      4-5 Bee Conditionals 3_instruction: "Теперь пчела хочет только делать мед. Выполняй
        проверку, чтобы готовить мед только в сотах."
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: "Неизвестный объект может быть цветком или
        сотой. Используй блок «если/иначе», чтобы собрать нектар, если это цветок,
        или чтобы готовить мед в противном случае (потому что тогда объект является
        сотой)."
      4-5 Bee Conditionals 5_instruction: "Под теми облаками может скрываться цветок
        или сота. Используй блок «если/иначе», чтобы собрать нектар, если это цветок,
        или чтобы приготовить мед в противном случае (потому что тогда объект является
        сотой)."
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: "В этом фиолетовом цветке может быть 3,
        2 или 1 порция нектара. Здесь блок «если-иначе» объединен с другим блоком
        «если-иначе» для создания блока «если, иначе-если, иначе». Дополни это решение,
        чтобы собрать неизвестное количество нектара."
      4-5 Bee Conditionals 7_instruction: "Помни, что в фиолетовых цветах может быть
        3, 2 или 1 порция нектара. Составь функцию «проверить фиолетовый цветок» и
        используй ее, чтобы собрать весь нектар с цветов."
      4-5 Bee Conditionals 8_instruction: "Напиши внутри функции функцию «проверять
        цветок, готовить мед». Твоя функция должна проверять, содержит ли фиолетовый
        цветок 3, 2 или 1 порцию нектара, и собирать весь нектар. Затем выполни перемещение
        вперед и приготовь мед."
      4-5 Bee Conditionals Assessment 1_instruction: "Тест: Это неправильный код.
        Напиши функцию «собрать нектар или приготовить мед», а затем вызови ее, чтобы
        приготовить весь нектар и мед. Помни, что в фиолетовых цветах может быть 3,
        2 или 1 порция нектара."
      4-5 Bee Debugging 1_instruction: "Эти блоки не дают мне покоя. Можешь их исправить?"
      4-5 Bee Debugging 10_instruction: "Найди ошибки и исправь их."
      4-5 Bee Debugging 11_instruction: "Расчет производится правильно?"
      4-5 Bee Debugging 2_instruction: "Помоги пчеле собрать нектар и сделать мед."
      4-5 Bee Debugging 3_instruction: "Найди ошибки и исправь их."
      4-5 Bee Debugging 4_instruction: "Эти блоки не работают. Какой алгоритм?"
      4-5 Bee Debugging 5_instruction: "Что-то пошло не так..."
      4-5 Bee Debugging 6_instruction: "Фиолетовый цветок содержит неизвестное количество
        нектара. Исправь блоки, чтобы собрать весь нектар с цветка."
      4-5 Bee Debugging 7_instruction: "В функции что-то отсутствует..."
      4-5 Bee Debugging 8_instruction: "Эта функция правильная, но она используется
        некорректно."
      4-5 Bee Debugging 9_instruction: "Почему пчела делает недостаточно меда?"
      4-5 Bee Debugging Assessment 1_instruction: "Тест: Исправь код."
      4-5 Bee Nested Loops 1_instruction: "Используй цикл, чтобы собрать весь нектар."
      4-5 Bee Nested Loops 2_instruction: "Собери весь нектар со всех цветов. Используй
        вложенный цикл."
      4-5 Bee Nested Loops 3_instruction: "Собери весь нектар, поместив начальный
        код внутрь вложенного цикла."
      4-5 Bee Nested Loops 4_instruction: "Собери весь нектар с каждого цветка и приготовь
        мед в каждой соте. Используй вложенный цикл."
      4-5 Bee Nested Loops 5_instruction: "Собери весь нектар путем создания вложенного
        цикла."
      4-5 Bee Nested Loops 6_instruction: "Собери весь нектар."
      4-5 Bee Nested Loops 7_instruction: "Помести этот цикл внутрь другого цикла
        для создания вложенного цикла и собери весь нектар с цветов."
      4-5 Bee Nested Loops 8_instruction: "Собери весь нектар из этих цветов путем
        создания вложенного цикла, использующего цикл с предусловием. Замени внутренний
        блок «повторить несколько раз» блоком «цикл с предусловием». "
      4-5 Bee Nested Loops 9_instruction: "Собери весь нектар из этих цветов путем
        создания вложенного цикла, использующего цикл с предусловием, внутри блока
        «повторить»."
      4-5 Bee Nested Loops Assessment 1_instruction: "Подсказка: собери весь нектар
        и приготовь весь мед при помощи циклов."
      4-5 Bee Nested Loops Rows_instruction: "Собери нектар с цветочных рядов! Используй
        вложенный цикл."
      4-5 Maze 1 (copy 1)_instruction: "Уважаемый человек. Моя зомби. Нужно... добраться...
        до подсолнуха."
      4-5 Maze 1_instruction: "Уважаемый человек. Моя зомби. Нужно... добраться...
        до подсолнуха."
      4-5 Maze 10_instruction: "Можешь добраться до подсолнуха, используя только четыре
        блока?"
      4-5 Maze 11_instruction: "Можешь добраться до подсолнуха, используя только шесть
        блоков?"
      4-5 Maze 12_instruction: "Окей, на этот раз есть маленькое отличие. Можешь сделать
        это, используя только шесть блоков?"
      4-5 Maze 13_instruction: "Доведи меня до свиньи!"
      4-5 Maze 14_instruction: "Доведи меня до свиньи! Используй блок «повторять,
        пока не»."
      4-5 Maze 2 (copy 1)_instruction: "Доведи зомби до подсолнуха, но остерегайся
        зубастиков!"
      4-5 Maze 2_instruction: "Доведи зомби до подсолнуха, но остерегайся зубастиков!"
      4-5 Maze 3 (copy 1)_instruction: "Нужно... добраться... до подсолнуха."
      4-5 Maze 3_instruction: "Нужно... добраться... до подсолнуха."
      4-5 Maze 4 (copy 1)_instruction: "Попробуй использовать блок «повторить», чтобы
        использовать меньше блоков..."
      4-5 Maze 4_instruction: "Попробуй использовать блок «повторить», чтобы использовать
        меньше блоков..."
      4-5 Maze 5 (copy 1)_instruction: "Можешь решить эту задачу, используя как можно
        меньше блоков?"
      4-5 Maze 5_instruction: "Можешь решить эту задачу, используя как можно меньше
        блоков?"
      4-5 Maze 6 (copy 1)_instruction: "Можешь решить эту задачу, используя как можно
        меньше блоков?"
      4-5 Maze 6_instruction: "Можешь решить эту задачу, используя как можно меньше
        блоков?"
      4-5 Maze 7_instruction: "Уважаемый человек. Моя зомби. Нужно... добраться...
        до подсолнуха."
      4-5 Maze 8_instruction: "Используй блок «повторить», чтобы доставить зомби к
        подсолнуху. (Остерегайся зубастиков!)"
      4-5 Maze 9_instruction: "Создай цикл с помощью блока «повторять, пока не»."
      4-5 Maze Assessment 1_instruction: "Тест: Доведи меня до подсолнуха."
      4-5 Maze Conditionals 1_instruction: "Используй блок «повторять, пока не», чтобы
        доставить зомби к подсолнуху."
      4-5 Maze Conditionals 10_instruction: "Сможете добавить только 3 блока, чтобы
        помочь решить более сложный лабиринт зомби? \r \r Если вы сделаете это правильно,
        он сможет пройти по любому извилистому пути независимо от длины!"
      4-5 Maze Conditionals 2_instruction: "Используй блок «повторять, пока не», чтобы
        доставить зомби к подсолнуху."
      4-5 Maze Conditionals 3_instruction: "Используй блок «если», чтобы я мог решать,
        когда поворачивать. Подсказка: тебе понадобится еще один блок, но запомни,
        как мы его разместили, чтобы в следующий раз ты мог сделать это сам."
      4-5 Maze Conditionals 4_instruction: "Хорошо, это похоже на предыдущую головоломку,
        но тебе надо помнить, как ты использовал блоки «если» и «повторить» вместе."
      4-5 Maze Conditionals 5_instruction: "Моя хотеть подсолнух! Используй блок «если»,
        чтобы привести меня к нему, используя как можно меньше блоков."
      4-5 Maze Conditionals 6_instruction: "Моя хотеть подсолнух! Используй блок «если»,
        чтобы привести меня к нему, используя как можно меньше блоков."
      4-5 Maze Conditionals 7_instruction: "Ну что, поупражняемся еще? Это практически
        то же самое. Остерегайся зубастиков!"
      4-5 Maze Conditionals 8_instruction: "Блок «если/иначе» проверяет условие, после
        чего выполняет одно действие ИЛИ другое. Чтобы помочь мне добраться до подсолнуха,
        попробуй использовать этот новый блок."
      4-5 Maze Conditionals 9_instruction: "Еще один случай для использования блока
        «если-иначе»; сможешь сделать правильно с первой попытки?"
      4-5 Maze Conditionals Assessment 1_instruction: "Используй блоки «повторять,
        пока не» и «если-иначе», чтобы доставить меня к подсолнуху, используя как
        можно меньше блоков."
      4-5 Nested Loops 1_instruction: "Дополни код, чтобы нарисовать эти треугольники.
        \ Первый уже готов.  Подсказка:  Раздели 360 градусов на 3 треугольника, чтобы
        узнать угол поворота."
      4-5 Nested Loops 10_instruction: "Дорисуй последний ряд звезд на этом флаге,
        зациклив предоставленные блоки. Звезды расположены на расстоянии 50 пикселей
        друг от друга, но помни, что ширина самих звезд — 30 пикселей."
      4-5 Nested Loops 11_instruction: "Можешь нарисовать эти 10 квадратов тротуара
        с помощью вложенного цикла? Размер каждого квадрата — 30 пикселей."
      4-5 Nested Loops 12_instruction: "Можешь нарисовать эти 36 треугольников, используя
        вложенный цикл?"
      4-5 Nested Loops 2_instruction: "Теперь вложи этот цикл внутр другого цикла,
        чтобы нарисовать 10 треугольников.  Это называется вложенный цикл.  Подсказка:
        Вместе 10 треугольников выполняют поворот на 360 градусов.  "
      4-5 Nested Loops 3_instruction: "Чтобы нарисовать солнце, вложи этот код в цикл.
        Это называется вложенный цикл."
      4-5 Nested Loops 5_instruction: "Сделай цикл из данного кода, чтобы создать
        ветряную мельницу."
      4-5 Nested Loops 6_instruction: "Можешь нарисовать шестиугольник, зациклив код
        для рисования треугольников?"
      4-5 Nested Loops 7_instruction: "Зацикли этот рисунок 10 раз. На сколько градусов
        нужно поворачивать в цикле? (Подсказка: Сколько будет 360 разделить на 10?)"
      4-5 Nested Loops 8_instruction: "Зацикли этот рисунок 6 раз. На сколько градусов
        нужно поворачивать в цикле? (Подсказка: Сколько будет 360 разделить на 6?)"
      4-5 Nested Loops 9_instruction: "Дорисуй зубы в пасти крокодила!"
      4-5 Nested Loops Assessment 1_instruction: "Используй вложенный цикл, чтобы
        завершить рисунок."
      4-5 While Loops 1_instruction: "Перемести меня к яме и заполни ее двумя лопатами
        земли, используя блок «засыпать»."
      4-5 While Loops 2_instruction: "Перемести меня к куче земли и убери ее 5 взмахами
        лопаты, используя блок «раскидать»."
      4-5 While Loops 3_instruction: "Перемести меня к куче и полностью убери ее,
        затем перемести к яме и полностью засыпь ее.  Подсказка:  Используй как можно
        меньше блоков."
      4-5 While Loops 4_instruction: "Ух ты, я нашел действительно глубокую яму! Я
        не знаю, сколько лопат земли нужно, чтобы ее засыпать.  Ты можешь написать
        программу для заполнения ямы до тех пор, пока поверхность не станет ровной?
        \ Подсказка:  На этот раз попробуй использовать цикл с предусловием."
      4-5 While Loops 5_instruction: "Ух ты, теперь тут две глубокие ямы! Ты можешь
        написать программу для заполнения обеих ям до тех пор, пока поверхность не
        станет ровной?"
      4-5 While Loops 6_instruction: "Ух ты, теперь тут большая куча земли! Ты можешь
        написать программу, которая будет убирать землю до тех пор, пока поверхность
        не станет ровной?"
      4-5 While Loops 7_instruction: "Ух ты, теперь здесь три кучи земли! Ты можешь
        написать программу, которая будет убирать землю с каждой кучи до тех пор,
        пока поверхность не станет ровной?"
      4-5 While Loops 8_instruction: " Тут действительно глубокая яма и действительно
        большая куча земли.  Сколько лопат земли необходимо переместить, чтобы выровнять
        поверхность?  Подсказка: Используй цикл с предусловием для обоих объектов."
      4-5 While Loops Assessment 1_instruction: "Здесь много ям и куч.  Помоги мне
        заполнить и убрать их, чтобы выровнять поверхность."
      aE1_instruction: "You chose to make a square napkin! \r\n\r\nTo finish, draw\na
        square with 20 pixel sides. "
      aE2_instruction: |
        If you place your square loop inside another loop, we call
        that a nested loop. What do you need to add as an outer loop to make sure
        all 14 napkins line up next to each other?
      aE3_instruction: "We've got to have a tablecloth!  \r\n\r\nTake your row of\n14
        napkins and sew 14 of those together with another **outer loop** to make\na
        cover for our table."
      aE3alternate_instruction: Alternate
      aE3alternateB_instruction: Alternate
      aE4_instruction: Alternate
      aE5_instruction: Example of puzzle using highest difficulty level shape.
      aE6_instruction: "How many times do you need to loop this to draw half  of\na
        circle? \n"
      aE7_instruction: "If you create another loop like this one, but turn left instead\nof
        right, what happens? \r\n\r\nCan you repeat all of that to draw this wave?"
      aE8_instruction: "Now let's loop that whole thing four times to create this\npicture
        frame. Watch out for the corners - you can't just turn 90 degrees!\n\r\n\r\nIf
        looping a 3 degree turn 60 times makes a half circle, which of\nthese blocks
        of code will make an additional quarter circle for the corners?"
      aEfreeplay_instruction: Free Play!
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: "Backed by a template #1. Please\nsign
        in to test applab levels (By design, applab levels only work if signed\nin.
        Normally, we make people sign in, but this is only enforceable for a whole\nscript
        and would be annoying to do for the allthethings script). \n"
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: |
        Do
        This
      App Lab test_instruction: "тест"
      Applab allthethings onRecordEvent_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: "Now nest this loop inside another loop\nto
        draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles\ncomplete
        a 360 degree rotation.  \n"
      Artist - Nested Loops 3_instruction: "Create a sun by nesting the starter code\nin
        another loop. This is called a nested loop.\r\n"
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: |
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: Draw the teeth in the alligator's mouth!
      Artist - Nested Loops Assessment 1_instruction: "Используй вложенный цикл, чтобы
        завершить рисунок."
      Artist Inspiration_instruction: "Free Play Inspiration: You've now learned\neverything
        you need to know to make a pattern like this! If this picture inspires\nyou,
        try to make something similar. Otherwise, create something all your own.\r\n\n\r\nWant
        to know how our inspiration pattern was made? "
      artistLoopsK1_instruction: |
        This is a new type of puzzle called "Artist".
        Play with the level and draw something fun.
      artistLoopsK2_instruction: |
        Now, use a `repeat` loop to draw this line five
        times!
      artistLoopsK2gradek_artist_loops3_instruction: |
        Now, use a `repeat` loop to
        draw this line five times!
      artistLoopsK3_instruction: |
        Draw a line eight steps long. This will become
        the land for our kingdom!
      artistLoopsK4_instruction: |
        Now we need a castle with a draw bridge.  Fix the
        code so that the bridge lays straight instead of falling down.
      artistLoopsK5_instruction: |
        Now we need to fix the top of the castle. Can you
        loop the code three times?
      artistLoopsK6_instruction: "Someone is stuck in the tower!  Fix the stairs\nto
        set them free. \n"
      artistLoopsK7_instruction: "This tower is lovely, what is downstairs? Build\nanother
        staircase to find out! \n"
      artistLoopsK8_instruction: |
        Wow! There's a garden over there!  Help fix these
        stairs so I can get to it.
      artistLoopsK9_instruction: |
        **Challenge:**  Lovely! Let's take a walk around
        the garden.
      artistLoopsKA_instruction: |
        These stones are in the wrong place.  Help me move
        them so I don't fall in!
      artistLoopsKB_instruction: "Look!  It's a theater.  Help me set up the chairs\nso
        we can all see the stage. \n"
      artistLoopsKFP_instruction: |
        Picture time!  Use what you have learned to draw
        a picture of what you think the Artist saw on stage.
      Auto Open Function Editor_instruction: "Ты можешь вызывать функции, размещенные
        внутри других функций! Взяв за основу функцию «фигура», нарисуй 3 фигуры домиков,
        каждая из которых на 20 пикселей больше, чем предыдущая, начиная с 50 пикселей
        в длину. Может быть полезно использовать цикл со счетчиком. "
      Bee Recommended Blocks test_instruction: "Фиолетовые цветы могут содержать 1
        или 0 порций нектара, но ты не знаешь, сколько именно! Будь осторожен, не
        собирай нектар с фиолетовых цветов, его там нет. Проверь, равно ли значение
        количества нектара 1, используя блок «если»."
      Bergeron Robot Maze1_instruction: |
        Can you help me catch the naughty pig? Stack
        a couple of `move forward` blocks below the `when run` block and press "Run".
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: |
        When you last worked on your game we got
        our target and danger sprites to fly across the screen, but they never come
        back. Click "Run" to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        When you last worked on your game
        we got our target and danger sprites to fly across the screen, but they never
        come back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Final_instruction: |
        You made it! At this point your game should be
        fully functioning, take some time to enjoy your new game and make any final
        tweaks to it. When you're happy with the final product, click Finish and
        you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      Busy Bee 2_instruction: "У этой пчелы много работы! Может, ты знаешь шаблоны,
        которые можно использовать, чтобы упростить твоей код?"
      Busy Bee_instruction: "У этой пчелы много работы! Может, ты знаешь шаблоны,
        которые можно использовать, чтобы упростить твоей код?"
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou
        need to track the cost of making each cookie, the money paid, and the\ntotal
        profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\n\r\nWrite\nthe
        function cost, which takes in the number of cookies you intend to sell,\nand
        returns the cost of making those cookies.\r\n\r\nTest your function by\ncalculating
        the cost of 42 cookies"
      Calc Design Recipe 3_instruction: "Write the function sales which takes in\nthe
        number of cookies sold, and produces the amount of money customers spent\nto
        buy those cookies (each cookie is sold at $1.50).\r\n\r\nTest your function\nby
        calculating the sales for 135 cookies"
      Calc Design Recipe 4_instruction: "Using the two functions we just wrote, write\nthe
        function profit, which takes in the number of cookies you sold, and gives\nyou
        back the total profit you make from selling your cookies, accounting for\nthe
        cost of baking them.\r\n\r\nTest your function by calculating the total\nprofit
        for 15 cookies."
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor
        the function \"rocket-height\" that states it has a range of Number, domain\nof
        Number, and should return the height of the rocket traveling at 15 m/s\nafter
        a given number of seconds. Let's write an example case now for the\nheight
        of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: |
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200
        pixels long. \n"
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. \n"
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. \n"
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. \n"
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach
        segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Collector Demo_instruction: |
        Look at all this loot! Help me get as many coins
        as I can so I can improve my farm. I can only use 9 blocks though!
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe
        nectar from these flowers? \n"
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: "Можешь довести меня до свиньи, используя
        5 блоков?"
      Course 4 2_instruction: "Прямо сейчас пчела нуждается в нектаре. Помни, не все
        объекты являются цветами, поэтому выполняй проверку, чтобы собирать нектар
        только с цветов."
      Course 4 Artist 1_instruction: "Помоги мне нарисовать коробку. (Длина каждой
        линии — 200 пикселей)"
      Course 4 Artist 10_instruction: |
        Нажми здесь, чтобы увидеть подсказки еще раз!

        Это код для рисования интересной фигуры.  Что произойдет, если ты многократно выполнишь его, выполняя поворот после каждой итерации?   Обрати внимание, что при рисовании этой фигуры величина поворота в сумме составляет 420 градусов, что означает, что, когда твой художник закончит рисовать, он будет смотреть в другую сторону по сравнению с тем, куда он смотрел в начале.  Это новое направление будет обращено строго на 60 градусов вправо от точки, в которой ты начал.
      Course 4 Artist 11_instruction: "Теперь задача посложнее!  Вот структура, которая
        использует только блоки, которые тебе уже показывали.  Догадываешься, как
        воспроизвести этот рисунок?  Не стесняйся действовать методом проб и ошибок.
        Нестрашно, если ты не сделаешь все правильно с первого раза.  Хочешь увидеть
        больше подсказок?  Нажми здесь!"
      Course 4 Artist 12_instruction: |
        Хочешь еще раз взглянуть на пример структуры или на подсказки?  Нажми здесь!

        В противном случае пиши структуру самостоятельно!
      Course 4 Artist 13_instruction: "Еще играешь?  Вот пустой холст, на котором
        ты можешь рисовать все, что захочешь!"
      Course 4 Artist 2_instruction: "Можешь зациклить этот код, чтобы нарисовать
        квадрат по серым линиям?"
      Course 4 Artist 20_instruction: "Еще играешь?  Вот чистый холст, на котором
        ты можешь создать все, что захочешь!"
      Course 4 Artist 3_instruction: "Попробуй догадаться, что произойдет при запуске
        кода (или нажми «Выполнить», чтобы проверить). Затем повтори код достаточное
        число раз, чтобы завершить рисунок."
      Course 4 Artist 4_instruction: "Сколько градусов в круге?  Укажи в блоке «повторить»
        соответствующее число, чтобы создать разноцветный круг."
      Course 4 Artist 5_instruction: "Нарисуй вторую половину этого рисунка так, чтобы
        она была симметрична данной. Треугольники имеют равные стороны длиной 50 пикселей.
        Подсказка: Возможно, нужно будет запустить код несколько раз, чтобы догадаться,
        какие блоки следует добавить."
      Course 4 Artist 6_instruction: "Дополни код, чтобы нарисовать эти треугольники.
        Подсказка: Здесь 3 треугольника, вместе образующих поворот на 360 градусов...сколько
        будет 360 разделить на 3?"
      Course 4 Artist 7_instruction: "Теперь вложи этот цикл внутр другого цикла,
        чтобы нарисовать 10 треугольников. Это называется вложенный цикл. Подсказка:
        Вместе 10 треугольников выполняют поворот на 360 градусов.  "
      Course 4 Artist 8_instruction: "Нарисуй солнце, повторяя весь этот блок кода
        несколько раз."
      Course 4 Artist 8a_instruction: |
        Помнишь эту фигуру?  Теперь мы собираемся дать тебе задание построить ее, не предоставляя никаких исходных блоков!
        Подсказка: Здесь 3 треугольника, вместе образующих поворот на 360 градусов...сколько будет 360 разделить на 3?
      Course 4 Artist 9_instruction: "Зацикли эту структуру 10 раз и не забудь поворачивать
        после каждой нарисованной фигуры. Вот подсказка о том, на сколько градусов
        нужно будет поворачивать: Сколько будет 360 разделить на 10?"
      Course 4 Artist Binary 1_instruction: |
        Эта функция берет двоичную последовательность из единиц и нулей и дает художнику команду следовать за ними слева направо и сверху вниз.  Художник будет заполнять квадраты, когда он видит 1, и пропускать, когда он видит 0.

        Выполни этот код, чтобы увидеть, как художник использует двоичную последовательность, чтобы нарисовать этот узор.
      Course 4 Artist Binary 1a_instruction: |
        Эта функция берет двоичную последовательность из единиц и нулей и дает художнику команду следовать за ними слева направо и сверху вниз.  Художник будет заполнять квадраты, когда он видит 1, и пропускать, когда он видит 0.

        Выполни этот код, чтобы увидеть, как художник использует двоичную последовательность, чтобы нарисовать этот узор.
      Course 4 Artist Binary 2_instruction: "Какие двоичные последовательности нужно
        зациклить 8 раз, чтобы нарисовать этот рисунок?"
      Course 4 Artist Binary 3_instruction: "Можешь ли ты нарисовать этот узор, зациклив
        двоичную последовательность из трех цифр?"
      Course 4 Artist Binary 4_instruction: "Каждая двоичная последовательность соответствует
        одному ряду этого рисунка. Можешь изменить их таким образом, чтобы программа
        рисовала улыбающееся лицо вместо хмурого лица?"
      Course 4 Artist Binary 5_instruction: "Какую двоичную последовательность из
        6 цифр нужно повторить 11 раз, чтобы нарисовать это изображение?"
      Course 4 Artist Binary 6_instruction: "Какую самую короткую двоичную последовательность
        ты можешь повторить, чтобы нарисовать этот рисунок?"
      Course 4 Artist Binary 7_instruction: "Закончи рисунок."
      Course 4 Artist Binary Free Play 2_instruction: "Свободная игра: Вот пустой
        холст, на котором ты можешь рисовать.  Развлекайся!"
      Course 4 Artist Binary Free Play 2a_instruction: |
        Перед тобой холст с более высоким разрешением, чтобы рисовать на нем, — 16 пикселей на 16 пикселей!

        Посмотри, что произойдет, когда мы начнем творить с помощью битов?
      Course 4 Artist Binary Free Play 2b_instruction: "Нажми сюда, чтобы воспользоваться
        подсказками."
      Course 4 Artist Binary Free Play_instruction: "Свободная игра: Рисуй все, что
        угодно, с помощью двоичного представления!"
      Course 4 Artist Binary pre1_instruction: |
        Двоичное представление — это способ представления информации посредством использования только двух сигналов.  А именно, мы собираемся использовать сигнал «выкл» (представленный числом 0) и сигнал «вкл» (представленный числом 1).

        Мы привели для тебя сетку из «пикселей», по которой ты можешь перемещаться и создавать рисунки, подавая сигнал «вкл» только на определенные квадраты.  Можешь заставить художника нарисовать «01010101» в двоичной последовательности в первом ряду?
      Course 4 Artist Binary ryan_instruction: |
        Двоичное представление — это способ представления информации посредством использования только двух сигналов.  А именно, мы собираемся использовать сигнал «выкл» (представленный числом 0) и сигнал «вкл» (представленный числом 1).

        Мы привели для тебя сетку из «пикселей», по которой ты можешь перемещаться и создавать рисунки, подавая сигнал «вкл» только на определенные квадраты.  Можешь заставить художника нарисовать «01010101» в двоичной последовательности в первом ряду?
      Course 4 Artist For  Functions 10_instruction: "Давай немного поднажмем; можешь
        нарисовать звезду, используя функцию «нарисовать ряд квадратов»? Удачи!"
      Course 4 Artist For  Functions 11_instruction: "Давай немного поднажмем; можешь
        нарисовать звезду, используя функцию «нарисовать ряд квадратов»? Удачи!"
      Course 4 Artist For Loops 1_instruction: "Нарисуй этот треугольник, ширина которого
        — 50 пикселей. Подсказка: используй блок «повторить»."
      Course 4 Artist For Loops 10_instruction: "Время Свободной игры! Рисуй все,
        что тебе нравится, с помощью блоков, которые ты уже изучил"
      Course 4 Artist For Loops 11_instruction: "Вспомни предыдущий этап, когда мы
        использовали переменную для управления числом сторон фигуры? Теперь мы собираемся
        выполнить аналогичное действие с переменной «счетчик». В основе этого шаблона
        лежит треугольник, к которому добавляется по одной стороне за раз, пока фигура
        не станет десятиугольником (10 сторон). Длина каждой стороны должна быть 100
        пикселей. Подсказка: Разделив 360 градусов на число сторон фигуры, ты получишь
        количество градусов, на которое нужно поворачивать."
      Course 4 Artist For Loops 11a_instruction: |
        Давай соберем все вместе!  Используя уже освоенные тобой циклы со счетчиком и «счетчик», создай рисунок, где у каждой фигуры будет в два раза больше сторон, чем у предыдущей.  Убедись в том, что каждая сторона в 10 раз длиннее количества сторон многоугольника.

        Здесь приведена для тебя совсем небольшая часть кода.
      Course 4 Artist For Loops 12_instruction: "Это выглядело довольно здорово, но
        теперь я бы хотел рисовать каждую фигуру рядом с предыдущей. На этот раз длина
        каждой стороны — 20 пикселей. Используй блок «прыгнуть», чтобы прыгать на
        40 пикселей вперед после каждой фигуры. "
      Course 4 Artist For Loops 13_instruction: "Хм, эти фигуры становятся все больше
        и больше! Мы еще не решили эту задачу с переменными? Как мы можем использовать
        переменную «счетчик», чтобы сделать стороны короче (так как их количество
        увеличилось)? Вместо перемещения вперед на установленное количество пикселей,
        попробуй двигаться вперед, используя структуру «(100 / значение переменной
        «счетчик») пикселей»."
      Course 4 Artist For Loops 14_instruction: "Если ты будешь поворачивать немного
        больше или меньше, чем ты обычно поворачивал для рисования определенной фигуры,
        это создаст интересный эффект. Попробуй использовать часть кода с предыдущего
        уровня, но поворачивать на 89 градусов, чтобы создать витую квадратную спираль."
      Course 4 Artist For Loops 15_instruction: "Свободная игра: Сделай несколько
        рисунков самостоятельно, используя циклы со счетчиком. Также мы добавили для
        тебя несколько полезных переменных."
      Course 4 Artist For Loops 2_instruction: "Я поместил код для рисования треугольника
        внутрь цикла со счетчиком, который считает от 50 до 100 с шагом 10.  ПРИМЕЧАНИЕ:
        Обязательно проверь код перед тем, как нажать «Выполнить»."
      Course 4 Artist For Loops 3_instruction: "Чтобы выполнить эту головоломку, используй
        предыдущую в качестве образца.  Длина каждой из сторон наименьшего треугольника
        — 20 пикселей, наибольшего — 200 пикселей, а длина сторон каждого следующего
        треугольника на 20 пикселей больше, чем предыдущего. "
      Course 4 Artist For Loops 4_instruction: "Как бы ты применил то, чему уже научился,
        чтобы нарисовать эти квадраты? Их длина начинается с 15 пикселей, длина самого
        крупного — 300 пикселей, а длина каждого следующего квадрата на 15 пикселей
        больше, чем предыдущего. "
      Course 4 Artist For Loops 5_instruction: "Ты отлично справился с предыдущей
        головоломкой! Давай используем блок переменной «счетчик» еще раз, чтобы нарисовать
        эту замечательную картинку. "
      Course 4 Artist For Loops 6_instruction: "Свободная игра! Используй цикл со
        счетчиком, чтобы нарисовать увеличивающуюся фигуру на свой выбор."
      Course 4 Artist For Loops 6a_instruction: "Чтобы выполнить это задание, сделай
        три небольших изменения в коде предыдущего уровня!"
      Course 4 Artist For Loops 7_instruction: "Что произойдет, если ты удалишь блок
        «повторить 3 раза» из этого алгоритма, оставив в цикле со счетчиком блоки
        «двигаться» и «поворот»? В этом треугольнике, располагающемся по спирали,
        каждая следующая сторона на 20 пикселей длиннее, чем предыдущая."
      Course 4 Artist For Loops 8_instruction: |
        Ты можешь нарисовать этот рисунок, внеся лишь одно небольшое изменение в код предыдущего рисунка. Догадываешься, что это за изменение?

        Подсказка:  Тебе нужно кое-что удалить!
      Course 4 Artist For Loops 8a_instruction: "Ты можешь нарисовать этот рисунок,
        внеся лишь одно небольшое изменение в код предыдущего рисунка. Догадываешься,
        что это за изменение?"
      Course 4 Artist For Loops 9_instruction: "Можешь нарисовать спираль? Двигайся
        вперед, в границах от 1 до 75 пикселей, с каждым шагом прибавляя 1 пиксель."
      Course 4 Artist For Loops Challenge_instruction: |
        Догадываешься, как нужно использовать все элементы, которые ты уже изучил, чтобы нарисовать этот рисунок?

        Нужна подсказка? Нажми здесь.
      Course 4 Artist For Loops inspire_instruction: |
        Вдохновляющий рисунок для свободной игры: Ты уже изучил все, что нужно знать, чтобы нарисовать такой узор! Если тебя вдохновляет этот рисунок, попробуй нарисовать что-нибудь подобное. В противном случае нарисуй, что хочешь.

        Нужна подсказка? Нажми здесь.
      Course 4 Artist Functions 1_instruction: "Можешь нарисовать квадрат длиной 100
        пикселей, используя цикл?"
      Course 4 Artist Functions 10_instruction: "Какой блок нужно добавить, чтобы
        поставить треугольник сверху квадрата?"
      Course 4 Artist Functions 11_instruction: "Проверь этот код, который рисует
        куб. Можешь перенести его в функцию «нарисовать куб»?"
      Course 4 Artist Functions 12.1_instruction: "Давай напишем функцию «нарисовать
        восьмиугольник 20», рисующую восьмиугольник, длина каждой стороны которого
        — 20 пикселей."
      Course 4 Artist Functions 12_instruction: "Зацикли функцию «квадрат», чтобы
        нарисовать линию"
      Course 4 Artist Functions 13.1_instruction: |
        Теперь, чтобы завершить этот узор, создадим функцию «прыгнуть в правый верхний угол», которая перемещает художника в правый верхний угол только что нарисованного восьмиугольника.

        Подсказка:  Для перемещения в правый верхний угол попробуй прыгать по шаблону, который занимает 3/8 восьмиугольника.
      Course 4 Artist Functions 13_instruction: "Посмотри, у нас новая функция «нарисовать
        ряд квадратов». Не стесняйся заглянуть внутрь блока функции, чтобы посмотреть,
        как она работает. Нажми «Выполнить», когда будешь готов к следующей головоломке."
      Course 4 Artist Functions 14.1_instruction: "А теперь создадим функцию «прыгнуть
        в правый верхний угол», которая перемещает художника в правый верхний угол
        восьмиугольника, чтобы завершить рисование этого узора."
      Course 4 Artist Functions 14_instruction: "Отличная работа! Давай воспользуемся
        твоей новой функцией «нарисовать ряд квадратов», чтобы нарисовать фигуру,
        образующую Квадрат. Не забудь, длина каждого квадрата — 40 пикселей."
      Course 4 Artist Functions 15_instruction: "Давай немного поднажмем; можешь нарисовать
        фигуру в виде звезды, используя функцию «нарисовать ряд квадратов»? Удачи!
        Подсказка: возможно, тебе будет нужно повернуть на 144 градуса"
      Course 4 Artist Functions 2_instruction: "Можешь нарисовать 3 квадрата на расстоянии
        20 пикселей друг от друга? Подсказка: размер каждого квадрата — 100 пикселей"
      Course 4 Artist Functions 3_instruction: "Сможешь нарисовать этот рисунок, используя
        функцию «нарисовать квадрат»? Подсказка: квадраты расположены на расстоянии
        120 пикселей друг от друга."
      Course 4 Artist Functions 4_instruction: "Ты готов создать собственный блок
        функции? Нажми на блок «Функции» на панели инструментов, назови функцию «нарисовать
        треугольник», затем нарисуй треугольник так, как ты делал это ранее с помощью
        блоков «Действие» и «Циклы». Затем нажми «Сохранить и закрыть» в правом верхнем
        углу. Подсказка: Нарисуй треугольник длиной 100 пикселей. Удачи!"
      Course 4 Artist Functions 5 OLD_instruction: "Попробуем воспользоваться нашими
        двумя функциями, чтобы нарисовать дом; что нужно исправить в коде, чтобы нарисовать
        дом правильно?"
      Course 4 Artist Functions 5_instruction: "Сможешь нарисовать этот рисунок, используя
        функцию «нарисовать квадрат»? Подсказка: квадраты расположены на расстоянии
        120 пикселей друг от друга."
      Course 4 Artist Functions 6_instruction: "Какой блок нужно добавить, чтобы поставить
        треугольник сверху квадрата?"
      Course 4 Artist Functions 7_instruction: "Сможешь нарисовать ряд квадратов,
        используя функцию «Квадрат»? Длина каждого квадрата — 40 пикселей."
      Course 4 Artist Functions 8_instruction: "Ты понимаешь, как использовать блоки
        функции? Давай изменим этот квадрат таким образом, чтобы его размер составлял
        200 пикселей. Подсказка: нажми «изменить», чтобы изменить размер в редакторе
        функции «нарисовать квадрат». Не забудь нажать «сохранить и закрыть», чтобы
        выйти из редактора функции. "
      Course 4 Artist Functions 9_instruction: "Мы привели для тебя большую часть
        кода для создания функции. Однако, кажется, чего-то не хватает. Можешь дописать
        до конца этот блок функции?"
      Course 4 Artist Functions challenge_instruction: "Нажми здесь, чтобы еще раз
        увидеть подсказки."
      Course 4 Artist Functions Inspiration_instruction: "Нажми здесь, чтобы еще раз
        увидеть подсказки."
      Course 4 Artist Functions inspire_instruction: "Нажми здесь, чтобы еще раз увидеть
        вдохновляющий рисунок."
      Course 4 Artist Inspire_instruction: |
        Хочешь еще раз взглянуть на пример структуры или на подсказки?  Нажми здесь!

        В противном случае пиши структуру самостоятельно!
      Course 4 Artist Params 1_instruction: "Давай внесем изменения в функцию, которая
        рисует квадрат со сторонами длиной 50 пикселей"
      Course 4 Artist Params 10_instruction: "Ты можешь вызывать функции, размещенные
        внутри других функций! Взяв за основу функцию «фигура», нарисуй 3 фигуры домиков,
        каждая из которых на 20 пикселей больше, чем предыдущая, начиная с 50 пикселей
        в длину. Может быть полезно использовать цикл со счетчиком. "
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: "Используй функцию «вертушка», чтобы
        нарисовать все эти фигуры. Длина стороны для каждого рисунка — 50."
      Course 4 Artist Params 13_instruction: "Свободная игра: Вот несколько функций,
        написанных тобой, и еще несколько функций, с которыми ты можешь поэкспериментировать.
        Нарисуй что-нибудь классное!"
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: "Потрясающе, можешь нарисовать все эти
        треугольники с помощью данной новой функции? Длина первого треугольника —
        25 пикселей, длина второго —50 пикселей, длина третьего — 75 пикселей. "
      Course 4 Artist Params 4_instruction: "Можешь добавить новую функцию «квадрат»?
        Она также должна взять параметр «длина», как и функция для рисования треугольников.
        В этот раз нарисуй 3 квадрата длиной 25, 50 и 75 пикселей на расстоянии 100
        пикселей друг от друга."
      Course 4 Artist Params 5_instruction: "Используй обе свои новые функции, чтобы
        нарисовать этот рисунок. Чтобы упростить решение, используй цикл с параметром
        «счетчик». "
      Course 4 Artist Params 6_instruction: "Давай внесем изменения в функцию «нарисовать
        фигуру». Она уже включает в себя параметр «длина». Теперь давай внесем изменения
        в функцию и добавим также параметр «стороны». Помни, что угол поворота для
        данной фигуры вычисляется путем деления 360 градусов на количество сторон
        фигуры. Подсказка: длины сторон для каждой фигуры имеют следующие значения
        — 100 пикселей для треугольника, 25 пикселей для шестиугольника и 50 пикселей
        для квадрата. "
      Course 4 Artist Params 7_instruction: "Сможешь нарисовать эти фигуры, проставив
        значение в поле «???» Размер квадрата и треугольника — 100 пикселей, тогда
        как размер шестиугольника — 75 пикселей. "
      Course 4 Artist Params 8_instruction: "Догадываешься, как нарисовать эту фигуру?
        Вот подсказка: создай новую функцию «шестиугольник» с 6 сторонами. "
      Course 4 Artist Params 9_instruction: "Помнишь, как мы использовали цикл «счетчик»,
        но удаляли цикл, который был внутри него? Давай немного повеселимся и воспользуемся
        функцией «нарисовать фигуру» с параметрами «стороны» и «длина». Сможешь воссоздать
        эти фигуры? Счетчик для квадрата должен выглядеть так: 5/100/5, для треугольника
        — 10/100/10 и для шестиугольника — 2/100/2."
      Course 4 Artist Var 9_instruction: "Это алгоритм для рисования треугольника,
        измени его таким образом, чтобы он использовал переменную «стороны» вместо
        текущего значения. Замени число 3 переменной «стороны». Подсказка: не забывай
        использовать блок «задать стороны»."
      Course 4 Artist Vars 1_instruction: "Поможешь мне нарисовать равносторонний
        треугольник? Длина каждой его стороны должна быть ровно 100 пикселей."
      Course 4 Artist Vars 10_instruction: "Вот алгоритм, который рисует треугольник
        из треугольников меньшего размера. Можешь изменить этот алгоритм таким образом,
        чтобы при рисовании каждого треугольника он использовал переменную «стороны»?
        Просмотри код и каждый раз, когда встретишь цифру 3, замени ее переменной
        «стороны». Не забывай использовать блок «задать стороны»."
      Course 4 Artist Vars 11_instruction: "Вот более сложный код, использующий те
        же понятия, что и предыдущая головоломка; как следует изменить переменную
        «стороны», чтобы нарисовать рисунок из квадратов?"
      Course 4 Artist Vars 12_instruction: "Давай присвоим переменной «стороны» значение
        «5». Чем больше сторон мы добавляем в этот алгоритм, тем обширнее становится
        узор в целом! Обрати внимание на наличие другой переменной «длина». Теперь
        мы можем ее использовать каждый раз, когда необходимо «двигаться вперед».
        Задай значение переменной «длина» для этой фигуры, равное 75."
      Course 4 Artist Vars 13_instruction: |
        Когда у фигуры много сторон, необходимо сделать короче каждую сторону, если ты хочешь, чтобы весь узор помещался на экране.
        Давай воссоздадим алгоритм рисования данного изумительного узора, но вместо того, чтобы устанавливать значение переменной «длина» вручную, давай используем блок математических операций с переменной «стороны» внутри для корректного отображения каждой фигуры. Периметр каждого многоугольника — 300 пикселей.
        Нужны подсказки?  Нажми здесь.
      Course 4 Artist Vars 14_instruction: |
        Свободная игра: Смотри! Теперь твой алгоритм вложен в еще один цикл. Экспериментируй, изменяя значения двух своих переменных, чтобы нарисовать классные узоры.

        Для достижения еще более интересного эффекта попробуй поиграть с цветом!  Используй случайные цвета внутри циклов, чтобы увидеть, как это изменит твой рисунок.
      Course 4 Artist Vars 2_instruction: "Вместо использования команды «двигаться
        вперед на 150» блок «двигаться» теперь ссылается на переменную «длина». Можешь
        задать значение переменной «длина», равное 150, чтобы нарисовать этот новый
        треугольник?"
      Course 4 Artist Vars 3_instruction: "Вот цикл, который рисует квадрат, но чего-то
        не хватает. Можешь исправить его таким образом, чтобы он использовал переменную
        «длина» для вычисления длины каждой стороны? "
      Course 4 Artist Vars 4_instruction: "Теперь я хочу нарисовать прямоугольник,
        высота которого в два раза больше ширины. Мы ввели переменную «ширина», которой
        необходимо присвоить значение 100. Можешь воспользоваться математическими
        блоками, чтобы дописать код?"
      Course 4 Artist Vars 5_instruction: "Используй переменную «стороны», чтобы определить,
        сколько раз будет выполнен этот цикл."
      Course 4 Artist Vars 6_instruction: |
        Вот код, который может нарисовать любой правильный многоугольник. Здесь введена новая переменная «стороны», которой присвоено значение «4». Можешь использовать переменную «стороны» (вместе с математическим блоком), чтобы повернуть на достаточное количество градусов, независимо от того, сколько сторон в прямоугольнике?

        Нажми здесь, чтобы вернуться к подсказке!
      Course 4 Artist Vars 7_instruction: |
        Используй полученные знания, чтобы нарисовать этот шестиугольник с помощью переменной «стороны».

        Как можно нарисовать треугольник, квадрат, пятиугольник или восьмиугольник, изменив только одно значение?
      Course 4 Artist Vars 8_instruction: "Свободная игра: Экспериментируй с количеством
        сторон этой фигуры. Можешь изменить алгоритм таким образом, чтобы общий размер
        фигуры оставался неизменным независимо от того, сколько у нее сторон? Подсказка:
        Если ты разделишь начальную длину на количество сторон, длина каждой стороны
        будет тем короче, чем больше будет количество сторон."
      Course 4 Artist Vars 9_instruction: "Измени этот алгоритм таким образом, чтобы
        при рисовании треугольника он использовал переменную «стороны» вместо фиксированного
        числа. Не забывай использовать блок «задать стороны»."
      Course 4 Bee 1_instruction: "Пчела не может сказать, что под облаком! Используй
        блок «если», чтобы проверить, есть ли под облаком цветок, и если есть, собери
        с него нектар. "
      Course 4 Bee 2_instruction: "Используй блок «если/иначе», чтобы проверить каждый
        объект и понять, цветок это или сота. Если это цветок, собери нектар... в
        противном случае приготовь мед!"
      Course 4 Bee 3_instruction: "Неизвестный объект может быть цветком или сотой.
        На этот раз используй блок «если/иначе», чтобы собрать нектар, если это цветок,
        или чтобы приготовить мед в противном случае (потому что тогда объект является
        сотой)."
      Course 4 Bee 4_instruction: "В этом фиолетовом цветке может быть 3, 2 или 1
        порция нектара. Здесь блок «если/иначе» объединен с другим блоком «если/иначе»
        для создания оператора «если, иначе / если, иначе». Дополни это решение, чтобы
        собрать неизвестное количество нектара."
      Course 4 Bee 5_instruction: "В этом фиолетовом цветке может быть 3, 2 или 1
        порция нектара. Добавь блок «если-иначе», чтобы создать блок «если, иначе-если,
        иначе». Дополни это решение, чтобы собрать неизвестное количество нектара."
      Course 4 Bee 6_instruction: "В этом фиолетовом цветке может быть 3, 2 или 1
        порция нектара. Создай блок «если, иначе-если, иначе», чтобы собрать неизвестное
        количество нектара."
      Course 4 Bee 7_instruction: "Используй все знания, полученные на текущий момент,
        чтобы собрать весь нектар. В фиолетовом цветке может быть 3, 2 или 1 порция
        нектара."
      Course 4 Bee For Loops 1_instruction: "Используй цикл, чтобы собрать нектар
        с каждого цветка."
      Course 4 Bee For Loops 10_instruction: "Если твой цикл считает в обратном направлении,
        то величина приращения вычитается из твоей переменной «счетчик» при каждой
        итерации цикла. Какой должна быть величина приращения, чтобы собрать 9, затем
        6, а затем 3 порции нектара?"
      Course 4 Bee For Loops 11_instruction: "Что не так с этим циклом? Подумай, можешь
        ли ты исправить ошибку, чтобы пчела смогла собрать весь нектар."
      Course 4 Bee For Loops 2_instruction: "Это новый вид цикла, именуемый циклом
        со счетчиком. Данный конкретный цикл со счетчиком будет считать от 1 до 5
        с шагом 1 и выполнять содержимое цикла при каждом шаге. Помоги Пчеле собрать
        нектар."
      Course 4 Bee For Loops 3_instruction: "Ты можешь решить эту головоломку, используя
        цикл со счетчиком, который считает от 1 до 3 с шагом 1. Теперь давай соберем
        немного нектара!"
      Course 4 Bee For Loops 4_instruction: "Собери весь нектар с этих цветов. Интересно,
        есть ли более простой способ это сделать..."
      Course 4 Bee For Loops 5_instruction: "Вот, цикл со счетчиком позволит сделать
        это намного проще! Путем использования переменной «счетчик» цикла со счетчиком
        для зацикливания блока «собрать нектар» то же количество раз, которое выполняется
        цикл. Ого! Тут много циклов. Здесь приведен весь код, который тебе нужен,
        посмотри, как он объединен вместе, затем нажми «Выполнить» и увидишь, как
        это работает. "
      Course 4 Bee For Loops 6_instruction: "Ты также можешь использовать цикл со
        счетчиком для обратного отсчета. Попробуй собрать этот нектар, считая от 5
        до 1 с шагом 1."
      Course 4 Bee For Loops 7_instruction: "Используй переменную «счетчик» цикла
        со счетчиком, чтобы регулировать перемещение по горизонтали."
      Course 4 Bee For Loops 8_instruction: "Можешь использовать переменную цикла,
        чтобы регулировать перемещение и сбор нектара?"
      Course 4 Bee For Loops 9_instruction: "Последнее число в твоем цикле со счетчиком
        называется «приращение» и при каждом выполнении цикла значение переменной
        «счетчик» меняется на величину приращения. Попробуй собрать эти цветы с величиной
        приращения, равной 2."
      Course 4 Bee Loops 5 NEW_instruction: "Вот три цветка. Можешь найти набор команд,
        который следует повторить трижды, чтобы собрать нектар, используя как можно
        меньше блоков?"
      Course 4 Bee Loops 5a NEW_instruction: "А теперь используй циклы с наименьшим
        количеством блоков, чтобы помочь пчеле собрать весь нектар по дороге к соте.
        \ Когда доставишь ее туда, не забудь сделать мед!"
      Course 4 Bee Params 1_instruction: "Воспользуйся функцией «собрать 3 порции
        нектара», которая позволяет поворачиваться и перемещаться, чтобы собрать нектар,
        а затем возвращает в исходное положение. Напиши последовательность, чтобы
        собрать весь нектар с помощью функции «собрать 3 порции нектара»."
      Course 4 Bee Params 2_instruction: "Измени функцию «собрать 3 порции нектара»
        таким образом, чтобы она повернула меня направо, а не налево к цветам."
      Course 4 Bee Params 3 (copy 1)_instruction: "Теперь здесь цветы с обеих сторон!
        Может, воспользуемся параметром, чтобы одна и та же функция работала для цветов
        справа и слева. Параметр «направление» добавлен к функции. Если параметр «направление»
        равен 0, нужно повернуть налево, если он равен 1 — направо."
      Course 4 Bee Params 3_instruction: "Теперь здесь цветы с обеих сторон! Мы добавили
        переменные «налево» и «направо», которыми ты можешь воспользоваться, а также
        добавили в функцию «собрать 3 порции нектара» параметр «направление». Измени
        функцию «собрать 3 порции нектара» таким образом, чтобы пчела поворачивала
        в правильном направлении, когда переменные «слева» и «справа» передаются в
        функцию.  "
      Course 4 Bee Params 4 (copy 1)_instruction: "Попробуй использовать свою новую
        функцию, чтобы собрать все цветы. Помни, 0 = налево и 1 = направо."
      Course 4 Bee Params 4 - Two WhenRun_instruction: "Попробуй использовать свою
        новую функцию, чтобы собрать все цветы. Не забудь использовать переменные
        «налево» и «направо»."
      Course 4 Bee Params 4 backup_instruction: "Правда же, было бы неплохо, если
        бы мы могли собрать весь нектар, используя только одну функцию? Попробуй добавить
        в свою функцию новый параметр «порции нектара», чтобы управлять количеством
        собираемого нектара. Возможно, ты захочешь переименовать и саму функцию!"
      Course 4 Bee Params 4_instruction: "Попробуй использовать свою новую функцию,
        чтобы собрать нектар со всех цветов. Не забудь использовать переменные «налево»
        и «направо»."
      Course 4 Bee Params 5_instruction: "Начнем с нуля; можешь создать новую функцию
        «получить 5 порций нектара» с параметром «направление»?"
      Course 4 Bee Params 6 (copy 1)_instruction: "Попробуй использовать свою новую
        функцию, чтобы собрать весь нектар."
      Course 4 Bee Params 6_instruction: "Правда же, было бы неплохо, если бы мы могли
        собрать весь нектар, используя только одну функцию? Попробуй добавить в свою
        функцию новый параметр «порции нектара», чтобы управлять количеством собираемого
        нектара. Возможно, ты захочешь переименовать и саму функцию!"
      Course 4 Bee Params 7 (copy 1)_instruction: "Попробуй использовать свою новую
        функцию, чтобы собрать весь нектар."
      Course 4 Bee Params 7_instruction: "Попробуй использовать свою новую функцию,
        чтобы собрать весь нектар."
      Course 4 Bee Params 8 Clone 2_instruction: "Ох, теперь нужно еще и мед готовить!
        Как можно изменить твою функцию, чтобы или собирать нектар, или готовить мед."
      Course 4 Bee Params 8 clone 3_instruction: "Ох, теперь нужно еще и мед готовить!
        Как можно изменить твою функцию, чтобы или собирать нектар, или готовить мед."
      Course 4 Bee Params 8 Clone_instruction: "Ох, теперь нужно еще и мед готовить!
        Как можно изменить твою функцию, чтобы или собирать нектар, или готовить мед."
      Course 4 Bee Params 8 new_instruction: "Ох, теперь нужно еще и мед готовить!
        Как можно изменить твою функцию, чтобы или собирать нектар, или готовить мед."
      Course 4 Bee Params 8_instruction: "Задача: Теперь нужно еще и мед готовить!
        Перепиши свою функцию таким образом, чтобы учитывать и количество порций меда,
        и количество порций нектара.  Как бы ты использовал эти числа, чтобы решить,
        что делать?"
      Course 4 Bee Params Ex_instruction: "Попробуй использовать свою новую функцию,
        чтобы собрать весь нектар."
      Course 4 Binary 1_instruction: "Эта функция берет двоичную последовательность
        единиц и нулей, и указывает фермеру идти слева направо, сверху вниз и поворачивать
        на клетках, содержащих значение «0». Запусти предоставленный код, чтобы посмотреть,
        как фермер использует двоичное представление для рисования картинки."
      Course 4 Binary 2_instruction: "Какую двоичную последовательность ты можешь
        зациклить 8 раз, чтобы нарисовать это изображение? Подсказка: число «1» вызывает
        заполнение ямы."
      Course 4 Binary 3_instruction: "Можешь нарисовать этот узор, зациклив одну единственную
        двоичную последовательность?"
      Course 4 Binary 5 (copy 1)_instruction: "Какая двоичная последовательность,
        повторенная 10 раз, нарисует это изображение?"
      Course 4 Binary 5_instruction: "Какая двоичная последовательность, повторенная
        10 раз, нарисует это изображение?"
      Course 4 Binary 6 (copy 1)_instruction: "Какая двоичная последовательность,
        повторенная 10 раз, нарисует это изображение?"
      Course 4 Binary 6_instruction: "Какая двоичная последовательность, повторенная
        10 раз, нарисует это изображение?"
      Course 4 Binary 7_instruction: "Какая двоичная последовательность, повторенная
        10 раз, нарисует это изображение?"
      Course 4 Binary 8_instruction: "Ты можешь дорисовать большую часть этого изображения,
        зациклив 5-битное двоичное число, затем нужно будет еще одно 4-битное число
        для правого нижнего угла."
      Course 4 EC 1a_instruction: "Никаких правил. Никаких подсказок. Только задание!"
      Course 4 EC 1b_instruction: "Никаких правил. Никаких подсказок. Только задание!"
      Course 4 EC 2a_instruction: "** Экстремальное задание: ** Никаких правил. Никаких
        подсказок. Просто задание!"
      Course 4 EC 2b_instruction: "Никаких правил. Никаких подсказок. Только задание!"
      Course 4 EC 2c_instruction: "Никаких правил. Никаких подсказок. Только задание!"
      Course 4 EC 2d_instruction: "Никаких правил. Никаких подсказок. Только задание!"
      Course 4 EC 3_instruction: "Используй то, что ты изучили на предыдущем уровне,
        чтобы нарисовать такое же изображение. Примечание: Использование параметров
        поможет упростить код. "
      Course 4 EC 3a_instruction: "Экстремальное задание: Никаких правил. Никаких
        подсказок. Только задание!"
      Course 4 Maze 1_instruction: "Помоги сердитой птице добраться до свиньи!"
      Course 4 Maze 2_instruction: "Остерегайся взрывчатки!"
      Course 4 Maze 3_instruction: "Запрограммируй сердитых птиц, чтобы добраться
        до свиньи. "
      Course 4 Maze 4_instruction: "Попробуй применить блок «повторить», чтобы уменьшить
        количество блоков, используемых при решении этой головоломки..."
      Course 4 Maze 5_instruction: "Можешь решить эту задачу, используя как можно
        меньше блоков?"
      Course 4 Maze 6_instruction: "Можешь решить эту задачу, используя как можно
        меньше блоков?"
      Course 4 Play Lab For Loops 2_instruction: "На этот раз попробуй перечислить
        нечетные числа от 1 до 100."
      Course 4 Play Lab Params 1_instruction: "Это функция «прыгнуть», которая заставляет
        твоего основного персонажа прыгать на 100 пикселей. Используй функцию «прыгнуть»,
        чтобы собрать все флажки."
      Course 4 Play Lab Params 10_instruction: |
        Мы добавили еще одну последнюю функцию для тебя.

        Используй оператор «если», чтобы запрограммировать свою игру на вызов функции «на уровень вверх», когда значение «очки_игрока» становится больше определенного числа.

        Например, «очки_игрока» > 6

        Сыграй в игру и пройди 4 уровень, чтобы перейти к следующей головоломке.
      Course 4 Play Lab Params 2_instruction: |
        Теперь наши флажки расположены выше, чем мы сейчас можем прыгнуть! Давай воспользуемся стрелками «вверх» и «вниз», чтобы получить возможность увеличить высоту прыжка.

        Нам нужно добавить в нашу функцию «прыгнуть» параметр «высота».  Необходимо, чтобы при нажатии на стрелку «вверх» собака прыгала на 200 пикселей, а при нажатии на стрелку «вниз» — всего на 100 пикселей.

        Подсказка: Тебе нужно будет нажать опцию «изменить» в функции «прыгнуть» и обновить ее таким образом, чтобы она использовала параметр «высота».
      Course 4 Play Lab Params 3_instruction: "Мы добавили в функцию «прыгнуть» другой
        параметр, который мы можем использовать для других персонажей. Каждый персонаж
        представлен числом, начиная с единицы. Измени функцию «прыгнуть» таким образом,
        чтобы она использовала параметр «персонаж» для вызова прыжка нужного персонажа. "
      Course 4 Play Lab Params 4_instruction: "Это функция «патруль». Измени ее, чтобы
        переместить кота на 400 пикселей вверх, а затем на 400 пикселей вниз."
      Course 4 Play Lab Params 5_instruction: "Добавь в функцию «патруль» параметр
        «персонаж», чтобы можно было вызвать эту функцию для каждого персонажа на
        экране. Помни, что персонажи соответствуют номерам 1, 2 и 3."
      Course 4 Play Lab Params 6_instruction: "Добавь в функцию «патруль» еще один
        параметр под названием «скорость». Используй блок «задать скорость» с новым
        параметром «скорость», чтобы помочь пингвину собрать оба флажка, прежде чем
        другие объекты получат хотя бы один."
      Course 4 Play Lab Params 7_instruction: |
        Давай немного повеселимся! Посмотри на предоставленный код и попробуй догадаться, как узнать, что делает каждый блок.

        Используй клавиши стрелок, чтобы управлять собакой и собрать все флажки.
      Course 4 Play Lab Params 8_instruction: "Используй блок «когда персонаж касается»,
        чтобы отправить собаку обратно в левый верхний угол, ТОЛЬКО если собака коснется
        кого-либо из других персонажей."
      Course 4 Play Lab Params 9_instruction: |
        Вот наша игра с предыдущего этапа, но большая часть кода скрыта. Появилась новая функция «зарабатывать_очки».

        Измени функцию таким образом, чтобы в переменную «очки_игрока» добавился параметр «очки».

        Значение переменной «очки_игрока» должно увеличиваться каждый раз, когда собака попадает сердечками в кота, и уменьшаться каждый раз, когда Кот попадает сердечками в собаку.

        Примечание: Когда закончишь, нажми «Выполнить», чтобы запустить игру.  Когда собака наберет 6 очков, ты сможешь перейти к следующей головоломке.
      Course 4 Play Lab Vars 1_instruction: "На этот раз тебе не придется писать код,
        просто нажми «Выполнить», чтобы сыграть в игру! В этой игре ты собака, которая
        пытается собрать больше флажков, чем кот. Используй стрелку «вниз», чтобы
        управлять собакой. Нажми «Завершить», когда закончишь игру."
      Course 4 Play Lab Vars 2_instruction: "Гонка в предыдущей головоломке была не
        очень-то честной! Измени переменную «скорость_собаки», чтобы убедиться, что
        ты можешь собрать больше флажков, чем Кот. Побеждает тот, кто первым соберет
        10 флажков!"
      Course 4 Play Lab Vars 3_instruction: "Вот новый вариант игры! Используй стрелки
        «налево» и «направо» для перемещений и стрелку «вверх» для прыжков. Посмотрим,
        сможешь ли ты собрать все флажки."
      Course 4 Play Lab Vars 4_instruction: "Теперь мы используем переменную «высота»,
        чтобы управлять высотой прыжка собаки. Обнови переменную «высота», чтобы собака
        могла прыгнуть достаточно высоко и достать до всех флажков."
      Course 4 Play Lab Vars 5_instruction: "Давай напишем игру! Прежде всего нам
        понадобится счетчик очков. Измени код, который ты видел на предыдущем уровне,
        чтобы задать значение счетчика, равное 10. "
      Course 4 Play Lab Vars 6 (copy 1)_instruction: "Отлично, теперь у нас есть переменная
        «счетчик очков», но как нам ее использовать? Как насчет того, чтобы увеличивать
        значение твоей переменной «счетчик очков» каждый раз, когда ты попадаешь во
        врага огненным шаром? Используй событие «когда персонаж 2 касается», чтобы
        при попадании в кота огненными шарами твои очки обновлялись. Ты можешь увеличивать
        количество очков, задав переменную «счетчик = счетчик + 1». Заработай 10 очков
        (по одному очку за раз), чтобы пройти уровень."
      Course 4 Play Lab Vars 6_instruction: |
        Используй стрелку «вправо» для стрельбы сердцами.

        Как мы должны зарабатывать очки в нашей игре? Увеличивай значение своей переменной «очки» на 1 каждый раз, когда собака попадает в кота сердечком. Используй событие «когда персонаж 2 касается», чтобы твои очки обновлялись. Ты можешь увеличивать значение своей переменной, задав «очки = очки + 1». Заработай 10 очков (по одному очку за раз), чтобы пройти уровень.
      Course 4 Play Lab Vars 7_instruction: "Хорошо, теперь давай убедимся, что игра
        не слишком легкая. Каждый раз, когда кот (персонаж 2) попадает желтыми сердечками
        в собаку (персонаж 1), ты теряешь балл. Начни с 10 очков, чтобы было не слишком
        сложно. Пусть для прохождения уровня счет уменьшится с 10 до 0."
      Course 4 Play Lab Vars 8 (copy 1)_instruction: "Отлично, еще один последний
        момент в этой игре —давай настроим игру так, чтобы игрок мог выиграть (или
        проиграть). Используй цикл «всегда» для проверки количества очков — если их
        больше 20, враг исчезает. Если количество очков меньше 0, исчезает игрок.
        Нажми «Завершить», если игра работает так, как ты хочешь."
      Course 4 Play Lab Vars 8_instruction: "Давай настроим эту игру так, чтобы собака
        могла выиграть (или проиграть). Используй цикл «всегда» для проверки количества
        очков — если количество очков больше 20, заставь врага (кота) исчезнуть. Если
        количество очков меньше 0, заставь игрока (собаку) исчезнуть. Нажми «Завершить»,
        если игра работает так, как ты хочешь."
      Course 4 Play Lab Vars 9_instruction: |
        Время свободной игры! Вот все переменные, с которыми мы работали до настоящего момента, а также еще несколько на случай, если они тебе понадобятся.

        Посмотри. На нашей панели инструментов так много блоков, их необходимо упорядочить!  Вот, мы поместили каждый блок в соответствующую категорию.  Удели немного времени изучению всех доступных элементов. Когда закончишь просмотр, создай игру или рассказ, используя блоки повтора, переменные и события.

        Подсказка: прокрути вниз, чтобы увидеть все команды в рабочей области.
      Course 4 Play Lab Vars_instruction: "Отлично, еще один последний момент в этой
        игре —давай настроим игру так, чтобы игрок мог выиграть (или проиграть). Используй
        цикл «всегда» для проверки количества очков — если их больше 20, враг исчезает.
        Если количество очков меньше 0, исчезает игрок."
      Course 4 Play Labs For Loops 1_instruction: "Сделаем так, чтобы собака произносила
        все числа от 1 до 100. Используй цикл со счетчиком и блок «счетчик», чтобы
        персонаж произносил значение переменной «счетчик» при каждом выполнении цикла."
      Course 4 Play Labs For Loops 2_instruction: "На этот раз попробуй перечислить
        нечетные числа от 1 до 100."
      Course 4 Play Labs For Loops 3_instruction: "Если мы считаем с более крупным
        шагом, мы достигаем еще более высоких значений за то же количество времени.
        Попробуй сделать так, чтобы собака считала от 10 до 1000 с шагом 10."
      Course 4 Play Labs For Loops 4_instruction: "Может быть, полезно изменить величину
        приращения, но мы все еще считаем по линейному принципу (каждое следующее
        число расположено через один и тот же промежуток от предыдущего). Что, если
        бы я захотел отсчитывать числа в геометрической прогрессии? Ты можешь отсчитать
        1, 4, 9, 16, 25... (значение счетчика в квадрате), не меняя настроек данного
        цикла со счетчиком?"
      Course 4 Play Labs For Loops 4a_instruction: |
        А теперь соединим переменные с этапа 7 с твоей переменной «счетчик», чтобы создать кое-что интересное.

        В этой головоломке собака будет считать от 0 до 1000 с шагом, равным значению переменной «приращение».  Присвой переменной «приращение», находящейся в начале твоего кода, значение 10 и посмотри, что произойдет.
      Course 4 Play Labs For Loops 5_instruction: "На предыдущем этапе мы считали,
        вычисляя квадрат каждого числа. Попробуй изменить «счетчик в квадрате» на
        «счетчик в кубе», чтобы вычислить куб каждого числа (1, 8, 27, 64, 125, 216,
        343…)"
      Course 4 Play Labs For Loops 5a_instruction: "In this puzzle, Dog will be your\ntime
        keeper.\r\n\r\nDog will count from 0 to 30 by \"increment\".  The \"increment\"\nvariable
        will begin with a value of 1.\r\n\r\nCan you make it so that each\ntime you
        click Dog, the increment increases by 2?  Click the forward arrow\nto run
        the for loop.\r\n\r\nRun the loop a couple of times, clicking Dog before\neach
        one."
      Course 4 Play Labs For Loops 6_instruction: "Возможно, ты помнишь, что простое
        число — это любое целое число, которое делится только на себя и на 1. Используй
        функцию «если_простое», чтобы произносить только простые числа от 1 до 100."
      Course 4 Play Labs For Loops 6a_instruction: |
        Собака по-прежнему будет отсчитывать время, используя наш цикл «счетчик» с шагом, равным переменной «приращение», но на этот раз мы добавим в нашу комбинацию волшебника.  Можешь изменить код, чтобы переменная «приращение» увеличивалась на два при каждом нажатии на волшебника?

        Осторожно!  Волшебник передвигается быстро!
      Course 4 Play Labs For Loops 7_instruction: "Можешь помочь мне сказать последовательность
        чисел 1, 4, 7, 10, 13, 16, 19, 22, 25, используя цикл со счетчиком?"
      Course 4 Play Labs For Loops 7a_instruction: |
        У нас уже кое-что получилось!  А что, если мы начнем считать, сколько раз можно нажать на волшебника до того, как собака досчитает до 30?

        Добавь блоки к волшебнику таким образом, чтобы при каждом нажатии на волшебника переменная «число нажатий» увеличивалась на единицу. Пока ты можешь не обращать внимания на переменную «приращение».

        Собака начнет считать после нажатия кнопки «Выполнить».
      Course 4 Play Labs For Loops 8_instruction: |
        Теперь помоги персонажам двигаться в то время, как они считают.

        Собака должна двигаться и считать, прибавляя 2 (значение счетчика + 2) при каждом счете.  Кот будет двигаться и считать, умножая на 2 (значение счетчика * 2) при каждом счете. Пингвин будет двигаться и возводить в квадрат (значение счетчика в квадрате ^ 2) при каждом счете.  Кто доберется до флага первым?
      Course 4 Play Labs For Loops 8a_instruction: |
        Для завершения игры нам нужно возвратить переменную «приращение»!    Давай привяжем ее к уровню игры.

        1) Продолжай считать число нажатий на волшебника.
        2) Если до того, как собака досчитает до 30, количество нажатий на волшебника будет не менее 10, увеличь значение «приращения» на 1 и начни снова.
        3) Если количество нажатий на волшебника не превысит 10, игра окончена.
      Course 4 Playlab For Loop Freeplay_instruction: |
        Свободная игра: Используйте все, что вы
        научились до сих пор, чтобы сделать игру, которая включает в себя `for` цикл!
      Course 4 Playlab For Loops 4b_instruction: "Теперь, эти два персонажа готовятся\nк
        гонке! \r\n\r\nКаждый из них будет двигаться `counter` шагов, но их\nсчетчики
        будут иметь различные значения из-за `for` циклов. \r\n\r\nМожете ли\nвы изменить
        приращение в одном из циклов, так чтобы была ничья?"
      Course 4 Playlab For Loops 5b_instruction: |
        Настройте интервалы на этих `for`
        циклах таким образом, что два героя закончили в одном и том же месте.
      Course 4 Playlab For Loops 6b_instruction: "Редактируйте этот `for` цикл для
        создания\nигры, которая развеселит вас! \r\n\r\nНажмите кнопку \"Выполнить\"
        и нажмите на Мадам\nЕдинорог четыре раза, чтобы выиграть. "
      Course 4 SCF 1_instruction: "Используй предложенные функции, чтобы нарисовать
        четыре ряда шестиугольников. Видишь, что четные ряды смещены вправо?"
      Course 4 SCF 1a_instruction: "Догадываешься, как собрать весь этот нектар, используя
        как можно меньше блоков?"
      Course 4 SCF 1b_instruction: "Догадываешься, как собрать весь этот нектар, используя
        как можно меньше блоков?"
      Course 4 SCF 2_instruction: "Используй то, что ты изучили на предыдущем уровне,
        чтобы нарисовать такое же изображение. Примечание: Использование параметров
        поможет упростить код. "
      Course 4 SCF 3 Fail 1_instruction: "Догадываешься, как..."
      Course 4 SCF 3 Fail 2_instruction: "Догадываешься, как..."
      Course 4 SCF 3_instruction: "Используй то, что ты изучили на предыдущем уровне,
        чтобы нарисовать такое же изображение. Примечание: Использование параметров
        поможет упростить код. "
      Course 4 SCFL 1_instruction: "Реши эту головоломку, используя как можно меньше
        блоков."
      Course 4 SCFL 1a_instruction: "Поможешь Скрату добраться до желудя, используя
        как можно меньше блоков?"
      Course 4 SCFL 1b_instruction: "Поможешь Скрату добраться до желудя, используя
        как можно меньше блоков?"
      Course 4 SCFL 2_instruction: "Реши эту головоломку, используя как можно меньше
        блоков."
      Course 4 SCFL 3_instruction: "Догадываешься, как нарисовать эту фигуру?"
      Course 4 SCFL 4_instruction: "Догадываешься, как нарисовать эту фигуру?"
      Course 4 SCFL 5_instruction: "Догадываешься, как нарисовать эту фигуру?"
      Course 4 SCFL 6_instruction: "Догадываешься, как воспроизвести этот рисунок
        с помощью одного цикла?"
      Course 4 SCFL 7_instruction: "Художник хочет поймать волну! Догадываешься, как
        нарисовать эту фигуру?"
      Course 4 SCFP 1_instruction: "Создай функцию с параметрами, которая позволит
        художнику прыгать вперед и назад на Х пикселей, а также вверх и вниз на Y
        пикселей (используй положительные и отрицательные числа)."
      Course 4 SCV 1_instruction: "Нажми здесь, чтобы еще раз просмотреть инструкции."
      Course 4 SCV 2_instruction: "Нажми здесь, чтобы еще раз просмотреть инструкции."
      Course 4 SCV 3_instruction: |
        А теперь перейдем к игре в пятнашки!  Запятнай кота, чтобы получить 2 очка. Запятнай пингвина, чтобы получить 3 очка.  Набери 10 очков, чтобы выиграть!
        Но будь осторожен, когда кот и пингвин касаются друг друга, у тебя вычитаются очки.

        Добавь блоки, необходимые для того, чтобы данная игра работала согласно инструкциям.  Как ты добьешься того, чтобы собака двигалась во всех направлениях при использовании клавиш со стрелками?  Как будут добавляться очки, когда собака попадает в Кота или в пингвина?  Как будут вычитаться очки, когда кот и пингвин касаются друг друга?
      Course 4 SCV 4_instruction: "Реши эту задачу, используя как можно меньше блоков."
      Course 4 SCV 5_instruction: "Реши эту задачу, используя как можно меньше блоков."
      Course 4 SCV 6_instruction: "Нажми здесь, чтобы еще раз просмотреть инструкции."
      Course 4 SCVP 1_instruction: "Создай функцию с параметрами, которая позволит
        художнику прыгать вперед и назад на Х пикселей, а также вверх и вниз на Y
        пикселей (используй положительные и отрицательные числа)."
      Course 4 Variables Assessment_instruction: "Сможешь нарисовать это изображение,
        используя переменную для сторон? Длина каждой линии должна быть 50 пикселей."
      Course1BeePuzzle12_instruction: "Получите три нектара и затем сделайте два мёда"
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother
        to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother
        to get me to the pig."
      course2_playlab_stage17_1_instruction: "Можешь сделать так, чтобы собака (исполнитель
        1) сказала «Привет»?"
      course2_playlab_stage17_10_instruction: "Можешь ли ты добавлять блоки, чтобы
        изменить фон и скорость Пингвина, и потом перетащить его с помощью стрелок,
        чтобы заработать очки?"
      course2_playlab_stage17_11_instruction: Создай свою историю. После завершения
        нажми "Готово", чтобы друзья смогли испытать твою историю на своих телефонах.
      course2_playlab_stage17_2_instruction: "Можешь сделать так, чтобы сначала заговорила
        собака (исполнитель 1), а потом и кошка (исполнитель 2)?"
      course2_playlab_stage17_3_instruction: "Можешь написать программу, чтобы собака
        (исполнитель 1) двигалась к коту?"
      course2_playlab_stage17_4_instruction: "Можешь написать программу, чтобы собака
        (исполнитель 1) пошла к коту, и когда собака бы подошла вплотную, кот бы сказал
        «Привет»?"
      course2_playlab_stage17_5_instruction: Можешь ли ты написать свою программу,
        чтобы осьминог сказал "Привет" при нажатии на него?
      course2_playlab_stage17_6_instruction: "Вы можете написать программу, чтобы
        заставить пингвина передвигаться с помощью клавиш вверх / вниз / влево / вправо
        и поразить все цели?"
      course2_playlab_stage17_7_instruction: |
        The `repeat forever` block allows you
        to run code over and over forever. Can you attach blocks to move Chomp the
        Dino (actor 2) up and down forever?
      course2_playlab_stage17_8_instruction: Сможете заставить пингвина сказать "Ай!"
        и исполнить "звук удара", если он наткнется на динозавра, а затем передвинуть
        его с помощью стрелок, чтобы это произошло?
      course2_playlab_stage17_9_instruction: "Ты можешь добавить блок, чтобы начислять
        очки, когда пингвин натыкается на осьминога, а затем перемещать его с помощью
        стрелок, чтобы заработать очки?"
      course3_playlab_stage16_1_instruction: "Ты можешь сделать так, чтобы собака
        сказала: «привет, мир»?"
      course3_playlab_stage16_2_instruction: "Можешь сделать так, чтобы сначала заговорила
        собака, а потом и кошка?"
      course3_playlab_stage16_3_instruction: "Можешь написать программу, чтобы собака
        двигалась к коту?"
      course3_playlab_stage16_4_instruction: "Можешь написать программу, чтобы собака
        подошла к коту и сказала «привет»?"
      course3_playlab_stage16_5_instruction: "Можешь ли ты добавить блок, чтобы сделать
        осьминога счастливым?"
      course3_playlab_stage16_6_instruction: Создай свою историю. После завершения
        нажми "Готово", чтобы друзья смогли испытать твою историю на своих телефонах.
      course3_playlab_stage17_1_instruction: Можешь ли ты написать свою программу,
        чтобы осьминог сказал "Привет" при нажатии на него?
      course3_playlab_stage17_2_instruction: "Вы можете написать программу, чтобы
        заставить пингвина передвигаться с помощью клавиш вверх / вниз / влево / вправо
        и поразить все цели?"
      course3_playlab_stage17_3_instruction: |
        The "repeat forever" block allows
        you to run code continuously. Can you attach blocks to move this dinosaur
        up and down repeatedly?
      course3_playlab_stage17_4_instruction: Сможете заставить пингвина сказать "Ай!"
        и исполнить "звук удара", если он наткнется на динозавра, а затем передвинуть
        его с помощью стрелок, чтобы это произошло?
      course3_playlab_stage17_5_instruction: "Ты можешь добавить блок, чтобы начислять
        очки, когда пингвин натыкается на осьминога, а затем перемещать его с помощью
        стрелок, чтобы заработать очки?"
      course3_playlab_stage17_6_instruction: "Можешь ли ты добавлять блоки, чтобы
        изменить фон и скорость Пингвина, и потом перетащить его с помощью стрелок,
        чтобы заработать очки?"
      course3_playlab_stage17_7_instruction: Создай свою историю. После завершения
        нажми "Готово", чтобы друзья смогли испытать твою историю на своих телефонах.
      courseA_maze_seq1_instruction: |
        Play with these blocks to see if you can get
        me to the pig!
      courseA_maze_seq2_instruction: "Измени код, чтобы помочь мне добраться до свиньи!"
      courseB_playlab_events2_instruction: |
        Have Daisy the Dragon say something when
        you click "Run".
      courseB_playlab_events3_instruction: |
        Use an event to make Daisy the Dragon
        switch to a random mood when you click on her.
      courseB_playlab_events4_instruction: |
        Knight time!  Add an event so that the
        knight moves toward the dragon when the left arrow is clicked.
      courseB_playlab_events5_instruction: |
        Now add an event so that the knight runs
        away from the dragon when you press the right arrow.
      courseB_playlab_events6_instruction: "Help your knight get all of the flags!\r\n\r\nTo\ndo
        this, you'll need to add events to help the knight move up and down."
      courseB_playlab_events7_instruction: |
        Make this game fun by setting the knight
        to vanish when he runs into the dragon!  Play a sound when they collide to
        make it feel more real.
      courseB_playlab_events8_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      courseB_playlab_eventsFP_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      courseB_playlab_eventsToolbox_instruction: |
        Finish by playing a sound and making
        the knight vanish when he runs into the dragon!
      courseC_puppy_loops10_instruction: You are doing great! Keep it up!
      courseC_puppy_loops11_instruction: |
        You are almost there! This time, choose
        any path you like!
      courseC_puppy_loops8_instruction: |
        Challenge puzzle! Combine ideas from the
        last few puzzles to complete this.
      courseC_puppy_loops9_instruction: You are doing great! Keep it up!
      Crack a Caesar Cipher_instruction: "Инструкции"
      Crack Random Substitution_instruction: "Инструкции"
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Boolean Predict_instruction: |
        What do you think this code will do when
        it is run? Predict what each console.log() command will print, then run the
        program to check your predictions.
      CSD U3 Draw Loop Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Expressions calculator_instruction: |
        Add the numbers 1 through 10. Multiply
        the numbers 1 through 10. Check your answers with a neighbor.
      CSD U3 Frame Rate_instruction: Slow down Gamelab Gary's animation with frameRate()
      CSD U3 Keypress Boolean_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Random Animation_instruction: |
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |
        Pick a shape block and use calls to
        randomNumber() in place of one or more of the parameters. Maker sure you run
        it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Sprites intro sprites_instruction: Do This
      CSD U3 Variable Arithmetic pt2_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables create and assign_instruction: |
        Create and assign size in
        a single line of code.
      CSD U3 Variables draw loop newVars_instruction: |
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables eyeBrows_instruction: |
        Predict what will happen when you move
        the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables Initialize_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: |
        Create your own variable, give it a value,
        and display that value in the console.
      CSD U3 Variables make a big square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: |
        Predict what will happen when
        you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: |
        Check out this example
        randomized drawing.
      CSD U3 Variables Random_instruction: |
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables use value rect_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables write_instruction: |
        Use the write block to display the value
        of size
      CSD U3 Variables2 expressions in commands_instruction: |
        Use expressions inside
        a drawing command
      CSD U3 Variables2 expressions in variables_instruction: |
        Assign the value of
        each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: |
        Use console.log to display the
        results of each expression. Then create your own.
      CSD U4 - Events Template_instruction: |
        Add a large red button to your screen
        using Design Mode. (Click for full instructions.)
      CSDU4 - AppLab - 1_instruction: |
        Read the documentation for penColor() and
        penWidth() before using them to draw the blue square.
      CSDU4 - AppLab - 2_instruction: |
        Write a program that acts as a simple calculator.
        (click to see full instructions)
      CSDU4 - AppLab - 3_instruction: |
        Use console to check the ending value of num.
        (Click to see full instructions)
      CSDU4 - AppLab - 4_instruction: |2
         Use the Debug Commands to make a list of
        all the values rolled before a 6. (Click to see full instructions)
      CSDU4 - Design Mode - 1_instruction: |
        Add a button that moves the turtle when
        clicked.  (Click to see full instructions)
      CSDU4 - Design Mode - 10_instruction: |
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSDU4 - Design Mode - 11_instruction: |
        Experiment with different event types
        and select the one that you think is best. (Click to see full instructions)
      CSDU4 - Design Mode - 12_instruction: |
        Use the textLabel command to replace
        the button in your program with a text label. (Click to see full instructions)
      CSDU4 - Design Mode - 16_instruction: |
        Add an event handler for the button
        using the "Insert and show" link in the Design Mode Events tab. (Click to
        see full instructions).
      CSDU4 - Design Mode - 17_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18_instruction: |
        Fix the layout of the bullseye game.
        (Click to see full instructions)
      CSDU4 - Design Mode - 2_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      CSDU4 - Design Mode - 24_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      CSDU4 - Design Mode - 25_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      CSDU4 - Design Mode - 26_instruction: |
        Save the age and name of the user in
        variables (Click to see full instructions)
      CSDU4 - Design Mode - 27_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      CSDU4 - Design Mode - 28_instruction: |
        Write a greeting to the user when they
        hit 'enter' in the text input, using the 'change' event. (Click to see
        full instructions)
      CSDU4 - Design Mode - 29_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      CSDU4 - Design Mode - 30_instruction: |
        Show different die images for the random
        number generated. (Click to see full instructions)
      CSDU4 - Design Mode - 31_instruction: |
        Set up an event handler to respond to
        keypress events, and display event.key in the console. Hit keys on the keyboard
        to see what happens. (Click to see full instructions)
      CSDU4 - Design Mode - 32_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      CSDU4 - Design Mode - 33_instruction: |
        Change the code so the sound will only
        play when the up arrow is pressed. (Click to see full instructions)
      CSDU4 - Design Mode - 4_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      CSDU4 - Design Mode - 5_instruction: |
        Debug the program by verifying your IDs
        are being referenced properly. (Click to see full instructions)
      CSDU4 - Design Mode - 6_instruction: |
        Debug the program by properly ordering
        your button commands and event handlers. (Click to see full instructions)
      CSDU4 - Design Mode - 7_instruction: |
        Debug the program by fixing the logical
        error within the program. (Click to see full instructions)
      CSDU4 - Design Mode - 8_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      CSP Data Unit - Counting Multiple Things_instruction: "If you can count one\nthing
        you can count multiple things\r\n\r\nFind out how many people like something\nother
        than dogs and cats\r\n\r\nCount dogs\r\nCount cats\r\nCount total\r\nDo\nthe
        math\r\n\r\nblank/ blank toal\r\n\r\nCan also use this to find percents\nfrom
        this\r\n\r\nx% are dog lovers"
      CSP Data Unit -Counting Records - Easy Way_instruction: "ReadRecords with specific\ncriteria
        \r\nfind the length of an array\r\n"
      CSP Data Unit -Counting Records - Hard Way_instruction: "\r\n1. ReadRecords\nfor
        all records\r\n2. Way to loop through and count\r\n"
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: "Create an object with at\nleast
        5 values including at least one string and one number. (Click to see\nfull
        instructions) \n"
      CSP U4 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      drawings!_instruction: |
        Draw the equilateral triangle - all the sides are the
        same!
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin
        the name of a food and produces a String that says how you feel about that\nfood.
        For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic
        “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review,
        but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne
        example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes
        in the name of a shape and produces a solid green shape. Your function\nshould
        work with at least “circle”, “star” and “rectangle”, but you can add\nother
        shapes if you like. You can choose the size of each shape. Don’t forget\nto
        add an “else” clause!\r\nOne example - and part of the definition -  has\nalready
        been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave
        your own business by 30. Write a function called life-goals, which takes\nin
        an age and produces a string that describes your life goals by then. Don’t\nforget
        to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction
        block? The radius is 20. \n"
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      eventsIntro_instruction: Need a better playlab/events combo
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Food Fight!_instruction: "We've added one last function for you. \r\n\r\nUse\nan
        \"if\" statement to program your game to call the \"level_up\" function\nonly
        when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample:
        \"player_score\" > 6\r\n\r\nPlay the game, and make it to level 3\nto move
        to the next puzzle. "
      Food Fight_instruction: "We've added one last function for you. \r\n\r\nUse\nan
        \"if\" statement to program your game to call the \"level_up\" function\nonly
        when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample:
        \"player_score\" > 6\r\n\r\nPlay the game, and make it to level 3\nto move
        to the next puzzle. "
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: "Теперь создадим 20 пересекающихся
        кругов, поворачивая на 18 градусов после каждого круга."
      frozen circle function with parameter_instruction: "Это блок «Создать круг»,
        который может создавать круги разных размеров. Можешь воспользоваться им,
        чтобы создать маленький круг размером 5 и круг побольше размером 10?"
      frozen circle function_instruction: "Используй новый блок «создать круг», чтобы
        создать 10 пересекающихся кругов. Не забудь прыгнуть вперед между кругами."
      frozen circle_instruction: "Круг имеет особую форму. Догадываешься, на какое
        число нужно заменить вопросительные знаки, чтобы нарисовать круг?"
      frozen cross rotate dense_instruction: "Повторим это 90 раз! Сколько будет 360
        разделить на 90? Подсказка: Это очень маленькое число."
      frozen cross rotate_instruction: "Теперь повторим это 10 раз. На сколько градусов
        тебе нужно поворачивать между рисованием линий?"
      frozen cross_instruction: "Помести блок «повторить» между этими командами, чтобы
        создать знак «плюс». Ты заметил, что Эльза может двигаться вперед и назад?"
      frozen diamond mini snowflake_instruction: "Ты знаешь, что все снежинки отличаются
        друг от друга формой? Теперь создадим новую снежинку с помощью блока «повторить»,
        чтобы повторить параллелограмм 4 раза, поворачивая на 90 градусов после рисования
        каждого параллелограмма."
      frozen diamond snowflake_instruction: "Теперь создадим новую снежинку с помощью
        блока «повторить», чтобы повторить параллелограмм 10 раз, поворачивая на 36
        градусов после рисования каждого параллелограмма."
      frozen diamond_instruction: "Используй блок «повторить» между этими блоками,
        чтобы создать параллелограмм. Это как прямоугольник, только с разными углами.
        Углы параллелограмма равны 60 и 120 градусам, в отличие от прямоугольника,
        у которого все углы по 90 градусов."
      frozen freeplay_instruction: "Теперь ты — настоящий художник! Создай снежную
        страну чудес."
      frozen line_instruction: "Привет! Я Эльза из Эренделла. Помоги мне нарисовать
        простую линию."
      frozen perpendicular_instruction: "Теперь давай посмотрим, можем ли мы создать
        две линии, расположенные под углом 90 градусов друг к другу. Тебе потребуется
        использовать блок «поворот» и блок «двигаться»."
      frozen snowflake branch_instruction: "Попробуй использовать блок «создать ветвь
        снежинки», чтобы создать три ветви, которые вместе будут выглядеть как снежинка."
      frozen snowflake full_instruction: "Теперь повторим 8 раз, чтобы сделать красивую
        снежинку!"
      frozen snowflower_instruction: "Замысловатые снежные узоры можно создать с помощью
        очень простых форм. Можешь создать узор, повторив 5 кругов размера 5 и 5 кругов
        размера 10?"
      frozen square iterative_instruction: "Похоже, мы на полпути к тому, чтобы нарисовать
        квадрат. Давай соединим вместе 4 линии, чтобы получился квадрат."
      frozen square loop 3x_instruction: "Давай нарисуем три квадрата, поворачивая
        после каждого. Обязательно поворачивай на 120 градусов перед каждым новым
        квадратом."
      frozen square loop_instruction: "Привет, я Анна из Эренделла! Давай нарисуем
        квадрат с помощью блока «повторить», который использует минимальное количество
        блоков. Сколько раз (???) необходимо зациклить блоки внутри блока «повторить»,
        чтобы нарисовать квадрат?"
      frozen square snowflake_instruction: "Сможешь создать снежинку, используя блок
        «повторить», чтобы 10 раз нарисовать квадрат, и блок «повернуть», чтобы поворачивать
        на 36 градусов после рисования каждого квадрата?"
      Geometric Pattern_instruction: |
        Project Idea: Create a pattern using geometric
        ideas like shapes. This requires persistence and planning!
      'Grade 4 Example PlayLab Project #1_instruction': |
        Take a look at this project.  Do
        you see how it was made?
      'Grade 4 Example PlayLab Project #2_instruction': |
        Take a look at this project.  Do
        you see how it was made?
      grade1_adventurer_loops1_instruction: Four piles of gold!  Collect all four.
      grade1_adventurer_loops10_instruction: |
        Help me get all of the gold from this
        cave.
      grade1_adventurer_loops2_instruction: |
        How can Laurel collect all five piles
        of gold using only one `move forward` block?
      grade1_adventurer_loops3_instruction: |
        Can you fix Laurel's path to get all
        of this gold?
      grade1_adventurer_loops4_instruction: "Add to the code from the last puzzle\nto
        get all of the gold. \n"
      grade1_adventurer_loops5_instruction: |
        What should you add to this code to
        get all of the gold?
      grade1_adventurer_loops6_instruction: Write the code to get all of this gold.
      grade1_adventurer_loops7_challenge_instruction: |
        Challenge: The gold goes all
        the way down these stairs!  Write the code to help me get it all.
      grade1_adventurer_loops8_challenge_instruction: |
        Challenge: Try this staircase
        now! It has an extra spike at the end you'll have to climb.
      grade1_adventurer_loops9_instruction: |
        Help me get the gold from this deep
        valley.
      grade1_adventurer_loopsFP_instruction: |
        Eureka!  Collect as much gold as you
        can!
      grade1_adventurer_loopsPre_instruction: |
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      grade1_artist_loops1_instruction: |
        The Artist is trying to draw a line six
        times, but can't get it right.  Can you help?
      grade1_artist_loops2_instruction: |
        Help the artist draw a line 7 times to make
        a garden wall.
      grade1_artist_loops3_instruction: "Now we need to get the soil ready to plant.\nFind
        the bug and help the artist prepare the ground. \n"
      grade1_artist_loops4_instruction: |
        Time to fix the stairs!  Repeat this pattern
        five times so the artist can reach the top of the bushes.
      grade1_artist_loops5_instruction: |
        Behind the bushes there is a beautiful vine
        full of flowers.  Can you climb the vine and see where it goes?
      grade1_artist_loops6_instruction: |
        **Challenge:**  It's a hidden garden! Let's
        walk around.
      grade1_artist_loops7_instruction: |
        The flowers down here are so pretty.  Let's
        take a closer look.
      grade1_artist_loops7a_instruction: |
        **Challenge:**  Lovely! Let's take a walk
        around the garden.
      grade1_artist_loops7b_instruction: |
        Time to head home. Can you fix this ladder
        to help the artist get down?
      grade1_artist_loops8_instruction: |
        Let's take the short way over the pond.
        Can you help the artist stay on the stones?
      grade1_artist_loops9_instruction: I still need a story for this puzzle
      grade1_artist_loopsFP_instruction: |
        Use what you have learned to draw a picture
        of what you think the artist saw when he got home.
      grade1_maze_sequence1_instruction: "Измени код, чтобы помочь мне добраться до
        свиньи!"
      grade1_maze_sequence10_instruction: Move me around the TNT to get to the pig.
      grade1_maze_sequence2_instruction: "Измени код, чтобы помочь мне добраться до
        свиньи!"
      grade1_maze_sequence3_instruction: |
        Can you add 2 blocks to get the bird to
        the pig.
      grade1_maze_sequence4_instruction: Now try this puzzle from the start!
      grade1_maze_sequence5_instruction: |
        Move one way, then another to get me to
        the pig!
      grade1_maze_sequence6_instruction: |
        Figure out what is missing and then add
        blocks to get me to the pig!
      grade1_maze_sequence7_instruction: |
        Your turn!  What do you need to do to get
        the bird to the pig?
      grade1_maze_sequence8_instruction: |
        Debug this level by adding blocks to get
        me to the pig!
      grade1_maze_sequence9_instruction: |
        Go around the TNT to get me to the pig!
      grade1_maze_sequenceA_instruction: |
        Challenge: Move me around the TNT to get
        to the pig.
      grade1_maze_sequenceB_instruction: Fix the bugs to get the bird to the pig.
      grade1_maze_sequenceC_instruction: It's all you!  Get the bird to the pig.
      grade1_maze_sequenceD_instruction: 'It''s a pig party!  Get those pigs! '
      grade1_playlab_events1_instruction: |
        This game is called "Play Lab".  See
        if you can figure out what each block does.
      grade1_playlab_events1a_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      grade1_playlab_events2_instruction: |
        This program makes Robin fly.  Can you
        get her to vanish when you click her?
      grade1_playlab_events2a_instruction: |
        Edit the code so that when the second
        bird is clicked, your program plays a sound!
      grade1_playlab_events3_instruction: "This program makes Robin fly.  Can you\nmake
        the robot jump when you press the up button?\r\n"
      grade1_playlab_events3a_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade1_playlab_events4_instruction: |
        Add a block to make Robin vanish when
        she collides with the robot.
      grade1_playlab_events4a_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade1_playlab_events5_instruction: |
        Add a block to the 'when run' event
        that starts the dragon flying.
      grade1_playlab_events5a_instruction: |
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      grade1_playlab_events6_instruction: |
        Add a block to the 'when actor 1 clicked'
        event that makes the dragon return to the middle of the screen.
      grade1_playlab_events7_instruction: |
        Add a block so that when you push the
        left arrow button, the knight surges toward the dragon.
      grade1_playlab_events8_instruction: |
        Add a block so that when the knight collides
        with the dragon, it plays a sound.
      grade1_playlab_events9 RYAN COPY_instruction: |
        Now, have Robin wait a second,
        then come back after she vanishes.
      grade1_playlab_events9_instruction: |
        Now, add a block to keep score each time
        the knight hits the dragon.
      grade1_playlab_eventsFP_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      grade1_sequence_pre_instruction: |
        Play with these blocks to see what they make
        the bird do!
      grade1_video_frustrationRainbow_instruction: |
        This video describes the rainbow
        of frustration and introduces persistence.
      grade2_CaringForNewPet_0_instruction: |
        Can you help me catch the naughty pig?
        Add a move forward block to this code, then press "Run".
      grade2_CaringForNewPet_1_instruction: "Can you help me catch the naughty pig?\nStack
        a couple of `move forward` blocks below the `when run` block and press\n\"Run\".
        \n"
      grade2_CaringForNewPet_10_instruction: "Доведи меня до свиньи!"
      grade2_CaringForNewPet_11_instruction: |
        Keep calm and help me find the bad
        pig. Otherwise I might get angry!
      grade2_CaringForNewPet_2_instruction: |
        This pig is ruffling my feathers. Help
        me get to him!
      grade2_CaringForNewPet_3_instruction: |
        Trace the path and lead me to the silly
        pig. Avoid TNT or feathers will fly!
      grade2_CaringForNewPet_3D_instruction: Fix this code to get me to the pig!
      grade2_CaringForNewPet_4_instruction: |
        Keep calm and help me find the bad pig.
        Otherwise I might get angry!
      grade2_CaringForNewPet_5_instruction: "Доведи меня до свиньи!"
      grade2_CaringForNewPet_6_instruction: |
        Challenge: Guide me to the green evilness!
        (Watch out for TNT)
      grade2_CaringForNewPet_7D_instruction: |
        This code has a lot of bugs, you'll
        need to both remove and add blocks to get me to the pig.
      grade2_collector_10_instruction: |
        You're almost done! Collect all of the coins
        to finish the stage!
      grade2_collector_2_instruction: |
        I love to chase the ball, but what should
        I do when I get to it?
      grade2_collector_3_instruction: |
        Sequence matters! The blocks you need are
        already in the workspace, but not connected.  Order these blocks to solve
        the puzzle.
      grade2_collector_4_instruction: |
        Sequence matters! The blocks you need are
        already in the workspace, but not connected.  Order these blocks to solve
        the puzzle.
      grade2_collector_5_instruction: |
        These blocks are in the wrong order! Help
        me collect each coin by putting the commands in the right order.
      grade2_collector_6_instruction: |
        These blocks are in the wrong order! Help
        me collect each coin by putting the commands in the right order.
      grade2_collector_7_instruction: |
        Challenge puzzle! What is going on here? Even
        if we put these in the right order, there will still be some missing.
      grade2_collector_8_instruction: |
        Keep up the good work! Help me collect all
        of the coins.
      grade2_collector_9_instruction: Let's get the coins!
      grade2_collector_pre1_instruction: |
        Ruff! Can you help me collect some tennis
        balls?
      grade2_MakeDogTag_1_instruction: |
        Drag blocks onto the screen to have the artist
        draw over the grey lines in the picture. (Each line is 100 pixels long)
      grade2_MakeDogTag_10_instruction: "Нарисуй что-нибудь веселое."
      grade2_MakeDogTag_2_instruction: "This spaceship needs a window!\r\n\r\nEach\nside
        is 100 pixels and all of the angles are 90 degrees."
      grade2_MakeDogTag_3_instruction: "Помоги мне закончить дом для этого кота."
      grade2_MakeDogTag_4_instruction: "Этому дому нужна крыша! Нарисуй треугольник.
        \ Подсказка: все три стороны имеют одинаковую длину."
      grade2_MakeDogTag_5_instruction: "\"Now a tag for Belle!\"\r\n\r\nDraw this\ndiamond
        with 200 pixel sides."
      grade2_MakeDogTag_6_instruction: "Свободная игра! Рисуй все, что тебе хочется."
      grade2_MakeDogTag_7_instruction: "One more tag.  This is a triangle for Pi.\r\n(Each\nside
        is 150 pixels)"
      grade2_MakeDogTag_8_instruction: "Теперь соединим множество «V» вместе, рисуя
        с помощью цикла."
      grade2_MakeDogTag_9_instruction: |
        Rebuild the code from the last puzzle, but
        this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24
        times instead of 8.
      grade2_MakeDogTag_BFP_instruction: "\"Hi, I'm an artist. You can write code\nto
        make me draw almost anything.\"\r\n\r\nPlay with the blocks in the toolbox\nto
        see what they do!"
      grade2_MakeDogTag_FP_instruction: |
        Freeplay: What shape will you make the tag
        for your pet?
      grade2_maze_debuggingFP_instruction: |
        Now, help me sneak up on the pig any
        way you want to!
      grade2_maze_debuggingPre_instruction: |
        Play with these blocks to see what they
        make the bird do!
      grade2_maze_intro10_instruction: Solve this puzzle.
      grade2_maze_intro2_instruction: |
        Welcome to Code Studio! Here you will learn
        to use blocks to build programs. Press `Run` to run a program now!
      grade2_maze_intro3_instruction: |
        The `workspace` is where you will create all
        of your programs. Can you guess what this program does? Press the “Run” button
        to find out.
      grade2_maze_intro4_instruction: |
        Drag a block from the toolbox into the workspace.
        Connect it to the other blocks.
      grade2_maze_intro6_instruction: "That’s it!  Now we’re ready to try to solve\na
        few puzzles. \n"
      grade2_maze_intro7_instruction: This time, try something a bit more challenging.
      grade2_maze_intro8_instruction: |
        This is a challenge puzzle.  It is meant to
        be hard and will probably take you a couple of tries to solve.  If you don’t
        solve it after several tries, don’t worry!  It will be in the Play Zone at
        the end of the stage and you can try it again when you’ve had more practice.
      grade2_maze_intro9_instruction: Solve this puzzle.
      grade2_playlab_project_1_instruction: "Вы можете написать программу, чтобы заставить
        пингвина передвигаться с помощью клавиш вверх / вниз / влево / вправо и поразить
        все цели?"
      grade2_playlab_project_2_instruction: |
        The `repeat forever` block allows you
        to run code over and over forever. Can you attach blocks to move Chomp the
        Dino (actor 2) up and down forever?
      grade2_playlab_project_3_instruction: "Can you have Waddles (actor 1) say \"Ouch!\"\nand
        play a \"hit\" sound if he runs into Chomp? \r\n\r\nWhen you're done,\nplay
        the game to make that happen."
      grade2_playlab_project_4_instruction: "Ты можешь добавить блок, чтобы начислять
        очки, когда пингвин натыкается на осьминога, а затем перемещать его с помощью
        стрелок, чтобы заработать очки?"
      grade2_playlab_project_5_instruction: "Add blocks to the `when run` event to\nchange
        the background and the speed of Waddles.\r\n\r\nPlay the game and move\nWaddles
        with the arrows until you score."
      grade2_playlab_project_6_instruction: Создай свою историю. После завершения
        нажми "Готово", чтобы друзья смогли испытать твою историю на своих телефонах.
      grade2_puppy_loops2_instruction: |
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_puppy_loops3_instruction: |
        Get me to the pig! Solve this puzzle by creating
        a loop!
      grade2_puppy_loops4_instruction: |
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_puppy_loops5_instruction: "Доведи меня до свиньи."
      grade2_puppy_loops6_instruction: |
        Loops even work with more than one block
        inside!  Can you loop this sequence to get me to the pig?
      grade2_puppy_loops7_instruction: Use what you learned to get me to the pig!
      grade2_PuppyLoops_1_instruction: |
        Can you get me to the pig using 5 of the
        same kind of blocks?
      grade2_PuppyLoops_10_instruction: "Моя вертушка не закончена. Сколько раз мне
        нужно повторить действие, чтобы закончить ее?"
      grade2_PuppyLoops_2_instruction: |
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_PuppyLoops_3_instruction: |
        Get me to the pig! Solve this puzzle by creating
        a loop!
      grade2_PuppyLoops_4_instruction: |
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_PuppyLoops_5_instruction: "Доведи меня до свиньи."
      grade2_PuppyLoops_6_instruction: |
        Loops even work with more than one block
        inside!  Can you loop this sequence to get me to the pig?
      grade2_PuppyLoops_7_instruction: "Доведи меня до подсолнуха!"
      grade2_PuppyLoops_8_instruction: "Код для рисования трех усов, который ты видишь,
        неправильный. Подсказка: длина каждого уса должна быть 75 пикселей. Исправь
        код, чтобы нарисовать усы."
      grade2_PuppyLoops_9_instruction: "Похоже, что буква К в слове «код» нарисована
        задом наперед. Можешь нарисовать ее правильно?"
      grade3_AboutMyRobot_1_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      grade3_AboutMyRobot_2_instruction: |
        Edit the code so that when the second bird
        is clicked, your program plays a sound!
      grade3_AboutMyRobot_3_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade3_AboutMyRobot_4_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade3_AboutMyRobot_5_instruction: |
        About My Robot Project! Write code so that
        clicking on each bird shows a new fact about your robot.
      grade3_AboutMyRobot_TeacherIDo_instruction: |
        Run this puzzle and click on the
        robot to see what happens!
      grade3_bee_conditionals_new1a_instruction: |
        Help the bee collect all of the
        nectar. You can only collect nectar from flowers, but you can check any space
        to see if there is a flower.
      grade3_bee_conditionals_new1b_instruction: |
        Help the bee collect all of the
        nectar. You can only collect nectar from flowers, but you can check any space
        to see if there is a flower.
      grade3_bee_conditionals_new2_instruction: |
        Can you help the bee collect the
        nectar from the flowers? You can only collect nectar from flowers, but you
        can check any space to see if there is a flower.
      grade3_bee_conditionals_new2a_instruction: "Now we know that every flower has\nexactly
        one nectar. Use the blocks provided to check each space and only get\nnectar
        when there's a flower. \n"
      grade3_bee_conditionals_new2b_instruction: |
        Collect all of the nectar. You
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower.
      grade3_bee_conditionals_new3a_instruction: |
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade3_bee_conditionals_new3b_instruction: |
        Uh oh! The bee is not sure if he
        should collect nectar or make honey. Can you help him out?
      grade3_bee_conditionals_new3c_instruction: |
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using one loop inside of another
        loop.
      grade3_bee_Conditionals_new4_instruction: |
        Now try checking all of these flowers
        with "if" blocks to see if there is any nectar available.
      grade3_bee_conditionals_quantum1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      grade3_bee_conditionals_quantum2_instruction: "Прямо сейчас пчела нуждается
        в нектаре. Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ
        ОБЛАКО, чтобы узнать, скрывается ли под ним цветок. Если он там, ты можешь
        собрать нектар."
      grade3_bee_conditionals_quantum3_instruction: |
        Now I just want to make honey.
        Some of these clouds might have honeycombs under them. The way we've been
        going about things won't work here. Be sure to check if a honeycomb is hiding
        behind each cloud!
      grade3_bee_conditionals_quantum4_instruction: |
        Sometimes this cloud covers
        a flower, and sometimes it covers a honeycomb! Use the if/else block to collect
        nectar if it is a flower, else to make honey (because it is a honeycomb).
      grade3_bee_conditionals_quantum5_instruction: "There will be either a flower\nor
        a honeycomb under each of those clouds!\r\n\r\nUse the `if/else` block\nto
        collect nectar if there is a flower.\r\nOtherwise, make honey (because\nthere
        is a honeycomb)."
      grade3_Conditionals_1 BAD_instruction: "Используй цикл, чтобы собрать весь нектар."
      grade3_Conditionals_1_instruction: "Привет, я пчела! Помоги мне собрать весь
        нектар с цветов. Используй цикл."
      grade3_Conditionals_10 BAD_instruction: "Собери нектар с цветочных рядов! Используй
        вложенный цикл."
      grade3_Conditionals_10_instruction: "Собери нектар и приготовь мед. Подсказка:
        что произойдет, если ты используешь условный оператор «если есть нектар» для
        красного цветка? Можешь выполнить эту задачу с помощью цикла?"
      grade3_Conditionals_11 BAD_instruction: "Оценка. Используй цикл с предусловием,
        чтобы собрать весь нектар с этого цветка."
      grade3_Conditionals_11_instruction: "Собери нектар и приготовь мед. Будь осторожен,
        не собирай нектар с фиолетовых цветов, его там нет."
      grade3_Conditionals_12_instruction: "Собери нектар со всех четырех цветов."
      grade3_Conditionals_13_instruction: |
        Assessment: Collect all of the nectar.
        Be careful not to try to collect nectar from a purple flower if it doesn't
        have any.
      grade3_Conditionals_2_instruction: "Помоги мне собрать нектар со всех цветов
        и приготовить мед. Используй цикл."
      grade3_Conditionals_3_instruction: "Be careful not to collect nectar from a\npurple
        flower if it doesn't have any. \r\nYou must first check if the nectar\nis
        equal to 1 using the `if nectar` block."
      grade3_Conditionals_4_instruction: "Проверь наличие нектара в этом цветке, используя
        блок «если»."
      grade3_Conditionals_5_instruction: "Собери нектар со всех цветов, в которых
        он есть."
      grade3_Conditionals_6_instruction: "На поле растут красные и фиолетовые цветы.
        Количество нектара в красных цветах известно, а количество в фиолетовых —
        неизвестно. Собери весь нектар."
      grade3_Conditionals_7_instruction: "Собери весь нектар со всех цветков."
      grade3_Conditionals_8_instruction: "Собирай нектар с цветов, в которых он есть."
      grade3_Conditionals_9_instruction: |
        Help me find all of the nectar using as
        few blocks as possible!
      grade3_Conditionals_TeacherIDo_instruction: |
        Check this flower with an "if"
        block to see if there is any nectar available.
      grade3_ConditionalsElse_1_instruction: "Пчела не может сказать, является ли
        объект цветком или сотой. Собери нектар только с цветов, но сначала проверь,
        является ли объект цветком или сотой."
      grade3_ConditionalsElse_2_instruction: "Прямо сейчас пчела нуждается в нектаре.
        Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ ОБЛАКО, чтобы
        узнать, скрывается ли под ним цветок. Если он там, ты можешь собрать нектар."
      grade3_ConditionalsElse_3_instruction: |
        Now I just want to make honey. Some
        of these clouds might have honeycombs under them. Be sure to check each cloud!
      grade3_ConditionalsElse_4_instruction: "Неизвестный объект может быть цветком
        или сотой. Используй блок «если/иначе», чтобы собрать нектар, если это цветок,
        или чтобы готовить мед в противном случае (потому что тогда объект является
        сотой)."
      grade3_ConditionalsElse_5_instruction: "There will be either a flower or a\nhoneycomb
        under each of those clouds!\r\n\r\nUse the `if/else` block to collect\nnectar
        if there is a flower.\r\nOtherwise, make honey (because there is a\nhoneycomb)."
      grade3_ConditionalsElse_6_instruction: "I am not sure how much nectar this\nflower
        has, but I know it has either 1, 2, or 3 nectar. \r\n\r\nCombine the\nconditional
        blocks (`if` and/or `if/else`) to only get as much nectar as the\nflower has.
        \r\n\r\nRemember, the amount of nectar can change each time you\nrun the puzzle!"
      grade3_ConditionalsElse_7_instruction: "Помни, что в фиолетовых цветах может
        быть 3, 2 или 1 порция нектара. Составь функцию «проверить фиолетовый цветок»
        и используй ее, чтобы собрать весь нектар с цветов."
      grade3_ConditionalsElse_8_instruction: "Write the function for `check flower\nmake
        honey`. \r\n\r\nYour function should check if the purple flower has 3,\n2,
        or 1 nectar and get all of the nectar. \r\nThen, move forward and make\nhoney."
      grade3_ConditionalsElse_9_instruction: "**Assessment:** This cloud is either\nhiding
        a flower with one nectar or a honeycomb that needs one honey.  \r\n\r\nComplete\nthe
        `get nectar or make honey` function, then call it to collect the nectar\nor
        honey. \r\n"
      grade3_ConditionalsElse_TeacherIDo_instruction: "There will be either a flower\nor
        a honeycomb under each of those clouds!\r\n\r\nUse the `if/else` block\nto
        collect nectar if there is a flower.\r\nOtherwise, make honey (because\nthere
        is a honeycomb)."
      grade3_Debugging_1_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_10_instruction: "This puzzle is making me loopy! \r\nFix the\nerror(s)
        to collect all of the nectar and make all of the honey."
      grade3_Debugging_11_instruction: "Assessment:  Now it's time to show what\nyou
        know!\r\n\r\nFix the error(s) to collect all of the nectar and make all\nof
        the honey."
      grade3_Debugging_2_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_3_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_4_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_5_instruction: "That flower looks tasty! \r\n\r\nFix the error(s)\nto
        collect all of the nectar.  You can now use both run and step."
      grade3_Debugging_6_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар."
      grade3_Debugging_7_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_8_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_9_instruction: "Эти блоки не дают мне покоя. Исправь ошибки,
        чтобы собрать весь нектар и приготовить весь мед."
      grade3_Debugging_TeacherIDo_instruction: |
        These blocks are really bugging me.
        Fix the error(s) to collect all of the nectar and make all of the honey.
      grade3_Loops_1_instruction: "Can you help me collect the nectar from these\nflowers?
        \n"
      grade3_Loops_10_instruction: "Используй цикл, аналогичный циклу из предыдущей
        головоломки, но добавь в него поворот."
      grade3_Loops_11_instruction: "Используй цикл, чтобы спуститься вниз по ступенькам
        и собрать нектар."
      grade3_Loops_12_instruction: "Используй цикл, чтобы собрать нектар с каждого
        цветка и приготовить мед в каждой соте."
      grade3_Loops_2_instruction: "Можешь упростить решение этой задачи с помощью
        цикла?"
      grade3_Loops_3_instruction: "Можешь использовать цикл для сбора всего нектара?"
      grade3_Loops_4_instruction: |
        Now use the `repeat` block to collect all of the
        nectar and make all of the honey.
      grade3_Loops_5_instruction: "Помести эти блоки внутрь цикла, чтобы собрать нектар
        с каждого цветка."
      grade3_Loops_6_instruction: "Что произойдет, если ты зациклишь эту последовательность
        действий 3 раза? Не забудь приготовить мед в конце!"
      grade3_Loops_7_instruction: "Каждый цветок содержит одну порцию нектара. Собери
        нектар со всех цветов."
      grade3_Loops_8_instruction: "Используй цикл, чтобы собрать нектар и приготовить
        мед."
      grade3_Loops_9_instruction: "Собери нектар с каждого цветка и приготовь мед
        в каждой соте."
      grade3_Loops_TeacherIDo_instruction: "Those flowers look tasty!\r\n\r\nCollect\nnectar
        from each of the flowers using the fewest blocks possible."
      grade3_maze_Loop1_instruction: "Assessment:  Get me to the sunflower using\nonly
        5 blocks! \n"
      grade3_maze_loops1_instruction: "Assessment:  Get me to the sunflower using\nonly
        5 blocks! \n"
      grade3_maze_loops2_instruction: |
        Доведи меня до подсолнуха!
        (Подсказка: Чтобы пройти этот уровень, тебе нужно использовать один цикл «повторить» внутри другого.)
      grade3_maze_loops3_instruction: "Доведи меня до подсолнуха!"
      grade3_maze_loops4_instruction: "Доведи меня до подсолнуха!"
      grade3_maze_loops5_instruction: "Доведи меня до подсолнуха!"
      grade3_maze_nestedLoops1_instruction: |
        Can you get me to the pig using 5 of
        the same kind of blocks?
      grade3_maze_nestedLoops2_instruction: |
        Can you get to the pig by creating a
        loop that uses only one `move forward` block inside of a `repeat`?
      grade3_maze_nestedLoops3_instruction: |
        Get me to the pig! You can only use
        one move forward block this time
      grade3_maze_nestedLoops4_instruction: |
        In this puzzle, two `repeat` loops will
        help you get to the pig with the fewest number of blocks!
      grade3_playLab_buildGame_1_instruction: |
        There is a new block in this lesson,
        the `random integer` block. It is used to choose a random number. Write a
        program where the robot says a random number between 1 and 100!
      grade3_playLab_buildGame_2_instruction: |
        We have already created a random integer,
        "j", which is either 1 or 0. Now, we need to use it to decide whether our
        card is red or black. Add a second if statement to the code under `when run`
        to complete this code.
      grade3_playLab_buildGame_3_instruction: |
        There are 13 different card values
        in a deck of cards, so we'll need to have 13 options. Under the empty `when
        run` block, add a line that sets the placeholder "i" to a random integer
        between 1 and 13.
      grade3_playLab_buildGame_4_instruction: |
        In a deck of cards, a card with value
        1 isn't actually called a "1", there's a special name. Write an if statement
        that checks if the random number is a 1, then tell the computer that the value
        of that card is "Ace".
      grade3_playLab_buildGame_5_instruction: |
        We can just call the cards from 2
        to 10 by their numbers, so add an if statement that checks whether the number
        generated is within those numbers, then sets the card value to the number
        generated.
      grade3_playLab_buildGame_6_instruction: |
        There are three more cards with special
        names in the deck. Add to your code so that a card number 11 is called a "Jack",
        a 12 is a "Queen" and a 13 is a "King"
      grade3_playLab_buildGame_7_instruction: |
        You already know what color your card
        is, but what suit is it? Add code to the conditional statement "if card is
        Red" to choose hearts or diamonds.
      grade3_playLab_buildGame_8_instruction: |
        Add the second part of the code to
        choose a suit, copying what you made for a Red card.
      grade3_playLab_buildGame_final_instruction: |
        Final stage for playlab conditionals
        level (could hide entire function so that students just work with point scoring)
      grade3_playLab_buildGame_final2_instruction: |
        Here's all of your code to choose
        a card - try adding some other fun features!
      grade3_robotFarmer_ConditionalsIntro_1_instruction: |
        Hi, I'm a farmer. I need
        your help to flatten the field on my farm so it's ready for planting. Move
        me to the pile of dirt and use the "remove" block to remove it.
      grade3_robotFarmer_ConditionalsIntro_10_instruction: |
        I'm working late, so
        it's dark out, and I can't tell how large the piles are. Now I don't have
        all the options I used to have on the while block. Move me along the field,
        and if there is a pile, remove it
      grade3_robotFarmer_ConditionalsIntro_11_instruction: |
        It's still dark outside.
        Move me along the field. If there is a pile, remove it, and if there is a
        hole, fill it in. Hint: use the dropdown menu of options on the "if" block.
      grade3_robotFarmer_ConditionalsIntro_2_instruction: |
        Next, move me to the hole
        and fill it with TWO shovelfuls of dirt, using the "fill" block.
      grade3_robotFarmer_ConditionalsIntro_3_instruction: |
        Move me to the pile of
        dirt and tell me how many shovelfuls to remove using as few blocks as possible.
      grade3_robotFarmer_ConditionalsIntro_4_instruction: |
        Can you help me remove
        all four piles of dirt? Hint: use a repeat block if you can.
      grade3_robotFarmer_ConditionalsIntro_5_instruction: |
        Help me fill in all these
        holes with 5 shovelfuls of dirt. Hint: you can put a "repeat" block inside
        the "while" block.
      grade3_robotFarmer_ConditionalsIntro_6_instruction: |
        Remove all the piles of
        dirt, using as few blocks as possible. The new options in the dropdown menu
        on the "while" block tell me if I'm standing on a pile or a hole.
      grade3_robotFarmer_ConditionalsIntro_7_instruction: |
        Wow, I found a really
        deep hole! I don't know how many shovelfuls of dirt it needs. Can you write
        a program that fills it until the ground is even?
      grade3_robotFarmer_ConditionalsIntro_8_instruction: |
        Help me fill in the hole
        at the end of the field, using as few blocks as possible.
      grade3_robotFarmer_ConditionalsIntro_9_instruction: |
        Make me remove all these
        piles of dirt. Try to use as few blocks as possible. Hint: try using a "while"
        block.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction: |
        Help me fill
        in all these holes with 5 shovelfuls of dirt. Hint: you can put a "repeat"
        block inside the "while" block.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2_instruction: |
        I'm working
        late, so it's dark out, and I can't tell how large the piles are. Now I
        don't have all the options I used to have on the while block. Move me along
        the field, and if there is a pile, remove it
      grade3_RunningFarm_1_instruction: "(Notes for Review) Since the last stage\ntaught
        the 'repeat until' block, the purpose of this is most likely to teach\nthe
        'repeat while' block. In the context of the levels already created,\nI think
        using the 'repeat' and 'if' blocks could be possible,  (ex. if\nthe crops
        weren't spread as evenly on the field so the farmer would have\nto test for
        wheat present before collecting it). A Repeat While block would\nbe more applicable
        if there were multiple wheat/potatoes in each square, which\nmight be a possible
        change.\r\n\r\nGrant Notes: for the coins, 1=0 and 2=1\n(I couldn't get the
        coins to show up with a value of 0). The wheat should\ngrow at random intervals.
        For the graphic, think about the Minecraft way of\ngrowing wheat (green, has
        multiple heights showing growth, then yellow for\nripe)."
      grade3_RunningFarm_10_instruction: |
        This is another debugging to make sure
        the students understand the difference between the IF block and While loop.
        Start off all crops as ripe with at least 1 item, with growth after Run.
      grade3_RunningFarm_2_instruction: "NOTES: have wheat and potatoes interspersed\nthroughout
        the row. Potatoes should be fully grown, with some randomly showing\nmore
        than 1 potato per spot. This is different from the previous puzzle because\nstudents
        will have to use the drop down menu on the IF block to select potatoes\ninstead
        of harvesting wheat.\r\n\r\n"
      grade3_RunningFarm_3_instruction: |
        This will look essentially the same as the
        previous puzzle. There should be two crops randomly planted in the row. Each
        plant should start at a random growth stage and grow when the user runs their
        algorithm. Students are using the while loop and hopefully understand that
        it's better at picking all the crops of one type.
      grade3_RunningFarm_4_instruction: |
        Since students started this course using
        events, we wanted to include them into this culminating stage. We will only
        use them in a few stages then move on. This puzzle should randomly populate
        the entire column with wheat and potatoes. The puzzle should also start with
        the following event blocks: up arrow, down arrow, and space bar. Attached
        to the space bar should be a collect block.
      grade3_RunningFarm_5_instruction: |
        This puzzle should randomly populate the
        entire row with wheat and potatoes. The puzzle should also start with the
        following event blocks: up arrow, down arrow, and space bar. Can we check
        to make sure students are using while loop?
      grade3_RunningFarm_6_instruction: |
        This puzzle should randomly populate the
        entire field with wheat and potatoes. The puzzle should also start with the
        following event blocks: up arrow, down arrow, left arrow, right arrow, and
        space bar. Can we check to make sure students are using while loop?
      grade3_RunningFarm_7_instruction: |
        Have wheat and potatoes planted randomly
        at various growth stages. I just wanted a quick debugging puzzles in here
        to transition away from events
      grade3_RunningFarm_8_instruction: |
        Have wheat and potatoes planted randomly
        at various growth stages. Now we introduce multiple while loops (stacked)
        nested inside a loop. The two while loops in the solution represent different
        while loops (while there is potato and while there is wheat)
      grade3_RunningFarm_9_instruction: |
        Add Weeds element. Weeds start out in random
        spots in the field and spread more and more rapidly as time goes on.. This
        puzzle is the culminating game-like puzzle. Students should have the event
        blocks (up, down, left, right, spacebar) available in the toolbox to use if
        they want. The entire field should be planted randomly with mostly wheat,
        potatoes, and a few weeds.
      grade3_RunningFarm_TeacherIDo_instruction: |
        Teacher I Do: Show students how
        they can use loops and conditionals to plant and harvest 2 rows of crops.
      grade3_RunningFarm_TeacherIDo2_instruction: |
        Teacher I Do: Show students how
        to use loops to harvest many crops.
      grade4_arist_functions_star0_instruction: |
        Have you drawn something like this
        star before? Practice making it one more time by adding a turn and a repeat
        block.
      grade4_arist_nested_loop_circles1_instruction: |
        Assessment: Use a nested loop
        to complete the design.
      grade4_arist_nested_loop_flags1_instruction: |
        Loop the given code to create
        a windmill.
      grade4_arist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\r\n\r\nHow
        much do you have to turn each time you loop?"
      grade4_arist_nested_loop_polygons2_instruction: "Loop this shape 6 times. \r\n\r\nHow\nmuch
        do you have to turn each time you loop? "
      grade4_arist_nested_loop_squares1_instruction: |
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_arist_nested_loop_triangles2_instruction: "Now nest this loop inside\nanother
        loop to draw 10 triangles.  This is called a \"nested\" loop.  \n"
      grade4_arist_nested_loop_triangles3_instruction: |
        Can you draw a hexagon by
        looping the triangle code?
      grade4_arist_nested_loop_triangles4_instruction: |
        Draw the teeth in the alligator's
        mouth!
      grade4_arist_nested_loop_triangles5_instruction: "Create a sun by nesting the\nstarter
        code in another loop.\r\n\r\nTo get this cool design with a hollow\ncenter,
        you'll need to jump forward by the length of the triangle before\nturning."
      grade4_arist_nested_loop_triangles6_instruction: |
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_freeplay_instruction: |
        You are on your own now! Try out any of
        the functions you used in this stage or try this new function that will automatically
        give your image a beautiful background color! This creation will be saved
        to your Projects dashboard so that you can easily edit it any time!
      grade4_artist_functions1_instruction: "Привет. Моя — зомби-художник. Моя любит
        рисовать! Помоги мне нарисовать квадратные очки.  Подсказка: перемычка между
        стеклами на 25 пикселей короче, чем длина квадратов."
      grade4_artist_functions2_instruction: "Functions let you define new blocks!\n\r\n\r\nWe've
        moved the blocks needed for drawing a square into a function\ncalled `draw
        a square`. This time, use the `draw a square` function to create\nthe glasses.
        \r\n\r\nThe squares are 75 pixels apart."
      grade4_artist_functions_challenge_instruction: |
        Use the suggested functions
        to draw four rows of hexagons. Notice how our even numbered rows are shifted
        to the right?
      grade4_artist_functions_challenge2_instruction: |
        Use the suggested functions
        to draw four rows of hexagons. Notice how our even numbered rows are shifted
        to the right?
      grade4_artist_functions_freeplay_instruction: |
        You are on your own now! Try
        out any of the functions you used in this stage or try this new function that
        will automatically give your image a beautiful background color! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade4_artist_functions_stars0_instruction: |
        We will come back to functions
        shortly. Let's take a break to practice making this star. You can make this
        drawing by adding a turn and a repeat block.
      grade4_artist_functions_stars1_instruction: |
        Now that you can draw a star,
        try drawing four stars!
      grade4_artist_functions_stars2_instruction: |
        When is drawing three stars harder
        than drawing four? When you also have to jump over the moon!
      grade4_artist_functions_stars3_instruction: |
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade4_artist_functions_windows0_instruction: |
        You are doing great! Do you
        remember when you used nested loops to draw a pinwheel shape out of triangles?
        Let's try using that same algorithm to make a window!
      grade4_artist_functions_windows1_instruction: |
        If you can draw one window,
        you can draw three! Try using your choice of a nested loop or a function here.
        Don't forget the jump block!
      grade4_artist_functions_windows2_instruction: |
        Can you figure out how to add
        these windows? Watch out for the door!
      grade4_artist_nested_loop_circles1_instruction: |
        Assessment: Use a nested loop
        to complete the design.
      grade4_artist_nested_loop_flags1_instruction: |
        Loop the given code to create
        a windmill.
      grade4_artist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\r\n\r\nHow
        much do you have to turn each time you loop?"
      grade4_artist_nested_loop_polygons2_instruction: "Hi, I'm the Artist! Let's\ncreate
        some drawings together! For starters, try repeating this shape 6 times.\n\r\n\r\nHow
        much do you have to turn each time you loop? "
      grade4_artist_nested_loop_squares1_instruction: |
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_artist_nested_loop_triangles1_instruction: |
        Complete the code to draw
        these triangles.  The first one is done for you.  Hint:  3 triangles in a
        360 degree rotation.
      grade4_artist_nested_loop_triangles2_instruction: "Let's make a quick adjustment\nto
        get completely different image!  \r\nHint: ? × 10 = 360"
      grade4_artist_nested_loop_triangles3_instruction: "Can you draw a hexagon by\nlooping
        the triangle code?\r\nHint: 6 × ? = 360"
      grade4_artist_nested_loop_triangles4_instruction: |
        Hi! I'm the Artist. Let's
        try some different types of drawings together. Can you help me draw the bottom
        teeth in the alligator's mouth?
      grade4_artist_nested_loop_triangles5_instruction: "Create a sun by nesting\nthe
        starter code in another loop.\r\n\r\nTo get this cool design with a hollow\ncenter,
        you'll need to jump forward by the length of the triangle before\nturning."
      grade4_artist_nested_loop_triangles6_instruction: |
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_nestedLoops_challenge_instruction: "Click here to see the full\ninstructions
        again!\r\n\r\nHere is the code for an interesting shape.  What\nhappens when
        you repeat it multiple times, turning between each iteration?   Notice\nthat
        the turns in this shape add up to 420 degrees, which means that when\nyour
        artist is done drawing, it will be facing a different direction than\nwhen
        you started.  That new direction is exactly 60 degrees to the right of\nwhere
        you began."
      grade4_artist_nestedLoops_challenge2_instruction: |
        Now for a challenge!  Feel
        free to use trial and error. You are not expected to get the image perfect
        the first time.   Want to see more hints?  Click here!
      grade4_artist_parameters_squares1_instruction: |
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade4_artist_parameters_triangles1_instruction: |
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade4_artist_parameters_triangles2_instruction: "Тебе удалось заметить в блоках
        этих функций какое-нибудь отличие? Нажми «Выполнить», чтобы увидеть, что произойдет."
      grade4_artist_parameters_triangles2b_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles3_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles4_instruction: |
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade4_artist_parameters_trianglesx_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_bee_conditionals_nested_loops_instruction: |
        Collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade4_bee_conditionals_new1_instruction: |
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      grade4_bee_conditionals_new1a_instruction: |
        Help the bee make all of the honey.
        You can only make honey at a honey comb, but you can check any space to see
        if there is a honey comb.
      grade4_bee_conditionals_new2_instruction: |
        Can you help the bee collect the
        nectar from the flowers? You can only collect nectar from flowers, but you
        can check any space to see if there is a flower.
      grade4_bee_conditionals_new2a_instruction: |
        Make all of the honey. It's actually
        more efficient to check each space for a honey comb, even when you know some
        are empty.
      grade4_bee_conditionals_new3a_instruction: |
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade4_bee_conditionals_new3b_instruction: |
        Uh oh! The bee is not sure if he
        should collect nectar or make honey. Can you help him out?
      grade4_bee_conditionals_new3c_instruction: |
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using one loop inside of another
        loop.
      grade4_bee_conditionals_quantum1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      grade4_bee_conditionals_quantum2_instruction: "Прямо сейчас пчела нуждается
        в нектаре. Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ
        ОБЛАКО, чтобы узнать, скрывается ли под ним цветок. Если он там, ты можешь
        собрать нектар."
      grade4_bee_conditionals_quantum3_instruction: |
        Now I just want to make honey.
        Some of these clouds might have honeycombs under them. The way we've been
        going about things won't work here. Be sure to check if a honeycomb is hiding
        behind each cloud!
      grade4_bee_conditionals_quantum4_instruction: |
        Sometimes this cloud covers
        a flower, and sometimes it covers a honeycomb! Use the if/else block to collect
        nectar if it is a flower, else to make honey (because it is a honeycomb).
      grade4_bee_conditionals_quantum5_instruction: "There will be either a flower\nor
        a honeycomb under each of those clouds!\r\n\r\nUse the `if/else` block\nto
        collect nectar if there is a flower.\r\nOtherwise, make honey (because\nthere
        is a honeycomb)."
      grade4_bee_functions_instruction: |
        Have we met before? I'm the farmer! Please
        help me remove this pile of dirt and fill this hole.
      grade4_bee_functions1_instruction: "Собери весь нектар со всех цветков."
      grade4_bee_functions10_instruction: |
        Assessment: Use the given function to
        collect nectar from each flower.
      grade4_bee_functions11_instruction: |
        Assessment: Create a function to turn,
        move forward and make 3 honey, then return the bee to where it started and
        turn back.
      grade4_bee_functions2_instruction: "Функции — это блоки кода, выполняющие определенную
        задачу. Используй функцию «собрать 2 порции нектара», чтобы собрать нектар
        с каждого цветка."
      grade4_bee_functions3_instruction: "Функции — это блоки кода, выполняющие определенную
        задачу. Используй функцию «собрать 5 порций нектара», чтобы собрать 5 порций
        нектара сразу. Также убедись, что ты используешь циклы с оптимальным количеством
        блоков."
      grade4_bee_functions4_instruction: "Функция «перемещаться и собирать нектар»
        позволяет пчеле поворачивать, собирать нектар и затем возвращаться в начало.
        Используй функцию, чтобы собрать весь нектар."
      grade4_bee_functions5_instruction: This puzzle will be deleted!
      grade4_bee_functions6_instruction: |
        Now write the function to collect nectar
        from the three flowers.
      grade4_bee_functions7_instruction: |
        Create a function and call it to collect
        nectar at each flower and make honey at each honeycomb.
      grade4_bee_functions8_instruction: |
        Create your own function that goes down
        a path, gets nectar, makes honey, and then returns the bee to the top of the
        path. Then collect all the nectar and make all the honey!
      grade4_bee_functions9_instruction: "Red flowers can have an unknown amount\nof
        nectar each time you run the puzzle.   \r\n\r\nCreate a function that collects\nall
        of the nectar from each flower."
      grade4_bee_nestedLoops0_instruction: "Используй цикл, чтобы собрать весь нектар."
      grade4_bee_nestedLoops1_instruction: "Собери весь нектар со всех цветов. Используй
        вложенный цикл."
      grade4_bee_nestedLoops2_instruction: Can you determine the missing blocks?
      grade4_bee_nestedLoops2a_instruction: |
        Can you create a nested loop to collect
        all of the nectar?
      grade4_bee_nestedLoops3_instruction: "Собери весь нектар путем создания вложенного
        цикла."
      grade4_bee_nestedLoops4_instruction: "Собери весь нектар с каждого цветка и
        приготовь мед в каждой соте. Используй вложенный цикл."
      grade4_bee_nestedLoops5_instruction: "Challenge time!\r\n\r\nCollect all of\nthe
        nectar from each flower and make honey at each honeycomb. \r\n\r\nHint:\nYou
        will need 4 repeat blocks!"
      grade4_bee_nestedLoops_assess_instruction: "**Assessment:** Collect all of\nthe
        nectar and make all of the honey using loops.\r\n\r\nHint: There are several\npossible
        solutions!"
      grade4_designProcess_vid_instruction: |
        Prepare to build a project within some
        given parameters.
      grade4_farmer_functions1_instruction: |
        Have we met before? I'm the farmer!
        Please help me remove this pile and fill this hole.
      grade4_farmer_functions2_instruction: |
        Take the code you just wrote it and
        use it to define a new function. Call the function twice to complete the puzzle.
      grade4_farmer_functions3_instruction: |
        Try using a couple of repeat blocks
        within your function definition.
      grade4_farmer_functions4_instruction: |
        Swap out your repeat loops for more
        versatile while loops.
      grade4_farmer_functions5_instruction: |
        Things are going to start getting trickier,
        but don't give up! You can use the same while loops to check both spaces
        in each pass.
      grade4_farmer_functions6_instruction: |
        The paths are a different length. You
        can use a different type of while loop to keep the pattern going as long as
        you need to.
      grade4_frozen_freeplay_instruction: "Теперь ты — настоящий художник! Создай
        снежную страну чудес."
      grade4_frozen_functions0_instruction: |
        Can you figure out what number to replace
        the question marks with to draw a circle?
      grade4_frozen_functions1_instruction: |
        Use the new “draw a circle” function
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions1a_instruction: |
        Use the new “Create a circle” block
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions2_instruction: |
        Now let's create 20 overlapping circles,
        turning 18 degrees between each circle.
      grade4_frozen_functions3_instruction: |
        Here's a ”Create circle” block that
        can make circles of different sizes. Can you use this to create a small circle
        of size 5 and a larger circle of size 10?
      grade4_frozen_functions4_instruction: |
        Intricate snow patterns can be created
        with very simple shapes. Can you make a pattern by repeating 5 circles of
        size 5 and 5 circles of size 10?
      grade4_frozen_nested_loop_diamonds1_instruction: |
        Let’s use a repeat block
        to create a rhombus. Like a square, all sides are equal length, but the angles
        are different. This one has 60 degree and 120 degree angles instead of all
        90 degree angles.
      grade4_frozen_nested_loop_diamonds2_instruction: |
        Did you know every snowflake
        is a different shape? Let's create a new snowflake by using another “Repeat"
        block to repeat a parallelogram 4 times, turning right by 90 degrees between
        each parallelogram.
      grade4_frozen_nested_loop_diamonds3_instruction: |
        Now, let's create a new
        snowflake by using the repeat block to repeat a parallelogram 10 times, turning
        right by 36 degrees between each one.
      grade4_frozen_nested_loop_rectangle1_instruction: |
        Hi, I’m Anna of Arendelle!
        Let’s use a repeat block to create a rectangle. This one is  200 pixels long
        and 100 pixels tall. All of the corners are 90 degree angles.
      grade4_frozen_square_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make a
        square with the “Repeat” block, which uses fewer blocks. How many times (???)
        should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop1_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make
        a square with the “Repeat” block, which uses fewer blocks. How many times
        (???) should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop2_instruction: |
        Let's create three squares, turning
        after each square. Be sure to turn by 120 degrees before each new square.
      grade4_frozen_square_loop3_instruction: "Сможешь создать снежинку, используя
        блок «повторить», чтобы 10 раз нарисовать квадрат, и блок «повернуть», чтобы
        поворачивать на 36 градусов после рисования каждого квадрата?"
      grade4_playlab_freeplay_instruction: "It's free play time! Have fun with all\nthe
        blocks in your tool box. \n"
      grade4_playLab_proj_example1_instruction: instructions
      grade4_playLab_proj_example1a_instruction: |
        Take a look at this project.  Do
        you see how it was made?
      grade4_playLab_proj_example2a_instruction: |
        Take a look at this project.  Do
        you see how it was made?
      grade4_playlab_test_instruction: |
        Используй стрелку «вправо» для стрельбы сердцами.

        Как мы должны зарабатывать очки в нашей игре? Увеличивай значение своей переменной «очки» на 1 каждый раз, когда собака попадает в кота сердечком. Используй событие «когда персонаж 2 касается», чтобы твои очки обновлялись. Ты можешь увеличивать значение своей переменной, задав «очки = очки + 1». Заработай 10 очков (по одному очку за раз), чтобы пройти уровень.
      grade4_playlab_test2_instruction: |
        Here's a function called `jump` that causes
        your main character to jump up 100 pixels. Run the program and use the jump
        function to collect all of the flags by moving the dog with the arrow keys.
      grade4_prompt_test_instruction: This is a test play lab level.
      grade4_review_artist1_instruction: |
        Hi, I'm an artist. You can write code
        to make me draw almost anything. Use a few blocks to make me draw over the
        grey lines in the picture. (Each line is 100 pixels long)
      grade4_review_artist2_instruction: "Этому дому нужна крыша! Нарисуй треугольник.
        \ Подсказка: все три стороны имеют одинаковую длину."
      grade4_review_artist3_instruction: |
        The jump block moves the artist without
        drawing. Draw the dashed line using both the `jump forward` and `move forward`
        blocks. Each line is 50 pixels long.
      grade4_review_bee1_instruction: |
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      grade4_review_bee2_instruction: "Собери нектар с каждого цветка и приготовь
        мед в каждой соте."
      grade4_review_bee3_instruction: "Используй цикл, аналогичный циклу из предыдущей
        головоломки, но добавь в него поворот."
      grade4_scaffolded_project1_instruction: |
        It is amazing how much you have learned!
        Let's put them together to make a game, step by step.
      grade4_scaffolded_project2_instruction: "Now let's get things moving! Use\nthese
        event handlers and actions to make your hero move.\r\n\r\nWe've added\nthese
        blocks to your tool box to help you.\r\n"
      grade4_scaffolded_project3_instruction: "Now that your game has a hero, it's\ntime
        to start adding other actors and assigning them behaviors. \r\n\r\nAdd\ntwo
        or more additional actors to your game and make them move. Do you want\nto
        have an actor patrol back and forth? Try using a these new blocks to bring\nthese
        other components of your game to life!"
      grade4_scaffolded_project4_instruction: |
        Just getting the actors moving is
        a great step, but we need to program some interactions to make this really
        feel like a game. A simple way to do this is to add or remove points when
        actors collide with projectiles or each other. Find some interesting ways
        to change the score in your game.
      grade4_scaffolded_project4a_instruction: |
        Just getting the actors moving is
        a great step, but we need to program some interactions to make this really
        feel like a game. A simple way to do this is to add or remove points when
        actors collide with projectiles or each other. Find some interesting ways
        to change the score in your game.
      grade4_scaffolded_project5_instruction: |
        Now spend some time making sure the
        game works the way you want. Try including a way to win or lose your game.
      grade4_scaffolded_project6_instruction: |
        You've finished! Now you can play
        your game or share it with your friends and classmates!
      grade5_artist_binary1_instruction: |
        Двоичное представление — это способ представления информации посредством использования только двух сигналов.  А именно, мы собираемся использовать сигнал «выкл» (представленный числом 0) и сигнал «вкл» (представленный числом 1).

        Мы привели для тебя сетку из «пикселей», по которой ты можешь перемещаться и создавать рисунки, подавая сигнал «вкл» только на определенные квадраты.  Можешь заставить художника нарисовать «01010101» в двоичной последовательности в первом ряду?
      grade5_artist_binary10_instruction: "Нажми сюда, чтобы воспользоваться подсказками."
      grade5_artist_binary11_instruction: |
        Free Play: Here's a blank canvas for
        you to draw on.  Have fun!
      grade5_artist_binary2_instruction: |
        Эта функция берет двоичную последовательность из единиц и нулей и дает художнику команду следовать за ними слева направо и сверху вниз.  Художник будет заполнять квадраты, когда он видит 1, и пропускать, когда он видит 0.

        Выполни этот код, чтобы увидеть, как художник использует двоичную последовательность, чтобы нарисовать этот узор.
      grade5_artist_binary3_instruction: |
        Which of these binary strings could you
        loop 8 times to draw this image?
      grade5_artist_binary4_instruction: |
        Can you draw this pattern by looping just
        three binary digits (0s and 1s)?
      grade5_artist_binary5_instruction: |
        Each binary string represents one row of
        this picture. Can you rearrange them so it draws a smiley face instead of
        a frowny face?
      grade5_artist_binary6_instruction: |
        Which 6 digit binary string, repeated 11
        times, will draw this image?
      grade5_artist_binary7_instruction: "Какую самую короткую двоичную последовательность
        ты можешь повторить, чтобы нарисовать этот рисунок?"
      grade5_artist_binary8_instruction: "Закончи рисунок."
      grade5_artist_binary9_instruction: "Here's a higher resolution canvas to draw\non
        - 16 pixels by 16 pixels!\r\n\r\nSee what happens when we start to get\ncreative
        with the bits?"
      grade5_artist_for_loops1_instruction: "Нарисуй этот треугольник, ширина которого
        — 50 пикселей. Подсказка: используй блок «повторить»."
      grade5_artist_for_loops10_instruction: "Can you figure out how to use all of\nthe
        things you've learned to create this image?\r\n\r\nNeed a hint? Click\nhere."
      grade5_artist_for_loops1a_instruction: |
        Try using a `for loop`to create this
        triangular design. Don't worry that the numbers are different than the last
        puzzle. As long as you turn by the right number of degrees, the artist will
        make the correct shape!
      grade5_artist_for_loops1b_instruction: |
        Experiment with the `for` loop and
        play with the `counter` variable.
      grade5_artist_for_loops2_instruction: |
        Use a `repeat` inside of a `for` loop
        to create this stack of triangles that goes from 50 pixels to 100 pixels.
      grade5_artist_for_loops3_instruction: "These triangles go from 20 pixel sides\nto
        200 pixel sides, and each triangle is 20 pixels larger than the last. \n"
      grade5_artist_for_loops4_instruction: "These squares start at 15 pixels long,\nthe
        largest is 300 pixels long, and each square is 15 pixels larger than the\nlast.
        \n"
      grade5_artist_for_loops5_instruction: "Just one little change to the code from\nthe
        last image can create this drawing. Can you figure out what that change\nis?\r\n\r\nHint:
        \ You need to remove something!"
      grade5_artist_for_loops6_instruction: |
        If you turn a little bit more or less
        than you normally would for a shape, it creates a neat effect. Try using some
        of the code from the last level, but turning 89 degrees to create this twisted
        square spiral.
      grade5_artist_for_loops7_instruction: |
        Make three small changes to the code
        from the last level to get this!
      grade5_artist_for_loops7a_instruction: |
        Take the angle down to 72 degrees to
        get a spiraled pentagon.
      grade5_artist_for_loops7b_instruction: "Use the counter inside the `set alpha`\nblock
        to get this faded center.\r\n(This hexagon pattern was made using a\n60 degree
        turn.)"
      grade5_artist_for_loops8_instruction: "Remember back in a previous stage when\nwe
        used a variable to control the number of sides in a shape? We are going\nto
        do the same thing with the `counter` variable now. This pattern starts\nwith
        a triangle and adds one side at a time until it draws a decagon (10 sides).\nEach
        side should be 100 pixels long. \n"
      grade5_artist_for_loops9_instruction: "Let's put it all together!  Using your\nknowledge
        of `for` loops and the `counter` variable, create this drawing where\neach
        shape has two more sides than the last.  Make sure that each side is\n10 times
        as long as the number of sides in the polygon.\r\n\r\nVery little\nof the
        code has been provided for you."
      grade5_artist_for_loopsfreeplay11_instruction: |
        Вдохновляющий рисунок для свободной игры: Ты уже изучил все, что нужно знать, чтобы нарисовать такой узор! Если тебя вдохновляет этот рисунок, попробуй нарисовать что-нибудь подобное. В противном случае нарисуй, что хочешь.

        Нужна подсказка? Нажми здесь.
      grade5_artist_for_loopsfreeplay12_instruction: |
        Free Play: Try using the `counter`
        variable with other drawing elements to make magical images like this one.
      grade5_artist_freeplay_instruction: |
        Create your own project! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade5_artist_functionparameters10_instruction: |
        Вдохновляющий рисунок для свободной игры: Ты уже изучил все, что нужно знать, чтобы нарисовать такой узор! Если тебя вдохновляет этот рисунок, попробуй нарисовать что-нибудь подобное. В противном случае нарисуй, что хочешь.

        Хочешь знать, как был создан наш узор для вдохновения?
      grade5_artist_functionparameters11_instruction: "Свободная игра: Вот несколько
        функций, написанных тобой, и еще несколько функций, с которыми ты можешь поэкспериментировать.
        Нарисуй что-нибудь классное! Экспериментируй с толщиной карандаша, чтобы увидеть,
        как по-разному будут выглядеть твои рисунки!"
      grade5_artist_functionparameters7_instruction: |
        This image is similar to the
        last. Can you use a `for` loop with your function to make this design?
      grade5_artist_functionparameters8_instruction: |
        Давай изменим эту функцию «нарисовать многоугольник». В нее уже введен параметр «стороны». Теперь давай добавим параметр «длина».
        Подсказка: Длина периметра каждой фигуры — 200 пикселей. Ты помнишь задачу на рисование фигур одного размера, если они имеют разное количество сторон?
      grade5_artist_functionparameters9_instruction: |
        Edit "draw a spiral edge"
        to use "length" and "sides" parameters, then recreate these shapes.
      grade5_artist_functionparameters_6_instruction: "Можешь закончить этот рисунок?
        Длина сторон каждой из фигур составляет 100 пикселей."
      grade5_artist_parameters_squares1_instruction: |
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade5_artist_parameters_squares2_instruction: |
        Now try creating the function
        from scratch! Create a function called 'draw a square' and use it to outline
        these four boxes. Make sure to add a parameter for 'length'!
      grade5_artist_parameters_stars1_instruction: |
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade5_artist_parameters_triangles1_instruction: |
        This program looks okay from
        here, but something isn't working right. See if you can figure out how to
        edit the function 'draw a triangle' to find the bug.
      grade5_artist_parameters_triangles1a_instruction: |
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade5_artist_parameters_triangles2_instruction: |
        This drawing can be easily
        created using a new type of function that includes a parameter. The sides
        of each triangle are 25 pixels larger than the last.  The first triangle has
        25 pixel sides. Replace the '???' with the correct values to draw the picture.
      grade5_artist_parameters_triangles2a_instruction: "Тебе удалось заметить в блоках
        этих функций какое-нибудь отличие? Нажми «Выполнить», чтобы увидеть, что произойдет."
      grade5_artist_parameters_triangles3_instruction: "The code for this triangle\nfunction
        is broken.\r\n\r\nCan you edit the function to fix it, and then make\ntriangles
        of length 150, 75, 25?"
      grade5_artist_parameters_triangles4_instruction: |
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade5_artist_parameters_trianglesy_instruction: "The code for this triangle\nfunction
        is broken.\r\n\r\nCan you edit the function to fix it, and then make\ntriangles
        of length 150, 75, 25?"
      grade5_artist_variables_freeplay10_instruction: |
        Free Play: Experiment with
        the number of sides this shape has. Can you change the algorithm so that the
        overall size of the shape stays the same, no matter how many sides it has?
        Hint: If you divide your starting length by the number of sides, the length
        of each side will get shorter as the number of sides gets higher.
      grade5_artist_variables_freeplay14_instruction: "Free Play: Check it out! Now\nyour
        algorithm is nested within one more loop. Experiment with changing the\nvalues
        of your two variables to draw cool patterns.\r\n\r\nFor even more effect,\ntry
        playing with color!  Use random colors inside loops to see how it changes\nyour
        design."
      grade5_artist_variables_freeplay15_instruction: "Want a second peek at the\ninspiration
        design or the hints?  Click here!\r\n\r\nOtherwise, make a design\nall your
        own!"
      grade5_artist_variables_freeplay16_instruction: |
        Still playing?  Here is a
        blank canvas where you can create whatever you want!
      grade5_artist_variables_hexagons1_instruction: "Let's try it again! \r\n\r\nCan\nyou
        set the `length` variable to 60 to make this cool design with hexagons?"
      grade5_artist_variables_letterT11_instruction: |
        Here’s more complicated code
        using the same concepts from the last puzzle - what should you set the "sides"
        variable to in order to draw this picture made of squares?
      grade5_artist_variables_new1_instruction: |
        Here is a program that will create
        an image. There are a few things that are wrong with it.
      grade5_artist_variables_octagons13_instruction: "When a shape has lots of sides,\neach
        side needs to be shorter if you want the whole pattern to fit on the\nscreen.
        \r\nLet's recreate the algorithm for this amazing pattern, but instead\nof
        manually setting the `length` variable, let's use a math block with the\n`sides`
        variable inside to make sure that each shape fits correctly. The perimeter\nof
        each polygon is 300 pixels.\r\nNeed some hints?  Click here."
      grade5_artist_variables_pentagon8_instruction: "Use what you learned in the\nlast
        puzzle to create this hexagon using the \"sides\" variable.\r\n\r\nSee\nhow
        you could change just one value to draw a triangle,  square, pentagon,\nor
        octagon?"
      grade5_artist_variables_pentagon9_instruction: |
        Now, recreate the algorithm
        from the last level and create a pentagon with sides of length 150.
      grade5_artist_variables_pentagons1_instruction: "Draw this pattern of pentagons\nwith
        100 pixel sides by setting the right value for `length` and dropping\nthe
        `length` variable into all of the the correct places. \r\n\r\nSee how\nyou
        only have to set the value for `length` once, and the code uses the right\nvalue
        everywhere?"
      grade5_artist_variables_pentagons12_instruction: |
        Let's set the "sides"
        variable to 5. The more sides we add to this algorithm, the bigger this whole
        pattern gets! Notice that there is another variable called "length". We
        can now use that wherever we have a "move forward." Set the "length" variable
        to 75 for this shape.
      grade5_artist_variables_rectangle6_instruction: |
        Now I want to make a rectangle
        that is twice as tall as it is wide. We've got a variable called "width"
        that needs to be set to 100. Can you use the math blocks to complete the code?
      grade5_artist_variables_square7_instruction: "Here’s some code that can draw\nany
        regular polygon. There’s a new variable called sides that is set to 4.\nCan
        you use the sides variable (along with the math block) to turn the right\namount
        regardless of how many sides there are in the polygon?\r\n\r\nClick\nhere
        to go back to the hint!"
      grade5_artist_variables_triangles1_instruction: "Let's draw an equilateral\ntriangle.
        \r\n\r\nIt has to be exactly 100 pixels long on each side."
      grade5_artist_variables_triangles2_instruction: |
        Instead of using "move forward
        by 150," the "move" block is now referencing a variable called "length."
        Can you set "length" to 150 to draw this new triangle?
      grade5_artist_variables_triangles3_instruction: "Drag a number block to both\nthe
        `set length` block and the `repeat _ times` block to draw a set of 50\npixel
        triangles. \n"
      grade5_bee_for_loops1_instruction: |
        Use a loop to collect the nectar from each
        flower.
      grade5_bee_for_loops10_instruction: |
        If your loop is counting down, the increment
        is subtracted from your counter variable each loop. What should your increment
        be to collect 15, then 12, then 9, 6, 3 nectar?
      grade5_bee_for_loops11_instruction: |
        Ready for a challenge?  Take what you've
        learned about loops and try to solve this problem. Remember: You may have
        to run through solutions multiple times before you figure out all of the steps.
      grade5_bee_for_loops2_instruction: |
        Add the code necessary to make sure the
        bee collects all the nectar. Look at how much code you need for this puzzle!
        (We'll learn a simpler way in the next puzzle.)
      grade5_bee_for_loops3_instruction: "Ah, the \"for loop\" makes this much easier!\nAll
        the code you need is here, take a look at how it is put together then\nclick
        \"Run\" to see how it works. \n"
      grade5_bee_for_loops4_instruction: "Replace the ??? in the \"for loop\" with\nthe
        largest amount of nectar the bee has to collect. \n"
      grade5_bee_for_loops5_instruction: "Теперь нам нужно двигаться вперед «счетчик»
        раз, затем собрать нектар «счетчик» раз.  Можешь использовать два цикла «повторить»
        для решения этой задачи?"
      grade5_bee_for_loops6_instruction: |
        You can also use a "for loop" to count
        down. Try gathering this nectar by counting down from 5 to 1 by 1.
      grade5_bee_for_loops7_instruction: |
        The last number in your for loop is called
        the "increment". Each time the loop is run, the counter variable changes
        by the value of the increment. Try collecting these flowers using an increment
        of 2.
      grade5_bee_for_loops8_instruction: |
        You've got this! What should your increment
        be to collect 3, 6, 9, 12, 15 nectar?
      grade5_bee_for_loops9_instruction: "Now, let's combine the \"counter\" variable\nwith
        a math block! How can you use the \"counter\" variable to navigate this\ngarden
        with the fewest number of blocks possible? What do you need to do to\ncollect
        3, 6, 9, 12, 15 nectar this time? The secret is in the \"counter\"\nvariable!\r\n\r\nRemember:
        If your loop is counting up, the increment is added\nto your \"counter\" variable
        each time through."
      grade5_bee_parameters_new1_instruction: |
        Help the bee collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade5_bee_parameters_new2_instruction: |
        Let's take that last program you
        wrote and turn it into a function. Then, call the function to collect the
        nectar when needed. This may seem like a strange step now, but it will be
        really helpful soon!
      grade5_bee_parameters_new3_instruction: |
        Time to put the function to the test!
        Let's see if it makes it any easier to collect these three rows of nectar.
      grade5_bee_parameters_new4_instruction: |
        How is your function holding up? We
        may need to make some adjustments here. Can you add a 'length' parameter
        to the function so that it will still work if the row is a different length?
      grade5_bee_parameters_new5_instruction: |
        Challenge Level! You are doing great
        so far! Let's use this parametric function to collect a lot of nectar.
      grade5_bee_parameters_new6_instruction: |
        You can make your program much shorter
        and more efficient when you notice new patterns. Try using some other blocks
        to make a short and simple solution!
      grade5_bee_parameters_new7_instruction: |
        Something looks a little different.
        Can you modify your function to account for all this honey that needs to be
        made?
      grade5_bee_parameters_new8_instruction: |
        That's a great function you've created!
        You are officially on your own now. Collect all the nectar. Make all the honey.
      grade5_bee_parameters_new9_instruction: |
        Bonus Challenge! If you are feeling
        ambitious, try this puzzle. It is possible to collect all of the nectar and
        make all of the honey using only a For loop, a Repeat loop, a function call,
        and a turn. Try it all on your own, or view the hints to build it step-by-step.
        Great job with this stage!
      grade5_pixelation_instruction: |
        Encode an image of anything you like using
        binary. Remember that the binary language will be represented with '0' and
        '1' only.
      grade5_playlab_freeplay_instruction: "It's free play time! Have fun with all\nthe
        blocks in your tool box. \n"
      grade5_playlab_parameters_points1_instruction: "Here's the same game but most\nof
        the code is hidden. We've added a new function called `score_points.`\r\n\r\nAdd\na
        new parameter called `points` to the `player_score` function. \r\n\r\nThe\n`score_points`
        function should be able to both add and remove points from\n`player_score`
        depending on which actor is hit.\r\nChanging the score by 1\nwill add a point,
        while changing the score by -1 will subtract a point.\r\n\r\nWhen\nyou're
        done, click \"Run\" to play.  When Dog scores 6 points, you will move\non
        to the next puzzle. "
      grade5_playlab_variables1_instruction: |
        This time you don't have to write
        any code, just hit "Run" to play the game! In this game, you're the dog
        who is trying to collect more flags than the cat. Use the down arrow to control
        the dog. Press "Finish" when you're done playing.
      grade5_playlab_variables10_instruction: "Добавь в функцию «патруль» параметр
        «персонаж», чтобы можно было вызвать эту функцию для каждого персонажа на
        экране. Помни, что персонажи соответствуют номерам 1, 2 и 3."
      grade5_playlab_variables11_instruction: "Добавь в функцию «патруль» еще один
        параметр под названием «скорость». Используй блок «задать скорость» с новым
        параметром «скорость», чтобы помочь пингвину собрать оба флажка, прежде чем
        другие объекты получат хотя бы один."
      grade5_playlab_variables12_instruction: |
        Давай немного повеселимся! Посмотри на предоставленный код и попробуй догадаться, как узнать, что делает каждый блок.

        Используй клавиши стрелок, чтобы управлять собакой и собрать все флажки.
      grade5_playlab_variables13_instruction: "Используй блок «когда персонаж касается»,
        чтобы отправить собаку обратно в левый верхний угол, ТОЛЬКО если собака коснется
        кого-либо из других персонажей."
      grade5_playlab_variables14_instruction: "It's free play time! Have fun with\nall
        the blocks in your tool box. \n"
      grade5_playlab_variables1ask_instruction: "This time, when you press 'run',\nyou
        will see a 'prompt' asking you for a number. This number will be stored\nin
        a variable used to set the dog's speed.\r\n\r\n\r\nPay attention to how\nthis
        program is written!"
      grade5_playlab_variables2_instruction: "Гонка в предыдущей головоломке была
        не очень-то честной! Измени переменную «скорость_собаки», чтобы убедиться,
        что ты можешь собрать больше флажков, чем Кот. Побеждает тот, кто первым соберет
        10 флажков!"
      grade5_playlab_variables3_instruction: "Вот новый вариант игры! Используй стрелки
        «налево» и «направо» для перемещений и стрелку «вверх» для прыжков. Посмотрим,
        сможешь ли ты собрать все флажки."
      grade5_playlab_variables4_instruction: |
        Now we're using a variable called
        "height" to control how high the dog can jump. Update the "height" variable
        so that the dog can jump high enough to reach all the flags.
      grade5_playlab_variables5_instruction: "You've seen now how a variable can\nbe
        used to set the height of an actor's jump. How else could  you use a variable?\r\n\r\nLet's\nbuild
        a game! First we'll need a score. Try setting the 'points' variable\nto give
        yourself 10 free points!"
      grade5_playlab_variables6_instruction: |
        Используй стрелку «вправо» для стрельбы сердцами.

        Как мы должны зарабатывать очки в нашей игре? Увеличивай значение своей переменной «очки» на 1 каждый раз, когда собака попадает в кота сердечком. Используй событие «когда персонаж 2 касается», чтобы твои очки обновлялись. Ты можешь увеличивать значение своей переменной, задав «очки = очки + 1». Заработай 10 очков (по одному очку за раз), чтобы пройти уровень.
      grade5_playlab_variables6ask_instruction: "This time, you need 100 points to\nwin!
        \ Don't worry though, you can choose how many points you earn each time\nyou
        score a hit!\r\nTry adding the `ask` block and changing the number 1 out\nfor
        the variable `value`."
      grade5_playlab_variables7_instruction: "Хорошо, теперь давай убедимся, что игра
        не слишком легкая. Каждый раз, когда кот (персонаж 2) попадает желтыми сердечками
        в собаку (персонаж 1), ты теряешь балл. Начни с 10 очков, чтобы было не слишком
        сложно. Пусть для прохождения уровня счет уменьшится с 10 до 0."
      grade5_playlab_variables71_instruction: |
        Вот наша игра с предыдущего этапа, но большая часть кода скрыта. Появилась новая функция «зарабатывать_очки».

        Измени функцию таким образом, чтобы в переменную «очки_игрока» добавился параметр «очки».

        Значение переменной «очки_игрока» должно увеличиваться каждый раз, когда собака попадает сердечками в кота, и уменьшаться каждый раз, когда Кот попадает сердечками в собаку.

        Примечание: Когда закончишь, нажми «Выполнить», чтобы запустить игру.  Когда собака наберет 6 очков, ты сможешь перейти к следующей головоломке.
      grade5_playlab_variables81_instruction: |
        Мы добавили еще одну последнюю функцию для тебя.

        Используй оператор «если», чтобы запрограммировать свою игру на вызов функции «на уровень вверх», когда значение «очки_игрока» становится больше определенного числа.

        Например, «очки_игрока» > 6

        Сыграй в игру и пройди 4 уровень, чтобы перейти к следующей головоломке.
      grade5_playlab_variables9_instruction: "Это функция «патруль». Измени ее, чтобы
        переместить кота на 400 пикселей вверх, а затем на 400 пикселей вниз."
      grade5_playlab_variables_freeplay_instruction: "Free Play time! Here are all\nof
        the variables we've played with so far in this stage, as well as a few\nmore
        in case you want them. \r\n\r\nNotice that there are now so many blocks\nin
        our toolbox that they need to be organized!  Here, we've put each piece\ninto
        an appropriate category.  Take some time to explore everything that is\navailable.
        When you're done browsing, make a game or story using repeats,\nvariables,
        and events.  \r\n\r\nHint: scroll down to see all the commands\nin the workspace."
      grade5_playlab_variables_jump1_instruction: |
        This puzzle uses a hidden function
        that makes the dog jump when the 'up' arrow is pressed. The height of the
        jumps can be set at the start of the game using the 'jumpPower' variable.
        Try to touch all of the flags!
      grade5_prompt_test_instruction: |
        Variables aren't always numbers. What if
        you wanted to store a word or text? Experiment with the new `ask` block.
      gradek_adventurer_loops1_instruction: |
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      gradek_adventurer_loops10_instruction: |
        Help me get all of the gold from this
        cave.
      gradek_adventurer_loops2_instruction: |
        How can Laurel collect all five piles
        of gold using only one --> block?
      gradek_adventurer_loops3_instruction: |
        Can you fix Laurel's path to get all
        of this gold?
      gradek_adventurer_loops4_instruction: |
        Use what you learned to get all of the
        coins.
      gradek_adventurer_loops4a_instruction: |
        Add to this code to collect all of
        the coins.
      gradek_adventurer_loops5_instruction: |
        What should you add to this code to
        get all of the gold?
      gradek_adventurer_loops6_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_challenge_instruction: |
        Challenge: The gold goes all
        the way up these stairs!  Write the code to help me get it all.
      gradek_adventurer_loops8_instruction: |
        Help me get the gold from this deep
        valley.
      gradek_adventurer_loops9_instruction: |
        Help me get all of the gold from this
        cave.
      gradek_adventurer_loopsFP_instruction: |
        Eureka!  Collect as much gold as you
        can!
      gradek_adventurer_loopsPre_instruction: |
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      gradek_artist_loops1_instruction: |
        Help the artist draw this line two times
        forward.
      gradek_artist_loops2_instruction: |
        Our artist is trying to draw a line five
        times, but can't get it right.  Can you help?
      gradek_artist_loops3_instruction: |
        Now, use a `repeat` loop to draw this line
        five times!
      gradek_artist_loops4_instruction: |
        Draw a line eight steps long. This will
        become our horizon.
      gradek_artist_loops5_instruction: Let's put a nice hill in the back.
      gradek_artist_loops6_instruction: |
        Use the `repeat` loop to add waves to the
        water.
      gradek_artist_loops7_instruction: We need a ladder up to the boat.
      gradek_artist_loops8_instruction: |
        Challenge: The stairs are broken.  Help
        me fix them.
      gradek_artist_loops9_instruction: |
        Time to head back to land. Help me put down
        stones so I don't fall in!
      gradek_artist_loopsA_instruction: |
        Help me build steps to watch the ship sail
        away.
      gradek_artist_loopsFP_instruction: |
        The artist saw something funny in the distance.  Draw
        what you think he saw.
      gradek_artist_loopsPre_instruction: |
        This is a new type of puzzle called "Artist".
        Play with the level and draw something fun.
      gradek_playlab_events1_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      gradek_playlab_events1a_instruction: |
        Add a block so that when you click the
        "up" button, Olive the Cat walks up.
      gradek_playlab_events2_instruction: |
        Edit the code so that when the second
        bird is clicked, your program plays a sound!
      gradek_playlab_events2a_instruction: |
        Add a block so that when you click "down"
        Olive the Cat walks down.
      gradek_playlab_events3_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      gradek_playlab_events3a_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      gradek_playlab_events3b_instruction: |
        Add a button so that Olive the Cat moves
        right when you click the "right" button.
      gradek_playlab_events4_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      gradek_playlab_events4a_instruction: |
        Add a block so that Olive the Cat moves
        left when you click the "left" button.
      gradek_playlab_events5_instruction: |
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      gradek_playlab_events5a_instruction: |
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      gradek_playlab_eventsA_instruction: |
        Now, have the actor change to a random
        size AND have it play a random sound when you click the center button.
      gradek_playlab_eventsFP_instruction: |
        Add anything you want to this game.  Can
        you make Olive the Cat disappear when you click on her?
      gradek_playlab_eventsPre_instruction: |
        This is a Play Lab level.  Move blocks
        to the workspace and see what happens!
      gradeK_sequence_4_instruction: Try this one yourself from the beginning.
      Guess The Number_instruction: |
        Build whatever you want. This is an example
        of a number-guessing game!
      Harvesting_instruction: |
        Uh oh, I lost my map and can't remember what I planted.
        Every sprout could grow up to be corn, beans, or pumpkins. Can you write some
        code to pick all the crops, no matter what they are?
      Infinity_catch_instruction: "Используя клавиши со стрелками, можешь сделать
        так, чтобы Эльза («персонаж 2») догнала Анну?"
      Infinity_finale_instruction: "Создавай, что хочешь, и поделись этим с друзьями!"
      Infinity_move_collide_instruction: "Хиро — это «персонаж 1».  Перемести его
        направо, к Бэймаксу и задай воспроизведение звукового сигнала, когда они соприкоснутся."
      Infinity_move_directions_instruction: "Бэймакс — это «персонаж 2».  Добавь блоки
        «двигаться» и затем перемести Бэймакса, используя клавиши со стрелками.  Заставь
        его коснуться двух других персонажей."
      Infinity_move_right_instruction: "Хиро — это «персонаж 1».  Используя блок «двигаться»,
        перемести Хиро направо, чтобы он дотронулся до Бэймакса."
      Infinity_repeat_instruction: "Используй блок «повторять бесконечно», чтобы Анна
        двигалась вверх и вниз на 400 пикселей."
      Infinity_say_instruction: "Используй блок «говорить», чтобы Анна сказала «Привет!»."
      Infinity_shoot_instruction: "Бэймакс — это «персонаж 2».  Заставь Бэймакса запустить
        ракету в Хиро."
      Infinity_shoot_directions_instruction: "Хиро — это «персонаж 3».  Заставь Хиро
        запустить снаряд в каждого из четырех персонажей.  Подожди одну секунду между
        бросками."
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: "Прикоснись еще к нескольким снежинкам!"
      Infinity_touch_four_instruction: "Передвинь Анну вверх, вниз, влево и вправо,
        чтобы она коснулась каждой из четырех снежинок."
      Infinity_touch_score_instruction: "Сделай так, чтобы Анна получала очки каждый
        раз, когда она касается снежинки.  Затем нажми «Выполнить» и направляй ее,
        чтобы она коснулась каждой снежинки по одному разу."
      Inspirational Artwork_instruction: "Free Play Inspiration: You've now learned\neverything
        you need to know to make a pattern like this! If this picture inspires\nyou,
        try to make something similar. Otherwise, create something all your own.\r\n\n\r\nWant
        to know how our inspiration pattern was made? "
      'Internet Simulator: Broadcast Mode_instruction': "Now use the Internet Simulator\nto
        send the battleship moves. For setup, join a Room with your group, and\nadd
        ships to your paper board for each opponent. When playing, all communication\nmust
        be done through the tool, so no talking, but have fun!\r\n"
      'Internet Simulator: Broadcast_instruction': "Now use the Internet Simulator\nto
        send the battleship moves. For setup, join a Room with your group, and\nadd
        ships to your paper board for each opponent. When playing, all communication\nmust
        be done through the tool, so no talking, but have fun!\r\n"
      'Internet Simulator: DNS Mode_instruction': |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: DNS_instruction': |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: Packets_instruction': "Develop a Protocol for Reliably\nSending
        a Message.\r\n\r\nConstraints:\r\n- Packets may contain only 8 characters\r\n-\nPackets
        may drop with small probability\r\n- Packets may not arrive in order"
      'Internet Simulator: Routers_instruction': |
        Send messages with your classmates
        (Click to see full instructions)
      'Internet Simulator: Sending Binary Messages 1_instruction': "Develop, document,\nand
        test a protocol that allows you to use Internet Simulator to relay a message.\nSee
        the worksheet for more detailed instructions.  \n"
      'Internet Simulator: Sending Binary Messages_instruction': "Develop, document,\nand
        test a protocol that allows you to use Internet Simulator to relay a message.\nSee
        the worksheet for more detailed instructions.  \n"
      'Internet Simulator: Sending Numbers_instruction': |
        With your partner, develop
        a protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Text_instruction': |
        Work with a partner or in
        a small team to develop a protocol that allows you to send formatted text.
        See the worksheet handed out by your teacher for more detailed instructions!
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: "Нарисуй короткую линию вверх и длинную
        вправо!"
      K-1 artist 1 level 10_instruction: "Нарисуй пунктирную линию, используя блоки
        «прыгнуть» и «нарисовать»"
      K-1 artist 1 level 9_instruction: "Нарисуй это, используя три линии"
      K-1 Artist Loops 1_instruction: "Нарисуй эту линию, двигаясь на восток 4 раза."
      K-1 Artist Loops 2_instruction: "А теперь нарисуй ту же самую линию, используя
        цикл."
      K-1 Artist Loops 3_instruction: "Можешь поместить эти блоки в цикл, чтобы нарисовать
        6 линий?"
      K-1 Artist Loops 4_instruction: "Можем ли мы использовать цикл, чтобы нарисовать
        верх этого замка?"
      K-1 Artist Loops 5_instruction: "Что надо повторить в цикле 4 раза, чтобы нарисовать
        эти лестницы?"
      K-1 Artist Loops 6_instruction: "Здесь необходимо два цикла: один, чтобы двигаться
        вверх по лестнице, и второй, чтобы двигаться вниз."
      K-1 Artist Loops 7_instruction: "Циклы могут помочь тебе закончить этот узор."
      K-1 Artist Loops 8_instruction: "У этой лестницы более длинные ступеньки."
      K-1 Artist Loops 9_instruction: "Как нарисовать эти ступеньки самым простым
        способом?"
      K-1 Artist Loops Free Play_instruction: "Свободная игра! Нарисуй что-нибудь
        веселое!"
      K-1 Artist1 1_instruction: "Нарисуй ногу человека одной линией"
      K-1 Artist1 10_instruction: "С помощью блоков «прыгнуть» и «нарисовать» нарисуй
        пунктиром путь к сокровищам Х"
      K-1 Artist1 2_instruction: "Нарисуй коту усы, используя две линии!"
      K-1 Artist1 3_instruction: "Нарисуй две линии на восток и две линии на север,
        чтобы закончить этот дом!"
      K-1 Artist1 4_instruction: "Нарисуй линии вверх, горизонтально и вниз, чтобы
        закончить замок!"
      K-1 Artist1 5.5_instruction: "Закончи третью башню замка, используя короткие
        линии"
      K-1 Artist1 5_instruction: "Нарисуй стебель этого цветка двумя линиями!"
      K-1 Artist1 6_instruction: "Закончи картинку, используя блок «прыгнуть»!"
      K-1 Artist1 7_instruction: "Используй блок «прыгнуть», чтобы перемещаться без
        рисования. Подпрыгни вверх и нарисуй линию."
      K-1 Artist1 8_instruction: "Нарисуй пунктирную линию, используя блоки «прыгнуть»
        и «нарисовать»"
      K-1 Artist1 9_instruction: "Нарисуй пунктирную линию с помощью блоков «нарисовать»
        и «прыгнуть»"
      K-1 Artist1 Assessment 1_instruction: "Нарисуй короткие и длинные линии!"
      K-1 Artist1 Assessment 2_instruction: "Нарисуй короткие пунктирные линии!"
      K-1 Artist2 1_instruction: "Нарисуй квадрат ниже треугольника."
      K-1 Artist2 2_instruction: "Сделай прыжок и нарисуй квадрат возле дома."
      K-1 Artist2 3_instruction: "Над этим квадратом нарисуй еще один квадрат"
      K-1 Artist2 4_instruction: "Нарисуй прямоугольник для завершения моста."
      K-1 Artist2 5_instruction: "Нарисуй прямоугольник для завершения опоры моста"
      K-1 Artist2 6_instruction: "Нарисуй два квадраты, чтобы сделать прямоугольник!"
      K-1 Artist2 Assessment1_instruction: "Тест: Нарисуй квадрат рядом с другим квадратом."
      K-1 Artist2 Free Draw_instruction: "Нарисуй что-нибудь!"
      K-1 Artist2_7_instruction: "Нарисуй прямоугольник, чтобы у комода появился верхний
        ящик!"
      K-1 Bee 1_instruction: "Перемести меня к цветку, собери нектар, а затем перемести
        меня к соте и приготовь мед"
      K-1 Bee 10_instruction: "Возьми четыре порции нектара и сделай две порции меда!"
      K-1 Bee 11.5_instruction: "Возьми четыре порции нектара и сделай четыре порции
        меда!"
      K-1 Bee 11_instruction: "Возьми три порции нектара и сделай одну порцию меда"
      K-1 Bee 12_instruction: "Возьми три порции нектара и сделай две порции меда!"
      K-1 Bee 13_instruction: "Возьми три порции нектара и сделай одну порцию меда!"
      K-1 Bee 14_instruction: "Перемести меня к нектару, собери его, затем перемести
        меня к меду и приготовь мед"
      K-1 Bee 15_instruction: "Возьми два порции нектара и сделай две порции меда!"
      K-1 Bee 2_instruction: "Перемести меня к цветку, собери нектар, а затем перемести
        меня к соте и приготовь мед"
      K-1 Bee 3_instruction: "Перемести меня к цветку, собери нектар, а затем перемести
        меня к соте и приготовь мед"
      K-1 Bee 4_instruction: "Возьми две порции нектара и сделай две порции меда!"
      K-1 Bee 5_instruction: "Возьми три порции нектара и сделай три порции меда!"
      K-1 Bee 6_instruction: "Возьми две порции нектара и сделай две порции меда!"
      K-1 Bee 7_instruction: "Возьми три порции нектара и сделай две порции меда!"
      K-1 Bee 8_instruction: "Возьми две порции нектара и сделай две порции меда!"
      K-1 Bee 9_instruction: "Возьми две порции нектара и сделай две порции меда!"
      K-1 Bee Assessment 1_instruction: "Возьми нектар, чтобы сделать мед!"
      K-1 Bee Assessment 2_instruction: "Возьми нектар, чтобы сделать мед!"
      K-1 Bee Loops 1_instruction: "Возьми нектар, чтобы сделать мед!"
      K-1 Bee Loops 10_instruction: "Собери весь нектар и приготовь весь мед."
      K-1 Bee Loops 11_instruction: "Получи весь нектар и мед!"
      K-1 Bee Loops 12_instruction: "Получи весь нектар и весь мед."
      K-1 Bee Loops 2_instruction: "Используй цикл «повторить», чтобы двигаться, затем
        собери нектар и приготовь мед!"
      K-1 Bee Loops 3_instruction: "Используй три цикла «повторить», чтобы собрать
        нектар и приготовить мед!"
      K-1 Bee Loops 4_instruction: "Используй циклы «повторить», чтобы собрать нектар,
        приготовить мед и двигаться!"
      K-1 Bee Loops 5_instruction: "Используй циклы «повторить», чтобы получить нектар
        и мед!"
      K-1 Bee Loops 6_instruction: "Используй цикл «повторить», чтобы получить нектар,
        мед и двигаться!"
      K-1 Bee Loops 7_instruction: "Собери нектар и приготовь мед!"
      K-1 Bee Loops 8_instruction: "Собери нектар и приготовь мед!"
      K-1 Bee Loops 9_instruction: "Собери весь нектар и приготовь весь мед."
      K-1 Bee Loops Assessment 1_instruction: "Собери нектар, чтобы приготовить мед.
        Используй циклы, чтобы двигаться!"
      K-1 Bee Loops Assessment 2_instruction: "Используй циклы, чтобы собрать нектар
        и сделать мед!"
      K-1 Bee Puzzle 12_instruction: "Получите три нектара и затем сделайте два мёда"
      K-1 Building a Foundation Assessment_instruction: "Построй трехуровневую пирамиду;
        других указаний нет, так что складывай блоки, пока не получишь правильный
        результат!"
      k-1 maze 1_instruction: "Поможешь мне двигаться на запад, чтобы добраться до
        свиньи?"
      K-1 Maze 10_instruction: "Помоги мне обойди взрывчатку и добраться до свиньи! "
      K-1 Maze 11_instruction: "Наметь путь и проведи меня к глупой свинье. Остерегайся
        взрывчатки, а не то перья полетят! Подсказка: Он к югу от меня."
      K-1 Maze 2_instruction: "Перемести меня на восток, чтобы добраться до свиньи!"
      K-1 Maze 3_instruction: "Перемести меня на юг, чтобы добраться до свиньи!"
      K-1 Maze 4_instruction: "Перемести меня на север, чтобы добраться до свиньи!"
      K-1 Maze 5_instruction: "Перемести меня на восток, чтобы добраться до свиньи!"
      K-1 Maze 6_instruction: "Перемести меня в одну сторону, затем в другую, чтобы
        добраться до свиньи!"
      K-1 Maze 7_instruction: "Перемести меня в одну сторону, затем в другую, чтобы
        добраться до свиньи!"
      K-1 Maze 8_instruction: "Перемести меня в одну сторону, затем в другую, чтобы
        добраться до свиньи!"
      K-1 Maze 9_instruction: "Перемести меня в одну сторону, затем в другую, чтобы
        добраться до свиньи!"
      K-1 Maze Assessment 1_instruction: "Тест. Доведи меня до свиньи!"
      K-1 Maze Assessment 12_instruction: "Уровень теста"
      K-1 Maze Assessment 13_instruction: "Уровень теста"
      K-1 Maze Assessment 2_instruction: "Тест. Доведи меня до свиньи!"
      K-1 maze debug 1_instruction: "Измени код, чтобы помочь мне добраться до свиньи!"
      K-1 maze debug 10_instruction: "Отладь этот уровень, переставляя и изменяя блоки,
        чтобы довести меня до свиньи!"
      K-1 maze debug 11_instruction: |
        Это тест!
        Отладь этот уровень, переставляя и изменяя блоки, чтобы довести меня до свиньи.
      K-1 maze debug 2_instruction: "Выясни, чего не хватает, а потом добавь блоки,
        чтобы довести меня до свиньи!"
      K-1 maze debug 3_instruction: "Что-то пошло не так. УДАЛИ блоки, чтобы довести
        меня до свиньи!"
      K-1 maze debug 4_instruction: "Проверь эти блоки и исправь их! Мне кажется,
        я двигаюсь в неправильном направлении."
      K-1 maze debug 5_instruction: "Наладь этот уровень, переставляя и добавляя блоки,
        чтобы добраться до свиньи!"
      K-1 maze debug 6_instruction: "Отладь этот уровень, переставляя и изменяя блоки,
        чтобы довести меня до свиньи!"
      K-1 maze debug 7_instruction: "Отладь этот уровень, переставляя и изменяя блоки,
        чтобы довести меня до свиньи!"
      K-1 maze debug 8_instruction: "Отладь этот уровень, переставляя и добавляя блоки,
        чтобы довести меня до свиньи!"
      K-1 maze debug 9_instruction: "Отладь этот уровень, переставляя и изменяя блоки,
        чтобы довести меня до свиньи!"
      K-1 Maze debug Assessment 1_instruction: "Тест. Отладь этот уровень, переставляя
        и добавляя блоки, чтобы довести меня до свиньи!"
      K-1 Maze Loops 1_instruction: "Доведи меня до свиньи!"
      K-1 Maze Loops 10_instruction: "Доведи меня до свиньи! Этого намного проще добиться
        с циклом «повторить»."
      K-1 Maze Loops 11_instruction: |
        Доведи меня до свиньи!
        Этого намного проще добиться с циклом «повторить».
      K-1 Maze Loops 12_instruction: "Доведи меня до свиньи! Этого намного проще добиться
        с циклом «повторить»."
      K-1 Maze Loops 2_instruction: "Используй блок «повторить», чтобы довести меня
        до свиньи!"
      K-1 Maze Loops 3_instruction: "Доведи меня до свиньи! Обязательно используй
        циклы «повторить»."
      K-1 Maze Loops 4_instruction: "Доведи меня до свиньи!"
      K-1 Maze Loops 5_instruction: "Доведи меня до свиньи! Обязательно используй
        циклы «повторить»."
      K-1 Maze Loops 6_instruction: "Доведи меня до свиньи! Обязательно используй
        циклы «повторить»."
      K-1 Maze Loops 7_instruction: "Доведи меня до свиньи! Обязательно используй
        циклы «повторить»."
      K-1 Maze Loops 8_instruction: "Используй циклы «повторить», чтобы довести меня
        до свиньи!"
      K-1 Maze Loops 9_instruction: "Доведи меня до свиньи!"
      K-1 Maze Loops Assessment 1_instruction: "Посмотри, чему ты научился! Используй
        цикл «повторить», чтобы довести меня до свиньи!"
      K-1 Maze Loops Assessment 2_instruction: "Используй циклы «повторить», чтобы
        довести меня до свиньи!"
      K-1 Maze Multi 14_instruction: "Уровень теста"
      K-1 Maze Multi 15_instruction: "Уровень теста"
      K-1 Maze Sequence Assessment 1_instruction: |
        Давай посмотрим, чему ты тебе удалось научиться!
        Двигайся сначала в одну, а затем в другую сторону, чтобы помочь мне добраться до свиньи.
      K-1 Maze Sequence Assessment 2_instruction: "Двигайся сначала в одну, а затем
        в другую сторону, чтобы помочь мне добраться до свиньи."
      K2.0 sequence 1_instruction: "Измени код, чтобы помочь мне добраться до свиньи!"
      K2.0 sequence 10_instruction: |
        Challenge: Move me around the TNT to get to
        the pig.
      K2.0 sequence 12_instruction: 'Let''s get that pig! '
      K2.0 sequence 2_instruction: "Измени код, чтобы помочь мне добраться до свиньи!"
      K2.0 sequence 3_instruction: |
        Something is not quite right. REMOVE a block
        to get me to the pig!
      K2.0 sequence 4_instruction: |
        Time for a shorter puzzle!  Move one way, then
        another to get me to the pig.
      K2.0 sequence 4a_instruction: Try this puzzle again from the start!
      K2.0 sequence 5_instruction: "Перемести меня в одну сторону, затем в другую,
        чтобы добраться до свиньи!"
      K2.0 sequence 6_instruction: "Выясни, чего не хватает, а потом добавь блоки,
        чтобы довести меня до свиньи!"
      K2.0 sequence 7_instruction: |
        Debug this level by changing a block to get me
        to the pig!
      K2.0 sequence 8_instruction: |
        Debug this level by adding blocks to get me to
        the pig!
      K2.0 sequence 9_instruction: "Помоги мне обойди взрывчатку и добраться до свиньи! "
      K2.0 sequence FP_instruction: |
        Now figure out how to get the pig any way you
        can!
      K2.0 sequence pre_instruction: |
        Play with these blocks to see if you can get
        me to the pig!
      kikiTesta_instruction: "Our adventurer wants to collect coins.  But she can\nonly
        use 4 blocks to get them.\r\n\r\nCan you help her grab as many as she\ncan
        using just 4 blocks?"
      kikiTesting_instruction: |
        .\r
         .\r
        .\r
        .\r
        .\r
        .\r
        \r
        .\r
        \r
      KTest1_instruction: Can you make me move South once more to get to the pig?
      KTest2_instruction: |
        Trace the path and lead me to the silly pig. Avoid TNT
        or the feathers will fly!
      level 'grade3_Loops_10_instruction: "Such a busy bee!\r\n\r\nHelp bee collect\nall
        of the nectar and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_11_instruction: "The shape of this path is different than\nthe
        others. \r\n\r\nCan you collect all of the nectar using as few blocks\nas
        possible?"
      level 'grade3_Loops_12_instruction: |
        Can you find the quickest way for the
        bee to collect all of the nectar and make all of the honey?
      level 'grade3_Loops_2_instruction: |
        This time, use a loop to gather all of
        the nectar.
      level 'grade3_Loops_3_instruction: |
        Use a `repeat` loop to collect all of the
        nectar.
      level 'grade3_Loops_4_instruction: |
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      level 'grade3_Loops_5_instruction: |
        What a beautiful field of flowers!   Help
        the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      level 'grade3_Loops_6_instruction: "How many times can loops help you in this\npuzzle?
        \ \r\n\r\nLoops are your friend! Use a few of them to complete this\npuzzle
        with the fewest blocks possible."
      level 'grade3_Loops_7_instruction: "Those flowers look tasty!\r\n\r\nCollect\nnectar
        from each of the flowers using the fewest blocks possible."
      level 'grade3_Loops_8_instruction: |
        Collect all the nectar and make all of
        the honey using the fewest blocks possible.
      level 'grade3_Loops_9_instruction: |
        Collect nectar from each flower and make
        honey at each honeycomb using the fewest blocks possible.
      level grade3_Loops_2_instruction: |
        This time, use a loop to gather all of the
        nectar.
      Limited Quantity of Blocks Test_instruction: |
        Get me to the pig by adding only
        one block
      love_spring_1_instruction: |
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: "Figure out how to change this code so that Robin\nchooses
        a number between 1 and 20.  \r\n\r\nWhen you're ready, press \"Run\"\nand
        play until you guess Robin's number!"
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      Mike Pair Programming_instruction: Here are the instructions
      Mike Test Bee Conditionals 1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      Mike Test Bee Conditionals 2_instruction: |
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      MikeAssessment1_instruction: Now do it right!
      MikeStar_instruction: Draw this.
      MikeStarHard_instruction: Draw this.
      MikeStarNested_instruction: Draw this.
      MikeTest1_instruction: Who knows what you should do?!?!
      MikeTest2_instruction: Draw something!
      MikeTest3_instruction: Build Something
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: "In this version of the Internet Simulator,\nyou
        can connect to up to 5 other people in a room. When you send messages\nin
        the room, everyone receives them. What are some of the challenges of this\nsystem,
        and how might you solve them?\r\n"
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
      NetSim Standalone Routers Addresses_instruction: "For this activity, connect\nto
        a router with the others in your group. Important note: The router will\nonly
        properly route messages where the first 4 bits are the To: address and\nthe
        second 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical
        addresses. For now, level is set up for 4 bit to and from addresses]"
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
      NetSim Standalone Sending Numbers_instruction: "You and your partner can now\nreliably
        send messages back and forth without extra coordination! While you're\nalways
        sending bits back and forth, you can also represent those bits as decimal\nnumbers.
        What kinds of information can you represent with this system? \n"
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: "Нарисуй что-нибудь классное! Твой код сохранен
        в виде проекта и к нему можно будет вернуться в любое время."
      NEW Course 4 Artist Functions 1_instruction: "Можешь создать квадрат со сторонами
        100 пикселей, используя цикл «повторить»?"
      NEW Course 4 Artist Functions 10.1_instruction: "Нарисуй этот узор, используя
        функции из предыдущих головоломок."
      NEW Course 4 Artist Functions 10_instruction: "Нажми «Изменить», чтобы заполнить
        блоки в определении функции и создать квадрат размером 40 пикселей."
      NEW Course 4 Artist Functions 11_instruction: "Теперь мы хотим создать новую
        функцию «нарисовать ряд квадратов», которая будет рисовать ряд из шести квадратов.
        \ Сможешь написать эту функцию с помощью функции «нарисовать квадрат 20»,
        которую мы уже создали? Примечание: Обрати внимание, что мы изменили карандаш,
        сделав его намного толще. Нажми «Изменить» на функции «нарисовать квадрат
        20», чтобы увидеть, как это выглядит!"
      NEW Course 4 Artist Functions 12_instruction: "Используй функцию «нарисовать
        ряд квадратов» из последней головоломки, чтобы нарисовать этот узор."
      NEW Course 4 Artist Functions 13_instruction: "Можешь нарисовать звезду с помощью
        функции «нарисовать ряд квадратов»? Подсказка: Измени функцию «нарисовать
        ряд квадратов» таким образом, чтобы тебе не пришлось вызывать ее дважды.  Обрати
        внимание, тебе придется переместиться вперед на определенное количество пикселей
        и повернуть на 144 градуса."
      NEW Course 4 Artist Functions 14_instruction: "Время свободной игры! "
      NEW Course 4 Artist Functions 2_instruction: "Можешь нарисовать 3 квадрата на
        расстоянии 20 пикселей друг от друга? Подсказка: размер каждого квадрата —
        100 пикселей"
      NEW Course 4 Artist Functions 3_instruction: "Это новый тип блока. Такой блок
        называется «Функция». Нажми «Изменить», а затем впиши код для рисования квадрата
        со сторонами 100 пикселей. Когда закончишь редактировать функцию, нажми «Закрыть»,
        чтобы вернуться обратно к программе."
      NEW Course 4 Artist Functions 4_instruction: "Используй функцию «нарисовать
        квадрат», чтобы нарисовать этот узор. Подсказка: Тебе необходимо будет использовать
        блок «повернуть направо на 120 градусов» после рисования каждого квадрата."
      NEW Course 4 Artist Functions 5_instruction: "Как блок «нарисовать квадрат»
        узнает, какие команды выполнять? Нажми «Изменить» в блоке функции «нарисовать
        квадрат». Блоки в редакторе функции являются определением, которое выполняет
        команду «нарисовать квадрат». Закончив изучать блоки, нажми на «Сохранить
        и закрыть», а затем на «Выполнить»."
      NEW Course 4 Artist Functions 6_instruction: "Сможешь нарисовать этот рисунок,
        используя функцию «нарисовать квадрат»? Подсказка: квадраты находятся на расстоянии
        20 пикселей друг от друга."
      NEW Course 4 Artist Functions 7_instruction: "Ты понимаешь, как использовать
        блоки функции? Давай изменим этот квадрат таким образом, чтобы его размер
        составлял 200 пикселей. Подсказка: нажми «Изменить», чтобы войти в редактор
        функции «нарисовать квадрат». Не забывай нажимать «Закрыть», чтобы выйти из
        редактора функции. "
      NEW Course 4 Artist Functions 8_instruction: "Мы создали для тебя новую функцию
        «нарисовать треугольник».  Можешь изменить определение функции таким образом,
        чтобы она рисовала треугольник со сторонами 100 пикселей?"
      NEW Course 4 Artist Functions 9_instruction: "Можешь решить эту задачу, добавив
        только один блок?"
      NEW Course 4 Artist Functions inspire_instruction: "Нажми здесь, чтобы еще раз
        увидеть вдохновляющий рисунок."
      New Course 4 Artist Functions Level 4_instruction: "Используй функцию «нарисовать
        квадрат», чтобы нарисовать этот узор."
      NEW Course 4 Artist Params 1_instruction: "Давай зададим определение этой функции
        таким образом, чтобы она рисовала квадрат со сторонами 50 пикселей. Нажми
        «Изменить», чтобы начать."
      NEW Course 4 Artist Params 10_instruction: "Создай блок функции «нарисовать
        шестиугольник», содержащий параметр «длина». Подсказка: Длина сторон этого
        шестиугольника — 100 пикселей. "
      NEW Course 4 Artist Params 11_instruction: "Догадываешься, как нарисовать эту
        фигуру? Измени функцию таким образом, чтобы она использовала параметр «стороны»."
      NEW Course 4 Artist Params 12_instruction: "Можешь закончить этот рисунок? Длина
        сторон каждой из фигур составляет 100 пикселей."
      NEW Course 4 Artist Params 12a_instruction: "Это изображение аналогично предыдущему.
        Можешь использовать в своей функции цикл со счетчиком, чтобы нарисовать этот
        рисунок?"
      NEW Course 4 Artist Params 13_instruction: |
        Давай изменим эту функцию «нарисовать многоугольник». В нее уже введен параметр «стороны». Теперь давай добавим параметр «длина».
        Подсказка: Длина периметра каждой фигуры — 200 пикселей. Ты помнишь задачу на рисование фигур одного размера, если они имеют разное количество сторон?
      NEW Course 4 Artist Params 14_instruction: "Измени функцию «нарисовать спираль»
        таким образом, чтобы она использовала параметры «длина» и «стороны», а затем
        нарисуй фигуры заново."
      NEW Course 4 Artist Params 15_instruction: "Свободная игра: Вот несколько функций,
        написанных тобой, и еще несколько функций, с которыми ты можешь поэкспериментировать.
        Нарисуй что-нибудь классное! Экспериментируй с толщиной карандаша, чтобы увидеть,
        как по-разному будут выглядеть твои рисунки!"
      NEW Course 4 Artist Params 2_instruction: "Создай с нуля функцию «нарисовать
        треугольник» со сторонами 50 пикселей"
      NEW Course 4 Artist Params 3_instruction: "Теперь давай воспользуемся этой функцией,
        чтобы нарисовать 5 треугольников в ряд. Подсказка: треугольники расположены
        на расстоянии 30 пикселей друг от друга."
      NEW Course 4 Artist Params 4_instruction: "Тебе удалось заметить в блоках этих
        функций какое-нибудь отличие? Нажми «Выполнить», чтобы увидеть, что произойдет."
      NEW Course 4 Artist Params 5_instruction: "Заполни поле «???» параметра «длина»
        в блоке ввода. Подсказка: Длина сторон пятиугольника — 100 пикселей. "
      NEW Course 4 Artist Params 6_instruction: "Введи значение параметра «длина»,
        чтобы нарисовать эти фигуры, заменив поле «???» правильными числами. Длина
        сторон квадрата и треугольника — 100 пикселей, а длина каждой стороны шестиугольника
        — 75 пикселей."
      NEW Course 4 Artist Params 7_instruction: "Можешь закончить этот рисунок? Подсказка:
        Длина сторон каждого треугольника на 25 пикселей больше последнего.  Длина
        сторон первого треугольника — 25 пикселей."
      NEW Course 4 Artist Params 8_instruction: "Код для этой функции рисования треугольника
        неисправен. Можешь изменить функцию, чтобы исправить его, а затем нарисовать
        треугольник с длиной сторон 25, 50 и 75?"
      NEW Course 4 Artist Params 9_instruction: "Нажми «Изменить», чтобы задать определение
        функции «нарисовать квадрат» и добавить параметр. Она должна брать параметр
        «длина», как и функция для треугольника. На этот раз нарисуй 3 квадрата: длиной
        25, 50 и 75 пикселей на расстоянии 100 пикселей друг от друга."
      NEW Course 4 Artist Params inspire_instruction: |
        Вдохновляющий рисунок для свободной игры: Ты уже изучил все, что нужно знать, чтобы нарисовать такой узор! Если тебя вдохновляет этот рисунок, попробуй нарисовать что-нибудь подобное. В противном случае нарисуй, что хочешь.

        Хочешь знать, как был создан наш узор для вдохновения?
      NEW Course 4 Artist Vars 1.5_instruction: "Посмотри на этот код. Видишь, как
        блоки «установить длину» и «длина» работают вместе? Нажми «Выполнить», чтобы
        увидеть, как это работает. "
      NEW Course 4 Artist Vars 12_instruction: "А теперь восстанови алгоритм из предыдущей
        головоломки и нарисуй пятиугольник со сторонами длиной 150."
      NEW Course 4 Artist Vars 2.5_instruction: "Посмотри на этот код. Видишь, как
        блоки «установить длину» и «длина» работают вместе? Нажми «Выполнить», чтобы
        увидеть, как это работает. "
      NEW Course 4 Artist Vars 2_instruction: "Перенеси блок с числом к блоку «установить
        длину», чтобы нарисовать ряд треугольников размером 50 пикселей. "
      NEW Course 4 Artist Vars 4 5_instruction: "Ты замечательно справился с последней
        головоломкой. Давай попробуем еще раз. На этот раз создадим классный рисунок
        с шестиугольником размером 60 пикселей."
      NEW Course 4 Artist Vars 4_instruction: "Давай попробуем еще раз. Можешь задать
        переменную «длина», чтобы нарисовать этот классный рисунок с шестиугольниками?
        Подсказка: Это величина, кратная 10."
      NEW Course 4 Artist Vars 6_instruction: |
        Нарисуй этот узор, поместив переменную «длина» в нужные места и установив правильное значение длины. (Подсказка: это величина, кратная 10).

        Видишь, мы установили значение длины только один раз, а программа везде использует правильное значение?
      NEW Course 4 Bee For Loops 1_instruction: "Используй цикл, чтобы собрать нектар
        с каждого цветка."
      NEW Course 4 Bee For Loops 10_instruction: "Используй переменную «счетчик» цикла
        со счетчиком, чтобы регулировать перемещение по горизонтали."
      NEW Course 4 Bee For Loops 10a_instruction: "Готовы ответить на вызов?  Воспользуйся
        полученными знаниями о циклах и попытайся решить эту задачу. Помни: Возможно,
        тебе придется тестировать свое решение множество раз, прежде чем ты разберешься
        во всех этапах."
      NEW Course 4 Bee For Loops 11_instruction: "Можешь использовать переменную цикла,
        чтобы регулировать перемещение и сбор нектара?"
      NEW Course 4 Bee For Loops 2_instruction: "Добавь код, необходимый для того,
        чтобы пчела собрала весь нектар. Посмотри, сколько кода тебе нужно для этой
        головоломки! (В следующей головоломке мы изучим более простой способ.)"
      NEW Course 4 Bee For Loops 3_instruction: "Ага, цикл со счетчиком позволит сделать
        это намного проще! Здесь приведен весь код, который тебе нужен. Посмотри,
        как он объединен вместе, затем нажми «Выполнить» и увидишь, как это работает. "
      NEW Course 4 Bee For Loops 4 4_instruction: "Теперь нам нужно двигаться вперед
        «счетчик» раз, затем собрать нектар «счетчик» раз.  Можешь использовать два
        цикла «повторить» для решения этой задачи?"
      NEW Course 4 Bee For Loops 4_instruction: "Замени поле «???» в цикле со счетчиком
        максимальным количеством нектара, которое пчела должна собрать. "
      NEW Course 4 Bee For Loops 5 5_instruction: "Ты понимаешь, как использовать
        цикл со счетчиком? Давай поможем пчеле собрать остальной нектар."
      NEW Course 4 Bee For Loops 5_instruction: "Ты также можешь использовать цикл
        со счетчиком для обратного отсчета. Попробуй собрать этот нектар, считая от
        5 до 1 с шагом 1."
      NEW Course 4 Bee For Loops 6_instruction: "Последнее число в твоем цикле со
        счетчиком называется «приращение». При каждом выполнении цикла значение переменной
        «счетчик» меняется на величину приращения. Попробуй собрать эти цветы с величиной
        приращения, равной 2."
      NEW Course 4 Bee For Loops 7_instruction: |
        Теперь давай объединим переменную «счетчик» с математическим блоком! Как ты можешь использовать переменную «счетчик» для передвижения, используя как можно меньше блоков? Что тебе нужно сделать, чтобы в этот раз собрать 3, 6, 9, 12, 15 порций нектара? Секрет кроется в переменной «счетчик»!

        Помни: Если твой цикл считает в прямом направлении, то величина приращения прибавляется к твоей переменной «счетчик» при каждой итерации цикла.
      NEW Course 4 Bee For Loops 8_instruction: |
        Все правильно! Какой должна быть величина приращения, чтобы собрать 3, 6, 9, 12, 15 порций нектара?
        Подсказка: Сколько тебе нужно добавить к каждому из указанных чисел, чтобы получить следующее число?
      NEW Course 4 Bee For Loops 9_instruction: "Если твой цикл считает в обратном
        направлении, то величина приращения вычитается из твоей переменной «счетчик»
        при каждой итерации цикла. Какой должна быть величина приращения, чтобы собрать
        15, затем 12, затем 9, 6, 3 порции нектара?"
      NEW Course 4 Bee For Loops 95_instruction: "Посмотри на каждый фрагмент цикла
        со счетчиком, который ты только что создал.  Догадываешься, какие числа тебе
        нужно дублировать для решения этой головоломки? Почему она работает именно
        так?"
      NEW Course 4 Play Lab Params 11_instruction: "Время свободной игры! Весело проведи
        время, используя все блоки на своей панели инструментов. "
      NEW Course 4 Play Lab Params 5 5_instruction: "Давай попробуем еще раз, но уже
        без помощи. Что тебе нужно изменить, чтобы персонажи стали патрулировать?"
      NEW Course 4 Play Lab Vars 4 5_instruction: "«Как ты думаешь, какие действия
        будет выполнять этот код? Нажми «Выполнить», чтобы увидеть, что произойдет»."
      NEW Course 4 Play Labs For Loops 7a_instruction: "Применяя все полученные знания,
        сможешь сделать так, чтобы динозавр делал шаг вперед каждый раз, когда пингвин
        считает?"
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: "Время свободной игры!
        Весело проведи время, используя все блоки на своей панели инструментов. "
      NEW Course 4 Play Labs For Loops 8a_instruction: "Задача: Как можно использовать
        цикл со счетчиком, чтобы каждый персонаж делал круг, говорил свой номер, а
        затем исчезал с экрана? "
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame,
        and then figuring out how it works. You can use the arrow keys\nto move the
        ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n
        \ \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: "Freeplay: Here are some functions to play with.
        \ Can\nyou draw a bat?\r\n"
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: "Криперов лучше не трогать. Осторожно
        обойди их и зайди в свой безопасный дом."
      Overworld Chop Tree - allthethings_instruction: |
        Wood is a very important resource.
        Many things are made from it. Walk to the tree and use the “destroy block”
        command to chop it down.
      Overworld Chop Tree_instruction: "Дерево — очень важный ресурс. Из него сделаны
        многие вещи. Дойди до дерева и примени команду «блок „срубить“», чтобы срубить
        его."
      Overworld Chop Trees_instruction: "Нам нужно построить дом до захода солнца.
        Для домов нужно много деревьев. Сруби все 3 дерева."
      Overworld Free Play 20x20_instruction: "Поздравляем! Ты решил все наши головоломки!
        Теперь придумай, построй и создай что-нибудь неповторимое, используя все полученные
        знания."
      Overworld Free Play_instruction: "Это твоя среда, с которой ты можешь играть.
        Ты выбрал, что создавать."
      Overworld House Frame - A_instruction: "Давай построим свой дом! Это место хорошо
        подходит. Построй остов на блоках земли."
      Overworld House Frame - C_instruction: "Давай построим свой дом! Это место хорошо
        подходит. Построй остов на блоках земли."
      Overworld House Frame B_instruction: "Одна стена закончена, давай достроим оставшуюся
        часть дома, следуя поэтажному плану! Нужно будет повторять много действий."
      Overworld House Frame B2_instruction: "Одна стена закончена, давай достроим
        оставшуюся часть дома, следуя поэтажному плану! Нужно будет повторять много
        действий."
      Overworld House Frame C_instruction: "Одна стена закончена, давай достроим оставшуюся
        часть дома, следуя поэтажному плану! Нужно будет повторять много действий."
      Overworld House Frame Chosen_instruction: "Построй оставшуюся часть своего дома
        из любого материала по своему выбору. Тебе пригодится команда «повторить»."
      Overworld House Frame_instruction: "Давай построим свой дом! Это место хорошо
        подходит. Построй остов на блоках земли."
      Overworld Minecart Track_instruction: "Ты вернешься обратно на поверхность с
        большим количеством полезных ископаемых. Теперь мы собираемся построить железную
        дорогу вдоль грунтовой дороги, идущей от твоего дома. Первый шаг — это расчистка
        дороги. Иди по дороге и вырубай деревья."
      Overworld Move to Sheep_instruction: "Добавь еще одну команду «двигаться вперед»,
        чтобы подойти к овце."
      Overworld Place Wall_instruction: "Любой дом начинается со стены. Построй первую
        часть дома, поместив команды «разместить» и «двигаться вперед» в цикл «повторить»."
      Overworld Plant Crops_instruction: "Лучше планировать все наперед. Посади саженцы
        по берегам водоема, чтобы в будущем тебе не пришлось голодать."
      Overworld Powered Minecart_instruction: "Отличная работа! Ты добыл много ресурсов
        и построил скромный дом. Теперь проложи железную дорогу от края карты до двери
        своего дома."
      Overworld Shear Sheep_instruction: "Пора стричь овец! Используй команду «стричь»,
        чтобы собрать шерсть с обеих овец."
      Pattern Bee 1_instruction: |
        What a strange field of goodies! I wonder if there's
        a pattern here...
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: "Here's your Big Game as you last left it.\nTry
        clicking the Remix button to spin off a new remix of your project.\r\n\r\nAny\nchanges
        you make after you click Remix will be saved on your new remix and\nnot on
        your main Big Game."
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. \n"
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. \n"
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: "Функции позволяют создавать новые блоки! Мы переместили
        блоки для рисования квадрата внутрь функции «нарисовать квадрат». Можешь использовать
        функцию «нарисовать квадрат», чтобы нарисовать очки? Расстояние между квадратами
        — 75 пикселей."
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" \n"
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Pizza on a Plate_instruction: |
        Project Idea: Create a picture of something
        familiar from the real world. This requires persistence and planning!
      Planning Farmer_instruction: |
        What a strange field of goodies! I wonder if
        there's a pattern here...
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      playEventsK1_instruction: |
        This game is called "Play Lab".  See if you can
        figure out what each block does.
      playEventsK2_instruction: "Jorge wants to say \"Hi there.\"\r\n\r\nCan you\nhelp?"
      playEventsK3_instruction: |
        Jorge wants to be scratched behind the ears!  Can
        you make it so that when you click Jorge he is happy?
      playEventsK4_instruction: |
        Can you make it so that Jorge the dog chases Robin
        the bird when you click the up arrow?
      playEventsK5_instruction: |
        Now add code so that Robin flies away when you click
        the forward arrow.
      playEventsK6_instruction: |
        Have Robin talk back to Jorge when you click on
        her.
      playEventsK7_instruction: What else can you do in this fun scene?
      Poorva copy U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      Prompt Test_instruction: |
        Build whatever you want. This is an example of a
        number-guessing game!
      PS copy 2-3 Bee Conditionals 5_instruction: "Be careful not to collect nectar\nfrom
        a purple flower if it doesn't have any. \r\nYou must first check if\nthe nectar
        is equal to 1 using the `if nectar` block."
      PS FR test 7-25_instruction: 'Here are your instructions for this free response.  '
      PS Log test - Define and use turnAround_instruction: |
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      PS predictive Applab level test_instruction: 'Here are some instructions. '
      Quantum Bee - Ryan_instruction: "Эти облака меня раздражают! Некоторые из облаков
        имеют цветы внутри, а некоторые нет. Я должен проверить каждое облако, и только
        получить нектар из цветков."
      Quantum Bee_instruction: Фиолетовые цветки могут иметь 1 нектар, либо 0, но
        Вы не знаете, какой именно! Будьте осторожны, не собирайте нектар с фиолетовых
        цветков, у которых его нет. Проверьте, равен ли нектар 1, используя блок "Если".
      Rocket Height Course A_instruction: |
        Follow the Design Recipe to create a function
        rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: "Прямо сейчас пчела нуждается в нектаре.
        Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ ОБЛАКО, чтобы
        узнать, скрывается ли под ним цветок. Если он там, ты можешь собрать нектар."
      Ryan - Bee Conditionals_instruction: "Прямо сейчас пчела нуждается в нектаре.
        Не все объекты являются цветами, поэтому сначала проверяй КАЖДОЕ ОБЛАКО, чтобы
        узнать, скрывается ли под ним цветок. Если он там, ты можешь собрать нектар."
      Ryan Doily Step 1_instruction: |
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: "Это функция «патруль». Измени ее, чтобы
        переместить кота на 400 пикселей вверх, а затем на 400 пикселей вниз."
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\r\n\r\nUse
        an \"if\" statement to program your game to call the \"level_up\"\nfunction
        only when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample:
        \"player_score\" > 6\r\n\r\nPlay the game, and make it past level\n4 to move
        to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      sample1_instruction: "Our adventurer wants to collect coins.  But she can only\nuse
        4 blocks to get them.\r\n\r\nCan you help her grab as many as she can\nusing
        just 4 blocks?"
      sample10_instruction: Now you can use loops to draw whatever you like!
      sample10a_instruction: "You have helped the adventurer and her bee!  As a reward,\nplease
        stay and play around in my magical village. \r\n\r\nYou should have\neverything
        you need to create a game of your own."
      sample2_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only the blocks that you have here.
      sample2a_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only 4 blocks.
      sample3_instruction: |
        Now you can help bee make all of the honey using just
        the blocks in the toolbox.
      sample3assessment_instruction: |
        Can you figure out how to gather all of this
        nectar in just one try?
      sample4_instruction: "Our adventurer has found a stash of coins in this cave.\r\n\r\nCan\nyou
        help her grab as many as she can using just 7 blocks?"
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee make all of the honey.'
      sample7assessment_instruction: |
        Can you help bee make all of the honey in just
        one try?
      sample8_instruction: |
        Look at this trove of coins! How many can you get the
        adventurer to grab?
      sample9_instruction: |
        Use loops to help the artist connect all of the dots.
      sample9a_instruction: |
        The wizard has found his potions!  Use everything you
        have learned to help him collect them.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: "Желудь! Желудь! Желудь! Используй блок «если», чтобы
        привести меня к нему, используя как можно меньше блоков."
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: "Хорошо, давай попробуем еще раз для тренировки. Это задание
        не слишком отличается, но остерегайся стены!"
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: "Блоки «если-иначе» проверяют условие, после чего выполняют
        одно действие ИЛИ другое. Чтобы помочь мне добраться до желудя, попробуй использовать
        новый блок."
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: "Еще один случай для использования блока «если-иначе»;
        сможешь сделать правильно с первой попытки?"
      scrat 20_instruction: "Можешь добавить только 3 блока, чтобы помочь мне пройти
        более сложный лабиринт? Если сделаешь все правильно, я смогу ходить по любой
        извилистой дороге, независимо от ее длины. Поторопись! Лед тает!"
      SpecialFrozenLevel_instruction: "Теперь ты — настоящий художник! Создай снежную
        страну чудес."
      Standalone_Artist_1_instruction: "Добро пожаловать к Художнику! Прежде всего
        попробуем нарисовать простой квадрат, используя блоки «повернуть направо»
        и «двигаться вперед». Длина каждой стороны должна быть 100 пикселей."
      Standalone_Artist_2_instruction: "Нарисуй этот ромб с углами 120 и 60 градусов
        и сторонами 150 пикселей."
      Standalone_Artist_3_instruction: "Можете нарисовать шестиугольник со сторонами
        100 пикселей и углами 60 градусов?"
      Standalone_Artist_4_instruction: "Теперь у тебя есть новый блок для изучения
        — цикл. Он будет повторять набор команд. Что произойдет, если ты зациклишь
        эти команды 6 раз?"
      Standalone_Artist_5.5_instruction: "Обрати внимание, как мы упростили код для
        ромба, поместив его в цикл. Ты можешь зациклить всю последовательность 12
        раз, чтобы нарисовать цветок. Подсказка: Тебе будет нужно повернуть на 30
        градусов после выполнения цикла для рисования ромба, чтобы ты не начал рисовать
        ромб поверх уже имеющегося рисунка."
      Standalone_Artist_5_instruction: "Сколько раз надо повторить цикл с ромбом,
        чтобы нарисовать цветок?"
      Standalone_Artist_6_instruction: "Чтобы создать рисунок, зацикли этот шестиугольник
        6 раз. На сколько градусов тебе нужно будет поворачивать каждый раз? Подсказка:
        раздели количество градусов в круге на число повторений цикла."
      Standalone_Artist_7_instruction: "Функция — это еще один инструмент программирования,
        помогающий тебе избежать ненужных повторений. Эта функция рисует цветок, так
        что ты можешь в любое время использовать ее, чтобы нарисовать цветок. Используй
        этот блок и новый блок «прыгнуть», чтобы нарисовать эти цветы. Подсказка:
        Цветы расположены на расстоянии 150 пикселей друг от друга"
      Standalone_Artist_8_instruction: "Вот функция «нарисовать фигуру», которую мы
        запрограммировали таким образом, чтобы она рисовала шестиугольники. Выполни
        код, чтобы увидеть, что именно она делает, а затем поэкспериментируй с этой
        функцией и посмотри, что произойдет. Можешь нарисовать узор из квадратов,
        треугольников или восьмиугольников?"
      Standalone_Artist_9_instruction: "Ну а теперь действуй — рисуй все, что хочешь!
        У тебя даже есть пустая функция, для которой ты можешь написать любые действия,
        какие захочешь!"
      Standalone_Artist_v2_instruction: "Добро пожаловать к Художнику! Прежде всего
        попробуем нарисовать простой квадрат, используя блоки «повернуть направо»
        и «двигаться вперед». Длина каждой стороны должна быть 100 пикселей."
      StepIntro_instruction: Here's how to use the "Step" button.
      template test_instruction: what up
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi
      testArtistForTestK_instruction: |
        The Artist is trying to draw a line five times,
        but can't get it right.  Can you help?
      Testing Quantum Farmer_instruction: "Wow, look at that! \r\n\r\nI don't know\nhow
        many shovelfuls of dirt this hole needs.  \r\nCan you write a program\nthat
        keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      The Vigenere Cipher Widget_instruction: "Инструкции"
      The Vigenere Cipher_instruction: "Инструкции"
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows
        you to use Internet Simulator to relay a message. See the worksheet\nfor more
        detailed instructions.  \n"
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: "Инструкции"
      U2 frequency random sub_instruction: "Инструкции"
      U2 vigenere cipher_instruction: "Инструкции"
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor
        Reliably Sending a Message.\r\n\r\nConstraints:\r\n- Packets may contain\nonly
        6 characters\r\n- Packets may drop with small probability\r\n- Packets\nmay
        not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship
        moves. For setup, join a Room with your group, and add ships to\nyour paper
        board for each opponent. When playing, all communication must be\ndone through
        the tool, so no talking, but have fun!\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter
        with the others in your group. Important note: The router will only\nproperly
        route messages where the first 4 bits are the To: address and the\nsecond
        4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical
        addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na
        router with the others in your group. The Internet Simulator now provides\na
        place for you to put the To and From addresses, so you don't have to type\nout
        the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: "Add an else statement so that the program\nwill
        tell the user when they are right and when they are wrong. (Click to\nsee
        full instructions)\r\n"
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - images - bee free play_instruction: Do this
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: "Console.log the records returned by a\ncall
        to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1.5_instruction: "Console.log the records returned by a\ncall
        to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1.6_instruction: "Console.log the records returned by a\ncall
        to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1_instruction: "Console.log the records returned by a call\nto
        readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 2_instruction: "Change the table name so that the records\nare
        read from the new table.(Click to see full instructions)\r\n"
      U3 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand
        to read from a table that does not exist. (Click to see full instructions)\r\n"
      U3 - Read Record - 4.1_instruction: "Print out each record return from the\nreadRecords
        call individually. (Click to see full instructions)\r\n"
      U3 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall
        individually. (Click to see full instructions)\r\n"
      U3 - Read Record - 5 and half_instruction: "Print out the name of each movie\nin
        the records return from the readRecords call. (Click to see full instructions)\r\n"
      U3 - Read Record - 5_instruction: "Print out the name of each movie in the\nrecords
        return from the readRecords call. (Click to see full instructions)\r\n"
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: "Create an array of all the movies made\nin
        2008 and print it out. (Click to see full instructions)\r\n"
      U3 - Search Terms - 2_instruction: "Print out all the movies with year 2008\nusing
        the readRecords search terms. (Click to see full instructions)\r\n"
      U3 - Search Terms - 3_instruction: "Print whether or not there are movies matching\nthe
        search criteria (Click to see full instructions)\r\n"
      U3 - Search Terms - 4_instruction: "Print whether or not there are movies matching\nthe
        search criteria (Click to see full instructions)\r\n"
      U3 - Search Terms - 5_instruction: "Print out the cities that are in California\nor
        have a population of 2,000,000. (Click to see full instructions)\r\n"
      U3 - Search Terms - 6_instruction: "Print out the cities that are in California\nor
        have a population of 2,000,000. (Click to see full instructions)\r\n"
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: "Add functionality that counts how many heads\nin
        a row are flipped. (Click to see full instructions)\r\n"
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: Clicker game - Try it out!
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3 Variables consolelog_instruction: |
        Use the write block to display the value
        of size
      U3 Variables flower example_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables gray square_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: |
        Test out your predictions
        from the previous level.
      U3 Variables randomize your square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      U3 Variables write_instruction: |
        Use the write block to display the value of
        size
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: "Write a function called drawRectangle().\r\n(Click\nto
        see full instructions)"
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: "Read the documentation for the \"arcLeft\"\nand
        \"arcRight\" commands and then draw the squiggles as shown. \n"
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. \n"
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof
        syntax error.  App Lab did not understand which object it should be listening\nto
        for a \"click\" event so it showed an error message in the console to let\nyou
        know.  Another kind of error is a logical error - the program is valid,\nbut
        it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA
        (tricky) syntax error and logical error.  Find them, fix them, and make\nthe
        program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer.
        \n"
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. \n"
      U3L16 - intro getText_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text when\nthe
        Play Again button is clicked (Click to see full instructions) \n"
      U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      U3L16 Mad Lib getText_instruction: "Before setting the text area with your\nMad
        Libs outline, get the user's text and incorporate their responses. (Click\nto
        see full instructions) \n"
      U3L16 Mad Lib setText_instruction: "When the Next button is clicked, set the\ntext
        area to have the main outline of your How-to Mad Libs (without the user's\ninput).
        (Click to see full instructions) \n"
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase string\nfunctions
        to the user's text. (Click to see full instructions) \n"
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof
        code from the previous screen.  Try changing the value assigned to foo\nto
        see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto
        foo to see the string change. \r\n2. By only modifying the lines of code\nthat
        were given to you, try to get the output to say: “The value of foo is:\n9.
        \ And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe
        statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).
        \ Run\nthe program and you should see the output show up in the console area
        below\nthe workspace.  Then try adding a few more console.log statements.
        \ Display\nsome text.  Make another variable and display that.  \r\nThe app
        screen will\nbe blank -- that's the point.  With console.log you can test
        output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF:
        U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside
        the if statements to check for a ? in the input. \n"
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder()\nto
        get the strings \"begin\" and \"nder\" from a sentence no matter where\nin
        the sentence they exist.\r\nPrint the strings and their index to the console.\n"
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: "Write a conditional statement that detects\nif
        a command does not contain the phrase \"bad.\" If \"bad\" is not detected,\nmake
        Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry,\nI
        don't know about bad movies.\" \n"
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: "Place a console.log command below the\nreadRecords
        command. (Click to see full instructions)\r\n"
      U4 - Read Record - 1.3_instruction: "Add a console.log command inside the callback\nfunction.
        (Click to see full instructions)\r\n"
      U4 - Read Record - 1_instruction: "Use console.log to display the records returned\nby
        a call to readRecords. (Click to see full instructions)\r\n"
      U4 - Read Record - 2_instruction: "Change the table name so that the records\nare
        read from the new table. (Click to see full instructions)\r\n"
      U4 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand
        to read from a table that does not exist. (Click to see full instructions)\r\n"
      U4 - Read Record - 4.1_instruction: "Use indexes and dot notation to reference\nvalues
        in the response from the database. (Click to see full instructions)\r\n"
      U4 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall
        individually. (Click to see full instructions)\r\n"
      U4 - Read Record - 5_instruction: "Using a for loop, display the title of each\nmovie
        in your database. (Click to see full instructions)\r\n"
      U4 - Read Record - part 1 - template_instruction: "Use console.log to display\nthe
        records returned by a call to readRecords. (Click to see full instructions)\r\n"
      U4 - ReadRecords - Contacts App 1_instruction: |
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4 vigenere cipher 2_instruction: "Инструкции"
      U4L02 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: "Шаблон"
      U4L06 Data Storage 1_instruction: "Fill in your name instead of \"Enter Your\nName\",
        run the app and click the button. Run it multiple times with different\nnames!
        Watch the console and use the ‘View Data” button to see how the table\nis
        updated. As you play around make sure you can explain the purpose of each\nof
        the circled parts of the diagram.\r\n\r\n"
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none
        we started. Add a text label to collect the users name and use that as\nthe
        data input for the record.\r\n\r\nRun the app and click the button multiple\ntimes
        and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: "Add a couple radio buttons or checkboxes\nto
        our app. Then find a way to collect the data from those. \n"
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId()\nblocks
        to collect additional data. \n"
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: "Student should create a sentence which puts\ntogether
        all the pieces from a record.\r\n\r\n<<Name>> is <<Age>> years old\nand like
        <<Food>>"
      U4L15 Read Data 3_instruction: "Print the sentence using the first JSON object\nin
        the array\r\n\r\n"
      U4L15 Read Data 4_instruction: "\r\nUse a random record from the list of records\nto
        display your sentence."
      U6 - Final Project - Project Level_instruction: |
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: "Под некоторыми из этих блоков скрывается
        лава, которую тебе нужно накрыть, прежде чем двигаться вперед. Здесь хорошо
        подойдет команда «если». Добавь в нужное место команду «двигаться вперед»,
        чтобы добыть эти блоки."
      Underground If Statements_instruction: "Теперь все усложняется. Добудь 3 блока
        красного камня, но не упади в лаву. Используй команду «если», чтобы поместить
        булыжник поверх любой открытой лавы."
      Underground Iron_instruction: "Прогулка по расплавленной лаве — плохая идея.
        Помести булыжник, чтобы сделать мост, затем добудь хотя бы два блока железа."
      Underground Mine in a Circle_instruction: "Найди способ добыть 5 алмазов и 7
        красных камней! Попробуй использовать команду «повторить» внутри команды «повторить»,
        чтобы двигаться в квадрате."
      Underground Mining Coal_instruction: "Ты найдешь больше ценных ресурсов под
        землей, но там может быть темно. Установи хотя бы 2 факела и добудь хотя бы
        2 блока угля."
      Underground Test Level_instruction: "Собери все минералы!"
      Unicorn Tag_instruction: |
        Take a look at this project.  Do you see how it was
        made?
      Vigenere_instruction: Test
      weird_playLab_instruction: |
        About My Robot Project! Write code so that clicking
        on each bird shows a new fact about your robot.
      WhileAdventure_instruction: |
        Our adventurer wants to collect coins. Can you
        help her grab as many as she can using only one remove 1 block?
      'Widget: Black and White Pixelation_instruction': |
        Now make your own image!
        We've started you off with a 10x10 canvas but you can make it whatever size
        you want. Happy pixeling!
      'Widget: Color Pixelation_instruction': |
        Requirements: The icon must be 16x16
        pixels. You must use the Pixelation Widget to encode the bits of color information.
        The image must be encoded with at least 12 bits per pixel.
      'Widget: Text Compression_instruction': |
        Look for patterns (repeated words
        or phrases) in the text. Enter the patterns you see into the dictionary on
        the right. As you type entries into the dictionary, the symbol for the entry
        is inserted into the text in place of the pattern.
      XML Scratchpad_instruction: "Используйте этот тест, чтовы создать xml для модульного
        тестирования"
