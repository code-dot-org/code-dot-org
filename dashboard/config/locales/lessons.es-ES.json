{
  "es-ES": {
    "data": {
      "lessons": {
        "csd5-2022/Representation Matters": {
          "name": "La Representación Importa",
          "overview": "**Pregunta del día: ¿Cómo afectan los datos a las decisiones que tomamos cada día?**\n\nEn la primera lección de la unidad de datos, los alumnos obtienen una visión general de lo que son los datos y de cómo se utilizan para resolver problemas. Los alumnos comienzan con un breve debate para llegar a una comprensión común de los datos. A continuación, se dividen en grupos y utilizan un conjunto de datos para hacer una serie de recomendaciones de comidas para personas con diversos criterios. Cada grupo tiene las opciones de comida representadas de una forma diferente (imágenes, recetas, menú, nutrición) que da ventaja a una de las recomendaciones. Después, los grupos comparan sus respuestas y analizan cómo las diferentes representaciones de los datos de las comidas afectaron a la forma en que los estudiantes fueron capaces de resolver los diferentes problemas.",
          "purpose": "Esta lección introduce unas ideas importantes que los estudiantes van a explorar en este capítulo. Ellos van a ver los mismos objetos pueden ser representados en una variedad de maneras. En capítulo 1, ellos van a aprender los diferentes sistemas de representación que computadores usan para representar información. En esta lección ellos también van a ver que la representación importa cuando usamos datos para formar decisiones. En capitulo dos de esta unidad, estudiantes van a explorar más profundamente como las personas y los computadores pueden utilizar los datos para formar decisiones. ",
          "student_overview": "**Pregunta del día: ¿Cómo afectan los datos a las decisiones que tomamos cada día?**\n\nEn esta lección, estudiarás qué son los datos y cómo se utilizan para resolver problemas. "
        },
        "csd5-2022/Patterns and Representation": {
          "name": "Patrones y representación",
          "student_overview": "**Pregunta del día: ¿Cómo podemos crear un sistema para representar información?**\n\nEn esta lección, crearás un sistema para representar información trabajando con un grupo para crear un sistema que pueda representar cualquier letra del alfabeto utilizando sólo un montón de tarjetas. "
        },
        "csd5-2022/ASCII and Binary Representation": {
          "name": "ASCII y representación binaria",
          "student_overview": "**Pregunta del día: ¿Qué sistema utilizan los ordenadores para representar letras y palabras?**\n\nEn esta lección, aprenderás sobre el sistema binario y el sistema ASCII utilizado para representar texto. "
        },
        "csd5-2022/Representing Images": {
          "name": "Representar imágenes",
          "student_overview": "**Pregunta del día: ¿Qué sistema utilizan los ordenadores para representar imágenes?**\n\nEn esta lección, seguirás explorando cómo se pueden crear sistemas para representar la información utilizando el binario, ¡esta vez imágenes!"
        },
        "csd5-2022/Representing Numbers": {
          "name": "Representar números",
          "student_overview": "**Pregunta del día: ¿Qué sistema utilizan los ordenadores para representar los números?**\n\nEn esta lección, ¡aprenderás sobre el sistema numérico binario real!"
        },
        "csd5-2022/Combining Representations": {
          "name": "Combinar representaciones",
          "student_overview": "**Pregunta del día: ¿Cómo distinguen los ordenadores los códigos binarios de letras, números o imágenes?**\n\nEn esta lección, combinarás ASCII, binario e imágenes para explorar formas de codificar tipos de información más complejos. "
        },
        "csd5-2022/Keeping Data Secret": {
          "name": "Mantener los datos en secreto",
          "overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos del mal uso?**\n\nLos alumnos siguen explorando cómo se representan los datos en una tarjeta perforada y empiezan a considerar si algunos datos deben protegerse de la vista del público porque son demasiado personales o sensibles. Una vez que los alumnos comprenden las razones para proteger los datos, aprenden un sistema de cifrado binario que les permite cifrar y descifrar los datos de sus tarjetas perforadas y, finalmente, son capaces de enviarse mensajes secretos entre sí utilizando este método. La clase concluye con un debate sobre la importancia de proteger nuestra información y cómo la encriptación es una de las formas de lograrlo.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos del mal uso?**\n\nEn esta lección, explorarás los diferentes niveles de seguridad, verás la importancia de la privacidad y aprenderás a ¡encriptar la información!"
        },
        "csd5-2022/Create a Representation": {
          "name": "Proyecto - Crear una representación",
          "overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección los alumnos diseñan una estructura para representar su día perfecto utilizando los sistemas de representación binarios que han aprendido en este capítulo. En primer lugar, los alumnos escribirán una breve descripción de su día perfecto y, a continuación, la revisarán con un compañero para identificar las piezas clave de información que creen que podría capturar un ordenador. Como clase, los alumnos decidirán cómo se interpretará una tarjeta perforada de bytes de información para representar esas piezas de información. A continuación, los alumnos utilizarán los formatos ASCII, de números binarios y de imágenes que han aprendido para representar sus días perfectos. A continuación, los alumnos intercambian tarjetas perforadas e intentan descifrar cómo es el día perfecto del otro alumno. La lección termina con una reflexión.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección, explorarás cómo utilizar los formatos ASCII, binario y de imagen para representar ¡tu día perfecto!"
        },
        "csd5-2022/Problem Solving and Data": {
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar los datos para resolver los problemas de nuestra comunidad?**\n\nEn esta lección, decidirás qué es lo más necesario en una ciudad para gastar recursos, de manera que veas cómo utilizar los datos para resolver los problemas."
        },
        "csd5-2022/Structuring Data": {
          "name": "Estructurar datos",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo podemos facilitar a los ordenadores el tratamiento de los datos?\n\nEn esta lección, aprenderás a presentar los datos de diferentes maneras que pueden ayudar a la gente a entenderlos mejor, así como qué partes del proceso puede hacer un ordenador y qué partes necesitan una persona. "
        },
        "csd5-2022/Interpreting Data": {
          "name": "Interpretar datos",
          "overview": "**Pregunta del día: ¿Cómo pueden los patrones de datos ayudarnos a tomar decisiones?**\n\nLos alumnos comienzan la lección observando una encuesta sobre preferencias de pasteles que permite a los encuestados especificar tanto un sabor de pastel como de glaseado. Debaten cómo el conocimiento de la relación entre las preferencias de la tarta y el glaseado les ayuda a decidir mejor qué combinación recomendar. A continuación, se les presenta la tabulación cruzada, que permite elaborar un gráfico con las relaciones entre las distintas preferencias. Utilizan esta técnica para encontrar relaciones en una encuesta de preferencias, y luego hacen una lluvia de ideas sobre los diferentes tipos de problemas que este proceso podría ayudar a resolver.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los patrones de datos ayudarnos a tomar decisiones?**\n\nEn esta lección, aprenderás sobre la tabulación cruzada que te permitirá hacer un gráfico de las relaciones entre varios datos. "
        },
        "csd5-2022/Making Decisions with Data": {
          "name": "Tomar decisiones con datos",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los patrones en los datos ayudar a tomar una decisión?**\n\nEn esta lección, tendrás la oportunidad de practicar el proceso de resolución de problemas de datos que aprendiste en la lección anterior. "
        },
        "csd5-2022/Automating Data Decisions": {
          "name": "Automatizar las decisiones basadas en datos",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los ordenadores ayudarnos a tomar decisiones sobre los datos?**\n\nEn esta lección, examinarás cómo podría utilizarse un ordenador para completar el paso de toma de decisiones del proceso de resolución de problemas con datos."
        },
        "csd5-2022/Problem Solving with Big Data": {
          "name": "La resolución de problemas con Big Data"
        },
        "csd5-2022/Data and Machine Learning": {
          "name": "Datos y Aprendizaje Automático",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo pueden \"aprender\" las máquinas?\n\nEn esta lección, podrás trabajar con la Inteligencia Artificial y adquirir conocimientos sobre el Aprendizaje Automático. "
        },
        "csd5-2022/Project - Make a Recommendation": {
          "name": "Proyecto - Hacer una Recomendación",
          "overview": "**Pregunta del día: ¿Cómo puedo utilizar los datos para hacer mis propias recomendaciones?**\n\nPara concluir esta unidad, los alumnos diseñan un motor de recomendaciones basado en los datos que recogen y analizan de sus compañeros. Después de ver un ejemplo de aplicación de recomendación, los estudiantes siguen una guía de proyecto para completar esta actividad de varios días. En los primeros pasos, los estudiantes deciden qué elección quieren ayudar a hacer al usuario, qué datos necesitan para dar la recomendación, crean una encuesta y recogen información sobre las elecciones de sus compañeros. A continuación, interpretan los datos y utilizan lo que han aprendido para crear el algoritmo de recomendación. Por último, utilizan sus algoritmos para hacer recomendaciones a algunos compañeros de clase. Los estudiantes realizan una revisión por parte de sus compañeros y hacen las actualizaciones necesarias en sus proyectos antes de preparar una presentación a la clase.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo utilizar los datos para hacer mis propias recomendaciones?**\n\nEn esta lección, diseñarás un motor de recomendación basado en los datos que recopiles y analices de tus compañeros. "
        },
        "csd5-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd1-2022/Intro to Problem Solving": {
          "name": "Introducción a la resolución de problemas",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar barcos de papel de aluminio que soporten el mayor número posible de monedas de un centavo. Los grupos disponen de dos rondas para trabajar en sus barcos, con el objetivo de intentar sostener más monedas de un centavo que en la primera ronda. La estructura de la actividad prefigura diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**También hay disponibles otras versiones de esta lección.** \n\n-   [Mesa de Periódicos](/s/csd1-2022/lessons/9/)\n-   [Puente de Espaguetis](/s/csd1-2022/lessons/10/)\n-   [Torre de Papel](/s/csd1-2022/lessons/11/)",
          "preparation": "**Para cada grupo**\n\n-   2 hojas de papel de aluminio de 13x13 cm cada una\n-   1 recipiente con capacidad para 50 a 100 ml. de agua \n-   Varias toallas de papel o trapos que puedan colocarse debajo del recipiente \n-   15 monedas de un céntimo €\n-   Una copia de la guía de actividad\n\n**Para el profesor**\n\n-   1 recipiente con capacidad para 50 a 100 ml. de agua \n-   50 monedas de un céntimo €\n-   Toallas de papel o trapos adicionales \n-   Consulta el foro [\"Teacher's Lounge\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para profesores verificados donde encontrarás estrategias o recursos adicionales compartidos por otros profesores\n-   Si estás enseñando virtualmente, considera revisar nuestra [Virtual Lesson Modifications](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los alumnos utilizarán durante el resto de la unidad y del curso. El problema de los barquitos de aluminio podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, diseñen un plan, prueben una solución, evalúen sus resultados y luego mejoren iterativamente a partir de ahí. El hecho de que el problema elegido sea \"no informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto ayuda a enmarcar esta clase como una sobre la resolución de problemas en general, siendo la informática una nueva \"herramienta\" para ayudar a afrontar ciertos tipos de problemas. ",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nTrabajarás con un grupo para diseñar y probar un barco de papel de aluminio que soporte el mayor número posible de monedas de un céntimo. "
        },
        "csd1-2022/The Problem Solving Process": {
          "name": "El proceso de resolución de problemas",
          "overview": "**Pregunta del día: ¿Cuáles son algunos de los pasos comunes que podemos utilizar para resolver diferentes tipos de problemas?**\n\nEsta lección introduce el proceso formal de resolución de problemas que los alumnos utilizarán a lo largo del año: Definir - Preparar - Probar - Reflexionar. La lección comienza pidiendo a los alumnos que realicen una lluvia de ideas sobre los diferentes tipos de problemas que se encuentran en la vida cotidiana. A continuación, se les muestran los cuatro pasos del proceso de resolución de problemas y trabajan juntos para relacionar estos pasos abstractos con sus experiencias reales de resolución de problemas. En primer lugar, los alumnos relacionan estos pasos con las actividades relacionadas con los problemas de la lección anterior, luego con un problema que se les dé bien y por último, con un problema que quieran mejorar. Al final de la lección, la clase recopila una lista de estrategias generalmente útiles para cada paso del proceso que se colocan en carteles que se utilizarán a lo largo de la unidad y del año.",
          "preparation": "Para cada alumno \n\n-   Imprime una copia de la Guía de Actividad\n\nPara la clase\n\n-   Papel para Póster\n-   Rotuladores/lápices de colores\n\nPara el Profesor\n\n-   Consulta el foro [\"Teacher's Lounge\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para profesores verificados para encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera la posibilidad de consultar nuestras [Virtual Lesson Modifications](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "El objetivo de esta lección es afianzar el proceso formal de resolución de problemas que los estudiantes utilizarán a lo largo del curso en algunas experiencias de la vida real que ya tienen resolviendo problemas. Las futuras unidades de Descubrimientos CS presentarán problemas en contextos que pueden o no ser familiares. Un proceso estructurado de resolución de problemas será una herramienta importante para ayudar a los estudiantes a avanzar ante retos novedosos y complejos.",
          "student_overview": "**Pregunta del día: ¿Cuáles son algunos de los pasos comunes que podemos utilizar para resolver diferentes tipos de problemas?**\n\nAprenderás sobre el proceso de resolución de problemas que utilizamos en Informática y te sumergirás en algunas estrategias para aplicar en cada paso. "
        },
        "csd1-2022/Exploring Problem Solving": {
          "name": "Exploración de la resolución de problemas",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a muchos tipos diferentes de problemas?** \n\nEn esta lección, los alumnos aplican el proceso de resolución de problemas a tres problemas diferentes para comprender mejor el valor de cada paso. Resolverán una sopa de letras, organizarán los asientos para una fiesta de cumpleaños y rediseñarán un aula. Los problemas se vuelven cada vez más complejos y mal definidos para destacar cómo el proceso de resolución de problemas es especialmente útil cuando se abordan estos tipos de problemas. La lección concluye con la reflexión de los alumnos sobre su experiencia con el proceso de resolución de problemas. Justificarán la inclusión de cada paso y harán una lluvia de preguntas o estrategias que puedan ayudarles a definir mejor los problemas abiertos, ya que éste suele ser el paso más crítico.\n\nEs probable que esta lección requiera dos periodos de clase o más para completarse. Los dos primeros problemas pueden caber en un solo período de clase, pero el tercero deberá trasladarse a un segundo día.\n\n**También hay versiones alternativas de esta lección.** \n\n-   [Tema de Animales](/s/csd1-2022/lessons/12/)\n-   [Tema de Juegos](/s/csd1-2022/lessons/13/)",
          "preparation": "-   Imprime la guía de actividad para cada alumno\n-   Papel de borrador para el problema de la Fiesta de Cumpleaños\n-   Póster para anotar las estrategias de definición de los problemas en la charla de recapitulación\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para que los profesores verificados encuentren estrategias adicionales o recursos compartidos por otros profesores\n-   Si enseñas de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección proporciona a los alumnos más práctica con el proceso de resolución de problemas en una variedad de contextos. Destaca el hecho de que el proceso de resolución de problemas es especialmente útil cuando se abordan problemas mal definidos. La lluvia de ideas final de la lección proporciona a los alumnos algunas estrategias y preguntas que pueden formular para definir mejor los problemas por sí mismos, ya que éste suele ser el paso más crítico. Los problemas vistos en esta lección también ayudan a impulsar un debate en la siguiente lección sobre los tipos de problemas para cuya resolución son adecuados los ordenadores.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos aplicar el Proceso de Resolución de Problemas a muchos tipos de problemas diferentes?**\n\n¡Hoy aplicarás el Proceso de Resolución de Problemas a tres problemas diferentes que serán cada vez más complejos!"
        },
        "csd1-2022/What is a Computer?": {
          "name": "¿Qué es una computadora?",
          "overview": "**Pregunta del día: ¿Qué es un ordenador?**\n\nEn esta lección, los alumnos elaboran una definición preliminar de ordenador. Para empezar la lección, la clase hará una lluvia de ideas sobre posibles definiciones de ordenador y colocará los resultados de esta lluvia de ideas en la pizarra. A continuación, los alumnos trabajarán en grupos para clasificar las imágenes en \"es un ordenador\" o \"no es un ordenador\" en un cartel. Los grupos colocarán sus carteles por la sala y explicarán brevemente sus motivaciones para elegir algunas de sus clasificaciones más difíciles.  A continuación, el profesor presentará una definición de ordenador y permitirá a los alumnos revisar sus carteles de acuerdo con la nueva definición.",
          "preparation": "**Para cada grupo** \n\n-   Imprime copias de la guía de actividad. Ten en cuenta que hay dos juegos de imágenes, pero cada grupo sólo necesita un juego.\n-   Tijeras (si no tienes tiempo de cortar las imágenes antes de la clase) \n-   Papel para carteles\n-   Rotuladores o lápices de colores \n-   Pegamento o cinta adhesiva para pegar los dibujos \n\n**Para el profesor**\n\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-2-lessons-4-8/36189) para profesores verificados donde encontrarás estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas virtualmente, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección se basa en el tema de la resolución de problemas de las lecciones anteriores y se centra en los detalles de cómo se utiliza la informática en la resolución de problemas. En esta lección, los alumnos considerarán los diferentes tipos de ordenadores y que éstos utilizan la información como parte del proceso de resolución de problemas. Las próximas lecciones profundizarán en el aspecto de un problema de información y en cómo los ordenadores resuelven estos problemas.",
          "student_overview": "\\*\\*Pregunta del día: ¿Qué es un ordenador?\n\n¡En esta lección, trabajarás con un grupo para averiguar qué hace a un ordenador ser un ordenador!"
        },
        "csd1-2022/Input and Output": {
          "name": "Entrada y salida",
          "overview": "**Pregunta del Día: ¿Cómo utilizan los ordenadores la entrada y la salida a la hora de obtener y dar la información que necesitan para resolver los problemas?**\n\nEn esta lección, los alumnos estudian cómo los ordenadores obtienen y dan información al usuario mediante entradas y salidas.  En primer lugar, los alumnos consideran qué información necesitarían para resolver un \"problema intelectual\" y a continuación, utilizan esa información para elaborar una recomendación.  Después, identifican las entradas y salidas de ese proceso.  Más adelante, los alumnos estudian una aplicación que realiza el mismo proceso y determinan cómo entra y sale la información de esa aplicación.  Por último, consideran otros tipos de entradas y salidas que los ordenadores pueden utilizar para ayudar a resolver problemas.",
          "preparation": "-   Prepara copias de la guía de actividad\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-2-lessons-4-8/36189) para que los profesores verificados encuentren estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "En la lección anterior, los alumnos comenzaron a hacer una lluvia de ideas sobre las características que pueden ayudar a clasificar los dispositivos como ordenadores. Esta lección introduce la entrada y la salida como una de estas características y hace que los alumnos identifiquen diferentes métodos de entrada o salida en aplicaciones comunes.",
          "student_overview": "**Pregunta del Día: ¿Cómo utilizan los ordenadores la entrada y la salida para obtener y dar la información que necesitan para resolver problemas?**\n\nEn esta lección, aprenderás cómo los ordenadores obtienen y dan información al usuario a través de varias entradas y salidas. "
        },
        "csd1-2022/Processing": {
          "name": "Procesamiento",
          "overview": "**Pregunta del Día: ¿Cuáles son las diferentes formas en que los ordenadores pueden procesar la información?**\n\nEsta lección presenta a los estudiantes cuatro tipos comunes de procesamiento: if/then (condicionales), encontrar una coincidencia (búsqueda), contar y comparar.  En primer lugar, los alumnos conocen los tipos de procesamiento a través de varias aplicaciones de ejemplo.  Después, investigan más aplicaciones para determinar qué tipos de procesamiento utiliza cada una.  A continuación, piensan en su propia aplicación y deciden qué tipos de procesamiento necesitaría para funcionar.  Por último, hacen una lluvia de ideas sobre otros tipos de procesamiento que pueden ser útiles pero que no se han incluido en la lección principal.",
          "purpose": "Esta lección introduce el concepto de procesamiento dentro de la resolución de problemas informáticos. La definición de procesamiento presentada en esta lección es intencionadamente accesible. Los alumnos deben entender que el procesamiento es lo que hace un ordenador para convertir las entradas en salidas, y que hay muchas maneras diferentes de que los ordenadores hagan este trabajo. El objetivo de esta lección no es que los estudiantes escriban algoritmos específicos para las aplicaciones de ejemplo.",
          "student_overview": "**Pregunta del día: ¿Cuáles son las diferentes formas en que los ordenadores pueden procesar la información?**\n\nEn esta lección, aprenderás los cuatro tipos de procesamiento que los ordenadores pueden utilizar para convertir la entrada en salida.  "
        },
        "csd1-2022/Storage": {
          "name": "Almacenamiento",
          "overview": "**Pregunta del día: ¿Por qué el almacenamiento es una parte importante del proceso informático?**\n\nEsta lección introduce el último componente del modelo de computación de la unidad: el almacenamiento.  Después de probar una aplicación de \"selección de ropa\", los alumnos discuten qué información debería almacenarse en la aplicación en lugar de introducirla cada vez que se ejecuta la aplicación.  A continuación, observan una serie de aplicaciones y utilizan sus decisiones sobre lo que debería almacenarse para crear directrices con el fin de decidir qué información almacenar.  A continuación, repasan los cuatro componentes del modelo de computación de este capítulo: entrada, salida, almacenamiento y procesamiento.  A continuación, tienen una última oportunidad para revisar sus decisiones sobre los elementos que deben clasificarse como \"ordenador\", tomadas anteriormente en el capítulo.  La lección termina con una reflexión sobre sus propias ideas de aplicaciones y sobre cómo se podría utilizar el almacenamiento.",
          "preparation": "-   Imprime una copia de la guía de actividad para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-2-lessons-4-8/36189) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas virtualmente, valora la posibilidad de consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "En el capítulo 1 de esta unidad, los alumnos aprendieron el proceso de resolución de problemas. En el capítulo 2, los alumnos aprendieron cómo los ordenadores resuelven problemas. En este punto, los alumnos saben que los ordenadores son máquinas de procesamiento de información que pueden hacer cuatro cosas con la información: entrada, salida, almacenamiento y proceso.  En esta última lección antes del proyecto de la unidad, los alumnos examinan los tipos de entrada que pueden ser necesarios para resolver un problema concreto y describen el procesamiento y el almacenamiento que haría un ordenador para producir el resultado deseado.  Esto debería prepararles para diseñar su propia aplicación que resuelva un problema y explicar cómo funcionaría esa aplicación.",
          "student_overview": "**Pregunta del día: ¿Por qué el almacenamiento es una parte importante del proceso informático?**\n\n¡En esta lección, aprenderás el último criterio que hace a un ordenador ser un ordenador: el almacenamiento!"
        },
        "csd1-2022/Project - Propose an App": {
          "name": "Proyecto - Propuesta de aplicación",
          "overview": "**Pregunta del Día: ¿Cómo puede ayudarnos el modelo IOSP a diseñar una aplicación que resuelva un problema?**\n\nPara concluir su estudio del proceso de resolución de problemas y del modelo de entrada/salida/almacén/proceso de un ordenador, los alumnos propondrán una aplicación diseñada para resolver un problema del mundo real. Este proyecto se llevará a cabo durante varios días y los alumnos crearán un póster en el que destacarán las características de su aplicación y que presentarán a sus compañeros. Una guía del proyecto proporciona instrucciones paso a paso a los estudiantes y les ayuda a organizar sus ideas. El proyecto está diseñado para ser completado en parejas, aunque puede ser completado individualmente.",
          "preparation": "-   Imprime una copia de [r apps_and_problem_solving/csd/2022] para cada pareja de alumnos\n-   Papel para carteles, bolígrafos, rotuladores y otros materiales para hacer carteles\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-propose-an-app-problem-solving-and-computing-lesson-8/36201) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Este proyecto combina los dos temas principales de la Unidad 1, la resolución de problemas y el modelo de entrada-salida-almacenamiento-proceso de un ordenador. Este proyecto vincula ambos temas con un objetivo más amplio de identificar problemas del mundo real y encontrar formas de utilizar la tecnología para ayudar a resolverlos. Los alumnos colaboran en la creación de su aplicación y también participan en un proceso estructurado de revisión por pares que verán muchas más veces a lo largo del curso. Este proyecto debe ser también una experiencia divertida y creativa, y da a los estudiantes la oportunidad de relacionar el campo de la informática con sus propios intereses y ambiciones.",
          "student_overview": "**Pregunta del Día: ¿Cómo puede ayudarnos el modelo IOSP a diseñar una aplicación que resuelva un problema?**\n\nEn esta lección, dedicarás unos días a crear una idea para una aplicación que resuelva un problema del mundo real utilizando la entrada, la salida, el almacenamiento y el procesamiento. "
        },
        "csd1-2022/Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - La Mesa de Periódicos (Lección 1 Alterna)",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar mesas de papel de periódico que aguanten tantos libros como sea posible. Los grupos disponen de dos rondas para trabajar en sus mesas, con el objetivo de intentar que aguanten más libros que en la primera ronda. La estructura de la actividad anticipa los diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la Resolución de Problemas - Barcos de Aluminio](/s/csd1-2022/lessons/1/)**",
          "preparation": "**Para cada grupo**\n\n-   2 periódicos completos para cada grupo de alumnos\n-   1 rollo de cinta adhesiva para cada grupo de alumnos\n-   Un ejemplar de la guía de actividad\n\n**Para el profesor**\n\n-   10-20 libros de peso similar.\n-   Consulta el foro [\"Sala del Profesor\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores\n-   Si enseñas de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los alumnos utilizarán durante el resto de la unidad y del curso. El problema de la mesa del periódico podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, conciban un plan, prueben una solución, evalúen sus resultados y luego mejoren repetidamente a partir de ahí. El hecho de que el problema elegido sea \"no informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto ayuda a enmarcar esta clase, como una sobre la resolución de problemas en general, siendo la informática una nueva \"herramienta\" que ayuda a afrontar ciertos tipos de problemas. ",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nPara esta lección, trabajarás con un grupo para diseñar, construir, probar y reflexionar sobre una mesa hecha con periódicos que soporte la mayor cantidad de libros posible. "
        },
        "csd1-2022/Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - El Puente de Espaguetis (Lección 1 Alterna)",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar puentes con espaguetis que aguanten el mayor número posible de libros. Los grupos tienen dos rondas para trabajar en sus puentes, con el objetivo de intentar sostener más libros que en la primera ronda. La estructura de la actividad prefigura diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la Resolución de Problemas - Barcos de Aluminio](/s/csd1-2022/lessons/1/)**.",
          "preparation": "**Para cada grupo**\n\n-   1 paquete de 500gr. de espaguetis \n-   1 pistola de pegamento\n-   Un ejemplar de la guía de actividad\n\n**Para el profesor**\n\n-   10-20 libros de tamaño y peso similares\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para profesores verificados donde puedes encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los estudiantes utilizarán durante el resto de esta unidad y del curso. El problema del puente de espaguetis podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, conciban un plan, prueben una solución, evalúen sus resultados y luego lo mejoren repetidamente. El hecho de que el problema elegido  \"no sea informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto ayuda a enmarcar esta clase, como una sobre la resolución de problemas en general, siendo la informática una nueva \"herramienta\" para ayudar a abordar ciertos tipos de problemas.",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, trabajarás con un grupo para diseñar, construir, probar y reflexionar sobre un puente de espaguetis que aguante tantos libros como sea posible. "
        },
        "csd1-2022/Intro to Problem Solving - Paper Tower (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - El Torre de Papel (Lección 1 Alterna)",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar torres de papel que puedan alcanzar la mayor altura posible. Los grupos disponen de dos rondas para trabajar en sus torres, con el objetivo de intentar llegar más alto que en la primera ronda. La estructura de la actividad prefigura diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la Resolución de Problemas - Barcos de Aluminio](/s/csd1-2022/lessons/1/)**.",
          "preparation": "**Para cada grupo**\n\n-   20 hojas de papel Din A4 de 21 x 29,7 cm.\n-   Espacio para construir tu torre\n-   Un ejemplar de la guía de actividad\n\n**Para el profesor**\n\n-   Papel adicional \n-   Cronómetro\n-   Regla\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para profesores verificados para encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera la posibilidad de consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los estudiantes utilizarán durante el resto de esta unidad y del curso. El problema de las torres de papel podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, conciban un plan, prueben una solución, evalúen sus resultados y luego mejoren repetidamente a partir de ahí. El hecho de que el problema elegido \"no sea informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto favorece que esta clase se enmarque en la resolución de problemas de forma más general, siendo la informática una nueva \"herramienta\" para ayudar a abordar ciertos tipos de problemas. ",
          "student_overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, trabajarás con un grupo para diseñar, construir, probar y reflexionar sobre una torre de papel que intentarás hacer lo más alta posible. "
        },
        "csd1-2022/Exploring Problem Solving - Animals Theme (Alternate Lesson 3)": {
          "name": "Exploración de la resolución de problemas - Tema de los Animales (Lección Alternativa 3)",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a diferentes tipos de problemas?**\n\nEn esta lección, los alumnos aplican el proceso de resolución de problemas a tres problemas diferentes para comprender mejor el valor de cada paso. Resolverán tangrams, elegirán una mascota para varias personas y planificarán un evento de adopción de mascotas. Los problemas se vuelven cada vez más complejos y poco definidos para destacar cómo el proceso de resolución de problemas es especialmente útil al abordar este tipo de problemas. La lección concluye con la reflexión de los alumnos sobre su experiencia con el proceso de resolución de problemas. Justificarán la inclusión de cada paso y harán una lluvia de preguntas o estrategias que puedan ayudarles a definir mejor los problemas abiertos, ya que éste suele ser el paso más crítico.\n\nEs probable que esta lección requiera dos periodos de clase o más para completarse. Los dos primeros problemas pueden caber en un solo período de clase, pero el tercero deberá trasladarse a un segundo día.\n\n**Esta es una actividad alternativa a [Exploración de la Resolución de Problemas](/s/csd1-2022/lessons/3/)**.",
          "preparation": "-   Imprime la guía de actividad para cada alumno\n-   Prepara tangrams para los alumnos, o imprime una hoja de tangram y consigue tijeras para cada grupo\n-   Póster para anotar las estrategias de definición de los problemas en la charla de recapitulación\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para profesores verificados donde encontrarás estrategias adicionales o recursos compartidos por otros profesores\n-   Si estás enseñando virtualmente, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección proporciona a los alumnos más práctica con el proceso de resolución de problemas en una variedad de contextos. Destaca el hecho de que el proceso de resolución de problemas es especialmente útil cuando se abordan problemas mal definidos. La lluvia de ideas final de la lección proporciona a los alumnos algunas estrategias y preguntas que pueden formular para definir mejor los problemas por sí mismos, ya que éste suele ser el paso más crítico. Los problemas vistos en esta lección también ayudan a impulsar un debate en la siguiente lección sobre los tipos de problemas para cuya resolución son adecuados los ordenadores.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a diferentes tipos de problemas?**\n\nEn esta lección, aplicarás el proceso de resolución de problemas a varios problemas diferentes, cada uno de ellos cada vez más complejo. "
        },
        "csd1-2022/Exploring Problem Solving - Games Theme (Alternate Lesson 3)": {
          "name": "Explorar la Resolución de Problemas - Tema de Juegos (Lección 3 Alterna)",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a muchos tipos diferentes de problemas?**\n\nEn esta lección los alumnos aplican el proceso de resolución de problemas a tres problemas diferentes para comprender mejor el valor de cada paso. Resolverán un laberinto, organizarán un equipo para correr lo más rápido posible y diseñarán un juego. Los problemas se vuelven cada vez más complejos y poco definidos para destacar cómo el proceso de resolución de problemas es especialmente útil cuando se abordan este tipo de problemas. La lección concluye con la reflexión de los alumnos sobre su experiencia con el proceso de resolución de problemas. Justificarán la inclusión de cada paso y harán una lluvia de preguntas o estrategias que puedan ayudarles a definir mejor los problemas abiertos, ya que éste suele ser el paso más crítico.\n\nEs probable que esta lección lleve dos periodos de clase o más para completarla. Los dos primeros problemas pueden entrar en un solo período de clase, pero el tercero deberá trasladarse a un segundo día.\n\n**Esta es una actividad alternativa a [Exploración de la Resolución de Problemas](/s/csd1-2022/lessons/3/)**.",
          "preparation": "-   Imprime la guía de actividad para cada alumno\n-   Papel de borrador para el problema de la Carrera de Relevos por Parejas\n-   Póster para anotar estrategias al definir los problemas en la discusión de recapitulación\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-problem-solving-and-computing-chapter-1-lessons-1-3/36188) para que los profesores verificados encuentren estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1420LdkGrISwhKjHu7i4XCbi60ahmCRnQoYf1_JosdgA/preview)",
          "purpose": "Esta lección proporciona a los alumnos más práctica con el proceso de resolución de problemas en una variedad de contextos. Destaca el hecho de que el proceso de resolución de problemas es especialmente útil cuando se abordan problemas mal definidos. La lluvia de ideas final de la lección proporciona a los alumnos algunas estrategias y preguntas que pueden formular para definir mejor los problemas por sí mismos, ya que éste suele ser el paso más crítico. Los problemas vistos en esta lección también ayudan a impulsar un debate en la siguiente lección sobre los tipos de problemas para cuya resolución son adecuados los ordenadores.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a diferentes tipos de problemas?**\n\nEn esta lección, aplicarás el proceso de resolución de problemas a varios problemas diferentes, cada uno de ellos cada vez más complejo. "
        },
        "csd3-2022/Programming for Entertainment": {
          "name": "Programación para el Entretenimiento",
          "overview": "**Pregunta del Día: ¿Cómo se utiliza la informática en el entretenimiento?**\n\nSe pide a los alumnos que tengan en cuenta los \"problemas\" del aburrimiento y la expresión personal, y que reflexionen sobre cómo abordan esos problemas en sus propias vidas. A partir de ahí, los alumnos explorarán cómo la informática en general, y la programación en particular, desempeña un papel en una forma específica de entretenimiento o como vehículo de expresión personal.",
          "preparation": "-   Revisa los enlaces a los recursos de investigación en Code Studio\n-   Imprime una copia de la guía de actividad para cada grupo de tres alumnos\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si estás enseñando de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "Esta lección está pensada para iniciar esta unidad de programación de una manera que atraiga a estudiantes de todos los orígenes e intereses. Aunque el punto final de esta unidad pide a los alumnos que desarrollen un juego, hay que evitar empezar con un fuerte énfasis en los _videojuegos_. En su lugar, intentamos ampliar la perspectiva de los estudiantes acerca de cómo la programación es relevante para una forma de entretenimiento o de expresión personal que sea atractiva. Esto proporcionará un ancla para que los estudiantes vuelvan a lo largo de la unidad mientras consideran las aplicaciones potenciales de los diversos conocimientos de programación que aprenden.",
          "student_overview": "estudiante\n**Pregunta del Día: ¿Cómo se utiliza la informática en el entretenimiento?**\n\nEn esta lección, explorarás cómo la Informática, y en concreto la programación, desempeña un papel en el entretenimiento o como vehículo de expresión personal. "
        },
        "csd3-2022/Plotting Shapes": {
          "name": "Trazar formas",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos enseñar claramente cómo dibujar algo en una pantalla?\n\nLos estudiantes exploran los desafíos de explicar cómo dibujar con figuras y utilizan una herramienta que presenta cómo se aborda este problema en el Laboratorio de Juegos. La actividad de calentamiento demuestra rápidamente los retos de comunicar la posición sin un punto de referencia compartido. En la actividad principal, los alumnos exploran una herramienta del Laboratorio de Juegos que les permite colocar figuras de forma interactiva en la cuadrícula de 400 por 400 del Laboratorio de Juegos. A continuación, se turnan para instruir a un compañero sobre cómo dibujar una imagen oculta utilizando esta herramienta, dando cuenta de muchos desafíos que los alumnos encontrarán al programar en Laboratorio de Juegos. Los estudiantes pueden crear su propia imagen para difundirla antes de un debate.",
          "purpose": "El objetivo principal de esta lección es presentar a los alumnos el sistema de coordenadas que utilizarán en el Laboratorio de Juegos. Los estudiantes pueden tener poca experiencia con el uso de una cuadrícula de coordenadas o pueden tener problemas con el eje `y` \"invertido\" en el Laboratorio de Juegos. La herramienta de dibujo también obliga a los estudiantes a pensar en otras características del Laboratorio de Juegos que verán cuando empiecen a programar en la siguiente lección. Entre ellas, la necesidad de tener en cuenta el orden al dibujar, la necesidad de especificar el color y el hecho de que los círculos se colocan por su centro y los cuadrados por su esquina superior izquierda. Al final de esta actividad, los alumnos deberían estar preparados para transferir lo que han aprendido sobre la comunicación de la posición a la programación que harán en la próxima lección.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos comunicar claramente la manera de dibujar algo en una pantalla?**\n\nEn esta lección, explorarás los desafíos de comunicar instrucciones claras utilizando una herramienta del Laboratorio de Juegos para dibujar formas en la cuadrícula del Laboratorio de Juegos."
        },
        "csd3-2022/Drawing in Game Lab": {
          "name": "Dibujar en el Laboratorio de juegos",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos indicar a un ordenador la manera de dibujar figuras en la pantalla?\n\nLos alumnos se introducen en Laboratorio de Juegos, el entorno de programación de esta unidad, y comienzan a utilizarlo para colocar figuras en la pantalla. Aprenden los fundamentos de la secuenciación y la depuración, así como algunos comandos sencillos. Al final de la lección, los alumnos serán capaces de programar imágenes como las que hicieron con la herramienta de dibujo en la lección anterior.",
          "preparation": "-   Prepara un proyector u otro medio para mostrar los vídeos si quieres verlos en clase\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si estás enseñando virtualmente, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "El objetivo principal de esta lección es dar a los alumnos la oportunidad de acostumbrarse al entorno de programación, así como a la secuenciación y depuración básicas que utilizarán a lo largo de la unidad. Los estudiantes comienzan con una introducción al entorno de desarrollo interactivo (IDE) del Laboratorio de Juegos, luego aprenden los tres comandos ([\\`rect\\`(#4dd0e1)](/docs/gamelab/rect/), [\\`ellipse\\`(#4dd0e1)](/docs/gamelab/ellipse/), y [\\`fill\\`(#4dd0e1)](/docs/gamelab/fill/)) que necesitarán para codificar los mismos tipos de imágenes que crearon en papel en la lección anterior.  Los niveles de desafío ofrecen a los alumnos que tienen más experiencia en programación la oportunidad de seguir explorando el Laboratorio de Juegos.",
          "student_overview": "\\*\\*Pregunta del Día: ¿Cómo le podemos indicar a un ordenador la manera de dibujar figuras en la pantalla?\n\nEn esta lección, empezarás a utilizar el Laboratorio de Juegos para posicionar figuras en la pantalla mientras trabajas con los conceptos de secuenciación y depuración. "
        },
        "csd3-2022/Shapes and Parameters": {
          "name": "Formas y parámetros",
          "overview": "**Pregunta del Día:  ¿Cómo podemos utilizar los parámetros para dar al ordenador instrucciones más específicas?**\n\nEn esta lección los alumnos continúan desarrollando su familiaridad con el Laboratorio de Juegos manipulando la anchura y la altura de las figuras que utilizan para dibujar. La lección comienza con un debate que relaciona la funcionalidad ampliada de los bloques (por ejemplo, figuras de diferentes tamaños) con la necesidad de más entradas de bloques, o \"parámetros\". Los alumnos aprenden a dibujar con versiones de [\\`ellipse()\\`(#4dd0e1)](/docs/gamelab/ellipse/) y [\\`rect()\\`(#4dd0e1)](/docs/gamelab/rect/) que incluyen parámetros de anchura y altura. También aprenden a utilizar el bloque [\\`background()\\`(#4dd0e1)](/docs/gamelab/background/).",
          "preparation": "-   Revisa la secuencia de niveles en Code Studio\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de lecciones virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "Esta lección da a los estudiantes la oportunidad de ampliar ligeramente sus conocimientos de dibujo mientras continúan desarrollando sus habilidades de programación de propósito general. Tendrán que razonar sobre el plano de coordenadas X-Y, tener en cuenta el orden de su código y aumentar ligeramente la complejidad de sus programas.  Esta lección debe centrarse principalmente en el desarrollo de conocimientos.",
          "student_overview": "**Pregunta del Día:  ¿Cómo podemos utilizar los parámetros para dar al ordenador instrucciones más específicas?**\n\nEn esta lección, seguirás trabajando en el Laboratorio de Juegos y aumentando tu familiaridad con el dibujo de figuras en la pantalla mediante la manipulación de los \"parámetros\" de las figuras que estás utilizando para dibujar. "
        },
        "csd3-2022/Variables": {
          "name": "Variables",
          "overview": "En esta lección, los estudiantes aprenden a usar variables para etiquetar un número en su programa o guardar un valor generado de forma aleatoria. Los estudiantes comienzan la lección con una descripción muy básica del propósito de una variable. Luego, los estudiantes completan un avance de nivel que refuerza el modelo de una variable como una forma de etiquetar o nombrar un número. Los estudiantes usan variables para guardar un número aleatorio y ver que las variables realmente almacenan o guardan sus valores, lo que les permite usar el mismo número aleatorio varias veces en sus programas.",
          "preparation": "-   Revisa la progresión de niveles en Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "En esta lección los alumnos verán por primera vez las variables en el curso, y no se espera que entiendan completamente el funcionamiento de las variables para su finalización. Los estudiantes deben salir de esta lección sabiendo que las variables son una forma de etiquetar un valor en sus programas para que puedan ser reutilizados o referenciados más tarde. En la siguiente lección los alumnos se iniciarán en los números aleatorios, en los que verán un uso más potente de las variables.  \n\nEl uso de variables para manipular dibujos es una habilidad sorprendentemente desafiante que requiere una gran cantidad de previsión y planificación. Aunque los alumnos utilizarán o modificarán muchos programas en esta lección, no se espera que compongan programas que utilicen variables para modificar las características de un dibujo. En lecciones posteriores, los estudiantes ampliarán su entendimiento de las variables y las formas más avanzadas en que pueden ser utilizadas.",
          "student_overview": "\\*\\*Pregunta del día:  ¿Cómo podemos utilizar las variables para almacenar información en nuestros programas?\n\nEn esta lección, conocerás las variables, ¡un concepto importante en la programación que se utiliza para almacenar valores en tus programas!"
        },
        "csd3-2022/Random Numbers": {
          "name": "Números aleatorios",
          "overview": "**Pregunta del Día: ¿Cómo podemos hacer que nuestros programas se comporten de forma diferente cada vez que se ejecutan?**\n\nLos alumnos conocen el bloque [\\`randomNumber()\\`(#FFB74D)](/docs/gamelab/randomNumber/) y cómo puede utilizarse para crear nuevos comportamientos en sus programas. A continuación, aprenden a actualizar las variables durante un programa.  Combinando todos estos conocimientos, los alumnos dibujan imágenes aleatorias.",
          "preparation": "-   Revisa la progresión de niveles en Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "Esta lección introduce la aleatoriedad, que es importante tanto para hacer los programas más interesantes como para motivar el uso de las variables. A mitad de la actividad, los alumnos se exponen a una variable que se actualiza varias veces en el programa, ampliando su comprensión de cómo se pueden utilizar las variables.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos hacer que nuestros programas se comporten de forma diferente cada vez que se ejecutan?**\n\nEn esta lección, aprenderás a utilizar el bloque randomNumber() ¡para crear nuevos comportamientos en tus programas!"
        },
        "csd3-2022/Sprites": {
          "name": "Sprites",
          "overview": "**Pregunta del Día:  ¿Cómo podemos utilizar los sprites para ayudarnos a mantener mucha información en nuestros programas?**\n\nPara crear imágenes más interesantes y detalladas, se inicia a los alumnos en el objeto sprite. La lección comienza con un debate sobre la diversa información que los programas deben registrar, y luego se presentan los sprites como una forma de registrar esa información. A continuación, los alumnos aprenden a asignar a cada sprite una imagen, lo que aumentará en gran medida la complejidad de lo que pueden dibujar en la pantalla.",
          "preparation": "-   (Opcional) Imprime una copia de la guía de actividad para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "El seguimiento de muchas figuras y de las diferentes variables que controlan aspectos de esas figuras puede ser muy complejo. Habrá muchas variables con diferentes nombres de variables. En su lugar, los informáticos crearon algo llamado **objeto** que permite que un nombre de variable controle tanto la forma como todos sus aspectos. En el Laboratorio de Juegos utilizamos un tipo de objeto llamado **sprite**. Un sprite es sólo un rectángulo con **propiedades** para controlar su aspecto. Las propiedades son las variables que se adjuntan a un sprite. Se puede acceder a ellas a través de la **notación de puntos**. \n\nA través de la pestaña de animación, los alumnos pueden crear o importar imágenes para utilizarlas con sus sprites. Más adelante, estos sprites se convertirán en una herramienta útil para crear animaciones, ya que sus propiedades pueden cambiarse y actualizarse a lo largo de un programa.",
          "student_overview": "**Pregunta del día:  ¿Cómo podemos usar los sprites para ayudarnos a realizar un seguimiento de mucha información en nuestros programas?**\n\nHoy aprenderás sobre los sprites, que no sólo te darán una forma de realizar un seguimiento de varias piezas de información en tus programas, ¡sino que también te permitirán crear imágenes más interesantes y divertidas!"
        },
        "csd3-2022/Sprite Properties": {
          "name": "Propiedades de Sprite",
          "overview": "**Pregunta del Día: ¿Cómo podemos utilizar las propiedades de los sprites para cambiar su apariencia en la pantalla?**\n\nLos alumnos amplían sus conocimientos sobre los sprites interactuando con sus propiedades.  Los estudiantes comienzan con un repaso de lo que es un sprite, luego pasan al Laboratorio de Juegos para practicar más con los sprites, utilizando sus propiedades para cambiar su apariencia. A continuación, reflexionan sobre las conexiones entre las propiedades y las variables.",
          "purpose": "En la última lección, cuando los estudiantes fueron iniciados en los sprites, se centraron principalmente en la creación de un sprite y la asignación de una animación. Esta lección comienza a profundizar en lo que hace que los sprites sean una construcción de programación tan poderosa: que tienen propiedades que pueden modificarse mientras se ejecuta un programa. Esto sienta las bases de gran parte de lo que los estudiantes harán en el resto de la unidad en términos de acceso y manipulación de las propiedades de los sprites para crear comportamientos interesantes en sus programas.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos utilizar las propiedades de los sprites para cambiar su apariencia en la pantalla?**\n\nEn esta lección, seguirás trabajando con los sprites, utilizando sus propiedades para cambiar su apariencia. "
        },
        "csd3-2022/Text": {
          "name": "Texto",
          "overview": "**Pregunta del Día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?**\n\nEsta lección introduce los comandos de texto del Laboratorio de Juegos, dando a los estudiantes más práctica en el uso del plano de coordenadas y los parámetros. Al principio de la lección, se pide a los alumnos que subtitulen un dibujo animado creado en el Laboratorio de Juegos. A continuación, pasan a Code Studio, donde practican la colocación de texto en la pantalla y el control de otras propiedades del texto, como el tamaño.  Los alumnos que completen la evaluación antes pueden pasar a aprender bloques más difíciles relacionados con las propiedades del texto. ",
          "purpose": "Esta lección introduce el texto, que los alumnos necesitarán cuando empiecen a construir programas más complejos (por ejemplo, juegos con marcadores). Este es el último tipo de elemento que los alumnos colocarán en la pantalla. Después de esto, los estudiantes se centrarán en cómo pueden controlar el movimiento y las interacciones de estos elementos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?**\n\nEn esta lección, aprenderás a utilizar los comandos de texto de Laboratorio de Juegos para añadir subtítulos a tus escenas. "
        },
        "csd3-2022/Mini-Project - Captioned Scenes": {
          "name": "Mini-Proyecto - Escenas subtituladas",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos utilizar el Laboratorio de Juegos para expresar nuestra creatividad?\n\nTras un rápido repaso del código que han aprendido hasta ahora, los alumnos se introducen en su primer proyecto creativo de la unidad. Utilizando el proceso de resolución de problemas como modelo, los estudiantes definen la escena que quieren crear, se preparan pensando en los diferentes códigos que necesitarán, prueban su plan en el Laboratorio de Juegos y luego reflexionan sobre lo que han creado. También tienen la oportunidad de compartir sus creaciones con sus compañeros.",
          "purpose": "Esta lección es una oportunidad para que los alumnos sean más creativos con lo que han aprendido. Algunos estudiantes pueden pasar más tiempo en la pestaña de animación dibujando que programando. Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan con los requisitos de la tarea.\n\nLa naturaleza abierta de esta lección también proporciona flexibilidad para que el profesor decida el tiempo que los estudiantes deben dedicar a su trabajo, dependiendo de las exigencias de programación de la aplicación particular del curso.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos utilizar el Laboratorio de Juegos para expresar nuestra creatividad?**\n\nEn esta lección, tendrás la oportunidad de ser creativo utilizando el proceso de resolución de problemas para diseñar y programar una escena de tu elección. "
        },
        "csd3-2022/The Draw Loop": {
          "name": "El bucle 'dibujar'",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos animar nuestras imágenes en el Laboratorio de Juegos?\n\nEn esta lección se inicia a los estudiantes en el bucle de dibujo, uno de los principales paradigmas de programación en el Laboratorio de Juegos. Para comenzar la lección, los alumnos observan algunos libros animados (flipbooks) físicos para ver que tener muchos cuadros con diferentes imágenes crea la impresión de movimiento. A continuación, los alumnos ven un vídeo en el que se explica cómo el bucle de dibujo del Laboratorio de Juegos ayuda a crear esta misma impresión en sus programas. Los estudiantes combinan el bucle de dibujo con números aleatorios para manipular algunas animaciones simples con puntos y luego con sprites.",
          "preparation": "-   Imprime y monta los manipulativos\n-   Prepara el vídeo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "El bucle de dibujo es un componente esencial del Laboratorio de Juegos. El hecho de que el entorno del Laboratorio de Juegos llame repetidamente a esta función muchas veces por segundo (por defecto 30) es lo que permite a la herramienta crear animaciones. Esta lección tiene dos objetivos. El primero es que los estudiantes vean cómo la animación en general depende de mostrar muchas imágenes ligeramente diferentes en una secuencia. El segundo objetivo es que los estudiantes entiendan cómo el bucle de dibujo les permite crear este comportamiento en el Laboratorio de Juegos. Los alumnos deben salir de la lección comprendiendo que los comandos del bucle de dibujo son llamados después de todo el resto del código, pero luego son llamados repetidamente para crear la animación. Los estudiantes tendrán la oportunidad de continuar desarrollando la comprensión de este comportamiento en las próximas dos lecciones, pero el establecimiento de una sólida base conceptual en esta lección les servirá para el resto de la unidad.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos animar nuestras imágenes en el Laboratorio de Juegos?**\n\nEn esta lección, aprenderás a utilizar el bucle de dibujo con números aleatorios para crear tus primeras animaciones sencillas. "
        },
        "csd3-2022/Sprite Movement": {
          "name": "Movimiento de sprites",
          "overview": "**Pregunta del Día: ¿Cómo podemos controlar el movimiento de los sprites en el Laboratorio de Juegos?**\n\nEn esta lección, los alumnos aprenden a controlar el movimiento de los sprites utilizando una función llamada `patrón de contador`, que cambia gradualmente las propiedades de los sprites. Los estudiantes primero hacen un intercambio de ideas sobre las diferentes maneras en que podrían animar los sprites controlando sus propiedades, y luego exploran el patrón de contador en Code Studio. Después de examinar el código de trabajo, los alumnos intentan utilizar el patrón de contador para crear varios tipos de movimientos de sprites.",
          "purpose": "Esta lección se basa en el bucle de dibujo que los estudiantes aprendieron anteriormente para crear programas con movimiento _propio_. Incrementando o disminuyendo las propiedades de los sprites, como [\\`sprite.x\\`(#f78183)](/docs/gamelab/sprite.x/), los alumnos pueden escribir programas que muevan los sprites en patrones esperados, en lugar de la aleatoriedad que utilizaron en el pasado. Las animaciones que los alumnos aprenden a crear en esta lección sientan las bases de todas las animaciones y juegos que harán a lo largo del resto de la unidad.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos controlar el movimiento de los sprites en el Laboratorio de Juegos?**\n\nEn esta lección, aprenderás a controlar el movimiento de los sprites utilizando el patrón de contador. "
        },
        "csd3-2022/Mini-Project - Animation": {
          "name": "Mini-Proyecto - Animación",
          "overview": "**Pregunta del Día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, se pide a los alumnos que combinen diferentes métodos que han aprendido para crear una escena animada. En primer lugar, los alumnos repasan los tipos de movimiento y animación que han aprendido y reflexionan sobre los tipos de escenas que podría necesitar ese movimiento. A continuación, comienzan a planificar sus propias escenas animadas, que crean en el Laboratorio de Juegos.",
          "purpose": "Esta es una oportunidad para que los alumnos sean más creativos con lo que han aprendido. Algunos estudiantes pueden pasar más tiempo en la pestaña de animación dibujando que programando. Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan los requisitos de la tarea.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, combinarás todos los conceptos que has aprendido en las lecciones anteriores ¡para crear tu primera escena animada de diseño propio!"
        },
        "csd3-2022/Conditionals": {
          "name": "Condicionales",
          "overview": "**Pregunta del día:  ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEsta lección introduce las expresiones booleanas y condicionales, que permiten que un programa se ejecute de forma diferente dependiendo de si una condición es verdadera. Los alumnos comienzan jugando a un breve juego en el que responden según se cumplan determinadas condiciones. A continuación, pasan a Code Studio, donde aprenden cómo el ordenador evalúa las expresiones booleanas y cómo pueden utilizarse para estructurar un programa.",
          "purpose": "Comenzamos con el uso de booleanos directamente antes de utilizar booleanos para lanzar sentencias _if_. En la siguiente lección introduciremos algunos bloques productores de booleanos, como [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/), que pueden utilizarse en lugar de simples comparaciones booleanas para escribir programas que respondan a la entrada del usuario.",
          "student_overview": "**Pregunta del Día:  ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEn esta lección, aprenderás sobre expresiones booleanas y condicionales, que te permitirán crear programas que se ejecuten de manera diferente dependiendo de si una condición es verdadera. "
        },
        "csd3-2022/Keyboard Input": {
          "name": "Entrada de teclado",
          "overview": "**Pregunta del Día: ¿Cómo pueden reaccionar nuestros programas a la entrada del usuario?**\n\nDespués de la introducción a los booleanos y a las sentencias _if_ en la lección anterior, se presenta a los alumnos un nuevo bloque llamado [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/) que devuelve un booleano y puede utilizarse en sentencias condicionales para mover los sprites por la pantalla. Al final de esta lección, los alumnos habrán escrito programas que captan la entrada del teclado del usuario para controlar los sprites en la pantalla.",
          "purpose": "Una forma común de utilizar las condicionales es comprobar los diferentes tipos de entrada del usuario, especialmente la pulsación de teclas. Tener una forma de que el usuario interactúe con un programa lo hace más interesante y dinámico. Sin la interacción del usuario es muy difícil crear un juego. Por lo tanto, la introducción de condicionales y entradas del usuario para la toma de decisiones es un paso crítico hacia la creación de juegos.",
          "student_overview": "**Pregunta del Día: ¿Cómo pueden nuestros programas reaccionar a la entrada del usuario?**\n\nEn esta lección, aprenderás a utilizar el bloque keyDown() que permitirá a tus programas responder a la entrada del usuario. "
        },
        "csd3-2022/Mouse Input": {
          "name": "Entrada del Ratón",
          "overview": "**Pregunta del Día: ¿De qué otras formas puede reaccionar el ordenador a la entrada del usuario?**\n\nEn esta lección los alumnos continúan explorando las formas de utilizar las sentencias condicionales para captar la entrada del usuario. Además de los comandos de teclado aprendidos ayer, los estudiantes aprenderán varias formas de captar la entrada del ratón. También ampliarán su comprensión de las condicionales para incluir \"else\", que permite que el ordenador ejecute una determinada sección de código cuando una condición es verdadera, y una sección diferente de código cuando no lo es.",
          "purpose": "Los alumnos han aprendido a tomar decisiones sencillas con condicionales. Sin embargo, a veces queremos tomar decisiones basadas en si la condición por la que preguntamos originalmente era falsa. Ahí es donde entran las sentencias `else`. Las sentencias `else` son una segunda sentencia que se adjunta a una sentencia `if`. Las sentencias  `else` se ejecutan cuando las condiciones a las que se adjuntan son falsas.\n\nEste concepto se introduce junto con varios comandos nuevos de entrada del ratón, lo que permite a los alumnos construir gradualmente programas que utilizan la entrada de diferentes maneras.",
          "student_overview": "\\*\\*Pregunta del día: ¿De qué otras formas puede reaccionar el ordenador a la entrada del usuario?\n\nEn esta lección, ampliarás lo que has aprendido sobre las sentencias if y explorarás las sentencias if-else, así como aprenderás a utilizar el ratón para obtener información del usuario que puedes utilizar en tus sentencias condicionales. "
        },
        "csd3-2022/Project - Interactive Card": {
          "name": "Proyecto - Tarjeta interactiva",
          "overview": "**Pregunta del Día:  ¿Qué conocimientos y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn este proyecto de finalización del capítulo 1, los alumnos planifican y desarrollan una tarjeta de felicitación interactiva utilizando todas las técnicas de programación que han aprendido hasta ahora.",
          "preparation": "-   Imprime una copia de la guía de proyecto para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-interactive-card-interactive-animations-and-games-lesson-17/36208) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Esta evaluación de final de capítulo es un buen lugar para que los alumnos reúnan todas las cosas que han aprendido (dibujo, variables, sprites, imágenes, condicionales, entrada del usuario) en un solo lugar. Los estudiantes deben seguir trabajando con un código que sea fácilmente legible y que no implique muchas distracciones de alto nivel. Dar a los alumnos la oportunidad de ser realmente creativos después de aprender todos estos nuevos conceptos les ayudará a comprometerse aún más cuando se dirijan al capítulo 2.",
          "student_overview": "**Pregunta del día:  ¿Qué habilidades y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn esta lección, planificarás y desarrollarás una tarjeta de felicitación interactiva ¡utilizando todos los conceptos y técnicas de programación que has aprendido hasta ahora!"
        },
        "csd3-2022/Velocity": {
          "name": "Velocidad",
          "overview": "**Pregunta del Día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nTras un breve repaso de cómo utilizaron el patrón de contador para mover sprites en las lecciones anteriores, se presenta a los alumnos la idea de ocultar esos patrones en un solo bloque.  A continuación, los alumnos se dirigen a Code Studio para probar nuevos bloques que establecen la velocidad de un sprite directamente, y observan diversas formas en las que pueden codificar comportamientos más complejos en sus sprites.  ",
          "purpose": "Esta lección pone en marcha un tema importante del capítulo: que el comportamiento complejo puede representarse de formas más simples para facilitar la escritura y el razonamiento del código. \n\nEn esta lección se enseña a los alumnos a utilizar los bloques de velocidad para simplificar el código que mueve un sprite por la pantalla. Esto supone un cambio en la forma de presentar los nuevos bloques. Mientras que antes los bloques se presentaban como elementos que permitían comportamientos completamente nuevos, ahora se presentan como una simplificación del código que los alumnos podrían haber escrito con los bloques disponibles anteriormente. En las próximas lecciones, los alumnos verán cómo este método de gestión de la complejidad les permite producir comportamientos de sprites más interesantes.",
          "student_overview": "**Pregunta del día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nEn esta lección, aprenderás a establecer la velocidad de un sprite que utiliza el patrón de contador para mover tus sprites. "
        },
        "csd3-2022/Collision Detection": {
          "name": "Detección de colisiones",
          "overview": "**Pregunta del Día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nLos alumnos aprenden sobre la detección de colisiones en el ordenador. Trabajando en parejas, exploran cómo un ordenador podría utilizar las propiedades de ubicación y tamaño de los sprites y las matemáticas para detectar si dos sprites se están tocando. A continuación, utilizan el bloque [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) para crear diferentes efectos cuando los sprites colisionan, y practican el uso del bloque para simular varias interacciones.",
          "preparation": "-   Imprime copias de la guía de actividad para que cada pareja de alumnos tenga una parte A y una parte B.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-2-lessons-18-27/36193) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Esta lección introduce formalmente el uso de abstracciones, formas sencillas de representar la complejidad subyacente. \n\nEn la última lección, los estudiantes fueron iniciados en la idea de utilizar un bloque para representar un código complejo. Los alumnos siguen explorando esta idea en el contexto del reto matemático intencionadamente complejo de determinar si dos sprites se tocan. Al utilizar un único bloque para representar esta complejidad, en este caso el bloque `isTouching`, resulta mucho más fácil escribir y razonar sobre el código, y los alumnos pueden apreciar el valor de utilizar abstracciones. En lecciones posteriores, los estudiantes continuarán avanzando sobre la abstracción [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) para crear interacciones de sprites más complejas.",
          "student_overview": "**Pregunta del día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nEn esta lección, aprenderás sobre la detección de colisiones explorando cómo un ordenador podría utilizar las matemáticas, la ubicación del sprite y el tamaño para detectar si los sprites se están tocando. "
        },
        "csd3-2022/Mini-Project - Side Scroller": {
          "name": "Mini-proyecto: Desplazamiento Lateral",
          "overview": "**Pregunta del Día:  ¿Cómo se pueden utilizar los nuevos tipos de movimiento de los sprites y la detección de colisiones para crear un juego?**\n\nLos alumnos utilizan lo que han aprendido sobre la detección de colisiones y la configuración de la velocidad para crear un sencillo juego de desplazamiento lateral. Después de ver un juego de desplazamiento lateral de ejemplo, los estudiantes hacen una lluvia de ideas sobre el tipo de desplazamiento lateral que les gustaría hacer, y luego utilizan un proceso estructurado para programar el juego en Code Studio.",
          "purpose": "Esta lección es una oportunidad para que los alumnos sean más creativos con lo que han aprendido.  Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan los requisitos de la tarea. Esta lección puede acortarse o alargarse en función de las limitaciones de tiempo. ",
          "student_overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de movimiento de los sprites y la detección de colisiones para crear un juego?**\n\n¡En esta lección, utilizarás lo que has aprendido sobre la detección de colisiones y la velocidad para crear un sencillo juego de desplazamiento lateral!"
        },
        "csd3-2022/Complex Sprite Movement": {
          "name": "Movimiento complejo de sprites",
          "overview": "**Pregunta del Día: ¿Cómo se pueden combinar los bloques anteriores en nuevos patrones para hacer movimientos interesantes?**\n\nLos alumnos aprenden a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprites más complejos. Después de repasar los dos conceptos, exploran varios escenarios en los que se utiliza la velocidad en el patrón de contador, y observan los diferentes tipos de movimiento que resultan. En particular, los alumnos aprenden a simular la gravedad. A continuación, reflexionan sobre cómo han podido conseguir nuevos comportamientos combinando bloques y patrones que ya conocían.",
          "purpose": "Esta lección no introduce ningún bloque nuevo y, de hecho, sólo utiliza los patrones que los alumnos han visto en el capítulo 1. En cambio, demuestra cómo la combinación de estas herramientas, en particular las abstracciones que los alumnos aprendieron en las dos lecciones anteriores, les permite construir nuevos comportamientos para sus sprites. Esto subraya el punto más amplio de que las abstracciones no sólo simplifican el código, sino que también pueden utilizarse como bloques de construcción de comportamientos aún más complejos.  ",
          "student_overview": "**Pregunta del Día: ¿Cómo se pueden combinar los bloques anteriores con nuevos patrones para crear movimientos interesantes?**\n\nEn esta lección, aprenderás a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprites más complejos. "
        },
        "csd3-2022/Collisions": {
          "name": "Colisiones",
          "overview": "**Pregunta del Día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, los estudiantes programan sus sprites para que interactúen de nuevas maneras. Después de un breve repaso de cómo usaron el bloque [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/), los alumnos hacen una lluvia de ideas sobre otras formas en que dos sprites podrían interactuar. A continuación, utilizan [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/) para hacer que un sprite empuje a otro por la pantalla antes de practicar con los cuatro bloques de colisión ([\\`collide\\`(#f78183)](/docs/gamelab/collide/), [\\`displace\\`(#f78183)](/docs/gamelab/displace/), [\\`bounce\\`(#f78183)](/docs/gamelab/bounce/) y [\\`bounceOff\\`(#f78183)](/docs/gamelab/bounceOff/)).",
          "purpose": "Esta lección introduce las colisiones, otra abstracción útil que permitirá a los alumnos manipular sus sprites de formas totalmente nuevas. Mientras que los estudiantes podrían teóricamente haber escrito sus propios comandos de desplazamiento, colisión o rebote, la capacidad de ignorar los detalles de este código les permite centrar su atención en la estructura de alto nivel de los juegos que quieren construir.\n\nEsta lección también pretende dar a los alumnos más práctica en el uso de los nuevos comandos que han aprendido en el segundo capítulo. Esta es la última vez que aprenderán un nuevo comportamiento de sprites, y después de esta lección los estudiantes pasarán a centrarse en cómo organizar su código cada vez más complejo.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, aprenderás a utilizar los nuevos bloques de colisión (colisionar, desplazar, rebotar y bounceOff) para hacer que tu sprite interactúe de nuevas maneras. "
        },
        "csd3-2022/Mini-Project - Flyer Game": {
          "name": "Mini-Proyecto: Juego de Volantes",
          "overview": "**Pregunta del Día:  ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el modelado del movimiento para crear un juego?**\n\nLos alumnos utilizan lo que han aprendido sobre la simulación de la gravedad y los diferentes tipos de colisiones para crear sencillos juegos de voladores. Después de ver un juego de voladores de muestra, los estudiantes hacen una lluvia de ideas sobre el tipo de juegos de voladores que les gustaría, y luego utilizan un proceso estructurado para programar el juego en Code Studio.",
          "purpose": "Esta lección es una oportunidad para que los alumnos sean más creativos con lo que han aprendido. Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan con los requisitos de la tarea.",
          "student_overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el modelado del movimiento para crear un juego?**\n\nEn esta lección, utilizarás lo que has aprendido sobre la simulación de la gravedad y los diferentes tipos de colisiones para crear ¡un sencillo juego de voladores!"
        },
        "csd3-2022/Functions": {
          "name": "Funciones",
          "overview": "**Pregunta del Día: ¿Cómo pueden los programadores utilizar las funciones para crear sus propias abstracciones?**\n\nLos alumnos aprenden a crear funciones para organizar su código, hacerlo más legible y eliminar bloques de código repetidos. Los alumnos piensan primero en qué tipo de bloques nuevos les gustaría tener en el Laboratorio de Juegos, y qué código contendrían esos bloques. Después, los estudiantes aprenden a crear funciones en el Laboratorio de Juegos. Utilizarán las funciones para eliminar largos bloques de código de su bucle de dibujo y para sustituir trozos de código repetidos por una única función.",
          "purpose": "En las lecciones anteriores los alumnos han aprendido a utilizar una serie de abstracciones en sus programas, incluyendo las propiedades de velocidad, isTouching y las colisiones. Estas abstracciones les han permitido construir programas mucho más complejos ignorando los detalles de cómo se crea ese comportamiento. En esta lección los alumnos aprenden a construir sus propias abstracciones creando funciones.\n\nLos alumnos utilizarán principalmente las funciones para dividir el código en trozos lógicos que sean más fáciles de razonar. Esto presagia la transición del capítulo desde la construcción de conocimientos técnicos a los procesos de organización utilizados para desarrollar el software.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores utilizar las funciones para crear sus propias abstracciones?**\n\nEn esta lección, aprenderás a organizar mejor tu código utilizando funciones para hacer el código de tu programa más legible y eliminar bloques de código repetidos. "
        },
        "csd3-2022/The Game Design Process": {
          "name": "El proceso de diseño de juegos",
          "overview": "**Pregunta del Día:  ¿Cómo tener una planificación ayuda a que un gran proyecto resulte más fácil?**\n\nEsta lección inicia a los estudiantes en el proceso que utilizarán para diseñar juegos durante el resto de la unidad. Este proceso se centra en una guía de proyecto que pide a los estudiantes que definan sus sprites, variables y funciones antes de empezar a programar su juego. En esta lección, los alumnos comienzan ejecutando un juego en el Laboratorio de juegos en el que el código está oculto. Analizan lo que creen que deberían ser los sprites, las variables y las funciones para hacer el juego. A continuación, se les da una guía de proyecto completa que muestra una forma de implementar el juego. Después, se acompaña a los alumnos en este proceso a través de una serie de niveles. Al final de la lección, los estudiantes tienen la oportunidad de mejorar el juego para hacerlo suyo.",
          "preparation": "-   Imprime copias de la guía de proyecto si vas a entregar copias físicas a los alumnos.  Ten en cuenta que esta guía de proyecto se rellena intencionadamente. (Véanse las notas en el Plan de la lección).\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-2-lessons-18-27/36193) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "Esta lección introduce las animaciones de fotogramas múltiples, y es la primera de una secuencia centrada en el proceso de construcción de software.\n\nMientras que las lecciones anteriores se centraron en el uso de abstracciones para gestionar la complejidad del código, esta lección se centra en la gestión de la complejidad del proceso de desarrollo de software. La lección refuerza el proceso de desarrollo de software proporcionando a los alumnos una guía de proyecto completa, proporcionando un código inicial y guiando a los alumnos a través de su implementación. En las lecciones siguientes los estudiantes tendrán que completar una mayor parte de esta guía de forma independiente, y para el proyecto final seguirán este proceso en gran medida de forma independiente.",
          "student_overview": "**Pregunta del día:  ¿Cómo tener un plan ayuda a hacer más fácil un proyecto de gran envergadura?**\n\nEn esta lección, explorarás el proceso que utilizarás durante el resto de la unidad al diseñar juegos. "
        },
        "csd3-2022/Using the Game Design Process": {
          "name": "Uso del proceso de diseño de juegos",
          "overview": "**Pregunta del Día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, los alumnos utilizan el proceso de resolución de problemas de la Unidad 1 para crear un juego de salto de plataforma. Empiezan por ver un ejemplo de salto de plataforma y luego definen cómo serán sus juegos. A continuación, utilizan un proceso estructurado para planificar los fondos, las variables, los sprites y las funciones que necesitarán para implementar su juego. Después de escribir el código del juego, los alumnos reflexionarán sobre cómo podría mejorarse el juego y aplicarán esos cambios.",
          "preparation": "-   Imprime un ejemplar de la guía de proyecto para cada alumno o pareja de alumnos\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-2-lessons-18-27/36193) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Los alumnos ya han aprendido todas las construcciones de programación que necesitan para crear un juego. Esta lección repasa muchos de esos conceptos a la vez que les introduce en un proceso estructurado que les ayudará a gestionar el trabajo. Se basa en el uso de la guía de proyecto de la lección anterior haciendo que los alumnos completen más de esta guía de proyecto de forma independiente antes de usarla para construir un juego. Esta actividad prepara a los alumnos para escribir su propio juego desde cero para el proyecto final.",
          "student_overview": "**Pregunta del día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, ¡utilizarás el proceso de resolución de problemas para crear un juego de saltos de plataforma!"
        },
        "csd3-2022/Project - Design a Game": {
          "name": "Proyecto - Diseñar un juego",
          "overview": "**Pregunta del Día: ¿Cómo pueden las cinco prácticas de informática (resolución de problemas, persistencia, comunicación, colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?**\n\nLos alumnos planificarán y construirán su propio juego utilizando la guía de proyecto de las dos lecciones anteriores. Trabajando individualmente o en parejas, los alumnos decidirán primero el tipo de juego que les gustaría construir, inspirándose en un conjunto de juegos de ejemplo. A continuación, completarán una guía de proyecto en blanco en la que describirán el comportamiento del juego y definirán las variables, los sprites y las funciones que necesitarán para construirlo. En Code Studio, una serie de niveles les indica una secuencia general que pueden utilizar para aplicar este plan. A lo largo del proceso, los estudiantes compartirán sus proyectos para que sean revisados por sus compañeros e incorporarán comentarios a medida que terminen su juego. Al final de la lección, los alumnos compartirán sus juegos terminados con sus compañeros. Este proyecto abarcará varias clases y puede durar fácilmente entre 3 y 5 períodos de clase.",
          "preparation": "-   Imprime copias de la guía de proyecto, una para cada alumno/par de alumnos.\n-   Imprime copias de la rúbrica, una para cada estudiante/par de estudiantes.\n-   Imprime copias de la guía de revisión por pares, una para cada estudiante/par de estudiantes.\n-   Revisa ejemplos de juegos en Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-design-a-game-interactive-animations-and-games-lesson-27/36211) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Esta lección es la culminación de la Unidad 3 y ofrece a los alumnos la oportunidad de construir un proyecto de Laboratorio de Juegos propio desde el principio. El soporte proporcionado por la guía del proyecto y la práctica que tienen al utilizarla están pensados para ayudar a los estudiantes a definir sus proyectos y llevar sus ideas hasta el final. Este proyecto es una oportunidad para mostrar los conocimientos técnicos, pero también tendrán que colaborar con su pareja, proporcionar opiniones constructivas a sus compañeros y utilizar repetidamente el proceso de resolución de problemas a medida que encuentren obstáculos en el camino. Este proyecto debe ser dirigido por los alumnos siempre que sea posible, y proporcionar una conclusión memorable y estimulante para esta unidad de Descubrimientos de Informática.",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo pueden las cinco prácticas de la informática (resolución de problemas, persistencia, comunicación, colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?\n\nEn esta lección, ¡utilizarás el proceso de resolución de problemas para planificar y construir un juego original!"
        },
        "csd3-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd2-2022/Exploring Web Pages": {
          "name": "Exploración de páginas web",
          "overview": "**Pregunta del Día: ¿Por qué la gente crea páginas web?**  \n\nToda página web tiene un propósito, una razón por la que alguien la creó y otros la utilizan. En esta lección, los alumnos empezarán a considerar los propósitos que puede tener un sitio web, tanto para los usuarios como para los creadores. Los alumnos explorarán algunos ejemplos de sitios web y debatirán sobre la finalidad que tienen para sus creadores. A continuación, se les pide que reflexionen sobre las razones por las que alguien podría querer crear sitios web.",
          "preparation": "-   Imprime una copia de la guía de actividad para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas virtualmente, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Esta unidad trata sobre la World Wide Web, centrándose en la creación de sitios web para la expresión personal. Para que los alumnos empiecen a pensar por qué quieren crear un sitio web, deben empezar a considerar por qué los sitios web son herramientas útiles tanto para los usuarios como para los creadores. La lección comienza con sitios web populares porque los alumnos están familiarizados con ellos, pero se les pide que reduzcan su visión a sitios más sencillos que estén dentro del alcance de lo que podrán hacer en este curso.",
          "student_overview": "**Pregunta del Día: ¿Por qué la gente crea páginas web?**\n\nEn esta lección, explorarás los distintos propósitos que las páginas web tienen para los usuarios y los creadores. "
        },
        "csd2-2022/Intro to HTML": {
          "name": "Introducción al HTML",
          "overview": "**Pregunta del Día: ¿Cómo podemos decirle al ordenador _qué_ poner en la página web y _cómo_ organizarlo?**.\n\nEn esta lección se presenta a los alumnos el lenguaje HTML como solución al problema de cómo comunicar al ordenador tanto el contenido como la estructura de una página web. La lección comienza con una breve actividad sin conexión que demuestra los desafíos de comunicar eficazmente la estructura de una página web. A continuación, los alumnos observan una página HTML de ejemplo en el Laboratorio Web y comentan con sus compañeros cómo las etiquetas HTML ayudan a resolver este problema. A continuación, los alumnos escriben su primer HTML. Un debate final ayuda a consolidar la comprensión del contenido frente a la estructura que se ha desarrollado a lo largo de la lección.",
          "preparation": "-   Revisar los niveles de Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas virtualmente, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Esta lección introduce muchos conceptos y herramientas nuevas a los alumnos. Se les presenta el HTML, la herramienta Laboratorio Web y cómo navegar por los recursos de la lección en Code.org en general. Aunque la comprensión de HTML como forma de comunicar la estructura de una página web es un objetivo de aprendizaje fundamental, en esta lección los alumnos realizan un mínimo de programación, ya que hay muchas otras ideas y herramientas nuevas que comprender. En la próxima lección los alumnos tendrán más tiempo para programar en HTML.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos decirle al ordenador _qué_ poner en la página web y _cómo_ organizarlo?**\n\nEn el Laboratorio Web verás una página HTML y utilizarás HTML para escribir tu primera página web de la unidad."
        },
        "csd2-2022/Headings": {
          "name": "Encabezados",
          "overview": "**Pregunta del Día: ¿Cómo podemos trabajar juntos para solucionar los problemas de nuestros sitios web?**\n\nEn esta lección, los alumnos siguen utilizando el lenguaje HTML para estructurar el texto de las páginas web, esta vez en parejas, con el objetivo de trabajar juntos y depurar los problemas de sus sitios.  Los alumnos aprenden cómo se muestran por defecto los distintos elementos de encabezamiento y practican su uso para crear títulos de páginas y secciones.  ",
          "preparation": "-   Ten preparados los diarios de los alumnos para devolverlos.\n-   Si quieres utilizar un gráfico de anclaje, prepara un papel de póster para hacerlo con toda la clase.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) para profesores verificados para encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de las Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Esta lección introduce las prácticas básicas de la programación por parejas y la depuración.  Éstas se utilizarán a lo largo de la unidad y se ajustan a las prácticas auténticas utilizadas por los profesionales del sector. También cubre las etiquetas de encabezamiento que los estudiantes utilizarán en sus páginas durante el resto de la unidad y refuerza la estructura general de HTML (etiqueta de apertura / contenido / etiqueta de cierre).",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos colaborar para solucionar los problemas de nuestras páginas web?**\n\nEn esta lección, aprenderás sobre las cabeceras HTML y cómo utilizarlas para crear títulos de páginas y secciones en las páginas web. "
        },
        "csd2-2022/Mini-Project: HTML Web Page": {
          "name": "Miniproyecto: Página web HTML",
          "overview": "**Pregunta del Día: ¿Cómo puedo utilizar HTML para expresar un valor personal?**\n\nEn este mini-proyecto opcional, los alumnos utilizan lo que han aprendido para crear su propia página web personal sobre un tema de su elección.  La lección comienza con un repaso del HTML que los alumnos han aprendido.  A continuación, comienzan su proyecto diseñando una página web e identificando las etiquetas que utilizarán para implementarla.  A continuación, crean sus páginas web en el Laboratorio Web y las comparten con la clase. Opcionalmente, después de participar en un proceso de intercambio de información formal, pueden realizar cambios finales en sus páginas web antes de reflexionar sobre su proceso.  Este proyecto puede completarse en un día o ampliarse a lo largo de varios días, en función de las necesidades de programación de la clase.",
          "preparation": "-   Imprime una copia de la guía de proyecto para cada alumno.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-html-web-page-web-development-lesson-4/36202) donde los profesores verificados encuentran estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Este proyecto permite a los alumnos disponer de más tiempo para practicar los contenidos que ya han aprendido. Es intencionadamente abierto y flexible para permitir que las clases pasen uno o varios días, dependiendo de las necesidades de ritmo de los alumnos o del calendario escolar.",
          "student_overview": "**Pregunta del Día: ¿Cómo puedo usar HTML para expresar un valor personal?**\n\nEn esta lección, crearás una sencilla página web personal sobre un tema de tu elección. "
        },
        "csd2-2022/Digital Footprint": {
          "name": "Huella digital",
          "overview": "**Pregunta del Día: ¿Cómo puedes asegurarte de que tu información privada sigue siendo privada?**\n\nEsta lección se aleja del trabajo de los alumnos en la elaboración de páginas web para ayudarles a articular la información personal que deciden compartir digitalmente y con quién. También refuerza la noción de que gran parte de la información que deciden compartir digitalmente queda en gran medida fuera de su control en el momento en que se publica.  \n\nLos alumnos observan varias páginas de redes sociales para determinar qué tipo de información comparten las personas sobre sí mismas o sobre los demás. Por último, los alumnos reflexionan sobre las pautas que consideran adecuadas para publicar información en línea.\n\nEl objetivo final de esta lección no es asustar a los alumnos, sino hacer que se den cuenta por experiencia de que no tienen control sobre la información que se publica en Internet.",
          "preparation": "-   Imprime copias de \"Detective Social\" para cada alumno (o una para cada grupo si se agrupa)\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados encuentran estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, considera la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Ahora que los estudiantes empiezan a compartir información públicamente, es crucial que se les inculque la comprensión de las posibles consecuencias de compartir información personal en línea.\n\nEn esta lección, los alumnos examinan varios ejemplos de perfiles de redes sociales de estudiantes falsos. Individualmente, estas páginas contienen información relativamente inocua, pero cuando los alumnos cruzan la información en varios perfiles ven cómo puede empezar a formarse una imagen detallada (o [v digital_footprint/csd/2022]). A través de esta actividad, los alumnos ven que incluso la información que no consideran privada por sí sola puede compartir más información de la prevista cuando se combina con otros pequeños detalles.",
          "student_overview": "**Pregunta del Día: ¿Cómo puedes asegurarte de que tu información privada siga siendo privada?**\n\nEn esta lección, pensarás en la información personal que decides compartir digitalmente a través de varios sitios web, aplicaciones y redes sociales. "
        },
        "csd2-2022/Styling Text with CSS": {
          "name": "Estilos de texto con CSS",
          "overview": "**Pregunta del Día: ¿Cómo podemos cambiar el estilo del texto en una página web?**\n\nEsta lección presenta el CSS como una forma de dar estilo a los elementos de la página. Los alumnos aprenden la sintaxis básica de los conjuntos de reglas CSS y luego exploran las propiedades que afectan a los elementos de texto HTML. Trabajan en una página HTML sobre los poseedores de Récords Guinness Mundiales, añadiendo su propio estilo a la página proporcionada. ",
          "preparation": "-   Crea un nuevo póster titulado **Propiedades CSS** si tus alumnos no van a hacer un seguimiento de las nuevas propiedades CSS en sus diarios\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados encuentran estrategias o recursos adicionales compartidos por otros profesores\n-   Si estás enseñando virtualmente, considera consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Esta lección introduce a los alumnos en un nuevo lenguaje (CSS) y en la idea de que los distintos lenguajes informáticos tienen funciones y sintaxis diferentes.  Aunque sólo se introducen algunas propiedades de CSS en la lección principal, se anima a los alumnos a utilizar las actividades opcionales del final de la lección para explorar más formas de expresarse con CSS.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos cambiar el estilo del texto en una página web?**\n\nEn esta lección, aprenderás a utilizar CSS para dar estilo a los elementos HTML de tu página web. "
        },
        "csd2-2022/Mini-Project: Your Personal Style": {
          "name": "Mini-Proyecto: Tu Estilo Personal",
          "overview": "**¿Cómo puedes expresar tu estilo personal en una página web?**\n\nEn este mini-proyecto opcional, los alumnos utilizan lo que han aprendido para crear su propia página web con estilo sobre un tema de su elección. La lección comienza con un repaso del CSS que los alumnos han aprendido. A continuación, comienzan su proyecto diseñando una página web e identificando las propiedades que utilizarán para realizarla. Crean sus páginas web en el Laboratorio Web y las comparten con la clase.  Después de participar en un proceso de intercambio de información formal, realizan los cambios finales en sus páginas web antes de reflexionar sobre su proceso.  Este proyecto puede completarse en un día o ampliarse a lo largo de varios días, en función de las necesidades de programación de la clase.",
          "preparation": "-   Imprime una copia de la guía de proyecto para cada alumno.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-your-personal-style-web-development-lesson-7/36203) donde los profesores verificados encuentran estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas virtualmente, considera la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Este proyecto ofrece a los alumnos más tiempo para practicar los contenidos que ya han aprendido. Es intencionadamente abierto y flexible para que las clases puedan dedicar uno o varios días, en función de las necesidades de ritmo de los alumnos o del calendario escolar.",
          "student_overview": "**Pregunta del día: ¿Cómo puedes expresar tu estilo personal en una página web?**\n\nEn esta lección, crearás tu propia página web con estilo."
        },
        "csd2-2022/Intellectual Property": {
          "name": "Propiedad intelectual",
          "overview": "**Pregunta del Día: ¿Qué tipo de normas protegen los derechos de todos cuando utilizamos los contenidos de los demás?**\n\nEmpezando con un debate sobre sus opiniones personales acerca de cómo se debería permitir a otros utilizar su trabajo, la clase explora el propósito y el papel de los derechos de autor tanto para los creadores como para los usuarios de contenidos creativos. A continuación, pasan a una actividad en la que se exploran las distintas licencias Creative Commons como solución a la dificultad de tratar los derechos de autor. ",
          "preparation": "-   Vista Previa de la Descripción General de Creative Commons - Vídeo. Es posible que tengas que descargarlo antes de ir al colegio si YouTube está bloqueado.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Hasta este momento, el único contenido que los alumnos han utilizado en sus páginas web es el suyo propio, pero en la próxima lección añadirán imágenes a sus sitios. Antes de hacerlo, tienen que entender las normas que rigen el uso legal de los contenidos que encuentran en la web. Utilizamos la licencia Creative Commons como una alternativa más clara al derecho de autor estándar, más restrictivo, y guiamos a los alumnos en la búsqueda, el uso y la citación correcta de los medios con licencia Creative Commons.",
          "student_overview": "**Pregunta del Día: ¿Qué tipo de normas protegen los derechos de todos cuando utilizamos el contenido de los demás?**\n\nEn esta lección, explorarás las distintas licencias Creative Commons. "
        },
        "csd2-2022/Using Images": {
          "name": "Usando Imágenes",
          "overview": "**Pregunta del Día: ¿Cómo podemos añadir imágenes en nuestros sitios web, al tiempo que nos aseguramos de respetar los derechos de todos?**\n\nLos alumnos comienzan la clase reflexionando sobre las implicaciones éticas del uso de imágenes en sus páginas web, concretamente en términos de propiedad intelectual. A continuación, aprenden a añadir imágenes a sus páginas web utilizando la etiqueta \\<img> y cómo citar adecuadamente las fuentes de las imágenes.",
          "purpose": "Esta lección introduce las imágenes, que se diferencian de las etiquetas anteriores en que son de \"cierre automático\" e incluyen atributos.  Los alumnos deben entender que estas etiquetas no delimitan el contenido de la misma manera que otras etiquetas.\n\nEsta es también la primera vez que se aconseja a los alumnos que utilicen el contenido de otros, y les da la oportunidad de poner en práctica lo que han aprendido sobre la propiedad intelectual y los derechos de autor.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos añadir imágenes en nuestras páginas web, asegurándonos de respetar los derechos de todos?**\n\nEn esta lección, aprenderás a añadir imágenes a tus páginas web asegurándote de tener en cuenta los derechos de autor y las licencias Creative Commons. "
        },
        "csd2-2022/Websites for Expression": {
          "name": "Sitios web para la Expresión",
          "overview": "\\*\\*Pregunta del día: ¿Cómo podemos utilizar las páginas web para expresarnos?\n\nEn esta lección, los alumnos investigan formas de utilizar los sitios web como medio de expresión personal y elaboran una lista de temas e intereses que querrían incluir en un sitio web personal. Los alumnos comienzan con una lluvia de ideas sobre las diferentes formas en que la gente expresa y comparte sus intereses e ideas. A continuación, observan algunos sitios web de ejemplo para identificar las formas en que se expresan las ideas. Por último, los alumnos realizan una lluvia de ideas y comparten una lista de temas e intereses que podrían incluir en un sitio web personal; harán referencia a esta lista a medida que avancen en la unidad.",
          "preparation": "-   Prepara diarios o, si lo deseas, imprime copias de la guía de actividad\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si enseñas de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Esta lección hace hincapié en que el desarrollo web, y por extensión la informática, es una vía de expresión personal. El calentamiento sitúa el desarrollo web como otro medio de autoexpresión junto a las artes visuales, la danza, la música, la moda, las redes sociales y muchas otras formas en las que los alumnos probablemente ya se expresan. Ver los ejemplos de los estudiantes ayuda a ampliar las expectativas de los estudiantes para sus propias páginas. La actividad sitúa el desarrollo de la web en el marco del Proceso de Resolución de Problemas, y la lluvia de ideas sobre el contenido de su sitio web ofrece a los alumnos la oportunidad de definir las formas en que les gustaría expresarse a través de sus páginas. ",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar las páginas web para expresarnos?**\n\nEn esta lección, explorarás y harás una lluvia de ideas sobre los diferentes intereses e ideas que la gente puede expresar y compartir utilizando sitios web. "
        },
        "csd2-2022/Styling Elements with CSS": {
          "name": "Estilos de elementos con CSS",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar estilo a las imágenes y a los diseños de nuestras páginas?**\n\nEsta lección continúa la introducción a las propiedades de estilo CSS, esta vez centrándose más en los elementos no textuales. Los alumnos comienzan esta lección observando un sitio web sobre Postres del Mundo. Investigan y modifican los nuevos estilos CSS de este sitio web, añadiendo sus propios estilos a la página. Después de trabajar en la página de Postres, los alumnos aplican sus conocimientos sobre las nuevas propiedades CSS a sus sitios web personales.",
          "purpose": "Esta lección se basa en lo que los estudiantes aprendieron previamente sobre las propiedades CSS, esta vez viendo las propiedades que se pueden utilizar en los elementos. Estas nuevas propiedades repercuten en el aspecto visual de la página web más allá de su texto y ofrecen a los alumnos un control más preciso sobre el diseño de sus páginas. A medida que los estudiantes amplían sus conocimientos sobre las propiedades de estilo, muchos pueden tener preguntas sobre cómo pueden hacer aún más con CSS. Los estudiantes curiosos pueden explorar más propiedades en <a href=\"http://www.w3schools.com/cssref/\"> W3 Schools </a>.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos estilizar las imágenes y los diseños de nuestras páginas?**\n\nEn esta lección, aprenderás más propiedades de estilo CSS, esta vez centradas en los elementos no textuales."
        },
        "csd2-2022/Your Web Page - Prepare": {
          "name": "Tu página web - Preparar",
          "overview": "**Pregunta del Día: ¿Qué tenemos que hacer como preparación para construir nuestras páginas web?**\n\nEn esta lección, los alumnos participan en la fase de \"preparación\" del proceso de resolución de problemas, decidiendo qué elementos y estilo tendrá su página web. Empiezan revisando las diferentes pautas de HTML, CSS y ciudadanía digital que necesitarán para construir sus páginas web. A continuación, describen y dibujan sus páginas, enumerando las etiquetas y los estilos que utilizarán para conseguir la disposición y el diseño que han decidido. A continuación, se conectan a Internet para buscar y descargar las imágenes que necesitarán para sus páginas. Después, reflexionan sobre cómo su plan garantizará que el sitio web haga todo lo que debe hacer.",
          "preparation": "-   Imprime una copia de la guía de actividad para cada alumno.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-1-lessons-1-13/36190) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Esta lección refuerza la idea de que los alumnos deben diseñar y planificar sus páginas antes de empezar a codificar.  Proporciona un proceso estructurado para la planificación que se vincula con el proceso de resolución de problemas que se desarrolla a lo largo del curso.  El plan debe estar vinculado a la hoja de trabajo \"Definir\" que los estudiantes completaron un par de lecciones antes, y les da algo con lo que construir sus páginas en la siguiente lección.",
          "student_overview": "**Pregunta del Día: ¿Qué tenemos que hacer como preparación para construir nuestras páginas web?**\n\nEn esta lección, trabajarás en la etapa de \"preparación\" del proceso de resolución de problemas para decidir qué elementos y estilo tendrá tu página web. "
        },
        "csd2-2022/Project - Personal Web Page": {
          "name": "Proyecto - Página Personal de Internet",
          "overview": "**Pregunta del Día: ¿Qué conocimientos y prácticas nos ayudan cuando codificamos páginas web?**\n\nDespués de repasar rápidamente su proceso de depuración, los alumnos se conectan a Internet para crear las páginas que han planificado en las lecciones anteriores, con las guías del proyecto como referencia. Una vez que han terminado con sus páginas, completan una breve reflexión sobre el proceso, de lo que se sienten más orgullosos y de lo que les gustaría recibir comentarios. A continuación, participan en un proceso estructurado de opiniones de los compañeros antes de realizar las ediciones finales de las páginas. Después, reflexionan sobre los conocimientos y las prácticas que les han ayudado a tener éxito.",
          "preparation": "-   Asegúrate de que los alumnos tienen acceso a la Guía del Proyecto de la última lección.\n-   Imprime copias de los documentos de reflexión y de las opiniones de los compañeros.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-personal-web-page-web-development-lesson-13/36204) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "En las lecciones anteriores, los alumnos han planificado su página web personal. En esta lección, tendrán que crearla y compartirla con el resto del mundo. Esto debería reforzar el valor del proceso de planificación, y también darles la oportunidad de practicar la comunicación efectiva a través de la opinión de los compañeros. Los alumnos deben tener la oportunidad de realizar las cinco prácticas de esta lección: Resolución de Problemas, Persistencia, Comunicación, Colaboración y Creatividad.",
          "student_overview": "**Pregunta del día: ¿Qué habilidades y prácticas ayudan cuando codificamos páginas web?**\n\nEn esta lección, trabajarás en la creación de las páginas web que has planificado en las lecciones anteriores. "
        },
        "csd2-2022/Websites for a Purpose": {
          "name": "Sitios Web por un Propósito",
          "overview": "**Pregunta del Día: ¿Cuáles son las diferentes razones por las que la gente crea sitios web?**\n\nEn esta lección, los alumnos exploran las diferentes razones por las que la gente crea sitios web. Primero piensan en las diferentes razones por las que visitan sitios web, y luego investigan los sitios web que se han creado para abordar un problema concreto. Después de decidir qué propósitos diferentes podrían tener esos sitios web para sus creadores, comienzan a pensar en el problema que podrían querer resolver con un sitio web. Al final de la lección, los alumnos forman los grupos en los que estarán para sus proyectos de capítulo.",
          "purpose": "Esta lección hace que los alumnos pasen de pensar en los sitios web como una forma de expresión personal a considerar cómo los sitios web pueden servir a propósitos más amplios para sus creadores. También sirve como introducción suave al proyecto del capítulo, en el que los estudiantes trabajarán en equipos para crear sitios web que resuelvan un problema de su elección.",
          "student_overview": "**Pregunta del Día: ¿Cuáles son las diferentes razones por las que la gente crea sitios web?**\n\nEn esta lección, explorarás las diferentes razones por las que la gente crea sitios web y los problemas que pueden resolverse con tu propio sitio web.  "
        },
        "csd2-2022/Team Problem Solving": {
          "name": "Resolución de problemas en equipo",
          "overview": "**Pregunta del Día: ¿Cómo podemos trabajar juntos para formar un gran equipo?**\n\nLos alumnos trabajan juntos para establecer normas de grupo y hacer una lluvia de ideas sobre las características que les gustaría que tuvieran sus sitios web. La clase comienza pensando en algunos equipos populares de diferentes contextos, y luego reflexiona sobre lo que hace que los equipos tengan éxito. A continuación, se reúnen en sus propios equipos y elaboran un plan sobre cómo van a interactuar y alcanzar el éxito en sus propios proyectos. A continuación, los equipos comienzan a hacer una lluvia de ideas para su proyecto de sitio web.",
          "purpose": "Esta lección aborda explícitamente los retos que los alumnos pueden encontrar al trabajar en grupo y les ayuda a elaborar un plan para superar estos retos.  Los alumnos deben consultar esta lección a lo largo de la unidad mientras trabajan en equipo para completar sus proyectos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos trabajar juntos para formar un gran equipo?**\n\nTrabajarás con un equipo para hacer una lluvia de ideas sobre las posibles características que te gustaría que tuvieran tus sitios web y debatirás cómo vas a interactuar con tu equipo para tener éxito. "
        },
        "csd2-2022/Sources and Research": {
          "name": "Fuentes e investigación",
          "overview": "**Pregunta del Día: ¿Cómo podemos encontrar información relevante y fiable en Internet?**\n\nEsta lección anima a los alumnos a reflexionar sobre cómo encontrar información relevante y fiable en Internet. Después de ver y debatir un vídeo sobre el funcionamiento de los motores de búsqueda, los alumnos buscarán información relevante para su sitio. Tendrán que analizar la credibilidad de los sitios que encuentren para decidir cuáles son apropiados para utilizar en su propio sitio web.",
          "preparation": "-   Imprime una copia de la guía de actividad de la Búsqueda del Tesoro en Internet para cada pareja de estudiantes, o prepárate para proyectar las preguntas a la clase.\n-   Crea un póster en blanco titulado **Lista de Comprobación de la Integridad** y colócalo en la pared.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-2-lessons-14-20/36191) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, considera la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Mientras los alumnos terminan de crear sus propios sitios web, esta lección les anima a pensar también en sus responsabilidades como consumidores de información. Al final de esta lección, los alumnos deberían haber desarrollado estrategias para determinar qué sitios web son más fiables y vincular estas estrategias a su propio papel como productores de contenidos, buscando formas de hacer que sus propios sitios parezcan más fiables.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos encontrar información relevante y fiable en Internet?**\n\n¡En esta lección descubrirás cómo encontrar información relevante y fidedigna en Internet!"
        },
        "csd2-2022/CSS Classes": {
          "name": "Clases CSS",
          "overview": "\\*\\*Pregunta del Día:  ¿Cómo podemos crear diferentes estilos para el mismo tipo de elemento?\n\nEsta lección amplía el CSS que los alumnos ya han aprendido introduciendo las clases, que permiten a los desarrolladores web tratar grupos de elementos que quieren que tengan un estilo diferente al de otros elementos del mismo tipo. Los alumnos primero investigan y modifican las clases en varias páginas, luego crean sus propias clases y las utilizan para controlar mejor la apariencia de sus páginas.  A continuación, reflexionan sobre cómo podrían utilizar estos conocimientos para mejorar los sitios web de sus equipos.",
          "purpose": "Hasta este momento, el único estilo que los estudiantes han podido hacer es el estilo por elemento, lo que significa que cada elemento de una clase particular tiene el mismo estilo. Las clases permiten a los desarrolladores web agrupar un conjunto de elementos que quieren estilizar.  Esto significa que los estudiantes pueden seleccionar un elemento determinado que quieran estilizar o agrupar elementos de uno o más tipos de elementos. Una vez que los elementos están en una clase, la clase puede ser utilizada como un selector en una regla de estilo. \n\nNota: Los elementos individuales también pueden ser seleccionados por id, pero este tipo de selección es posible con una clase aplicada sólo a ese elemento individual. Dado que la selección por id no añade ninguna funcionalidad extra, no se enseña en este curso.",
          "student_overview": "\\*\\*Pregunta del Día:  ¿Cómo podemos crear diferentes estilos para el mismo tipo de elemento?\n\nEn esta lección aprenderás sobre las clases CSS que te permitirán dar estilo a grupos de elementos de forma diferente a otros elementos del mismo tipo. "
        },
        "csd2-2022/Planning a Multi-Page Site": {
          "name": "Planificación de un Sitio Multi-página",
          "overview": "**Pregunta del Día:  ¿Cómo se planifica una página web en grupo?**\n\nLos alumnos trabajan en equipos para planificar sus sitios web y crear un boceto de cada página. A continuación, descargan los medios que necesitarán para sus sitios. Al final de la actividad, deciden cómo se distribuirá el trabajo entre los miembros del equipo y comunican si todo el grupo está de acuerdo con el plan.",
          "purpose": "Esta lección da a los alumnos la oportunidad de planificar en equipo. Tendrán que tomar muchas decisiones en grupo y disponer de medios eficaces para resolver los desacuerdos. El plan que elaboren servirá de referencia en las próximas lecciones para construir sus sitios.",
          "student_overview": "**Pregunta del Día:  ¿Cómo planificamos una página web en grupo?**\n\nHoy trabajaréis en equipo para planificar vuestras páginas web definitivas y decidir cómo se repartirá el trabajo entre vosotros.  "
        },
        "csd2-2022/Linking Pages": {
          "name": "Enlaces entre páginas",
          "overview": "**Pregunta del Día: ¿Cómo podemos combinar varias páginas web diferentes en un solo sitio web?**\n\nLos alumnos comienzan la lección buscando en Internet la primera página web y debatiendo cómo el uso de enlaces fue lo que dio origen a la web. A continuación, pasan al Laboratorio Web, donde aprenden a crear sus propios enlaces, así como las buenas prácticas que facilitan la navegación de los usuarios en una página.  Por último, reflexionan sobre su proyecto de grupo y cuáles son sus objetivos personales para la recta final.",
          "preparation": "-   Asegúrate de que los alumnos tienen acceso a sus planes de la página web de la lección anterior.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-web-development-chapter-2-lessons-14-20/36191) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview)",
          "purpose": "Los enlaces son la característica que define a la web.  Aunque parezcan sencillos, son los que nos permiten movernos sin problemas por Internet. Esta lección permitirá a los alumnos practicar el uso de los enlaces e introducirles en las buenas prácticas de navegación para sus sitios.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos combinar varias páginas web diferentes en un solo sitio web?**\n\nEn esta lección, aprenderás a utilizar los hipervínculos en una página web. "
        },
        "csd2-2022/Project - Website for a Purpose": {
          "name": "Proyecto - Sitio web para un propósito específico",
          "overview": "**Pregunta del Día: ¿Qué conocimientos y prácticas nos ayudarán a trabajar juntos para hacer un gran sitio web?**\n\nLos equipos han pasado mucho tiempo a lo largo del capítulo planificando sus sitios web. En esta lección, por fin, pueden codificar sus páginas. Utilizando la guía del proyecto, el equipo trabaja en conjunto e individualmente para codificar todas las páginas, y luego pone todo el trabajo junto en un solo sitio.",
          "purpose": "Este proyecto hace hincapié en muchas de las prácticas básicas de este curso. Los estudiantes necesitarán creatividad, capacidad para resolver problemas, persistencia, colaboración y comunicación para completar sus sitios web. ",
          "student_overview": "**Pregunta del día: ¿Qué habilidades y prácticas nos ayudarán a trabajar juntos para hacer un gran sitio web?**\n\n¡En esta lección, tu equipo finalmente codificará las páginas que habéis estado planeando!"
        },
        "csd2-2022/Peer Review and Final Touches": {
          "name": "Revisión de compañeros y ajustes finales",
          "overview": "\\*\\*Pregunta del Día:  ¿Cómo podemos utilizar la opinión de los demás para mejorar nuestros sitios web?\n\nEsta lección se centra en el valor de los comentarios de los compañeros. Los alumnos reflexionan primero sobre lo que les enorgullece y sobre lo que les gustaría recibir comentarios. A continuación, los equipos trabajan con sus compañeros para obtener esa información mediante un proceso estructurado que incluye los criterios de la rúbrica del proyecto. Después, los estudiantes deciden cómo quieren responder a los comentarios y dar los últimos toques a sus sitios.  Tras una revisión final de la rúbrica, reflexionan sobre su proceso. Como colofón de la unidad, compartirán sus proyectos y también una visión general del proceso que han seguido para llegar a ese diseño final.",
          "preparation": "-   Imprime una copia de la guía de revisión por pares para cada estudiante.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/15Gkj12vQaZmbJMZbfKk7Ec3krr1aOJeG16zy3wZ83jQ/preview).",
          "purpose": "La revisión por pares anima a los alumnos a aprovechar a sus compañeros como recursos y a desarrollar capacidades de comunicación eficaces. La reflexión final y la presentación permiten a los estudiantes practicar la comunicación sobre su trabajo.",
          "student_overview": "\\*\\*Pregunta del día:  ¿Cómo podemos utilizar los comentarios para mejorar nuestras páginas web?\n\nEn esta lección, darás y recibirás comentarios sobre tu sitio web terminado."
        },
        "csd2-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd4-2022/Designing With Empathy": {
          "name": "Diseñando con Empatía",
          "overview": "**Pregunta del Día: ¿Cómo podemos elegir los productos en función de las necesidades del usuario?** \n\nPara iniciar una unidad dedicada a la resolución de problemas en grupo y al desarrollo de productos para otros usuarios, los alumnos empiezan investigando el diseño de varios zapatos. Observan una serie de zapatos e intentan relacionar cada uno de ellos con un usuario potencial. Los estudiantes también proporcionan comentarios sobre estos diseños, utilizando un \"Me gusta...\" / \"Me gustaría...\" / que se repetirá a lo largo de la unidad. Para concluir la actividad, se pide a los alumnos que propongan algunos cambios en un juego de zapatos que lo harían más útil o utilizable.",
          "preparation": "-   Imprime una copia de la guía de actividad para cada alumno (o prepárate para distribuir el documento digitalmente).\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos elegir productos en función de las necesidades de un usuario?**\n\nEn esta lección, explorarás la relación entre los usuarios, sus necesidades y el diseño de los objetos que utilizan. "
        },
        "csd4-2022/Understanding Your User": {
          "name": "Entender a tu usuario",
          "preparation": "-   Imprime suficientes perfiles de usuario para todos los alumnos, garantizando la mayor variedad posible\n-   Imprime una guía de actividad para cada usuario\n-   Prepara preguntas para el ejercicio de calentamiento\n-   Etiqueta las cuatro esquinas de la sala como A, B, C y D.\n-   Organiza la sala en grupos de 4 mesas y coloca un número en cada grupo de mesas (1, 2, 3,...)\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos asegurarnos de que un producto satisface las necesidades de un usuario?**\n\nEn esta lección, explorarás cómo pueden reaccionar diferentes usuarios ante una variedad de productos. "
        },
        "csd4-2022/User Centered Design   Define and Prepare": {
          "name": "Diseño Orientado al Usuario - Definir y preparar",
          "preparation": "-   Asegúrate de que tienes suficientes notas adhesivas, bolígrafos y cartulinas grandes para que los alumnos trabajen.\n-   Forma grupos de 3 alumnos cada uno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos diseñar para otras personas que no seamos nosotros mismos?**\n\nEn esta lección, utilizarás el proceso de diseño para aportar ideas sobre la ropa inteligente. "
        },
        "csd4-2022/User Centered Design   Try and Reflect": {
          "name": "Diseño Orientado al Usuario - Prueba y Reflexiona",
          "preparation": "-   Devuelva a los alumnos la guía de actividad de ayer\n-   Haz copias de la guía de actividad Prueba y Reflexiona, una para cada grupo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta las [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos diseñar un producto para satisfacer las necesidades de un usuario?**\n\nEn esta lección, seguirás trabajando en el diseño de una prenda de vestir inteligente, a partir de las necesidades e inquietudes específicas que has planteado en la lluvia de ideas. "
        },
        "csd4-2022/User Interfaces": {
          "name": "Interfaces de usuario",
          "preparation": "-   Imprime una copia de la guía de actividad Pantallas de Interfaz de Usuario para cada par de alumnos.\n-   Imprime una copia de la guía de actividad Experiencia del Usuario (ordenador) para cada par de alumnos.\n-   Imprime una copia de la guía de actividad Experiencia del Usuario (usuario) para cada par de alumnos.\n-   Recorta las pantallas de interfaz de usuario o proporciona tijeras para que los alumnos lo hagan por sí mismos\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo podemos probar una aplicación para asegurarnos de que satisface las necesidades del usuario?\n\nEn esta lección, examinarás un prototipo en papel de una aplicación de chat y empezarás a identificar formas de mejorarla. "
        },
        "csd4-2022/Feedback and Testing": {
          "name": "Comentarios y pruebas",
          "overview": "**Pregunta del día: ¿Cómo podemos utilizar los comentarios para mejorar una aplicación?**\n\nEn esta lección, los estudiantes utilizan los comentarios de los \"usuarios\" de la aplicación del prototipo en papel de la lección anterior para desarrollar mejoras en la interfaz de usuario de ese prototipo en papel. La lección comienza con una reflexión sobre el hecho de que los diseñadores deben convertir, con la tecnología, las necesidades humanas  en cambios en la interfaz o la experiencia del usuario. A continuación, se entrega a los estudiantes una colección de comentarios y peticiones de los usuarios de la aplicación de la lección anterior. En grupos, los estudiantes clasifican los comentarios e identifican las formas en que las necesidades expresadas en los comentarios podrían satisfacerse mediante cambios en la interfaz de la aplicación. A continuación, los estudiantes pondrán en práctica en grupos algunos de estos cambios para satisfacer una de las necesidades que hayan identificado.",
          "preparation": "-   Imprime una copia del recurso Pantallas de Interfaz de Usuario para cada grupo o prepárate para mostrar las pantallas en la parte delantera del aula.\n-   Imprime una copia del recurso Prototipo de Comentarios para cada grupo. Si es posible, córtalo en tiras con antelación.\n-   Imprime una copia de Mejora una Pantalla para cada grupo. Si es posible, imprímelo por una sola cara para que los alumnos puedan repartirse la guía de actividad.\n-   Lápices de colores o rotuladores para los prototipos de papel\n-   Consulta el foro [\"Sala de profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo podemos utilizar los comentarios para mejorar una aplicación?\n\nEn esta lección, empezarás a revisar el prototipo en papel utilizando los comentarios y las peticiones de los usuarios. "
        },
        "csd4-2022/Identifying User Needs": {
          "name": "Identificar las necesidades de los usuarios",
          "overview": "**Pregunta del día: ¿Cómo pueden las entrevistas con los usuarios ayudarnos a crear aplicaciones que satisfagan las necesidades de un usuario?**\n\nEn esta lección, los alumnos interpretan las entrevistas a usuarios para determinar las necesidades e intereses de un usuario. A continuación, especulan sobre las barreras a las que se enfrentan estos usuarios o sobre las oportunidades que existen para cada uno de ellos. En grupo, ponen en común estos obstáculos y oportunidades y realizan una lluvia de ideas sobre las diferentes aplicaciones que podrían utilizarse para resolver estos problemas. Al final de la clase, los alumnos habrán decidido una idea de aplicación que aborde un obstáculo o una oportunidad para un usuario.",
          "preparation": "-   Imprime una copia de la guía de actividad de Entrevista de Usuario para cada alumno\n-   Imprime una copia del Ejemplo de Entrevistas de Usuario para cada grupo\n-   Reúne papel para carteles y material para la lluvia de ideas (bolígrafos, notas adhesivas, etc.)\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-1-lessons-1-8/36194) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar los comentarios para mejorar una aplicación?**\n\nEn esta lección, los estudiantes utilizan los comentarios de los \"usuarios\" de la aplicación del prototipo en papel de la lección anterior para desarrollar mejoras en la interfaz de usuario de ese prototipo en papel. La lección comienza con una reflexión sobre el hecho de que los diseñadores deben convertir, con la tecnología, las necesidades humanas  en cambios en la interfaz o la experiencia del usuario. A continuación, se entrega a los estudiantes una colección de comentarios y peticiones de los usuarios de la aplicación de la lección anterior. En grupos, los estudiantes clasifican los comentarios e identifican las formas en que las necesidades expresadas en los comentarios podrían satisfacerse mediante cambios en la interfaz de la aplicación. A continuación, los estudiantes pondrán en práctica en grupos algunos de estos cambios para satisfacer una de las necesidades que hayan identificado."
        },
        "csd4-2022/Project - Paper Prototype": {
          "name": "Proyecto - Prototipo en papel",
          "overview": "**Pregunta del día: ¿Cómo puedo desarrollar un prototipo de aplicación para un usuario?**\n\nBasándose en la entrevista con el usuario de la lección anterior, cada estudiante propone una idea para una aplicación que resuelva el problema de su usuario. A continuación, los estudiantes crean su propio prototipo en papel de sus ideas de aplicación dibujando \"pantallas\" en tarjetas individuales. Una guía del proyecto dirige a los estudiantes a través del proceso, incluyendo la construcción del prototipo en papel y la prueba con su usuario para ver si sus suposiciones sobre las interfaces de usuario que crearon son correctas.\n\nSe trata de una clase de dos días de duración, con los tiempos específicos que se indican en el plan de estudio a continuación",
          "preparation": "-   Imprime una copia de la guía de proyecto para cada estudiante\n-   Imprime una copia de la rúbrica para cada alumno\n-   6 fichas para cada alumno\n-   Material de dibujo (lápices de colores, rotuladores, reglas, etc.)\n-   Papel de póster para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-paper-prototype-the-design-process-lesson-8/36212) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo puedo desarrollar un prototipo de aplicación para un usuario?**\n\nEn esta lección, utilizarás la entrevista a un compañero de clase de la lección anterior para proponer ideas de aplicaciones que respondan a las necesidades de tus usuarios. "
        },
        "csd4-2022/Designing Apps for Good": {
          "name": "Diseñar aplicaciones de forma definitiva",
          "preparation": "-   Asigna equipos de 3-4 personas, idealmente en función de un interés similar en un tema de la aplicación.\n-   Imprime una copia de la guía de actividad por equipo.\n-   Elige de 1 a 3 de las aplicaciones de ejemplo para compartirlas con la clase.\n-   Organiza los asientos de la clase para los equipos preseleccionados de 3-4 estudiantes\n-   Distribuye notas adhesivas para cada equipo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Qué es una Aplicación para el Bienestar que queremos crear?**\n\nEn esta lección, comenzarás el proceso de diseño de una aplicación que durará hasta el final de esta unidad y que comienza con la elaboración de un plan sobre cómo funcionará tu equipo mientras creas esta aplicación, un tema para tu aplicación y usuarios potenciales. "
        },
        "csd4-2022/Market Research": {
          "name": "Investigación del mercado",
          "overview": "**Pregunta del día: ¿Cómo podemos utilizar las aplicaciones existentes como inspiración para nuestras propias aplicaciones?**\n\nEn esta lección, los alumnos investigan aplicaciones similares a la que pretenden crear para comprender mejor las necesidades de sus usuarios. Los alumnos trabajan en equipo para buscar otras aplicaciones en Internet y luego evalúan las que les resultan interesantes. Al final de la clase, cada equipo tendrá una idea más clara sobre el tipo de aplicación que quiere crear y afinará aún más quiénes son sus usuarios objetivo. Cada equipo mantendrá una lista de citas de todas las aplicaciones que haya examinado para utilizarla en su presentación final.",
          "preparation": "-   Organiza los asientos del aula para equipos de 4-5 alumnos\n-   Imprime un ejemplar de la guía de actividad por equipo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar las aplicaciones existentes como inspiración para nuestras propias aplicaciones?**\n\nEn esta lección, te sumergirás en el desarrollo de aplicaciones explorando aplicaciones existentes que pueden servir a usuarios similares a la aplicación en la que estás trabajando. "
        },
        "csd4-2022/Exploring UI Elements": {
          "name": "Explorando los elementos de la Interfaz de Usuario",
          "overview": "**Pregunta del día: ¿Qué elementos de la interfaz de usuario serán útiles para nuestra aplicación?**\n\nAntes de empezar a diseñar aplicaciones, tenemos que ayudar a los estudiantes a definir sus expectativas. Dado que los estudiantes acabarán creando prototipos de estas aplicaciones en Laboratorio de Aplicaciones, estarán en mejor forma si sus ideas se ajustan a los tipos de aplicaciones que se pueden crear con las herramientas del Laboratorio de Aplicaciones. El día de hoy se centra en que los equipos vean varias aplicaciones de ejemplo hechas en Laboratorio de Aplicaciones e identifiquen los componentes de la interfaz de usuario. A continuación, elaborarán un plan sobre qué características podrían utilizar y qué componentes en su aplicación.",
          "preparation": "-   Imprime una copia de la guía de actividad para cada equipo\n-   (Opcional) Previsualiza la Lección 14 - Modo Diseño en Laboratorio de Aplicaciones para ayudar a responder las preguntas de los alumnos sobre los elementos de la interfaz de usuario en el Laboratorio de Aplicaciones.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Qué elementos de la interfaz de usuario serán útiles para nuestra aplicación?**\n\nEn esta lección, explorarás algunas aplicaciones de ejemplo creadas en el Laboratorio de Aplicaciones y utilizarás estos ejemplos para ayudar a configurar el primer prototipo en papel de tu aplicación. "
        },
        "csd4-2022/Build a Paper Prototype": {
          "name": "Construir un Prototipo de Papel",
          "overview": "**Pregunta del día: ¿Cómo podemos construir un prototipo de papel para nuestra aplicación?**\n\nLos estudiantes trabajan en sus equipos para crear prototipos en papel para las aplicaciones que han estado desarrollando. Empiezan haciendo un plan para cada pantalla, y luego asignan a diferentes miembros del equipo para que trabajen en cada pantalla, de modo que la tarea pueda completarse a tiempo. Pueden utilizar fichas de 3x5 para desarrollar sus prototipos en papel, o la plantilla de Prototipos en Papel.",
          "preparation": "-   Prepara fichas de 3x5 (o copias de la plantilla del prototipo), notas adhesivas, bolígrafos, lápices de colores y tijeras para cada equipo.\n-   Imprime una copia de la guía de actividad para cada equipo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview)."
        },
        "csd4-2022/Prototype Testing": {
          "name": "Pruebas de prototipos",
          "overview": "**Pregunta del día: ¿Cómo funciona nuestro prototipo cuando lo prueban los usuarios reales?**\n\nEl propósito principal de desarrollar prototipos en papel es que permiten una rápida prueba e iteración antes de escribir cualquier código. Esta lección se centra en dar a los equipos la oportunidad de probar sus prototipos antes de pasar al Laboratorio de Aplicaciones. Los equipos desarrollan un plan para probar con los usuarios antes de realizar las pruebas del prototipo con otros estudiantes de la clase (y potencialmente fuera de la clase). Para probar el prototipo con los usuarios, los estudiantes tendrán que asignar roles en las pruebas (el \"narrador\", el \"ordenador\" y los \"observadores\"), así como tener preparadas algunas preguntas para que el usuario las responda una vez finalizada la prueba.",
          "preparation": "-   O bien se dispone de otras personas para que prueben los prototipos en papel de cada equipo, o bien se programa tiempo suficiente para que los equipos prueben los prototipos de los demás.\n-   Imprime una copia de la guía de actividad de Pruebas de Usuario de Prototipos en Papel para cada equipo.\n-   Imprime una copia de la guía de actividad de Casos de Prueba de Usuario para cada equipo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo funciona nuestro prototipo cuando lo prueban usuarios reales?**\n\nEn esta lección, trabajarás con tu equipo para probar tu prototipo en papel con otros miembros de la clase. "
        },
        "csd4-2022/Design Mode in App Lab": {
          "name": "Modo de Diseño en Laboratorio de Aplicaciones",
          "preparation": "-   Imprime una copia de la guía de actividad \"Propiedad de Pantalla\" para cada grupo.\n-   Imprime una copia de la guía de actividad \"Diseño de Pantalla\" para cada alumno.\n-   (Opcional) Imprime una copia de la guía de actividad \"Modelo de Diseño de Pantalla\" para cada grupo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar el Laboratorio de Aplicaciones y el Modo de Diseño para crear aplicaciones?**\n\nEn esta lección, trabajarás con tu equipo para empezar a construir la siguiente edición de tu aplicación en el Laboratorio de Aplicaciones. "
        },
        "csd4-2022/Build a Digital Prototype": {
          "name": "Construir un Prototipo Digital",
          "overview": "**Pregunta del día: ¿Cómo puedo diseñar un prototipo digital a partir de un prototipo en papel?**\n\nDespués de haber desarrollado en colaboración un prototipo en papel para sus aplicaciones, los grupos se dividen y aprovechan para empezar a trabajar en una versión digital interactiva basada en el prototipo en papel. Utilizando el modo de diseño de arrastrar y soltar de Laboratorio de Aplicaciones, los estudiantes trabajan individualmente a través de una progresión de niveles de desarrollo de habilidades para aprender a construir versiones digitales de un prototipo en papel. A partir de ahí, cada miembro del grupo construye al menos una página de su aplicación en el Laboratorio de Aplicaciones, para luego combinarla en una sola aplicación.",
          "preparation": "-   Entrega a los alumnos copias adicionales de la Guía de Actividad para el Diseño de Pantallas.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo puedo diseñar un prototipo digital a partir de un prototipo en papel?**\n\nEn esta lección, trabajarás con tu equipo para construir la siguiente edición de tu aplicación con cada miembro del equipo construyendo al menos una página de tu aplicación. "
        },
        "csd4-2022/Events in AppLab": {
          "name": "Sucesos en Laboratorio de Aplicaciones",
          "student_overview": "**Pregunta del día: ¿Cómo puedo utilizar los eventos para crear una aplicación?**\n\nEn esta lección, combinarás las pantallas que cada miembro del equipo construyó en una sola aplicación y aprenderás a programar eventos para que puedas navegar entre tus pantallas. "
        },
        "csd4-2022/Linking Prototype Screens": {
          "name": "Vinculación de las Pantallas del Prototipo",
          "student_overview": "**Pregunta del día: ¿Cómo puedo combinar las pantallas para crear un prototipo digital completo?**\n\nEn esta lección, importarás la pantalla de cada compañero de equipo a tu propia aplicación y trabajarás de forma independiente para añadir eventos a tu código y vincular las pantallas. "
        },
        "csd4-2022/Testing the App": {
          "name": "Prueba de la aplicación",
          "preparation": "-   Imprime una copia de la guía de actividad para cada alumno.\n-   Si es posible, cuenta con usuarios externos para que prueben las aplicaciones de los equipos antes del día de la prueba.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo funciona nuestro prototipo digital cuando lo prueban usuarios reales?**\n\nEn esta lección, llevarás a cabo otra ronda de pruebas de usuarios con tu prototipo digital y recopilarás comentarios que se utilizarán para informar la iteración final de tu aplicación. "
        },
        "csd4-2022/Bugs and Features": {
          "name": "Errores y Características",
          "preparation": "-   Imprime una copia de la guía de actividad para cada equipo\n-   Distribuye notas adhesivas para cada equipo\n-   (Opcional) Prepara un póster o una pizarra grande para cada equipo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo podemos crear un plan para solucionar los errores y las características de nuestro prototipo?**\n\nEn esta lección, utilizarás los comentarios de la lección anterior para abordar las necesidades de los usuarios, así como los errores que debes corregir. "
        },
        "csd4-2022/Updating Your Prototype": {
          "name": "Actualizando tu Prototipo",
          "preparation": "-   Imprime una copia de la guía de actividad para cada equipo\n-   (Opcional) Prepara papel de póster o un espacio grande de pizarra para cada equipo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-the-design-process-chapter-2-lessons-9-21/36195) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo puedo hacer un seguimiento de mi trabajo mientras realizamos actualizaciones en nuestra aplicación?**\n\nEn esta lección, trabajarás con tu equipo para implementar cambios que respondan a las necesidades de tus usuarios. "
        },
        "csd4-2022/Project - App Presentation": {
          "name": "Proyecto - Presentación de la aplicación",
          "preparation": "-   Determina cuánto tiempo tiene cada grupo para presentar. Normalmente son entre 8 y 10 minutos por equipo, pero recuerda dejar tiempo para la transición entre equipos.\n-   Crea una copia de la plantilla de presentación para cada equipo.\n-   Imprime una copia de la rúbrica para cada equipo. \n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-app-presentation-the-design-process-lesson-21/36213) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/1T7aTDpaXW8K8pOeLiz53WP-zGxFY3Q1o_CsaiXRiXpo/preview).",
          "student_overview": "**Pregunta del día: ¿Cómo puedo presentar los pasos de nuestro proceso de diseño a personas ajenas a nuestro equipo?**\n\nEn esta lección, trabajarás con tu equipo para preparar una presentación para \"lanzar\" la aplicación que has desarrollado. "
        },
        "csd4-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd6-2022/Innovations in Computing": {
          "name": "Innovaciones en computación",
          "student_overview": "En esta lección, explorarás una amplia variedad de plataformas informáticas nuevas e innovadoras mientras amplías tu comprensión de lo que puede ser un ordenador."
        },
        "csd6-2022/The Circuit Playground": {
          "name": "The Circuit Playground",
          "student_overview": "En esta lección, conocerás el Circuit Playground, la placa de circuitos que se utilizará durante el resto de esta unidad. "
        },
        "csd6-2022/Board Events": {
          "name": "Eventos de la Placa",
          "student_overview": "En esta lección, aprenderás a utilizar los botones de hardware del Circuit Playground y el interruptor que dará entrada al Circuit Playground."
        },
        "csd6-2022/Color LEDs": {
          "name": "LEDs de colores"
        },
        "csd6-2022/Accelerometer": {
          "name": "Acelerómetro",
          "student_overview": "En esta lección, explorarás el acelerómetro y sus posibilidades. "
        },
        "csd6-2022/Making Music": {
          "name": "Crear música",
          "student_overview": "En esta lección, utilizarás al máximo la función de zumbador del Circuit Playground produciendo sonidos, notas y canciones. "
        },
        "csd6-2022/Functions": {
          "name": "Funciones"
        },
        "csd6-2022/Project - Prototype an Innovation": {
          "name": "Proyecto - Prototipo de una Innovación",
          "overview": "En este proyecto final del curso, los estudiantes se reúnen en grupos para desarrollar y probar un prototipo de un dispositivo informático innovador basado en el Circuit Playground. Mediante las entradas y salidas disponibles en el tablero, los grupos crearán programas que generan interacciones interesantes y únicas con los usuarios. ",
          "purpose": "Esta lección es la culminación de la Unidad 6 y ofrece a los estudiantes la oportunidad de construir un proyecto propio del Maker Toolkit desde cero. Este proyecto es una oportunidad para mostrar las habilidades técnicas, pero también tendrán que demostrar la colaboración, la retroalimentación constructiva de los compañeros y la resolución de problemas iterativos, ya que se encuentran con obstáculos en el camino. Este proyecto debe ser dirigido por los alumnos siempre que sea posible y proporcionar una conclusión memorable y motivadora para la unidad final de Descubrimientos CS.",
          "student_overview": "En este proyecto final, te enfrentarás al reto de desarrollar y probar un prototipo para un dispositivo que interactúe con el mundo físico a través de varios tipos de entrada y salida y que permita interacciones de usuario interesantes y únicas. "
        },
        "csd6-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd7-2022/Introduction to Machine Learning": {
          "name": "Introducción al aprendizaje automático (Machine Learning)",
          "overview": "Los alumnos conocen una forma de inteligencia artificial llamada aprendizaje automático y cómo pueden utilizar el Proceso de Resolución de Problemas ayudando a entrenar a un robot para que resuelva problemas. Participan en tres actividades de aprendizaje automático en las que un robot  \"A.I. Bot\" aprende a detectar patrones en los peces. En el primer nivel, los alumnos entrenan al robot para que detecte \"peces\" frente a \"no peces\" y descubren que un mayor número de datos conduce a una mayor precisión. En el segundo nivel, los alumnos entrenan al \"I.A. Bot\" para que detecte peces de cierto color o con una forma determinada y descubren que el \"I.A. Bot\" podría estar basando su decisión en factores no previstos. En el último nivel, los alumnos entrenan al \"I.A. Bot\" para que detecte expresiones y descubren que el \"I.A. Bot\" puede estar utilizando características no relacionadas para tomar decisiones de una manera que no es justa. La lección termina reafirmando cómo se utiliza el proceso de resolución de problemas en el aprendizaje automático.\n\n**Pregunta del día:** ¿Cómo podemos utilizar el Proceso de Resolución de Problemas para resolver un problema con el aprendizaje automático?",
          "preparation": "-   Repasa los niveles de Code Studio antes de la clase\n-   Imprime copias de la guía de actividades para cada alumno\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.",
          "student_overview": "Los alumnos conocen una forma de inteligencia artificial llamada aprendizaje automático y cómo pueden utilizar el Proceso de Resolución de Problemas ayudando a entrenar a un robot para que resuelva problemas. Participan en tres actividades de aprendizaje automático en las que un robot  \"A.I. Bot\" aprende a detectar patrones en los peces. En el primer nivel, los alumnos entrenan al robot para que detecte \"peces\" frente a \"no peces\" y descubren que un mayor número de datos conduce a una mayor precisión. En el segundo nivel, los alumnos entrenan al \"I.A. Bot\" para que detecte peces de cierto color o con una forma determinada y descubren que el \"I.A. Bot\" podría estar basando su decisión en factores no previstos. En el último nivel, los alumnos entrenan al \"I.A. Bot\" para que detecte expresiones y descubren que el \"I.A. Bot\" puede estar utilizando características no relacionadas para tomar decisiones de una manera que no es justa. La lección termina reafirmando cómo se utiliza el proceso de resolución de problemas en el aprendizaje automático."
        },
        "csd7-2022/Types of Machine Learning": {
          "name": "Tipos de Aprendizaje Automático",
          "overview": "Los alumnos primero se plantean cómo crear modelos \"mentales\" cuando aprenden nuevos conceptos, y cómo éstos pueden ser similares a un modelo de \"aprendizaje automático\". Participan en una actividad de patrones de colores para simular la construcción de un modelo de aprendizaje automático sin ayuda, similar al de un niño pequeño, como un tipo de aprendizaje no supervisado. A continuación, juegan a un juego llamado \"Puerta con Cristal Verde\" como ejemplo de aprendizaje supervisado, en el que aprenden qué palabras siguen un determinado patrón para atravesar una puerta en el juego. A lo largo de la lección, los alumnos también conocen los términos característica, etiqueta y formación, que aparecen a lo largo de la unidad. Por último, los alumnos clasifican varios escenarios en aprendizaje \"supervisado\" o \"no supervisado\", y luego ven un vídeo sobre cómo las redes neuronales pueden simular aún más el aprendizaje humano.\\\\r\n\\\\r\n**Pregunta del día:** ¿En qué se parece el aprendizaje automático al humano?",
          "preparation": "-   Revisa todos los materiales para la lección de hoy.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.",
          "student_overview": "Los alumnos primero se plantean cómo crear modelos \"mentales\" cuando aprenden nuevos conceptos, y cómo éstos pueden ser similares a un modelo de \"aprendizaje automático\". Participan en una actividad de patrones de colores para simular la construcción de un modelo de aprendizaje automático sin ayuda, similar al de un niño pequeño, como un tipo de aprendizaje no supervisado. A continuación, juegan a un juego llamado \"Puerta con Cristal Verde\" como ejemplo de aprendizaje supervisado, en el que aprenden qué palabras siguen un determinado patrón para atravesar una puerta en el juego. A lo largo de la lección, los alumnos también conocen los términos característica, etiqueta y formación, que aparecen a lo largo de la unidad. Por último, los alumnos clasifican varios escenarios en aprendizaje \"supervisado\" o \"no supervisado\", y luego ven un vídeo sobre cómo las redes neuronales pueden simular aún más el aprendizaje humano."
        },
        "csd7-2022/Innovations in AI": {
          "name": "Innovaciones en Inteligencia Artificial",
          "overview": "En esta lección, los estudiantes exploran una aplicación de la Inteligencia Artificial llamada Seeing AI y examinan cómo está ayudando a las personas con discapacidades visuales. A continuación, los alumnos investigan otros ejemplos de cómo la Inteligencia Artificial está afectando a la sociedad, centrándose en los usuarios que se ven afectados por los ejemplos que encuentran. Por último, los alumnos comparten sus conclusiones entre ellos.\n\n**Pregunta del día:** ¿Cómo ayuda la Inteligencia Artificial a resolver problemas en todo el mundo?",
          "preparation": "-   Imprime copias de la guía de actividad para cada alumno\n-   Prepárate para distribuir digitalmente el recurso Áreas de Investigación de la Inteligencia Artificial a los alumnos. \n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) donde los profesores verificados encuentran estrategias adicionales o recursos compartidos por otros profesores."
        },
        "csd7-2022/Patterns in Data": {
          "name": "Patrones en los Datos",
          "overview": "Los alumnos examinan varias aplicaciones que toman decisiones sobre qué zapatos ponerse, hasta llegar a comprender cómo el aprendizaje automático puede ayudar a tomar esta decisión. La primera aplicación toma decisiones de forma aleatoria, lo que constituye un modelo pobre para ayudar a alguien a decidir qué zapatos ponerse. La segunda aplicación toma decisiones siguiendo un patrón establecido llamado árbol de decisiones, que es mejor pero no responde a sus usuarios. Se guía a los alumnos para que lleguen a la conclusión de que encuestar a sus usuarios puede ayudarles a tomar la mejor decisión buscando patrones en los datos y basando sus decisiones en estos patrones. La lección concluye motivando la necesidad de que un ordenador realice este análisis y busque patrones en grandes cantidades de datos, que será el tema de la siguiente lección.\\\\r\n\\\\r\n**Pregunta del día:** ¿Qué estrategias utilizan los modelos informáticos para tomar decisiones?",
          "preparation": "-   Repasa los niveles de Code Studio antes de la clase\n-   Imprime copias de la guía de actividades para cada alumno\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.",
          "student_overview": "Los alumnos examinan varias aplicaciones que toman decisiones sobre qué zapatos ponerse, hasta llegar a comprender cómo el aprendizaje automático puede ayudar a tomar esta decisión. La primera aplicación toma decisiones de forma aleatoria, lo que constituye un modelo pobre para ayudar a alguien a decidir qué zapatos ponerse. La segunda aplicación toma decisiones siguiendo un patrón establecido llamado árbol de decisiones, que es mejor pero no responde a sus usuarios. Se guía a los alumnos para que lleguen a la conclusión de que encuestar a sus usuarios puede ayudarles a tomar la mejor decisión buscando patrones en los datos y basando sus decisiones en estos patrones. La lección concluye motivando la necesidad de que un ordenador realice este análisis y busque patrones en grandes cantidades de datos, que será el tema de la siguiente lección."
        },
        "csd7-2022/Classification Models": {
          "name": "Modelos de Clasificación",
          "overview": "Los alumnos participan en una actividad desconectada que simula uno de los algoritmos de aprendizaje automático que los ordenadores utilizan para separar los datos en grupos y ayudar a tomar decisiones. Los alumnos tienen que ayudar a un ordenador a clasificar los alimentos como frutas o verduras. Empiezan por representar gráficamente 20 frutas diferentes en dos ejes, comparando la \"dulzura\" con la \"facilidad de comer\". Cuando terminan, intentan separar los datos en grupos: un área de frutas y un área de verduras. A continuación, ponemos a prueba su división ofreciéndoles nuevas frutas y verduras para que las clasifiquen, ofreciéndoles a propósito ejemplos que pongan a prueba su clasificación. Al final de la clase, los alumnos reflexionan sobre cómo este proceso les ha ayudado a tomar decisiones y lo difícil que resulta cuando hay más datos en juego.\\\\r\n\\\\r\n**Pregunta del día:** ¿Cómo aprenden los ordenadores a clasificar los datos?",
          "preparation": "-   Repasa todos los materiales de la lección de hoy.\n-   Recorta tarjetas de frutas y verduras: un juego de tarjetas para cada grupo.\n-   Regla o escuadra para cada alumno\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) para encontrar estrategias adicionales o recursos compartidos por otros profesores.",
          "student_overview": "**Pregunta del día:** ¿Cómo aprenden los ordenadores a clasificar los datos?"
        },
        "csd7-2022/Introduction to AI Lab": {
          "name": "Introducción al Laboratorio de Inteligencia Artificial",
          "overview": "Los alumnos se introducen por primera vez en la herramienta Laboratorio de Inteligencia Artificial (AI Lab), donde seleccionan características para entrenar un modelo que predice una etiqueta determinada. Los alumnos fingen que han sido contratados por varios restaurantes que quieren hacer recomendaciones a nuevos clientes basándose en los datos de las encuestas que han recogido. Los alumnos recorren cada conjunto de datos, identificando las características de los datos que les gustaría utilizar para sus recomendaciones. Los alumnos también utilizan herramientas de visualización de datos para identificar las características con altas relaciones en los datos, ya que no todas las características pueden ser útiles o predictivas para el entrenamiento de un modelo. Al final de la lección, los alumnos crean un nuevo modelo para un restaurante de su elección y escriben una carta al propietario explicando cómo pueden utilizar su modelo para aumentar su negocio de restauración.\n\n**Pregunta del día:** ¿Cómo podemos utilizar el aprendizaje automático para hacer recomendaciones?",
          "preparation": "-   Repasa los niveles de Code Studio antes de la lección\n-   Observa los dos vídeos de esta lección y familiarízate con el Laboratorio de Inteligencia Artificial.\n-   Imprime o prepara para compartir en línea copias de la guía de actividad para cada alumno\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.",
          "student_overview": "Los alumnos se introducen por primera vez en la herramienta Laboratorio de Inteligencia Artificial (AI Lab), donde seleccionan características para entrenar un modelo que predice una etiqueta determinada. Los alumnos fingen que han sido contratados por varios restaurantes que quieren hacer recomendaciones a nuevos clientes basándose en los datos de las encuestas que han recogido. Los alumnos recorren cada conjunto de datos, identificando las características de los datos que les gustaría utilizar para sus recomendaciones. Los alumnos también utilizan herramientas de visualización de datos para identificar las características con altas relaciones en los datos, ya que no todas las características pueden ser útiles o predictivas para el entrenamiento de un modelo. Al final de la lección, los alumnos crean un nuevo modelo para un restaurante de su elección y escriben una carta al propietario explicando cómo pueden utilizar su modelo para aumentar su negocio de restauración."
        },
        "csd7-2022/Importing Models in App Lab": {
          "name": "Importación de Modelos en Laboratorio de Aplicaciones",
          "overview": "Los alumnos se inician en la importación de sus modelos en App Lab y en la vinculación de su modelo con sus pantallas. La lección comienza pidiéndoles que prueben una aplicación de preguntas al estilo de \"Buzzfeed\" que, a lo largo de la lección, recrean: ¿Cuál es tu lugar ideal de vacaciones? Los alumnos comienzan importando el modelo desde App Lab, luego añaden una pantalla que falta en el modo de diseño, después añaden declaraciones \"if\" para cambiar las pantallas y, finalmente, vinculan todas las pantallas en función del resultado de la predicción. A continuación, pueden elegir otro cuestionario del estilo de \"Buzzfeed\" para utilizarlo como modelo y diseñar una aplicación, utilizando las habilidades que han aprendido en esta lección.\\\\r\n\\\\r\n**Pregunta del día:** ¿Cómo puedo crear una aplicación utilizando el aprendizaje automático?",
          "preparation": "-   Repasa los niveles de Code Studio antes de la lección para que te familiarices con la importación de un modelo al Laboratorio de Aplicaciones.\n-   Decide si quieres proporcionar recursos adicionales para que los estudiantes se familiaricen con el Laboratorio de Aplicaciones, como se indica en el plan de la lección.\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-ai-and-machine-learning-chapter-1-lessons-1-15/36198) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.",
          "student_overview": "Los alumnos se inician en la importación de sus modelos en App Lab y en la vinculación de su modelo con sus pantallas. La lección comienza pidiéndoles que prueben una aplicación de preguntas al estilo de \"Buzzfeed\" que, a lo largo de la lección, recrean: ¿Cuál es tu lugar ideal de vacaciones? Los alumnos comienzan importando el modelo desde App Lab, luego añaden una pantalla que falta en el modo de diseño, después añaden declaraciones \"if\" para cambiar las pantallas y, finalmente, vinculan todas las pantallas en función del resultado de la predicción. A continuación, pueden elegir otro cuestionario del estilo de \"Buzzfeed\" para utilizarlo como modelo y diseñar una aplicación, utilizando las habilidades que han aprendido en esta lección."
        },
        "csd7-2022/Model Cards": {
          "name": "Tarjetas Modelo",
          "overview": "En esta lección, los alumnos investigan un modelo en busca de sesgos y se les presenta una Tarjeta de Modelo, que es una forma de representar información importante sobre un modelo entrenado que podría ayudar a descubrir los sesgos. La lección comienza con la investigación por parte de los alumnos de una aplicación de Prioridad Médica, que ayuda a un hospital a decidir cuándo ver a los pacientes en función de sus síntomas. Los alumnos son guiados a través de una actividad para ayudarles a darse cuenta de que la aplicación está sesgada sobre la base de información personal como la edad, la raza y el género. Los alumnos examinan cómo podría ocurrir esto basándose en los datos iniciales utilizados para entrenar el modelo, y luego exploran cómo una tarjeta modelo es una herramienta que puede ayudar a descubrir el posible sesgo. Exploran varios ejemplos de tarjetas modelo, haciendo recomendaciones sobre si el modelo podría estar sesgado o no en base a los datos.\\\\r\n\\\\r\n**Pregunta del día:** ¿Cómo aparece el sesgo humano en el aprendizaje automático?",
          "student_overview": "Ayuda a decidir qué modelo debe utilizar un hospital para su sistema de priorización de urgencias y a determinar qué modelos incluyen sesgos involuntarios. También aprenderás cómo las Tarjetas Modelo pueden ayudar a evaluar y analizar los modelos de aprendizaje automático."
        },
        "csd7-2022/Saving Models in AI Lab": {
          "name": "Guardar Modelos en el Laboratorio de Inteligencia Artificial",
          "overview": "Los alumnos completan todo el proceso de entrenamiento y guardado de un modelo y luego lo importan al Laboratorio de Aplicaciones. Por primera vez, los estudiantes son capaces de elegir la etiqueta que les gustaría predecir y dedicar tiempo a decidir las características que utilizarán para ayudar a predecir la etiqueta elegida. Los estudiantes también crean una tarjeta modelo para sus patrones con el fin de guardarlos e importarlos al Laboratorio de Aplicaciones\n\n**Pregunta del día:** ¿Cómo puedo utilizar las Tarjetas Modelo para documentar mis decisiones al entrenar un modelo de aprendizaje automático?",
          "student_overview": "Ayuda a entrenar varios modelos para facilitar a un zoológico la creación de aplicaciones educativas para sus clientes. Crearás Tarjetas Modelo para cada uno de tus modelos y luego importarás uno de ellos al Laboratorio de Aplicaciones para crear una aplicación."
        },
        "csd7-2022/Model Cards in App Lab": {
          "name": "Tarjetas Modelo en el Laboratorio de Aplicaciones",
          "overview": "En esta lección, los alumnos practican la importación de sus modelos en el Laboratorio de Aplicaciones, esta vez incluyendo modelos que tienen datos numéricos y utilizando tarjetas modelo para ayudar a mejorar la experiencia del usuario al rellenar su formulario. A continuación, aprenderán a ver la tarjeta modelo dentro del Laboratorio de Aplicaciones y a utilizarla para añadir más elementos descriptivos a una aplicación. A continuación, se centran en mejorar la experiencia del usuario añadiendo texto informativo para ayudar a guiar a los usuarios a la hora de rellenar el formulario y añadiendo un estilo a su aplicación para mejorar la experiencia del usuario.\n\n**Pregunta del día:** ¿Cómo puedo utilizar una Tarjeta Modelo para mejorar mi aplicación?",
          "student_overview": "Aprende a utilizar las Tarjetas Modelo para mejorar una aplicación de aprendizaje automático y a actualizar la pantalla final en función de la predicción del modelo."
        },
        "csd7-2022/Numerical Models": {
          "name": "Modelos Numéricos",
          "overview": "En esta lección, los alumnos asumen el papel de un alumno de secundaria moderno que sobrevive a una pandemia sin precedentes. Un día se les otorga la responsabilidad de entregar la fórmula de una vacuna a un laboratorio en algún lugar de su localidad. Para ello, deberán utilizar un asistente personal inteligente (API) llamado \"Tom\" para predecir la ruta más segura hacia el laboratorio, lo que requerirá entrenar a Tom con un algoritmo de regresión.\\\\r\n\\\\r\n**Pregunta del día:** ¿Cómo aprenden los ordenadores a hacer predicciones con datos numéricos?",
          "student_overview": "En esta lección, los alumnos asumen el papel de un alumno de secundaria moderno que sobrevive a una pandemia sin precedentes. Un día se les otorga la responsabilidad de entregar la fórmula de una vacuna a un laboratorio en algún lugar de su localidad. Para ello, deberán utilizar un asistente personal inteligente (API) llamado \"Tom\" para predecir la ruta más segura hacia el laboratorio, lo que requerirá entrenar a Tom con un algoritmo de regresión."
        },
        "csd7-2022/Numerical Data in AI Lab": {
          "name": "Datos Numéricos en el Laboratorio de Inteligencia Artificial",
          "overview": "Hasta ahora, los alumnos sólo han creado modelos de aprendizaje automático a partir de datos categóricos; en esta lección, se introduce a los alumnos en los datos numéricos que representan un rango de valores. Se presenta a los alumnos un escenario en el que cada característica y etiqueta se representa con datos numéricos, y aprenden a utilizar las nuevas herramientas de visualización de datos de AI Lab para ayudar a encontrar patrones.\n\n**Pregunta del día:** ¿Cómo podemos utilizar AI Lab para predecir datos numéricos?",
          "student_overview": "Hasta ahora, los alumnos sólo han creado modelos de aprendizaje automático a partir de datos categóricos; en esta lección, se introduce a los alumnos en los datos numéricos que representan un rango de valores. Se presenta a los alumnos un escenario en el que cada característica y etiqueta se representa con datos numéricos, y aprenden a utilizar las nuevas herramientas de visualización de datos de AI Lab para ayudar a encontrar patrones."
        },
        "csd7-2022/Customizing Apps": {
          "name": "Personalización de las Aplicaciones",
          "overview": "Los alumnos exploran cómo personalizar el código de su aplicación para realizar cambios adicionales en el diseño de la misma. Los alumnos comienzan analizando una aplicación de una sola pantalla que está abarrotada de demasiadas funciones. Practican la ampliación de la aplicación a dos pantallas y la actualización del código para utilizar los nuevos elementos del modo de diseño. Después de esto, los alumnos ayudan a crear una aplicación de Alerta de Conductor que requiere cambios en el código utilizando los nuevos elementos del modo de diseño. Utilizando los conocimientos de esta lección, los alumnos podrán crear aplicaciones multipantalla en las que las preguntas puedan aparecer en varias pantallas en lugar de en una sola.\n\n**Pregunta del día:** ¿Cómo puedo personalizar el código de una aplicación de aprendizaje automático?",
          "student_overview": "Los alumnos exploran cómo personalizar el código de su aplicación para realizar cambios adicionales en el diseño de la misma. Los alumnos comienzan analizando una aplicación de una sola pantalla que está abarrotada de demasiadas funciones. Practican la ampliación de la aplicación a dos pantallas y la actualización del código para utilizar los nuevos elementos del modo de diseño. Después de esto, los alumnos ayudan a crear una aplicación de Alerta de Conductor que requiere cambios en el código utilizando los nuevos elementos del modo de diseño. Utilizando los conocimientos de esta lección, los alumnos podrán crear aplicaciones multipantalla en las que las preguntas puedan aparecer en varias pantallas en lugar de en una sola."
        },
        "csd7-2022/AI Code of Ethics": {
          "name": "Código Ético de la Inteligencia Artificial",
          "overview": "En pequeños grupos, los alumnos realizan una investigación a partir de artículos y vídeos que exponen los problemas éticos en un área de la Inteligencia Artificial (IA) de su elección. Después, cada grupo desarrolla al menos un principio orientado a la solución que aborda su área elegida. A continuación, estos principios se reúnen en un recurso (por ejemplo, una presentación de diapositivas, un documento o una página web) para los creadores de Inteligencia Artificial y los legisladores de todo el mundo.",
          "student_overview": "En pequeños grupos, los alumnos realizan una investigación a partir de artículos y vídeos que exponen los problemas éticos en un área de la Inteligencia Artificial (IA) de su elección. Después, cada grupo desarrolla al menos un principio orientado a la solución que aborda su área elegida. A continuación, estos principios se reúnen en un recurso (por ejemplo, una presentación de diapositivas, un documento o una página web) para los creadores de Inteligencia Artificial y los legisladores de todo el mundo."
        },
        "csd7-2022/Mini-Project: Make a Machine Learning App": {
          "preparation": "-   Repasa los niveles de Code Studio antes de la clase\n-   Imprime copias de la guía de actividades para cada alumno\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-make-a-machine-learning-app-ai-and-machine-learning-lesson-15/36219) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores."
        },
        "csd7-2022/Issue Statements": {
          "name": "Planificación de un Proyecto de Aprendizaje Automático"
        },
        "csd7-2022/Survey Planning": {
          "name": "Diseño de recolección de datos"
        },
        "csd7-2022/Survey Data in AI Lab": {
          "name": "Entrenar el Modelo a partir de Datos Buenos"
        },
        "csd7-2022/Troubleshooting Models": {
          "name": "Entrenar el Modelo a partir de Datos Erróneos"
        },
        "csd7-2022/Creating an App": {
          "name": "Crear Aplicación"
        },
        "csd7-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd6-2021/Innovations in Computing": {
          "name": "Innovaciones en computación",
          "overview": "Para iniciar la unidad final de este curso, los estudiantes harán algunas investigaciones sobre innovaciones interesantes en computación. Esta lección mostrará a los estudiantes una variedad más amplia de formatos informáticos (como una computadora) y campos que se ven afectados por la computación. Más adelante, examinarán los dispositivos que encontraron en esta lección a medida que desarrollan sus propios dispositivos informáticos físicos.",
          "preparation": "-   Revisa las páginas de recursos enlazadas en Code Studio\n-   Poner en pantalla [El Internet de las cosas - Vídeo](https://www.youtube.com/watch?v=xQGsubJNbQw&feature=youtu.be) o [La Informática lo está Cambiando Todo - Vídeo](https://www.youtube.com/watch?v=QvyTEx1wyOY)\t\n-   Imprime una copia de la guía de actividades para cada alumno",
          "purpose": "Esta lección sentará las bases para que los alumnos comprendan cómo su Placa de Circuito podría utilizarse para modelar un dispositivo informático innovador. El objetivo es que piensen en cómo los ordenadores pueden integrarse en casi cualquier cosa, y que empiecen a considerar las posibles repercusiones de tales aplicaciones.",
          "student_overview": "En esta lección, explorarás una amplia variedad de plataformas informáticas nuevas e innovadoras mientras amplías tu comprensión de lo que puede ser un ordenador."
        },
        "csd6-2021/Designing Screens with Code": {
          "name": "Diseñar pantallas a través del código",
          "overview": "En la Unidad 4, los alumnos aprendieron un enfoque muy sencillo para el desarrollo de aplicaciones en el Laboratorio de Aplicaciones que requería una pantalla independiente para la mayoría de las interacciones. Para ampliar los tipos de aplicaciones que los alumnos pueden crear y animarles a pensar en nuevas formas de interacción con las aplicaciones, introducimos el bloque [\\`setProperty()\\`(#fff176)](/docs/applab/setProperty/). Este comando puede utilizarse para establecer el contenido y las propiedades de varios elementos de la interfaz de usuario, lo que permite a los alumnos escribir programas que actualizan la información en una sola pantalla, en lugar de crear manualmente pantallas duplicadas. En esta lección los estudiantes construyen aplicaciones sencillas que sólo requieren una única pantalla, cuyo contenido se cambia utilizando [\\`setProperty()\\`(#fff176)](/docs/applab/setProperty/).",
          "purpose": "Esta lección permite a los estudiantes volver a programar con el Laboratorio de Aplicaciones antes de introducir el Circuit Playground de Adafruit, pero también introduce el útil concepto de un _setter_. En la Unidad 4, los estudiantes utilizaron principalmente [\\`setScreen()\\`(#fff176)](/docs/applab/setScreen/) para que sus aplicaciones respondieran a la interacción del usuario. Aunque se trata de una técnica sencilla y útil, puede dar lugar a una gran duplicación de contenido en varias pantallas. Mediante el uso de _setters_, y posteriormente de _getters_, los alumnos pueden escribir aplicaciones que realmente cambien el contenido en una sola pantalla, mostrando y ocultando o cambiando el contenido o el aspecto de varios elementos.\n\nUna vez que los alumnos hayan aprendido a utilizar \"getters\" y \"setters\" con los elementos de la interfaz de usuario, anímales a pensar de forma crítica sobre cuándo utilizar una pantalla independiente en la fase de diseño de una aplicación. Si las pantallas son más parecidas que diferentes, puede ser más eficaz cambiar los elementos en la pantalla como reacción a la entrada en lugar de duplicar el contenido en varias pantallas. Aunque los alumnos sólo conocen [\\`setProperty()\\`(#fff176)](/docs/applab/setProperty/) en este momento, más adelante aprenderán el comando asociado [\\`getProperty()\\`(#fff176)](/docs/applab/getProperty/).",
          "student_overview": "En esta lección, empezarás a crear aplicaciones que permitan mucha interacción y funcionalidad con el usuario... ¡aunque sean de una sola pantalla!"
        },
        "csd6-2021/The Circuit Playground": {
          "name": "The Circuit Playground",
          "overview": "En esta lección, los estudiantes tendrán su primera oportunidad de escribir programas que utilicen el Circuit Playground. Después de realizar una inspección visual del tablero y crear hipótesis sobre posibles funcionalidades, los estudiantes trabajan en línea, donde aprenderán a escribir aplicaciones que controlan un LED. Al combinar las pantallas del Laboratorio de aplicaciones con el Circuit Playground, pueden empezar a integrar elementos del tablero como un dispositivo de salida mientras utilizan el Laboratorio de aplicaciones para la entrada del usuario.",
          "preparation": "-   Asegúrate de que los ordenadores de los alumnos tienen los controladores y el software necesarios para conectarse al Circuit Playground ([detalles aquí](//studio.code.org/maker/setup))\n-   Prepara una placa y un cable USB para cada par de estudiantes",
          "purpose": "Como primera introducción al uso del Circuit Playground, esta lección deja tiempo para que los estudiantes se familiaricen con la conexión del hardware. Aprovechando los conocimientos de los alumnos sobre el manejo de eventos en el Laboratorio de Aplicaciones, podemos poner en marcha rápidamente una aplicación que muestre el potencial de la computación física con poco más que un simple LED rojo.",
          "student_overview": "En esta lección, conocerás el Circuit Playground, la placa de circuitos que se utilizará durante el resto de esta unidad. "
        },
        "csd6-2021/Input Unplugged": {
          "name": "Entrada sin conexión",
          "overview": "Como preparación para profundizar en la programación con el Laboratorio de aplicaciones, los estudiantes explorarán de qué manera los distintos programas escritos en el Laboratorio de juegos y el Laboratorio de aplicaciones manejan las entradas de los usuarios. Después de comparar y contrastar los enfoques que vieron en los ejemplos de aplicaciones, los estudiantes formarán grupos para representar dos modelos diferentes de entrada (condicionales en un bucle infinito y eventos asincrónicos) y entender mejor cómo funcionan.",
          "preparation": "-   Prepara la proyección de programas de ejemplo para toda la clase.\n-   Una media baraja de cartas para cada grupo de tres alumnos o [deck-of-cards.js.org](https://deck-of-cards.js.org).\n-   Imprime una copia de la guía de actividades para cada grupo de cuatro alumnos.",
          "purpose": "Esta lección pretende ayudar a los alumnos a pasar del modelo de entrada condicional y de bucle de dibujo utilizado en el Laboratorio de Juegos al modelo basado en eventos utilizado en el Laboratorio de Aplicaciones. Aunque los estudiantes han experimentado y aprendido un poco sobre la programación basada en eventos en la Unidad 4, una comprensión más profunda de cómo funcionan los eventos ayudará cuando se trata de responder a los eventos en el Circuit Playground más adelante en esta unidad.",
          "student_overview": "En esta lección, experimentarás dos formas diferentes en las que una aplicación puede recoger información de un usuario, mientras aprendes más sobre el modelo de programación dirigido por eventos utilizado en el Laboratorio de Aplicaciones."
        },
        "csd6-2021/Board Events": {
          "name": "Eventos de la Placa",
          "overview": "Esta lección hace que los alumnos pasen de considerar el Circuit Playground estrictamente como un dispositivo de salida a utilizarlo como una herramienta tanto de entrada como de salida. Comenzando con los botones y el interruptor de hardware, los estudiantes aprenden a utilizar [\\`onBoardEvent()\\`(#f78183)](/docs/applab/onBoardEvent/), de forma análoga a [\\`onEvent()\\`(#fff176)](/docs/applab/onEvent/), con el fin de obtener la entrada de sus Circuit Playgrounds.",
          "purpose": "Esta lección marca la transición de usar la placa únicamente como dispositivo de salida a usarla tanto para entrada como para salida. El bloque [\\`onBoardEvent()\\`(#f78183)](/docs/applab/onBoardEvent/) funciona de forma muy parecida a [\\`onEvent()\\`(#fff176)](/docs/applab/onEvent/), pero la diferencia más significativa es que el primer parámetro es un objeto del tablero (una variable) mientras que [\\`onEvent()\\`(#fff176)](/docs/applab/onEvent/) obtiene la ID de un elemento de la interfaz de usuario (una cadena).",
          "student_overview": "En esta lección, aprenderás a utilizar los botones de hardware del Circuit Playground y el interruptor que dará entrada al Circuit Playground."
        },
        "csd6-2021/Getting Properties": {
          "name": "Obtener propiedades",
          "overview": "Esta lección presenta a los alumnos el bloque [\\`getProperty\\`(#fff176)](/docs/applab/getProperty/), que les permite acceder a las propiedades de diferentes elementos con código.  Los alumnos practican primero el uso del bloque para determinar lo que el usuario ha introducido en varios elementos de la interfaz de usuario. Más tarde, los estudiantes utilizan [\\`getProperty\\`(#fff176)](/docs/applab/getProperty/) y [\\`setProperty\\`(#fff176)](/docs/applab/setProperty/) junto con el patrón de contador para hacer que los elementos se muevan por la pantalla.  También se introduce un nuevo elemento de pantalla, el control deslizante, y un nuevo activador de eventos, `onChange`.",
          "purpose": "Hasta ahora, los estudiantes sólo han utilizado el evento de pulsación de botón para recopilar información de la pantalla del Laboratorio de Aplicaciones.  El uso de [\\`getProperty\\`(#fff176)](/docs/applab/getProperty/) abre a los estudiantes la posibilidad de recopilar una amplia gama de información del usuario.  La obtención de propiedades también permite a los estudiantes crear programas que no dependen de conocer las propiedades de un elemento cuando se escribe el código, por lo que sus programas pueden ser más dinámicos e interactivos.  Estas características serán importantes a medida que los estudiantes avanzan hacia la creación de un juego interactivo en las próximas lecciones. ",
          "student_overview": "En esta lección, aprenderás a acceder a las propiedades de diferentes elementos con código. "
        },
        "csd6-2021/Analog Input": {
          "name": "Entrada analógica",
          "overview": "En esta lección, los estudiantes exploran cómo se pueden utilizar los tres sensores analógicos (sonido, luz y temperatura) para escribir programas que respondan a los cambios en el ambiente. El uso de estos sensores marca una transición en términos de cómo los usuarios interactúan con un programa. Al usar sensores como entrada, el usuario de una aplicación no tiene que interactuar directamente con ella, o puede interactuar sin darse cuenta de que lo está haciendo.",
          "preparation": "-   Poner en marcha el [r analog-digital-video/csd/2021]\n-   Si tu habitación no es muy luminosa, es útil tener a mano algunas linternas u otras fuentes de luz para probar el sensor de luz",
          "purpose": "Esta lección se basa en la anterior introduciendo los sensores analógicos como una nueva forma de entrada. Todos estos sensores realizan una conversión analógico-digital, permitiendo que los programas perciban cosas representadas por un número de 10 bits (0-1023).",
          "student_overview": "En esta lección, podrás explorar las entradas analógicas en el Circuit Playground, escribiendo programas que respondan al entorno a través de sensores."
        },
        "csd6-2021/The Program Design Process": {
          "name": "El proceso de diseño de programas",
          "overview": "Esta lección presenta a los estudiantes el proceso que usarán para diseñar programas propios a lo largo de esta unidad. Este proceso se centra en una guía de proyecto que pide a los estudiantes que esbocen sus pantallas, identifiquen elementos del Circuit Playground a utilizar, definan variables y describan eventos antes de que empiecen a programar. Este proceso es similar al proceso de diseño de juegos que utilizamos en la Unidad 3. En esta lección, los estudiantes comienzan por un \"juego de la cuerda\" donde se oculta el código. Debaten sobre cómo tendrían que ser los componentes del tablero, los eventos y las variables para crear el programa. Luego, se les da una guía de proyecto terminado que muestra una forma de implementar el proyecto. Los estudiantes realizan este proceso a través de una serie de niveles. Al final de la lección, tienen la oportunidad de hacer mejoras al programa para personalizarlo.",
          "preparation": "-   Entrega a los estudiantes copias de la guía del proyecto",
          "purpose": "Esta lección permite a los alumnos practicar el desarrollo de un programa a mayor escala con el fin de prepararlos para hacerlo de forma independiente. Mientras que las lecciones anteriores se han centrado en la construcción de habilidades en torno al uso de elementos específicos del Circuit Playground y conceptos de programación relacionados, esta lección se centra en la combinación de todo lo aprendido hasta ahora en un programa más complejo. La lección fomenta en gran medida el proceso de desarrollo de software proporcionando a los estudiantes una guía de proyecto completa, proporcionando el código de inicio, y guiando a los alumnos a través de su implementación. En las lecciones siguientes los estudiantes tendrán que completar una mayor parte de esta guía de forma independiente, y para el proyecto final seguirán este proceso en gran medida de forma independiente.",
          "student_overview": "En esta lección, conocerás el proceso que utilizarás para diseñar tus propios programas a lo largo de esta unidad. "
        },
        "csd6-2021/Project: Make a Game": {
          "name": "Proyecto - Crear un Juego",
          "overview": "Para este proyecto, los estudiantes diseñan y crean un juego que aprovecha las nuevas entradas y salidas que tienen a su disposición. Este proyecto se ha dejado intencionadamente muy abierto para que los estudiantes puedan pensar en términos generales sobre la utilidad de los resultados físicos en una aplicación, a la vez que se les da la oportunidad de revisar el proceso de desarrollo del programa y probar las nuevas funciones disponibles en el Circuit Playground.",
          "preparation": "-   Imprime una copia de la guía del proyecto para cada grupo de alumnos\n-   Imprime una copia de la rúbrica para cada alumno",
          "purpose": "Esta evaluación de fin de capítulo es un buen lugar para que los estudiantes reúnan todas las piezas que han aprendido (controladores de eventos, uso de la placa como salida, etc.) en un solo lugar. Este proyecto se deja a propósito muy abierto para permitir a los alumnos pensar ampliamente sobre cómo la salida física podría ser útil en una aplicación, esta es una gran oportunidad para animar a los estudiantes a revisar los programas que han escrito anteriormente en esta unidad o en la Unidad 4 y que podrían beneficiarse del uso de la placa para la salida de información.",
          "student_overview": "En esta lección, utilizarás lo que has aprendido en el capítulo uno y desarrollarás una aplicación de tu propio diseño que utilice la pizarra para emitir información."
        },
        "csd6-2021/Arrays and Color LEDs": {
          "name": "Arreglos y LED de colores",
          "overview": "Un arreglo es una colección ordenada de elementos, generalmente del mismo tipo. En esta lección, los estudiantes aprenden maneras de acceder a un valor específico o aleatorio de una lista mediante su índice. Luego, aprenden a acceder al arreglo colorLED que controla el comportamiento de los LED de colores en Circuit Playground. Los estudiantes controlarán el color y la intensidad de cada LED, y luego usarán lo que han aprendido para programar patrones luminosos y crear un espectáculo de luces en el Circuit Playground.",
          "purpose": "Los arrays son una estructura de datos habitual en informática, que se utiliza para facilitar el almacenamiento y el acceso a la información. La lección prepara a los estudiantes para acceder a los elementos dentro de un array, pero aún no cubre la creación y modificación de arrays, que se abordará en la siguiente lección. También se presenta a los alumnos el anillo de LEDs de color, que se expone como un array llamado [\\`colorLeds\\`(#f78183)](/docs/applab/colorLeds/). Los estudiantes aprenden cómo acceder y controlar cada LED en el array individualmente, preparándolos para acceder a múltiples LEDs a través de la iteración más adelante en el capítulo.",
          "student_overview": "En esta lección, aprenderás a acceder a la matriz colorLEDs que controla el comportamiento de los LEDs de color en el Circuit Playground. "
        },
        "csd6-2021/Making Music": {
          "name": "Crear música",
          "overview": "En esta lección los alumnos utilizarán el zumbador en toda su extensión produciendo sonidos, notas y canciones con el zumbador. Los alumnos comienzan con un breve repaso de los parámetros de frecuencia y duración del zumbador, para pasar después al concepto de notas.  Las notas permiten a los alumnos limitarse a las frecuencias que se utilizan en la \"música country\" y proporcionan una capa de abstracción que les ayuda a comprender qué frecuencias pueden sonar bien juntas.  Una vez que los alumnos son capaces de tocar notas en el zumbador, utilizan matrices (arrays) para mantener y reproducir secuencias de notas, formando canciones sencillas.",
          "purpose": "Esta lección permite a los alumnos ser más creativos con el zumbador introduciendo el concepto de \"nota\" y utilizando arrays para contener colecciones secuenciales de notas.  El uso de notas en lugar de frecuencias proporciona una capa de abstracción que facilita a los alumnos la identificación de sonidos que pueden utilizarse para hacer música.  Los arrays ofrecen una forma de agrupar los sonidos en secuencia, para que puedan ser reproducidos como música.  El uso del bloque `playNotes` para iterar sobre un array de notas proporciona una base conceptual para trabajar con los bucles `for` en la siguiente lección.",
          "student_overview": "En esta lección, utilizarás al máximo la función de zumbador del Circuit Playground produciendo sonidos, notas y canciones. "
        },
        "csd6-2021/Arrays and For Loops": {
          "name": "Arreglos y bucles 'desde'",
          "overview": "Utilizar un _bucle desde_ para repetir todos los elementos de un arreglo es un recurso realmente útil en la mayoría de los lenguajes de programación. En esta lección, los estudiantes aprenden los aspectos básicos de cómo se puede usar un _bucle desde_ para repetir código, y luego lo combinan con lo que han aprendido sobre arreglos para escribir programas que procesen todos los elementos de un arreglo. Los estudiantes utilizan bucles 'desde' para pasar por un elemento de la lista a la vez sin tener que escribir código para cada elemento. Hacia el final de la lección, los estudiantes aplicarán esto con la lista `colorLed` en el tablero para crear una aplicación que cambie todos los LED cada vez que se hace clic en un botón.",
          "purpose": "A medida que los alumnos empiezan a utilizar arrays con más frecuencia, surge un patrón común en el que se quiere ejecutar algún código en cada elemento de un array. Aunque los _bucles for_ son una estructura generalmente útil para repetir código, son particularmente útiles para iterar sobre un array. En esta lección nos basamos en el entendimiento de los arrays que los estudiantes han desarrollado en las dos últimas lecciones introduciendo el bucle _for_, que combina una variable, el patrón de contador y una condicional, todo en una sola construcción",
          "student_overview": "En esta lección, aprenderás a combinar listas y bucles \"for\" para escribir código que afecte a cada elemento de una lista, independientemente de su longitud. "
        },
        "csd6-2021/Accelerometer": {
          "name": "Acelerómetro",
          "overview": "En esta lección, los estudiantes explorarán el acelerómetro y sus capacidades. Se familiarizarán con sus eventos y propiedades, y crearán varios programas que utilicen el acelerómetro, similares a los que se encuentran en aplicaciones del mundo real.",
          "purpose": "Esta lección ofrece a los alumnos la oportunidad de trabajar con el sensor del acelerómetro y explorar sus propiedades de orientación y los eventos de la placa específicos del acelerómetro. Los estudiantes verán el propósito y los usos de un acelerómetro en dispositivos y programas del mundo real y crearán sus propias versiones de algunas de estas aplicaciones. Para ello, los alumnos tendrán que recurrir a sus conocimientos anteriores sobre el patrón de contador para crear aplicaciones funcionales basadas en el acelerómetro. ",
          "student_overview": "En esta lección, explorarás el acelerómetro y sus posibilidades. "
        },
        "csd6-2021/Functions with Parameters": {
          "name": "Funciones con parámetros",
          "overview": "La lección comienza con una revisión rápida de los parámetros, en el contexto de los bloques del Laboratorio de aplicaciones que han visto recientemente los estudiantes. Luego, \nverán ejemplos de parámetros dentro de las funciones creadas por el usuario en el Laboratorio de aplicaciones, y crearán y llamarán funciones con parámetros por sí mismos, y las utilizarán para controlar varios elementos en una pantalla. Después, los estudiantes usarán los bucles 'desde' para repetir un arreglo y pasar cada elemento a una función. Por último, emplearán lo que han aprendido para crear un juego de capturar la estrella.",
          "purpose": "En las lecciones anteriores, los alumnos han utilizado las funciones para definir bloques de código que pueden utilizarse en varios lugares de un programa.  En esta lección, los alumnos aprenden a utilizar parámetros para generalizar el propósito de una función.  Los parámetros permiten que un programa especifique los detalles de cómo funciona una función cuando se llama, en lugar de cuando se define el programa.  Aunque los alumnos han visto funciones con parámetros anteriormente en la unidad, esta es la primera vez que se espera que definan y llamen a las suyas propias.  Los alumnos también aprenden a utilizar un bucle `for` para pasar de forma iterativa los elementos de una matriz como parámetros de una función, lo que les permite utilizar la misma función en varios elementos de la pantalla.",
          "student_overview": "En esta lección, crearás y llamarás a funciones con parámetros, utilizarás bucles `for` para recorrer un array y finalmente, utilizarás lo que has aprendido para crear un juego de atrapar estrellas."
        },
        "csd6-2021/Circuits and Physical Prototypes": {
          "name": "Circuitos y prototipos físicos",
          "overview": "A la hora de preparar el proyecto final de este capítulo, los estudiantes aprenderán cómo desarrollar un prototipo de un objeto físico que incluya un Circuit Playground. Mediante una guía de planificación de proyectos modelados y materiales baratos fáciles de conseguir, como cartulina y cinta adhesiva, los estudiantes aprenderán a conectar un par de circuitos simples y crear prototipos que puedan comunicar el diseño previsto de un producto.",
          "preparation": "-   Reúne los materiales para la creación de prototipos, como por ejemplo:\n    -   Material estructural (cartón, papel de construcción, etc.)\n    -   Material de conexión (cinta adhesiva, pegamento, cola caliente, etc.)\n    -   Herramientas de construcción (tijeras, grapadoras, etc.)\n    -   Otros materiales (vasos, clips, platos de papel, etc.)\n-   Prepara los materiales para el cableado del circuito, como por ejemplo:\n    -   Cables con pinzas de cocodrilo (incluidos en el kit para el aula del Circuit Playground)\n    -   LEDs (incluidos en el kit para el aula del Circuit Playground)\n    -   Otros materiales conductores (cables, clips, láminas, etc.)\n    -   (opcional) Botones o interruptores\n-   Imprime una copia de la guía del proyecto para cada grupo de 2-3 alumnos\n-   Prepara un modelo de botón para mostrar a la clase",
          "purpose": "El objetivo de esta lección es tanto demostrar a los alumnos cómo influye en el proceso de creación de prototipos el hecho de pensar en el diseño físico de un producto, como introducir un puñado de conocimientos prácticos que facilitarán la creación de sus proyectos finales.",
          "student_overview": "En esta lección, cablearás circuitos sencillos para crear un prototipo físico utilizando materiales de bajo coste y fáciles de encontrar."
        },
        "csd6-2021/Project: Prototype an Innovation": {
          "name": "Proyecto - Prototipo de una Innovación",
          "overview": "En este proyecto final del curso, los estudiantes se reúnen en grupos para desarrollar y probar un prototipo de un dispositivo informático innovador basado en el Circuit Playground. Mediante las entradas y salidas disponibles en el tablero, los grupos crearán programas que generan interacciones interesantes y únicas con los usuarios. ",
          "preparation": "-   Reunir materiales para la creación de prototipos físicos, por ejemplo:\n    -   Cartón\n    -   Tijeras\n    -   Cinta adhesiva\n    -   Pegamento\n    -   Papel de aluminio\n-   Imprime una copia de la guía del proyecto para cada pareja de estudiantes\n-   Imprime una copia de la hoja de revisión por pares para cada estudiante\n-   Imprime una copia de la rúbrica para cada estudiante",
          "purpose": "Esta lección es la culminación de la Unidad 6 y ofrece a los estudiantes la oportunidad de construir un proyecto propio del Maker Toolkit desde cero. Este proyecto es una oportunidad para mostrar las habilidades técnicas, pero también tendrán que demostrar la colaboración, la retroalimentación constructiva de los compañeros y la resolución de problemas iterativos, ya que se encuentran con obstáculos en el camino. Este proyecto debe ser dirigido por los alumnos siempre que sea posible y proporcionar una conclusión memorable y motivadora para la unidad final de Descubrimientos CS.",
          "student_overview": "En este proyecto final, te enfrentarás al reto de desarrollar y probar un prototipo para un dispositivo que interactúe con el mundo físico a través de varios tipos de entrada y salida y que permita interacciones de usuario interesantes y únicas. "
        },
        "csd6-2021/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd5-2021/Representation Matters": {
          "name": "La Representación Importa",
          "overview": "**Pregunta del día: ¿Cómo afectan los datos a las decisiones que tomamos cada día?**\n\nEn la primera lección de la unidad de datos, los alumnos obtienen una visión general de lo que son los datos y de cómo se utilizan para resolver problemas. Los alumnos comienzan con un breve debate para llegar a una comprensión común de los datos. A continuación, se dividen en grupos y utilizan un conjunto de datos para hacer una serie de recomendaciones de comidas para personas con diversos criterios. Cada grupo tiene las opciones de comida representadas de una forma diferente (imágenes, recetas, menú, nutrición) que da ventaja a una de las recomendaciones. Después, los grupos comparan sus respuestas y analizan cómo las diferentes representaciones de los datos de las comidas afectaron a la forma en que los estudiantes fueron capaces de resolver los diferentes problemas.",
          "preparation": "-   Imprima copias del recurso de Datos de Comida para que cada equipo puede obtener uno de las cuatro páginas\n-   Imprima una copia de la guía de actividades para cada equipo",
          "purpose": "Esta lección introduce unas ideas importantes que los estudiantes van a explorar en este capítulo. Ellos van a ver los mismos objetos pueden ser representados en una variedad de maneras. En capítulo 1, ellos van a aprender los diferentes sistemas de representación que computadores usan para representar información. En esta lección ellos también van a ver que la representación importa cuando usamos datos para formar decisiones. En capitulo dos de esta unidad, estudiantes van a explorar más profundamente como las personas y los computadores pueden utilizar los datos para formar decisiones. ",
          "student_overview": "**Pregunta del día: ¿Cómo afectan los datos a las decisiones que tomamos cada día?**\n\nEn esta lección, estudiarás qué son los datos y cómo se utilizan para resolver problemas. "
        },
        "csd5-2021/Patterns and Representation": {
          "name": "Patrones y representación",
          "student_overview": "**Pregunta del día: ¿Cómo podemos crear un sistema para representar información?**\n\nEn esta lección, crearás un sistema para representar información trabajando con un grupo para crear un sistema que pueda representar cualquier letra del alfabeto utilizando sólo un montón de tarjetas. "
        },
        "csd5-2021/ASCII and Binary Representation": {
          "name": "ASCII y representación binaria",
          "student_overview": "**Pregunta del día: ¿Qué sistema utilizan los ordenadores para representar letras y palabras?**\n\nEn esta lección, aprenderás sobre el sistema binario y el sistema ASCII utilizado para representar texto. "
        },
        "csd5-2021/Representing Images": {
          "name": "Representar imágenes",
          "student_overview": "**Pregunta del día: ¿Qué sistema utilizan los ordenadores para representar imágenes?**\n\nEn esta lección, seguirás explorando cómo se pueden crear sistemas para representar la información utilizando el binario, ¡esta vez imágenes!"
        },
        "csd5-2021/Representing Numbers": {
          "name": "Representar números",
          "student_overview": "**Pregunta del día: ¿Qué sistema utilizan los ordenadores para representar los números?**\n\nEn esta lección, ¡aprenderás sobre el sistema numérico binario real!"
        },
        "csd5-2021/Combining Representations": {
          "name": "Combinar representaciones",
          "student_overview": "**Pregunta del día: ¿Cómo distinguen los ordenadores los códigos binarios de letras, números o imágenes?**\n\nEn esta lección, combinarás ASCII, binario e imágenes para explorar formas de codificar tipos de información más complejos. "
        },
        "csd5-2021/Keeping Data Secret": {
          "name": "Mantener los datos en secreto",
          "overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos del mal uso?**\n\nLos alumnos siguen explorando cómo se representan los datos en una tarjeta perforada y empiezan a considerar si algunos datos deben protegerse de la vista del público porque son demasiado personales o sensibles. Una vez que los alumnos comprenden las razones para proteger los datos, aprenden un sistema de cifrado binario que les permite cifrar y descifrar los datos de sus tarjetas perforadas y, finalmente, son capaces de enviarse mensajes secretos entre sí utilizando este método. La clase concluye con un debate sobre la importancia de proteger nuestra información y cómo la encriptación es una de las formas de lograrlo.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos del mal uso?**\n\nEn esta lección, explorarás los diferentes niveles de seguridad, verás la importancia de la privacidad y aprenderás a ¡encriptar la información!"
        },
        "csd5-2021/Project - Create a Representation": {
          "name": "Crear una Representación",
          "overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección los alumnos diseñan una estructura para representar su día perfecto utilizando los sistemas de representación binarios que han aprendido en este capítulo. En primer lugar, los alumnos escribirán una breve descripción de su día perfecto y, a continuación, la revisarán con un compañero para identificar las piezas clave de información que creen que podría capturar un ordenador. Como clase, los alumnos decidirán cómo se interpretará una tarjeta perforada de bytes de información para representar esas piezas de información. A continuación, los alumnos utilizarán los formatos ASCII, de números binarios y de imágenes que han aprendido para representar sus días perfectos. A continuación, los alumnos intercambian tarjetas perforadas e intentan descifrar cómo es el día perfecto del otro alumno. La lección termina con una reflexión.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección, explorarás cómo utilizar los formatos ASCII, binario y de imagen para representar ¡tu día perfecto!"
        },
        "csd5-2021/Problem Solving and Data": {
          "name": "La resolución de problemas y los datos",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar los datos para resolver los problemas de nuestra comunidad?**\n\nEn esta lección, decidirás qué es lo más necesario en una ciudad para gastar recursos, de manera que veas cómo utilizar los datos para resolver los problemas."
        },
        "csd5-2021/Structuring Data": {
          "name": "Estructurar datos",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo podemos facilitar a los ordenadores el tratamiento de los datos?\n\nEn esta lección, aprenderás a presentar los datos de diferentes maneras que pueden ayudar a la gente a entenderlos mejor, así como qué partes del proceso puede hacer un ordenador y qué partes necesitan una persona. "
        },
        "csd5-2021/Interpreting Data": {
          "name": "Interpretar datos",
          "overview": "**Pregunta del día: ¿Cómo pueden los patrones de datos ayudarnos a tomar decisiones?**\n\nLos alumnos comienzan la lección observando una encuesta sobre preferencias de pasteles que permite a los encuestados especificar tanto un sabor de pastel como de glaseado. Debaten cómo el conocimiento de la relación entre las preferencias de la tarta y el glaseado les ayuda a decidir mejor qué combinación recomendar. A continuación, se les presenta la tabulación cruzada, que permite elaborar un gráfico con las relaciones entre las distintas preferencias. Utilizan esta técnica para encontrar relaciones en una encuesta de preferencias, y luego hacen una lluvia de ideas sobre los diferentes tipos de problemas que este proceso podría ayudar a resolver.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los patrones de datos ayudarnos a tomar decisiones?**\n\nEn esta lección, aprenderás sobre la tabulación cruzada que te permitirá hacer un gráfico de las relaciones entre varios datos. "
        },
        "csd5-2021/Making Decisions with Data": {
          "name": "Tomar decisiones con datos",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los patrones en los datos ayudar a tomar una decisión?**\n\nEn esta lección, tendrás la oportunidad de practicar el proceso de resolución de problemas de datos que aprendiste en la lección anterior. "
        },
        "csd5-2021/Automating Data Decisions": {
          "name": "Automatizar las decisiones basadas en datos",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los ordenadores ayudarnos a tomar decisiones sobre los datos?**\n\nEn esta lección, examinarás cómo podría utilizarse un ordenador para completar el paso de toma de decisiones del proceso de resolución de problemas con datos."
        },
        "csd5-2021/Problem Solving with Big Data": {
          "name": "La resolución de problemas con Big Data"
        },
        "csd5-2021/Data and Machine Learning": {
          "name": "Datos y Aprendizaje Automático",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo pueden \"aprender\" las máquinas?\n\nEn esta lección, podrás trabajar con la Inteligencia Artificial y adquirir conocimientos sobre el Aprendizaje Automático. "
        },
        "csd5-2021/Project - Make a Recommendation": {
          "name": "Proyecto - Hacer una Recomendación",
          "overview": "**Pregunta del día: ¿Cómo puedo utilizar los datos para hacer mis propias recomendaciones?**\n\nPara concluir esta unidad, los alumnos diseñan un motor de recomendaciones basado en los datos que recogen y analizan de sus compañeros. Después de ver un ejemplo de aplicación de recomendación, los estudiantes siguen una guía de proyecto para completar esta actividad de varios días. En los primeros pasos, los estudiantes deciden qué elección quieren ayudar a hacer al usuario, qué datos necesitan para dar la recomendación, crean una encuesta y recogen información sobre las elecciones de sus compañeros. A continuación, interpretan los datos y utilizan lo que han aprendido para crear el algoritmo de recomendación. Por último, utilizan sus algoritmos para hacer recomendaciones a algunos compañeros de clase. Los estudiantes realizan una revisión por parte de sus compañeros y hacen las actualizaciones necesarias en sus proyectos antes de preparar una presentación a la clase.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo utilizar los datos para hacer mis propias recomendaciones?**\n\nEn esta lección, diseñarás un motor de recomendación basado en los datos que recopiles y analices de tus compañeros. "
        },
        "csd5-2021/CS Discoveries Post-Course Survey": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd3-2021/Programming for Entertainment": {
          "name": "Programación para el Entretenimiento",
          "overview": "**Pregunta del Día: ¿Cómo se utiliza la informática en el entretenimiento?**\n\nSe pide a los alumnos que tengan en cuenta los \"problemas\" del aburrimiento y la expresión personal, y que reflexionen sobre cómo abordan esos problemas en sus propias vidas. A partir de ahí, los alumnos explorarán cómo la informática en general, y la programación en particular, desempeña un papel en una forma específica de entretenimiento o como vehículo de expresión personal.",
          "preparation": "-   Revisa los recursos de investigación enlazados en Code Studio\n-   Imprime una copia de la guía de actividad para cada grupo de tres estudiantes",
          "purpose": "Esta lección está pensada para iniciar esta unidad de programación de una manera que atraiga a estudiantes de todos los orígenes e intereses. Aunque el punto final de esta unidad pide a los alumnos que desarrollen un juego, hay que evitar empezar con un fuerte énfasis en los _videojuegos_. En su lugar, intentamos ampliar la perspectiva de los estudiantes acerca de cómo la programación es relevante para una forma de entretenimiento o de expresión personal que sea atractiva. Esto proporcionará un ancla para que los estudiantes vuelvan a lo largo de la unidad mientras consideran las aplicaciones potenciales de los diversos conocimientos de programación que aprenden.",
          "student_overview": "estudiante\n**Pregunta del Día: ¿Cómo se utiliza la informática en el entretenimiento?**\n\nEn esta lección, explorarás cómo la Informática, y en concreto la programación, desempeña un papel en el entretenimiento o como vehículo de expresión personal. "
        },
        "csd3-2021/Plotting Shapes": {
          "name": "Trazar formas",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos enseñar claramente cómo dibujar algo en una pantalla?\n\nLos estudiantes exploran los desafíos de explicar cómo dibujar con figuras y utilizan una herramienta que presenta cómo se aborda este problema en el Laboratorio de Juegos. La actividad de calentamiento demuestra rápidamente los retos de comunicar la posición sin un punto de referencia compartido. En la actividad principal, los alumnos exploran una herramienta del Laboratorio de Juegos que les permite colocar figuras de forma interactiva en la cuadrícula de 400 por 400 del Laboratorio de Juegos. A continuación, se turnan para instruir a un compañero sobre cómo dibujar una imagen oculta utilizando esta herramienta, dando cuenta de muchos desafíos que los alumnos encontrarán al programar en Laboratorio de Juegos. Los estudiantes pueden crear su propia imagen para difundirla antes de un debate.",
          "purpose": "El objetivo principal de esta lección es presentar a los alumnos el sistema de coordenadas que utilizarán en el Laboratorio de Juegos. Los estudiantes pueden tener poca experiencia con el uso de una cuadrícula de coordenadas o pueden tener problemas con el eje `y` \"invertido\" en el Laboratorio de Juegos. La herramienta de dibujo también obliga a los estudiantes a pensar en otras características del Laboratorio de Juegos que verán cuando empiecen a programar en la siguiente lección. Entre ellas, la necesidad de tener en cuenta el orden al dibujar, la necesidad de especificar el color y el hecho de que los círculos se colocan por su centro y los cuadrados por su esquina superior izquierda. Al final de esta actividad, los alumnos deberían estar preparados para transferir lo que han aprendido sobre la comunicación de la posición a la programación que harán en la próxima lección.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos comunicar claramente la manera de dibujar algo en una pantalla?**\n\nEn esta lección, explorarás los desafíos de comunicar instrucciones claras utilizando una herramienta del Laboratorio de Juegos para dibujar formas en la cuadrícula del Laboratorio de Juegos."
        },
        "csd3-2021/Drawing in Game Lab": {
          "name": "Dibujar en el Laboratorio de juegos",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos indicar a un ordenador la manera de dibujar figuras en la pantalla?\n\nLos alumnos se introducen en Laboratorio de Juegos, el entorno de programación de esta unidad, y comienzan a utilizarlo para colocar figuras en la pantalla. Aprenden los fundamentos de la secuenciación y la depuración, así como algunos comandos sencillos. Al final de la lección, los alumnos serán capaces de programar imágenes como las que hicieron con la herramienta de dibujo en la lección anterior.",
          "preparation": "-   Leer el Foro\n-   Prepara un proyector u otro medio para mostrar los vídeos si quieres verlos en clase",
          "purpose": "El objetivo principal de esta lección es dar a los alumnos la oportunidad de acostumbrarse al entorno de programación, así como a la secuenciación y depuración básicas que utilizarán a lo largo de la unidad. Los estudiantes comienzan con una introducción al entorno de desarrollo interactivo (IDE) del Laboratorio de Juegos, luego aprenden los tres comandos ([\\`rect\\`(#4dd0e1)](/docs/gamelab/rect/), [\\`ellipse\\`(#4dd0e1)](/docs/gamelab/ellipse/), y [\\`fill\\`(#4dd0e1)](/docs/gamelab/fill/)) que necesitarán para codificar los mismos tipos de imágenes que crearon en papel en la lección anterior.  Los niveles de desafío ofrecen a los alumnos que tienen más experiencia en programación la oportunidad de seguir explorando el Laboratorio de Juegos.",
          "student_overview": "\\*\\*Pregunta del Día: ¿Cómo le podemos indicar a un ordenador la manera de dibujar figuras en la pantalla?\n\nEn esta lección, empezarás a utilizar el Laboratorio de Juegos para posicionar figuras en la pantalla mientras trabajas con los conceptos de secuenciación y depuración. "
        },
        "csd3-2021/Shapes and Parameters": {
          "name": "Formas y parámetros",
          "overview": "**Pregunta del Día:  ¿Cómo podemos utilizar los parámetros para dar al ordenador instrucciones más específicas?**\n\nEn esta lección los alumnos continúan desarrollando su familiaridad con el Laboratorio de Juegos manipulando la anchura y la altura de las figuras que utilizan para dibujar. La lección comienza con un debate que relaciona la funcionalidad ampliada de los bloques (por ejemplo, figuras de diferentes tamaños) con la necesidad de más entradas de bloques, o \"parámetros\". Los alumnos aprenden a dibujar con versiones de [\\`ellipse()\\`(#4dd0e1)](/docs/gamelab/ellipse/) y [\\`rect()\\`(#4dd0e1)](/docs/gamelab/rect/) que incluyen parámetros de anchura y altura. También aprenden a utilizar el bloque [\\`background()\\`(#4dd0e1)](/docs/gamelab/background/).",
          "preparation": "-   Revisar la secuencia de niveles en Code Studio",
          "purpose": "Esta lección da a los estudiantes la oportunidad de ampliar ligeramente sus conocimientos de dibujo mientras continúan desarrollando sus habilidades de programación de propósito general. Tendrán que razonar sobre el plano de coordenadas X-Y, tener en cuenta el orden de su código y aumentar ligeramente la complejidad de sus programas.  Esta lección debe centrarse principalmente en el desarrollo de conocimientos.",
          "student_overview": "**Pregunta del Día:  ¿Cómo podemos utilizar los parámetros para dar al ordenador instrucciones más específicas?**\n\nEn esta lección, seguirás trabajando en el Laboratorio de Juegos y aumentando tu familiaridad con el dibujo de figuras en la pantalla mediante la manipulación de los \"parámetros\" de las figuras que estás utilizando para dibujar. "
        },
        "csd3-2021/Variables": {
          "name": "Variables",
          "overview": "En esta lección, los estudiantes aprenden a usar variables para etiquetar un número en su programa o guardar un valor generado de forma aleatoria. Los estudiantes comienzan la lección con una descripción muy básica del propósito de una variable. Luego, los estudiantes completan un avance de nivel que refuerza el modelo de una variable como una forma de etiquetar o nombrar un número. Los estudiantes usan variables para guardar un número aleatorio y ver que las variables realmente almacenan o guardan sus valores, lo que les permite usar el mismo número aleatorio varias veces en sus programas.",
          "preparation": "-   Revisa la secuencia de niveles en Code Studio",
          "purpose": "En esta lección los alumnos verán por primera vez las variables en el curso, y no se espera que entiendan completamente el funcionamiento de las variables para su finalización. Los estudiantes deben salir de esta lección sabiendo que las variables son una forma de etiquetar un valor en sus programas para que puedan ser reutilizados o referenciados más tarde. En la siguiente lección los alumnos se iniciarán en los números aleatorios, en los que verán un uso más potente de las variables.  \n\nEl uso de variables para manipular dibujos es una habilidad sorprendentemente desafiante que requiere una gran cantidad de previsión y planificación. Aunque los alumnos utilizarán o modificarán muchos programas en esta lección, no se espera que compongan programas que utilicen variables para modificar las características de un dibujo. En lecciones posteriores, los estudiantes ampliarán su entendimiento de las variables y las formas más avanzadas en que pueden ser utilizadas.",
          "student_overview": "\\*\\*Pregunta del día:  ¿Cómo podemos utilizar las variables para almacenar información en nuestros programas?\n\nEn esta lección, conocerás las variables, ¡un concepto importante en la programación que se utiliza para almacenar valores en tus programas!"
        },
        "csd3-2021/Random Numbers": {
          "name": "Números aleatorios",
          "overview": "**Pregunta del Día: ¿Cómo podemos hacer que nuestros programas se comporten de forma diferente cada vez que se ejecutan?**\n\nLos alumnos conocen el bloque [\\`randomNumber()\\`(#FFB74D)](/docs/gamelab/randomNumber/) y cómo puede utilizarse para crear nuevos comportamientos en sus programas. A continuación, aprenden a actualizar las variables durante un programa.  Combinando todos estos conocimientos, los alumnos dibujan imágenes aleatorias.",
          "preparation": "Revisa la secuencia de niveles en Code Studio",
          "purpose": "Esta lección introduce la aleatoriedad, que es importante tanto para hacer los programas más interesantes como para motivar el uso de las variables. A mitad de la actividad, los alumnos se exponen a una variable que se actualiza varias veces en el programa, ampliando su comprensión de cómo se pueden utilizar las variables.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos hacer que nuestros programas se comporten de forma diferente cada vez que se ejecutan?**\n\nEn esta lección, aprenderás a utilizar el bloque randomNumber() ¡para crear nuevos comportamientos en tus programas!"
        },
        "csd3-2021/Sprites": {
          "name": "Sprites",
          "overview": "**Pregunta del Día:  ¿Cómo podemos utilizar los sprites para ayudarnos a mantener mucha información en nuestros programas?**\n\nPara crear imágenes más interesantes y detalladas, se inicia a los alumnos en el objeto sprite. La lección comienza con un debate sobre la diversa información que los programas deben registrar, y luego se presentan los sprites como una forma de registrar esa información. A continuación, los alumnos aprenden a asignar a cada sprite una imagen, lo que aumentará en gran medida la complejidad de lo que pueden dibujar en la pantalla.",
          "preparation": "-   (Opcional) Imprime una copia de la guía de actividad para cada alumno",
          "purpose": "El seguimiento de muchas figuras y de las diferentes variables que controlan aspectos de esas figuras puede ser muy complejo. Habrá muchas variables con diferentes nombres de variables. En su lugar, los informáticos crearon algo llamado **objeto** que permite que un nombre de variable controle tanto la forma como todos sus aspectos. En el Laboratorio de Juegos utilizamos un tipo de objeto llamado **sprite**. Un sprite es sólo un rectángulo con **propiedades** para controlar su aspecto. Las propiedades son las variables que se adjuntan a un sprite. Se puede acceder a ellas a través de la **notación de puntos**. \n\nA través de la pestaña de animación, los alumnos pueden crear o importar imágenes para utilizarlas con sus sprites. Más adelante, estos sprites se convertirán en una herramienta útil para crear animaciones, ya que sus propiedades pueden cambiarse y actualizarse a lo largo de un programa.",
          "student_overview": "**Pregunta del día:  ¿Cómo podemos usar los sprites para ayudarnos a realizar un seguimiento de mucha información en nuestros programas?**\n\nHoy aprenderás sobre los sprites, que no sólo te darán una forma de realizar un seguimiento de varias piezas de información en tus programas, ¡sino que también te permitirán crear imágenes más interesantes y divertidas!"
        },
        "csd3-2021/Sprite Properties": {
          "name": "Propiedades de Sprite",
          "overview": "**Pregunta del Día: ¿Cómo podemos utilizar las propiedades de los sprites para cambiar su apariencia en la pantalla?**\n\nLos alumnos amplían sus conocimientos sobre los sprites interactuando con sus propiedades.  Los estudiantes comienzan con un repaso de lo que es un sprite, luego pasan al Laboratorio de Juegos para practicar más con los sprites, utilizando sus propiedades para cambiar su apariencia. A continuación, reflexionan sobre las conexiones entre las propiedades y las variables.",
          "purpose": "En la última lección, cuando los estudiantes fueron iniciados en los sprites, se centraron principalmente en la creación de un sprite y la asignación de una animación. Esta lección comienza a profundizar en lo que hace que los sprites sean una construcción de programación tan poderosa: que tienen propiedades que pueden modificarse mientras se ejecuta un programa. Esto sienta las bases de gran parte de lo que los estudiantes harán en el resto de la unidad en términos de acceso y manipulación de las propiedades de los sprites para crear comportamientos interesantes en sus programas.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos utilizar las propiedades de los sprites para cambiar su apariencia en la pantalla?**\n\nEn esta lección, seguirás trabajando con los sprites, utilizando sus propiedades para cambiar su apariencia. "
        },
        "csd3-2021/Text": {
          "name": "Texto",
          "overview": "**Pregunta del Día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?**\n\nEsta lección introduce los comandos de texto del Laboratorio de Juegos, dando a los estudiantes más práctica en el uso del plano de coordenadas y los parámetros. Al principio de la lección, se pide a los alumnos que subtitulen un dibujo animado creado en el Laboratorio de Juegos. A continuación, pasan a Code Studio, donde practican la colocación de texto en la pantalla y el control de otras propiedades del texto, como el tamaño.  Los alumnos que completen la evaluación antes pueden pasar a aprender bloques más difíciles relacionados con las propiedades del texto. ",
          "purpose": "Esta lección introduce el texto, que los alumnos necesitarán cuando empiecen a construir programas más complejos (por ejemplo, juegos con marcadores). Este es el último tipo de elemento que los alumnos colocarán en la pantalla. Después de esto, los estudiantes se centrarán en cómo pueden controlar el movimiento y las interacciones de estos elementos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?**\n\nEn esta lección, aprenderás a utilizar los comandos de texto de Laboratorio de Juegos para añadir subtítulos a tus escenas. "
        },
        "csd3-2021/Mini-Project: Captioned Scenes": {
          "name": "Mini-Proyecto - Escenas subtituladas",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos utilizar el Laboratorio de Juegos para expresar nuestra creatividad?\n\nTras un rápido repaso del código que han aprendido hasta ahora, los alumnos se introducen en su primer proyecto creativo de la unidad. Utilizando el proceso de resolución de problemas como modelo, los estudiantes definen la escena que quieren crear, se preparan pensando en los diferentes códigos que necesitarán, prueban su plan en el Laboratorio de Juegos y luego reflexionan sobre lo que han creado. También tienen la oportunidad de compartir sus creaciones con sus compañeros.",
          "purpose": "Esta lección es una oportunidad para que los alumnos sean más creativos con lo que han aprendido. Algunos estudiantes pueden pasar más tiempo en la pestaña de animación dibujando que programando. Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan con los requisitos de la tarea.\n\nLa naturaleza abierta de esta lección también proporciona flexibilidad para que el profesor decida el tiempo que los estudiantes deben dedicar a su trabajo, dependiendo de las exigencias de programación de la aplicación particular del curso.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos utilizar el Laboratorio de Juegos para expresar nuestra creatividad?**\n\nEn esta lección, tendrás la oportunidad de ser creativo utilizando el proceso de resolución de problemas para diseñar y programar una escena de tu elección. "
        },
        "csd3-2021/The Draw Loop": {
          "name": "El bucle 'dibujar'",
          "overview": "\\*\\*Pregunta del Día: ¿Cómo podemos animar nuestras imágenes en el Laboratorio de Juegos?\n\nEn esta lección se inicia a los estudiantes en el bucle de dibujo, uno de los principales paradigmas de programación en el Laboratorio de Juegos. Para comenzar la lección, los alumnos observan algunos libros animados (flipbooks) físicos para ver que tener muchos cuadros con diferentes imágenes crea la impresión de movimiento. A continuación, los alumnos ven un vídeo en el que se explica cómo el bucle de dibujo del Laboratorio de Juegos ayuda a crear esta misma impresión en sus programas. Los estudiantes combinan el bucle de dibujo con números aleatorios para manipular algunas animaciones simples con puntos y luego con sprites.",
          "preparation": "-   Imprime y monta los manipulativos\n-   Prepara el vídeo",
          "purpose": "El bucle de dibujo es un componente esencial del Laboratorio de Juegos. El hecho de que el entorno del Laboratorio de Juegos llame repetidamente a esta función muchas veces por segundo (por defecto 30) es lo que permite a la herramienta crear animaciones. Esta lección tiene dos objetivos. El primero es que los estudiantes vean cómo la animación en general depende de mostrar muchas imágenes ligeramente diferentes en una secuencia. El segundo objetivo es que los estudiantes entiendan cómo el bucle de dibujo les permite crear este comportamiento en el Laboratorio de Juegos. Los alumnos deben salir de la lección comprendiendo que los comandos del bucle de dibujo son llamados después de todo el resto del código, pero luego son llamados repetidamente para crear la animación. Los estudiantes tendrán la oportunidad de continuar desarrollando la comprensión de este comportamiento en las próximas dos lecciones, pero el establecimiento de una sólida base conceptual en esta lección les servirá para el resto de la unidad.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos animar nuestras imágenes en el Laboratorio de Juegos?**\n\nEn esta lección, aprenderás a utilizar el bucle de dibujo con números aleatorios para crear tus primeras animaciones sencillas. "
        },
        "csd3-2021/Sprite Movement": {
          "name": "Movimiento de sprites",
          "overview": "**Pregunta del Día: ¿Cómo podemos controlar el movimiento de los sprites en el Laboratorio de Juegos?**\n\nEn esta lección, los alumnos aprenden a controlar el movimiento de los sprites utilizando una función llamada `patrón de contador`, que cambia gradualmente las propiedades de los sprites. Los estudiantes primero hacen un intercambio de ideas sobre las diferentes maneras en que podrían animar los sprites controlando sus propiedades, y luego exploran el patrón de contador en Code Studio. Después de examinar el código de trabajo, los alumnos intentan utilizar el patrón de contador para crear varios tipos de movimientos de sprites.",
          "purpose": "Esta lección se basa en el bucle de dibujo que los estudiantes aprendieron anteriormente para crear programas con movimiento _propio_. Incrementando o disminuyendo las propiedades de los sprites, como [\\`sprite.x\\`(#f78183)](/docs/gamelab/sprite.x/), los alumnos pueden escribir programas que muevan los sprites en patrones esperados, en lugar de la aleatoriedad que utilizaron en el pasado. Las animaciones que los alumnos aprenden a crear en esta lección sientan las bases de todas las animaciones y juegos que harán a lo largo del resto de la unidad.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos controlar el movimiento de los sprites en el Laboratorio de Juegos?**\n\nEn esta lección, aprenderás a controlar el movimiento de los sprites utilizando el patrón de contador. "
        },
        "csd3-2021/Mini-Project: Animation": {
          "name": "Mini-Proyecto - Animación",
          "overview": "**Pregunta del Día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, se pide a los alumnos que combinen diferentes métodos que han aprendido para crear una escena animada. En primer lugar, los alumnos repasan los tipos de movimiento y animación que han aprendido y reflexionan sobre los tipos de escenas que podría necesitar ese movimiento. A continuación, comienzan a planificar sus propias escenas animadas, que crean en el Laboratorio de Juegos.",
          "purpose": "Esta es una oportunidad para que los alumnos sean más creativos con lo que han aprendido. Algunos estudiantes pueden pasar más tiempo en la pestaña de animación dibujando que programando. Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan los requisitos de la tarea.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, combinarás todos los conceptos que has aprendido en las lecciones anteriores ¡para crear tu primera escena animada de diseño propio!"
        },
        "csd3-2021/Conditionals": {
          "name": "Condicionales",
          "overview": "**Pregunta del día:  ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEsta lección introduce las expresiones booleanas y condicionales, que permiten que un programa se ejecute de forma diferente dependiendo de si una condición es verdadera. Los alumnos comienzan jugando a un breve juego en el que responden según se cumplan determinadas condiciones. A continuación, pasan a Code Studio, donde aprenden cómo el ordenador evalúa las expresiones booleanas y cómo pueden utilizarse para estructurar un programa.",
          "purpose": "Comenzamos con el uso de booleanos directamente antes de utilizar booleanos para lanzar sentencias _if_. En la siguiente lección introduciremos algunos bloques productores de booleanos, como [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/), que pueden utilizarse en lugar de simples comparaciones booleanas para escribir programas que respondan a la entrada del usuario.",
          "student_overview": "**Pregunta del Día:  ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEn esta lección, aprenderás sobre expresiones booleanas y condicionales, que te permitirán crear programas que se ejecuten de manera diferente dependiendo de si una condición es verdadera. "
        },
        "csd3-2021/Keyboard Input": {
          "name": "Entrada de teclado",
          "overview": "**Pregunta del Día: ¿Cómo pueden reaccionar nuestros programas a la entrada del usuario?**\n\nDespués de la introducción a los booleanos y a las sentencias _if_ en la lección anterior, se presenta a los alumnos un nuevo bloque llamado [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/) que devuelve un booleano y puede utilizarse en sentencias condicionales para mover los sprites por la pantalla. Al final de esta lección, los alumnos habrán escrito programas que captan la entrada del teclado del usuario para controlar los sprites en la pantalla.",
          "purpose": "Una forma común de utilizar las condicionales es comprobar los diferentes tipos de entrada del usuario, especialmente la pulsación de teclas. Tener una forma de que el usuario interactúe con un programa lo hace más interesante y dinámico. Sin la interacción del usuario es muy difícil crear un juego. Por lo tanto, la introducción de condicionales y entradas del usuario para la toma de decisiones es un paso crítico hacia la creación de juegos.",
          "student_overview": "**Pregunta del Día: ¿Cómo pueden nuestros programas reaccionar a la entrada del usuario?**\n\nEn esta lección, aprenderás a utilizar el bloque keyDown() que permitirá a tus programas responder a la entrada del usuario. "
        },
        "csd3-2021/Mouse Input": {
          "name": "Entrada del Ratón",
          "overview": "**Pregunta del Día: ¿De qué otras formas puede reaccionar el ordenador a la entrada del usuario?**\n\nEn esta lección los alumnos continúan explorando las formas de utilizar las sentencias condicionales para captar la entrada del usuario. Además de los comandos de teclado aprendidos ayer, los estudiantes aprenderán varias formas de captar la entrada del ratón. También ampliarán su comprensión de las condicionales para incluir \"else\", que permite que el ordenador ejecute una determinada sección de código cuando una condición es verdadera, y una sección diferente de código cuando no lo es.",
          "purpose": "Los alumnos han aprendido a tomar decisiones sencillas con condicionales. Sin embargo, a veces queremos tomar decisiones basadas en si la condición por la que preguntamos originalmente era falsa. Ahí es donde entran las sentencias `else`. Las sentencias `else` son una segunda sentencia que se adjunta a una sentencia `if`. Las sentencias  `else` se ejecutan cuando las condiciones a las que se adjuntan son falsas.\n\nEste concepto se introduce junto con varios comandos nuevos de entrada del ratón, lo que permite a los alumnos construir gradualmente programas que utilizan la entrada de diferentes maneras.",
          "student_overview": "\\*\\*Pregunta del día: ¿De qué otras formas puede reaccionar el ordenador a la entrada del usuario?\n\nEn esta lección, ampliarás lo que has aprendido sobre las sentencias if y explorarás las sentencias if-else, así como aprenderás a utilizar el ratón para obtener información del usuario que puedes utilizar en tus sentencias condicionales. "
        },
        "csd3-2021/Project - Interactive Card": {
          "name": "Proyecto - Tarjeta interactiva",
          "overview": "**Pregunta del Día:  ¿Qué conocimientos y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn este proyecto de finalización del capítulo 1, los alumnos planifican y desarrollan una tarjeta de felicitación interactiva utilizando todas las técnicas de programación que han aprendido hasta ahora.",
          "preparation": "-   Leer el Foro\n-   Imprime una copia de la guía del proyecto para cada alumno",
          "purpose": "Esta evaluación de final de capítulo es un buen lugar para que los alumnos reúnan todas las cosas que han aprendido (dibujo, variables, sprites, imágenes, condicionales, entrada del usuario) en un solo lugar. Los estudiantes deben seguir trabajando con un código que sea fácilmente legible y que no implique muchas distracciones de alto nivel. Dar a los alumnos la oportunidad de ser realmente creativos después de aprender todos estos nuevos conceptos les ayudará a comprometerse aún más cuando se dirijan al capítulo 2.",
          "student_overview": "**Pregunta del día:  ¿Qué habilidades y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn esta lección, planificarás y desarrollarás una tarjeta de felicitación interactiva ¡utilizando todos los conceptos y técnicas de programación que has aprendido hasta ahora!"
        },
        "csd3-2021/Velocity": {
          "name": "Velocidad",
          "overview": "**Pregunta del Día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nTras un breve repaso de cómo utilizaron el patrón de contador para mover sprites en las lecciones anteriores, se presenta a los alumnos la idea de ocultar esos patrones en un solo bloque.  A continuación, los alumnos se dirigen a Code Studio para probar nuevos bloques que establecen la velocidad de un sprite directamente, y observan diversas formas en las que pueden codificar comportamientos más complejos en sus sprites.  ",
          "purpose": "Esta lección pone en marcha un tema importante del capítulo: que el comportamiento complejo puede representarse de formas más simples para facilitar la escritura y el razonamiento del código. \n\nEn esta lección se enseña a los alumnos a utilizar los bloques de velocidad para simplificar el código que mueve un sprite por la pantalla. Esto supone un cambio en la forma de presentar los nuevos bloques. Mientras que antes los bloques se presentaban como elementos que permitían comportamientos completamente nuevos, ahora se presentan como una simplificación del código que los alumnos podrían haber escrito con los bloques disponibles anteriormente. En las próximas lecciones, los alumnos verán cómo este método de gestión de la complejidad les permite producir comportamientos de sprites más interesantes.",
          "student_overview": "**Pregunta del día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nEn esta lección, aprenderás a establecer la velocidad de un sprite que utiliza el patrón de contador para mover tus sprites. "
        },
        "csd3-2021/Collision Detection": {
          "name": "Detección de colisiones",
          "overview": "**Pregunta del Día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nLos alumnos aprenden sobre la detección de colisiones en el ordenador. Trabajando en parejas, exploran cómo un ordenador podría utilizar las propiedades de ubicación y tamaño de los sprites y las matemáticas para detectar si dos sprites se están tocando. A continuación, utilizan el bloque [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) para crear diferentes efectos cuando los sprites colisionan, y practican el uso del bloque para simular varias interacciones.",
          "preparation": "-   Imprime copias de la guía de actividad de forma que cada pareja de alumnos tenga una parte A y una parte B",
          "purpose": "Esta lección introduce formalmente el uso de abstracciones, formas sencillas de representar la complejidad subyacente. \n\nEn la última lección, los estudiantes fueron iniciados en la idea de utilizar un bloque para representar un código complejo. Los alumnos siguen explorando esta idea en el contexto del reto matemático intencionadamente complejo de determinar si dos sprites se tocan. Al utilizar un único bloque para representar esta complejidad, en este caso el bloque `isTouching`, resulta mucho más fácil escribir y razonar sobre el código, y los alumnos pueden apreciar el valor de utilizar abstracciones. En lecciones posteriores, los estudiantes continuarán avanzando sobre la abstracción [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) para crear interacciones de sprites más complejas.",
          "student_overview": "**Pregunta del día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nEn esta lección, aprenderás sobre la detección de colisiones explorando cómo un ordenador podría utilizar las matemáticas, la ubicación del sprite y el tamaño para detectar si los sprites se están tocando. "
        },
        "csd3-2021/Mini-Project: Side Scroller": {
          "name": "Mini-proyecto: Desplazamiento Lateral",
          "overview": "**Pregunta del Día:  ¿Cómo se pueden utilizar los nuevos tipos de movimiento de los sprites y la detección de colisiones para crear un juego?**\n\nLos alumnos utilizan lo que han aprendido sobre la detección de colisiones y la configuración de la velocidad para crear un sencillo juego de desplazamiento lateral. Después de ver un juego de desplazamiento lateral de ejemplo, los estudiantes hacen una lluvia de ideas sobre el tipo de desplazamiento lateral que les gustaría hacer, y luego utilizan un proceso estructurado para programar el juego en Code Studio.",
          "purpose": "Esta lección es una oportunidad para que los alumnos sean más creativos con lo que han aprendido.  Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan los requisitos de la tarea. Esta lección puede acortarse o alargarse en función de las limitaciones de tiempo. ",
          "student_overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de movimiento de los sprites y la detección de colisiones para crear un juego?**\n\n¡En esta lección, utilizarás lo que has aprendido sobre la detección de colisiones y la velocidad para crear un sencillo juego de desplazamiento lateral!"
        },
        "csd3-2021/Complex Sprite Movement": {
          "name": "Movimiento complejo de sprites",
          "overview": "**Pregunta del Día: ¿Cómo se pueden combinar los bloques anteriores en nuevos patrones para hacer movimientos interesantes?**\n\nLos alumnos aprenden a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprites más complejos. Después de repasar los dos conceptos, exploran varios escenarios en los que se utiliza la velocidad en el patrón de contador, y observan los diferentes tipos de movimiento que resultan. En particular, los alumnos aprenden a simular la gravedad. A continuación, reflexionan sobre cómo han podido conseguir nuevos comportamientos combinando bloques y patrones que ya conocían.",
          "purpose": "Esta lección no introduce ningún bloque nuevo y, de hecho, sólo utiliza los patrones que los alumnos han visto en el capítulo 1. En cambio, demuestra cómo la combinación de estas herramientas, en particular las abstracciones que los alumnos aprendieron en las dos lecciones anteriores, les permite construir nuevos comportamientos para sus sprites. Esto subraya el punto más amplio de que las abstracciones no sólo simplifican el código, sino que también pueden utilizarse como bloques de construcción de comportamientos aún más complejos.  ",
          "student_overview": "**Pregunta del Día: ¿Cómo se pueden combinar los bloques anteriores con nuevos patrones para crear movimientos interesantes?**\n\nEn esta lección, aprenderás a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprites más complejos. "
        },
        "csd3-2021/Collisions": {
          "name": "Colisiones",
          "overview": "**Pregunta del Día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, los estudiantes programan sus sprites para que interactúen de nuevas maneras. Después de un breve repaso de cómo usaron el bloque [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/), los alumnos hacen una lluvia de ideas sobre otras formas en que dos sprites podrían interactuar. A continuación, utilizan [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/) para hacer que un sprite empuje a otro por la pantalla antes de practicar con los cuatro bloques de colisión ([\\`collide\\`(#f78183)](/docs/gamelab/collide/), [\\`displace\\`(#f78183)](/docs/gamelab/displace/), [\\`bounce\\`(#f78183)](/docs/gamelab/bounce/) y [\\`bounceOff\\`(#f78183)](/docs/gamelab/bounceOff/)).",
          "purpose": "Esta lección introduce las colisiones, otra abstracción útil que permitirá a los alumnos manipular sus sprites de formas totalmente nuevas. Mientras que los estudiantes podrían teóricamente haber escrito sus propios comandos de desplazamiento, colisión o rebote, la capacidad de ignorar los detalles de este código les permite centrar su atención en la estructura de alto nivel de los juegos que quieren construir.\n\nEsta lección también pretende dar a los alumnos más práctica en el uso de los nuevos comandos que han aprendido en el segundo capítulo. Esta es la última vez que aprenderán un nuevo comportamiento de sprites, y después de esta lección los estudiantes pasarán a centrarse en cómo organizar su código cada vez más complejo.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, aprenderás a utilizar los nuevos bloques de colisión (colisionar, desplazar, rebotar y bounceOff) para hacer que tu sprite interactúe de nuevas maneras. "
        },
        "csd3-2021/Mini-Project: Flyer Game": {
          "name": "Mini-Proyecto: Juego de Volantes",
          "overview": "**Pregunta del Día:  ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el modelado del movimiento para crear un juego?**\n\nLos alumnos utilizan lo que han aprendido sobre la simulación de la gravedad y los diferentes tipos de colisiones para crear sencillos juegos de voladores. Después de ver un juego de voladores de muestra, los estudiantes hacen una lluvia de ideas sobre el tipo de juegos de voladores que les gustaría, y luego utilizan un proceso estructurado para programar el juego en Code Studio.",
          "purpose": "Esta lección es una oportunidad para que los alumnos sean más creativos con lo que han aprendido. Anima a los alumnos a dedicar tiempo a las partes de la actividad que les interesen, siempre que cumplan con los requisitos de la tarea.",
          "student_overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el modelado del movimiento para crear un juego?**\n\nEn esta lección, utilizarás lo que has aprendido sobre la simulación de la gravedad y los diferentes tipos de colisiones para crear ¡un sencillo juego de voladores!"
        },
        "csd3-2021/Functions": {
          "name": "Funciones",
          "overview": "**Pregunta del Día: ¿Cómo pueden los programadores utilizar las funciones para crear sus propias abstracciones?**\n\nLos alumnos aprenden a crear funciones para organizar su código, hacerlo más legible y eliminar bloques de código repetidos. Los alumnos piensan primero en qué tipo de bloques nuevos les gustaría tener en el Laboratorio de Juegos, y qué código contendrían esos bloques. Después, los estudiantes aprenden a crear funciones en el Laboratorio de Juegos. Utilizarán las funciones para eliminar largos bloques de código de su bucle de dibujo y para sustituir trozos de código repetidos por una única función.",
          "purpose": "En las lecciones anteriores los alumnos han aprendido a utilizar una serie de abstracciones en sus programas, incluyendo las propiedades de velocidad, isTouching y las colisiones. Estas abstracciones les han permitido construir programas mucho más complejos ignorando los detalles de cómo se crea ese comportamiento. En esta lección los alumnos aprenden a construir sus propias abstracciones creando funciones.\n\nLos alumnos utilizarán principalmente las funciones para dividir el código en trozos lógicos que sean más fáciles de razonar. Esto presagia la transición del capítulo desde la construcción de conocimientos técnicos a los procesos de organización utilizados para desarrollar el software.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores utilizar las funciones para crear sus propias abstracciones?**\n\nEn esta lección, aprenderás a organizar mejor tu código utilizando funciones para hacer el código de tu programa más legible y eliminar bloques de código repetidos. "
        },
        "csd3-2021/The Game Design Process": {
          "name": "El proceso de diseño de juegos",
          "overview": "**Pregunta del Día:  ¿Cómo tener una planificación ayuda a que un gran proyecto resulte más fácil?**\n\nEsta lección inicia a los estudiantes en el proceso que utilizarán para diseñar juegos durante el resto de la unidad. Este proceso se centra en una guía de proyecto que pide a los estudiantes que definan sus sprites, variables y funciones antes de empezar a programar su juego. En esta lección, los alumnos comienzan ejecutando un juego en el Laboratorio de juegos en el que el código está oculto. Analizan lo que creen que deberían ser los sprites, las variables y las funciones para hacer el juego. A continuación, se les da una guía de proyecto completa que muestra una forma de implementar el juego. Después, se acompaña a los alumnos en este proceso a través de una serie de niveles. Al final de la lección, los estudiantes tienen la oportunidad de mejorar el juego para hacerlo suyo.",
          "preparation": "-   Imprime copias de la guía del proyecto, si vas a entregar a los alumnos copias físicas.  Ten en cuenta que esta guía del proyecto se rellena intencionadamente. (Consulta las notas en el Plan de la Lección).",
          "purpose": "Esta lección introduce las animaciones de fotogramas múltiples, y es la primera de una secuencia centrada en el proceso de construcción de software.\n\nMientras que las lecciones anteriores se centraron en el uso de abstracciones para gestionar la complejidad del código, esta lección se centra en la gestión de la complejidad del proceso de desarrollo de software. La lección refuerza el proceso de desarrollo de software proporcionando a los alumnos una guía de proyecto completa, proporcionando un código inicial y guiando a los alumnos a través de su implementación. En las lecciones siguientes los estudiantes tendrán que completar una mayor parte de esta guía de forma independiente, y para el proyecto final seguirán este proceso en gran medida de forma independiente.",
          "student_overview": "**Pregunta del día:  ¿Cómo tener un plan ayuda a hacer más fácil un proyecto de gran envergadura?**\n\nEn esta lección, explorarás el proceso que utilizarás durante el resto de la unidad al diseñar juegos. "
        },
        "csd3-2021/Using the Game Design Process": {
          "name": "Uso del proceso de diseño de juegos",
          "overview": "**Pregunta del Día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, los alumnos utilizan el proceso de resolución de problemas de la Unidad 1 para crear un juego de salto de plataforma. Empiezan por ver un ejemplo de salto de plataforma y luego definen cómo serán sus juegos. A continuación, utilizan un proceso estructurado para planificar los fondos, las variables, los sprites y las funciones que necesitarán para implementar su juego. Después de escribir el código del juego, los alumnos reflexionarán sobre cómo podría mejorarse el juego y aplicarán esos cambios.",
          "preparation": "-   Imprime una copia de la guía de proyecto para cada estudiante o pareja de estudiantes",
          "purpose": "Los alumnos ya han aprendido todas las construcciones de programación que necesitan para crear un juego. Esta lección repasa muchos de esos conceptos a la vez que les introduce en un proceso estructurado que les ayudará a gestionar el trabajo. Se basa en el uso de la guía de proyecto de la lección anterior haciendo que los alumnos completen más de esta guía de proyecto de forma independiente antes de usarla para construir un juego. Esta actividad prepara a los alumnos para escribir su propio juego desde cero para el proyecto final.",
          "student_overview": "**Pregunta del día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, ¡utilizarás el proceso de resolución de problemas para crear un juego de saltos de plataforma!"
        },
        "csd3-2021/Project - Design a Game": {
          "name": "Proyecto - Diseñar un juego",
          "overview": "**Pregunta del Día: ¿Cómo pueden las cinco prácticas de informática (resolución de problemas, persistencia, comunicación, colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?**\n\nLos alumnos planificarán y construirán su propio juego utilizando la guía de proyecto de las dos lecciones anteriores. Trabajando individualmente o en parejas, los alumnos decidirán primero el tipo de juego que les gustaría construir, inspirándose en un conjunto de juegos de ejemplo. A continuación, completarán una guía de proyecto en blanco en la que describirán el comportamiento del juego y definirán las variables, los sprites y las funciones que necesitarán para construirlo. En Code Studio, una serie de niveles les indica una secuencia general que pueden utilizar para aplicar este plan. A lo largo del proceso, los estudiantes compartirán sus proyectos para que sean revisados por sus compañeros e incorporarán comentarios a medida que terminen su juego. Al final de la lección, los alumnos compartirán sus juegos terminados con sus compañeros. Este proyecto abarcará varias clases y puede durar fácilmente entre 3 y 5 períodos de clase.",
          "preparation": "-   Imprime copias de la guía de proyecto, una para cada estudiante/par de estudiantes\n-   Imprime copias de la rúbrica, una para cada estudiante/par de estudiantes\n-   Imprime copias de la guía de revisión por pares, una para cada estudiante/par de estudiantes\n-   Revisar los juegos de ejemplo en Code Studio",
          "purpose": "Esta lección es la culminación de la Unidad 3 y ofrece a los alumnos la oportunidad de construir un proyecto de Laboratorio de Juegos propio desde el principio. El soporte proporcionado por la guía del proyecto y la práctica que tienen al utilizarla están pensados para ayudar a los estudiantes a definir sus proyectos y llevar sus ideas hasta el final. Este proyecto es una oportunidad para mostrar los conocimientos técnicos, pero también tendrán que colaborar con su pareja, proporcionar opiniones constructivas a sus compañeros y utilizar repetidamente el proceso de resolución de problemas a medida que encuentren obstáculos en el camino. Este proyecto debe ser dirigido por los alumnos siempre que sea posible, y proporcionar una conclusión memorable y estimulante para esta unidad de Descubrimientos de Informática.",
          "student_overview": "\\*\\*Pregunta del día: ¿Cómo pueden las cinco prácticas de la informática (resolución de problemas, persistencia, comunicación, colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?\n\nEn esta lección, ¡utilizarás el proceso de resolución de problemas para planificar y construir un juego original!"
        },
        "csd3-2021/lesson-1": {
          "name": "Encuesta Fin de Curso de Descubrimientos de la Informática"
        },
        "csd1-2021/Intro to Problem Solving": {
          "name": "Introducción a la resolución de problemas",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar barcos de papel de aluminio que soporten el mayor número posible de monedas de un centavo. Los grupos disponen de dos rondas para trabajar en sus barcos, con el objetivo de intentar sostener más monedas de un centavo que en la primera ronda. La estructura de la actividad prefigura diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**También hay disponibles otras versiones de esta lección.** \n\n-   [Mesa de Periódicos](/s/csd1-2021/lessons/9/)\n-   [Puente de Espaguetis](/s/csd1-2021/lessons/10/)\n-   [Torre de Papel](/s/csd1-2021/lessons/11/)",
          "preparation": "**Para cada grupo**\n\n-   2 hojas de papel de aluminio de 13x13 cm. de largo cada una\n-   1 recipiente que pueda contener entre 50 y 80 ml de agua \n-   Varias toallas de papel o trapos que puedan colocarse debajo del recipiente \n-   15 monedas de un céntimo €\n-   Una copia de la guía de actividades\n\n**Para el Profesor**\n\n-   1 recipiente con capacidad para 50-80 ml de agua \n-   50 monedas de uncéntimo € \n-   Toallas de papel o trapos adicionales ",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los alumnos utilizarán durante el resto de la unidad y del curso. El problema de los barquitos de aluminio podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, diseñen un plan, prueben una solución, evalúen sus resultados y luego mejoren iterativamente a partir de ahí. El hecho de que el problema elegido sea \"no informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto ayuda a enmarcar esta clase como una sobre la resolución de problemas en general, siendo la informática una nueva \"herramienta\" para ayudar a afrontar ciertos tipos de problemas. ",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nTrabajarás con un grupo para diseñar y probar un barco de papel de aluminio que soporte el mayor número posible de monedas de un céntimo. "
        },
        "csd1-2021/The Problem Solving Process": {
          "name": "El proceso de resolución de problemas",
          "overview": "**Pregunta del día: ¿Cuáles son algunos de los pasos comunes que podemos utilizar para resolver diferentes tipos de problemas?**\n\nEsta lección introduce el proceso formal de resolución de problemas que los alumnos utilizarán a lo largo del año: Definir - Preparar - Probar - Reflexionar. La lección comienza pidiendo a los alumnos que realicen una lluvia de ideas sobre los diferentes tipos de problemas que se encuentran en la vida cotidiana. A continuación, se les muestran los cuatro pasos del proceso de resolución de problemas y trabajan juntos para relacionar estos pasos abstractos con sus experiencias reales de resolución de problemas. En primer lugar, los alumnos relacionan estos pasos con las actividades relacionadas con los problemas de la lección anterior, luego con un problema que se les dé bien y por último, con un problema que quieran mejorar. Al final de la lección, la clase recopila una lista de estrategias generalmente útiles para cada paso del proceso que se colocan en carteles que se utilizarán a lo largo de la unidad y del año.",
          "preparation": "Para cada alumno \n\n-   Imprime una copia de la Guía de Actividades\n\nPara la clase\n\n-   Papel para carteles\n-   Rotuladores/lápices de colores",
          "purpose": "El objetivo de esta lección es afianzar el proceso formal de resolución de problemas que los estudiantes utilizarán a lo largo del curso en algunas experiencias de la vida real que ya tienen resolviendo problemas. Las futuras unidades de Descubrimientos CS presentarán problemas en contextos que pueden o no ser familiares. Un proceso estructurado de resolución de problemas será una herramienta importante para ayudar a los estudiantes a avanzar ante retos novedosos y complejos.",
          "student_overview": "**Pregunta del día: ¿Cuáles son algunos de los pasos comunes que podemos utilizar para resolver diferentes tipos de problemas?**\n\nAprenderás sobre el proceso de resolución de problemas que utilizamos en Informática y te sumergirás en algunas estrategias para aplicar en cada paso. "
        },
        "csd1-2021/Exploring Problem Solving": {
          "name": "Exploración de la resolución de problemas",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a muchos tipos diferentes de problemas?** \n\nEn esta lección, los alumnos aplican el proceso de resolución de problemas a tres problemas diferentes para comprender mejor el valor de cada paso. Resolverán una sopa de letras, organizarán los asientos para una fiesta de cumpleaños y rediseñarán un aula. Los problemas se vuelven cada vez más complejos y mal definidos para destacar cómo el proceso de resolución de problemas es especialmente útil cuando se abordan estos tipos de problemas. La lección concluye con la reflexión de los alumnos sobre su experiencia con el proceso de resolución de problemas. Justificarán la inclusión de cada paso y harán una lluvia de preguntas o estrategias que puedan ayudarles a definir mejor los problemas abiertos, ya que éste suele ser el paso más crítico.\n\nEs probable que esta lección requiera dos periodos de clase o más para completarse. Los dos primeros problemas pueden caber en un solo período de clase, pero el tercero deberá trasladarse a un segundo día.\n\n**También hay versiones alternativas de esta lección.** \n\n-   [Tema de Animales](/s/csd1-2021/lessons/12/)\n-   [Tema de Juegos](/s/csd1-2021/lessons/13/)",
          "preparation": "-   Imprime la guía de actividades para cada alumno\n-   Cartulinas para el problema de la Fiesta de Cumpleaños\n-   Cartel para anotar las estrategias de definición de los problemas en la reflexión final",
          "purpose": "Esta lección proporciona a los alumnos más práctica con el proceso de resolución de problemas en una variedad de contextos. Destaca el hecho de que el proceso de resolución de problemas es especialmente útil cuando se abordan problemas mal definidos. La lluvia de ideas final de la lección proporciona a los alumnos algunas estrategias y preguntas que pueden formular para definir mejor los problemas por sí mismos, ya que éste suele ser el paso más crítico. Los problemas vistos en esta lección también ayudan a impulsar un debate en la siguiente lección sobre los tipos de problemas para cuya resolución son adecuados los ordenadores.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos aplicar el Proceso de Resolución de Problemas a muchos tipos de problemas diferentes?**\n\n¡Hoy aplicarás el Proceso de Resolución de Problemas a tres problemas diferentes que serán cada vez más complejos!"
        },
        "csd1-2021/What is a Computer?": {
          "name": "¿Qué es una computadora?",
          "overview": "**Pregunta del día: ¿Qué es un ordenador?**\n\nEn esta lección, los alumnos elaboran una definición preliminar de ordenador. Para empezar la lección, la clase hará una lluvia de ideas sobre posibles definiciones de ordenador y colocará los resultados de esta lluvia de ideas en la pizarra. A continuación, los alumnos trabajarán en grupos para clasificar las imágenes en \"es un ordenador\" o \"no es un ordenador\" en un cartel. Los grupos colocarán sus carteles por la sala y explicarán brevemente sus motivaciones para elegir algunas de sus clasificaciones más difíciles.  A continuación, el profesor presentará una definición de ordenador y permitirá a los alumnos revisar sus carteles de acuerdo con la nueva definición.",
          "preparation": "**Para cada grupo** \n\n-   Imprime copias de la guía de actividades. Ten en cuenta que hay dos juegos de imágenes, pero cada grupo sólo necesita un juego.\n-   Tijeras (si no tienes tiempo de cortar las imágenes antes de la clase) \n-   Papel para carteles\n-   Rotuladores o lápices de colores \n-   Pegamento o cinta adhesiva para pegar las imágenes ",
          "purpose": "Esta lección se basa en el tema de la resolución de problemas de las lecciones anteriores y se centra en los detalles de cómo se utiliza la informática en la resolución de problemas. En esta lección, los alumnos considerarán los diferentes tipos de ordenadores y que éstos utilizan la información como parte del proceso de resolución de problemas. Las próximas lecciones profundizarán en el aspecto de un problema de información y en cómo los ordenadores resuelven estos problemas.",
          "student_overview": "\\*\\*Pregunta del día: ¿Qué es un ordenador?\n\n¡En esta lección, trabajarás con un grupo para averiguar qué hace a un ordenador ser un ordenador!"
        },
        "csd1-2021/Input and Output": {
          "name": "Entrada y salida",
          "overview": "**Pregunta del Día: ¿Cómo utilizan los ordenadores la entrada y la salida a la hora de obtener y dar la información que necesitan para resolver los problemas?**\n\nEn esta lección, los alumnos estudian cómo los ordenadores obtienen y dan información al usuario mediante entradas y salidas.  En primer lugar, los alumnos consideran qué información necesitarían para resolver un \"problema intelectual\" y a continuación, utilizan esa información para elaborar una recomendación.  Después, identifican las entradas y salidas de ese proceso.  Más adelante, los alumnos estudian una aplicación que realiza el mismo proceso y determinan cómo entra y sale la información de esa aplicación.  Por último, consideran otros tipos de entradas y salidas que los ordenadores pueden utilizar para ayudar a resolver problemas.",
          "preparation": "-   Prepara copias de la guía de actividades",
          "purpose": "En la lección anterior, los alumnos comenzaron a hacer una lluvia de ideas sobre las características que pueden ayudar a clasificar los dispositivos como ordenadores. Esta lección introduce la entrada y la salida como una de estas características y hace que los alumnos identifiquen diferentes métodos de entrada o salida en aplicaciones comunes.",
          "student_overview": "**Pregunta del Día: ¿Cómo utilizan los ordenadores la entrada y la salida para obtener y dar la información que necesitan para resolver problemas?**\n\nEn esta lección, aprenderás cómo los ordenadores obtienen y dan información al usuario a través de varias entradas y salidas. "
        },
        "csd1-2021/Processing": {
          "name": "Procesamiento",
          "overview": "**Pregunta del Día: ¿Cuáles son las diferentes formas en que los ordenadores pueden procesar la información?**\n\nEsta lección presenta a los estudiantes cuatro tipos comunes de procesamiento: if/then (condicionales), encontrar una coincidencia (búsqueda), contar y comparar.  En primer lugar, los alumnos conocen los tipos de procesamiento a través de varias aplicaciones de ejemplo.  Después, investigan más aplicaciones para determinar qué tipos de procesamiento utiliza cada una.  A continuación, piensan en su propia aplicación y deciden qué tipos de procesamiento necesitaría para funcionar.  Por último, hacen una lluvia de ideas sobre otros tipos de procesamiento que pueden ser útiles pero que no se han incluido en la lección principal.",
          "purpose": "Esta lección introduce el concepto de procesamiento dentro de la resolución de problemas informáticos. La definición de procesamiento presentada en esta lección es intencionadamente accesible. Los alumnos deben entender que el procesamiento es lo que hace un ordenador para convertir las entradas en salidas, y que hay muchas maneras diferentes de que los ordenadores hagan este trabajo. El objetivo de esta lección no es que los estudiantes escriban algoritmos específicos para las aplicaciones de ejemplo.",
          "student_overview": "**Pregunta del día: ¿Cuáles son las diferentes formas en que los ordenadores pueden procesar la información?**\n\nEn esta lección, aprenderás los cuatro tipos de procesamiento que los ordenadores pueden utilizar para convertir la entrada en salida.  "
        },
        "csd1-2021/Storage": {
          "name": "Almacenamiento",
          "overview": "**Pregunta del día: ¿Por qué el almacenamiento es una parte importante del proceso informático?**\n\nEsta lección introduce el último componente del modelo de computación de la unidad: el almacenamiento.  Después de probar una aplicación de \"selección de ropa\", los alumnos discuten qué información debería almacenarse en la aplicación en lugar de introducirla cada vez que se ejecuta la aplicación.  A continuación, observan una serie de aplicaciones y utilizan sus decisiones sobre lo que debería almacenarse para crear directrices con el fin de decidir qué información almacenar.  A continuación, repasan los cuatro componentes del modelo de computación de este capítulo: entrada, salida, almacenamiento y procesamiento.  A continuación, tienen una última oportunidad para revisar sus decisiones sobre los elementos que deben clasificarse como \"ordenador\", tomadas anteriormente en el capítulo.  La lección termina con una reflexión sobre sus propias ideas de aplicaciones y sobre cómo se podría utilizar el almacenamiento.",
          "preparation": "-   Imprime una copia de la guía de actividades para cada alumno",
          "purpose": "En el capítulo 1 de esta unidad, los alumnos aprendieron el proceso de resolución de problemas. En el capítulo 2, los alumnos aprendieron cómo los ordenadores resuelven problemas. En este punto, los alumnos saben que los ordenadores son máquinas de procesamiento de información que pueden hacer cuatro cosas con la información: entrada, salida, almacenamiento y proceso.  En esta última lección antes del proyecto de la unidad, los alumnos examinan los tipos de entrada que pueden ser necesarios para resolver un problema concreto y describen el procesamiento y el almacenamiento que haría un ordenador para producir el resultado deseado.  Esto debería prepararles para diseñar su propia aplicación que resuelva un problema y explicar cómo funcionaría esa aplicación.",
          "student_overview": "**Pregunta del día: ¿Por qué el almacenamiento es una parte importante del proceso informático?**\n\n¡En esta lección, aprenderás el último criterio que hace a un ordenador ser un ordenador: el almacenamiento!"
        },
        "csd1-2021/Project - Propose an App": {
          "name": "Proyecto - Propuesta de aplicación",
          "overview": "**Pregunta del Día: ¿Cómo puede ayudarnos el modelo IOSP a diseñar una aplicación que resuelva un problema?**\n\nPara concluir su estudio del proceso de resolución de problemas y del modelo de entrada/salida/almacén/proceso de un ordenador, los alumnos propondrán una aplicación diseñada para resolver un problema del mundo real. Este proyecto se llevará a cabo durante varios días y los alumnos crearán un póster en el que destacarán las características de su aplicación y que presentarán a sus compañeros. Una guía del proyecto proporciona instrucciones paso a paso a los estudiantes y les ayuda a organizar sus ideas. El proyecto está diseñado para ser completado en parejas, aunque puede ser completado individualmente.",
          "preparation": "-   Imprime una copia de [r app-proposal-project/csd/2021] para cada pareja de alumnos\n-   Papel para carteles, bolígrafos, rotuladores y otros materiales para hacer carteles",
          "purpose": "Este proyecto combina los dos temas principales de la Unidad 1, la resolución de problemas y el modelo de entrada-salida-almacenamiento-proceso de un ordenador. Este proyecto vincula ambos temas con un objetivo más amplio de identificar problemas del mundo real y encontrar formas de utilizar la tecnología para ayudar a resolverlos. Los alumnos colaboran en la creación de su aplicación y también participan en un proceso estructurado de revisión por pares que verán muchas más veces a lo largo del curso. Este proyecto debe ser también una experiencia divertida y creativa, y da a los estudiantes la oportunidad de relacionar el campo de la informática con sus propios intereses y ambiciones.",
          "student_overview": "**Pregunta del Día: ¿Cómo puede ayudarnos el modelo IOSP a diseñar una aplicación que resuelva un problema?**\n\nEn esta lección, dedicarás unos días a crear una idea para una aplicación que resuelva un problema del mundo real utilizando la entrada, la salida, el almacenamiento y el procesamiento. "
        },
        "csd1-2021/Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - La Mesa de Periódicos (Lección 1 Alterna)",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar mesas de papel de periódico que aguanten tantos libros como sea posible. Los grupos disponen de dos rondas para trabajar en sus mesas, con el objetivo de intentar que aguanten más libros que en la primera ronda. La estructura de la actividad anticipa los diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la Resolución de Problemas - Barcos de Aluminio](/s/csd1-2021/lessons/1/)**",
          "preparation": "**Para cada grupo**\n\n-   2 periódicos completos para cada grupo de estudiantes\n-   1 rollo de cinta adhesiva para cada grupo de alumnos\n-   Un ejemplar de la guía de actividades\n\n**Para el profesor**\n\n-   10-20 libros de peso similar.",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los alumnos utilizarán durante el resto de la unidad y del curso. El problema de la mesa del periódico podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, conciban un plan, prueben una solución, evalúen sus resultados y luego mejoren repetidamente a partir de ahí. El hecho de que el problema elegido sea \"no informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto ayuda a enmarcar esta clase, como una sobre la resolución de problemas en general, siendo la informática una nueva \"herramienta\" que ayuda a afrontar ciertos tipos de problemas. ",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nPara esta lección, trabajarás con un grupo para diseñar, construir, probar y reflexionar sobre una mesa hecha con periódicos que soporte la mayor cantidad de libros posible. "
        },
        "csd1-2021/Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - El Puente de Espaguetis (Lección 1 Alterna)",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar puentes con espaguetis que aguanten el mayor número posible de libros. Los grupos tienen dos rondas para trabajar en sus puentes, con el objetivo de intentar sostener más libros que en la primera ronda. La estructura de la actividad prefigura diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la Resolución de Problemas - Barcos de Aluminio](/s/csd1-2021/lessons/1/)**.",
          "preparation": "**Para cada grupo**\n\n-   1 paquete de 500 gr. de espaguetis \n-   1 pistola de pegamento\n-   Un ejemplar de la guía de actividades\n\n**Para el profesor**\n\n-   10-20 libros de tamaño y peso similares",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los estudiantes utilizarán durante el resto de esta unidad y del curso. El problema del puente de espaguetis podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, conciban un plan, prueben una solución, evalúen sus resultados y luego lo mejoren repetidamente. El hecho de que el problema elegido  \"no sea informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto ayuda a enmarcar esta clase, como una sobre la resolución de problemas en general, siendo la informática una nueva \"herramienta\" para ayudar a abordar ciertos tipos de problemas.",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, trabajarás con un grupo para diseñar, construir, probar y reflexionar sobre un puente de espaguetis que aguante tantos libros como sea posible. "
        },
        "csd1-2021/Intro to Problem Solving - Paper Tower (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - El Torre de Papel (Lección 1 Alterna)",
          "overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, los alumnos trabajan en grupos para diseñar torres de papel que puedan alcanzar la mayor altura posible. Los grupos disponen de dos rondas para trabajar en sus torres, con el objetivo de intentar llegar más alto que en la primera ronda. La estructura de la actividad prefigura diferentes pasos del proceso de resolución de problemas que los alumnos conocerán con más detalle en la siguiente lección. Al final de la lección, los alumnos reflexionan sobre sus experiencias con la actividad y establecen conexiones con los tipos de resolución de problemas que realizarán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la Resolución de Problemas - Barcos de Aluminio](/s/csd1-2021/lessons/1/)**.",
          "preparation": "**Para cada grupo**\n\n-   20 hojas de papel tamaño A4\n-   Espacio para construir su torre\n-   Un ejemplar de la guía de actividad\n\n**Para el profesor**\n\n-   Papel adicional \n-   Cronómetro\n-   Regla",
          "purpose": "Esta lección es una divertida introducción a la resolución de problemas abierta, colaborativa y creativa que los estudiantes utilizarán durante el resto de esta unidad y del curso. El problema de las torres de papel podría sustituirse fácilmente por cualquier otro problema que requiera que los estudiantes definan sus objetivos, conciban un plan, prueben una solución, evalúen sus resultados y luego mejoren repetidamente a partir de ahí. El hecho de que el problema elegido \"no sea informático\" es intencionado. La informática es fundamentalmente una disciplina de resolución de problemas y alejarse de los problemas tradicionales de la informática en este punto favorece que esta clase se enmarque en la resolución de problemas de forma más general, siendo la informática una nueva \"herramienta\" para ayudar a abordar ciertos tipos de problemas. ",
          "student_overview": "**Pregunta del Día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nEn esta lección, trabajarás con un grupo para diseñar, construir, probar y reflexionar sobre una torre de papel que intentarás hacer lo más alta posible. "
        },
        "csd1-2021/Exploring Problem Solving - Animals Theme (Alternate Lesson 3)": {
          "name": "Exploración de la resolución de problemas - Tema de los Animales (Lección Alternativa 3)",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a diferentes tipos de problemas?**\n\nEn esta lección, los alumnos aplican el proceso de resolución de problemas a tres problemas diferentes para comprender mejor el valor de cada paso. Resolverán tangrams, elegirán una mascota para varias personas y planificarán un evento de adopción de mascotas. Los problemas se vuelven cada vez más complejos y poco definidos para destacar cómo el proceso de resolución de problemas es especialmente útil al abordar este tipo de problemas. La lección concluye con la reflexión de los alumnos sobre su experiencia con el proceso de resolución de problemas. Justificarán la inclusión de cada paso y harán una lluvia de preguntas o estrategias que puedan ayudarles a definir mejor los problemas abiertos, ya que éste suele ser el paso más crítico.\n\nEs probable que esta lección requiera dos periodos de clase o más para completarse. Los dos primeros problemas pueden caber en un solo período de clase, pero el tercero deberá trasladarse a un segundo día.\n\n**Esta es una actividad alternativa a [Exploración de la Resolución de Problemas](/s/csd1-2021/lessons/3/)**.",
          "preparation": "-   Imprime la guía de actividad para cada alumno\n-   Prepara tangrams para los estudiantes, o imprime una hoja de tangram y consigue tijeras para cada grupo.\n-   Póster para anotar las estrategias de definición de los problemas en la reflexión final",
          "purpose": "Esta lección proporciona a los alumnos más práctica con el proceso de resolución de problemas en una variedad de contextos. Destaca el hecho de que el proceso de resolución de problemas es especialmente útil cuando se abordan problemas mal definidos. La lluvia de ideas final de la lección proporciona a los alumnos algunas estrategias y preguntas que pueden formular para definir mejor los problemas por sí mismos, ya que éste suele ser el paso más crítico. Los problemas vistos en esta lección también ayudan a impulsar un debate en la siguiente lección sobre los tipos de problemas para cuya resolución son adecuados los ordenadores.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a diferentes tipos de problemas?**\n\nEn esta lección, aplicarás el proceso de resolución de problemas a varios problemas diferentes, cada uno de ellos cada vez más complejo. "
        },
        "csd1-2021/Exploring Problem Solving - Games Theme (Alternate Lesson 3)": {
          "name": "Explorar la Resolución de Problemas - Tema de Juegos (Lección 3 Alterna)",
          "overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a muchos tipos diferentes de problemas?**\n\nEn esta lección los alumnos aplican el proceso de resolución de problemas a tres problemas diferentes para comprender mejor el valor de cada paso. Resolverán un laberinto, organizarán un equipo para correr lo más rápido posible y diseñarán un juego. Los problemas se vuelven cada vez más complejos y poco definidos para destacar cómo el proceso de resolución de problemas es especialmente útil cuando se abordan este tipo de problemas. La lección concluye con la reflexión de los alumnos sobre su experiencia con el proceso de resolución de problemas. Justificarán la inclusión de cada paso y harán una lluvia de preguntas o estrategias que puedan ayudarles a definir mejor los problemas abiertos, ya que éste suele ser el paso más crítico.\n\nEs probable que esta lección lleve dos periodos de clase o más para completarla. Los dos primeros problemas pueden entrar en un solo período de clase, pero el tercero deberá trasladarse a un segundo día.\n\n**Esta es una actividad alternativa a [Exploración de la Resolución de Problemas](/s/csd1-2021/lessons/3/)**.",
          "preparation": "-   Imprime la guía de la actividad para cada alumno\n-   Papel de borrador para el problema del relevo de la carrera de parejas\n-   Cartel para anotar las estrategias de definición de los problemas en la reflexión final",
          "purpose": "Esta lección proporciona a los alumnos más práctica con el proceso de resolución de problemas en una variedad de contextos. Destaca el hecho de que el proceso de resolución de problemas es especialmente útil cuando se abordan problemas mal definidos. La lluvia de ideas final de la lección proporciona a los alumnos algunas estrategias y preguntas que pueden formular para definir mejor los problemas por sí mismos, ya que éste suele ser el paso más crítico. Los problemas vistos en esta lección también ayudan a impulsar un debate en la siguiente lección sobre los tipos de problemas para cuya resolución son adecuados los ordenadores.",
          "student_overview": "**Pregunta del Día: ¿Cómo podemos aplicar el proceso de resolución de problemas a diferentes tipos de problemas?**\n\nEn esta lección, aplicarás el proceso de resolución de problemas a varios problemas diferentes, cada uno de ellos cada vez más complejo. "
        }
      }
    }
  }
}