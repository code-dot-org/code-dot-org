"fa-AF":
  data:
    script:
      name:
        20-hour:
          desc: معرفی K-8 دوره علوم کامپیوتر
          Unplug1: مرحله 1
          Maze: مرحله 2
          Unplug2: مرحله 3
          Unplug3: مرحله 4
          Artist: مرحله 5
          Unplug4: مرحله 6
          Artist2: مرحله 7
          Unplug5: مرحله 8
          Farmer: مرحله 9
          Unplug6: مرحله ۱۰
          Artist3: مرحله ۱۱
          Unplug7: مرحله ۱۲
          Farmer2: مرحله ۱۳
          Unplug8: مرحله ۱۴
          Artist4: مرحله ۱۵
          Unplug9: مرحله ۱۶
          Farmer3: مرحله ۱۷
          Unplug10: مرحله ۱۸
          Artist5: مرحله ۱۹
          Unplug11: مرحله ۲۰
        Hour of Code:
          desc: ساعتی با کد
          Maze: مرحله 1
        Edit Code:
          desc: ویرایش کد (آزمایشی)
          MazeEC: مرحله 1
        2014 Levels:
          desc: Bounce (beta)
          Bounce: مرحله 1
        Builder Levels:
          desc: پازل‌های ایجاد شده توسط کاربر (آزمایشی)
          Custom: مرحله 1
        Flappy Levels:
          desc: پرنده شل و  ول
          Flappy: مرحله 1
        Jigsaw Levels:
          desc: جورچین (آزمایشی)
          Jigsaw: مرحله 1
        Step Levels:
          desc: مارپیچ (آزمایشی)
          MazeStep: Stage Step
        edit-code:
          desc: ویرایش کد (آزمایشی)
          MazeEC: مرحله 1
          Webapp: مرحله 2
          ArtistEC: مرحله 3
          StudioEC: مرحله 4
        events:
          desc: Bounce (beta)
          Bounce: مرحله 1
          Studio: مرحله 2
        builder:
          desc: پازل‌های ایجاد شده توسط کاربر (آزمایشی)
          Custom: مرحله 1
        flappy:
          desc: پرنده شل و  ول
          Flappy: مرحله 1
        jigsaw:
          desc: جورچین (آزمایشی)
          Jigsaw: مرحله 1
        step:
          desc: مارپیچ (آزمایشی)
          MazeStep: Stage Step
        wordsearch:
          desc: Spelling Bee (beta)
          WordSearch: مرحله 1
    game:
      name:
        Unplug1: آشنایی با علوم کامپیوتر
        Maze: پیچ و خم
        Multi: Multiple Choice Stuffs
        Unplug2: تفکر محاسباتی
        Unplug3: 'برنامه نویسی روی کاغذ شطرنجی '
        Artist: هنرمند
        Unplug4: الگوریتم
        Artist2: هنرمند 2
        Unplug5: توابع
        Farmer: کشاورز
        Unplug6: مشروط
        Artist3: هنرمند 3
        Unplug7: آهنگ سازی
        Farmer2: کشاورز 2
        Unplug8: انتزاع
        Artist4: هنرمند 4
        Unplug9: برنامه نویسی رله
        Farmer3: کشاورز 3
        Unplug10: اینترنت
        Artist5: هنرمند 5
        Unplug11: خلاصه
        MazeEC: پیچ و خم
        Bounce: Bounce
        Flappy: پرنده شل و  ول
        Jigsaw: جورچین
        MazeStep: Maze Step Mode
        Wordsearch: Wordsearch
        Webapp: Webapp
        ArtistEC: هنرمند
        TextMatch: Text Match
        StudioEC: آزمایشگاه بازی
    trophy:
      name:
        Bronze: برنز
        Silver: نقره
        Gold: طلا
    concept:
      description:
        sequence: دنباله
        if: بلوک "if"
        if_else: بلوک if-else
        loop_times: بلوک تکرار زمان
        loop_until: بلوک "Repeat Until"
        loop_while: بلوک while
        loop_for: بلوک شمارشگر
        function: توابع
        parameters: معادله با پارامترها
    level:
      instructions:
        maze_2_2: می‌تونی توی گرفتن این خوک شیطون به من کمک کنی؟ چند بلوک "حرکت به
          جلو" را روی هم بچین و "اجرا" را بزن تا به من کمک کنی به اونجا برسم.
        maze_2_1: این خوک حسابی پرهای منو بهم ریخته. کمکم کن پیداش کنم!
        maze_2_2_5: مسیر رو دنبال کن و منو به خوک نادان برسون. حواست به بمب ها باشه
          تا پرهام کنده نشن!
        maze_2_3: منو به سمت این شیطان سبز راهنمایی کن! (حواست به بمب ها باشه)
        maze_2_4: آرامشتو حفظ کن و به من کمک کن این خوک بد رو پیدا کنم. اگر پیداش
          نکنم حسابی عصبی میشم!
        maze_2_5: یه راه وجود داره که من با ۲ بلوک برسم به این خوک نادون. میتونی راهشو
          پیدا کنی؟
        maze_2_6: سعی کن فقط با استفاده از 3 بلوک من رو به این مزاحم سبز رنگ برسونی.
        maze_2_7: به من کمک کن تا با کمترین تعداد بلوک این خوک بد رو نابود کنم. سعی
          کن بیش از یک بلوک "تکرار" استفاده کنی.
        maze_2_8: 'When a block is grey, that means you can''t delete it. Solve this
          puzzle using the "repeat" block that repeats 3 times. Try putting these
          3 blocks inside the grey "repeat" block: move, move, turn.'
        maze_2_9: خوب! سعی کن از بلوک جدید "تکرار کن تا" استفاده کنی. تا زمانی که
          من به خوک مزاحم برسم اون تکرار میشه.
        maze_2_10: خب، آخرین بار تمرین - آیا شما می توانید فقط با استفاده از ۴ بلوک
          این یکی را حل کنید؟
        maze_2_11: انسان عزیز. من هست زامبی. من هست گرسنه. باید... رسید... به آفتاب‌گردان...
          می‌توانید شما من را برسانید به آنجا فقط با ۵ بلوک؟
        maze_2_12: خب، این مشابه است، اما کمی متفاوت. آیا می توانید آن را فقط با ۵
          بلوک انجام دهید؟
        maze_2_13: با استفاده از بلوک "اگر" به من اجازه بده که تصمیم بگیرم چه موقع
          بچرخم. تذکر:‌ فقط یک بلوک بیشتر احتیاج داری، پس یاد بگیر چطوری درست کنی
          که دفعه بعد شما بتوانید به کمک خودت این را انجام دهید.
        maze_2_14: خب، این درست مثل پازل گذشته است، اما باید به یاد داشته باشید شما
          چگونه از بلوک "اگر" و بلوک "تکرار" همزمان استفاده کردید.
        maze_2_15: من آفتاب گردان می خواهم! با استفاده از بلوک "اگر" من را با کمترین
          تعداد بلوک ها به آنجا برسان.
        maze_2_16: خوب، اجازه بدید که دوباره این تمرین را انجام دهیم - این خیلی متفاوت
          نیست، اما مراقب بلیدنی ها باش!
        maze_2_17: بلوکهای "if-else" شرایط را بررسی میکنند، و سپس یک کار یا کار دیگری
          را انجام میدهند. سعی کن با استفاده از بلوک جدید من را به آفتاب گردان برسانی.
        maze_2_18: یک تمرین بیشتر با بلوک "if-else"، آیا می توانید با سعی خود جواب
          درست بدهی؟
        maze_2_19: آيا می توانید با اضافه کردن فقط ۳ تا بلوک به من کمک کنید که مارپیج
          سخت را حل کنم؟ اگر درست انجام بدهید، من می توانم حرکت کنم هر مسیر مارپیچ
          را بدون درنظر گرفتن طول آن.
        turtle_1_1: سلام، من یک هنرمند هستم. شما می توانید با نوشتن کد از من بخواهید
          تقریبا هر چیزی را ترسیم کنم. با چند بلوک از من بخواهید تا روی خط‌ های خاکستری
          در این تصویریک چیزی ترسیم کنم.
        turtle_1_2: 'حالا، یک مربع ترسم کنید. توجه: رنگ مورد علاقه خود را دربلوک جدید"set
          color" انتخاب کنید.'
        turtle_1_3: با استفاده از فقط ۳ بلوک یک مربع بساز.
        turtle_1_4: 'یک مثلث با ضعلهایی در رنگ های مختلف ترسیم کنید، از گزینه "random
          color" که رنگ های مختلف را انتخاب میکند استفاده کنید. راهنمایی: با کلیک
          کردن روی شماره در بلوک چرخش میزان چرخش را بیابید.'
        turtle_1_5: حالا برای تمرین، یک مثلث و بعد یک مربع بکش تا یک پاکت نامه بسازی.
        turtle_1_6: 'می تونی بگی چه جوری میشه این مثلث و مربع رو کشید؟ راهنمایی: اول
          مثلث رو بکش، بعد ببین چه قدر باید اون رو بچرخونی قبل از اینکه مربع رو بکشی.'
        turtle_1_7: خوب، حالا کمی سخت تر- ببینید اگر شما می توانید این عینکهای سبز
          را ترسیم کنید. ضلعهای مربعها 100 پیکسل هستند، ومربعها 50 پیکسل از هم فاصله
          دارند. فراموش نکنید که دررنگ سبزترسیم کنید!
        turtle_1_8: خوب، سعی کن که ببینی چی میشه اگر این کد رو اجرا کنی(یا روی "Run"
          کلیک کن تا امتحانش کنی). بعد، به تا جایی که لازمه این کار رو تکرار کن تا
          نقاشی کامل بشه. رنگ ها هر دفعه عوض میشن.
        turtle_1_9: می تونی بفهمی که چه عددی رو باید جای علامت سوال بگذاری تا یک دایره
          بشه کشید؟
        turtle_1_10: 'آفرین، تمومش کردی! حالا هر چی دلت می خواد بکش. یه سری ایده جالب:
          یه تکه چوب، دونه های برف، مارپیچ. بلوک جدید "set width" رو هم امتحان کن.
          خوش بگذره!'
        turtle_4_1: 'می تونی یک مثلث(با طول هر ضلع 100 پیکسل) رو فقط با 3 تا بلوک
          بکشی؟ راهنمایی: از یک بلوک "repeat" استفاده کن.'
        turtle_4_2: یک بلوک "چرخش 90 درجه به راست" را جایی در وسط این برنامه که انجام
          شده قرار بده تا این مثلث‌ها رسم شوند.
        turtle_4_3: خوب، این کدی هست که برای کشیدن یک عدد مثلث نوشتی. می تونی یک بلوک
          "repeat"  و یک بلوک "turn" رو برای کشیدن یک گل خوشگل اضافه کنی؟
        turtle_4_4: 'حالا کد از پازل قبلی ولی با 36 درجه چرخش پس از ترسم هرمثلث. چند
          بار این باید تکرار شود؟ (راهنمایی: پس از 360 درجه چرخش رسم دایره کامل خواهد
          شد)'
        turtle_4_5: 'حالا کد از پازل قبلی، اما با 36 بار تکرار هر چرخش. چرخش چند درجه
          باید باشد؟ (راهنمایی: پس از 360 درجه چرخش رسم دایره کامل خواهد شد)'
        turtle_4_6: با استفاده از تنها 3 بلوک, ایا شما می توانید یک مربع با لبه های
          20 پیکسل ترسیم کنید?
        turtle_4_7: 'این کد برای طراحی مربع از پازل قبلی هست. ایا می توانید با تکرار
          این کد 10 مربع مجاور مانند نردبان ترسیم کنید? راهنمایی: شما فقط 2 بلوک بیشترنیاز
          دارید.'
        turtle_4_8: این جواب پازل قبلی است. ایا می توانید با اضافه کردن فقط 2 بلوک
          بیشتر این ترسیم را کامل کنید؟
        turtle_4_9: این جواب پازل قبلی است. چند درجه چرخش نیاز است تا این ترسیم را
          کامل کنید؟ (احتمالا چند بار باید حدس بزنید)
        turtle_4_10: این جواب پازل قبلی است. چند بار این کد باید تکرار شود تا این
          ترسیم را کامل کنید?
        turtle_4_11: با تغییر شماره دربلوکهای "turn" و "repeat" الگوهای مختلف را امتحان
          کنید. یا با تغییر بقیه کد هر چیزی می خواهید ترسیم کنید.
        maze_karel_1_1: سلام، من یک کشاورز هستم. من  برای مسطح کردن زمین مزرعه ام
          برای کشت به کمک شما نیاز دارم. من را به توده خاک جابجا کنید وبا استفاده
          از بلوک "remove" آن را حذف کنید.
        maze_karel_1_2: بعد، من را داخل سوراخ کنید و انرا با دو بیل خاک پرکنید, از
          بلوک "fill" استفاده کنید.
        maze_karel_1_3: من را نزدیک توده خاک  جابجا کنید و بگویید با  استفاده از کمترین
          تعداد بلوک چند تا بیل خاک باید دور ریخته شود.
        maze_karel_1_4: 'ایا می توانید به من کمک کنید تا این چهار کوه خاک را حذف کنم؟
          راهنمایی: اگرمی توانید از بلوک تکراراستفاده کنید.'
        maze_karel_1_5: 'به من کمک کنید تا همه این حفره ها را با 5 بیل خاک پر کنم.
          راهنمایی: می توانید بلوک "repeat" را داخل بلوک "while" قرار دهید.'
        maze_karel_1_6: همه کوههای خاک را با استفاده از کمترین تعداد بلوک از بین ببرید.
          گزینه های جدید در منوی بلوک "while" به من میگوید ایا من بر روی یک کوه خاک
          یا یک حفره ایستاده ام.
        maze_karel_1_7: 'اوه، من یک چاه پیدا کردم. نمیدونم چند بیل خاک نیاز دارد.
          میتونید یک برنامه بنویسید که تا همسطح شدن چاه با زمین اون رو پر کنه؟ '
        maze_karel_1_8: به من کمک کنید تا سوراخی که در انتهای زمین هست را پر کنم,
          از کمترین تعداد ممکن بلوک استفاده کنید.
        maze_karel_1_9: |
          مجبورم کن تا تمام این توده های کثیفی را پاک کنم. سعی کن تا از کمترین تعداد بلوک ها تا حد ممکن استفاده کنی.
          تذکر: سعی کن از یک بلوک "while" استفاده کنی.
        maze_karel_1_10: من تا دیروقت کار می کنم، به همین خاطر الان تاریک شده است
          و نمی توانم بگویم توده ها چه اندازه ای هستند. حالا من تمام گزینه هایی که
          رو بلوک while داشتم را ندارم. من را در امتداد  میدان حرکت بده و اگر توده
          ای بود آن را پاک کن.
        maze_karel_1_11: |
          هنوز بیرون تاریک است. من را در طول میدان حرکت بده. اگر توده ای بود آن را پاک کن و اگر سوراخی بود آن را پر کن.
          تذکر: از منوی کرکره ای گزینه ها بر روی بلوک "if" استفاده کن.
        turtle_2_1: 'سلام. من هست زامبی هنرمند. من نقاشی را دوست داشت! به من کمک کن
          تا یک مربع با یک رنگ خاص رسم کنم. نکته مهم: همه بلوک‌ها را داری اما حالا
          داخل دسته‌بندی قرار گرفتن.'
        turtle_2_2: به استفاده از توابع که به شما اجازه می دهند بلوک های جدید را بسازید،
          خوش آمدید! یک بلوک "رسم یک چارگوش" که در دسته "توابع" می توانید پیدا کنید
          را جهت رسم یک چارپوش سبز 50 در 50 امتحان کنید.
        turtle_2_3: با استفاده از بلوک "تکرار" (در دسته "حلقه ها") سه چارگوش با اندازه
          100 با زاویه 120 درجه از هم دیگر رسم کنید. این کار را با سه رنگ تصادفی متفاوت
          انجام دهید.
        turtle_2_4: 'حالا میخوایم یه کار با حال بکنیم.کد را طوری تغییر بدید که 36
          مربع با اندازه 100 پیکسل ساخته بشه و هر کدوم 10 درجه از هم فاصله داشته باشن.
          نکته: ممکنه برای جرکت سریعتر من به لغزنده (اسلایدر) نیاز پیدا کنید.'
        turtle_2_5: مربعهایی با اندازه های 50و60و70و80و90 پیکسل رسم کنید. باید از
          تابع "رسم یک مربع" 5 مرتبه استفاده کنید.
        turtle_2_6: 'خوب، این برنامه برای رسم مربعهایی مانند مربعهای قبلی از یک کانتر
          استفاده میکنه. شما میخواهید مربعی هم اندازه کانتر رسم کنید بنابراین از بلوک
          "کانتر" استفاده کنید. نکته: کانتر در طبقه بندی متغیرها قرار دارد.'
        turtle_2_7: این یه برنامه برای رسم مارپیچ هست، اما بلوکها غیرفعال شدن تا نتونن
          حرکت کنن. با استفاده از یک بلوک " شمارش با" (در دسته بندی لوپها) و یک بلوک
          "شمارشگر" (در دسته بندی متغیرها) یک برنامه بنویس که عین همون مارپیچ رو رسم
          کنه.
        turtle_2_7_5: در دسته بندی توابع یک تابع رسم آدم برفی وجود داره. دو تا آدم
          برفی به ارتفاع 250 و 100 رسم کن.
        turtle_2_8: این یکی یه ذره قلق داره. از توابع رسم آدم برفی و بلوک جدید "بپر
          جلو" (در دسته بندی اقدامات) استفاده کن. 3 تا آدم برفی با رنگهای مختلف رسم
          کن که هر کدوم 100 پیکسل از هم فاصله دارن.
        turtle_2_9: با استفاده ازیک حلقۀ "count with" خانواده ای از آدم برفی ها بکش
          با قدهای 110، 100، 90، 80 و 70. آدم برفی ها باید 60 پیکسل با هم فاصله داشته
          باشند.
        turtle_2_10: مقداری کُد برای آزمایش کردن با مارپیچ های مختلف اینجاست. چه میشود
          اگر مقدار "چرخش" را تغییر دهی؟ یا یک رنگ رندوم در حلقه بگذاری؟ هرچه دوست
          داری بکش.
        maze_karel_2_1: 'سعی کن با استفاده از بلوک ها به من کمک کنی تا تمام کُپه ها
          را حذف و تمام سوراخ های روی زمین را پر کنم. سعی کن بجای استفاده از بلوک
          های زیاد از حلقه ها استفاده کنی. راهنمائی: میتوانی یک حلقه را داخل یک حلقۀ
          دیگر بکار ببری.'
        maze_karel_2_2: ما بلوک خودمان را با نام "fill 5" تعریف کردیم، که الان در
          زمرۀ "توابع" است. با استفاده از آن در پر کردن این چاله به من کمک کن.
        maze_karel_2_3: با استفاده از بلوک تابع جدید "fill 5" من را وادار کن چاله
          ها را پر کنم. باید بلوک "fill 5" را از دستۀ "توابع" بیرون بکشی.
        maze_karel_2_4: یک تابع جدید تعریف کن که به اندازۀ 7 بیلچه حذف کند. سپس با
          استفاده از آن برنامه ای بنویس که به من کمک کند تمام کپه ها را حذف کنم.
        maze_karel_2_5: یک تابع جدید بساز که به اندازۀ 6 بیلچه از یک کپه حذف کند،
          و با استفاده از آن به من کمک کن تا تمام کپه ها را صاف کنم.
        maze_karel_2_6: با استفاده از دو تابع جدید "fill 8" و "remove 8" به من کمک
          کن تا کپه را صاف و چاله را پر کنم.
        maze_karel_2_7: یک گاو در زمین من است! یک تابع جدید بنویس که به من کمک کند
          تا با اجتناب از گاو کپه را حذف کنم. تمام بلوک هایت را داخل تابع جدید بگذار.
        maze_karel_2_8: با استفاده از این تابع جدید "avoid the cow and remove 1"،
          کمکم کن تا تمام کپه ها را حذف کنم.
        maze_karel_2_9: خوب، اینجا یک تابع است که 4 کُپۀ مختلف خاک در یک ستون عمودی
          را حذف میکند. سعی کن این تابع را در یک حلقه قرار دهی بطوری که تمام کُپه
          های خاک را تنها با استفاده از چند بلوک جدید حذف کنی.
        maze_karel_2_10: مرا در میان زمین حرکت بده و با استفاده از این دو تابع کمکم
          کن تا تمام کپه ها را حذف و تمام چاله ها را پر کنم.
        turtle_3_1: این پازل به شما نشان می دهد توابع "draw a square" و "draw a circle"
          چگونه تعریف می شوند. تعریف یک تابع بلوک های آن را اجرا نمی کند. شما باید
          بلوک "draw a square" را بیرون آورید تا واقعاً یک مربع رسم کنید.
        turtle_3_2: با استفاده از تابع "draw a square" بعنوان مثال، یک تابع "draw
          a triangle" ایجاد و از آن استفاده کن.
        turtle_3_3: 'اطراف گربه ها حصار مثلثی و دور گاو یک حصار مربعی بکش. راهنمائی:
          در خلال پیشرفت برنامه را تست کن.'
        turtle_3_4: ببین اگر میتوانی، کشف کن که با استفاده از "رسم یک مربع" و "رسم
          یک مثلث" (و چند بلوک دیگر)، چگونه خانه ای اطراف شیر بکشی.
        turtle_3_5: 'حالا یک تابع جدید با نام "draw a house" ایجاد کن و با استفاده
          از آن، دو گربه را در آن جای بده. راهنمائی: با استفاده از بلوک "do something"
          یک تابع جدید ایجاد کن و با تایپ متن دلخواهت به آن اسم بده.'
        turtle_3_6: 'با استفاده از "draw a square" بعنوان مثال، یک ورودی با نام "length"
          به "draw a triangle" اضافه کن.سپس مثلث هائی با اندازه های مختلف رسم کن.
          (راهنمائی: برای اضافه کردن یک ورودی به یک تابع روی ستاره کلیک کن)'
        turtle_3_7: یک ورودی با نام "length" به "draw a house" اضافه کن و یک خانۀ
          بزرگ برای فیل بساز(طول هر لبه 150 پیکسل)
        turtle_3_8: تمام بلوک های پازل قبلی اینجا هستند. "draw a house" را طوری تغییر
          بده که من بعد از رسم یک خانۀ جدید به گوشۀ پائین و سمت راست برسم. با استفاده
          از این تابع اصلاح شده سه خانه رسم کن.
        turtle_3_9: می تونی تابع "draw a house" رو بدون کمک دوباره ایجاد کنی؟ تلاش
          بکن و بعد یک ردیف از خانه ها رو بکش .
        turtle_3_10: خیلی بلد شدی! حالا با دانسته هات هر چیزی که دلت می خواد بکش.
          مثلا یه ستاره، یا یه مارپیچ یا یه دانه برف خوشگل.
        maze_karel_debug_seq_1: ' به اشکال زدایی خوش آمدی! کد من درست کار نمی کند.
          می تونی محل مشکل رو پیدا و درستش کنی طوری که من بتونم مزرعم رو صاف و آماده
          برای کاشت کنم؟'
        maze_karel_debug_seq_2: این برنامه چش شده؟ چطوری میتونی درستش کنی تا من موزاییک
          رو بردارم؟
        maze_karel_debug_repeat: اشکال این برنامه را جوری بیابید تا زمینم خوب و صاف
          شود.
        maze_karel_debug_while: چگونه میتوانید این برنامه را ویرایش کنید تا به من
          در پر کردن حفره کمک کنید؟
        maze_karel_debug_if: کمک! اشکال برنامه را برطرف کنید تا زمین من کاملا مسطح
          شود.
        maze_karel_debug_if_else: اشکال برنامه را جوری پیدا کنید تا من بتوانم همه
          چاله ها را پر کنم و همه کوهها را حذف کنم.
        maze_karel_debug_function_1: چه چیزی در این برنامه باید ویرایش شود تا به من
          کمک کنید همه کوهها را حذف کنم؟
        maze_karel_debug_function_2: ایا می توانید این برنامه را جوری ویرایش کنید
          تا من بتوانم زمینم را مسطح کنم؟
        maze_karel_debug_function_3: 'این برنامه را جوری ویرایش کنید تا من بتوانم
          همه کوهها ی روی زمینم را حذف کنم. '
        turtle_5_1: سعی کن این برنامه رو اجرا کنی و بعد تغییرش بده تا ببینی چه اتفاقی
          می افتد. می تونی سر دربیاری که چه جوری کار می کنه؟  (یا پاکش کن و با یک
          چیز کاملا جدید جایگزینش کن)
        turtle_5_2: سعی کن این برنامه رو اجرا کنی و بعد تغییرش بده تا ببینی چه اتفاقی
          می افتد. می تونی سر دربیاری که چه جوری کار می کنه؟  (یا پاکش کن و با یک
          چیز کاملا جدید جایگزینش کن)
        turtle_5_3: سعی کن این برنامه رو اجرا کنی و بعد تغییرش بده تا ببینی چه اتفاقی
          می افتد. می تونی سر دربیاری که چه جوری کار می کنه؟  (یا پاکش کن و با یک
          چیز کاملا جدید جایگزینش کن)
        turtle_5_4: سعی کن این برنامه رو اجرا کنی و بعد تغییرش بده تا ببینی چه اتفاقی
          می افتد. می تونی سر دربیاری که چه جوری کار می کنه؟  (یا پاکش کن و با یک
          چیز کاملا جدید جایگزینش کن)
        turtle_5_5: سعی کن این برنامه رو اجرا کنی و بعد تغییرش بده تا ببینی چه اتفاقی
          می افتد. می تونی سر دربیاری که چه جوری کار می کنه؟  (یا پاکش کن و با یک
          چیز کاملا جدید جایگزینش کن)
        turtle_5_6: سعی کن این برنامه رو اجرا کنی و بعد تغییرش بده تا ببینی چه اتفاقی
          می افتد. می تونی سر دربیاری که چه جوری کار می کنه؟  (یا پاکش کن و با یک
          چیز کاملا جدید جایگزینش کن)
        maze_3_1: من باید اون خوک رو بگیرم! چند تا فراخوانی move(); رو بنویس تا من
          بتونم تخم مرغ هام رو پس بگیرم.
        maze_3_2: یه برنامه برای من بنویس تا بتونم راه رو تا رسیدن به خوک ادامه بدم.
        maze_3_3: من جه جوری باید به خوک برسم؟ حواست باشه که من به اون جعبه های بمب
          برخورد نکنم!
        maze_3_4: آخ! یه برنامه برام بنویس که من رو از کنار بمب ها بگذرونه و به خوک
          برسونه.
        bounce_1: Attach a block to the "when left arrow" block and press "Run". Move
          the paddle using the left arrow to reach the finish target.
        bounce_2: Attach a block to the "when right arrow" and "when left arrow" blocks.
          Move the paddle to reach both finish targets.
        bounce_3: Now try something similar with the "when up arrow" block. Move the
          paddle to the finish target at the top.
        bounce_4: This time you need to add four blocks. Move the paddle to all four
          finish targets to complete this puzzle.
        bounce_5: We're going to send a ball flying down towards the paddle. Attach
          a block to the "when ball hits paddle" block to ensure the ball reaches
          the finish target.
        bounce_6: Now the finish target is on the top. You need to attach blocks to
          both of the "when ball hits" blocks to solve this puzzle.
        bounce_7: Attach blocks to each of the "when" blocks. Bounce the ball until
          it hits the finish target.
        bounce_10: There is a now a goal at the top. Attach the "score point" and
          "score opponent point" blocks to the "when ball in goal" and "when ball
          misses paddle" blocks to make a game. See how many points you can score
          before your opponent scores twice.
        bounce_11: You can now attach blocks to the "when run" block. You have to
          attach the new "launch new ball" block in more than one place. Also, try
          changing the scene or the speed of the paddle and the ball and see how many
          points you can score before your opponent scores twice.
        bounce_12: Create your own Bounce game. You can change all the visuals and
          the rules. When you're done, click Finish to let friends try your game on
          their phones.
        Custom_builder: بلوک‌ها را از جعبه‌ابزار به فضای کاری بکش تا مرحله دلخواه
          خود را بسازی. وقتی آماده شد، "اجرا" را بزن.
        flappy_1: یک بلوک به بلوک "هنگام کلیک" بچسبان و سپس "اجرا" را بزن. کلیک کن
          یا صفحه را لمس کن تا Flappy حرکت کرده و به هدف برسد.
        flappy_2: حالا کمی زمین اضافه کردیم. یک بلوک به بلوک "هنگام برخورد با زمین"
          بچسبان. وقتی پرنده زمین می‌خورد، برنامه‌ات باید بازی را تمام کند.
        flappy_3: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_4: Flappy از وسط موانع پرواز میکنه مگر اینکه کدی بنویسی تا باعث برخوردش
          بشه. یک بلوک به بلوک "هنگام برخورد با مانع" بچسبان. هنگامیکه Flappy با اولین
          سری از لوله ها برخورد کنه، برنامه‌ات باید بازی رو تموم کنه.
        flappy_5: حالا بیا یک تابلوی امتیاز اضافه کنیم، و وقتی Flappy از موانع عبور
          میکنه، امتیازها را بشماریم. به بلوک "هنگام عبور از موانع" اضافه کن، و سپس
          با پرواز دادن Flappy از بین اولین سری از لوله‌ها، یک امتیاز بگیر.
        flappy_6: حالا ببین می‌تونی هنوز امتیاز بگیری بعد از اینکه میزان پرش Flappy
          را کمتر یا بیشتر کردی.
        flappy_7: Next, try changing the scene by attaching another block to the "when
          run" block.
        flappy_8: امکان تغییر ظاهر در هر زمانی وجود داره، نه فقط وقتی که بازی شروع
          میشه. سعی کن هنگامیکه اتفاقات دیگری رخ میده، یک صحنه تصادفی قرار بدی، مثلا،
          هنگام عبور از یک مانع.
        flappy_9: برای پیچیده‌تر کردن قضیه، هنگام برخورد با یک مانع یا زمین، بجای
          پایان دادن به بازی، سعی کن امتیاز رو به 0 برگردونی.
        flappy_11: Create your own Flappy game. You can change all the visuals and
          all the rules, even the gravity. When you're done, click Finish to let friends
          try your game on their phones.
        flappy_k1_1: Play Flappy
        flappy_k1_2: یک بلوک به بلوک "هنگام کلیک" بچسبان و سپس "اجرا" را بزن. کلیک
          کن یا صفحه را لمس کن تا Flappy حرکت کرده و به هدف برسد.
        flappy_k1_3: حالا کمی زمین اضافه کردیم. یک بلوک به بلوک "هنگام برخورد با زمین"
          بچسبان. وقتی پرنده زمین می‌خورد، برنامه‌ات باید بازی را تمام کند.
        flappy_k1_4: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_k1_5: Flappy از وسط موانع پرواز میکنه مگر اینکه کدی بنویسی تا باعث
          برخوردش بشه. یک بلوک به بلوک "هنگام برخورد با مانع" بچسبان. هنگامیکه Flappy
          با اولین سری از لوله ها برخورد کنه، برنامه‌ات باید بازی رو تموم کنه.
        flappy_k1_6: حالا بیا یک تابلوی امتیاز اضافه کنیم، و وقتی Flappy از موانع
          عبور میکنه، امتیازها را بشماریم. به بلوک "هنگام عبور از موانع" اضافه کن،
          و سپس با پرواز دادن Flappy از بین اولین سری از لوله‌ها، یک امتیاز بگیر.
        flappy_k1_7: See if you can score multiple points for making it past an obstacle
        flappy_k1_8: Next, try changing the scene by attaching another block to the
          "when run" block.
        flappy_k1_9: Try changing the player by attaching a "set player" block to
          the "when run" block.
        jigsaw_1: بر روی بلوک کلیک کنید
        jigsaw_2: بلوک را به سمت هدف بکش
        jigsaw_3: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_4: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_5: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_6: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_7: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_8: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_9: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_10: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_11: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_12: بلوک‌ها را مرتب کنید تا تصویر شکل بگیرد
        jigsaw_13: Fix the puzzle!
        mazestep_1: اینجا محل توضیح مرحله مارپیچ است
        mazestep_2: اینجا محل توضیح مرحله مارپیچ است
        mazestep_3: اینجا محل توضیح مرحله مارپیچ است
        mazestep_4: اینجا محل توضیح مرحله مارپیچ است
        mazestep_5: اینجا محل توضیح مرحله مارپیچ است
        studio_c2_1: می‌تونی کاری کنی که این سگ بگه "سلام بر جهان"؟
        studio_c2_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_c2_3: Can you write a program to make this dog move to the cat?
        studio_c2_4: می‌تونی برنامه‌ای بنویسی که باعث حرکت این سگ به سمت گربه بشه،
          و وقتی به گربه رسید، کاری کنی که گربه بگه "سلام"؟
        studio_c2_5: Can you write a program to make the octopus say "hello" when
          it is clicked?
        studio_c2_6: Can you write a program to make this penguin move around using
          the up / down / left /right keys to hit all of the targets?
        studio_c2_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c2_8: Can you have the penguin say "Ouch!" and play a "hit" sound if
          he runs into the dinosaur, and then move him with the arrows to make that
          happen?
        studio_c2_9: Can you add a block to score a point when the penguin runs into
          the octopus, and then move him with the arrows until you score?
        studio_c2_10: Can you add blocks to change the background and the speed of
          the penguin, and then move him with the arrows until you score?
        studio_c2_11: Create your own story. When you're done, click Finish to let
          friends try your story on their phones.
        studio_c3_story_1: می‌تونی کاری کنی که این سگ بگه "سلام بر جهان"؟
        studio_c3_story_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_c3_story_3: Can you write a program to make this dog move to the cat?
        studio_c3_story_4: می‌تونی برنامه‌ای بنویسی که باعث حرکت این سگ به سمت گربه
          بشه، و وقتی به گربه رسید، کاری کنی که گربه بگه "سلام"؟
        studio_c3_story_5: Can you add a block to make the octopus happy?
        studio_c3_story_6: Create your own story. When you're done, click Finish to
          let friends try your story on their phones.
        studio_c3_game_1: Can you write a program to make the octopus say "hello"
          when it is clicked?
        studio_c3_game_2: Can you write a program to make this penguin move around
          using the up / down / left /right keys to hit all of the targets?
        studio_c3_game_3: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c3_game_4: Can you have the penguin say "Ouch!" and play a "hit" sound
          if he runs into the dinosaur, and then move him with the arrows to make
          that happen?
        studio_c3_game_5: Can you add a block to score a point when the penguin runs
          into the octopus, and then move him with the arrows until you score?
        studio_c3_game_6: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_c3_game_7: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
        studio_playlab_1: می‌تونی کاری کنی که این سگ بگه "سلام بر جهان"؟
        studio_playlab_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_playlab_3: Can you write a program to make this dog move to the cat?
        studio_playlab_4: می‌تونی برنامه‌ای بنویسی که باعث حرکت این سگ به سمت گربه
          بشه، و وقتی به گربه رسید، کاری کنی که گربه بگه "سلام"؟
        studio_playlab_5: Can you write a program to make the octopus say "hello"
          when it is clicked?
        studio_playlab_6: Can you write a program to make this penguin move around
          using the up / down / left /right keys to hit all of the targets?
        studio_playlab_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_playlab_8: Can you add a block to score a point when the penguin runs
          into the octopus, and then move him with the arrows until you score?
        studio_playlab_9: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_playlab_10: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
        studio_full_sandbox: Create your own game. When you're done, click Finish
          to let friends try your game on their phones.
        studio_k1_1: می‌تونی کاری کنی که این سگ بگه "سلام بر جهان"؟
        studio_k1_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_k1_3: Can you write a program to make this dog move to the cat?
        studio_k1_4: Make the dog move to the cat and the cat say "hello" when he
          gets there.
        studio_k1_5: Can you add a block to make the octopus happy?
        studio_k1_6: Create your own story! Move around the cat and dog, and make
          them say things.
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell
          the word STORY
        webapp_ec_simple: Create your web app by using createHtmlBlock.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking
          it in the new "penColor" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas:
          a stick figure, snowflake, or spiral. Also try the new "penWidth" block.
          Have fun!'
        studio_ec_sandbox: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
    levelbuilder:
      frozen line:
        instructions: سلام ! من السا هستم از آرندل . به من کمک کنید تا یک خط بکشم
          .
      frozen perpendicular:
        instructions: حالا بیاین ببینیم می تونیم دو تا خط بکشیم که با هم زاویه 90
          درجه داشته باشند . شما به بلوک چرخش و بلوک حرکت نیاز دارید .
      frozen square iterative:
        instructions: به نظر می رسد که ما نصف راه را برای کشیدن یک مربع رفته ایم .
          حالا بیایید برای ساختن یک مربع ،  4 خط را کنار هم قرار دهیم .
      frozen square loop:
        instructions: سلام ، من آنا هستم از آرندل ! بیایید با استفاده از بلوک تکرار
          یک مربع بکشیم که از بلوک های کمتری استفاده کنیم . چند بار (؟؟؟) باید بلوک
          داخل بلوک تکرار را ، تکرار کنیم تا یک مربع ساخته شود ؟
      frozen square loop 3x:
        instructions: 'حالا بیایید سه تا مربع بسازیم که هر کدام نسبت به دیگری می چرخد
          . مطمئن بشید که هر مربع 120 درجه نسبت به مربع جدید می چرخد . '
      frozen square snowflake:
        instructions: 'می تونید یک دونه برف با استفاده از بلوک تکرار و چرخاندن ده
          مربع و استفاده از بلوک چرخش 36 درجه بین هر مربع ، بسازید ؟ '
      frozen cross:
        instructions: 'از بلوک تکرار برای ساختن علامت بعلاوه استفاده کنید .آیا می
          دونید که السا می تواند به جلو و عقب حرکت کند ؟  '
      frozen cross rotate:
        instructions: 'حالا 10 بار تکرارش کنید . بین هر خط چند درجه چرخش وجود دارد
          ؟ '
      frozen cross rotate dense:
        instructions: 'حالا بیایید 90 بار تکرارش کنیم ! چند درجه بین 90 خط چرخش وجود
          دارد تا به 360 درجه برسد ؟ راهنمایی : عدد واقعا کوچکی هست .'
      frozen diamond:
        instructions: 'بیایید یک متوازی الاضلاع بسازیم . خیلی شبیه مربع هست فقط زاویه
          هایش با مربع فرق دارند : 60 و 120 درجه به جای 90 درجه '
      frozen diamond mini snowflake:
        instructions: 'آیا می دانید هر دانه ی برف شکل متفاوتی دارد ؟ حالا بیایید با
          استفاده از بلوک تکرار و 4 بار تکرار کردن شکل متوازی الاضلاع و چرخش 90 درجه
          به سمت راست بین هر متوازی الاضلاع، یک دانه ی برف جدید بسازیم . '
      frozen diamond snowflake:
        instructions: حالا بیایید با استفاده از بلوک تکرار و 10 بار تکرار کردن متوازی
          الاضلاع و چرخش 36 درجه بین هر متوازی الاضلاع ، یک دانه ی برف جدید بسازیم
          .
      frozen circle:
        instructions: دایره یک شکل خاص است . می توانید کشف کنید چه عددی را باید به
          جای علامت سوال ها بگزاریم تا یک دایره رسم شود؟
      frozen circle function:
        instructions: از بلوک جدید " دایره بکش " برای کشیدن 10 دایره ی روی هم افتاده
          استفاده کن . فراموش نکن که از بلوک به "جلو بپر" بین دایره ها استفاده کنی
          .
      frozen circle function in circle:
        instructions: 'حالا بیایید 20 دایره ی روی هم با استفاده از چرخش 18 درجه بین
          دایره ها ایجاد کنیم . '
      frozen circle function with parameter:
        instructions: اینجا بلوک "دایره بکش " وجود دارد که می تواند دایره هایی با
          اندازه ها متفاوت رسم کند . می توانی از آن برای رسم دایره ی کوچک با اندازه
          ی 5 و دایره ی بزرگ با اندازه ی 10 استفاده کنی ؟
      frozen snowflower:
        instructions: دانه برف های پیچیده را می توان با استفاده از اشکال شاده ایجاد
          کرد . آیا می توانید این الگو را با استفاده از 5 دایره ی اندازه ی 5 و 5 دایره
          ی اندازه ی 10 ایجاد کنید ؟
      frozen snowflake branch:
        instructions: 'از بلوک " create a snowflake branch" (یک شاخه از دانه برف را
          بکش ) برای ایجاد سه شاخه از دانه برف استفاده کن که به یک دانه ی برف شبیه
          می شود . '
      frozen snowflake full:
        instructions: حالا بیایید برای ساختن یک دانه ی برف زیبا ، از آن 8 بار استفاده
          کنیم !
      frozen freeplay:
        instructions: شما رسما یک هنرمند چیره دست شده اید ! یک سرزمین جادویی برفی
          بسازید .
      scrat 16:
        instructions: بلوط ! بلوط ! بلوط ! از بلوک "if" ، برای استفاده از تعداد کمتری
          بلوک ، استفاده کنید .
      scrat 17:
        instructions: خوب، اجازه دهید که دوباره برای تمرین--این بسیار متفاوت نیست،
          اما سازمان دیده بان را برای دیوار!
      scrat 18:
        instructions: بلوک "اگر دیگری" شرط را بررسی کرده و سپس یک چیز را نمی کند و
          یا یکی دیگر. من بلوط سعی کنید برای استفاده از این بلوک های جدید.
      scrat 19:
        instructions: یک تمرین بیشتر با بلوک "if-else"، آیا می توانید با سعی خود جواب
          درست بدهی؟
      scrat 20:
        instructions: شما فقط 3 بلوک برای کمک به من حل ماز پیچیده تر اضافه کنم؟ اگر
          شما آن را درست انجام دهید، می توانم هر مسیر منحنی هر طول راه رفتن. عجله
          کن! قادر به ذوب یخ است!
      Standalone_Artist_1:
        instructions: Welcome to Artist! First off, let's try to make a simple square
          using the turn right block and move forward block. Each side should be 100
          pixels long.
      Standalone_Artist_2:
        instructions: Draw this diamond with 120 and 60 degree angles and 150 pixel
          long sides.
      Standalone_Artist_3:
        instructions: Can you draw this hexagon with 100 pixel sides and 60 degree
          turns?
      Standalone_Artist_4:
        instructions: Now you've got a new block to play with, the loop. This will
          repeat a set of commands. What happens if you loop these commands 6 times?
      Standalone_Artist_5:
        instructions: How many times do you need to loop this diamond to draw the
          flower?
      Standalone_Artist_5.5:
        instructions: 'Notice how we simplified the diamond code by turning it into
          a loop. You can loop that whole sequence 12 times to draw the flower. Hint:
          You''ll need to turn 30 degrees after your diamond loop so you don''t keep
          drawing over the same diamond.'
      Standalone_Artist_6:
        instructions: 'Loop this hexagon code 6 times to create the design. How many
          degrees will you need to turn each time? Hint: divide the number of degrees
          in a circle by the number of times you are looping.'
      Standalone_Artist_7:
        instructions: 'A function is another programming tool to help you avoid repeating
          yourself. This function draws a flower, so you can use it any time you want
          to draw a flower. Use this and the new jump block to draw these flowers.
          Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8:
        instructions: Here's a function called "Draw a shape" that we've programmed
          to draw hexagons. Run the code to see what it does and then experiment with
          the function to see what happens. Can you make it draw a pattern of squares,
          triangles, or octagons?
      Standalone_Artist_9:
        instructions: Now go ahead and make whatever picture you'd like! You've even
          got an empty function that you can make do whatever you want!
    video:
      name:
        maze_intro: معرفی پیچ و خم
        artist_intro: معرفی هنرمند
        farmer_intro: معرفی کشاورز
        flappy_intro: Flappy Intro
        loop_times: بلوک تکرار زمان
        loop_until: بلوک "Repeat Until"
        if: بلوک "if"
        if_else: بلوک "if/else"
        if_else_scrat: بلوک "if/else"
        function: توابع
        loop_while: بلوک while
        loop_for: بلوک شمارشگر
        parameters: معادله با پارامترها
        hoc_wrapup: جمع بندی ساعتی با کد
        Unplug1: What is CS?
        Unplug2: تفکر محاسباتی
        Unplug3: 'برنامه نویسی روی کاغذ شطرنجی '
        Unplug4: الگوریتم
        Unplug5: توابع
        Unplug6: مشروط
        Unplug7: Songwriting
        Unplug8: انتزاع
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: خلاصه
        C1_happy_maps_unplugged: نقشه های شاد
        C1_moveitmoveit_unplugged: Move It, Move It
        C1_bigevent_unplugged: رویداد بزرگ
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: Pair Programming
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: Maze Debugging
        C1_bee_level_intro: Bee Level - Intro
        C1_artist_intro: معرفی هنرمند
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: پیچ و خم حلقه
        C1_bee_loops: حلقه های زنبور عسل
        C1_maze_loops: پیچ و خم حلقه
        C1_playlab_storytelling: Play Lab - Create a Story
        C1_planting_seed: Planting a Seed
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: معرفی پیچ و خم
        C2_artist_intro: معرفی هنرمند
        C2_zuck_repeat_loop: پیچ و خم حلقه
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: حلقه های زنبور عسل
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: شرطها زنبور عسل
        C2_playlab_createstory: Play Lab - Create a Story
        C2_graph_paper: 'برنامه نویسی روی کاغذ شطرنجی '
        C2_conditionals_with_cards: مشروط
        C2_binary_bracelets: دستبند دودویی
        C2_relay_programming: برنامه نویسی رله
        C2_paper_airplanes: Paper Airplanes
        C2_digital_footprint: Your Digital Footprint
        C3_maze_level_4: پیچ و خم حلقه
        C3_artist_intro: معرفی هنرمند
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: شرطها زنبور عسل
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: Nested Loops
        C3_farmer_while: While Loops
        C3_bee_nested_loops: Nested Loops
        C3_bee_debugging: Bee Debugging
        C3_bounce: Bounce
        C3_playlab_create_game: Play Lab - Create a Game
        C3_computational_thinking: تفکر محاسباتی
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: Songwriting With Parameters
        C4_intro: Introduction
        C4_bee_conditional: شرطها زنبور عسل
        C4_variables_artist: Variables - Artist
        C4_variables_playlab: Variables - Play Lab
        C4_for_loops: برای حلقه
        C4_math_artist: Programming the Artist with Math
        C4_function_edit: Editing Functions
        C4_function_create: Creating Functions
        C4_function_parameters: معادله با پارامترها
        C4_conditionals: مشروط
        C4_unplugged_algorithms: Algorithms with Tangrams
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variables in Envelopes
        C4_unplugged_forloops: برای حلقه
        C4_unplugged_parameters: Songwriting with Parameters
        C4_unplugged_binary: Binary
        frozen_intro: Hour of Code Intro
        frozen_loops: Introduction to Loops
        frozen_functions: Introduction to Functions
        playlab_intro: Introduction to Play Lab
        playlab_events: Play Lab Events
        playlab_repeat_forever: Play Lab Repeat Forever
    callout:
      text:
        drag_blocks: یک بلوک "حرکت" را بکش و آن را زیر بلوک دیگری بچسبان
        run: '"اجرا" را بزن تا برنامه‌ات اجرا بشه'
        watch_again: 'برای تماشای دوباره این ویدیو اینجا را کلیک کنید '
        gray_block_explanation: Blocks that are grey can't be deleted. Can you solve
          the puzzle anyway?
        show_code_explanation: اینجا را کلیک کن تا کد برنامه‌ای که می‌سازی را ببینی
        instructions_repeat_explanation: دستورالعمل‌های هر معما اینجا تکرار شدن
        category_explanation: تمام اون بلوک‌ها رو داری اما حالا داخل دسته‌بندی قرار
          گرفتن
        set_sprite_image: Attach a "set actor to image" block to the "when story starts"
          block to enable an actor for this story
        studio_say_text: چیزی رو که می‌خواهی بازیگرت بگه، داخل این علامت‌های نقل قول
          تایپ کن
        jigsaw_click: این بلوک را کلیک کن!
        move_elsa_forward: Drag a "Move Forward" block and snap it below the "When
          Run" block to make Elsa move forward
        turn_elsa: Use the "Turn" block to make Elsa turn. The number in the drop-down
          determines how much Elsa turns
        replace_questions: Use the drop-down to replace "???" with a number
        replace_questions_degree: Use the drop-down to replace "???" with the correct
          degree to turn
        repeat_blocks: Use the "Repeat" block and wrap it around the blocks in the
          workspace
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the
          workspace
        repeat_blocks_2: (2) Move the "Repeat" block here, and place the gray blocks
          inside
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each
          angle in degrees.
        set_sides: Use this block to set "sides" to the number needed to complete
          the puzzle.
        set_length: Use this block to set "length" to the correct value.
        which_equation: Which equation makes each side shorter for shapes with more
          sides?  Try each equation!
        get_nectar: Use the new "get nectar" block.
        actions_category: The tool box got a new look! The "Actions" blocks are in
          here now.
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Use this button to edit the function.
        create_function: Click here to open the "Functions" flyout, then click the
          "Create a Function" button.
        house_hint: It's ok if the picture doesn't look like a house yet. We will
          fix it in the next puzzle.
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction
          the Bee will turn to get the nectar.
        logic_category: Open the "Logic" flyout to find the "if/else" block.
        length_parameter: Can you update this function so it uses the "length" parameter?
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: Don't forget to turn after creating
          each circle.
        frozen_circle_function_with_parameter_circle: Use the "create a circle" block
          and change the size.
        frozen_snowflake_branch: Use the "create a snowflake branch" block
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: Drag the "say" block here and type "hello"
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: Use the "move right" block to move Tennis Girl
        playlab_play_sound: Add "play sound" block here
        playlab_arrow_keys: Remember to use these to move the witch after clicking
          on Run
        playlab_add_move: Add "move" blocks inside this repeat block
        playlab_add_score: Add score blocks here
        playlab_add_blocks: Add your blocks here
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect
          here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: This is your function definition. These blocks
          run everytime you use the "draw a square" block
        change_here: Make your change here
        write_draw_square_function: Drag blocks from the toolbox into here that draw
          a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that
          draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add,
          and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor
          (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: Use the "if" block to decide if the bee should get nectar
        if_else_bee: Use the "if/else" block so that the Bee gets nectar from a flower,
          and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to
          make a full circle
        place_length_variable: Drag the length variable here to replace the question
          marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
