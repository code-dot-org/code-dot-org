---
en:
  data:
    blocks:
      Dancelab_atTimestamp:
        text: after {TIMESTAMP} {UNIT}
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_changeColorBy:
        text: change {COLOR} {METHOD} by {AMOUNT}
        options:
          METHOD:
            '"hue"': hue
            '"saturation"': saturation
            '"brightness"': brightness
      Dancelab_changeMoveEachLR:
        text: "{GROUP} do {MOVE} {DIR} forever"
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          MOVE:
            '"next"': "(Next)"
            '"prev"': "(Previous)"
            '"rand"': "(Random)"
            MOVES.Roll: Body Roll
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            "-1": "←"
            '1': "→"
      Dancelab_changeMoveLR:
        text: "{SPRITE} do {MOVE} {DIR} forever"
        options:
          MOVE:
            '"next"': "(Next)"
            '"prev"': "(Previous)"
            '"rand"': "(Random)"
            MOVES.Roll: Body Roll
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            "-1": "←"
            '1': "→"
      Dancelab_changePropBy:
        text: change {SPRITE} {PROPERTY} by {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
      Dancelab_doMoveEachLR:
        text: "{GROUP} do {MOVE} {DIR} once"
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          MOVE:
            '"rand"': "(Random)"
            MOVES.XBend: Bend
            MOVES.Roll: Body Roll
            MOVES.XClapSide: Clap
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.XFever: Disco
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.XHeadHips: Head + Hips
            MOVES.XHop: Hop
            MOVES.XHighKick: Kick
            MOVES.XKnee: Knee
            MOVES.XKneel: Kneel
            MOVES.XOle: Ole
            MOVES.XArmsSide: Reach
            MOVES.XSlide: Slide
            MOVES.Kick: Star
            MOVES.XArmsUp: Stretch
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            "-1": "←"
            '1': "→"
      Dancelab_doMoveLR:
        text: "{SPRITE} do {MOVE} {DIR} once"
        options:
          MOVE:
            '"rand"': "(Random)"
            MOVES.XBend: Bend
            MOVES.Roll: Body Roll
            MOVES.XClapSide: Clap
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.XFever: Disco
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.XHeadHips: Head + Hips
            MOVES.XHop: Hop
            MOVES.XHighKick: Kick
            MOVES.XKnee: Knee
            MOVES.XKneel: Kneel
            MOVES.XOle: Ole
            MOVES.XArmsSide: Reach
            MOVES.XSlide: Slide
            MOVES.Kick: Star
            MOVES.XArmsUp: Stretch
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            "-1": "←"
            '1': "→"
      Dancelab_eval:
        text: eval {CODE}
      Dancelab_everySeconds:
        text: 'every {N} {UNIT} '
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_everySecondsRange:
        text: 'every {N} {UNIT} from {START} to {STOP} '
        options:
          UNIT:
            measures: Measures
            seconds: Seconds
      Dancelab_everyVerseChorus:
        text: 'every {UNIT} '
        options:
          UNIT:
            '"verse"': verse
            '"chorus"': chorus
      Dancelab_getEnergy:
        text: get {RANGE}
        options:
          RANGE:
            '"low"': bass
            '"mid"': mid
            '"high"': treble
      Dancelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_getTime:
        text: current time in {UNIT}
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_ifDanceIs:
        text: |-
          if {SPRITE} is doing {DANCE}
           {DO1} {DO2}
        options:
          DANCE:
            MOVES.ClapHigh: Clap High
            MOVES.Clown: Gangnam
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Roll: Body Roll
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
      Dancelab_ifTime:
        text: |-
          if {UNIT} is {OP} {N}
           {DO1} {DO2}
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
          OP:
            '">"': ">"
            '"<"': "<"
            '"="': "="
      Dancelab_jumpTo:
        text: "{SPRITE} jump to {LOCATION}"
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": random
      Dancelab_layoutSprites:
        text: layout {GROUP} as a {FORMAT}
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          FORMAT:
            '"border"': border
            '"inner"': inside square
            '"circle"': circle
            '"grid"': grid
            '"row"': row
            '"column"': column
            '"x"': criss-cross
            '"plus"': plus
            '"random"': random
      Dancelab_makeNewDanceSprite:
        text: |-
          make a new {COSTUME}
           called {NAME} at {LOCATION}
        options:
          COSTUME:
            '"ALIEN"': Alien
            '"BEAR"': Bear
            '"CAT"': Cat
            '"DOG"': Dog
            '"DUCK"': Duck
            '"FROG"': Frog
            '"MOOSE"': Moose
            '"PINEAPPLE"': Pineapple
            '"ROBOT"': Robot
            '"SHARK"': Shark
            '"UNICORN"': Unicorn
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": random
      Dancelab_makeNewDanceSpriteGroup:
        text: |-
          make {N} new {COSTUME}
           in a {LAYOUT}
        options:
          'N':
            '2': '2'
            '3': '3'
            '4': '4'
            '5': '5'
            '6': '6'
            '7': '7'
            '8': '8'
            '9': '9'
            '10': '10'
            '11': '11'
            '12': '12'
            '13': '13'
            '14': '14'
            '15': '15'
            '16': '16'
            '17': '17'
            '18': '18'
            '19': '19'
            '20': '20'
          COSTUME:
            '"ALIEN"': Aliens
            '"BEAR"': Bears
            '"CAT"': Cats
            '"DOG"': Dogs
            '"DUCK"': Ducks
            '"FROG"': Frogs
            '"MOOSE"': Moose
            '"PINEAPPLE"': Pineapples
            '"ROBOT"': Robots
            '"SHARK"': Sharks
            '"UNICORN"': Unicorns
          LAYOUT:
            '"border"': border
            '"inner"': inside square
            '"circle"': circle
            '"grid"': grid
            '"row"': row
            '"column"': column
            '"x"': criss-cross
            '"plus"': plus
            '"random"': random
      Dancelab_mixColors:
        text: mix {COLOR1} and {COLOR2}
      Dancelab_nMeasures:
        text: "{N} measures"
      Dancelab_onPointerDown:
        text: on pointer down
      Dancelab_onPointerDrag:
        text: on pointer drag
      Dancelab_onPointerUp:
        text: on pointer up
      Dancelab_randomColor:
        text: random color
      Dancelab_setBackground:
        text: set background color {COLOR}
      Dancelab_setBackgroundEffect:
        text: |-
          set background effect
          {EFFECT} {PALETTE}
        options:
          EFFECT:
            '"none"': None
            ? "['circles','color_cycle', 'diamonds', 'disco_ball', 'fireworks', 'swirl', 'kaleidoscope', 'lasers', 'splatter', 'rainbow', 'snowflakes', 'text', 'galaxy', 'sparkles', 'spiral', 'disco', 'stars'][randomInt(0,16)]"
            : "(Random)"
            '"circles"': Circles
            '"color_cycle"': Colors
            '"diamonds"': Diamonds
            '"disco_ball"': Disco Ball
            '"fireworks"': Fireworks
            '"swirl"': Hypno
            '"kaleidoscope"': Kaleidoscope
            '"lasers"': Laser Dance Floor
            '"splatter"': Paint Splatter
            '"rainbow"': Rainbow
            '"snowflakes"': Snow
            '"text"': Song Names
            '"galaxy"': Space
            '"sparkles"': Sparkles
            '"spiral"': Spiral
            '"disco"': Squares
            '"stars"': Stars
          PALETTE:
            '"rave"': Black and White
            '"cool"': Cool
            '"electronic"': Electronic
            '"iceCream"': Ice Cream
            '"default"': Light
            '"neon"': Neon
            '"tropical"': Tropical
            '"vintage"': Vintage
            '"warm"': Warm
      Dancelab_setBackgroundEffectWithPalette:
        text: |-
          set background effect
          {EFFECT} {PALETTE}
        options:
          EFFECT:
            '"none"': None
            '"rand"': "(Random)"
            '"circles"': Circles
            '"color_cycle"': Colors
            '"diamonds"': Diamonds
            '"disco_ball"': Disco Ball
            '"fireworks"': Fireworks
            '"swirl"': Hypno
            '"kaleidoscope"': Kaleidoscope
            '"lasers"': Laser Dance Floor
            '"splatter"': Paint Splatter
            '"rainbow"': Rainbow
            '"snowflakes"': Snow
            '"text"': Song Names
            '"galaxy"': Space
            '"sparkles"': Sparkles
            '"spiral"': Spiral
            '"disco"': Squares
            '"stars"': Stars
          PALETTE:
            '"rave"': Black and White
            '"cool"': Cool
            '"electronic"': Electronic
            '"iceCream"': Ice Cream
            '"default"': Light
            '"neon"': Neon
            '"tropical"': Tropical
            '"vintage"': Vintage
            '"warm"': Warm
      Dancelab_setDanceSpeed:
        text: set {SPRITE} dance speed to {SPEED}
        options:
          SPEED:
            '4': very fast
            '2': fast
            '1': normal
            '0.5': slow
            '0.25': very slow
      Dancelab_setDanceSpeedEach:
        text: set {GROUP} dance speed to {SPEED}
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          SPEED:
            '4': very fast
            '2': fast
            '1': normal
            '0.5': slow
            '0.25': very slow
      Dancelab_setForegroundEffect:
        text: set foreground effect {EFFECT}
        options:
          EFFECT:
            '"none"': None
            ? "['bubbles', 'confetti', 'hearts_red', 'music_notes', 'pineapples', 'pizzas', 'smiling_poop', 'rain', 'floating_rainbows', 'smile_face', 'spotlight', 'color_lights', 'raining_tacos'][randomInt(0,12)]"
            : "(Random)"
            '"bubbles"': Bubbles
            '"confetti"': Confetti
            '"hearts_red"': Hearts
            '"music_notes"': Music Notes
            '"pineapples"': Pineapples
            '"pizzas"': Pizzas
            '"smiling_poop"': Poop
            '"rain"': Rain
            '"floating_rainbows"': Rainbows
            '"smile_face"': Smiles
            '"spotlight"': Spotlight
            '"color_lights"': Stage Lights
            '"raining_tacos"': Tacos
      Dancelab_setForegroundEffectExtended:
        text: set foreground effect {EFFECT}
        options:
          EFFECT:
            '"none"': None
            '"rand"': "(Random)"
            '"bubbles"': Bubbles
            '"confetti"': Confetti
            '"hearts_red"': Hearts
            '"music_notes"': Music Notes
            '"pineapples"': Pineapples
            '"pizzas"': Pizzas
            '"smiling_poop"': Poop
            '"rain"': Rain
            '"floating_rainbows"': Rainbows
            '"smile_face"': Smiles
            '"spotlight"': Spotlight
            '"color_lights"': Stage Lights
            '"raining_tacos"': Tacos
      Dancelab_setProp:
        text: 'set {SPRITE} {PROPERTY} to {VAL} '
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_setPropEach:
        text: set {GROUP} {PROPERTY} to {VAL}
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_setPropRandom:
        text: randomize {SPRITE} {PROPERTY}
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_setTint:
        text: set {SPRITE} tint to {VAL}
      Dancelab_setTintEach:
        text: set {THIS} tint to {VAL}
        options:
          THIS:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
      Dancelab_setTintInline:
        text: set {SPRITE} tint to {VAL}
      Dancelab_setVisible:
        text: set {SPRITE} visible to {VISIBILITY}
        options:
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_setVisibleEach:
        text: set {THIS} visibility to {VISIBILITY}
        options:
          THIS:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_startMapping:
        text: "{SPRITE} begins {PROPERTY} following {RANGE}"
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_stopMapping:
        text: "{SPRITE} stops {PROPERTY} following {RANGE}"
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"direction"': movement direction
            '"tint"': tint
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_whenKey:
        text: when {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"left"': left
            '"down"': down
            '"right"': right
            '"space"': space
            '"enter"': enter
            '"a"': a
            '"b"': b
            '"c"': c
            '"d"': d
            '"e"': e
            '"f"': f
            '"g"': g
            '"h"': h
            '"i"': i
            '"j"': j
            '"k"': k
            '"l"': l
            '"m"': m
            '"n"': 'n'
            '"o"': o
            '"p"': p
            '"q"': q
            '"r"': r
            '"s"': s
            '"t"': t
            '"u"': u
            '"v"': v
            '"w"': w
            '"x"': x
            '"y"': 'y'
            '"z"': z
            '"0"': '0'
            '"1"': '1'
            '"2"': '2'
            '"3"': '3'
            '"4"': '4'
            '"5"': '5'
            '"6"': '6'
            '"7"': '7'
            '"8"': '8'
            '"9"': '9'
      Dancelab_whenPeak:
        text: when {RANGE} peak
        options:
          RANGE:
            '0': bass
            '1': mid
            '2': treble
      Dancelab_whenSetup:
        text: setup
      Dancelab_whenSetupSong:
        text: 'setup {SONG} '
        options:
          SONG:
            '"macklemore90"': Macklemore - Can't Hold Us
            '"hammer"': MC Hammer - U Can't Touch This
            '"peas"': The Black Eyed Peas - I Got a Feeling
      gamelab_add:
        text: add {SPRITE} to group {THIS}
      gamelab_addBehaviorSimple:
        text: sprite {SPRITE} begins {BEHAVIOR}
      gamelab_addBehaviorUntil:
        text: sprite {SPRITE} begins {BEHAVIOR} until {CONDITION}
      gamelab_allSpritesWithAnimation:
        text: "{ANIMATION}"
      gamelab_beginBehavior:
        text: begin {BEHAVIOR}
      gamelab_bounceOff:
        text: "{SPRITE} bounces off of {TARGET}"
      gamelab_bounceOffEdges:
        text: "{SPRITE} bounces off of edges"
      gamelab_changeColor:
        text: change {COLOR} {METHOD} by {AMOUNT}
        options:
          METHOD:
            '"tint"': tint
            '"tone"': tone
            '"shade"': shade
      gamelab_changeColorBy:
        text: change {COLOR} {METHOD} by {AMOUNT}
        options:
          METHOD:
            '"hue"': hue
            '"saturation"': saturation
            '"brightness"': brightness
      gamelab_changePropBy:
        text: change {SPRITE} {PROPERTY} by {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      gamelab_checkTouching:
        text: "{CONDITION} {SPRITE1} touches {SPRITE2}"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      gamelab_clickedOn:
        text: when {SPRITE} clicked
      gamelab_clickedSpritePointer:
        text: clicked {SPRITE}
      gamelab_comment:
        text: 'comment: {COMMENT}'
      gamelab_console.log:
        text: log message {MESSAGE}
      gamelab_countByCostume:
        text: number of {COSTUME}
      gamelab_createNewSprite:
        text: "make a new sprite \n called {NAME} \n with costume {COSTUME} \n at {LOCATION}"
      gamelab_debugSprite:
        text: debug {SPRITE} {VAL}
        options:
          VAL:
            'true': 'true'
            'false': 'false'
      gamelab_destroy:
        text: remove {THIS}
      gamelab_displace:
        text: "{THIS} blocks {SPRITE} from moving"
      gamelab_distance:
        text: distance from {LOCATION1} to {LOCATION2}
      gamelab_draggable:
        text: being draggable
      gamelab_edgesDisplace:
        text: edges block {SPRITE} from moving
      gamelab_enableDebug:
        text: enable debugging
      gamelab_eval:
        text: eval {CODE}
      gamelab_firstTouched:
        text: first touched sprite
      gamelab_forEachSpriteWithCostume:
        text: |-
          for each {VALUE} sprite
           do {STATEMENT}
      gamelab_getAnim:
        text: "{SPRITE} {COSTUME}"
        options:
          COSTUME:
            '"costume"': costume
      gamelab_getDirection:
        text: "{SPRITE} movement direction"
      gamelab_getFrameDelay:
        text: "{THIS} frame delay"
      gamelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      gamelab_getThisSprite:
        text: "{CHOICE} sprite"
        options:
          CHOICE:
            '"this"': this
            '"other"': other
      gamelab_groupLength:
        text: number of {THIS}
      gamelab_hasBehavior:
        text: "{SPRITE} is currently {BEHAVIOR}"
      gamelab_hideTitleScreen:
        text: hide title screen
      gamelab_hsbColor:
        text: |-
          HSB color
           H{HUE}S{SATURATION}B{BRIGHTNESS}
      gamelab_isTouching:
        text: "{THIS} is touching {TARGET}"
      gamelab_isTouchingEdges:
        text: "{SPRITE} is touching edges"
      gamelab_joystickDirection:
        text: joystick direction
      gamelab_jumpTo:
        text: "{SPRITE} jump to {LOCATION}"
      gamelab_keyDown:
        text: key is down {KEY}
      gamelab_keyPressed:
        text: "{CONDITION} {KEY} pressed"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"b"': b
            '"c"': c
            '"d"': d
            '"e"': e
            '"f"': f
            '"g"': g
            '"h"': h
            '"i"': i
            '"j"': j
            '"k"': k
            '"l"': l
            '"m"': m
            '"n"': 'n'
            '"o"': o
            '"p"': p
            '"q"': q
            '"r"': r
            '"s"': s
            '"t"': t
            '"u"': u
            '"v"': v
            '"w"': w
            '"x"': x
            '"y"': 'y'
            '"z"': z
      gamelab_layoutSprites:
        text: layout {COSTUME} as a {FORMAT}
        options:
          FORMAT:
            '"border"': border
            '"inner"': inside square
            '"circle"': circle
            '"grid"': grid
            '"row"': row
            '"column"': column
            '"x"': criss-cross
            '"plus"': plus
            '"random"': random
      gamelab_locationAdd:
        text: "{LOC1} {OPERATOR} {LOC2}"
        options:
          OPERATOR:
            "'plus'": "+"
            "'minus'": "-"
      gamelab_locationAt:
        text: 'location x: {X} y: {Y}'
      gamelab_locationConstant:
        text: "{DIR}"
        options:
          DIR:
            "'north'": north
            "'south'": south
            "'east'": east
            "'west'": west
      gamelab_locationDelta:
        text: "{DISTANCE} pixels {DIR} of {LOCATION}"
        options:
          DIR:
            "'north'": north
            "'south'": south
            "'east'": east
            "'west'": west
            "'random'": random
      gamelab_locationEast:
        text: east
      gamelab_locationMouse:
        text: mouse location
      gamelab_locationNorth:
        text: north
      gamelab_locationOf:
        text: location of {SPRITE}
      gamelab_locationSouth:
        text: south
      gamelab_locationWest:
        text: west
      gamelab_location_picker:
        text: "{LOCATION}"
      gamelab_location_variable_get:
        text: location of {VAR}
      gamelab_location_variable_set:
        text: set location of {VAR} to {VAL}
      gamelab_makeNewGroup:
        text: make a new group
      gamelab_makeNewSpriteAnon:
        text: make new {ANIMATION_NAME} sprite at {LOCATION}
      gamelab_mirrorSprite:
        text: "{SPRITE} face {DIRECTION}"
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      gamelab_mixColors:
        text: mix {COLOR1} and {COLOR2}
      gamelab_mouseDown:
        text: mouse is down
      gamelab_mouseLocation:
        text: mouse location
      gamelab_moveDown:
        text: "{THIS} move down"
      gamelab_moveForward:
        text: move {SPRITE} {DISTANCE} pixels forward
      gamelab_moveInDirection:
        text: move {SPRITE} {DISTANCE} pixels {DIRECTION}
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_moveInDirection2:
        text: move {SPRITE} pixels {DISTANCE} toward {DIRECTION}
      gamelab_moveLeft:
        text: "{THIS} move left"
      gamelab_moveRight:
        text: "{THIS} move right"
      gamelab_moveToward:
        text: move {SPRITE} pixels {DISTANCE} toward {TARGET}
      gamelab_moveUp:
        text: "{THIS} move up"
      gamelab_objectSprite:
        text: object sprite
      gamelab_playSound:
        text: playSound {SOUND}
      gamelab_pointInDirection:
        text: point {SPRITE} {DIRECTION}
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_pointToward:
        text: point {SPRITE} toward {LOCATION}
      gamelab_printText:
        text: print {TEXT}
      gamelab_randColor:
        text: random color
      gamelab_randomColor:
        text: random color
      gamelab_randomLocation:
        text: random location
      gamelab_removeAllBehaviors:
        text: "{SPRITE} stops everything"
      gamelab_removeBehaviorSimple:
        text: sprite {SPRITE} stops {BEHAVIOR}
      gamelab_removeTint:
        text: remove color from {THIS}
      gamelab_say:
        text: "{THIS} say {TEXT}"
      gamelab_secondTouched:
        text: second touched sprite
      gamelab_setAnimation:
        text: change {THIS} costume to {ANIMATION}
      gamelab_setBackground:
        text: set background color {COLOR}
      gamelab_setBackgroundImage:
        text: set background to {IMG}
        options:
          IMG:
            '"https://studio.code.org/blockly/media/skins/studio/background_cave.png"': cave
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': city
            '"https://studio.code.org/api/v1/animation-library/UieRK0NBKD3xVHtSJxcUTAuhzLM1D_Hq/category_backgrounds/continuous_grass.png"': continuous grass
            '"https://studio.code.org/blockly/media/skins/studio/background.png"': court
            '"https://studio.code.org/blockly/media/skins/studio/background_desert.png"': desert
            '"https://studio.code.org/api/v1/animation-library/nfgysU3t3P8XnUBAf9LjIy2JTHtdXpTj/category_backgrounds/desert_road.png"': desert road
            '"https://studio.code.org/api/v1/animation-library/4FnSIFL33P0PH_C_DnKOse2QbZCdtaJJ/category_backgrounds/farm_land.png"': farm land
            '"https://studio.code.org/api/v1/animation-library/vrlUwPslp0VK_KJcPQ9OPZNb.Ms5eBL5/category_backgrounds/floating_grass.png"': floating grass
            '"https://studio.code.org/api/v1/animation-library/ZjjFGjO0xNEZGEweTgANloehQrxwIXVM/category_backgrounds/front_of_house.png"': front of house
            '"https://studio.code.org/blockly/media/skins/studio/background_space.png"': galaxy
            '"https://studio.code.org/blockly/media/skins/studio/background_grid.png"': grid
            '"https://studio.code.org/api/v1/animation-library/1K7z7Kc3EeXsLV693byb0xxoJSJ4Du7e/category_backgrounds/kitchen.png"': 'kitchen '
            '"https://studio.code.org/api/v1/animation-library/4bsf67OUrcX.t1wbIcE_xygGKxOkiQ6f/category_backgrounds/living_room.png"': living room
            '"https://studio.code.org/api/v1/animation-library/cJKusc1WPgWvCvgdwRX1gk8Zk0FggcVj/category_backgrounds/meadow.png"': meadow
            '"https://studio.code.org/api/v1/animation-library/4gC7uWaaRI4aDyrncCFO_wY_67vYhr4C/category_backgrounds/park_view.png"': park view
            '"https://studio.code.org/api/v1/animation-library/5K0h1rGe5ql4J9TdlqggIzGZYzbD38pF/category_backgrounds/pine_trees.png"': pine trees
            '"https://studio.code.org/blockly/media/skins/studio/background_rainbow.png"': rainbow
            '"https://studio.code.org/blockly/media/skins/studio/background_scifi.png"': sci-fi
            '"https://studio.code.org//api/v1/animation-library/WJjQlG1rFhbVmPfcuI_wy6tpwI6mHYnM/category_backgrounds/soccer_field.png"': soccer field
            '"https://studio.code.org/api/v1/animation-library/Thvd6E7yU59nfop.zZKGWKoR8VLZDTq./category_backgrounds/stage.png"': stage
            '"https://studio.code.org/blockly/media/skins/studio/background_santa.png"': stars
            '"https://studio.code.org/api/v1/animation-library/RblQqWAuW0EkLfYuRVK4LRc0uY_76fvi/category_backgrounds/subway.png"': subway
            '"https://studio.code.org/api/v1/animation-library/ZY0THG5IedwCgmWVIhiPdJH59OORnmgT/category_backgrounds/sun_and_rainbow.png"': sun and rainbow
            '"https://studio.code.org/api/v1/animation-library/_aXeLwM1Ge.ZDVJoON.cAlR3iwhKJJvl/category_backgrounds/sunshine_showers.png"': sunshine showers
            '"https://studio.code.org/api/v1/animation-library/.51KpEhDOyXg4dbDaAnm0dEWLAj1GZwy/category_backgrounds/tennis_court.png"': tennis court
            '"https://studio.code.org/api/v1/animation-library/yatDsUkvGtT_.fSv68qi1d4YJDMHdGnS/category_backgrounds/tree_island.png"': tree island
            '"https://studio.code.org/api/v1/animation-library/INSgmsgsLuIk1Aqp7g72h9nLFez.NX0p/category_backgrounds/underground.png"': underground
            '"https://studio.code.org/blockly/media/skins/studio/background_underwater.png"': underwater
            '"https://studio.code.org/blockly/media/skins/studio/background_winter.png"': winter
            undefined: none
      gamelab_setDirection:
        text: set {SPRITE} movement direction {DIRECTION}
      gamelab_setFrameDelay:
        text: set {THIS} frame delay {VAL}
      gamelab_setPosition:
        text: move {THIS} to the {POSITION} position
        options:
          POSITION:
            "{x: 50, y: 50}": top left
            "{x: 200, y: 50}": top center
            "{x: 350, y: 50}": top right
            "{x: 50, y: 200}": center left
            "{x: 200, y: 200}": center
            "{x: 350, y: 200}": center right
            "{x: 50, y: 350}": bottom left
            "{x: 200, y: 350}": bottom center
            "{x: 350, y: 350}": bottom right
            '"random"': random
      gamelab_setProp:
        text: set {SPRITE} {PROPERTY} to {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      gamelab_setSizes:
        text: set {SPRITE} {PROPERTY} to {N}%
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
      gamelab_setTint:
        text: change color of {THIS} to {COLOR}
      gamelab_setup:
        text: setup
      gamelab_setupSim:
        text: |-
          setup simulation with
          {SPRITE1N}{SPRITE1COSTUME}speed{SPRITE1SPEED}
          {SPRITE2N}{SPRITE2COSTUME}speed{SPRITE2SPEED}
          collecting
          {SPRITE3N}{SPRITE3COSTUME}
      gamelab_showTitleScreen:
        text: show title screen {BREAK} title {TITLE} text {SUBTITLE}
      gamelab_spriteClicked:
        text: "{CONDITION} {SPRITE} clicked"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      gamelab_spriteClickedSet:
        text: "{CONDITION} {SPRITE} clicked set {CLICK}"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      gamelab_spriteCostume:
        text: "{COSTUME}"
      gamelab_spriteDirection:
        text: "{DIRECTION}"
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_spritesWhere:
        text: sprites where {PROPERTY} is {VALUE}
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
      gamelab_spritesWhereFirst:
        text: first {VALUE}
      gamelab_spritesWhereGenerator:
        text: sprites where {PROPERTY} {OP} {VALUE}
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
          OP:
            '"="': "="
            '">"': ">"
            '"<"': "<"
      gamelab_spritesWhereLast:
        text: last {VALUE}
      gamelab_spritesWhereRandom:
        text: random in group {VALUE}
      gamelab_subjectSprite:
        text: subject sprite
      gamelab_thisBeginsBehaviorSimple:
        text: sprite {SPRITE} begins {BEHAVIOR}
        options:
          SPRITE:
            abc: this sprite
      gamelab_turn:
        text: turn {SPRITE} {DIRECTION} {N} degrees
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      gamelab_whenDownArrow:
        text: when down arrow pressed
      gamelab_whenJoystick:
        text: when joystick
      gamelab_whenKey:
        text: when {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whenLeftArrow:
        text: when left arrow pressed
      gamelab_whenMouseClicked:
        text: when mouse clicked
      gamelab_whenPressedAndReleased:
        text: "when {DIR} pressed \n{STATEMENT1}when released \n{STATEMENT2}"
        options:
          DIR:
            "'up'": up
            "'down'": down
            "'left'": left
            "'right'": right
      gamelab_whenRightArrow:
        text: when right arrow pressed
      gamelab_whenStartAndStopTouching:
        text: |-
          when {SPRITE1} starts touching {SPRITE2} {STATEMENT1}when they stop touching
           {STATEMENT2}
      gamelab_whenTouching:
        text: when {SPRITE1} touches {SPRITE2}
      gamelab_whenTouchingAny:
        text: when {SPRITE} touches any {GROUP}
      gamelab_whenTouchingSet:
        text: "{CONDITION} {SPRITE1} touches {SPRITE2} set {SPRITEA} and set {SPRITEB}"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      gamelab_whenTrue:
        text: when {CONDITION} true
      gamelab_whenUpArrow:
        text: when up arrow pressed
      gamelab_whileDownArrow:
        text: while down arrow pressed
      gamelab_whileJoystick:
        text: while joystick
      gamelab_whileKey:
        text: while {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whileLeftArrow:
        text: while left arrow pressed
      gamelab_whileRightArrow:
        text: while right arrow pressed
      gamelab_whileTouching:
        text: while {SPRITE1} is touching {SPRITE2}
      gamelab_whileUpArrow:
        text: while up arrow pressed
      gamelab_worldSeconds:
        text: seconds elapsed
      gamelab_xLocationOf:
        text: x coordinate of {SPRITE}
      gamelab_yLocationOf:
        text: y coordinate of {SPRITE}
      Mikelab_addBehaviorSimple:
        text: sprite {SPRITE} begins {BEHAVIOR}
      Mikelab_changeAnim:
        text: set {SPRITE}'s to costume to {COSTUME}
      Mikelab_changePropBy:
        text: change {PROPERTY} of {SPRITE} by {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_checkAnim:
        text: "{SPRITE} is a {COSTUME}"
      Mikelab_createNewSprite:
        text: "make a new {COSTUME} \n called {NAME} at {LOCATION}"
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": Random
      Mikelab_destroy:
        text: remove {SPRITE}
      Mikelab_displace:
        text: "{TARGET} blocks {SPRITE} from moving"
      Mikelab_eval:
        text: eval {CODE}
      Mikelab_getAnim:
        text: "{SPRITE}'s costume"
      Mikelab_getProp:
        text: "{SPRITE}'s {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupChangeAnim:
        text: change {SELECT} {COSTUME} into {COSTUME2}
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupChangePropBy:
        text: change {PROPERTY} of {SELECT} {COSTUME} by {VAL}
        options:
          SELECT:
            '"all"': all
            '"this"': this
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupCreateNewSprite:
        text: make a new {COSTUME} at {LOCATION}
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": Random
      Mikelab_groupDestroy:
        text: remove {SELECT} {COSTUME}
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupDisplace:
        text: all {COSTUME} block {COSTUME2} from moving
      Mikelab_groupEdgesDisplace:
        text: edges block {COSTUME} from moving
      Mikelab_groupGetProp:
        text: "{SELECT} {COSTUME}'s {PROPERTY}"
        options:
          SELECT:
            '"average"': average
            '"this"': this
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupRemoveAllBehaviors:
        text: stop {SELECT} {COSTUME} behaviors
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupRemoveBehaviorSimple:
        text: "{SELECT} {COSTUME} stops {BEHAVIOR}"
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupRemoveTint:
        text: remove color from {SELECT} {COSTUME}
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupSetProp:
        text: set {PROPERTY} of {SELECT} {COSTUME} to {VAL}
        options:
          SELECT:
            '"all"': all
            '"this"': this
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupSetTint:
        text: change color of {SELECT} {COSTUME} to {COLOR}
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupWhenClickedOn:
        text: when {COSTUME} clicked
      Mikelab_groupWhenXTouchesY:
        text: when{COSTUME} touches {COSTUME2}
      Mikelab_groupWhileClicked:
        text: 'while clicking on {COSTUME}

'
      Mikelab_groupWhileTouchingAny:
        text: |-
          while{COSTUME} is touching {COSTUME2}
          {STATEMENT}
      Mikelab_hasBehavior:
        text: "{SPRITE} is currently {BEHAVIOR}"
      Mikelab_ifDanceIs:
        text: |-
          if {SPRITE} is doing {DANCE}
           {DO1} {DO2}
        options:
          DANCE:
            MOVES.ClapHigh: Clap High
            MOVES.Clown: Gangnam
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Roll: Body Roll
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
      Mikelab_isAnim:
        text: "{SPRITE}'s costume is {COSTUME}"
      Mikelab_locationAt:
        text: 'location x: {X} y: {Y}'
      Mikelab_location_picker:
        text: "{LOCATION}"
      Mikelab_randomColor:
        text: random color
      Mikelab_removeAllBehaviors:
        text: sprite{SPRITE} stops all behaviors
      Mikelab_removeBehaviorSimple:
        text: sprite {SPRITE} stops {BEHAVIOR}
      Mikelab_removeTint:
        text: remove color from {SPRITE}
      Mikelab_setBG:
        text: set background to {BG}
        options:
          BG:
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': city
            '"https://studio.code.org/api/v1/animation-library/UieRK0NBKD3xVHtSJxcUTAuhzLM1D_Hq/category_backgrounds/continuous_grass.png"': continuous grass
            '"https://studio.code.org/api/v1/animation-library/nfgysU3t3P8XnUBAf9LjIy2JTHtdXpTj/category_backgrounds/desert_road.png"': desert road
            '"https://studio.code.org/api/v1/animation-library/4FnSIFL33P0PH_C_DnKOse2QbZCdtaJJ/category_backgrounds/farm_land.png"': farm land
            '"https://studio.code.org/api/v1/animation-library/vrlUwPslp0VK_KJcPQ9OPZNb.Ms5eBL5/category_backgrounds/floating_grass.png"': floating grass
            '"https://studio.code.org/api/v1/animation-library/ZjjFGjO0xNEZGEweTgANloehQrxwIXVM/category_backgrounds/front_of_house.png"': front of house
            '"https://studio.code.org/api/v1/animation-library/1K7z7Kc3EeXsLV693byb0xxoJSJ4Du7e/category_backgrounds/kitchen.png"': 'kitchen '
            '"https://studio.code.org/api/v1/animation-library/4bsf67OUrcX.t1wbIcE_xygGKxOkiQ6f/category_backgrounds/living_room.png"': living room
            '"https://studio.code.org/api/v1/animation-library/cJKusc1WPgWvCvgdwRX1gk8Zk0FggcVj/category_backgrounds/meadow.png"': meadow
            '"https://studio.code.org/api/v1/animation-library/4gC7uWaaRI4aDyrncCFO_wY_67vYhr4C/category_backgrounds/park_view.png"': park view
            '"https://studio.code.org/api/v1/animation-library/5K0h1rGe5ql4J9TdlqggIzGZYzbD38pF/category_backgrounds/pine_trees.png"': pine trees
            '"https://studio.code.org//api/v1/animation-library/WJjQlG1rFhbVmPfcuI_wy6tpwI6mHYnM/category_backgrounds/soccer_field.png"': soccer field
            '"https://studio.code.org/api/v1/animation-library/Thvd6E7yU59nfop.zZKGWKoR8VLZDTq./category_backgrounds/stage.png"': stage
            '"https://studio.code.org/api/v1/animation-library/RblQqWAuW0EkLfYuRVK4LRc0uY_76fvi/category_backgrounds/subway.png"': subway
            '"https://studio.code.org/api/v1/animation-library/ZY0THG5IedwCgmWVIhiPdJH59OORnmgT/category_backgrounds/sun_and_rainbow.png"': sun and rainbow
            '"https://studio.code.org/api/v1/animation-library/_aXeLwM1Ge.ZDVJoON.cAlR3iwhKJJvl/category_backgrounds/sunshine_showers.png"': sunshine showers
            '"https://studio.code.org/api/v1/animation-library/.51KpEhDOyXg4dbDaAnm0dEWLAj1GZwy/category_backgrounds/tennis_court.png"': tennis court
            '"https://studio.code.org/api/v1/animation-library/yatDsUkvGtT_.fSv68qi1d4YJDMHdGnS/category_backgrounds/tree_island.png"': tree island
            '"https://studio.code.org/api/v1/animation-library/INSgmsgsLuIk1Aqp7g72h9nLFez.NX0p/category_backgrounds/underground.png"': underground
      Mikelab_setProp:
        text: set {PROPERTY} of {SPRITE} to {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_setTint:
        text: change color of {SPRITE} to {COLOR}
      Mikelab_showScoreboard:
        text: scoreboard label {LABEL} text color {TEXTCOLOR} color {COLOR} value {VALUE} corner {CORNER}
        options:
          CORNER:
            '"right"': right
            '"left"': left
      Mikelab_showText:
        text: show text {TEXT} {PREPOSITION} {SPRITE}
        options:
          PREPOSITION:
            '"above"': above
            '"below"': below
      Mikelab_sprite:
        text: new {COSTUME} sprite at {LOCATION}
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": Random
      Mikelab_whenClickedOn:
        text: when {SPRITE} clicked
      Mikelab_whenKeyPressed:
        text: when {KEY} pressed
        options:
          KEY:
            '"up"': up arrow
            '"down"': down arrow
            '"left"': left arrow
            '"right"': right arrow
            '"space"': spacebar
            '"w"': W
            '"a"': A
            '"s"': S
            '"d"': D
      Mikelab_whenKeyReleased:
        text: when {KEY} released
        options:
          KEY:
            '"up"': up arrow
            '"down"': down arrow
            '"left"': left arrow
            '"right"': right arrow
            '"space"': spacebar
            '"w"': W
            '"a"': A
            '"s"': S
            '"d"': D
      Mikelab_whenMouseClicked:
        text: when mouse clicked
      Mikelab_whenMouseReleased:
        text: when mouse released
      Mikelab_whenTouchesAny:
        text: when{SPRITE} touches any sprite
      Mikelab_whileClicked:
        text: 'while clicking on{SPRITE}

'
      Mikelab_whileKeyPressed:
        text: while {KEY} stays pressed
        options:
          KEY:
            '"up"': up arrow
            '"down"': down arrow
            '"left"': left arrow
            '"right"': right arrow
            '"space"': spacebar
      Mikelab_whileTouchingAny:
        text: |-
          while{SPRITE} is touching any sprite
          {STATEMENT}
      Mikelab_worldSeconds:
        text: number of seconds
      Mikelab_xLocationOf:
        text: x coordinate of {SPRITE}
      Mikelab_yLocationOf:
        text: y coordinate of {SPRITE}
      RyanLab_moveForward:
        text: move forward
      RyanLab_readSound:
        text: read with sound
      RyanLab_readToConsole:
        text: read to console
      RyanLab_turnLeft:
        text: turn left
      RyanLab_turnRight:
        text: turn right
      SpriteLab2Beta_spriteSay:
        text: sprite {SPRITE} say {TEXT} for {SECONDS} seconds
      Vector_createSpriteWith:
        text: |-
          create sprite
          do{STATEMENT}
      Vector_log:
        text: log message {MESSAGE}
      Vector_positionCenter:
        text: center
      Vector_push:
        text: set velocity {VECTOR}
      Vector_randomLocation:
        text: random location
      Vector_setColor:
        text: set color to {COLOR}
      Vector_setSize:
        text: set width {WIDTH} height {HEIGHT}
      Vector_teleportTo:
        text: set position {POSITION}
      Vector_vectorNorth:
        text: north
      Vector_where:
        text: each sprite where {PROPERTY} is {VALUE} do{STATEMENT}
        options:
          PROPERTY:
            "'shapeColor'": color
      aalab_addBehaviorForDuration:
        text: aalab sprite {SPRITE} begins {BEHAVIOR} for {SECONDS} seconds
      aalab_addBehaviorSimpleFlexible:
        text: aalab sprite {SPRITE} begins {BEHAVIOR}
      aalab_addBehaviorUntilBoolean:
        text: sprite {SPRITE} begins {BEHAVIOR} until {CONDITION}
      aalab_addToSpriteGroup:
        text: add sprite {SPRITE} to group {GROUP}
      aalab_allSpritesWithAnimation:
        text: "{ANIMATION}"
      aalab_changePropByFlexible:
        text: change {SPRITE} {PROPERTY} by {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      aalab_checkTouching:
        text: "{CONDITION} {SPRITE1} touches {SPRITE2}"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      aalab_clickedOn:
        text: "{CONDITION} {SPRITE} clicked"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      aalab_createNewSprite:
        text: "aalab make a new sprite \n called {NAME} \n with costume {COSTUME} \n at {LOCATION}"
      aalab_createNewSpriteAdvanced:
        text: "make a new sprite called {NAME} \n with costume {COSTUME} \n at {LOCATION}"
      aalab_createNewSpriteAnon:
        text: make new {ANIMATION_NAME} sprite at {LOCATION}
      aalab_createNewSpriteAnonReturn:
        text: aalab make new {ANIMATION_NAME} sprite at {LOCATION}
      aalab_createPropertyGroup:
        text: |-
          make a new sprite group called {VAR}
           of all {COSTUME} sprites
      aalab_createSpriteGroup:
        text: make a new sprite group called {VAR}
      aalab_getSpritesByName:
        text: any sprite named {NAME}
      aalab_getThisSprite:
        text: "{CHOICE} sprite"
        options:
          CHOICE:
            '"this"': this
            '"other"': other
      aalab_jumpTo:
        text: aalab {SPRITE} jump to {LOCATION}
      aalab_keyPressed:
        text: "{CONDITION} {KEY} pressed"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
      aalab_locationOf:
        text: aalab location of {SPRITE}
      aalab_location_picker:
        text: "{LOCATION}"
      aalab_moveForward:
        text: aalab move {SPRITE} {DISTANCE} pixels forward
      aalab_moveInDirection:
        text: aalab move {SPRITE} {DISTANCE} pixels {DIRECTION}
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      aalab_moveToward:
        text: aalab move {SPRITE} distance {DISTANCE} toward {TARGET}
      aalab_nameStringSay:
        text: "{NAMESTRING} says {MESSAGE}"
      aalab_prompt:
        text: ask question {MESSAGE}
      aalab_randomLocation:
        text: random location
      aalab_removeOneAndAll:
        text: remove {THIS}
      aalab_setBG:
        text: set background to {BG}
        options:
          BG:
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': city
            '"https://studio.code.org/api/v1/animation-library/UieRK0NBKD3xVHtSJxcUTAuhzLM1D_Hq/category_backgrounds/continuous_grass.png"': continuous grass
            '"https://studio.code.org/api/v1/animation-library/nfgysU3t3P8XnUBAf9LjIy2JTHtdXpTj/category_backgrounds/desert_road.png"': desert road
            '"https://studio.code.org/api/v1/animation-library/4FnSIFL33P0PH_C_DnKOse2QbZCdtaJJ/category_backgrounds/farm_land.png"': farm land
            '"https://studio.code.org/api/v1/animation-library/vrlUwPslp0VK_KJcPQ9OPZNb.Ms5eBL5/category_backgrounds/floating_grass.png"': floating grass
            '"https://studio.code.org/api/v1/animation-library/ZjjFGjO0xNEZGEweTgANloehQrxwIXVM/category_backgrounds/front_of_house.png"': front of house
            '"https://studio.code.org/api/v1/animation-library/1K7z7Kc3EeXsLV693byb0xxoJSJ4Du7e/category_backgrounds/kitchen.png"': 'kitchen '
            '"https://studio.code.org/api/v1/animation-library/4bsf67OUrcX.t1wbIcE_xygGKxOkiQ6f/category_backgrounds/living_room.png"': living room
            '"https://studio.code.org/api/v1/animation-library/cJKusc1WPgWvCvgdwRX1gk8Zk0FggcVj/category_backgrounds/meadow.png"': meadow
            '"https://studio.code.org/api/v1/animation-library/4gC7uWaaRI4aDyrncCFO_wY_67vYhr4C/category_backgrounds/park_view.png"': park view
            '"https://studio.code.org/api/v1/animation-library/5K0h1rGe5ql4J9TdlqggIzGZYzbD38pF/category_backgrounds/pine_trees.png"': pine trees
            '"https://studio.code.org//api/v1/animation-library/WJjQlG1rFhbVmPfcuI_wy6tpwI6mHYnM/category_backgrounds/soccer_field.png"': soccer field
            '"https://studio.code.org/api/v1/animation-library/Thvd6E7yU59nfop.zZKGWKoR8VLZDTq./category_backgrounds/stage.png"': stage
            '"https://studio.code.org/api/v1/animation-library/RblQqWAuW0EkLfYuRVK4LRc0uY_76fvi/category_backgrounds/subway.png"': subway
            '"https://studio.code.org/api/v1/animation-library/ZY0THG5IedwCgmWVIhiPdJH59OORnmgT/category_backgrounds/sun_and_rainbow.png"': sun and rainbow
            '"https://studio.code.org/api/v1/animation-library/_aXeLwM1Ge.ZDVJoON.cAlR3iwhKJJvl/category_backgrounds/sunshine_showers.png"': sunshine showers
            '"https://studio.code.org/api/v1/animation-library/.51KpEhDOyXg4dbDaAnm0dEWLAj1GZwy/category_backgrounds/tennis_court.png"': tennis court
            '"https://studio.code.org/api/v1/animation-library/yatDsUkvGtT_.fSv68qi1d4YJDMHdGnS/category_backgrounds/tree_island.png"': tree island
            '"https://studio.code.org/api/v1/animation-library/INSgmsgsLuIk1Aqp7g72h9nLFez.NX0p/category_backgrounds/underground.png"': underground
      aalab_setCollidable:
        text: aalab set {SPRITE} collidable to {VAL}
        options:
          VAL:
            '"true"': 'true'
            '"false"': 'false'
      aalab_setDirection:
        text: aalab set {SPRITE} movement direction {DIRECTION}
      aalab_setProp:
        text: aalab set {SPRITE} {PROPERTY} to {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      aalab_setSpriteVariable:
        text: aalab set {VARIABLE} to {SPRITE}
      aalab_showCustomText:
        text: show text{TEXT}location{LOCATION}size{SIZE}color{COLOR}duration{DURATION}
        options:
          DURATION:
            '"1"': 1 second
            '"2"': 2 seconds
            '"3"': 3 seconds
            '"4"': 4 seconds
            '"5"': 5 seconds
            '"0"': forever
      aalab_showSpriteLabel:
        text: show label{TEXT} {LOCATION} sprite{SPRITE}
        options:
          LOCATION:
            '"above"': above
            '"below"': below
      aalab_speakerSaysConsole:
        text: "{SPRITE} says {MESSAGE}"
      aalab_spriteSay:
        text: sprite {SPRITE} say {TEXT} for {SECONDS} seconds
      aalab_toggleHideCustomText:
        text: "{OPTION} custom text"
        options:
          OPTION:
            '"show"': show
            '"hide"': hide
      binary_drawBin:
        text: draw binary {BIN}
      binary_drawBinScreen:
        text: |-
          draw screen
           {B1}
           {B2}
           {B3}
           {B4}
           {B5}
           {B6}
           {B7}
           {B8}
      binary_drawDec:
        text: draw decimal {DEC}
      binary_drawPixelHere:
        text: set pixel {VAL}
        options:
          VAL:
            '1': 'on'
            '0': 'off'
            '"toggle"': toggle
      binary_drawString:
        text: draw string {STR}
      binary_goTo:
        text: jump to {LOC}
      binary_goToHome:
        text: jump to top left
      binary_gridSize:
        text: set grid size {SIZE}
      binary_move:
        text: move {DIR}
        options:
          DIR:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
      binary_whenKey:
        text: when {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      craft_ifPath:
        text: |-
          if path {DIR}
          {STATEMENT}
        options:
          DIR:
            "'ahead'": ahead
            "'right'": to the right
            "'left'": to the left
      craft_ifStandingOn:
        text: |-
          if standing on {TYPE}
          {STATEMENT}
        options:
          TYPE:
            "'blueCoralBlock'": blue coral
            "'redCoralBlock'": red coral
            "'sand'": sand
            "'wool_blue'": deep water
            "'planksOak'": oak planks
            "'seaLantern'": sea lantern
      craft_ifStandingOnLimit:
        text: |-
          if standing on {TYPE}
          {STATEMENT}
        options:
          TYPE:
            "'sand'": sand
            "'darkPrismarine'": dark prismarine
            "'seaLantern'": sea lantern
      craft_log:
        text: log message {MESSAGE}
      craft_moveForward:
        text: move forward
      craft_placeBlock:
        text: place {blockType}
        options:
          blockType:
            '"strippedOak"': stripped oak
            '"strippedDarkOak"': stripped dark oak
            '"stoneBricks"': stone bricks
            '"mossyStoneBricks"': mossy stone bricks
            '"crackedStoneBricks"': cracked stone bricks
            '"decorativeStoneBricks"': decorative stone bricks
            '"blueCoralBlock"': blue coral block
            '"pinkCoralBlock"': pink coral block
            '"magentaCoralBlock"': magenta coral block
            '"redCoralBlock"': red coral block
            '"yellowCoralBlock"': yellow coral block
            '"blueDeadCoralBlock"': blue dead coral block
            '"pinkDeadCoralBlock"': pink dead coral block
            '"magentaDeadCoralBlock"': magenta dead coral block
            '"readDeadCoralBlock"': red dead coral block
            '"yellowDeadCoralBlock"': yellow dead coral block
            '"prismarine"': prismarine
            '"darkPrismarine"': dark prismarine
            '"seaLantern"': sea lantern
            '"packedIce"': packed ice
            '"blueIce"': blue ice
            '"blackConcrete"': black concrete
            '"seaGrass"': sea grass
            '"kelp"': kelp
            '"polishedGranite"': polished granite
      craft_placePrismarine:
        text: place prismarine
      craft_placeTorch:
        text: place torch
      craft_repeatUntilConduit:
        text: |-
          repeat until conduit completed
          {STATEMENT}
      craft_repeatUntilGoal:
        text: |-
          repeat until goal
          {STATEMENT}
      craft_spawnEntity:
        text: spawn {ENTITY}
        options:
          ENTITY:
            '"cod"': cod
            '"dolphin"': dolphin
            '"salmon"': salmon
            '"seaTurtle"': sea turtle
            '"squid"': squid
            '"tropicalFish"': tropical fish
      craft_turn:
        text: turn {DIR}
        options:
          DIR:
            right: right ↻
            left: left ↺
