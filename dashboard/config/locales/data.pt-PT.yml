---
pt:
  data:
    game:
      name:
        Unplug1: Introdução à Ciência Computacional
        Maze: O Labirinto
        Multi: Perguntas de escolha múltipla
        Unplug2: Pensamento computacional
        Unplug3: Programação de papel milimetrico
        Artist: O Artista
        Unplug4: Algoritmos
        Artist2: O Artista 2
        Unplug5: Funções
        Farmer: O Agricultor
        Unplug6: Condicionais
        Artist3: O Artista 3
        Unplug7: escrita de canção
        Farmer2: O Agricultor 2
        Unplug8: Abstração
        Artist4: O Artista 4
        Unplug9: Programação por revezamento
        Farmer3: O Agricultor 3
        Unplug10: A Internet
        Artist5: O Artista 5
        Unplug11: Resumo
        MazeEC: O Labirinto
        Bounce: Bounce
        Flappy: Flappy Bird
        Jigsaw: Quebra-cabeças
        MazeStep: Modo Labirinto
        Wordsearch: Sopa de letras
        Webapp: Laboratório de aplicações
        ArtistEC: O Artista
        TextMatch: Correspondência de texto
        StudioEC: Laboratório
        Applab: Laboratório de aplicações
        NetSim: Simulador de internet
        Custom: Artista
        CustomStudio: Laboratório
    trophy:
      name:
        Bronze: Bronze
        Silver: Prata
        Gold: Ouro
    concept:
      description:
        sequence: Seqüência
        if: Bloco Se
        if_else: Bloco Se-Senão
        loop_times: Bloco Repetir Vezes
        loop_until: Bloco Repetir Até
        loop_while: Bloco Enquanto
        loop_for: Bloco Contador
        function: Funções
        parameters: Funções com parâmetros
    level:
      instructions:
        maze_2_2: 'Consegues ajudar-me a apanhar o porquinho malvado? Empilha alguns
          blocos "mover para a frente" e depois clica em "Executar" para me ajudares
          a chegar até ele. '
        maze_2_1: Este porco está a enervar-me. Ajuda-me a encontrá-lo!
        maze_2_2_5: Traça o caminho e leva-me até ao porquinho tonto. Não choques
          com as dinamites, se não ficas sem penas!
        maze_2_3: Leva-me até ao maldito verde! (Tem cuidado com a dinamite)
        maze_2_4: Fique calmo e ajude-me a encontrar o porco mau. Senão eu vou ficar
          zangado!
        maze_2_5: Há uma maneira de chegar ao porco bobalhão usando apenas 2 blocos.
          Você consegue descobrir como?
        maze_2_6: Tente me levar até o intruso verde usando apenas três blocos.
        maze_2_7: Ajude-me a banir esse porquinho mau usando o menor número de blocos
          possível. Tente usar mais de um bloco "repita".
        maze_2_8: 'Quando um bloco estiver cinza, significa que você não pode excluí-lo.
          Resolva esse desafio usando o bloco "repita" que faz 3 repetições. Tente
          colocar esses 3 blocos dentro do bloco "repita" em cinza: avance, avance,
          vire.'
        maze_2_9: Ok, use o novo bloco "repita até" - ele vai se repetir até que eu
          chegue naquele porco irritante.
        maze_2_10: Ok, uma última vez para praticar - consegues resolver este um usando
          apenas 4 blocos?
        maze_2_11: Querida pessoa.  Eu zombie. Eu com fome. Tenho... ir... girassol...
          Consegues colocar-me lá com apenas 5 blocos?
        maze_2_12: Ok, isto é semelhante, mas ligeiramente diferente. Consegues fazê-lo
          com apenas 5 blocos?
        maze_2_13: 'Usa o novo bloco "se" para me deixar decidir quando virar. Dica:
          só precisas de mais um bloco, mas aprende como podemos configurá-lo para
          que possas fazer sozinho na próxima vez.'
        maze_2_14: Ok, isto é como o último quebra-cabeças, mas precisas de te lembrar
          de como usaste o bloco "se" e o bloco "repetir" juntos.
        maze_2_15: Eu querer girassol! Usa um bloco "se" para levar-me lá, com o menor
          número de blocos.
        maze_2_16: Ok, vamos fazer novamente para praticar - isso não é muito diferente,
          mas tem cuidado com os comilões!
        maze_2_17: Os blocos "se-senão" verificam uma condição, e em seguida, fazem
          uma coisa OU outra. Para me levar para o girassol tenta usar este novo bloco.
        maze_2_18: Pratica mais uma vez o bloco "se-senão", consegues à primeira tentativa?
        maze_2_19: Podes adicionar mais 3 blocos para me ajudares a resolver este
          complexo labirinto? Se conseguires podes andar em qualquer caminho com curvas
          qualquer que seja o tamanho.
        turtle_1_1: Olá, eu sou um artista! Você pode escrever códigos para me fazer
          desenhar quase tudo. Use alguns blocos para me fazer desenhar sobre as linhas
          cinza da figura.
        turtle_1_2: 'Agora, desenha um quadrado. Nota: escolhe a tua cor preferida
          usando o bloco "definir cor".'
        turtle_1_3: Faz um quadrado usando só três blocos.
        turtle_1_4: 'Desenha um triângulo cujos lados tenham todos cores diferentes,
          usando a opção "cor aleatória" que escolhe uma cor diferente de cada vez.
          Dica: tens que descobrir até onde virar, clicando no número do bloco virar.'
        turtle_1_5: Agora, para praticar, desenha um triângulo e, em seguida, um quadrado
          para desenhar um envelope.
        turtle_1_6: 'Consegues descobrir como desenhar este triângulo e quadrado?
          Dica: Faz o triângulo primeiro, e depois tenta descobrir o quanto virar
          antes de desenhar o quadrado.'
        turtle_1_7: Bem, vamos dificultar um pouco - vê se podes desenhar esses óculos
          verdes. Os quadrados são 100 pixeis de cada lado e são separados 50 pixeis.
          Não te esqueças de desenhar no verde!
        turtle_1_8: Bem, tenta descobrir o que acontece se executares esse código
          (ou pressiona "Executar" para experimentá-lo). Em seguida, repete-o várias
          vezes para completar o desenho. As cores serão diferentes a cada execução.
        turtle_1_9: Consegues descobrir qual o número que substitui os pontos de interrogação
          para que possas desenhar um círculo?
        turtle_1_10: 'Conseguiste! Agora desenha o que quiseres. Algumas ideias engraçadas:
          um boneco, um floco de neve ou uma espiral. Experimenta também o novo bloco
          "definir largura". Diverte-te!'
        turtle_4_1: 'Consegues desenhar um triângulo (com 100 pixeis de lado) com
          apenas 3 blocos? Dica: usa o bloco "repetir".'
        turtle_4_2: Acrescente um bloco "vire à direita 90 graus" em algum lugar no
          meio do programa, na área de trabalho, para desenhar esses triângulos.
        turtle_4_3: Bem, aqui está o código que você escreveu para desenhar um único
          triângulo. Podes adicionar um bloco "repetir" e "virar" para fazer uma linda
          flor?
        turtle_4_4: 'Aqui está o mesmo código do quebra-cabeças anterior, mas virando
          apenas 36 graus e depois desenhando cada triângulo. Quantas vezes isto precisa
          de se repetir? (Dica: depois de 360 graus de viragem o desenho será um círculo
          completo)'
        turtle_4_5: 'Aqui está o mesmo código de quebra-cabeças anterior, mas virando
          apenas 36 graus e depois desenhando cada triângulo. De quantos graus devem
          ser as viragens? (Dica: depois de 360 graus de viragem o desenho será um
          círculo completo)'
        turtle_4_6: Usando apenas 3 blocos, podes desenhar um quadrado com arestas
          de 20 pixeis?
        turtle_4_7: 'Aqui está o código para desenhar o quadrado do último quebra-cabeças.
          Podes repetir isso de forma a desenhar 10 quadrados adjacentes como uma
          escada? Dica: você só precisa de mais 2 blocos.'
        turtle_4_8: Aqui está a solução para o quebra-cabeças anterior. Podes adicionar
          apenas mais 2 blocos para completar o desenho?
        turtle_4_9: Aqui está a solução para o quebra-cabeças anterior. Quantos graus
          deves virar para completar o desenho? (Provavelmente precisarás adivinhar
          algumas vezes)
        turtle_4_10: Aqui está a solução para o enigma anterior. Quantas vezes deves
          repetir para completar o desenho?
        turtle_4_11: Tenta alterar os números nos blocos "virar" e "repetir" para
          fazer diferentes padrões. Ou então, experimenta mudar o resto do código
          para desenhar o que quiseres.
        maze_karel_1_1: Olá, eu sou uma agricultora. Quero plantar no terreno da minha
          quinta e preciso da tua ajuda para conseguir aplaná-lo. Move-me para o monte
          de terra e usa o bloco "remover" para me ajudares a removê-lo.
        maze_karel_1_2: Em seguida, move-me para o buraco e preenche-o com duas pazadas
          de terra, usando o bloco de "preenchimento".
        maze_karel_1_3: Move-me para o monte de terra e diz-me quantas pazadas para
          remover usando o mínimo de blocos possível.
        maze_karel_1_4: 'Podes ajudar-me a remover todos os quatro montes de terra?
          Dica: usa um bloco de repetição se possível.'
        maze_karel_1_5: 'Ajuda-me a tapar estes buracos com 5 pazadas de terra. Dica:
          Podes colocar um bloco "repetir" dentro de um bloco "enquanto".'
        maze_karel_1_6: Remove todos os montes de terra, usando o mínimo de blocos
          quanto possível. As novas opções no menu pendente do bloco "enquanto" dizem-me
          se estou em cima do monte ou do buraco.
        maze_karel_1_7: Uau, eu encontrei um buraco muito fundo! Não sei quantas pazadas
          de terra serão precisas. Podes escrever um programa que o encha até que
          o chão fique liso?
        maze_karel_1_8: Ajuda-me a preencher o buraco no final do campo, usando o
          menor número de blocos quanto possível.
        maze_karel_1_9: 'Faça com que eu remova todos esses montes de terra. Tente
          usar o menor número de blocos possível. Dica: tente usar um bloco "enquanto".'
        maze_karel_1_10: Estou a trabalhar até tarde e como tal está muito escuro
          e eu não consigo saber o tamanho dos montes de terra. Agora não tenho todas
          as opções que eu costumava ter no bloco "enquanto". Move-me ao longo do
          campo e se houver um monte de terra, remove-o.
        maze_karel_1_11: 'Ainda está escuro lá fora. Move-me ao longo do campo. Se
          houver um monte, remove-o e se houver um buraco, preenche-o. Dica: usa o
          menu pendente de opções no bloco "se".'
        turtle_2_1: 'Olá. Eu artista zombie. Eu adoro desenhar! Ajuda-me a desenhar
          um quadrado numa cor especial. Nota importante: continuas a ter os mesmos
          blocos, mas eles agora foram organizados em categorias.'
        turtle_2_2: Bem-vindo ao uso de funções, que permitem que você defina novos
          blocos! Tente o bloco novo "desenhar um quadrado", que está na categoria
          "Funções", para desenhar um pequeno quadrado verde de 50x50.
        turtle_2_3: Usa o bloco de "repetição" (na categoria de "Ciclos") para desenhar
          3 quadrados de tamanho 100, separados por 120 graus. Faz isso com 3 cores
          aleatórias diferentes.
        turtle_2_4: 'Agora vamos começar a ser extravagantes. Altera o código para
          desenhar 36 quadrados separados com 100 pixeis de largura separados por
          10 graus. Dica: podes querer usar o controlo deslizante para me fazer ir
          mais rápido.'
        turtle_2_5: Desenha quadrados com lados de 50, 60, 70, 80 e 90 pixeis.  Vais
          precisar de usar a função "desenhar um quadrado" cinco vezes.
        turtle_2_6: 'Bem, este programa irá utilizar um contador para desenhar os
          mesmos quadrados da última vez. Queres que o quadrado tenha o mesmo tamanho
          que o contador, então usa o bloco de "contador". Dica: É na categoria de
          variáveis.'
        turtle_2_7: Aqui temos um programa para desenhar uma espiral, mas os blocos
          estão desativados para que eles não sejam executados. Faça um novo programa
          usando um bloco "conte com" (na categoria Laços) e um bloco "contador" (na
          categoria Variáveis) para desenhar a mesma espiral.
        turtle_2_7_5: Há uma nova função "desenhar um boneco de neve" (na categoria
          de Funções). Desenha dois bonecos de neve, de 250 e 100 de altura.
        turtle_2_8: Este é um pouco complicado. Usa a função "desenhar um boneco de
          neve" e o bloco novo "salto para a frente" (na categoria de Ações). Desenha
          3 bonecos de neve com cores diferentes, separados por 100 pixeis.
        turtle_2_9: Use um laço "conte com" para desenhar uma família de bonecos de
          neve, com alturas de 110, 100, 90, 80 e 70. Os bonecos de neve devem ser
          separados por 60 pixels.
        turtle_2_10: Aqui está algum código experimentar com diferentes espirais.  O
          que acontece se alterares a quantidade de vezes? Ou definir uma cor aleatória
          no ciclo? Desenha o que quiseres.
        maze_karel_2_1: 'Tenta usar os blocos para me ajudar a remover todos os montes
          de terra e preenche todos os buracos no chão. Tenta usar ciclos ao invés
          de usar demasiados blocos. Dica: podes colocar um ciclo dentro de outro
          ciclo.'
        maze_karel_2_2: Definimos o nosso próprio bloco chamado "encher 5", que agora
          está na categoria de Funções. Usa-o para me ajudar a preencher este buraco.
        maze_karel_2_3: Usa o bloco de Função "encher 5" para eu preencher todos os
          buracos. Terás que arrastar o bloco "encher 5" para fora da categoria de
          Funções.
        maze_karel_2_4: Define uma nova função que remove 7 pazadas. Em seguida, usa-a
          para escrever um programa que me ajude a remover todas os montes.
        maze_karel_2_5: Cria uma nova função que remove 6 pazadas de uma pilha e usa-a
          para me ajudar a nivelar todos os montes.
        maze_karel_2_6: Usa duas novas funções, "preencher 8" e "remover 8", para
          ajudar-me a nivelar o monte e preencher o buraco.
        maze_karel_2_7: Há uma vaca no meu campo! Escreve uma nova função que me ajude
          a evitar a vaca e remover o monte. Coloca todos os blocos dentro da nova
          função.
        maze_karel_2_8: Usa esta nova função, "evitar a vaca e remover 1", para me
          ajudar a remover todos os montes.
        maze_karel_2_9: Ok, aqui está uma função que remove 4 montes diferentes de
          terra numa coluna vertical. Tente colocar essa função dentro de um ciclo,
          para remover todos os montes de terra usando apenas alguns novos blocos.
        maze_karel_2_10: Move-me através do campo e usa essas duas funções para me
          ajudar a remover todos os montes e preencher todos os buracos.
        turtle_3_1: Este quebra-cabeças mostra como as funções "desenhar um quadrado"
          e "desenhar um círculo" são definidas.  Definir uma função não executa os
          seus blocos.  Você tem que puxar o bloco "desenhar um quadrado" para realmente
          desenhar um quadrado.
        turtle_3_2: Usando a função "desenhar um quadrado" como um exemplo, cria uma
          função de "desenhar um triângulo" e usa-a.
        turtle_3_3: 'Desenha cercas triangulares em torno dos gatos e uma cerca quadrada
          em torno da vaca. Dica: testa o programa à medida que vais avançando.'
        turtle_3_4: Tenta descobrir como usar "desenhar um quadrado" e "desenhar um
          triângulo" (e alguns outros blocos) para desenhar uma casa em torno do leão.
        turtle_3_5: 'Agora cria uma nova função "desenhar uma casa" e usa-a para hospedar
          dois gatos. Dica: Cria uma nova função usando o bloco "fazer algo" e digite
          o teu próprio texto para o nome do bloco.'
        turtle_3_6: 'Usando "desenhar um quadrado" como exemplo, adiciona uma entrada
          denominada "comprimento" para "desenhar um triângulo". Em seguida, desenha
          triângulos em tamanhos diferentes. (Dica: clica na estrela para adicionar
          uma entrada para uma função)'
        turtle_3_7: Adiciona uma entrada chamada "altura" para "desenhar uma casa"
          e constrói uma casa grande para o elefante ( com arestas de 150 pixeis de
          comprimento)
        turtle_3_8: Modifique "desenhar uma casa" para que eu termine de desenhar
          uma nova casa no canto inferior direito. Use essa função modificada para
          desenhar três casas.
        turtle_3_9: Podes recriar a função "desenhar uma casa" sem ajuda? Tenta, e
          depois desenha uma fileira de casas.
        turtle_3_10: Aprendeste muito! Agora, já consegues desenhar o que quiseres.
          Tenta desenhar uma estrela, ou uma espiral ou um floco de neve extravagante.
        maze_karel_debug_seq_1: Bem-vindo à depuração! O meu código não funciona bem.
          Consegues detectar o problema e corrigi-lo para que eu possa ficar com o
          meu campo plano e pronto para começar a plantar?
        maze_karel_debug_seq_2: O que há de errado com este programa? Como deves corrigi-lo
          para que eu possa remover aquele monte?
        maze_karel_debug_repeat: Corrige este programa por mim para que o meu campo
          fique plano e bonito.
        maze_karel_debug_while: Como deverás alterar este programa para me ajudar
          a preencher o buraco?
        maze_karel_debug_if: Ajuda! Corrige o programa para que o meu campo fique
          completamente plano.
        maze_karel_debug_if_else: Corrige este programa para que possa tapar os buracos
          e remover todas os montes.
        maze_karel_debug_function_1: O que deverás mudar neste programa para me ajudar
          a remover todos os montes?
        maze_karel_debug_function_2: Podes corrigir este programa por mim para que
          eu possa ficar com o campo plano?
        maze_karel_debug_function_3: 'Edita este programa para que eu possa remover
          todas os montes do meu campo. '
        turtle_5_1: Tenta executar este programa e faz as alterações para ver o que
          acontece. Podes descobrir como funciona? (Ou apagá-lo e substituí-lo por
          algo totalmente diferente)
        turtle_5_2: Tenta executar este programa e faz as alterações para ver o que
          acontece. Podes descobrir como funciona? (Ou apagá-lo e substituí-lo por
          algo totalmente diferente)
        turtle_5_3: Tenta executar este programa e faz as alterações para ver o que
          acontece. Podes descobrir como funciona? (Ou apagá-lo e substituí-lo por
          algo totalmente diferente)
        turtle_5_4: Tenta executar este programa e faz as alterações para ver o que
          acontece. Podes descobrir como funciona? (Ou apagá-lo e substituí-lo por
          algo totalmente diferente)
        turtle_5_5: Tenta executar este programa e faz as alterações para ver o que
          acontece. Podes descobrir como funciona? (Ou apagá-lo e substituí-lo por
          algo totalmente diferente)
        turtle_5_6: Tenta executar este programa e faz as alterações para ver o que
          acontece. Podes descobrir como funciona? (Ou apagá-lo e substituí-lo por
          algo totalmente diferente)
        maze_3_1: Eu preciso de conseguir aquele porco! Digita chamadas move(); para
          eu poder ter os meus ovos de volta.
        maze_3_2: Escreve-me um programa para que eu possa fazer todo o caminho até
          ao porco.
        maze_3_3: Como devo chegar ao porco? Certifica-te que não vais contra a caixa
          de TNT!
        maze_3_4: Argh! Escreve-me um programa que me faça passar pelo TNT e chegar
          ao porco.
        Custom_builder: Arraste os blocos da caixa de ferramentas para a área de trabalho
          para desenhar o nível que você deseja criar. Quando estiver pronto, clique
          em "Executar".
        jigsaw_1: Clique no bloco
        jigsaw_2: Arraste o bloco para o alvo
        jigsaw_3: Organiza os blocos para formar a imagem
        jigsaw_4: Organiza os blocos para formar a imagem
        jigsaw_5: Organiza os blocos para formar a imagem
        jigsaw_6: Organiza os blocos para formar a imagem
        jigsaw_7: Organiza os blocos para formar a imagem
        jigsaw_8: Organiza os blocos para formar a imagem
        jigsaw_9: Organiza os blocos para formar a imagem
        jigsaw_10: Organiza os blocos para formar a imagem
        jigsaw_11: Organiza os blocos para formar a imagem
        jigsaw_12: Organiza os blocos para formar a imagem
        jigsaw_13: Resolva o desafio!
        mazestep_1: Descrição do labirinto aqui
        mazestep_2: Descrição do labirinto aqui
        mazestep_3: Descrição do labirinto aqui
        mazestep_4: Descrição do labirinto aqui
        mazestep_5: Descrição do labirinto aqui
        studio_c2_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
        studio_c2_2: Você pode fazer o cachorro dizer alguma coisa e, depois, fazer
          o gato dizer alguma coisa?
        studio_c2_3: Você consegue desenvolver um programa para fazer este cachorro
          se mover em direção ao gato?
        studio_c2_4: Você consegue desenvolver um programa que faça com que o cachorro
          se mova em direção ao gato e que faça com que o gato diga "Olá" quando o
          cachorro o alcançar?
        studio_c2_5: Você pode escrever um programa para fazer o polvo dizer "olá"
          quando clicarem nele?
        studio_c2_6: Você pode desenvolver um programa que faça o pinguim se mover
          usando as teclas com as setas para cima / para baixo / à esquerda / à direita,
          para atingir todos os alvos?
        studio_c2_7: O bloco "repita infinitamente" possibilita a execução contínua
          do programa. Consegues usar blocos para mover esse dinossauro para cima
          e para baixo repetidamente?
        studio_c2_8: Você pode fazer com que o pinguim diga "Ai!" e reproduza um som
          de "batida" se ele encontrar o dinossauro, e então movê-lo com as setas
          para fazer isso acontecer?
        studio_c2_9: Você pode adicionar um bloco que some um ponto quando o pinguim
          se encontra com o polvo, e então movê-lo até que você consiga o ponto?
        studio_c2_10: Você pode adicionar blocos para mudar o plano de fundo e a velocidade
          do pinguim, e então movê-lo com as setas até que você pontue?
        studio_c2_11: Crie sua própria história. Quando tiver terminado, clique em
          Concluir para que seus amigos possam vê-la em seus celulares.
        studio_c3_story_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
        studio_c3_story_2: Você pode fazer o cachorro dizer alguma coisa e, depois,
          fazer o gato dizer alguma coisa?
        studio_c3_story_3: Você consegue desenvolver um programa para fazer este cachorro
          se mover em direção ao gato?
        studio_c3_story_4: Você consegue desenvolver um programa que faça com que
          o cachorro se mova em direção ao gato e que faça com que o gato diga "Olá"
          quando o cachorro o alcançar?
        studio_c3_story_5: Você pode adicionar um bloco para deixar o polvo feliz?
        studio_c3_story_6: Crie sua própria história. Quando tiver terminado, clique
          em Concluir para que seus amigos possam vê-la em seus celulares.
        studio_c3_game_1: Você pode escrever um programa para fazer o polvo dizer
          "olá" quando clicarem nele?
        studio_c3_game_2: Você pode desenvolver um programa que faça o pinguim se
          mover usando as teclas com as setas para cima / para baixo / à esquerda
          / à direita, para atingir todos os alvos?
        studio_c3_game_3: O bloco "repita infinitamente" possibilita a execução contínua
          do programa. Consegues usar blocos para mover esse dinossauro para cima
          e para baixo repetidamente?
        studio_c3_game_4: Você pode fazer com que o pinguim diga "Ai!" e reproduza
          um som de "batida" se ele encontrar o dinossauro, e então movê-lo com as
          setas para fazer isso acontecer?
        studio_c3_game_5: Você pode adicionar um bloco que some um ponto quando o
          pinguim se encontra com o polvo, e então movê-lo até que você consiga o
          ponto?
        studio_c3_game_6: Você pode adicionar blocos para mudar o plano de fundo e
          a velocidade do pinguim, e então movê-lo com as setas até que você pontue?
        studio_c3_game_7: Crie seu próprio jogo. Quando terminar, clique em Concluir
          para deixar que seus amigos experimentem seu jogo em seus celulares.
        studio_playlab_1: O pinguim quer dizer "olá", você consegue ajudá-lo?
        studio_playlab_2: O menino da caverna (personagem 1) e a menina da caverna
          (personagem 2) querem dizer "olá" um para o outro. Você pode ajudá-los usando
          o bloco "diga" duas vezes?
        studio_playlab_3: Você pode ajudar a tenista a alcançar a bandeira?
        studio_playlab_4: Você pode ajudar o tenista (personagem 1) a alcançar a tenista
          (personagem 2) e emitir um som ao conseguir?
        studio_playlab_5: Você pode ajudar o robô espacial a dizer "saudações, terráqueos"
          quando clicarem nele? Não se esqueça de clicar nele depois de clicar em
          Executar
        studio_playlab_6: Você pode ajudar a bruxa a se movimentar usando as teclas
          de direção para cima/baixo/direita/esquerda, para alcançar todas as bolas
          de fogo mágicas?
        studio_playlab_7: O bloco "repita infinitamente" permite que você execute
          o código de forma contínua. Você consegue conectar blocos a ele para ajudar
          o mago a se mover para a direita e para esquerda repetidamente?
        studio_playlab_8: Você pode adicionar um bloco para marcar um ponto e um bloco
          para emitir um som quando o unicórnio corre em direção ao mago e, depois,
          movê-lo com as teclas de direção até marcar um ponto?
        studio_playlab_9: Defina o plano de fundo para esta invasão alienígena e ajude
          o robô espacial a alcançar o alienígena mais rapidamente, mudando sua velocidade.
          Depois, mova-o com as teclas de direção para alcançar o robô espacial e
          alertar a todos
        studio_playlab_10: Crie seu próprio jogo. Quando terminar, clique em Concluir
          para deixar que seus amigos experimentem seu jogo em seus celulares.
        studio_iceage_hello1: Sid quer reunir todos para uma nova aventura. Você pode
          ajudá-lo a dizer "olá" arrastando o bloco "diga" para nossa área de trabalho
          e digitando "olá" dentro dele?
        studio_iceage_hello2: Sid (personagem 1) encontrou Manny (actor 2) e quer
          convidá-lo para a aventura. Ajude-os a cumprimentarem-se usando o bloco
          "personagem diz" duas vezes.
        studio_iceage_move_to_flag: O Scrat está procurando sua bolota! Ajude-o a
          andar os últimos 200 pixels usando o bloco "mova".
        studio_iceage_move_to_actor: Diego (personagem 1) está procurando por Manny
          (personagem 2). Ajude Diego a andar 200 pixels para chegar até Manny usando
          o bloco "mova o personagem". Em seguida, conecte um bloco ao evento "quando
          o personagem tocar" para reproduzir um som quando eles se encontrarem.
        studio_iceage_repeat: O bloco "repita infinitamente" permite que você execute
          o código sem parar. Você pode anexar blocos a ele para ajudar a Vovó a fazer
          exercícios movendo-a para a esquerda e para a direita repetidamente?
        studio_iceage_click_hello: Você pode ajudar Sid a fazer uma chamada final
          para seus amigos quando for clicado? Não se esqueça de clicar nele depois
          de clicar em Executar.
        studio_iceage_move_events: O Scrat ainda está procurando por bolotas! Ajude-o
          a correr por aí anexando o bloco "mova" a cada um dos eventos e alterando
          a direção para funcionar para cada seta do teclado. Quando você terminar,
          clique em Executar e tente coletar todas as bolotas.
        studio_iceage_sound_and_points: Foi fornecida a maior parte do código que
          mantém a Vovó se movendo para a esquerda e para a direita, bem como o código
          para mover o Sid pela tela. Você consegue terminar o código e adicionar
          blocos ao evento "quando o personagem tocar" para que ambos reproduzam um
          som e marquem um ponto quando Sid e a Vovó colidirem? Pressione Executar
          para jogar o jogo.
        studio_iceage_warn_ice_age: Todos precisam se mover rapidamente porque uma
          era do gelo está chegando! Altere para o plano de fundo de gelo e defina
          a velocidade de Sid como rápida, então pressione Executar e mova-o até Diego
          para avisá-lo.
        studio_iceage_throw_hearts: Sid quer dizer para a Vovó o quanto ele a ama.
          Use o comando "personagem lança" para que Sid (personagem 1) lance corações
          para a Vovó (personagem 2)! Defina o humor da Vovó como feliz quando ela
          for atingida pelos corações.
        studio_iceage_free_play: Hora de criar seu próprio jogo ou história! Ao terminar,
          clique em Concluir para que seus amigos possam jogar seu jogo em seus telefones,
          tablets ou computadores!
        studio_gumball_hello1: Anais quer fazer novos amigos. Você pode ajudá-la a
          dizer "olá" arrastando o bloco "diga" em nossa área de trabalho e digitando
          a palavra "olá" dentro dele?
        studio_gumball_hello2: Darwin (personagem 1) e seu irmão Gumball (personagem
          2) estão indo para a escola. Ajude-os a cumprimentarem-se usando o bloco
          "personagem diz" duas vezes.
        studio_gumball_move_to_flag: João Banana está prestes a ganhar uma corrida
          no campo! Ajude-o a andar os últimos 200 pixels usando o bloco "mova".
        studio_gumball_move_to_actor: Gumball (personagem 1) e Darwin (personagem
          2) estão atrasados para a o dia no campo! Ajude Gumball a andar 200 pixels
          para baixo para chegar até Darwin usando o bloco "mova o personagem".  Em
          seguida, conecte um bloco ao evento "quando o personagem tocar" para reproduzir
          um som quando eles se encontrarem.
        studio_gumball_repeat: O bloco "repita infinitamente" permite que você execute
          o código de forma contínua. Você pode adicionar blocos a ele para ajudar
          Gumball no aquecimento para sua corrida, movendo-se para a esquerda e para
          a direita repetidamente?
        studio_gumball_click_hello: Você pode ajudar o Anton a anunciar o início da
          corrida dizendo "Em suas marcas, preparar, já!"? Para testar seu programa,
          não se esqueça de clicar no Anton depois de clicar em Executar!
        studio_gumball_move_events: Darwin está no concurso de capturar a bandeira!
          Ajude-o a correr anexando o bloco "mova" a cada um dos eventos. Quanto terminar,
          clique em Executar e tente pegar todas as bandeiras.
        studio_gumball_sound_and_points: Foi fornecida a maior parte do código que
          mantém Anton (personagem 2) se movendo para a esquerda e para a direita,
          bem como o código para mover o João Banana (personagem 1) pela tela. Você
          consegue terminar o código e adicionar blocos ao evento "quando o personagem
          tocar" para que ambos reproduzam um som e marquem um ponto quando João Banana
          e Anton colidirem? Pressione Executar para jogar o jogo.
        studio_gumball_warn_food_fight: Darwin acabou de escapar de uma guerra de
          comida! Altere o plano de fundo para "personagens" e configure a velocidade
          de Darwin como rápida, então pressione Executar e faça-o mover-se até Penny
          para avisá-la.
        studio_gumball_join_food_fight: Participe da guerra de comida! Use o comando
          "personagem joga item para a direita" para que o João Banana (personagem
          1) jogue comida em Anton (personagem 2)! Configure o humor de Anton como
          bravo quando ele for atingido.
        studio_gumball_free_play: Crie seu próprio jogo ou história. Ao terminar,
          clique em Concluir para que seus amigos possam jogar seu jogo em seus telefones,
          tablets ou computadores!
        studio_full_sandbox: Crie seu próprio jogo. Quando terminar, clique em Concluir
          para deixar que seus amigos experimentem seu jogo em seus celulares.
        studio_k1_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
        studio_k1_2: Você pode fazer o cachorro dizer alguma coisa e, depois, fazer
          o gato dizer alguma coisa?
        studio_k1_3: Você consegue desenvolver um programa para fazer este cachorro
          se mover em direção ao gato?
        studio_k1_4: Faça o cachorro se mover até o gato e dizer "olá" quando chegar.
        studio_k1_5: Você pode adicionar um bloco para deixar o polvo feliz?
        studio_k1_6: Crie sua própria história! Movimente o gato e o cachorro, e faça
          com que eles conversem.
        maze_wordsearch_k_1: Faça eu me mover para formar a palavra EAST
        maze_wordsearch_k_2: Faça eu me mover para formar a palavra SOUTH
        maze_wordsearch_k_3: Faça eu me mover para formar a palavra WEST
        maze_wordsearch_k_4: Faça eu me mover para formar a palavra NORTH
        maze_wordsearch_k_6: Movimente-me para o leste e então para o sul, para formar
          a palavra JUMP
        maze_wordsearch_k_9: Movimente-me para um lado, e então para o outro, para
          formar a palavra CODE
        maze_wordsearch_k_13: Movimente-me para um lado, e então para o outro, para
          formar a palavra DEBUG
        maze_wordsearch_k_15: Movimente-me para um lado, e então para o outro, para
          formar a palavra ABOVE
        maze_wordsearch_k_16: Movimente-me para um lado, e então para o outro, para
          formar a palavra BELOW
        maze_wordsearch_k_20: Isso é um teste! Movimente-me para um lado, e então
          para o outro, para formar a palavra STORY
        applab_ec_simple: Crie seu aplicativo usando os blocos na caixa de ferramentas.
        turtle_ec_1_2: 'Agora, desenhe um quadrado. NOTA: use sua cor preferida selecionando-a
          no novo bloco "Cor da caneta".'
        turtle_ec_1_10: 'Muito bem! Agora, desenhe o que quiser. Veja algumas ideias
          divertidas para desenhar: um boneco, um floco de neve ou uma espiral. Use
          também o novo bloco "Largura da caneta". Divirta-se!'
        studio_ec_sandbox: Crie seu próprio jogo. Quando terminar, clique em Concluir
          para deixar que seus amigos experimentem seu jogo em seus celulares.
    video:
      name:
        maze_intro: Introdução ao labirinto
        artist_intro: Introdução ao artista
        farmer_intro: Introdução ao agricultor
        flappy_intro: Introdução ao Flappy bird
        loop_times: Bloco Repetir Vezes
        loop_until: Bloco Repetir Até
        if: Bloco Se
        if_else: Bloco se/se não
        if_else_scrat: Bloco se/se não
        function: Funções
        loop_while: Bloco Enquanto
        loop_for: Bloco Contador
        parameters: Funções com parâmetros
        hoc_wrapup: Resumo Hora de Código
        Unplug1: O que é CC?
        Unplug2: Pensamento computacional
        Unplug3: Programação de papel milimetrico
        Unplug4: Algoritmos
        Unplug5: Funções
        Unplug6: Condicionais
        Unplug7: Composição
        Unplug8: Abstração
        Unplug9: Programação por revezamento
        Unplug10: Internet
        Unplug11: Resumo
        C1_happy_maps_unplugged: Mapas felizes
        C1_moveitmoveit_unplugged: Criando caminhos
        C1_bigevent_unplugged: O Grande Evento
        C1_getting_loopy: Repetindo
        C1_pair_programming: Programação em duplas
        C1_maze_intro_sequencing: Introdução à sequência dos labirintos
        C1_maze_debugging: Depuração do labirinto
        C1_bee_level_intro: Introdução ao nível da abelha
        C1_artist_intro: Introdução ao artista
        C1_spelling_bee_intro: Introdução ao soletrando
        C1_zuck_repeat_loop: Ciclos do labirinto
        C1_bee_loops: Ciclos da abelha
        C1_maze_loops: Ciclos do labirinto
        C1_playlab_storytelling: Laboratório - Crie uma história
        C1_planting_seed: Plantando uma semente
        C1_building_foundation: Criar uma base
        C1_going_places_safely: Ir a Locais de um modo Seguro
        C2_maze_intro: Introdução ao labirinto
        C2_artist_intro: Introdução ao artista
        C2_zuck_repeat_loop: Ciclos do labirinto
        C2_artist_loops: Laços do Artista
        C2_artist_debugging: Depuração do Artista
        C2_bee_loops: Ciclos da abelha
        C2_bee_debugging: Depuração da Abelha
        C2_bee_conditionals: Condicionais da abelha
        C2_playlab_createstory: Laboratório - Crie uma história
        C2_graph_paper: Programação de papel milimetrico
        C2_conditionals_with_cards: Condicionais
        C2_binary_bracelets: Pulseiras binárias
        C2_relay_programming: Programação por revezamento
        C2_paper_airplanes: Aviões de papel
        C2_digital_footprint: Seu rastro digital
        C2_digital_footprint_v2: Seu rastro digital
        C3_maze_level_4: Ciclos do labirinto
        C3_artist_intro: Introdução ao artista
        C3_artist_functions: Funções do Artista
        C3_bee_functions: Funções da Abelha
        C3_bee_conditionals: Condicionais da abelha
        C3_maze_conditionals: Condicionais de Labirinto
        C3_artist_nested_loops: Laços aninhados
        C3_farmer_while: Laços enquanto
        C3_bee_nested_loops: Laços aninhados
        C3_bee_debugging: Depuração da Abelha
        C3_bounce: Bounce
        C3_playlab_create_game: Laboratório - Crie um jogo
        C3_computational_thinking: Pensamento computacional
        C3_dice_race: Jogo de dados
        C3_internet: Internet
        C3_crowdsourcing: Aberto ao público
        C3_functional_suncatchers: Caça-sóis funcionais
        C3_songwriting_with_parameters: Escrevendo uma canção com parâmetros
        C4_intro: Introdução
        C4_loops_zombie: ciclos
        C4_bee_conditional: Condicionais da abelha
        C4_variables_artist: Variáveis - Artista
        C4_variables_playlab: Variáveis - Laboratório
        C4_for_loops: Ciclos "for"
        C4_for_loops_bee: Ciclos "for"
        C4_for_loops_no_bee: Ciclos "for"
        C4_math_artist: Programação do Artista com matemática
        C4_function_edit: Editando funções
        C4_function_create: Criando funções
        C4_function_parameters: Funções com parâmetros
        C4_conditionals: Condicionais
        C4_unplugged_algorithms: Algoritmos com tangrams
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variáveis em envelopes
        C4_unplugged_forloops: Ciclos "for"
        C4_unplugged_parameters: Composição de música com parâmetros
        C4_unplugged_binary: Binário
        CSF_my_robotic_friends: Meus amigos robóticos
        frozen_intro: Introdução à Hora de Código
        frozen_loops: Introdução aos Laços
        frozen_functions: Introdução às Funções
        playlab_intro: Introdução ao Laboratório
        playlab_events: Eventos do Laboratório
        playlab_repeat_forever: 'Laboratório: repetir infinitamente'
        tutorial_puzzle_challenge: Desafio tutorial
        infinity_playlab_intro: Laboratório - Introdução
        infinity_playlab_events: Laboratório - Eventos
        infinity_playlab_repeat_forever: Laboratório - Repetir infinitamente
        csp_applab_functions: Introdução às Funções
        csp_applab_functions_parameters: Funções com parâmetros
        csp_applab_loops: ciclos
        starwars_intro: 'Star Wars: Construindo uma galáxia com código - Introdução'
        starwars_typing: 'Star Wars: Construindo uma galáxia com código - JavaScript'
        starwars_events: 'Star Wars: Construindo uma galáxia com código - Eventos'
        starwars_congrats: 'Star Wars: Construindo uma galáxia com código - Parabéns'
        starwars_blocks_intro: 'Star Wars: Construindo uma galáxia com código - Introdução'
        starwars_blocks_events: 'Star Wars: Construindo uma galáxia com código - Eventos'
        starwars_blocks_congrats: 'Star Wars: Construindo uma galáxia com código -
          Parabéns'
        mc_intro: Minecraft - Introdução
        mc_repeat: Minecraft - Repetição
        mc_if_statements: Minecraft - Declarações de "se"
        mc_congrats_share: Minecraft - Parabéns
        mc_congrats_no_share: Minecraft - Parabéns
        gumball_intro: Hora do Código com Gumball - Introdução
        gumball_events: Hora do Código com Gumball - Eventos
        gumball_repeat: Hora do Código com Gumball - Instruções de repetição
        iceage_intro: Hora do Código com A Era do Gelo - Introdução
        iceage_events: Hora do Código com A Era do Gelo - Eventos
        iceage_repeat: Hora do Código com A Era do Gelo - Instruções de repetição
        mc_2016_intro: Hora de Código Minecraft - Introdução
        mc_2016_loops: Minecraft Hora de Código - Loops (Ciclos)
        mc_2016_events: Minecraft Hora de Código - Eventos
        mc_2016_spawn: Minecraft Hora de Código - Spawn (Gerar)
        mc_2016_congrats: Minecraft Hora de Código - Parabéns
        mc_2017_congratulations: Minecraft Hora de Código - Parabéns
        CSF_loops_AB: ciclos
    callout:
      text:
        drag_blocks: Arrasta um bloco "mover" e encaixa-o debaixo de outro bloco
        run: Clica em "Correr" para experimentares o teu programa
        watch_again: Clica aqui para voltares a ver o vídeo
        gray_block_explanation: Os blocos cinza não podem ser excluídos. Você consegue
          resolver o desafio assim mesmo?
        show_code_explanation: Clique aqui para ver o código do programa que você
          está criando
        instructions_repeat_explanation: As instruções de cada desafio são repetidas
          aqui.
        category_explanation: Você tem os mesmos blocos, mas agora eles estão organizados
          em categorias
        set_sprite_image: Anexe um bloco "defina personagem à imagem" ao bloco "quando
          a história começa" para definir um personagem para essa história
        studio_say_text: Digite, dentro das aspas, o que você quer que seu personagem
          diga
        jigsaw_click: Clique nesse bloco!
        move_elsa_forward: Arrasta o bloco "mover para a frente" e encaixa-o debaixo
          do bloco "quando executar" para que a Elsa avance
        turn_elsa: Use o bloco "Vire" para que Elsa vire. O número no menu suspenso
          determina o quanto Elsa vai virar
        replace_questions: Use o menu suspenso para substituir "???" por um número
        replace_questions_degree: Use o menu suspenso para substituir "???" pelo grau
          correto para virar
        repeat_blocks: Use o bloco "Repita" e conecte-o aos blocos na área de trabalho
        repeat_blocks_1: "(1) Use este bloco e coloque-o em torno dos blocos cinza
          na área de trabalho"
        repeat_blocks_2: (2) Traga o bloco "repita" aqui e coloque os blocos cinza
          dentro dele
        snowflake_dropdown: Use este menu suspenso para criar diferentes flocos de
          neve!
        degrees_per_side: Divida 360 pelo número de lados para obter o tamanho de
          cada ângulo em graus.
        set_sides: Use este bloco para definir "lados" com o número necessário para
          completar o desafio.
        set_length: Use este bloco para definir "comprimento" com o valor correto.
        which_equation: Qual equação torna cada lado mais curto nas formas com maior
          número de lados?
        get_nectar: Use o novo bloco "obtenha néctar".
        actions_category: A caixa de ferramentas tem um novo visual! Os blocos de
          "Ação" estão aqui agora.
        draw_square_hint: 'Dica: Use o laço do quadrado que você fez no último desafio.'
        edit_function: Clique aqui para editar sua função.
        create_function: Clique aqui para abrir o submenu "Funções", e então clique
          no botão "Criar uma função".
        house_hint: Tudo bem se a imagem ainda não se parece com uma casa. Vamos arrumar
          isso no próximo desafio.
        edit_draw_square: Use este botão para editar a função e adicionar o laço.
        edit_get_nectar: Use este botão para editar a função e alterar a direção para
          a qual a abelha vai virar para obter o néctar.
        logic_category: Abra o submenu "Lógica" para encontrar o bloco "se/senão".
        length_parameter: Você pode atualizar esta função para que ela use o parâmetro
          "comprimento"?
        frozen_diamond_repeat: Use o bloco "repita" para criar esta forma.
        frozen_circle_function_in_circle_turn: Não se esqueça de virar depois de criar
          cada círculo.
        frozen_circle_function_with_parameter_circle: Use o bloco "crie um círculo"
          e mude o tamanho.
        frozen_snowflake_branch: Use o bloco "crie uma parte do floco de neve"
        frozen_create_square: Arrasta mais blocos para aqui para criares um quadrado
        playlab_drag_say: Arraste o bloco "diga" aqui e digite "olá"
        playlab_use_twice: Use este bloco duas vezes e lembre-se de mudar o número
          do personagem
        playlab_move_girl: Use o bloco "mova à direita" para mover a tenista
        playlab_play_sound: Adicione o bloco "reproduza som" aqui
        playlab_arrow_keys: Lembre-se de usá-los para mover a bruxa depois de clicar
          em Executar
        playlab_add_move: Adicione blocos "mova" dentro deste bloco "repita"
        playlab_add_score: Adicione blocos de pontuação aqui
        playlab_add_blocks: Adicione seus blocos aqui
        set_variable: Arraste um bloco de número aqui para definir sua variável
        place_variable: Arraste sua variável para dentro deste bloco
        bee_for_loop: Arraste o maior número de néctar que você quer a abelha colete
          aqui
        place_counter_variable: Arraste sua variável contador para dentro deste bloco
        function_editor_draw_square: Esta é sua definição de função. Esses blocos
          são executados sempre que você usar o bloco "desenhe um quadrado"
        change_here: Faça sua alteração aqui
        write_draw_square_function: Arrasta para aqui os blocos da caixa de ferramentas
          que desenham um quadrado
        write_draw_triangle_function: Arrasta para aqui os blocos da caixa de ferramentas
          que desenham um triângulo
        edit_add_parameter: Clique em editar para adicionar um parâmetro em sua função
        add_and_drag_parameter: Escreva o nome do seu parâmetro aqui, clique em adicionar
          e, em seguida, arraste-o para sua definição de função
        fill_in_actor: Substitua ??? pelos números que correspondem a cada ator (1,
          2 e 3)
        repeat: Coloque os blocos dentro do laço para repetir os comandos
        if_bee_nectar: Use o bloco "se" para decidir se a abelha deve coletar o néctar
        if_else_bee: Use o bloco "se-senão" para que a abelha colete o néctar de uma
          flor, e faça mel se não for uma flor
        repeat_full_circle: Insira o número de vezes que o zumbi deve se mover para
          fazer um círculo completo
        place_length_variable: Arraste a variável de comprimento aqui para substituir
          os pontos de interrogação
        arrows_move_actor: Use as setas para mover o personagem
        right_arrow_fireball: Use a seta para a direita para atirar bolas de fogo
        name_function: Escreva o nome da sua função aqui
        Infinity_move_right_runbutton: Adicione um bloco Mova aqui
        Infinity_move_directions_callout: Qual bloco fará Baymax se mover para cima
          quando a seta para cima estiver pressionada?
        Infinity_move_directions_callout_arrow: Use as setas para direcionar
        Infinity_move_collide_callout: Reproduza um som quando esse evento ocorrer.
        Infinity_repeat_callout: Coloque blocos Mova aqui dentro
        craft_run_button_callout: Clica em "Correr" para experimentares o teu programa
        craft_drag_block_callout: Arrasta um bloco "mover para a frente" e encaixa-o
          debaixo do outro bloco
        craft_callout_preplaced: Colocámos alguns blocos aqui para poderes começar
        craft_inside_repeat: Repete ações colocando blocos aqui
        craft_callout_preplaced_house: Este código vai começar a construir a tua casa.
          Consegues terminá-la?
        craft_what_is_iron: Escava este ferro!
        craft_callout_moveforward: Este código vai verificar se há lava, consegues
          adicionar-lhe um comando para mover para a frente?
