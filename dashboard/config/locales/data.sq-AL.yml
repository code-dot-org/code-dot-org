"sq":
  data:
    script:
      name:
        20-hour:
          desc: Ηyrje ne Kursin e Informatikës
          Unplug1: Faza 1
          Maze: Faza 2
          Unplug2: Faza 3
          Unplug3: Faza 4
          Artist: Faza 5
          Unplug4: Faza 6
          Artist2: Faza 7
          Unplug5: Faza 8
          Farmer: Faza 9
          Unplug6: Faza 10
          Artist3: Faza 11
          Unplug7: Faza 12
          Farmer2: Faza 13
          Unplug8: Faza 14
          Artist4: Faza 15
          Unplug9: Faza 16
          Farmer3: Faza 17
          Unplug10: Faza 18
          Artist5: Faza 19
          Unplug11: Faza 20
        Hour of Code:
          desc: Ora e Kodit
          Maze: Faza 1
        Edit Code:
          desc: Redakto Kodin (beta)
          MazeEC: Faza 1
        2014 Levels:
          desc: Hidhu (beta)
          Bounce: Faza 1
        Builder Levels:
          desc: Puzzle-at e krijuar nga Vetë-Përdoruesit (beta)
          Custom: Faza 1
        Flappy Levels:
          desc: Flappy Bird
          Flappy: Faza 1
        Jigsaw Levels:
          desc: Jigsaw (beta)
          Jigsaw: Faza 1
        Step Levels:
          desc: Maze (beta)
          MazeStep: Hapi i Fazës
        edit-code:
          desc: Redakto Kodin (beta)
          MazeEC: Faza 1
          Webapp: Faza 2
          ArtistEC: Faza 3
          StudioEC: Faza 4
        events:
          desc: Hidhu (beta)
          Bounce: Faza 1
          Studio: Faza 2
        builder:
          desc: Puzzle-at e krijuar nga Vetë-Përdoruesit (beta)
          Custom: Faza 1
        flappy:
          desc: Flappy Bird
          Flappy: Faza 1
        jigsaw:
          desc: Jigsaw (beta)
          Jigsaw: Faza 1
        step:
          desc: Maze (beta)
          MazeStep: Hapi i Fazës
        wordsearch:
          desc: Spelling Bee (beta)
          WordSearch: Faza 1
    game:
      name:
        Unplug1: Hyrje ne Informatike
        Maze: Labirinti
        Multi: Lojërat me zgjedhje të shumta
        Unplug2: Te menduarit si kompjuter
        Unplug3: Programimi grafik me leter
        Artist: Artisti
        Unplug4: Algoritmet
        Artist2: Artisti 2
        Unplug5: Funksionet
        Farmer: Fermeri
        Unplug6: Kushtoret
        Artist3: Artisti 3
        Unplug7: Kompozim kengesh
        Farmer2: Fermeri 2
        Unplug8: Abstraksion
        Artist4: Artisti 4
        Unplug9: Programimi i Besuar
        Farmer3: Fermeri 3
        Unplug10: Interneti
        Artist5: Artisti 5
        Unplug11: Mbështjell
        MazeEC: Labirinti
        Bounce: Hidhu
        Flappy: Flappy Bird
        Jigsaw: Jigsaw
        MazeStep: Lloji i Fazës Maze
        Wordsearch: Kërkimi i Fjalëve
        Webapp: Webapp
        ArtistEC: Artisti
        TextMatch: Përshtatja e Tekstit
        StudioEC: Play Lab
    trophy:
      name:
        Bronze: Bronx
        Silver: Argjend
        Gold: Flori
    concept:
      description:
        sequence: Sekuencë
        if: blloku Nëse
        if_else: blloku Nëse-Përndryshe
        loop_times: blloku i kohës së Përsëritur
        loop_until: blloku Përsërit derisa
        loop_while: blloku Ndërsa
        loop_for: blloku Numërimit
        function: Funksionet
        parameters: Funksione me parametra
    level:
      instructions:
        maze_2_2: 'A mund të më ndihmosh mua që të kap derrkucin e pa bindur? Grumbullo
          bashkë disa blloqe "ec përpara" dhe shtyp "Vrapo" të më ndihmosh mua të
          arrij atje. '
        maze_2_1: Ky derrkuci po më bezdis. Më ndihmo ta gjej atë!
        maze_2_2_5: Gjurmo rrugën dhe më drejto tek derrkuci budalla. Shmang TNT ose
          përndryshe do më ikin puplat!
        maze_2_3: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
        maze_2_4: Ruaj qetësinë dhe më ndihmo të gjej derrkucin e keq! Përndryshe
          do të nevrikosem!
        maze_2_5: Ka një mënyrë për të shkuar tek derrkuci budalla duke përdorur 2
          blloqe. Mund ta gjesh?
        maze_2_6: Përpiqu të më çosh tek ai i keqi i gjelbër duke përdorur vetëm tre
          blloqe.
        maze_2_7: Më ndihmo ta dëboj këtë derkkuc të keq duke përodrur numrin më të
          ulët të blloqeve. Përpiqu të përdorësh më shumë se një bllok "repeat times".
        maze_2_8: 'Kur një bllok është gri, kjo do të thotë që ti nuk mund ta fshish
          atë. Zgjidh këtë puzzle duke përdorur bllokun "repeat", që përsëritet 3
          herë. Përpiqu të vendosësh këto 3 blloqe brenda bllokut gri "repeat": lëviz,
          lëviz, kthehu.'
        maze_2_9: Në rregull, provo bllokune ri "repeat until" - do të [ërsëritet
          derisa unë të arrij derrkucin e mërzitshëm.
        maze_2_10: Në rregull, edhe një herë të fundit për tu praktikuar - a mund
          ta zgidhësh këtë duke përdorur vetëm 4 blloqe?
        maze_2_11: I dashur person. Unë zombie. Unë i uritur. Duhet...të shkoj...te
          lulja e diellit...A mund të më çosh atje vetëm me 5 blloqe?
        maze_2_12: Në rregull, kjo është e njëjtë, por me pak ndryshime. A mund ta
          bësh vetë me 5 blloqe?
        maze_2_13: 'Përdor bllokun e ri "if" për të më lënë të vendos se ku të kthehem.
          Ndihmë: ty të duhet një bllok më shumë, por mëso se si e vendosim ne, që
          ti të mund ta bësh më vonë vetë.'
        maze_2_14: Në rregull, kjo është njësoj si puzlle i fundit, por ti duhet të
          kujtohesh se si  përdore bllokun "if" dhe "repeat" bashkë.
        maze_2_15: Une dua lulen e diellit! Përdor një bllok "if", për të më çuar
          mua atje me numrin më të ulët të blloqeve.
        maze_2_16: Në rregull, le ta bëjmë përsëri për tu praktikuar - kjo nuk është
          shumë e ndryshme, por kujdes nga chompers!
        maze_2_17: Blloqet "if-else" kërkojnë një kusht që bën një gjë OSE një gjë
          tjetër. Për të më çuar tek luledielli përpiqu të përodrësh këtë bllok të
          ri.
        maze_2_18: Edhe një herë praktikohu me bllokun if-else, mund ta bësh si duhet
          me përpjekjen e parë?
        maze_2_19: A mund të shtosh thjesht 3 blloqe për të më ndihmuar mua të zgjidh
          një maze të vështirësuar? Nëse e bën si duhet, unë mund të ec në çdo rrugë
          të dredhuar pa marrë parasysh gjatësinë.
        turtle_1_1: Përshëndetje! Unë jam një artist. Ti mund të shkruash kod për
          të më bërë mua të vizatoj çdo gjë. Përdor pak blloqe për të më bërë mua
          të vizatoj vijat gri në figurë.
        turtle_1_2: 'Tani, vizato një katror. Shënim: përdor ngjyrën e preferuar duke
          e zgjedhur atë në bllokun e ri "set color".'
        turtle_1_3: Bëj një katror duke përdorurvetë 3 blloqe.
        turtle_1_4: 'Vizato një trekëndor ku anët e tij janë me ngjyra të ndryshme,
          duke përdorur opsionin "random color" që zgjedh një ngjyrë të ndryshme në
          çdo kohë. Ndihmë: ti duhet të zbulosh sa larg të kthehesh duke klikuar tek
          numri në bllokun e kthimit.'
        turtle_1_5: Tani, sa për tu praktikuar, vizato një trekëndor dhe më pas një
          katror për të vizatuar një zarf.
        turtle_1_6: 'A mund ta dish se si u vizatua ky trekëndor dhe katror?Ndihmë:
          Bëj së pari trekëndorin, më pas shiko se sa duhet të kthehesh përpara se
          të vizatosh katrorin.'
        turtle_1_7: Në rregull, le ta bëjmë pak më të vështirë - Shih nëse mund të
          vizatosh këto xhamat e gjelbër. Katrorët janë 100 piksela në secilën anë
          dhe janë 50 piksela të veçuar. Mos harro të vizatosh me ngjyrën jeshile!
        turtle_1_8: Në rregull, përpiqu të kuptosh se çfarë ndodh nëse ekzekuton këtë
          kod (ose shtyp "Run" për ta provuar atë). Më pas, përsërite atë aq herë
          sa ta mbarosh vizatimin. Ngjyrat do të jenë të ndryshme çdo herë.
        turtle_1_9: A mund të zbulosh se me çfarë numri ti zëvëndësosh pikëpyetjet
          për të vizatuar një rreth?
        turtle_1_10: 'Ti ja dole! Tani vizato çfarë të duash. Disa ide argëtuese:
          një figurë ngjitëse, flok dëbore ose spirale. Gjithashtu, provo bllokun
          e ri "set width". Bëfsh qejf!'
        turtle_4_1: 'A mund të vizatosh një trekëndor (me cepa 100 piksela) me vetëm
          3 blloqe? Ndihmë: përdor bllokun "repeat".'
        turtle_4_2: Shto një bllok "turn right by 90 degrees" diku në mes të programit,
          jashtë zonës tënde të punës, për të vizatuar këto trekëndorë.
        turtle_4_3: Në rregull, ja ku është kodi që shkruajte për të vizatuar një
          trekëndor. Mund të shtosh një bllok "repeat" dhe "turn" për të bërë një
          lule të bukur?
        turtle_4_4: 'Këtu është i njëjti kod si me atë të puzzle-it të mëparshëm,
          por duke u kthyer vetëm me 36 gradë pas vizatimit të secilit trekëndor.
          Sa herë duhet të përsëritet kjo? (Ndihmë: pas 360 gradësh kthimi të vizatimit
          do të vijë rrethi i plotë)'
        turtle_4_5: 'Këtu është i njëjti kod si ai i puzzle-it të mëparshëm, por duke
          përsëritur kthimet 36 herë. Sa gradë duhet të jetë kthimi? (Ndihmë: pas
          360 gradësh kthimi, vizatimi do të jetë rreth i plotë)'
        turtle_4_6: Duke përdorur 3 blloqe, a mund të vizatosh një katror me cepa
          20 piksela?
        turtle_4_7: 'Ja ku është kodi për të vizatuar katrorin e puzzle-it të fundit.
          A mund ta përsërisësh atë që të vizatosh 10 katorrë të ndryshëm si një shkallë?
          Ndihmë: ty të duhen 2 blloqe më shumë.'
        turtle_4_8: Ja ku është zgjidhja e puzzle-it të mëparshëm. A mund të shtosh
          2 blloqe më shumë për të përfunduar vizatimin?
        turtle_4_9: Ja ku është zgjidhja e puzzle-it të mëparshëm. Sa gradë duhet
          të kthehesh për të përfunduar vizatimin? ( Ti ndoshta duhet ta gjesh me
          pak herë)
        turtle_4_10: Ja ku është zgjidhja për puzzle-in e mëparshëm. Sa herë duhet
          ta përsërisësh që të përfundosh vizatimin?
        turtle_4_11: Përpiqu të ndryshosh numrat në blloqet "turn" dhe "repeat" për
          të bërë modele të ndryshme. Ose eksperimento në ndryshimin e pjesës së kodit
          për të vizatuar çfarë të duash.
        maze_karel_1_1: Përshëndetje, unë jam një fermer. Kam nevojë për ndihmën tënde
          që të zbukuroj fushën në fermën time, që të jetë gati për mbjellje. Më zhvendos
          mua në grumbullin e dheut dhe përdor bllokun "remove" për ta hequr atë.
        maze_karel_1_2: Më pas, më zhvendos tek gropa dhe mbushe atë me DY lopata
          plot me dhe duke përdorur bllokun "fill".
        maze_karel_1_3: Më zhvendos mua tek grumbulli me dhe dhe më thuaj mua sa lopata
          plot të heq duke përdorur sa më pak blloqe të jetë e mundur.
        maze_karel_1_4: 'A mund të më ndohmosh mua të heq të katërt grumbujt me dhe?
          Ndihmë : përdor një bllok përsëritës nëse ke mundësi.'
        maze_karel_1_5: 'Më ndihmo mua ti mbush të gjitha gropat me 5 lopata me dhe.
          Ndihmë: ti mund të vendosësh një bllok "repeat" brenda bllokut "while".'
        maze_karel_1_6: Hiq të gjithë grumbujt me dhe duke përdorur sa më pak blloqe
          të jetë e mundur. Opsionet në menunë dropdown tek blloku "while" më tregojnë
          nëse jam duke qëndruar në grumbull ose në një gropë.
        maze_karel_1_7: Wow, unë gjeta një gropë vërtet të thellë! Nuk e di se sa
          lopata me dhe nevojiten. A mund të shkruash një program që e mbush atë derisa
          toka të jetë e shtruar?
        maze_karel_1_8: Help me fill in the hole at the end of the field, using as
          few blocks as possible.
        maze_karel_1_9: 'Make me remove all these piles of dirt. Try to use as few
          blocks as possible. Hint: try using a "while" block.'
        maze_karel_1_10: I'm working late, so it's dark out, and I can't tell how
          large the piles are. Now I don't have all the options I used to have on
          the while block. Move me along the field, and if there is a pile, remove
          it.
        maze_karel_1_11: 'It''s still dark outside. Move me along the field. If there
          is a pile, remove it, and if there is a hole, fill it in. Hint: use the
          dropdown menu of options on the "if" block.'
        turtle_2_1: 'Hello. Me zombie artist. Me love drawing! Help me draw a square
          in a special color. Important note: you have all the same blocks but they''ve
          now been arranged in categories.'
        turtle_2_2: Welcome to using functions, which let you define new blocks! Try
          the new "draw a square" block, found in the "Functions" category, to draw
          a small 50x50 green square.
        turtle_2_3: Use the "repeat" block (in the "Loops" category) to draw 3 squares
          of size 100, each 120 degrees apart. And do it in 3 different, random colors.
        turtle_2_4: 'Now we''re going to get fancy. Change the code to draw 36 squares,
          100 pixels wide, and each 10 degrees apart. Hint: you may want to use the
          slider to make me go faster.'
        turtle_2_5: Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll
          need to use the "draw a square" function five times.
        turtle_2_6: 'Ok, this program will use a counter, to draw the same squares
          as last time. You want the square to be the same size as the counter, so
          use the "counter" block. Hint: It''s in the Variables category.'
        turtle_2_7: Here's a program to draw a spiral, but the blocks are disabled
          so they won't run. Make a new program using a "count with" block (in the
          Loops category) and "counter" block (in the Variables category) to draw
          the same spiral.
        turtle_2_7_5: There's a new "draw a snowman" function (in the Functions category).
          Draw two snowmen, of height 250 and 100.
        turtle_2_8: This one's a bit tricky. Use the "draw a snowman" function and
          the new "jump forward" block (in the Actions category). Draw 3 snowmen in
          different colors, 100 pixels apart.
        turtle_2_9: Use a "count with" loop to draw a family of snowmen with heights
          of 110, 100, 90, 80, and 70. The snowmen should all be 60 pixels apart.
        turtle_2_10: Here's some code to try experimenting with different spirals.  What
          happens if you change the turn amount? Or set a random color in the loop?  Draw
          anything you like.
        maze_karel_2_1: 'Try using the blocks to help me remove all the piles and
          fill in all the holes on the ground. Try to use loops instead of using too
          many blocks. Hint: you can put a loop inside another loop.'
        maze_karel_2_2: We've defined our own block called "fill 5", which is now
          in the Functions category. Use it to help me fill in this hole.
        maze_karel_2_3: Përdor bllokun e funksionit të ri "fill 5" për të më bërë
          mua të mbush gjithë gropat. Ti duhet të zvarrisësh bllokun "fill 5" nga
          kategoria e Funksioneve.
        maze_karel_2_4: Përcakto një funksion të ri që heq 7 lopata të mbushura. Më
          pas përodre atë për të shkruar një program që më ndihmon të heq të gjithë
          grumbujt.
        maze_karel_2_5: Krijo një funksion të ri që heq 6 lopata të mbushura nga grumbulli
          dhe përdore atë për të më ndihmuar mua të niveloj të gjithë grumbujt.
        maze_karel_2_6: Përdor dy funkisone të reja. "fill 8" dhe "remove 8", për
          të më ndihmuar mua të niveloj grumbullin dhe të mbush gropën.
        maze_karel_2_7: Ka një lopë në fushën time! Shkruaj një funksion të ri që
          më ndihmon mua të shmang lopën dhe të heq grumbullin. Vendos të gjithë blloqet
          brenda funkisonit të ri.
        maze_karel_2_8: Përodr këtë funksion të ri, "avoid the cow and remove 1",
          për të më ndihmuar mua të heq të gjithë grumbujt.
        maze_karel_2_9: Në rregull, këtu ka një funksion që heq 4 grumbuj të ndryshëm
          dheu në një kolonë vertikale. Përpiqu të vendosësh këtë funksion brenda
          një cikli, që të mund të heqësh të gjithë grumbujt e dheut duke përdorur
          disa blloqe të reja.
        maze_karel_2_10: Më lëviz mua përmes fushës dhe përdor këto dy funksione,
          për të më ndihmuar mua të heq gjithë grumbujt dhe të mbush gjithë gropat.
        turtle_3_1: Ky puzzle të tregon se si janë përcaktuar funksionet "draw a square"
          dhe "draw a circle". Për të përcaktuar një funksion nuk përdoren blloqet
          e tij. Ti duhet të zvarrisësh bllokun "draw a square" për të vizatuar një
          katror.
        turtle_3_2: Duke përdorur funksionin "draw a square" si nje shembull, krijo
          nje funksion "draw a triangle" dhe përodre atë.
        turtle_3_3: 'Vizato gardhe trekëndorë rreth maceve dhe gardh katror rreth
          lopës.Tip: Testo programin ndërkohë që punon.'
        turtle_3_4: Shih nëse mund të gjesh se si të përdorësh "draw a square" dhe
          "draw a triangle" (dhe disa blloqe të tjera) për të vizatuar një shtëpi
          rreth luanit.
        turtle_3_5: 'Tani, krijo një funksion "draw a house" dhe përdore atë të strehosh
          dy mace. Ndihmë: krijo një funksion të ri duke përdorur bllokun "do somehting"
          dhe shtyp tekstin tënd për të emëruar bllokun.'
        turtle_3_6: 'Duke përdorur "draw a square" si një shembull, shto një të dhënë
          të emëruar "length" të "draw a triangle". Më pas, vizato trekëndorët në
          madhësi të ndryshëm. (Ndihmë: kliko yllin të shtosh një të dhënë në funksion)'
        turtle_3_7: Shto një të dhënë të emëruar "length" të "draw a house" dhe ndërto
          një shtëpi të madhe për elefantin (me gjatësi cepash 150 piksela)
        turtle_3_8: Këu janë të gjithë blloqet nga puzzle i mëparshëm. Ndrysho "draw
          a house" dhe unë përfundoj në cepin e djathtë poshtë pasi vizatimit të një
          shtëpie të re. Përodre këtë funksion të ndryshuar për të vizatuar 3 shtëpi.
        turtle_3_9: A mund të rikrijosh funksionin "draw a house" pa ndihmë? Provoje
          dhe pastaj vizato një rresht me shtëpi.
        turtle_3_10: Ti ke mësuar shumë! Tani përdore për të vizatuar çfarëdo që ti
          dëshiron. Përpiqu të vizatosh një yll ose një spirale ose një flok dëbore
          të bukur.
        maze_karel_debug_seq_1: MIrë se vini në debugging! Kodi im nuk punon si duhet.
          Mund ta shënoni si problem dhe ta rregulloni në mënyrë që të më shtrohet
          fusha dhe të jetë gati për mbjellje?
        maze_karel_debug_seq_2: Çfarë problemi ka me këtë program? Si mund ta rregullosh
          në mënyrë që të heq këtë grumbull?
        maze_karel_debug_repeat: Rregulloje këtë program për mua, që fusha ime të
          jetë e sheshtë dhe e mirë.
        maze_karel_debug_while: Si mund të ndryshosh këtë program për të më ndihmuar
          mua të mbush gropën?
        maze_karel_debug_if: Ndihmë! Rregullo programin, që fusha ime të jetë totalisht
          e sheshtë.
        maze_karel_debug_if_else: Rregullo këtë program në mënyrë që të mbush gropat
          dhe të heq gjithë grumbujt.
        maze_karel_debug_function_1: Çfarë duhet të ndryshosh për këtë program që
          të më ndihmosh mua të heq gjithë grumbujt?
        maze_karel_debug_function_2: A mund të rregullosh këtë program për mua që
          ta bëj fushën time të sheshtë?
        maze_karel_debug_function_3: 'Redakto këtë program që të heq gjithë grumbujt
          nga fusha. '
        turtle_5_1: Përpiqu ta ekzekutosh këtë program dhe bëj ndryshime për të parë
          se çfarë ndodh. A mund ta imagjinosh se si punon? (Ose fshije atë dhe zëvëndësoje
          atë me diçka komplet ndryshe)
        turtle_5_2: Përpiqu ta ekzekutosh këtë program dhe bëj ndryshime për të parë
          se çfarë ndodh. A mund ta imagjinosh se si punon? (Ose fshije atë dhe zëvëndësoje
          atë me diçka komplet ndryshe)
        turtle_5_3: Përpiqu ta ekzekutosh këtë program dhe bëj ndryshime për të parë
          se çfarë ndodh. A mund ta imagjinosh se si punon? (Ose fshije atë dhe zëvëndësoje
          atë me diçka komplet ndryshe)
        turtle_5_4: Përpiqu ta ekzekutosh këtë program dhe bëj ndryshime për të parë
          se çfarë ndodh. A mund ta imagjinosh se si punon? (Ose fshije atë dhe zëvëndësoje
          atë me diçka komplet ndryshe)
        turtle_5_5: Përpiqu ta ekzekutosh këtë program dhe bëj ndryshime për të parë
          se çfarë ndodh. A mund ta imagjinosh se si punon? (Ose fshije atë dhe zëvëndësoje
          atë me diçka komplet ndryshe)
        turtle_5_6: Përpiqu ta ekzekutosh këtë program dhe bëj ndryshime për të parë
          se çfarë ndodh. A mund ta imagjinosh se si punon? (Ose fshije atë dhe zëvëndësoje
          atë me diçka komplet ndryshe)
        maze_3_1: Unë kam nevojë të arrij tek ai derrkuc! Shkruaj disa thirrje për
          të lëvizur(); që unë të marr mbrapsht vezët e mia.
        maze_3_2: Më shkruaj një program që unë të shkoj tek ai derrkuc me çdo kusht.
        maze_3_3: Si të shkoj te derrkuci? Sigurohu që unë nuk vrapoj brenda kutisë
          së TNT!
        maze_3_4: Argh! Më shkruaj një program që më nxjerr nga TNT dhe më çon drejt
          derrkucit.
        bounce_1: Bashkangjit një bllok me bllokun "when left arrow" dhe shtyp "Run".
          Lëviz lopatën duke përodrur shigjetën e majtë për të arritur në objektivin
          e fundit.
        bounce_2: Bashkangjit një bllok me blloqet "when right arrow" dhe "when left
          arrow" . Lëviz lopatën për të arritur  të dy objektivët e fundit.
        bounce_3: Tani provo dicka të ngjashëm me bllokun "when up arrow". Lëviz lopatën
          për tek objektivi i fundit në majë.
        bounce_4: Këtë herë ti duhet të shtosh katër blloqe. Lëviz lopatën tek të
          katërt objektivët e fundit për të përfunduar këtë puzzle.
        bounce_5: Ne jemi duke dërguar një top fluturues poshtë drejt lopatës. Bashkangjit
          një bllok tek blloku "when ball hits paddle" për tu siguruar që topi arrin
          objektivin final.
        bounce_6: Tani, objektivi final është në majë.Ti duhe të bashkangjitësh blloqe
          tek të dy blloqet "when ball hits" për të zgjidhur këtë puzzle.
        bounce_7: Bashkangjit blloqe tek çdo bllok "when". Hidh topin derisa të godasë
          objektivin final.
        bounce_10: Tani është një objektiv në majë. Bashkangjit blloqet "score point"
          dhe "score opponent point" tek blloqet "when ball in goal" dhe "when ball
          misses paddle" për të bërë një lojë. Shih se sa shumë pikë mund të realizosh
          përpara se kundërshtari yt të shënojë dy herë.
        bounce_11: Ti, tani, mund të bashkangjitësh blloqe tek blloku "when run".
          Ti duhet të bashkangjitësh bllokun e ri "launch new ball" në më shumë se
          një vend. Gjithashtu, përpiqu të ndryshosh vendngjarjen ose shpejtësinë
          e lopatës dhe topit dhe shiko se sa shumë pikë mund të shënosh përpara se
          kundërshtari jot të shënojë dy herë.
        bounce_12: Krijo lojën tënde Bounce. Ti mund të ndryshosh të gjithë pamjet
          dhe rregullat. Kur të mbarosh, kliko Përfundova për të lejuar shokët të
          provojnë lojën tënde në telefonat e tyre.
        Custom_builder: Lëviz blloqet nga toolboxi tek vendi i punës për të vizatuar
          nivelin që dëshiron të krijosh. Shtyp "Run" kur të jesh gati.
        flappy_1: Bashkangjit një bllok tek blloku "when click" dhemë pas shtyp "Run".
          Kliko ose shtyp ekranin për të lëvizur Flappyn tek objektivi.
        flappy_2: Now we've added some ground.  Attach a block to the "when hit the
          ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_3: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_4: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. Your code
          needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_5: Let's add a scoreboard, and count points when Flappy makes it past
          obstacles. Add to the "when pass an obstacle" block, and then score a point
          by flying Flappy through the first set of pipes.
        flappy_6: See if you can still score a point after making Flappy flap either
          a smaller or larger amount.
        flappy_7: Next, try changing the scene by attaching another block to the "when
          run" block.
        flappy_8: You can set visuals anytime, not just when the game starts. Try
          setting a RANDOM scene when other events happen, for example, when passing
          an obstacle.
        flappy_9: To mix things up, when hitting an obstacle or the ground, instead
          of ending the game try setting the score back to 0.
        flappy_11: Create your own Flappy game. You can change all the visuals and
          all the rules, even the gravity. When you're done, click Finish to let friends
          try your game on their phones.
        flappy_k1_1: Play Flappy
        flappy_k1_2: Bashkangjit një bllok tek blloku "when click" dhemë pas shtyp
          "Run". Kliko ose shtyp ekranin për të lëvizur Flappyn tek objektivi.
        flappy_k1_3: Now we've added some ground.  Attach a block to the "when hit
          the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_k1_4: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_k1_5: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. Your code
          needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_k1_6: Let's add a scoreboard, and count points when Flappy makes it
          past obstacles. Add to the "when pass an obstacle" block, and then score
          a point by flying Flappy through the first set of pipes.
        flappy_k1_7: See if you can score multiple points for making it past an obstacle
        flappy_k1_8: Next, try changing the scene by attaching another block to the
          "when run" block.
        flappy_k1_9: Try changing the player by attaching a "set player" block to
          the "when run" block.
        jigsaw_1: Click the block
        jigsaw_2: Drag the block to the target
        jigsaw_3: Arrange the blocks to form the image
        jigsaw_4: Arrange the blocks to form the image
        jigsaw_5: Arrange the blocks to form the image
        jigsaw_6: Arrange the blocks to form the image
        jigsaw_7: Arrange the blocks to form the image
        jigsaw_8: Arrange the blocks to form the image
        jigsaw_9: Arrange the blocks to form the image
        jigsaw_10: Arrange the blocks to form the image
        jigsaw_11: Arrange the blocks to form the image
        jigsaw_12: Arrange the blocks to form the image
        jigsaw_13: Fix the puzzle!
        mazestep_1: Maze step description here
        mazestep_2: Maze step description here
        mazestep_3: Maze step description here
        mazestep_4: Maze step description here
        mazestep_5: Maze step description here
        studio_c2_1: Can you make this dog say "hello world"?
        studio_c2_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_c2_3: Can you write a program to make this dog move to the cat?
        studio_c2_4: Can you write a program that makes the dog move to the cat, and
          have the cat say "hello" when the dog reaches him?
        studio_c2_5: Can you write a program to make the octopus say "hello" when
          it is clicked?
        studio_c2_6: Can you write a program to make this penguin move around using
          the up / down / left /right keys to hit all of the targets?
        studio_c2_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c2_8: Can you have the penguin say "Ouch!" and play a "hit" sound if
          he runs into the dinosaur, and then move him with the arrows to make that
          happen?
        studio_c2_9: Can you add a block to score a point when the penguin runs into
          the octopus, and then move him with the arrows until you score?
        studio_c2_10: Can you add blocks to change the background and the speed of
          the penguin, and then move him with the arrows until you score?
        studio_c2_11: Create your own story. When you're done, click Finish to let
          friends try your story on their phones.
        studio_c3_story_1: Can you make this dog say "hello world"?
        studio_c3_story_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_c3_story_3: Can you write a program to make this dog move to the cat?
        studio_c3_story_4: Can you write a program that makes the dog move to the
          cat, and have the cat say "hello" when the dog reaches him?
        studio_c3_story_5: Can you add a block to make the octopus happy?
        studio_c3_story_6: Create your own story. When you're done, click Finish to
          let friends try your story on their phones.
        studio_c3_game_1: Can you write a program to make the octopus say "hello"
          when it is clicked?
        studio_c3_game_2: Can you write a program to make this penguin move around
          using the up / down / left /right keys to hit all of the targets?
        studio_c3_game_3: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c3_game_4: Can you have the penguin say "Ouch!" and play a "hit" sound
          if he runs into the dinosaur, and then move him with the arrows to make
          that happen?
        studio_c3_game_5: Can you add a block to score a point when the penguin runs
          into the octopus, and then move him with the arrows until you score?
        studio_c3_game_6: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_c3_game_7: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
        studio_playlab_1: Penguin wants to say "hello" - can you help him?
        studio_playlab_2: Cave Boy (actor 1) and Cave Girl (actor 2) would like to
          say "hello" to each other. Can you help them by using the "say" block twice?
        studio_playlab_3: Can you help Tennis Girl get to the flag?
        studio_playlab_4: Can you help Tennis Boy (actor 1) get to Tennis Girl (actor
          2) and play a sound when he gets there?
        studio_playlab_5: Can you help the Spacebot say "greetings earthlings" when
          it is clicked? Don’t forget to click it after you click Run
        studio_playlab_6: Can you help the Witch move around using the up/down/right/left
          arrow keys to get to all the magical fireballs?
        studio_playlab_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to it to help the wizard move right and left repeatedly?
        studio_playlab_8: Can you add a block to score a point and a block to play
          a sound when the unicorn runs into the wizard, and then move him with the
          arrows until you score?
        studio_playlab_9: Set the background for this alien invasion and help the
          Spacebot get to the alien faster by changing its speed. Then move him with
          the arrow keys to get to the Spacebot and alert everyone else
        studio_playlab_10: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
        studio_full_sandbox: Create your own game. When you're done, click Finish
          to let friends try your game on their phones.
        studio_k1_1: Can you make this dog say "hello world"?
        studio_k1_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_k1_3: Can you write a program to make this dog move to the cat?
        studio_k1_4: Make the dog move to the cat and the cat say "hello" when he
          gets there.
        studio_k1_5: Can you add a block to make the octopus happy?
        studio_k1_6: Create your own story! Move around the cat and dog, and make
          them say things.
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell
          the word STORY
        webapp_ec_simple: Create your web app by using createHtmlBlock.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking
          it in the new "penColor" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas:
          a stick figure, snowflake, or spiral. Also try the new "penWidth" block.
          Have fun!'
        studio_ec_sandbox: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
    levelbuilder:
      frozen line:
        instructions: Përshëndetje! Unë jam Elsa e Arendelle. Më ndihmo të krijoj
          një rresht të vetëm.
      frozen perpendicular:
        instructions: Tani le të shohim nëse ne mund të krijojmë dy rreshta që janë
          në një kënd 90 gradë nga njëri tjetri. Ti duhet të përdorësh bllokun "Kthehu"
          ashtu si edhe bllokun "Leviz".
      frozen square iterative:
        instructions: It seems like we're halfway to making a square. Let's put 4
          lines together to create a square.
      frozen square loop:
        instructions: Hi, I'm Anna of Arendelle! Let's make a square with the "Repeat"
          block, which uses fewer blocks. How many times (???) should the "Repeat"
          block loop the blocks inside it to make a square?
      frozen square loop 3x:
        instructions: Let's create three squares, turning after each square. Be sure
          to turn by 120 degrees before each new square.
      frozen square snowflake:
        instructions: Can you create a snowflake using the "Repeat" block to make
          a square 10 times, and the "Turn" block to turn 36 degrees between each
          square?
      frozen cross:
        instructions: Use the "Repeat" block to create a plus sign. Did you notice
          Elsa can move forward and backward?
      frozen cross rotate:
        instructions: Now try repeating it 10 times. How many degrees do you need
          to turn between each line?
      frozen cross rotate dense:
        instructions: 'Let''s repeat it 90 times! How many times does 90 go into 360?
          Hint: It''s a really small number.'
      frozen diamond:
        instructions: 'Let''s create a parallelogram. It''s just like a square but
          has different angles: 60 and 120 degree angles instead of 90 degree angles.'
      frozen diamond mini snowflake:
        instructions: Did you know every snowflake is a different shape? Let's create
          a new snowflake by using the "Repeat" block to repeat a parallelogram 4
          times, turning right by 90 degrees between each parallelogram.
      frozen diamond snowflake:
        instructions: Now, let's create a new snowflake by using the repeat block
          to repeat a parallelogram 10 times, turning right by 36 degrees between
          each one.
      frozen circle:
        instructions: A circle is a special shape. Can you figure out what number
          to replace the question marks with to draw a circle?
      frozen circle function:
        instructions: Use the new "Create a circle" block to create 10 overlapping
          circles. Don't forget to jump forward between circles.
      frozen circle function in circle:
        instructions: Now let's create 20 overlapping circles, turning 18 degrees
          between each circle.
      frozen circle function with parameter:
        instructions: Here's a "Create circle" block that can make circles of different
          sizes. Can you use this to create a small circle of size 5 and a larger
          circle of size 10?
      frozen snowflower:
        instructions: Intricate snow patterns can be created with very simple shapes.
          Can you make a pattern by repeating 5 circles of size 5 and 5 circles of
          size 10?
      frozen snowflake branch:
        instructions: Try using the "Create a snowflake branch" block to create three
          branches, which starts to look like a snowflake.
      frozen snowflake full:
        instructions: Now let's repeat it 8 times to make a beautiful snowflake!
      frozen freeplay:
        instructions: You've officially become a master artist! Create a winter wonderland.
      scrat 16:
        instructions: Acorn! Acorn! Acorn! Use an "if" block to get me there with
          the fewest number of blocks.
      scrat 17:
        instructions: Ok, let's do that again for practice - this isn't very different,
          but watch out for the wall!
      scrat 18:
        instructions: The "If-else" blocks checks a condition, and then does one thing
          OR another. To get me to the acorn try to use this new block.
      scrat 19:
        instructions: Edhe një herë praktikohu me bllokun if-else, mund ta bësh si
          duhet me përpjekjen e parë?
      scrat 20:
        instructions: Can you add just 3 blocks to help me solve a more complex maze?
          If you do it right, I can walk any curvy path no matter the length. Hurry!
          The ice is melting!
      Standalone_Artist_1:
        instructions: Welcome to Artist! First off, let's try to make a simple square
          using the turn right block and move forward block. Each side should be 100
          pixels long.
      Standalone_Artist_2:
        instructions: Draw this diamond with 120 and 60 degree angles and 150 pixel
          long sides.
      Standalone_Artist_3:
        instructions: Can you draw this hexagon with 100 pixel sides and 60 degree
          turns?
      Standalone_Artist_4:
        instructions: Now you've got a new block to play with, the loop. This will
          repeat a set of commands. What happens if you loop these commands 6 times?
      Standalone_Artist_5:
        instructions: How many times do you need to loop this diamond to draw the
          flower?
      Standalone_Artist_5.5:
        instructions: 'Notice how we simplified the diamond code by turning it into
          a loop. You can loop that whole sequence 12 times to draw the flower. Hint:
          You''ll need to turn 30 degrees after your diamond loop so you don''t keep
          drawing over the same diamond.'
      Standalone_Artist_6:
        instructions: 'Loop this hexagon code 6 times to create the design. How many
          degrees will you need to turn each time? Hint: divide the number of degrees
          in a circle by the number of times you are looping.'
      Standalone_Artist_7:
        instructions: 'A function is another programming tool to help you avoid repeating
          yourself. This function draws a flower, so you can use it any time you want
          to draw a flower. Use this and the new jump block to draw these flowers.
          Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8:
        instructions: Here's a function called "Draw a shape" that we've programmed
          to draw hexagons. Run the code to see what it does and then experiment with
          the function to see what happens. Can you make it draw a pattern of squares,
          triangles, or octagons?
      Standalone_Artist_9:
        instructions: Now go ahead and make whatever picture you'd like! You've even
          got an empty function that you can make do whatever you want!
    video:
      name:
        maze_intro: Maze Intro
        artist_intro: Artist Intro
        farmer_intro: Farmer Intro
        flappy_intro: Flappy Intro
        loop_times: Repeat Times Block
        loop_until: Repeat Until Block
        if: If Block
        if_else: If/else Block
        if_else_scrat: If/else Block
        function: Funksionet
        loop_while: While Block
        loop_for: Counter Block
        parameters: Functions with Parameters
        hoc_wrapup: Hour of Code Wrapup
        Unplug1: What is CS?
        Unplug2: Te menduarit si kompjuter
        Unplug3: Programimi grafik me leter
        Unplug4: Algoritmet
        Unplug5: Funksionet
        Unplug6: Kushtoret
        Unplug7: Songwriting
        Unplug8: Abstraksion
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: Mbështjell
        C1_happy_maps_unplugged: Happy Maps
        C1_moveitmoveit_unplugged: Move It, Move It
        C1_bigevent_unplugged: The Big Event
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: Pair Programming
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: Maze Debugging
        C1_bee_level_intro: Bee Level - Intro
        C1_artist_intro: Artist Intro
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: Play Lab - Create a Story
        C1_planting_seed: Planting a Seed
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: Maze Intro
        C2_artist_intro: Artist Intro
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: Play Lab - Create a Story
        C2_graph_paper: Programimi grafik me leter
        C2_conditionals_with_cards: Kushtoret
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: Programimi i Besuar
        C2_paper_airplanes: Paper Airplanes
        C2_digital_footprint: Your Digital Footprint
        C3_maze_level_4: Maze Loops
        C3_artist_intro: Artist Intro
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: Nested Loops
        C3_farmer_while: While Loops
        C3_bee_nested_loops: Nested Loops
        C3_bee_debugging: Bee Debugging
        C3_bounce: Hidhu
        C3_playlab_create_game: Play Lab - Create a Game
        C3_computational_thinking: Te menduarit si kompjuter
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: Songwriting With Parameters
        C4_intro: Introduction
        C4_bee_conditional: Bee Conditionals
        C4_variables_artist: Variables - Artist
        C4_variables_playlab: Variables - Play Lab
        C4_for_loops: For Loops
        C4_math_artist: Programming the Artist with Math
        C4_function_edit: Editing Functions
        C4_function_create: Creating Functions
        C4_function_parameters: Functions with Parameters
        C4_conditionals: Kushtoret
        C4_unplugged_algorithms: Algorithms with Tangrams
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variables in Envelopes
        C4_unplugged_forloops: For Loops
        C4_unplugged_parameters: Songwriting with Parameters
        C4_unplugged_binary: Binary
        frozen_intro: Hour of Code Intro
        frozen_loops: Introduction to Loops
        frozen_functions: Introduction to Functions
        playlab_intro: Introduction to Play Lab
        playlab_events: Play Lab Events
        playlab_repeat_forever: Play Lab Repeat Forever
    callout:
      text:
        drag_blocks: Drag a "move" block and snap it below the other block
        run: Hit "Run" to try your program
        watch_again: Click here to watch the video again
        gray_block_explanation: Blocks that are grey can't be deleted. Can you solve
          the puzzle anyway?
        show_code_explanation: Click here to see the code for the program you're making
        instructions_repeat_explanation: The instructions for each puzzle are repeated
          here
        category_explanation: You have all the same blocks but they've now been arranged
          in categories
        set_sprite_image: Attach a "set actor to image" block to the "when story starts"
          block to enable an actor for this story
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: Click this block!
        move_elsa_forward: Drag a "Move Forward" block and snap it below the "When
          Run" block to make Elsa move forward
        turn_elsa: Use the "Turn" block to make Elsa turn. The number in the drop-down
          determines how much Elsa turns
        replace_questions: Use the drop-down to replace "???" with a number
        replace_questions_degree: Use the drop-down to replace "???" with the correct
          degree to turn
        repeat_blocks: Use the "Repeat" block and wrap it around the blocks in the
          workspace
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the
          workspace
        repeat_blocks_2: (2) Move the "Repeat" block here, and place the gray blocks
          inside
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each
          angle in degrees.
        set_sides: Use this block to set "sides" to the number needed to complete
          the puzzle.
        set_length: Use this block to set "length" to the correct value.
        which_equation: Which equation makes each side shorter for shapes with more
          sides?
        get_nectar: Use the new "get nectar" block.
        actions_category: The tool box got a new look! The "Actions" blocks are in
          here now.
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Click here to edit your function.
        create_function: Click here to open the "Functions" flyout, then click the
          "Create a Function" button.
        house_hint: It's ok if the picture doesn't look like a house yet. We will
          fix it in the next puzzle.
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction
          the Bee will turn to get the nectar.
        logic_category: Open the "Logic" flyout to find the "if/else" block.
        length_parameter: Can you update this function so it uses the "length" parameter?
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: Don't forget to turn after creating
          each circle.
        frozen_circle_function_with_parameter_circle: Use the "create a circle" block
          and change the size.
        frozen_snowflake_branch: Use the "create a snowflake branch" block
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: Drag the "say" block here and type "hello"
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: Use the "move right" block to move Tennis Girl
        playlab_play_sound: Add "play sound" block here
        playlab_arrow_keys: Remember to use these to move the witch after clicking
          on Run
        playlab_add_move: Add "move" blocks inside this repeat block
        playlab_add_score: Add score blocks here
        playlab_add_blocks: Add your blocks here
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect
          here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: This is your function definition. These blocks
          run everytime you use the "draw a square" block
        change_here: Make your change here
        write_draw_square_function: Drag blocks from the toolbox into here that draw
          a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that
          draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add,
          and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor
          (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: Use the "if" block to decide if the bee should get nectar
        if_else_bee: Use the "if/else" block so that the Bee gets nectar from a flower,
          and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to
          make a full circle
        place_length_variable: Drag the length variable here to replace the question
          marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
