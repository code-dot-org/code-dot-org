---
uk:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Ласкаво просимо до вашої першої години коду! Нумо, не зволікаючи, зробімо
          першу спробу в програмуванні.
      2:
        image: notes/hoc1_2.jpg
        text: Ми будемо використовувати Блоклі - візуальну мову програмування, де
          код програми не пишуть, а перетягують команди-блоки.
      3:
        image: notes/hoc1_3.jpg
        text: Більшість програмного коду потрібно набирати, але Blocky є візуальним
          середовищем. Кожен блок відповідає одному рядку коду.
      4:
        image: notes/hoc1_4.jpg
        text: Ви дізнаєтесь основи інформатики та поняття, які використовуються всюди,
          від програмування до контролю марсохода.
      5:
        image: notes/hoc1_5.jpg
        text: Програма - це набір інструкцій, які має виконати комп'ютер.
      6:
        image: notes/hoc1_6.jpg
        text: Метою вашої першої програми є перевести Злого Птаха через лабіринт до
          Зеленої Свині.
      7:
        image: notes/hoc1_7.jpg
        text: Ліворуч розміщено лабіринт, у якому виконуватиметься програма. Вказівки
          для кожного завдання знаходяться під лабіринтом.
      8:
        image: notes/hoc1_8.jpg
        text: Середня секція містить команди для Злого Птаха. Ви їх використаєте для
          побудови коду.
      9:
        image: notes/hoc1_9.jpg
        text: Праворуч міститься робоча область, в яку перетягуються блоки з панелі
          інструментів для побудови програми. Щоб видалити блок, його потрібно перетягнути
          у смітник в кутку.
      10:
        image: notes/hoc1_10.jpg
        text: Кожен блок - це одна команда. Якщо ви перетягнете блок "рухатись вперед"
          на робочу область і натиснете "Запуск програми", птах переміститься на одну
          позицію в лабіринті.
      11:
        image: notes/hoc1_11.jpg
        text: Щоб виконати більше однієї дії, перетягни кілька блоків на робочу область
          та з'єднай їх. Птах виконуватиме команди згори донизу.
      12:
        image: notes/hoc1_12.jpg
        text: Якщо програму запущено і бажаєш ще щось виправити та повторити спробу
          - натисни кнопку "Скидання".
      13:
        image: notes/hoc1_13.jpg
        text: Нумо, дістанемо цих свиней!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Привіт, я JR! Для перемоги кожна команда потребує фахівців з комп'ютерних
          наук. Вони аналізують дані, отримані від автомобіля, щоб він рухався швидше.
      2:
        image: notes/stage5_2.jpg
        text: У цих завданнях ви будете художником, який повсюди малює за собою лінію.
      3:
        image: notes/stage5_3.jpg
        text: Цей блок вказує "рухатись вперед на 100 пікселів". Пікселі - це маленькі
          крапки на екрані.
      4:
        image: notes/stage5_4.jpg
        text: Цей блок вказує "повернути праворуч на 90 градусів". Це дозволить повернути
          художника на вказаний кут, так само як блок "поворот" у завданнях лабіринту.
      5:
        image: notes/stage5_5.jpg
        text: Клацни на стрілці у будь-якому з цих блоків для того, щоб змінити те,
          наскільки художник переміщується вперед чи повертає. Поекспериментуй з цими
          новими блоками.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Привіт, я Паола! У цих завданнях ти допоможеш фермерці очистити поле
          для посадки рослин.
      2:
        image: notes/stage9_2.jpg
        text: Вам потрібно допомогти видалити всі купи землі та заповнити всі ямки.
      3:
        image: notes/stage9_3.jpg
        text: Нові блоки видаляють 1 відро землі з купи і засипають в ямку 1 відро
          землі.
      4:
        image: notes/stage9_4.jpg
        text: Купи та ямки різного розміру, тому потрібно вказати фермерці, скільки
          використати відер.
    flappy_intro:
      1:
        image: примітки/flappy01.jpg
        text: Привіт, Я Кеті! Одна із найбільш захопливих речей в інформатиці - це
          те, що комп'ютерна програма може бути інтерактивною.
      2:
        image: примітки/flappy02.jpg
        text: Щоразу коли хтось клацає чи торкається екрану комп'ютера чи телефону,
          це утворює ПОДІЮ, і існує код, який вказує, що робити при настанні певної
          ПОДІЇ.
      3:
        image: примітки/flappy03.jpg
        text: 'Наприклад, можна мати ОБРОБНИК ПОДІЇ, який вказує "коли клацнули мишкою,
          грай звук" '
      4:
        image: примітки/flappy04.jpg
        text: Ви коли-небудь чули про пташка Пурха (його ще знають як FlappyBird)?
          Використовуючи обробники подій, ми навчимось програмувати нашого власного
          Пурха!
      5:
        image: примітки/flappy05.jpg
        text: Код, який ви створите, передбачає перетягування блоків, які утворюють
          команди для комп'ютера. Всередині кожен з цих блоків складається зі справжнього
          коду.
      6:
        image: примітки/flappy06.jpg
        text: 'Якщо ви поглянете на робочу область, на ній вже розміщені деякі зелені
          блоки - це "обробники подій" '
      7:
        image: примітки/flappy07.jpg
        text: Якщо ви хочете, щоб птах змахував крилами при Клацанні мишкою, можна
          додати блок "махати" до відповідного обробника події, і тепер щоразу при
          клацанні мишкою птах змахуватиме крилами.
      8:
        image: примітки/flappy08.jpg
        text: У кожному завданні ми додаватимемо нові типи подій у вигляді зелених
          блоків на робочій області, і ви можете вирішувати, які саме блоки додавати
          для реакції на ці події.
      9:
        image: примітки/flappy09.jpg
        text: Коли ви побачите подібну стрілку вниз, це означає, що можна змінювати
          налаштування - наприклад, який саме звук грати, коли Пурх вдаряється об
          змелю.
      10:
        image: примітки/flappy10.jpg
        text: В останньому завданні ви зможете створити власну гру і поділитися нею
          з друзями. Успіхів!
    loop_times:
      1:
        text: Привіт, я Марк! Дізнаємось про цикли. Використання циклів вказує комп'ютеру
          повторити будь-який набір команд знову і знову, сотні, або й мільйони разів.
      2:
        text: У цьому завданні ми хочемо змусити птаха рухатись вперед на 5 позицій,
          щоб дістатись до свині.
      3:
        text: Ми можемо використати новий блок "повторити".
      4:
        text: Замість того, щоб перетягувати 5 блоків "рухатись вперед"...
      5:
        text: Ми можемо поставити блок "рухатись вперед" всередину блоку "повтори"
          і записати число всередині блоку, щоб вказати скільки разів слід повторити
          цю дію.
      6:
        text: 'І це важливо: можна розмістити кілька команд всередині блоку "повтори".'
      7:
        text: Розважайтесь зі своїм новим блоком "повторити"!
    loop_until:
      1:
        text: Привіт, я Кріс. Перед тим, як приєднатись до команди Miami Heat, я вивчав
          комп'ютерні науки в Технічному інституті Джорджиї. Спробуймо новий блок
          - "повторити до".
      2:
        text: А якщо ми не знаємо, як далеко потрібно переміститись птахові, щоб дістатись
          до свині?
      3:
        text: Якщо ми розмістимо блок "рухатись вперед" всередині блоку "повторювати
          до", птах рухатиметься вперед доти, доки не дістанеться свині (або доки
          не вріжеться в стіну).
      4:
        text: 'І це важливо: так само, як і раніше, ми можемо розмістити кілька блоків
          всередині блоку "повторювати до", і вони будуть повторюватись.'
    if:
      1:
        text: 'Привіт, я Білл! Вивчимо нове базове поняття: команду галуження, яка
          допомагає комп''ютеру приймати рішення.'
      2:
        text: 'Ви самі використовуєте команду галуження щодня. Перед виходом з дому
          щоранку ви аналізуєте: ЯКЩО йде дощ, то треба одягнути плащ.'
      3:
        text: Ми можемо вказати зомбі перевіряти, чи є шлях ліворуч, і ЯКЩО є шлях
          ліворуч, ми вкажемо йому повернути в цьому напрямку.
      4:
        text: Щоб створити цей код, перетягнемо блок "якщо" і поставимо блок "повернути
          ліворуч" всередину.
      5:
        text: Тепер, коли ми вгорі поставили блок "рухатись вперед" і навколо всього
          блок "повтори", щоразу коли зомбі рухається, він перевірятиме наявність
          шляху ліворуч та повертатиме. Команда "повторити" є критичною, щоб перевіряти
          можливість повороту на кожному кроці.
      6:
        text: 'Команда розгалуження є дуже важливою в інформатиці. Одна з перших,
          створених мною програм, була гра хрестики-нулики, і в галуженні я перевіряв:
          ЯКЩО другий гравець може виграти, слід заблокувати цю виграшну позицію.'
      7:
        text: Розважайтесь з блоком „якщо“!
    if_else:
      1:
        text: Привіт, мене звуть Салоні. Я використовую програмування, щоб вирішувати
          задачі в охороні здоров'я та медицині. Зараз ми дізнаємось про блок "якщо-то-інакше".
          Він виглядає схоже на блок "якщо", але має додаткову частинку "інакше".
      2:
        text: Якщо я поставлю блок "рухатись вперед" в область "робити", і "повернути
          ліворуч" в область "інакше", це означає, що зомбі буде вибирати між двома
          варіантами. ЯКЩО попереду є шлях, то він рухатиметься вперед, ІНАКШЕ (якщо
          шляху попереду немає), зомбі поверне ліворуч.
      3:
        text: Так само, як із блоком "якщо", ми можемо розмістити блок "якщо-інакше"
          всередині блоку "повторити", щоб зомбі продовжував рухатися, а блок "якщо-інакше"
          допоможе перевірити чи потрібно повертати.
      4:
        text: Отож, відправимо зомбі на місця!
    if_else_scrat:
      1:
        text: Команда "якщо-інакше" є прийняттям рішення з-поміж двох варіантів. Подивимося,
          як можна використати команду "якщо-інакше", щоб допомогти нашому другу Скрету.
      2:
        text: Цей блок виглядає так само, як блок "якщо", але має додаткову частину
          внизу, що відповідає за дії "інакше". Якщо я поставлю блок "рухатися вперед"
          в область "робити", а блок "повернути ліворуч" в область "інакше", це означає,
          що Скрет буде рухатися вперед, якщо попереду є шлях. Якщо шляху вперед немає,
          Скрет поверне ліворуч.
      3:
        text: Це прийняття рішення і виконання однієї з двох дій на основі цього рішення.
          І точно так само, як із блоком "якщо", ви можете розмістити блок "якщо-інакше"
          всередині блоку "повторити".
      4:
        text: А тепер допоможемо Скрету дістатись до свого жолудя!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Привіт, я Бріна, інженер в Інстаграмі. Функція - це певні рядки коду,
          які ви хочете використати багато разів, тож замість того, щоб щоразу повністю
          писати цей код, можна використати один блок.
      2:
        image: notes/stage13_2.jpg
        text: Ми дізнаємось, як визначати функції. Визначення функції починається
          із зірочки в кутку. Назва функції записується у верхньому рядку.
      3:
        image: notes/stage13_3.jpg
        text: Блоки, розміщені всередині визначення, вказують, що робити. Наприклад,
          це визначення функції називається "заповнити 5" і складається з блоку "повторити"
          та блоку "заповнити".
      4:
        image: notes/stage13_4.jpg
        text: Визначення на потрібному місці, але наша фермерка не зможе виконати
          функцію, поки ми не перетягнемо блок "заповнити 5" з  категорії функцій.
      5:
        image: notes/stage13_5.jpg
        text: 'Зробимо функцію цікавішою! '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'Привіт, я Макінд! Я розповім про блок "поки". '
      2:
        image: notes/stage9_6.jpg
        text: Блок "поки" виконуватиме дії, розміщені всередині нього, ДО ТИХ ПІР,
          ПОКИ умова на початку блоку залишається ІСТИНОЮ.
      3:
        image: notes/stage9_7.jpg
        text: Наприклад, якщо фермерка стоїть на купі, вона продовжуватиме видаляти
          по 1 відру землі, ПОКИ є ця купа.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Привіт, я Тріна, я працюю в Піксар. Я працювала над різними фільмами,
          включаючи Шрека.
      2:
        image: notes/stage11_2.jpg
        text: Це наш новий цикл "лічильник". Він виконуватиме дії знову і знову, і
          можна щоразу дещо змінювати ці дії.
      3:
        image: notes/stage11_3.jpg
        text: У цьому прикладі наш цикл "лічильник" вказує "рахувати лічильником від
          50 до 90 через 10", а всередині ми маємо блок "малювати квадрат". Перетягни
          блок "лічильник" з розділу змінних на місце "довжина".
      4:
        image: notes/stage11_4.jpg
        text: Це означає, що художник малюватиме квадрат, стороною 50 пікселів, тоді
          додаватиме до них 10 і малюватиме квадрат, стороною 60 пікселів. Він продовжуватиме
          додавати 10 та малювати відповідний квадрат, поки не дійде до 90. Так, ми
          матимемо квадрати зі сторонами 50, 60, 70, 80 та 90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Привіт, я Жанет, і я інженер у Зинга.
      2:
        image: notes/stage15_2.jpg
        text: А якщо нам потрібно намалювати кілька трикутників зі сторонами різної
          довжини?
      3:
        image: notes/stage15_3.jpg
        text: Ми могли б написати код вручну, або використаємо функцію з параметрами.
      4:
        image: notes/stage15_4.jpg
        text: Щоб зробити це, клацни блакитну зірочку на визначенні функції "намалювати
          трикутник". Тоді перетягни "назву параметра" до блоку "вхід".
      5:
        image: notes/stage15_5.jpg
        text: Тепер, якщо ви напишете "довжина" в тому місці, де вказано "х" і натиснете
          "Enter", ви створите вхідну довжину для своєї функції.
      6:
        image: notes/stage15_6.jpg
        text: Потім клацни зірочку. Тепер потрібно клацнути в категорії змінних і
          перетягнути блок "довжина" у блок "рухатись вперед" визначення функції.
          Забери старий блок з числом.
      7:
        image: notes/stage15_7.jpg
        text: Щоб використати функцію з параметрами, клацни на категорії функцій та
          перетягни функцію "намалювати трикутник з довжиною".
      8:
        image: notes/stage15_8.jpg
        text: Тепер можна використати математичний блок, щоб вводити різні числа для
          побудови трикутників різних розмірів.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Вітання! Розв'язавши останнє завдання, ми щойно сформували код, за яким
          БУДЬ-ЯКИЙ робот може знайти дорогу через лінійний лабіринт чи тунель будь-якого
          розміру, чи це буде зомбі, птах, марсохід, чи навіть автомобіль на автоматичному
          керуванні без водія.
      2:
        image: notes/hoc6_2.jpg
        text: Основні поняття, які ви використали, лежать в основі кожної програми,
          якою ви коли-небудь користувались. Ми познайомились з циклами на певну кількість
          повторів та умовними повторами, а також із розгалуженнями "якщо" та "якщо-то-інакше".
      3:
        text: Якщо вам сподобалась ця перша година коду, відвідайте code.org, щоб
          продовжити вивчення інформатики! У нашому 20-и годинному курсі ви опануєте
          основи програмування і зможете писати програми для телефонів чи роботів,
          ігри - та все, що завгодно.
      4:
        text: 'Технології змінюють все, чим ми займаємось, і не важливо, якого ви
          віку: програмування - це весело та творчо, і кожен може його опанувати!'
    20_wrapup:
      1:
        text: Примітки показу скоро будуть!
    frozen_intro:
      1:
        text: Привіт, мене звуть Ліндсі. Я модель, актриса і пишу свої власні програми.
          Допоможемо Анні та Ельзі досліджувати магічну красу льодяних узорів за допомогою
          програмування.
      2:
        text: Ви намалюєте сніжинки та крижані візерунки, покатаєтеся на ковзанах
          і створите зимову казку, якою зможете поділитися зі своїми друзями.
      3:
        text: Протягом наступної години ви навчитеся основам програмування. Традиційне
          програмування, як правило, відбувається у тексті, але ми використаємо мову
          Blockly, на основі візуальних блоків, котрі можна перетягувати, щоб створити
          програму. Так вчаться програмувати навіть студенти університетів. Всередині,
          ви все-ж створюєте код.
      4:
        text: Програма являє собою набір інструкцій, які вказують комп'ютеру, що робити.
          Створимо код, або програму, які допоможуть Ельзі намалювати просту лінію.
          Ми використаємо це пізніше для створення складніших узорів.
      5:
        text: Екран розділено на три основні частини. Ліворуч розміщена крижана поверхня,
          на якій виконуватиметься програма. Інструкції для кожного рівня написані
          внизу цією області.
      6:
        text: Область посередині - це панель інструментів, і кожен з цих блоків є
          командою, котру можуть виконати Ельза та Анна.
      7:
        text: Білий простір праворуч називається робочою областю, і саме тут ми створимо
          свою програму. Щоб рухатися по крижаній поверхні, використаємо блок "рухатися
          вперед".
      8:
        text: Ось, блок "рухатися вперед" вказує рухатися вперед на 100 пікселів.
          Що буде, коли ми натиснемо "Запустити"? Ельза переміститься на певну відстань,
          а точніше на 100 пікселів! Пікселі - це маленькі квадратики на екрані комп'ютера.
      9:
        text: Інший блок цього завдання вказує "повернути на 90 градусів". І коли
          ми використаємо цей блок, Ельза виконає поворот. Можеш поекспериментувати,
          на скільки градусів Ельзі потрібно повертати. Кут вимірюється відносно шляху
          попереду Ельзи. Так виглядає поворот на 90 градусів. А так - на 120 градусів.
      10:
        text: Пам'ятай, можна змінити кількість пікселів і градусів, натиснувши стрілочки
          поруч із числами.
    frozen_loops:
      1:
        text: Привіт, я Паола! Комп'ютери добре вміють повторювати дії. Ти можеш порахувати
          до 10, 20 або 100. А комп'ютер може рахувати мільярдами або трильйонами.
          Для нього це не буде нудно, і займе всього кілька секунд. Чи у підрахунку,
          чи малюванні або будь-чому іншому - комп'ютери можуть повторювати дії сотні
          або навіть мільярди разів.
      2:
        text: У програмуванні ми називаємо це циклом. Цикл— це повторення виконання
          коду знову і знову. У наступному завданні ваша мета полягає у тому, щоб
          допомогти Анні створити квадрат, використавши блок "повторити".
      3:
        text: Кожен блок, розміщений всередині блоку "повторити" буде повторювати
          послідовність дій вказану кількість разів.
      4:
        text: 'Щоб намалювати квадрат, використайте блоки "рухатися вперед" і "повернути
          праворуч" 4 рази. Але існує простіший спосіб: вказати комп''ютеру "рухатися
          вперед" і "повернути праворуч на 90 градусів" один раз, а потім вказати
          повторити цю пару дій 4 рази. Для цього потрібно розмістити блоки "рухатися
          вперед" і "повернути праворуч" всередині блоку "повторити".'
      5:
        text: Пам'ятайте, що можна змінити число у блоці «повторити», і дії всередині
          блоку будуть повторюватися вказану кількість разів.
    frozen_functions:
      1:
        text: Привіт, я Кріс Бош. Я професійний гравець у баскетбол, і я програмував
          у коледжі.
      2:
        text: Одна з найважливіших концепцій інформатики полягає в тому, як створювати
          нові команди. Більшість комп'ютерних мов мають лише близько 100 слів або
          команди. І справді, мистецтво та майстерність програмування лежить у визначенні
          своїх власних команд із цих стандартних блоків.
      3:
        text: Після того, як ви навчили комп'ютер, як виконати дію один раз за допомогою
          певної послідовності команд, ви може вказати свою власну назву для цієї
          дії, і легко повторити її пізніше. Коли ви визначаєте свою власну команду
          і надаєте їй назву - ви створюєте функцію.
      4:
        text: Привіт, я Джесс. У програмуванні за допомогою блоків, ви можете скористатись
          функціями, якщо є набір дій, які ви хотіли б використовувати кілька разів.
          Наприклад, ви написали код, щоб створити квадрат.
      5:
        text: 'Це можна визначити як функцію під назвою "створити квадрат." '
      6:
        text: Тепер у вас є новий блок, що дає змогу створювати квадрати багато разів.
      7:
        text: Прості фігури можуть використовуватися для створення складніших узорів.
          У наступному завданні, нещодавно створений код малювання кола, доступний
          у вигляді функції, яку можна використати для малювання кіл різних розмірів.
          Можеш, використавши її, допомогти Ельзі створити складні та красиві візерунки
          на снігу?
    playlab_intro:
      1:
        text: Ми збираємося створити гру за допомогою Ігрової лабораторії. У хорошої
          гри є певний сюжет, із певними персонажами. Ми дізнаємося, як зробити так,
          щоб персонажі виглядали як відьми, інопланетяни чи тваринки, вміли говорити,
          рухатися і взаємодіяти один з одним. До кінця цього підручника ви зможете
          створити гру з самого початку і поділитися нею з друзями.
      2:
        text: Ваш екран поділено на 3 основних частини. Ліворуч - ігровий простір,
          де буде працювати ваша програма. Інструкції для кожного рівня написані внизу.
      3:
        text: Середня область містить панель інструментів, де кожен з блоків являє
          собою певну команду коду. Білий простір праворуч - це робоча область, де
          ми будемо складати програму.
      4:
        text: Для початку, потрібно зв'язати блоки і помаранчевий блок "при запуску".
          Можна прикріпити кілька блоків разом, і перетягувати їх, поки не побачите
          жовту мітку, після відпускання вони автоматично розташуються поряд.
      5:
        text: У цьому першому завданні, нашим персонажем є пінгвін і ми допоможемо
          йому сказати "Привіт!, перетягнувши блок "говорити" до блоку "при запуску"
          і надрукувавши "Привіт". Ми можемо також перемістити пінгвіна за допомогою
          блоків "рухатися вправо" і "рухатися вліво". Після того як всі блоки розставлено
          на місця, натисніть кнопку запуску, щоб побачити те, що ви запрограмували.
      6:
        text: Розпочинай роботу, і в кінці створиш власну гру з різними персонажами,
          котрі зможуть взаємодіяти, сумувати чи веселитись, заробляти бали, кидати
          вогняні кулі чи навіть застосовувати магію зникнення. Все залежить від тебе,
          і того, що ти хочеш створити.
    playlab_events:
      1:
        text: Тож зараз ми дізнаємося про те, що всі програмісти ігор використовують
          щодня. Це називаються подіями. Подія вказує програмі очікувати, поки щось
          не відбудеться. Коли це станеться, буде виконана певна дія.
      2:
        text: Прикладами подій є очікування клацання мишкою, натиснення клавіші зі
          стрілкою чи торкання сенсорного екрану.
      3:
        text: Отож, ми створимо космонавта, котрий привітається із землянами, коли
          на ньому клацнуть. Використаємо блок «коли клацнули» та вкладемо у нього
          блок "говорити". Коли гравець натискає на космонавта, буде виконано все,
          що вказано в області "коли клацнули". Що скаже ваш прибулець?
      4:
        text: Існують також блоки "коли натиснено стрілку". Якщо всередині розмістити
          блоки "рухатися", можна переміщувати персонажів вгору, вниз, вліво або вправо.
          Крок за кроком, наша гра стає все більш інтерактивною.
    playlab_repeat_forever:
      1:
        text: Це блок "повторювати завжди". Розміщене у цьому блоці виконуватиметься
          у грі постійно і завжди.
      2:
        text: Якщо ми хочемо, щоб персонаж виконував дію кілька разів, без додаткових
          вказівок від гравця, розмістимо відповідну дію всередині блоку "повторювати
          завжди".
      3:
        text: У наступному завданні наша мета полягає у тому, щоб допомогти чарівникові
          охороняти кордони володінь, безперервно рухаючись вліво і вправо. Вивчення
          команди повторення збереже море часу в майбутньому, коли ви створюватимете
          власну гру.
    C1_artist_intro:
      1:
        text: Ось твої блоки для малювання. Скористайся одним з них, щоб перемістити
          художника у потрібне для заповнення сірих ліній місце.
      2:
        text: Ось блоки стрибання. При використанні них, художник буде рухатися, але
          не малювати, тож використовуй їх для перескакування до наступної сірої лінії.
    C1_bee_level_intro:
      1:
        text: Хіба ж бджоли не супер-круті? У наступному наборі задачок твоєю метою
          є допомогти бджілці дістатись до квітів та зібрати нектар, а тоді полетіти
          до стільника і зробити мед. Для виконання вправи тобі знадобляться блоки
          "отримати нектар" і "зробити мед".
      2:
        text: 'Кожна квітка має різну кількість нектарів: 1, 2, 3 або більше. Ми знаємо,
          скільки нектару в червоній квітці - це число в кутку. Так що постарайся
          отримати весь нектар з квітки, перш ніж рухатися далі. Крім того, кожен
          стільник може утримувати певну кількість меду: 1, 2, 3 або більше. Тому
          намагайся зробити якомога більше меду, наскільки може вмістити стільник.'
      3:
        text: Якщо зможеш зібрати весь нектар і зробити весь мед, то перейдеш до наступного
          рівня. У протилежному випадку, доведеться виконувати завдання знову. Пограйся
          трохи і побачиш, як це - бути бджілкою-програмістом!
    C1_bee_loops:
      1:
        text: Цикл - це повторення дій. Тож перевіряючи вулик, я розглядаю рамку,
          ставлю її на місце, і повторюю ці дії кілька разів. Це повторення у циклі,
          кількаразове виконання дій.
      2:
        text: На цьому рівні нам потрібно, щоб бджілка зібрала з квітки три нектари.
          Замість використання трьох блоків "отримати нектар", ми скористаємось блоком
          повторення, щоб отримати нектар тричі. Натисни "Виконати" і перевір, чи
          все вийшло. Чудово!
    C1_bigevent_unplugged:
      1:
        text: Цей урок називається "велика подія". Він про те, як ми можемо керувати
          програмами і змінювати їх роботу на ходу, використовуючи події, такі як
          натискання кнопки чи клацання мишки.
      2:
        text: На цьому уроці ми керуватимемо людьми за допомогою паперового дистанційного
          пульта. Це ніби відео-гра в реальності.
      3:
        text: Подія - це дія, яка спричиняє певні дії. Наприклад, коли клацнути кнопку
          миші, завантажиться веб-сторінка. Це і є подія. Коли ми торкаємось до екрану
          планшета - це теж подія. Події - це чудовий засіб користувача для передавання
          вказівок у програму, коли ми хочемо, щоб вона виконала якусь дію.
      4:
        text: Своїми діями ми реагуємо на навколишні події. Коли ми голодні, ми йдемо
          до холодильника. Ми чуємо, що поштар прийшов і поклав пошту в скриньку,
          і можемо її забрати. Це такі ж події, як натиснення кнопки чи переміщення
          джойстика. Це те, що відбувається і спричиняє подальші дії.
      5:
        text: У відео-іграх є подія, котра називається "Оновити" і вона трапляється
          кожні 30 або 60 секунд. Для програмістів відео-ігор це майже так само важливо,
          як і події кнопок чи джойстика.
      6:
        text: Основна подія, за якою ми слідкуємо - це "Оновлення". А тоді ми перевіряємо
          джойстик. Тож ми кажемо, "Хтось натиснув кнопку на цьому кадрі? Так чи ні?"
          Без подій гравець не міг би рухатись, стрибати, і не можна було би ним керувати.
          У відео-грі не можна би було нічого анімувати.
    C1_building_foundation:
      1:
        text: Маючи досвід будування піщаних скульптур, ми знаємо, що невдачі є частиною
          норми. Але наполегливість приносить результат, все кращий та захопливіший.
          Наполегливість - це частина гри. Продовжуй, і тобі сподобається.
      2:
        text: Цей урок називається побудовою основ. Ми працюватимемо над завданням,
          яке має бути дуже складним. Спробуємо розібратися, як створити структуру
          принаймні такої ж висоти, як ці чашки, і настільки міцну, щоб витримати
          вагу книги.
      3:
        text: Бувають моменти, коли наше творіння не спрацьовує. Бувають моменти,
          коли ми дратуємось і хочемо здатись. Таких моментів може бути багато. Але
          якщо продовжувати пробувати, намагатись зробити якомога краще знову і знову,
          то рано чи пізно все вийде.
      4:
        text: Наполегливість - це продовжувати робити навіть тоді, коли хочеться здаватись.
          Якщо хочеш створити щось нове і оригінальне, на цьому шляху буде багато
          невдач.
      5:
        text: Основою наполегливості є продовжувати спроби і вчитись на помилках замість
          того, щоб здатись через розчарування. Розчарування насправді означає, що
          за рогом нас чекає щось прекрасне. Тож не здавайся, поки не дістанешся до
          нього! Давай!
    C1_getting_loopy:
      1:
        text: Привіт, мене звуть Мірал Котб, і я створив Iluminate. У моїй роботи
          є те, що ми використовуємо і в танцях, і в програмуванні світлових костюмів.
          І це цикли! Цикли означають багаторазове повторення дій.
      2:
        text: Коли ми повторюємо щось багато разів, наприклад мої дії з крутіння обруча,
          відбувається повторення тієї ж дії. Це цикл. І це цикл. І ще один цикл.
      3:
        text: Сьогодні у нас дискотека. Ми розберемо цикли і нові рухи. Ітерація.
          Ми дізнаємося про цикли за допомогою танців. Вивчимо кілька простих рухів
          і повторимо їх багато разів, щоб завершити танець.
      4:
        text: Ось рухи, які потрібно вивчити. Плесніть у долоні. Покладіть руки за
          голову. Тепер покладіть руки на талію. Підніміть ліву руку. Підніміть праву
          руку. Просто, правда ж? Виявляється можна скоротити вказівки, розміщуючи
          етапи танцю в циклі.
      5:
        text: Насправді у танці ми використовуємо цикли. Одяг танцюристів має комп'ютери,
          під'єднані до єдиної мережі. Можна проходити по циклу лампочок до того ж
          танцюриста знову і знову. В циклі можна виконувати повторення, коли я вказую
          що потрібно пройти через шістьох танцюристів знову і знову, а тоді збільшити
          швидкість світла у цьому циклі. І все це робиться за допомогою циклів. Цикли
          важливі у програмуванні, бо вони роблять нашу роботу коротшою та легшою.
    C1_happy_maps_unplugged:
      1:
        text: Цей урок називається Щасливі карти. Сьогодні ми допоможемо маленькій
          пухнастій подрузі Флурб дістатись до фруктів.
      2:
        text: Допоможи Флурбі дістатись до фрукта. Щоб це зробити, потрібно визначити,
          яким шляхом має рухатись Флурб і скерувати її за допомогою стрілок. Щоб
          Флурб дісталась до яблука, у якому напрямку потрібно рухатись? Скеруй її
          вгору.
      3:
        text: Щоб скерувати її, обведи напрямок, в якому потрібно рухатись.
      4:
        text: Створи алгоритм, з'єднуючи стрілки поряд з картою, яку намагаєшся пройти.
          Друга така ж, тільки повернута вниз.
      5:
        text: Це як програмування на папері. І все!
    C1_maze_debugging:
      1:
        text: Налагодження - це процес пошуку та виправлення помилок. Існує багато
          способів проводити налагодження. Один із найпростіших - рухатись покроково,
          поки не знайдемо моменту, коли з'являється помилка. Ось тут я намагаюсь
          зробити колесо назад на колоді, але постійно падаю.
      2:
        text: Я проходжу кожен етап покроково, і усвідомлюю, де моя помилка. Я не
          правильно ставлю руки на колоду. Тож я ще раз пробую зробити зворотнє колесо
          на колоді вже по-іншому ставлячи руки - і все виходить! Я дуже задоволений,
          що налагодив своє зворотнє колесо.
      3:
        text: Щоб розглянути налагодження, почнемо з набору блоків, котрі вже є на
          сцені. Можеш зауважити, що ці блоки не дозволять дістатися цілі. Нам потрібно
          налагодити проект і виправити його. Що ж пішло не так? Можеш зауважити,
          що потрібно було пройти на один блок далі на Захід.
      4:
        text: Спробуємо виправити це, додавши ще один блок руху на Захід, і натиснувши
          Запустити, щоб перевірити, що все правильно. Так, все вдалося!
    C1_maze_intro_sequencing:
      1:
        text: У цьому завданні потрібно провести пташку до свині. Розглянь завдання
          і подумай, які напрямки потрібно вказати.
      2:
        text: Потрібно перетягнути блоки з панелі інструментів на робочу область.
          Переконайся, що вони розміщені під блоком "коли гра починається", і коли
          вважатимеш, що складено правильне рішення, можна клацнути "Запустити" і
          подивитись, як пташка рухається до свині.
    C1_maze_loops:
      1:
        text: В чому комп'ютери дуже успішні - це у повторенні команд. Для людини
          стане нудно повторювати одне і те ж багато разів підряд. А комп'ютер можна
          виконати одну і ту ж дію мільйони, чи навіть мільярди разів, не нудьгуватиме,
          і не втомиться, і робитиме це дуже вправно.
      2:
        text: Наприклад, якби я захотів привітати усіх користувачів Фейсбуку з днем
          народження, надсилаючи їм електронні листи, у мене на це пішло би близько
          століття. А за допомогою кількох рядків коду я можу створити систему розсилки
          електронних листів користувачам Фейсбук з вітаннями до дня народження.
      3:
        text: Щоб провести птаха до свині на цьому рівні... замість того, щоб перетягувати
          на робочу область три блоки Північ, скористаємось блоком "повторити". Перетягуй
          блок "повторити" і надрукуй число 3. Тепер перетягни блок "рухатись на Північ"
          всередину блоку "повторити" і клацни "Запустити" для перевірки. Вітаю, все
          вийшло!
    C1_moveitmoveit_unplugged:
      1:
        text: Цей урок називається "Рухом-рухом". Ми напишемо програму, яка допоможе
          нашим друзям дістатися від початкового аркуша із компасом до кінцевого пункту
          зі смайликом.
      2:
        text: Але смайлик обернено донизу, і лише одна людина знає, як до нього дістатися.
          Запустимо програму.
      3:
        text: Програма - це алгоритм, який записано так, що його може виконати машина.
          Більшість із нас сприймає програму як щось, що ми пишемо для комп'ютера.
          Програми дуже корисні для цього, але і для інших цілей також. Можна створити
          власну гру, чи навіть програму для робота, щоб він робив щось для нас.
    C1_going_places_safely:
      1:
        text: 'Мене звати Єремія. Привіт! Мені сім років. Я дуже люблю бавитись на
          маминому комп''ютері, але я завжди питаю дозволу: "Мамо, можна за комп''ютер?
          Звісно, любий!"'
      2:
        text: Я люблю мамин комп'ютер, бо можна зайти в Інтернет. Інтернет це ніби
          як твій район. Можна зайти в різні цікаві місця, поспілкуватись з родичами
          та друзями і дізнатись різні речі.
      3:
        text: Вчора я ходив у зоопарк поряд із домом. Я бачив маленьку зебру і сфотографував
          її. Потім я поміняв колір смужок, додав капелюха і поповнив колекцію дивних
          тварин. Круто! А потім я відправився у далеке-далеке місце - в Кенію. Це
          країна в Африці. Там живе багато зебр.
      4:
        text: Іноді по Інтернету я спілкуюсь з людьми, яких я знаю, наприклад з бабусею,
          яка живе в іншому штаті. Привіт, бабусю! Вона пече печиво, і надсилає його
          мені на день народження. "Смакота, добре би було передавати запах по Інтернету!"
          Я можу спілкуватись і з іншими людьми, наприклад двоюрідною сестрою, але
          лише зі знайомими.
      5:
        text: Що мені найбільше подобається в Інтернеті - це те, що можна грати в
          ігри. От і очко! Мені також подобається малювати і створювати нові речі
          і ділитися ними з друзями. Круто! Іноді я захожу на сайти, де дізнаюсь щось
          нове, але я завжди дотримуюсь сайтів, створених для мене. О, динозаври!
      6:
        text: 'Інтернет - це дуже цікаве місце. Але так само, як коли ти гуляєш по
          своєму району, потрібно бути обачним і в онлайні. Є три правила. Правило
          1: спочатку спитай батьків. Правило 2: спілкуйся лише зі знайомими. Правило
          3: притримуйся місць, створених саме для тебе.'
      7:
        text: Вау, це було весело! Але вже час обіду. Я вимикаюсь. І вже чекаю, коли
          включусь знову і помандрую ще кудись.
    C1_pair_programming:
      1:
        text: Сьогодні ми збираємося дізнатися про парне програмування. Парне програмування
          - це коли ви працюєте як команда. Чому дві людини повинні використовувати
          один комп'ютер. Тому що дві голови краще, ніж одна. Під час парного програмування
          ви і ваш партнер разом сідаєте за один комп'ютер та працюєте над одним проектом.
      2:
        text: Парне програмування, як водіння автомобіля - одна людина водій, а інша
          людина навігатор. Водій сидить за комп'ютером, використовує клавіатуру,
          мишу або сенсорний екран, і контролює головні дії на комп'ютері. Інша людина
          є навігатор. Навігатор допомагає водієві, відповідаючи на питання водія
          і вказуючи на різні проблеми та помилки.
      3:
        text: Спілкування є ключем до успішного програмування в парах. Не зневажай,
          а шануй партнера. Будь ввічливим, не роби із себе владного командира, тому
          що ніхто не любить заднє сидіння. Ви і ваш партнер завжди повинні говорити.
          Водій може пояснити, що робить. І штурман може допомогти, запропонувати,
          що робити далі.
      4:
        text: Навігатор зобов'язаний думати про велику картинку, а водій про деталі.
          Обидві ролі дуже важливі. Парне программування - це робота у команді.
    C1_planting_seed:
      1:
        text: Цей урок називаеться садіння насіння і він допоможе нам зрозуміти алгоритми.
          Алгоритми це конкретні вказівки, які пояснюють порядок, у якому потрібно
          щось зробити. Навіть повсякденні речі, такі як сніданок чи чищення зубів
          є алгоритмами, які потребують маленьких кроків, щоб виконати певну задачу.
      2:
        text: Комп'ютери можуть бути дуже розумними, але вони можуть зрозуміти вас
          тількти у тому випадку, якщо ви їм послідовно кажете, чого саме ви хочете.
          Штука алгоритмів у тому, що якщо ви будете виконувати інструкції за порядком,
          ви зможете зробити те, чого не вміли до цього. Це як слідувати рецепту.
      3:
        text: Сьогодні ми висаджуємо насіння використовуючи алгоритм. Створити свій
          власний алгоритм шляхом розрізання фотографій на частини. Вибрати фотографії,
          які показують етапи в посадці насіння та організувати ці картинки в правильному
          порядку.
      4:
        text: Тепер настав час для того, щоб побачити, чи ваш алгоритм працює. Виконуйте
          алгоритм поступово і дуже ретельно. Ви на вірному шляху? Ви досягли успіху
          в посадці насіння, дотримуючись алгоритму? Це як програмування з фотографіями!
      5:
        text: Коли ми хочемо зробити шоколад, ми маємо здійснити багато великих кроків
          на шляху до цього, і кожен з цих кроків має набір менших кроків, і також
          існують різні рецепти або алгоритми залежно від того, як ми хочемо, щоб
          смакував шоколад. Кожен крок є важливим, навіть найменший, бо без нього
          не буде здійснено процесу. Створення алгоритмів, які можуть бути зрозумілими
          для інших - це дійсно важливо. Ось чому кожен крок повинен бути прописаний
          так, що незалежно від того, хто його робить, результат залишається тим самим.
    C1_playlab_storytelling:
      1:
        text: Час "спіймати" творчість і використати свої навички кодування, щоб розповісти
          історію. Ваша історія буде мати акторів, і можна заставити цих акторів говорити
          і взаємодіяти один з одним. Почніть думати, яку саме історію ви хочете розказати.
      2:
        text: Кіт завжди боїться собаку, але що буде, якщо кіт з'ясує, що собака намагається
          сподобатись? "Коли запустити" блок починається все. Блок "руху" приведе
          вашого персонажа до руху і блок "говоріння" спонукає вашого персонажа сказати
          все, що ви введете.
      3:
        text: Цей блок називається "коли персонажі стикаються", його можна прикріпити
          до інших блоків.
      4:
        text: "\t\nЯ зробив так щоб, собака підійшов до мене і сказав \"Привіт\",
          але кіт налякався і утік. \"Ахх\", якби було трошки більше часу, можна було
          би отримати щасливе завершення. Кінець!"
    C1_spelling_bee_intro:
      1:
        text: Це рівень бджоли. Використовуйте шматочки головоломки, щоб перемістити
          бджолу. Коли вона рухається, вона буде збирати листи заклинання сама.
      2:
        text: Подивіться, чи можете Ви вимовити слово по буквах, вони дають Вам в
          полі нижче етапи. Але будьте обережні! Переміщення неправильного напрямку
          додасть літери, які Ви не хочете.
    C1_zuck_repeat_loop:
      1:
        text: В чому комп'ютери дуже успішні - це у повторенні команд. Для людини
          стане нудно повторювати одне і те ж багато разів підряд. А комп'ютер можна
          виконати одну і ту ж дію мільйони, чи навіть мільярди разів, не нудьгуватиме,
          і не втомиться, і робитиме це дуже вправно.
      2:
        text: Наприклад, якби я захотів привітати усіх користувачів Фейсбуку з днем
          народження, надсилаючи їм електронні листи, у мене на це пішло би близько
          століття. А за допомогою кількох рядків коду я можу створити систему розсилки
          електронних листів користувачам Фейсбук з вітаннями до дня народження.
      3:
        text: У цьому прикладі Вашою метою буд рухати птаха для отримання свині. Зараз
          ми готуємося використовувати блок повтор , щоб зробити це легко. Це можна
          зробити даючи команду комп’ютеру команду рухатися уперед п’ять  разів для
          просування птаха на один крок кожного разу або можете вибрати блок рухатися
          вперед один раз та повторити його п’ять разів.
      4:
        text: Для того, щоб зробити це, перетягніть команду «Хід вперед» у блок повтору.
          Ви можете натиснути на нього та вказати скільки разів повторювати хід вперед.
      5:
        text: Ще одна річ, що ви можете поставити стільки команд, скільки ви хочете
          всередині повторення блоку. Таким чином, у цьому прикладі,  Ви кажете рухатися
          вперед і повернути ліворуч, що він буде робити п'ять разів. Успіху!
    C2_artist_intro:
      1:
        text: Ви навіть не буде кваліфікуватися в перегонах, якщо ви не маєте людей,
          які є експертами в галузі комп'ютерних наук із-за кількості даних зібраних
          пошуковими системами і необхідності мати людей, які можуть писати програми,
          щоб з'ясувати, як ти продовжуєш розуміти, як побудувати продуктивності.
      2:
        text: У цьому завданні ви будете художником, який малює фігури за допомогою
          олівця. Коли художник крокує позаду нього ведется лінія.
      3:
        text: Щоб переміститися на полотні, ви будете використовувати перемістити
          вперед блок. Тут перемістити вперед блок говорить рухатися вперед на 100
          пікселів. Коли ми запустимо, що відбудеться? Художник рухається вперед на
          певну величину, і ця величина буде 100 пікселів. Пікселі це дуже маленькі
          квадрати на екрані комп'ютера.
      4:
        text: Інший блок, який є у цій головоломці вказує на поворот праворуч на 90
          градусів. І коли ми перетягуємо його наш художник повертається на задану
          величину. Тож ви можете грати так як захочете щоб художник повернувся. Це
          поворот на 90 градусів.
      5:
        text: А це поворот на 120 градусів. І запам'ятайте, ви можете змінити ці величини
          натискаючи на стрілки поруч з номерами для пікселів і градусів. Насолоджуйтеся
          малюнками з вашим художником!
    C2_bee_conditionals:
      1:
        text: Це умовний блок. Він показує що вам потрібно щось робити лише в тому
          випадку, якщо нектару або меду менше, порівну чи більше ніж певне число.
      2:
        text: Це корисно у тому випадку, коли ми не знаємо як багато меду чи нектару
          виробити, коли ми бачимо знак питання.
      3:
        text: У цьому прикладі ми збираємося сказати, що ЯКЩО рожева квітка має нектару
          більше, ніж 0, то взяти нектар. Це скаже нашій бджолі продовжувати брати
          нектар, поки він там є. Та-дам!
    C2_conditionals_with_cards:
      1: 
      2:
        text: я хочу прогулятися у парку, але спершу я повинен вирішити чи потрібно
          мені брати парасолю. Тож, я подивився у вікно. Якщо на вулиці хмарно, то
          я візьму парасолю. Якщо ж ні, то візьму сонце захисні окуляри. Думаю краще
          взяти парасолю. Те, що я бачу та чую визнатає що саме я візьму у парк.
      3: 
      4: 
      5: 
    C2_graph_paper:
      1: 
      2:
        text: Алгоритм це список інструкцій для виконання завдання. Ми будемо слідувати
          даному набору інструкцій, щоб зробити чашу. Алгоритми, дійсно корисні, коли
          ви потребуєте ще когось, щоб зрозуміти, як щось зробити.
      3: 
      4:
        text: Я використовую алгоритми у моїй роботі. Якщо я записую всі кроки то
          можу відтворити цей же шматок знову, або я можу навчити когось зробити це.
          Покладіть скло в печі, з'єднайте його разом, виконуйте подальші вказівки
          щоб зробити чашу. Алгоритми дають вам дорожню карту для виконання чого небудь.
    C2_playlab_createstory:
      1:
        text: До цього часу ми створювали анімації або складали історію, у якій щоразу
          при запуску проекту виконувались точно однакові команди. Тепер можна створити
          інтерактивну гру, в яку насправді можна пограти.
      2:
        text: Існують блоки "коли натиснено стрілку" та "перемістити персонажа". Можна
          розмістити ці блоки поряд, щоб переміщувати персонажів за допомогою клавіш
          зі стрілками.
    C3_artist_intro:
      1:
        text: Ви навіть не буде кваліфікуватися в перегонах, якщо ви не маєте людей,
          які є експертами в галузі комп'ютерних наук із-за кількості даних зібраних
          пошуковими системами і необхідності мати людей, які можуть писати програми,
          щоб з'ясувати, як ти продовжуєш розуміти, як побудувати продуктивності.
      2:
        text: У цьому завданні ви будете художником, який малює фігури за допомогою
          олівця. Коли художник крокує позаду нього ведется лінія.
      3:
        text: Щоб переміститися на полотні, ви будете використовувати перемістити
          вперед блок. Тут перемістити вперед блок говорить рухатися вперед на 100
          пікселів. Коли ми запустимо, що відбудеться? Художник рухається вперед на
          певну величину, і ця величина буде 100 пікселів. Пікселі це дуже маленькі
          квадрати на екрані комп'ютера.
      4:
        text: Інший блок, який є у цій головоломці вказує на поворот праворуч на 90
          градусів. І коли ми перетягуємо його наш художник повертається на задану
          величину. Тож ви можете грати так як захочете щоб художник повернувся. Це
          поворот на 90 градусів.
      5:
        text: А це поворот на 120 градусів. І запам'ятайте, ви можете змінити ці величини
          натискаючи на стрілки поруч з номерами для пікселів і градусів. Насолоджуйтеся
          малюнками з вашим художником!
    C3_artist_nested_loops:
      1: 
      2:
        text: Але ми хочемо намалювати шість трикутників. Для того, щоб зробити це,
          ми візьмемо цей цикл і помістимо його всередину іншого блоку повторення
          певну кількість разів. Дуже круто!
    C3_bee_conditionals:
      1:
        text: Це умовний блок. Він показує що вам потрібно щось робити лише в тому
          випадку, якщо нектару або меду менше, порівну чи більше ніж певне число.
      2:
        text: Це корисно у тому випадку, коли ми не знаємо як багато меду чи нектару
          виробити, коли ми бачимо знак питання.
      3:
        text: У цьому прикладі ми збираємося сказати, що ЯКЩО рожева квітка має нектару
          більше, ніж 0, то взяти нектар. Це скаже нашій бджолі продовжувати брати
          нектар, поки він там є. Та-дам!
    C3_playlab_create_game:
      1:
        text: До цього часу ми створювали анімації або складали історію, у якій щоразу
          при запуску проекту виконувались точно однакові команди. Тепер можна створити
          інтерактивну гру, в яку насправді можна пограти.
      2:
        text: Існують блоки "коли натиснено стрілку" та "перемістити персонажа". Можна
          розмістити ці блоки поряд, щоб переміщувати персонажів за допомогою клавіш
          зі стрілками.
    starwars_intro:
      1:
        text: 'Привіт! Я Кейтлін Кенеді, продюсер фільму «Зоряні війни: Пробудження
          сили». Сьогодні ви працюватимете з однією з наших зірок, BB-8. BB-8 — це
          сферичний дроїд. Кожною його дією і кожним рухом керує комп''ютерна програма.
          Інформатика має вплив на всі галузі, від маркетингу до охорони здоров''я
          та кінематографу. Дійсно, для створення такого фільму, як «Пробудження сили»,
          потрібна праця сотень комп''ютерних фахівців.'
      2:
        text: Привіт, я Рейчел Роуз. Я старший інженер дослідник в ILM, я керую командою
          створення анімації та розробки створінь. У Пробудженні сили я відповідаю
          за те, щоб допомагати художникам з розробкою агрегатів, котрі допомагають
          рухомим персонажам виглядати природньо у далекій-далекій галактиці.
      3:
        text: |-
          Протягом наступної години ми створимо власну гру Зоряні війни, яка навчить основним поняттям програмування.
          Зазвичай програмування - це написання тексту, але ми використаємо рухомі блоки для створення програми. Всередині ж, ми створюємо код. Після ознайомлення з основами через блоки, ми перемкнемось на JavaScript, одну із найбільш популярних мов програмування в Інтернеті.
      4:
        text: Для початку ми попрацюємо з Рей, щоби запрограмувати BB-8 пройти та
          зібрати весь металобрухт. Ваш екран поділено на три частини. На лівій знаходиться
          ігровий простір Зоряних воєн, де виконуватиметься код. Вказівки для кожного
          рівня написано нижче ігрового простору.
      5:
        text: Ця середня область є інструментарієм, і кожен із цих блоків є командою,
          яку може розуміти BB-8.
      6:
        text: Вільний простір праворуч називається робочим простором, і саме тут ми
          будуватимемо нашу програму.
      7:
        text: Якщо я перетягну блок «рухатись ліворуч» до нашого робочого простору,
          і потім натисну «Запустити», що станеться? BB-8 переміститься ліворуч на
          одне поле сітки.
      8:
        text: А що як я хочу, щоби BB-8 зробив щось після блоку «рухатись ліворуч»?
          Я можу додати ще один блок до програми. Я оберу блок «рухатись вгору», і
          перетягну його під мій блок «рухатись ліворуч», поки не з'явиться підсвітлення.
          Тоді я відпущу його, і ці два блоки зліпляться.
      9:
        text: Коли я натисну «Запустити» знову, BB-8 виконає команди, складені в нашому
          робочому просторі, згори донизу. А якщо вам захочеться видалити блок, то
          просто відтягніть його зі стопки назад до інструментарію.
      10:
        text: Після того, як ви натиснули «Запустити», ви завжди можете натиснути
          «Скидання», щоби повернути BB-8 назад до початку. Що ж, котімося!
    starwars_typing:
      1:
        text: Всередині блоків ми використовували команди JavaScript. JavaScript наразі
          є найпопулярнішою мовою програмування для фахових розробників. Блоки є чудовим
          шляхом почати навчання кодуванню, і, насправді, такі провідні університети,
          як Гарвард та Берклі, починають вчити таким чином. Але після вивчення основ
          фахівці пишуть код, набираючи текст, оскільки це дозволяє просуватися швидше.
      2:
        text: Ми можемо набирати сотні команд, уникаючи потреби шукати їх в інструментарії,
          та перетягувати. Оскільки ви лише вчитеся, набирання тексту може бути спершу
          повільнішим, але ми би хотіли, щоби ви спробували.
      3:
        text: У правому верхньому куті свого робочого простору на кожній із задач
          ви можете натиснути кнопку «Показати код», щоби перемкнутися з блоків до
          набирання коду як тексту.
      4:
        text: В наступному уроці ми дамо вам почати в текстовому режимі. Тут ви все
          ще можете перетягувати блоки з інструментарію, а можете й набирати назву
          команди. Щойно ви починатимете набирати, ви бачитимете назви можливих команд,
          показані під тим місцем, де ви набираєте. Щоби просуватися швидше, ви можете
          обирати одну з них, замість набирати назви команд повністю. В моїй праці
          я використовую цю функцію автодоповнення завжди, коли пишу код.
      5:
        text: Коли ви набираєте код, комп'ютерові треба, щоби ви були дуже точними.
          Вам потрібно використовувати точно правильне написання та великі й малі
          літери, включно з дужками та крапкою з комою. Навіть за маленької помилки
          набирання BB-8 не зрозуміє код, і не зможе рухатися.
      6:
        text: Якщо ви зробите помилку на якомусь рядкові, то редактор підсвітить її,
          щоби ви могли спробувати змінити свій текст для виправлення помилки.
      7:
        text: Якщо ви застрягли, ви завжди можете почати з початку за допомогою кнопки
          «Почати знову», а також можете в будь-який час перемкнутися до блокового
          режиму, натиснувши у правому верхньому куті. Гаразд, спробуймо набирати!
          І якщо ви робитимете помилки, не засмучуйтеся. Всім потрібно декілька спроб,
          щоби отримати зробити це правильно.
    starwars_events:
      1:
        text: Ну, привіт, мене звуть Чаріта Картер. Я — старший творчий продюсер тут
          у Walt Disney Imagineering. Я відповідаю за керування командами, які власне
          й розробляють ті атракціони, що ними насолоджуються наші гості. Ми постійно
          шукаємо шляхи вдосконалення та покращення вражень для наших гостей, і в
          серці цього лежить технологія.
      2:
        text: Вітаю, ви це зробили! Ви запрограмували BB-8. Тепер, на мою думку, ми
          готові до чогось складнішого. Берімося за нього. Тепер, коли ви навчилися
          основ програмування, ми повернемося назад у часі, щоби побудувати вашу власну
          гру із R2-D2 та C-3PO у ролях.
      3:
        text: 'Щоби зробити гру, нам треба дізнатися про дещо, що програмісти ігор
          використовують щодня: це називається подіями. Події вказують вашій програми
          слухати, або очікувати, коли дещо станеться, і коли воно стається, програма
          виконує якусь дію.'
      4:
        text: Деякими з прикладів подій є очікування натискання кнопки миші, клавіші
          стрілки на клавіатурі, або торкання екрану.
      5:
        text: Тут ми збираємося зробити так, щоби R2-D2 перемістився вгору, щоби доставити
          повідомлення пілотові повстанців, а потім перемістився вниз до іншого пілоту
          повстанців. Щоби зробити так, щоби він рухався, ми будемо використовувати
          події. Коли гравець використовує клавіші стрілок вгору/вниз, або екранні
          кнопки вгору/вниз.
      6:
        text: Ми використовуємо блок «коли стрілка Вгору», і чіпляємо до нього блок
          «йти вгору». Коли гравець натискає клавішу стрілки вгору, виконується код,
          прикріплений до блоку «коли стрілка Вгору». І так само ми зробимо, щоби
          R2-D2 рухався донизу.
      7:
        text: Для цього ми скористаємося командою whenUp(). При перетягуванні цієї
          команди з інструментарію ви побачите, що вона починається та закінчується
          фігурною дужкою замість крапки з комою. І вони дають нам простір для розміщення
          інших команд між ними. Кожна команда, яку ми розмістимо всередині цих дужок,
          виконуватиметься, коли гравець натискатиме стрілку вгору.
      8:
        text: Ми хочемо, щоби R2-D2 йшов угору, тож розмістімо всередині цієї команди
          блок goUp();. І зробімо те саме для того, щоби R2-D2 йшов донизу.
      9:
        text: Тепер, замість написання всього коду для керування нашим дроїдом наперед,
          ми можемо дати R2-D2 реагувати на події натискання кнопок, які рухають його
          екраном. Крок за кроком у нашій грі стає все більше взаємодії.
    starwars_congrats:
      1:
        text: Привіт, мене звуть Аліса, я веду команди розробки та інженерії тут,
          в Code.org, і я працювала над цим підручником, з яким ви наразі граєте.
      2:
        text: Ви щойно дійшли до останнього рівня. Вітаю! Ви щойно навчилися всього,
          що потрібно вам знати для створення власної гри «Зоряні війни». Тепер вже
          немає ані вказівок, ані головоломок для розгадування. Ви можете зробити
          власну гру, і ви самі обираєте як вона працюватиме. Ще одна річ, ви відкрили
          нові звуки та команди, щоби робити ще більше.
      3:
        text: |-
          [розмовляють учні] Отже, ми зробили гру, де по суті ви отримуєте бали, коли збираєте компресійних свиней. Головна перешкода — кожного разу, як ви берете компресійну свиню, з'являється штурмовик.
          Практично весь екран заповнено компресійними свинями, і коли ви торкаєтеся 10 000 з них, ви перемагаєте.
      4:
        text: "[розмовляють учні] Ми зробили гру, в якій ви не можете програти, і
          все, що ви вбиваєте, дає вам бали. У своїй програмі я обернула клавіші так,
          що коли ви натискаєте вгору, ваш персонаж іде донизу, а коли ви йдете праворуч,
          ваш персонаж іде ліворуч. Це дійсно складно! Іноді ви отримуєте перевагу,
          нечесну перевагу, якщо ви розробник гри. В мене вийшло? Так!"
      5:
        text: Коли ви завершили створення своєї гри, ви можете поділитися посиланням
          на неї з друзями, або грати в неї на своєму телефоні. Насолоджуйтесь!
    starwars_blocks_intro:
      1:
        text: 'Привіт! Я Кейтлін Кенеді, продюсер фільму «Зоряні війни: Пробудження
          сили». Сьогодні ви працюватимете з однією з наших зірок, BB-8. BB-8 — це
          сферичний дроїд. Кожною його дією і кожним рухом керує комп''ютерна програма.
          Інформатика має вплив на всі галузі, від маркетингу до охорони здоров''я
          та кінематографу. Дійсно, для створення такого фільму, як «Пробудження сили»,
          потрібна праця сотень комп''ютерних фахівців.'
      2:
        text: Привіт, я — Рейчел Роуз. Я — провідний інженер-дослідниця в ILM, і я
          керую командою анімації та розробки істот. У «Пробудженні сили» я відповідаю
          за допомогу художникам у створенні спорядження, яке є частиною персонажів,
          що рухаються, що дозволяє персонажеві виглядати в далекій-далекій галактиці
          дуже правдоподібно.
      3:
        text: Протягом наступної години ми збираємося побудувати нашу власну гру «Зоряні
          війни», що навчить вас основних понять програмування. Зазвичай програмування
          є повністю текстовим, але ми збираємося використовувати такі блоки, які
          ви можете перетягувати й відпускати, щоби писати програми. Для початку ми
          попрацюємо з Рей, щоби запрограмувати BB-8 пройти та зібрати весь металобрухт.
      4:
        text: Ваш екран поділено на три частини. Ліворуч знаходиться ігровий простір
          Зоряних воєн, де виконуватиметься код. Вказівки для кожного рівня знаходяться
          нижче ігрового простору.
      5:
        text: Ця середня область є інструментарієм, і кожен із цих блоків є командою,
          яку може розуміти BB-8.
      6:
        text: Вільний простір праворуч називається робочим простором, і саме тут ми
          будуватимемо нашу програму.
      7:
        text: Якщо я перетягну блок «рухатись ліворуч» до нашого робочого простору,
          що станеться? BB-8 переміститься ліворуч на одне поле сітки.
      8:
        text: А що як я хочу, щоби BB-8 зробив щось після блоку «рухатись ліворуч»?
          Я можу додати до нашої програми ще один блок. Я оберу блок «рухатись вгору»,
          і перетягну його під мій блок «рухатись ліворуч», поки не з'явиться підсвітлення.
          Тоді я відпущу його, і ці два блоки зліпляться. Коли я натисну «Запустити»
          знову, BB-8 виконає команди, складені в нашому робочому просторі, згори
          донизу.
      9:
        text: Якщо вам треба видалити блок, просто виберіть його у схемі та перетягніть
          назад у палітру інструментів.
      10:
        text: Після того, як ви натиснули «Запустити», ви завжди можете натиснути
          «Скидання», щоби повернути BB-8 назад до початку. Що ж, котімося!
    starwars_blocks_events:
      1:
        text: Ну, привіт, мене звуть Чаріта Картер. Я — старший творчий продюсер тут
          у Walt Disney Imagineering. Я відповідаю за керування командами, які власне
          й розробляють ті атракціони, що ними насолоджуються наші гості. Ми постійно
          шукаємо шляхи вдосконалення та покращення вражень для наших гостей, і в
          серці цього лежить технологія.
      2:
        text: Вітаю, ви це зробили! Ви запрограмували BB-8. Тепер, на мою думку, ми
          готові до чогось складнішого. Берімося за нього. Тепер, коли ви навчилися
          основ програмування, ми повернемося назад у часі, щоби побудувати вашу власну
          гру із R2-D2 та C-3PO у ролях.
      3:
        text: 'Щоби зробити гру, нам треба дізнатися про дещо, що програмісти ігор
          використовують щодня: це називається подіями. Події вказують вашій програми
          слухати, або очікувати, коли дещо станеться, і коли воно стається, програма
          виконує якусь дію.'
      4:
        text: Деякими з прикладів подій є очікування натискання кнопки миші, клавіші
          стрілки на клавіатурі, або торкання екрану.
      5:
        text: Тут ми збираємося зробити так, щоби R2-D2 перемістився вгору, щоби доставити
          повідомлення пілотові повстанців, а потім перемістився вниз до іншого пілоту
          повстанців. Щоби зробити так, щоби він рухався, ми будемо використовувати
          події. Коли гравець використовує клавіші стрілок вгору/вниз, або екранні
          кнопки вгору/вниз.
      6:
        text: Ми використовуємо блок «коли стрілка Вгору», і чіпляємо до нього блок
          «йти вгору». Коли гравець натискає клавішу стрілки вгору, виконується код,
          прикріплений до блоку «коли стрілка Вгору». І так само ми зробимо, щоби
          R2-D2 рухався донизу. Тепер, замість написання всього коду для керування
          нашим дроїдом наперед, ми можемо дати R2-D2 реагувати на події натискання
          кнопок, які рухають його екраном.
      7:
        text: Крок за кроком у нашій грі стає все більше взаємодії.
    starwars_blocks_congrats:
      1:
        text: Привіт, мене звуть Аліса, я веду команди розробки та інженерії тут,
          в Code.org, і я працювала над цим підручником, з яким ви наразі граєте.
      2:
        text: Ви щойно дійшли до останнього рівня. Вітаю! Ви щойно навчилися всього,
          що потрібно вам знати для створення власної гри «Зоряні війни». Тепер вже
          немає ані вказівок, ані головоломок для розгадування. Ви можете зробити
          власну гру, і ви самі обираєте як вона працюватиме. Ще одна річ, ви відкрили
          нові звуки та команди, щоби робити ще більше.
      3:
        text: |-
          [розмовляють учні] Отже, ми зробили гру, де по суті ви отримуєте бали, коли збираєте компресійних свиней. Головна перешкода — кожного разу, як ви берете компресійну свиню, з'являється штурмовик.
          Практично весь екран заповнено компресійними свинями, і коли ви торкаєтеся 10 000 з них, ви перемагаєте.
      4:
        text: "[розмовляють учні] Ми зробили гру, в якій ви не можете програти, і
          все, що ви вбиваєте, дає вам бали. У своїй програмі я обернула клавіші так,
          що коли ви натискаєте вгору, ваш персонаж іде донизу, а коли ви йдете праворуч,
          ваш персонаж іде ліворуч. Це дійсно складно! Іноді ви отримуєте перевагу,
          нечесну перевагу, якщо ви розробник гри. В мене вийшло? Так!"
      5:
        text: Коли ви завершили створення своєї гри, ви можете поділитися посиланням
          на неї з друзями, або грати в неї на своєму телефоні. Насолоджуйтесь!
    mc_intro:
      1:
        text: Мене звуть Йенс Бергенстен, але я більш відомий як Джеб. Я - головний
          розробник Майнкрафт, тут в Mojang у Стокгольмі. Здається, мені було одинадцять
          або дванадцять, коли я почав програмувати, бо хотів робити ігри. Один з
          друзів батька сказав, що для цього треба програмувати. Так я і почав. Мені
          подобається розробляти й з'ясовувати архітектуру гри. Це те, чим мені дійсно
          подобається Майнкрафт.
      2:
        text: Протягом наступної години ви навчитеся основам інформатики, програмуючи
          Алекс або Стіва рухатися імітацією частини світу Майнкрафту.
      3:
        text: 'Традиційне програмування зазвичай є текстовим, але сьогодні ми будемо
          використовувати Блоклі: систему, що використовує блоки, які ви можете перетягувати
          й кидати, щоби писати програми. Під капотом ви створюєте код JavaScript.'
      4:
        text: Поняття, що ви будете вивчати, програмісти використовують щодня, і вони
          є основою інформатики. Тут у Mojang ми використовуємо ці самі поняття, щоби
          змусити Майнкрафт працювати.
      5:
        text: Перш ніж ви почнете, ви оберете свого персонажа. Я оберу Алекс. Побудуймо
          код для програми, яка допоможе їй рухатися екраном.
      6:
        text: Ваш екран поділено на три основні частини. Ліворуч знаходиться простір
          гри Майнкрафт, де виконуватиметься ваша програма. Вказівки для кожного рівня
          написано внизу.
      7:
        text: Ця середня область є інструментарієм, і кожен із цих блоків є командою,
          яка спрямовує дії Алекс.
      8:
        text: Чистий простір праворуч називається робочим простором, і саме тут ми
          будуватимемо нашу програму.
      9:
        text: Якщо ми перетягнемо блок «рухатись вперед» до нашого робочого простору,
          і потім натиснемо «Запустити», що станеться? Алекс переміститься вперед
          на одне поле сітки.
      10:
        text: А що як ми хотіли зробити щось після того, як вона перемістилася вперед
          на одне поле? Ми можемо додати до нашої програми ще один блок. Я хочу обрати
          блок «повернути праворуч», і перетягну його під мій блок «рухатись вперед»,
          поки не з'явиться ця помаранчева лінія. Тоді я відпущу його, і ці два блоки
          зліпляться. Коли ми знову натиснемо «Запустити», Алекс виконає команди,
          які складено в нашому робочому просторі, згори донизу.
      11:
        text: А якщо вам захочеться видалити блок, то просто відтягніть його зі стопки
          назад до інструментарію.
      12:
        text: Щоби скасувати свої зміни, і повернутися до початку рівня, скористайтеся
          кнопкою «Почати знову» в правому верхньому куті робочого простору. Ще одна
          річ, ви бачите маленький трикутник у блоках повороту? Де б ви не бачили
          ці трикутники, це означає, що можна обрати інший варіант. Почнімо кодувати!
    mc_repeat:
      1:
        text: Мене звуть Лідія Уінтерс, я — бренд-директор Mojang. Ми зробили невеличку
          гру, яка називається Майнкрафт.
      2:
        text: Що мені подобається робити в Майнкрафті найбільше, то це досліджувати.
          Я люблю пригоди в печерах, і дивитися, що я можу знайти. Як не програмістку,
          мене дуже зворушує проходження уроків Майнкрафту, і те, що я справді сама
          навчаюся якогось кодування.
      3:
        text: Попередній рівень потребував багато блоків «рухатись вперед». Було би
          простіше, якби ми могли просто сказати комп'ютерові виконати команду «рухатись
          вперед» чотири або п'ять разів. На щастя для нас, комп'ютери дуже добре
          повторюють команди за допомогою циклів повторювання.
      4:
        text: При побудові Майнкрафту ми застосовуємо цикли повторювання для розміщення
          всіх початкових матеріалів для створення нового світу. Це тисячі й тисячі
          блоків. Ми також застосовуємо цикли помаленьку, наприклад, щоби ноги Алекс
          рухалися вперед і назад, коли вона йде. Цикли повторювання є потужною частиною
          програмування.
      5:
        text: Наближається ніч, тож протягом наступної пари рівнів ми збираємося побудувати
          будинок, щоби бути в безпеці. Ми збираємося застосовувати блоки повторювання,
          щоби робити це дуже просто.
      6:
        text: Щоби збудувати стіну будинку, ми можемо або сказати Алекс «рухатись
          вперед» та ставити дошки чотири рази, або сказати їй «рухатись вперед» та
          поставити одну дошку, а потім взяти цю команду, і скористатися блоком «повторити»,
          щоби вона виконала цю дію декілька разів. А тепер ми клацнемо на блоку «повторити»,
          і скажемо їй, скільки разів ми би хотіли, щоби вона виконала цю дію. Тепер
          збудуймо наш дім, поки не настала ніч. Насолоджуйтесь!
    mc_if_statements:
      1:
        text: Тепер ми дізнаємося про вирази «якщо». Вирази «якщо» є фундаментальною
          частиною навчання програмуванню. Вони допомагають комп'ютерові ухвалювати
          рішення.
      2:
        text: 'Вирази «якщо» використовують всі комп''ютери, включно з моїм телефоном.
          Наприклад, коли я розблоковую свій телефон, він виконує певний код, який
          каже: якщо я ввела пароль правильно, то розблокувати телефон. Інакше він
          показує повідомлення про помилку.'
      3:
        text: Ви можете використовувати вирази «якщо» у своєму коді, щоби Стів та
          Алекс реагували на те, що вони бачать у світі. Наприклад, якщо перед ними
          скеля, вони можуть повернути ліворуч. Або повернути праворуч, якщо вони
          наштовхнулися на дерево.
      4:
        text: В цьому випадку ми не хочемо впасти до лави. Скласти для лави план не
          складно. Ми бачимо її на екрані. Але що стосовно лави, яку ми не бачимо
          під каменем?
      5:
        text: Після того, як ми добудемо камінь, нам треба буде перевірити, чи є на
          цьому місці лава, перш ніж ми рушимо вперед. Якщо там є лава, то ми хочемо
          поставити бруківку перед нашим персонажем, перш ніж ми зможемо рухатися
          вперед. Таким чином ми можемо рухатися безпечно. Час добувати ще! І не забувайте
          використовувати вираз «якщо», щоби дивитися, куди стаєте.
    mc_congrats_share:
      1:
        text: Вітаємо! Ви тільки що вивчили основні блоки компьютерної науки.
      2:
        text: Тепер ви можете використовувати ці блоки для побудови свого власного
          творіння. Більше немає інструкцій та головоломок для розгадування. Ви можете
          будувати, що захочете. Обирати вам.
      3:
        text: "[розмовляють учні] Зараз вийде. Стригти. Я зробив «L» з факелів. Я
          зробила «A» з березових дощок. Ми збудували дім з вовни. Спрацювало, спрацювало.
          Ми збудували дім з вовни!"
      4:
        text: Коли ви завершили побудову свого творіння, оберіть «Поділитись», щоби
          отримати посилання, і поділитися ним зі своїми друзями. Насолоджуйтесь!
    mc_congrats_no_share:
      1:
        text: Вітаємо! Ви тільки що вивчили основні блоки компьютерної науки.
      2:
        text: Тепер ви можете використовувати ці блоки для побудови свого власного
          творіння. Більше немає інструкцій та головоломок для розгадування. Ви можете
          будувати, що захочете. Обирати вам.
      3:
        text: "[розмовляють учні] Зараз вийде. Стригти. Я зробив «L» з факелів. Я
          зробила «A» з березових дощок. Ми збудували дім з вовни. Спрацювало, спрацювало.
          Ми збудували дім з вовни!"
      4:
        text: Тепер ви можете побудувати все, що хочете. Розважайтеся!
    gumball_intro:
      1: 
      2: 
      3: 
      4: 
      5: 
      6:
        text: Чистий простір праворуч називається робочим простором, і саме тут ми
          будуватимемо нашу програму.
      7: 
      8: 
      9: 
    iceage_intro:
      1: 
      2: 
      3: 
      4: 
      5: 
      6:
        text: Чистий простір праворуч називається робочим простором, і саме тут ми
          будуватимемо нашу програму.
      7: 
      8: 
      9: 
    mc_2016_intro:
      1:
        text: Привіт, мене звуть Єнс, я — провідний творчий розробник Майнкрафту.
          Протягом наступної години ви зробите свою власну гру Майнкрафт. Вона виглядає
          як Майнкрафт, але цей світ зупинено. Вівця не рухається, курка не несе яйця,
          а зомбі просто стоять. Це ваша задача додати код, щоби світ Майнкрафту запрацював.
      2:
        text: 'Мене звуть Меліса, я — дослідниця користувачів Майнкрафту. Мене дуже
          цікавить, як люди думають і взаємодіють із технологією, і тому ця праця
          є ідеальною для мене для поєднання комп''ютерної розробки та психології:
          як люди думають та поводяться.'
      3:
        text: Ви побачите, що ваш екран розділено на три основні частини. 1) Ліворуч
          знаходиться гра Майнкрафт. Зараз цей світ заморожено, але ми збираємося
          виправити це за допомогою коду.
      4:
        text: 2) Ця середня область є набором інструментів. Кожен із цих блоків є
          командою, яку можуть розуміти курка, вівця та інші істоти Майнкрафту.
      5:
        text: 3) Простір праворуч називається робочим простором, і саме тут ми будуватимемо
          нашу програму.
      6:
        text: Якщо ви забудете, що робити, то вказівки для кожного рівня знаходяться
          вгорі.
      7:
        text: Для початку ми запрограмуємо курку. Перетягнімо команду «рухатись вперед»
          до робочого простору. Коли я натискаю «Запустити», курка рухається вперед
          на один крок. Для продовження я перетягну ще один блок «рухатись вперед»
          під перший блок «рухатись вперед», поки не з'явиться підсвітлення. Потім
          я відпущу його, і ці два блоки зліпляться. Якщо я натисну «Запустити» знову,
          курка пройде на два кроки.
      8:
        text: Якщо вам захочеться видалити блок, то просто вилучіть його зі стопки
          та відтягніть назад до набору інструментів.
      9:
        text: Після того, як ви натиснули «Запустити», ви завжди можете натиснути
          «Скидання», щоби скинути гру й почати знову. Тепер ваш хід, зробити свою
          особисту версію Майнкрафту. Насолоджуйтесь!
    mc_2016_loops:
      1:
        text: Привіт, мене звуть Ліза. Я — програмістка Майнкрафту, я працюю над деякими
          з тварин та ворогів у цій грі. Однією з тварин, над якими я працювала, є
          оцелот, я працювала над тією частиною, в якій коли ви тримаєте рибу, оцелот
          підкрадатиметься до вас. І якщо ви нагодуєте його рибою, ви приручите його,
          й оцелот стане вашим власним котом.
      2:
        text: Як людям, нам дуже набридає, якщо нам доводиться робити одне й те саме
          знову й знову. Але що круто з комп'ютерами, що вони можуть робити одне й
          те саме мільйони, або навіть мільярди разів підряд, і їм це не набридає.
          Це повторювання називається циклом. Кожна істота в Майнкрафті використовує
          цикли.
      3:
        text: Раніше ми зробили, щоби курка рухалася екраном, але потім вона зупинилася.
          У Майнкрафті кури бродять постійно. Скористаймося циклом «постійно робити»
          з нашого набору інструментів, щоби наші кури також рухалися постійно. Сила
          циклів заощадить вам купу часу і відкриє всі види витончених варіантів при
          побудові вашої власної версії Майнкрафту.
    mc_2016_events:
      1:
        text: На цьому наступному рівні ви можете обрати, бути Стівом, чи Алекс. Натискайте
          клавіші зі стрілками на своїй клавіатурі, щоби рухатися догори, донизу,
          ліворуч та праворуч. Тепер ви можете рухатися рівнем, де вам заманеться.
          Щоби використати істоту, просто підійдіть до неї, поверніться до неї обличчям,
          і натисніть пропуск.
      2:
        text: Якщо ви використовуєте дотикочутливий екран, то проводьте пальцем вгору,
          вниз, ліворуч та праворуч, щоби рухатися. Потім торкніться гри, щоби використати
          предмет перед собою.
      3:
        text: Але що відбувається, коли ви використовуєте його? У Майнкрафті вівці
          скидають вовну, коли ви стрижете їх, корови тікають, коли ви б'єте їх, а
          кріпери вибухають, коли ви опиняєтеся біля них. Ці реакції відбуваються
          завдяки дечому, що називається подіями. Події кажуть вашій програмі слухати,
          або чекати, коли щось станеться. І коли це станеться, виконати дію.
      4:
        text: Наразі ми використали одну подію. Код, розміщений у розділі "коли створено",
          виконується, коли створюється істота, або розпочинається гра. На наступних
          кількох рівнях будуть нові розділи для таких подій, як "коли торкається"
          - запускається, коли ми торкаємось істоти, або "коли використовується",
          коли ми використовуємо об'єкт. Або, якщо хочеш, щоб зомбі зник зі сходом
          сонця, розмісти цю дію в розділі "коли настає день"
    mc_2016_spawn:
      1:
        text: В іграх створення ще називають породженням. На цьому рівні будемо створювати
          зомбі після заходу сонця. Щоб це зробити, використаємо блок "коли настає
          ніч".
      2:
        text: Оскільки ми хочемо створити зомбі вночі, ми додаємо блок "створити зомбі"
          під блок "коли настає ніч". Як тільки вони будуть створені, кожен зомбі
          виконає код, який ти розмістиш у їхньому розділі подій "коли створено".
          Розважайся, створюючи зомбі!
    mc_2016_congrats:
      1:
        text: Вітаємо! Ви вивчили, як застосовувати команди інформатики, щоби оживити
          світ Майнкрафту. Ви тепер — розробник. Ви розкрили всі ці команди, та всі
          істоти. Ви вибираєте, що відбувається.
      2:
        text: Коли ви завершили створення своєї гри, можете поділитися посиланням
          на свою гру з друзями, або грати у свою гру на своєму телефоні. Насолоджуйтесь!
          Я з нетерпінням чекаю можливості пограти у вашу версію Майнкрафту.
    mc_2017_agent_intro:
      1: 
      2: 
      3: 
      4: 
      5: 
      6: 
      7: 
      8: 
      9: 
      10: 
      11:
        text: Якщо ви забудете, що робити, то вказівки для кожного рівня знаходяться
          вгорі.
      12: 
