"uk":
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Ласкаво просимо до вашої першої години коду! Нумо, не зволікаючи, зробімо
          першу спробу в програмуванні.
      2:
        image: notes/hoc1_2.jpg
        text: Ми будемо використовувати Блоклі - візуальну мову програмування, де
          код програми не пишуть, а перетягують команди-блоки.
      3:
        image: notes/hoc1_3.jpg
        text: Більшість програмного коду потрібно набирати, але Blocky є візуальним
          середовищем. Кожен блок відповідає одному рядку коду.
      4:
        image: notes/hoc1_4.jpg
        text: Ви дізнаєтесь основи інформатики та поняття, які використовуються всюди,
          від програмування до контролю марсохода.
      5:
        image: notes/hoc1_5.jpg
        text: Програма - це набір інструкцій, які має виконати комп'ютер.
      6:
        image: notes/hoc1_6.jpg
        text: Метою вашої першої програми є перевести Злого Птаха через лабіринт до
          Зеленої Свині.
      7:
        image: notes/hoc1_7.jpg
        text: Ліворуч розміщено лабіринт, у якому виконуватиметься програма. Вказівки
          для кожного завдання знаходяться під лабіринтом.
      8:
        image: notes/hoc1_8.jpg
        text: Середня секція містить команди для Злого Птаха. Ви їх використаєте для
          побудови коду.
      9:
        image: notes/hoc1_9.jpg
        text: Праворуч міститься робоча область, в яку ви перетягнете блоки з панелі
          інструментів для побудови програми. Щоб видалити блок, перетягніть його
          у смітник в кутку.
      10:
        image: notes/hoc1_10.jpg
        text: Кожен блок - це одна команда. Якщо ви перетягнете блок "рухатись вперед"
          на робочу область і натиснете "Запуск програми", птах переміститься на одну
          позицію в лабіринті.
      11:
        image: notes/hoc1_11.jpg
        text: Щоб виконати більше однієї дії, перетягніть кілька блоків на робочу
          область та з'єднайте їх. Птах виконуватиме команди згори донизу.
      12:
        image: notes/hoc1_12.jpg
        text: Якщо ви запустили програму і бажаєте ще щось виправити та повторити
          спробу - натисніть кнопку "Скинути".
      13:
        image: notes/hoc1_13.jpg
        text: Нумо, дістанемо цих свиней!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Привіт, я JR! Для перемоги кожна команда потребує фахівців з комп'ютерних
          наук. Вони аналізують дані, отримані від автомобіля, щоб він рухався швидше.
      2:
        image: notes/stage5_2.jpg
        text: У цих завданнях ви будете художником, який повсюди малює за собою лінію.
      3:
        image: notes/stage5_3.jpg
        text: Цей блок вказує "рухатись вперед на 100 пікселів". Пікселі - це маленькі
          крапки на екрані.
      4:
        image: notes/stage5_4.jpg
        text: Цей блок вказує "повернути праворуч на 90 градусів". Це дозволить повернути
          художника на вказаний кут, так само як блок "поворот" у завданнях лабіринту.
      5:
        image: notes/stage5_5.jpg
        text: Клацніть на стрілці у будь-якому з цих блоків для того, щоб змінити
          те, наскільки художник переміщується вперед чи повертає. Поекспериментуйте
          з цими новими блоками.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Привіт, я Паола! У цих завданнях ви допоможете фермерці очистити поле
          для посадки рослин.
      2:
        image: notes/stage9_2.jpg
        text: Вам потрібно допомогти видалити всі купи землі та заповнити всі ямки.
      3:
        image: notes/stage9_3.jpg
        text: Нові блоки видаляють 1 відро землі з купи і засипають в ямку 1 відро
          землі.
      4:
        image: notes/stage9_4.jpg
        text: Купи та ямки різного розміру, тому потрібно вказати фермерці, скільки
          використати відер.
    flappy_intro:
      1:
        image: примітки/flappy01.jpg
        text: Привіт, Я Кеті! Одна із найбільш захопливих речей в інформатиці - це
          те, що комп'ютерна програма може бути інтерактивною.
      2:
        image: примітки/flappy02.jpg
        text: Щоразу коли хтось клацає чи торкається екрану комп'ютера чи телефону,
          це утворює ПОДІЮ, і існує код, який вказує, що робити при настанні певної
          ПОДІЇ.
      3:
        image: примітки/flappy03.jpg
        text: 'Наприклад, можна мати ОБРОБНИК ПОДІЇ, який вказує "коли клацнули мишкою,
          грай звук" '
      4:
        image: примітки/flappy04.jpg
        text: Ви коли-небудь чули про пташка Пурха (його ще знають як FlappyBird)?
          Використовуючи обробники подій, ми навчимось програмувати нашого власного
          Пурха!
      5:
        image: примітки/flappy05.jpg
        text: Код, який ви створите, передбачає перетягування блоків, які утворюють
          команди для комп'ютера. Всередині кожен з цих блоків складається зі справжнього
          коду.
      6:
        image: примітки/flappy06.jpg
        text: 'Якщо ви поглянете на робочу область, на ній вже розміщені деякі зелені
          блоки - це "обробники подій" '
      7:
        image: примітки/flappy07.jpg
        text: Якщо ви хочете, щоб птах змахував крилами при Клацанні мишкою, можна
          додати блок "махати" до відповідного обробника події, і тепер щоразу при
          клацанні мишкою птах змахуватиме крилами.
      8:
        image: примітки/flappy08.jpg
        text: У кожному завданні ми додаватимемо нові типи подій у вигляді зелених
          блоків на робочій області, і ви можете вирішувати, які саме блоки додавати
          для реакції на ці події.
      9:
        image: примітки/flappy09.jpg
        text: Коли ви побачите подібну стрілку вниз, це означає, що можна змінювати
          налаштування - наприклад, який саме звук грати, коли Пурх вдаряється об
          змелю.
      10:
        image: примітки/flappy10.jpg
        text: В останньому завданні ви зможете створити власну гру і поділитися нею
          з друзями. Успіхів!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Привіт, я Марк! Дізнаємось про цикли. Використання циклів вказує комп'ютеру
          повторити будь-який набір команд знову і знову, сотні, або й мільйони разів.
      2:
        image: notes/hoc2_2.jpg
        text: У цьому завданні ми хочемо змусити птаха рухатись вперед на 5 позицій,
          щоб дістатись до свині.
      3:
        image: notes/hoc2_3.jpg
        text: Ми можемо використати новий блок "повторити".
      4:
        image: notes/hoc2_4.jpg
        text: Замість того, щоб перетягувати 5 блоків "рухатись вперед"...
      5:
        image: notes/hoc2_5.jpg
        text: Ми можемо поставити блок "рухатись вперед" всередину блоку "повтори"
          і записати число всередині блоку, щоб вказати скільки разів слід повторити
          цю дію.
      6:
        image: notes/hoc2_6.jpg
        text: 'І це важливо: можна розмістити кілька команд всередині блоку "повтори".'
      7:
        image: notes/hoc2_7.jpg
        text: Розважайтесь зі своїм новим блоком "повторити"!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Привіт, я Кріс. Перед тим, як приєднатись до команди Miami Heat, я вивчав
          комп'ютерні науки в Технічному інституті Джорджиї. Спробуймо новий блок
          - "повторити до".
      2:
        image: notes/hoc3_2.jpg
        text: А якщо ми не знаємо, як далеко потрібно переміститись птахові, щоб дістатись
          до свині?
      3:
        image: notes/hoc3_3.jpg
        text: Якщо ми розмістимо блок "рухатись вперед" всередині блоку "повторювати
          до", птах рухатиметься вперед доти, доки не дістанеться свині (або доки
          не вріжеться в стіну).
      4:
        image: notes/hoc3_4.jpg
        text: 'І це важливо: так само, як і раніше, ми можемо розмістити кілька блоків
          всередині блоку "повторювати до", і вони будуть повторюватись.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Привіт, я Білл! Вивчимо нове базове поняття: команду галуження, яка
          допомагає комп''ютеру приймати рішення.'
      2:
        image: notes/hoc4_2.jpg
        text: 'Ви самі використовуєте команду галуження щодня. Перед виходом з дому
          щоранку ви аналізуєте: ЯКЩО йде дощ, то треба одягнути плащ.'
      3:
        image: notes/hoc4_3.jpg
        text: Ми можемо вказати зомбі перевіряти, чи є шлях ліворуч, і ЯКЩО є шлях
          ліворуч, ми вкажемо йому повернути в цьому напрямку.
      4:
        image: notes/hoc4_4.jpg
        text: Щоб створити цей код, перетягнемо блок "якщо" і поставимо блок "повернути
          ліворуч" всередину.
      5:
        image: notes/hoc4_5.jpg
        text: Тепер, коли ми вгорі поставили блок "рухатись вперед" і навколо всього
          блок "повтори", щоразу коли зомбі рухається, він перевірятиме наявність
          шляху ліворуч та повертатиме. Команда "повторити" є критичною, щоб перевіряти
          можливість повороту на кожному кроці.
      6:
        image: notes/hoc4_6.jpg
        text: 'Команда розгалуження є дуже важливою в інформатиці. Одна з перших,
          створених мною програм, була гра хрестики-нулики, і в галуженні я перевіряв:
          ЯКЩО другий гравець може виграти, слід заблокувати цю виграшну позицію.'
      7:
        image: notes/hoc4_7.jpg
        text: Розважайтесь з блоком „якщо“!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Привіт, мене звуть Салоні. Я використовую програмування, щоб вирішувати
          задачі в охороні здоров'я та медицині. Зараз ми дізнаємось про блок "якщо-то-інакше".
          Він виглядає схоже на блок "якщо", але має додаткову частинку "інакше".
      2:
        image: notes/hoc5_2.jpg
        text: Якщо я поставлю блок "рухатись вперед" в область "робити", і "повернути
          ліворуч" в область "інакше", це означає, що зомбі буде вибирати між двома
          варіантами. ЯКЩО попереду є шлях, то він рухатиметься вперед, ІНАКШЕ (якщо
          шляху попереду немає), зомбі поверне ліворуч.
      3:
        image: notes/hoc5_3.jpg
        text: Так само, як із блоком "якщо", ми можемо розмістити блок "якщо-інакше"
          всередині блоку "повторити", щоб зомбі продовжував рухатися, а блок "якщо-інакше"
          допоможе перевірити чи потрібно повертати.
      4:
        image: notes/hoc5_4.jpg
        text: Отож, відправимо зомбі на місця!
    if_else_scrat:
      1:
        image: notes/saloni_ifelse_scrat1.jpg
        text: Команда "якщо-інакше" є прийняттям рішення з-поміж двох варіантів. Подивимося,
          як можна використати команду "якщо-інакше", щоб допомогти нашому другу Скрету.
      2:
        image: notes/saloni_ifelse_scrat2.jpg
        text: Цей блок виглядає так само, як блок "якщо", але має додаткову частину
          внизу, що відповідає за дії "інакше". Якщо я поставлю блок "рухатися вперед"
          в область "робити", а блок "повернути ліворуч" в область "інакше", це означає,
          що Скрет буде рухатися вперед, якщо попереду є шлях. Якщо шляху вперед немає,
          Скрет поверне ліворуч.
      3:
        image: notes/saloni_ifelse_scrat3.jpg
        text: Це прийняття рішення і виконання однієї з двох дій на основі цього рішення.
          І точно так само, як із блоком "якщо", ви можете розмістити блок "якщо-інакше"
          всередині блоку "повторити".
      4:
        image: notes/saloni_ifelse_scrat4.jpg
        text: А тепер допоможемо Скрету дістатись до свого жолудя!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Привіт, я Бріна, інженер в Інстаграмі. Функція - це певні рядки коду,
          які ви хочете використати багато разів, тож замість того, щоб щоразу повністю
          писати цей код, можна використати один блок.
      2:
        image: notes/stage13_2.jpg
        text: Ми дізнаємось, як визначати функції. Визначення функції починається
          із зірочки в кутку. Назва функції записується у верхньому рядку.
      3:
        image: notes/stage13_3.jpg
        text: Блоки, розміщені всередині визначення, вказують, що робити. Наприклад,
          це визначення функції називається "заповнити 5" і складається з блоку "повторити"
          та блоку "заповнити".
      4:
        image: notes/stage13_4.jpg
        text: Визначення на потрібному місці, але наша фермерка не зможе виконати
          функцію, поки ми не перетягнемо блок "заповнити 5" з  категорії функцій.
      5:
        image: notes/stage13_5.jpg
        text: 'Зробимо функцію цікавішою! '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'Привіт, я Макінд! Я розповім про блок "поки". '
      2:
        image: notes/stage9_6.jpg
        text: Блок "поки" виконуватиме дії, розміщені всередині нього, ДО ТИХ ПІР,
          ПОКИ умова на початку блоку залишається ІСТИНОЮ.
      3:
        image: notes/stage9_7.jpg
        text: Наприклад, якщо фермерка стоїть на купі, вона продовжуватиме видаляти
          по 1 відру землі, ПОКИ є ця купа.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Привіт, я Тріна, я працюю в Піксар. Я працювала над різними фільмами,
          включаючи Шрека.
      2:
        image: notes/stage11_2.jpg
        text: Це наш новий цикл "лічильник". Він виконуватиме дії знову і знову, і
          можна щоразу дещо змінювати ці дії.
      3:
        image: notes/stage11_3.jpg
        text: У цьому прикладі наш цикл "лічильник" вказує "рахувати лічильником від
          50 до 90 через 10", а всередині ми маємо блок "малювати квадрат". Перетягніть
          блок "лічильник" з розділу змінних на місце "довжина".
      4:
        image: notes/stage11_4.jpg
        text: Це означає, що художник малюватиме квадрат, стороною 50 пікселів, тоді
          додаватиме до них 10 і малюватиме квадрат, стороною 60 пікселів. Він продовжуватиме
          додавати 10 та малювати відповідний квадрат, поки не дійде до 90. Так, ми
          матимемо квадрати зі сторонами 50, 60, 70, 80 та 90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Привіт, я Жанет, і я інженер у Зинга.
      2:
        image: notes/stage15_2.jpg
        text: А якщо нам потрібно намалювати кілька трикутників зі сторонами різної
          довжини?
      3:
        image: notes/stage15_3.jpg
        text: Ми могли б написати код вручну, або використаємо функцію з параметрами.
      4:
        image: notes/stage15_4.jpg
        text: Щоб зробити це, клацніть блакитну зірочку на визначенні функції "намалювати
          трикутник". Тоді перетягніть "назву параметра" до блоку "вхід".
      5:
        image: notes/stage15_5.jpg
        text: Тепер, якщо ви напишете "довжина" в тому місці, де вказано "х" і натиснете
          "Enter", ви створите вхідну довжину для своєї функції.
      6:
        image: notes/stage15_6.jpg
        text: Потім клацніть зірочку. Тепер вам потрібно клацнути в категорії змінних
          і перетягнути блок "довжина" у блок "рухатись вперед" вашого визначення
          функції. Заберіть старий блок з числом.
      7:
        image: notes/stage15_7.jpg
        text: Щоб використати функцію з параметрами, клацніть на категорії функцій
          та перетягніть функцію "намалювати трикутник з довжиною".
      8:
        image: notes/stage15_8.jpg
        text: Тепер можете використати математичний блок, щоб вводити різні числа
          для побудови трикутників різних розмірів.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Вітання! Розв'язавши останнє завдання, ви щойно сформували код, за яким
          БУДЬ-ЯКИЙ робот може знайти дорогу через лінійний лабіринт чи тунель будь-якого
          розміру, чи це буде зомбі, птах, марсохід, чи навіть автомобіль на автоматичному
          керуванні без водія.
      2:
        image: notes/hoc6_2.jpg
        text: Основні поняття, які ви використали, лежать в основі кожної програми,
          якою ви коли-небудь користувались. Ми познайомились з циклами на певну кількість
          повторів та умовними повторами, а також із розгалуженнями "якщо" та "якщо-то-інакше".
      3:
        image: notes/hoc6_3.jpg
        text: Якщо вам сподобалась ця перша година коду, відвідайте code.org, щоб
          продовжити вивчення інформатики! У нашому 20-и годинному курсі ви опануєте
          основи програмування і зможете писати програми для телефонів чи роботів,
          ігри - та все, що завгодно.
      4:
        image: notes/hoc6_4.jpg
        text: 'Технології змінюють все, чим ми займаємось, і не важливо, якого ви
          віку: програмування - це весело та творчо, і кожен може його опанувати!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Примітки показу скоро будуть!
    frozen_intro:
      1:
        image: notes/frozen1_1.jpg
        text: Привіт, мене звуть Ліндсі. Я модель, актриса і пишу свої власні програми.
          Допоможемо Анні та Ельзі досліджувати магічну красу льодяних узорів за допомогою
          програмування.
      2:
        image: notes/frozen1_2.jpg
        text: Ви намалюєте сніжинки та крижані візерунки, покатаєтеся на ковзанах
          і створите зимову казку, якою зможете поділитися зі своїми друзями.
      3:
        image: notes/frozen1_3.jpg
        text: Протягом наступної години ви навчитеся основам програмування. Традиційне
          програмування, як правило, відбувається у тексті, але ми використаємо мову
          Blockly, на основі візуальних блоків, котрі можна перетягувати, щоб створити
          програму. Так вчаться програмувати навіть студенти університетів. Всередині,
          ви все-ж створюєте код.
      4:
        image: notes/frozen1_4.jpg
        text: Програма являє собою набір інструкцій, які вказують комп'ютеру, що робити.
          Створимо код, або програму, які допоможуть Ельзі намалювати просту лінію.
          Ми використаємо це пізніше для створення складніших узорів.
      5:
        image: notes/frozen1_5.jpg
        text: Екран розділено на три основні частини. Ліворуч розміщена крижана поверхня,
          на якій виконуватиметься програма. Інструкції для кожного рівня написані
          внизу цією області.
      6:
        image: notes/frozen1_6.jpg
        text: Область посередині - це панель інструментів, і кожен з цих блоків є
          командою, котру можуть виконати Ельза та Анна.
      7:
        image: notes/frozen1_7.jpg
        text: Білий простір праворуч називається робочою областю, і саме тут ми створимо
          свою програму. Щоб рухатися по крижаній поверхні, використаємо блок "рухатися
          вперед".
      8:
        image: notes/frozen1_8.jpg
        text: Ось, блок "рухатися вперед" вказує рухатися вперед на 100 пікселів.
          Що буде, коли ми натиснемо "Запустити"? Ельза переміститься на певну відстань,
          а точніше на 100 пікселів! Пікселі - це маленькі квадратики на екрані комп'ютера.
      9:
        image: notes/frozen1_9.jpg
        text: Інший блок цього завдання вказує "повернути на 90 градусів". І коли
          ми використаємо цей блок, Ельза виконає поворот. Можете поекспериментувати,
          на скільки градусів Ельзі потрібно повертати. Кут вимірюється відносно шляху
          попереду Ельзи. Так виглядає поворот на 90 градусів. А так - на 120 градусів.
      10:
        image: notes/frozen1_10.jpg
        text: Пам'ятайте, ви можете змінити кількість пікселів і градусів, натиснувши
          стрілочки поруч із числами.
    frozen_loops:
      1:
        image: notes/frozen2_1.jpg
        text: Привіт, я Паола! Комп'ютери добре вміють повторювати дії. Ви можете
          порахувати до 10, 20 або 100. А комп'ютер рахувати мільярдами або трильйонами.
          Для нього це не буде нудно, і займе всього кілька секунд. Чи у підрахунку,
          чи малюванні або будь-чому іншому - комп'ютери можуть повторювати дії сотні
          або навіть мільярди разів.
      2:
        image: notes/frozen2_2.jpg
        text: У програмуванні ми називаємо це циклом. Цикл— це повторення виконання
          коду знову і знову. У наступному завданні ваша мета полягає у тому, щоб
          допомогти Анні створити квадрат, використавши блок "повторити".
      3:
        image: notes/frozen2_3.jpg
        text: Кожен блок, розміщений всередині блоку "повторити" буде повторювати
          послідовність дій вказану кількість разів.
      4:
        image: notes/frozen2_4.jpg
        text: 'Щоб намалювати квадрат, використайте блоки "рухатися вперед" і "повернути
          праворуч" 4 рази. Але існує простіший спосіб: вказати комп''ютеру "рухатися
          вперед" і "повернути праворуч на 90 градусів" один раз, а потім вказати
          повторити цю пару дій 4 рази. Для цього потрібно розмістити блоки "рухатися
          вперед" і "повернути праворуч" всередині блоку "повторити".'
      5:
        image: notes/frozen2_5.jpg
        text: Пам'ятайте, що можна змінити число у блоці «повторити», і дії всередині
          блоку будуть повторюватися вказану кількість разів.
    frozen_functions:
      1:
        image: notes/frozen3_1.jpg
        text: Привіт, я Кріс Бош. Я професійний гравець у баскетбол, і я програмував
          у коледжі.
      2:
        image: notes/frozen3_2.jpg
        text: Одна з найважливіших концепцій інформатики полягає в тому, як створювати
          нові команди. Більшість комп'ютерних мов мають лише близько 100 слів або
          команди. І справді, мистецтво та майстерність програмування лежить у визначенні
          своїх власних команд із цих стандартних блоків.
      3:
        image: notes/frozen3_3.jpg
        text: Після того, як ви навчили комп'ютер, як виконати дію один раз за допомогою
          певної послідовності команд, ви може вказати свою власну назву для цієї
          дії, і легко повторити її пізніше. Коли ви визначаєте свою власну команду
          і надаєте їй назву - ви створюєте функцію.
      4:
        image: notes/frozen3_4.jpg
        text: Привіт, я Джесс. У програмуванні за допомогою блоків, ви можете скористатись
          функціями, якщо є набір дій, які ви хотіли б використовувати кілька разів.
          Наприклад, ви написали код, щоб створити квадрат.
      5:
        image: notes/frozen3_5.jpg
        text: 'Це можна визначити як функцію під назвою "створити квадрат." '
      6:
        image: notes/frozen3_6.jpg
        text: Тепер у вас є новий блок, що дає змогу створювати квадрати багато разів.
      7:
        image: notes/frozen3_7.jpg
        text: Прості фігури можуть використовуватися для створення складніших узорів.
          У наступному завданні, нещодавно створений код малювання кола, доступний
          у вигляді функції, яку можна використати для малювання кіл різних розмірів.
          Зможете, використавши її, допомогти Ельзі створити складні та красиві візерунки
          на снігу?
    C3_playlab_create_game:
      1:
        image: notes/playlab_1.png
        text: До цього часу ви створювали анімації або складали історію, у якій щоразу
          при запуску проекту виконувались точно однакові команди. Тепер ви можете
          створити інтерактивну гру, в яку насправді можна пограти.
      2:
        image: notes/playlab_2.png
        text: Існують блоки "коли натиснено стрілку" та "перемістити персонажа". Ви
          можете розмістити ці блоки поряд, щоб переміщуватися персонажів за допомогою
          клавіш зі стрілками.
      3:
        image: notes/playlab_3.png
        text: Існують деякі блоки, котрі виконують дії при зіткненні персонажів, або
          коли по них клацають. Досліджуйте їх та створюйте цікаві проекти!
    playlab_intro:
      1:
        image: notes/playlab_intro_1.png
        text: Ми збираємося створити гру за допомогою Ігрової лабораторії. У хорошої
          гри є певний сюжет, із певними персонажами. Ми дізнаємося, як зробити так,
          щоб персонажі виглядали як відьми, інопланетяни чи тваринки, вміли говорити,
          рухатися і взаємодіяти один з одним. До кінця цього підручника ви зможете
          створити гру з самого початку і поділитися нею з друзями.
      2:
        image: notes/playlab_intro_2.png
        text: Ваш екран поділено на 3 основних частини. Ліворуч - ігровий простір,
          де буде працювати ваша програма. Інструкції для кожного рівня написані внизу.
      3:
        image: notes/playlab_intro_3.png
        text: Середня область містить панель інструментів, де кожен з блоків являє
          собою певну команду коду. Білий простір праворуч - це робоча область, де
          ми будемо складати програму.
      4:
        image: notes/playlab_intro_4.png
        text: Для початку, потрібно зв'язати блоки і помаранчевий блок "при запуску".
          Можна прикріпити кілька блоків разом, і перетягувати їх, поки не побачите
          жовту мітку, після відпускання вони автоматично розташуються поряд.
      5:
        image: notes/playlab_intro_5.png
        text: У цьому першому завданні, нашим персонажем є пінгвін і ми допоможемо
          йому сказати "Привіт!, перетягнувши блок "говорити" до блоку "при запуску"
          і надрукувавши "Привіт". Ми можемо також перемістити пінгвіна за допомогою
          блоків "рухатися вправо" і "рухатися вліво". Після того як всі блоки розставлено
          на місця, натисніть кнопку запуску, щоб побачити те, що ви запрограмували.
      6:
        image: notes/playlab_intro_6.png
        text: Розпочинайте роботу, і в кінці ви зможете створити власну гру з різними
          персонажами, котрі зможуть взаємодіяти, сумувати чи веселитись, заробляти
          бали, кидати вогняні кулі чи навіть застосовувати магію зникнення. Все залежить
          від вас, і того, що ви хочете зробити.
    playlab_events:
      1:
        image: notes/playlab_events_1.png
        text: Тож зараз ми дізнаємося про те, що всі програмісти ігор використовують
          щодня. Це називаються подіями. Подія вказує програмі очікувати, поки щось
          не відбудеться. Коли це станеться, буде виконана певна дія.
      2:
        image: notes/playlab_events_2.png
        text: Прикладами подій є очікування клацання мишкою, натиснення клавіші зі
          стрілкою чи торкання сенсорного екрану.
      3:
        image: notes/playlab_events_3.png
        text: Отож, ми створимо космонавта, котрий привітається із землянами, коли
          на ньому клацнуть. Використаємо блок «коли клацнули» та вкладемо у нього
          блок "говорити". Коли гравець натискає на космонавта, буде виконано все,
          що вказано в області "коли клацнули". Що скаже ваш прибулець?
      4:
        image: notes/playlab_events_4.png
        text: Існують також блоки "коли натиснено стрілку". Якщо всередині розмістити
          блоки "рухатися", ви можете переміщувати персонажів вгору, вниз, вліво або
          вправо. Крок за кроком, ваша гра стає все більш інтерактивною.
    playlab_repeat_forever:
      1:
        image: notes/playlab_repeat_forever_1.png
        text: Це блок "повторювати завжди". Розміщене у цьому блоці виконуватиметься
          у грі постійно і завжди.
      2:
        image: notes/playlab_repeat_forever_2.png
        text: Якщо ми хочемо, щоб персонаж виконував дію кілька разів, без додаткових
          вказівок від гравця, розмістимо відповідну дію всередині блоку "повторювати
          завжди".
      3:
        image: notes/playlab_repeat_forever_3.png
        text: У наступному завданні наша мета полягає у тому, щоб допомогти чарівникові
          охороняти кордони володінь, безперервно рухаючись вліво і вправо. Вивчення
          команди повторення збереже море часу в майбутньому, коли ви створюватимете
          власну гру.
