---
id:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Selamat datang pada jam pertama belajar mengkode. Ayo coba pengalaman
          pertama anda memprogram.
      2:
        image: notes/hoc1_2.jpg
        text: Kita akan mengunakan Blockly, sebuah bahasa pemrograman dimana anda
          tinggal menarik dan menempatkan blok untuk menuliskan kode.
      3:
        image: notes/hoc1_3.jpg
        text: Kebanyakan kode harus ditulis, tetapi Blockly menggunakan visual. Setiap
          satu blok sama dengan sebuah baris dari kode asli.
      4:
        image: notes/hoc1_4.jpg
        text: Kalian akan mempelajari fondasi ilmu komputer, berdasarkan konsep-konsep
          yang digunakan dimana-mana, mulai dari  pembuatan app sampai mengkontrol
          rover di planet Mars.
      5:
        image: notes/hoc1_5.jpg
        text: Program merupakan sekumpulan instruksi yang harus dikerjakan komputer.
      6:
        image: notes/hoc1_6.jpg
        text: Tujuan dari program pertama anda adalah membuat Angry Birds melalui
          labirin kemudian menangkap babi hijau.
      7:
        image: notes/hoc1_7.jpg
        text: Pada sisi kiri merupakan labirin dimana program anda akan dijalankan.
          Instruksi dari setiap puzzle ada dibawah labirin.
      8:
        image: notes/hoc1_8.jpg
        text: Pada kotak perkakas ditengah memiliki semua perintah untuk Angry Bird.
          Anda akan menggunakannya untuk membangun kode anda.
      9:
        image: notes/hoc1_9.jpg
        text: Pada bagian kanan adalah area kerja dimana anda akan menarik blok dari
          kotak perkakas untuk membuat program. Untuk menghapus blok, tarik kedalam
          tempat sampah yang berada disudut.
      10:
        image: notes/hoc1_10.jpg
        text: Setiap blok berisi satu instruksi. Jika ada menarik "move forward" blok
          kedalam area kerja anda dan menekan "Jalankan Program", maka burung akan
          berpindah satu petak dalam labirin.
      11:
        image: notes/hoc1_11.jpg
        text: Untuk melakukan lebih dari satu aksi, kamu bisa menarik banyak blok
          ke ruang kerjamu dan melampirkan mereka. Burung itu akan melakukan perintah
          itu dari atas ke bawah.
      12:
        image: notes/hoc1_12.jpg
        text: Jika anda menjalankan program dan ingin meperbaiki dan mencobanya kembali,
          tekan tombol "Atur Ulang".
      13:
        image: notes/hoc1_13.jpg
        text: Ayo kita ambil babi-babi tersebut!
    artist_intro:
      1:
        text: Halo, Nama saya JR! Setiap tim balap mobil perlu programmer untuk dapat
          memenangkan balapan. Mereka menganalisis data dari mobil untuk dapat membuatnya
          meluncur lebih cepat.
      2:
        text: Dalam puzzle ini, Anda akan menjadi seorang artis yang menarik garis
          ke mana pun mereka berjalan.
      3:
        text: Blok ini mengatakan "Gerak maju sepanjang 100 piksel." Pixel adalah
          titik-titik yang sangat kecil pada layar Anda.
      4:
        text: Blok ini mengatakan "belok kanan oleh 90 derajat." Ini akan membuat
          artis Anda belok dengan sudut yang sama sebagai blok "belok" di puzzle labirin
          yang sebelumnya.
      5:
        text: Klik pada panah di salah satu blok ini untuk mengubah arah artis bergerak
          maju atau belok. Cobalah mengenali cara kerja blok-blok ini.
    farmer_intro:
      1:
        text: Halo, Saya Paola! Dalam puzzle ini, Anda menjadi seorang petani yang
          harus membuat ladangmu benar-benar datar sebelum memulai menanam tanaman.
      2:
        text: Anda harus membantu menghapus semua tumpukan tanah dan mengisi semua
          lubang.
      3:
        text: Blok baru yang memindahkan 1 sekop tumpukan tanah dan menimbun 1 sekop
          tanah ke sebuah lubang.
      4:
        text: Tumpukan dan lubang adalah ukuran yang berbeda, sehingga Anda harus
          memberitahu petani berapa banyak sekop yang harus digunakan.
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: Hi, I 'm Katie! Salah satu hal yang paling menarik tentang ilmu komputer
          adalah bahwa sebuah program komputer bisa interaktif.
      2:
        image: notes/flappy02.jpg
        text: Jika seseorang mengklik atau mengetuk atau mengetik di komputer atau
          telepon, yang menghasilkan sebuah EVENT, dan ada beberapa kode yang dapat
          memutuskan apa yang harus dilakukan ketika ini terjadi.
      3:
        image: notes/flappy03.jpg
        text: 'Contohnya, Anda bisa mendapatkan pesan ''EVEN-HANDLER'' isinya "ketika
          maus ditekan, mainkan sebuah bunyi" '
      4:
        image: notes/flappy04.jpg
        text: Pernahkan kamu mendengar permainan FlappyBird? Dengan menggunakan 'Event
          Handlers', kita akan belajar untuk memprogram FlappyBird buatan kita sendiri!
      5:
        image: notes/flappy05.jpg
        text: Kode yang Anda akan tulis melibatkan mengambil blok yang mewakili perintah
          untuk komputer. Didalam masing-masing blok, ada kode yang nyata.
      6:
        image: notes/flappy06.jpg
        text: 'Jika Anda melihat di ruang kerja (workspace), ada beberapa blok hijau
          yang telah diisi - blok-bok ini dinamakan "event handlers" '
      7:
        image: notes/flappy07.jpg
        text: Jika Anda ingin burung mengepakkan sayap ketika Anda klik maus, Anda
          dapat melakukannya dengan melampirkan blok "kepakkan sayap" ke "event handler"
          tertentu, dan karena itu dalam permainan Anda setiap kali Anda mengklik
          maus, burung akan mengepakkan sayapnya.
      8:
        image: notes/flappy08.jpg
        text: Dalam setiap puzzle kegiatan ini kami akan memperkenalkan jenis baru
          dari peristiwa sebagai blok hijau pada ruang kerja (workspace), dan Anda
          dapat memutuskan blok mana yang harus ditempelkan sesuai "event"nya.
      9:
        image: notes/flappy09.jpg
        text: Ketika Anda melihat menu seperti ini, itu berarti Anda dapat mengubah
          pengaturan - seperti bunyi apa yang bermain ketika flappy menyentuh permukaan.
      10:
        image: notes/flappy10.jpg
        text: Dalam puzzle akhir Anda akan dapat membuat permainan Anda sendiri dan
          berbagi dengan teman-teman Anda. Selamat bersenang-senang!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Hai, Saya Mark! Ayo kita belajar mengenai perulangan (loop). Dengan
          menggunakan perulangan anda dapat mengatakan pada komputer untuk mengulangi
          sekumpulan aksi berulang ulang kali, ribuan kali atau bahkan milayaran kali.
      2:
        image: notes/hoc2_2.jpg
        text: Dalam puzzle ini, kita menginginkan untuk membuat burung berpindah 5
          petak menuju babi.
      3:
        image: notes/hoc2_3.jpg
        text: Kita dapat menggunakan blok "repeat" untuk membantu kita.
      4:
        image: notes/hoc2_4.jpg
        text: Daripada menarik 5 blok "move forward"...
      5:
        image: notes/hoc2_5.jpg
        text: Kita dapat menempatkan blok "move forward" dalam blok "repeat" dan menuliskan
          angka dalam blok untuk menentukan berapa banyak perulangan yang harus dilakukan.
      6:
        image: notes/hoc2_6.jpg
        text: 'Dan yang terpenting: anda dapat menempatkan lebih dari satu perintah
          dalam sebuah blok "repeat".'
      7:
        image: notes/hoc2_7.jpg
        text: Nikmatilah menggunakan blok "repeat" baru anda!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Hai, Saya Chris. Sebelum bergabung dengan Miami Heat, saya pergi ke
          Georgia Tech untuk mempelajari Ilmu Komputer. Ayo kita coba blok baru kita,
          yaitu blok "repeat until".
      2:
        image: notes/hoc3_2.jpg
        text: bagaimana jika kita tidak mengetahui berapa jarak untuk burung harus
          berpindah untuk sampai kepada babi?
      3:
        image: notes/hoc3_3.jpg
        text: Jika kita meletakan blok "move forward" kedalam blok "repeat until",
          maka burung akan begerak maju sampai ia mencapai babi (atau menabrak tembok).
      4:
        image: notes/hoc3_4.jpg
        text: 'Jangan lupa: sama seperti sebelumnya, kita dapat menaruh beberapa blok
          didalam blok "Ulangi sampai" (repeat until) dan blok blok tersebut akan
          diulang.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Hai, Saya Bill! Mari kita belajar konsep fundamental yang baru: pernyataan
          "jika" (if). Ini yang dapat membuat komputer untuk membuat keputusan.'
      2:
        image: notes/hoc4_2.jpg
        text: 'Sehari-hari andapun terbiasa menggunakan menggunakan pernyataan "jika"
          (if). Misalnya: setiap pagi sebelum keluar dari rumah , anda berkata: "jika"
          diluar hujan, maka saya perlu menggunakan jas hujan.'
      3:
        image: notes/hoc4_3.jpg
        text: Kita dapat membuat zombie untuk memeriksa jika ada jalan ke kiri, dan
          jika ia menemukannya, kita dapat membuat ia untuk menuju ke arah tersebut.
      4:
        image: notes/hoc4_4.jpg
        text: Untuk menuliskan kode seperti ini, mari kita menarik keluar blok "jika"
          (if) dan menempatkan blok "belok kiri" (turn left) kedalamnya.
      5:
        image: notes/hoc4_5.jpg
        text: Sekarang, jika kita tempatkan sebuah blok "maju kedepan" (move forward)
          paling pertama dan sebuah blok "ulangi" (repeat) menyelimuti seluruh bagian,
          maka setiap zombie bergerak, ia akan mengecek apakah ada jalan ke kiri dan
          berbelok menuju arah tersebut. Perintah "ulangi" (repeat) sangatlah penting,
          untuk melakukan pengecekan setiap belokan pada setiap langkah.
      6:
        image: notes/hoc4_6.jpg
        text: Pernyataan if sangatlah penting dalam ilmu komputer. Salah satu dari
          program yang pertama saya tulis adalah game tik-tak-tol, dan ada sebuah
          pernyataan if yang mengatakan jika pemain yang lain hampir menang, maka
          halangi kotak yang akan membuat ia menang.
      7:
        image: notes/hoc4_7.jpg
        text: Selamat berexperimen dengan blok "jika" (if)!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Halo, nama saya Saloni. Saya menggunakan ilmu komputer untuk menolong
          memecahkan masalah di kesehatan dan obat-obatan. Mari kita belajar tentang
          blok "jika tidak" /if else. Ini terlihat blok "jika" /if,tetapi terdapat
          bagian tambahan di akhir mengatakan "jika tidak" /else.
      2:
        image: notes/hoc5_2.jpg
        text: Jika saya menaruh blok "move forward"/"gerakmaju" di tempat bertanda
          blok  "do"/"lakukan", dan menaruh blok "turn left"/"belok kiri" ditempat
          bertanda blok  "else"/"jika tidak"  yang berarti bahwa zombie akan memilih
          antara 2 pilihan. Jika ada jalan ke depan, zombie akan bergerak maju, dan
          sebaliknya (tidak ada jalan ke depan), zombie akan berbelok ke kiri.
      3:
        image: notes/hoc5_3.jpg
        text: Seperti  blok "if"/"jika", kita dapat menempatkan blok "if else"/"jika
          lain"  dalam blok "repeat"/"Ulangi" sehingga zombie terus bergerak dan blok
          "if else"/"jika lain" akan terus menerus  memeriksa apakah ada tempat untuk
          berbalik.
      4:
        image: notes/hoc5_4.jpg
        text: Sekarang, mendapatkan mereka zombie di tempat mereka berasal!
    if_else_scrat:
      1:
        text: pernyataan if-else adalah keputusan antara dua hal. Mari kita lihat
          bagaimana kita dapat menggunakan pernyataan if-else dengan teman Scrat tupai
          kami .
      2:
        text: Blok ini terlihat sama dengan blok "jika"/"if" tetapi ada bagian tambahan
          di bawah yang mengatakan "else"/"kecuali". Jika saya menempatkan blok "move
          forward"/"bergerak maju" di blok yang mengatakan "do"/"lakukan" dan blok
          "turn left/ "belok kiri" di blok yang mengatakan "else"/"kecuali", itu berarti
          Scrat si tupai akan bergerak maju jika ada jalan di depan. Jika tidak ada
          jalan di depan, Scrat akan berbelok ke kiri.
      3:
        text: Hal ini membuat keputusan dan melakukan salah satu dari dua tindakan
          berdasarkan keputusan itu. Dan seperti halnya  blok "if" / "jika", Anda
          dapat menempatkan blok "if-else" / "kecuali-jika" dalam blok "ulangi" .
      4:
        text: Sekarang mari kita membantu Scrat tupai mendapatkan biji akorn!
    function:
      1:
        text: Halo, saya Brina, seorang programer dari Instagram. Fungsi adalah baris-baris
          tertentu kode yang Anda ingin menggunakan berkali-kali. Daripada menulis
          kode yang sama setiap kali, Anda cukup menggunakan satu blok.
      2:
        text: Kita akan belajar bagaimana cara membuat suatu fungsi. Suatu fungsi
          akan memiliki sebuah tanda bintang di sudut dan nama fungsi ditulis di atas
          blok.
      3:
        text: Blok yang masuk dalam fungsi menjelaskan apa yang dikerjakannya. Jadi
          fungsi ini dinamakan "Timbunlah 5" dan itu terdiri dari blok "Ulangi" dan
          blok "timbun".
      4:
        text: Fungsi terletak di area kerja, tetapi seluruh fungsi tidak akan bekerja
          sampai Anda menarik keluar blok "fungsi isi 5" dari fungsi kategori.
      5:
        text: 'Mari kita bersenang-senang dengan "Fungsi"! '
    loop_while:
      1:
        text: 'Hi, Saya Makinde! Mari kita belajar tentang blok "selama". '
      2:
        text: Blok "Selama" akan mengerjakan perintah-perintah yang Anda tempatkan
          di dalamnya selama kondisinya berlaku.
      3:
        text: Misalnya, jika si petani berdiri di tumpukan, maka ia akan terus memindahkan
          1 sekop SELAMA tumpukan masih ada.
    loop_for:
      1:
        text: Halo, saya Trina, dan saya bekerja untuk Pixar. Saya telah terlibat
          didalam produksi banyak film, termasuk Shrek.
      2:
        text: Ini adalah loop "counter". Loop ini akan melakukan aksi berulang kali
          dan Anda dapat membuat aksi-aksi sedikit berbeda setiap kali.
      3:
        text: Dalam contoh ini, loop "counter" mendeskripsikan "Hitung dengan konter
          dari 50 sampai 90 dengan step 10" dan di dalamnya, ada sebuah blok "Gambar
          persegi". Taruh blok "konter" dari bagian "Variabel" ke dalam "panjang".
      4:
        text: Ini berarti si artis akan menggambar beberapa buah persegi, yang pertama
          memiliki panjang 50 piksel, lalu tambahkan 10 piksel dan kemudian gambar
          lagi sebuah persegi dengan 60 piksel panjang. Kemudian akan terus tambahkan
          10 piksel lagi sampai kotak terakhir dengan panjang 90 piksel. Jadi kita
          akan memiliki beberapa kotak dengan panjang 50, 60, 70, 80 dan 90 piksel.
    parameters:
      1:
        text: Hi, I 'm Janete, dan saya adalah seorang programer di Zynga.
      2:
        text: Bagaimana jika kita ingin menarik beberapa segitiga dengan sisi yang
          berbeda?
      3:
        text: Kita bisa menulis semua kode yang menggambar segitiga satu persatu atau
          kita bisa menggunakan sebuah fungsi dengan parameter.
      4:
        text: Untuk dapat melakukannya, klik gambar bintang biru pada fungsi "tarik
          segitiga". Kemudian taruhlah "masukan nama" ke dalam blok "masukan".
      5:
        text: Kemudian jika Anda menulis "panjang" di tempat di mana bertanda "x"
          dan tekan "Enter" Anda akan membuat panjang sebagai masukan untuk fungsi
          Anda.
      6:
        text: Kemudian klik tanda bintang. Lalu, klik pada kategori variabel dan taruhlah
          blok "panjang" pada blok "gerak maju" dari fungsi Anda. Dan buanglah blok
          sebelumnya.
      7:
        text: Untuk menggunakan fungsi Anda dengan parameter, klik pada kategori fungsi
          dan tariklah keluar fungsi "menggambar sebuah segitiga dengan panjang".
      8:
        text: Sekarang Anda dapat menggunakan blok matematika untuk memasukkan nomor
          yang berbeda untuk menggambar segitiga dengan ukuran yang berbeda.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Horee! Dengan puzzle terakhir yang anda pecahkan, anda telah menuliskan
          kode yang dapat mengerakan robot untuk mencari jalan keluar dari labirin
          tidak bercabang atau terowongan dengan berbagai panjang, apakah itu sebuah
          zombie, burung, mars rover, atau bahkan pengemudi otomatis mobil.
      2:
        image: notes/hoc6_2.jpg
        text: Konsep dasar yang anda gunakan merupakan jatung dari setiap pemrograman
          atau app yang anda pernah gunakan. Kita mempelajari menangani perulangan
          (loops), ulangi (repeat), pernyataan ulangi sampai (repeat until), pernyataan
          jika (if) dan pernyataan jika tidak (if else).
      3:
        image: notes/hoc6_3.jpg
        text: Jika anda menyukai waktu pertama anda mengkoding, maka kunjungilah code.org
          untuk melanjutkan edukasi dalam ilmu pengetahuan komputer. Saat anda menyelesaikan
          kursus 20 jam, maka anda akan menguasai dasar pemrograman, dan anda dapat
          memulai belajar cara membuat aplikasi hp, instruksi robot, games, apa pun
          yang anda ingin lakukan.
      4:
        image: notes/hoc6_4.jpg
        text: 'Teknologi merubah segala sesuatu yang kita lakukan dan tidak peduli
          apakah anda muda atau tua: Pemrograman sangat menyenangkan, kreatif dan
          dapat dipelajari oleh semua orang.'
    20_wrapup:
      1:
        text: Catatan sedang dipersiapkan!
    frozen_intro:
      1:
        text: Hi, nama saya Lyndsey. Saya model, bertindak, dan menulis aplikasi saya
          sendiri. Mari kita menggunakan kode bergabung dengan Anna dan Elsa karena
          mereka menjelajahi keajaiban dan keindahan es.
      2:
        text: Anda akan menciptakan kepingan salju dan pola seperti skate es Anda
          dan membuat wonderland musim dingin yang kemudian dapat berbagi dengan teman-teman
          Anda.
      3:
        text: Dalam satu jam berikutnya, Anda akan mempelajari dasar-dasar bagaimana
          membuat kode. Pemrograman tradisional biasanya dalam teks, tapi kami akan
          menggunakan Blockly, yang menggunakan blok visual yang dapat Anda drag dan
          drop dalam menulis program. Inilah cara bagaimana mahasiswa mempelajari
          dasar-dasar pemograman. Di mana saja, Anda tetap bisa membuat kode.
      4:
        text: Program adalah serangkaian instruksi yang memberitahu komputer apa yang
          harus dilakukan. Mari kita membangun kode, atau program, yang akan membantu
          Elsa membuat garis sederhana. Kita akan menggunakannya nanti untuk membuat
          pola-pola yang lebih kompleks.
      5:
        text: Layar Anda dibagi menjadi tiga bagian utama. Di sebelah kiri, adalah
          permukaan es di mana Anda akan menjalankan program Anda. Petunjuk untuk
          setiap tingkat ditulis tepat di bawah permukaan.
      6:
        text: Daerah tengah ini terdapar toolbox, dan masing-masing blok ini adalah
          tindakan yang Elsa dan Anna dapat lakukan.
      7:
        text: Ruang putih di sebelah kanan disebut ruang kerja, dan ini adalah di
          mana kita akan membangun program kita. Untuk bergerak di sekitar permukaan
          es, Anda akan menggunakan blok "Move Forward" / "Bergerak maju".
      8:
        text: Di sini, blok "move fordware"/"Bergerak maju" mengatakan, "move forward
          by 100 pixels."/"bergerak maju dengan 100 piksel." Ketika kita menekan "Jalankan",
          apa yang terjadi? Elsa bergerak maju dengan jumlah tertentu di layar, yang
          sebenarnya 100 pixel ! Piksel pada dasarnya adalah kotak yang sangat kecil
          di layar komputer Anda.
      9:
        text: Blok lain yang kita miliki dalam puzzle ini mengatakan  "turn right
          by 90 degrees."/"belok kanan oleh 90 derajat." Dan ketika kita menggunakan
          blok  "Turn Right"/"Belok kanan" ini, yang membuat Elsa berbelok dalam jumlah
          tertentu. Anda dapat bermain-main dengan seberapa jauh Anda inginkan Elsa
          untuk berbelok. Sudut diukur dari jalan depan Elsa. Jadi, ini adalah berbalik
          90 derajat. Dan ini adalah berbalik 120 derajat.
      10:
        text: Ingat, Anda dapat mengubah jumlah piksel dan derajat dengan mengklik
          tanda panah di samping mereka.
    frozen_loops:
      1:
        text: Hi, I 'm Paola! Komputer benar-benar baik untuk mengulangi tindakan.
          Anda dapat menghitung sampai 10, 20, atau 100. Tapi komputer dapat dihitung
          miliar atau triliun. Itu tidak akan bosan dan hanya terjadi beberapa detik.
          Apakah itu menghitung, atau menggambar, atau segala hal--komputer dapat
          mengulangi ratusan hal atau bahkan Milyaran kali.
      2:
        text: Dalam pemrograman, kami menyebutnya loop. Loop adalah bagaimana Anda
          mengulangi kode Anda secara berulang kali. Untuk puzzle berikutnya, tujuan
          Anda adalah untuk membantu Anna membuat persegi dengan blok "Repeat"/"Ulangi".
      3:
        text: Setiap blok kode yang Anda masukkan ke dalam blok "Repeat"/"Ulangi"
          akan diulang dalam urutan, sebanyak yang Anda inginkan.
      4:
        text: untuk mGerak majuenggambar persegi, Anda dapat menggunakan blok "Move
          Forward"/"Bergerak maju" dan blok "Turn Right"/"Belok kanan" 4 kali. Tetapi
          cara yang lebih mudah adalah untuk memberitahu komputer "Move Forward"/"Bergerak
          maju" dan "Turn Right by 90 degrees"/"Belok kanan 90 derajat" sekali, dan
          kemudian memberitahukannya untuk mengulangi sepasang tindakan sebanyak 4
          kali. Untuk melakukan itu, Anda perlu untuk menempatkan blok "Move Forward"/"Bergerak
          maju" dan blok "Turn Right"/"Belok kanan"  dalam blok "Repeat"/"Ulangi".
      5:
        text: Ingat, Anda dapat mengubah nomor di blok  "Repeat"/'"Ulangi" untuk apa
          pun, dan itu akan mengulang apa yang ada di dalam blok yang berkali-kali.
    frozen_functions:
      1:
        text: Hi, I 'm Chris Bosh. Saya pemain bola basket profesional, dan saya dikodekan
          di perguruan tinggi.
      2:
        text: Salah satu konsep yang paling penting dalam ilmu komputer adalah bagaimana
          mendefinisikan perintah baru. Kebanyakan bahasa komputer  hanya memiliki
          sekitar 100 kata atau perintah. Dan sungguh, seni dan keajaiban dalam mendefinisikan
          kata-kata baru Anda sendiri dari blok bangunan ini.
      3:
        text: Setelah Anda telah diajarkan komputer bagaimana melakukan tindakan sekali
          menggunakan urutan perintah, Anda dapat membuat nama Anda sendiri untuk
          tindakan tersebut sehingga mudah untuk mengulanginya nanti. Ketika Anda
          mendefinisikan perintah Anda sendiri dan memberinya nama, hal itu disebut
          fungsi.
      4:
        text: Hi, Saya Jess. Ketika pemrograman dengan blok, Anda akan menggunakan
          fungsi jika ada serangkaian tindakan yang Anda ingin menggunakan banyak
          kali. Misalnya, Anda telah menulis kode untuk membuat persegi.
      5:
        text: 'Anda bisa mendefinisikan ini sebagai fungsi yang disebut "create a
          square." /"menciptakan sebuah persegi." '
      6:
        text: Sekarang Anda memiliki blok baru yang dapat Anda gunakan beberapa kali
          untuk membuat beberapa kotak.
      7:
        text: Banyak bentuk sederhana dapat digunakan untuk menciptakan pola-pola
          yang lebih kompleks. Di depan puzzle, kode Anda baru saja menulis untuk
          membuat loop yang tersedia untuk Anda sebagai fungsi baru yang dapat membuat
          loop dengan ukuran yang berbeda. Anda dapat menggunakannya untuk membantu
          Elsa da;a, menciptakan pola yang rumit dan indah di salju ?
    playlab_intro:
      1:
        text: Kita akan membuat game menggunakan Play Lab. permainan yang bagus memiliki
          cerita, dan setiap cerita memiliki aktor. Kita akan belajar cara membuat
          aktor seperti penyihir, alinens, dan hewan berbicara, bergerak dan berinteraksi
          dengan satu sama lain. Pada akhir tutorial ini, Anda dapat membangun sebuah
          game dari awal dan berbagi dengan teman-teman Anda.
      2:
        text: Layar Anda dibagi menjadi 3 bagian utama. Di sebelah kiri adalah ruang
          permainan dimana program Anda akan berjalan. Petunjuk untuk setiap tingkat
          ditulis di bawah ini.
      3:
        text: Wilayah tengah adalah toolbox, dan masing-masing blok ini adalah sepotong
          kode. Ruang putih di sebelah kanan disebut ruang kerja dan ini adalah di
          mana kita akan membangun program kita.
      4:
        text: Untuk memulai, Anda harus hubungkan blok anda ke blok "when run" / "ketika
          menjalankan" yang bewarna oranye. Anda dapat menghubungkan beberapa blok
          bersama-sama dengan menyeret mereka sampai Anda melihat garis kuning, dan
          kemudian mereka akan merampas bersama-sama.
      5:
        text: Dalam puzzle pertama ini, aktor kami adalah seekor pinguin dan kami
          akan membuatnya mengatakan "Hello!" dengan menyeret blok katakan keluar,
          menghubungkannya saat menjalankan blok, dan mengetikkan "Hello." Kami juga
          dapat membuat penguin bergerak dengan menggunakan  blok move right/bergerak
          ke kanan dan blok move left /bergerak ke kiri. Setelah anda menempatkan
          blok anda, tekan tombol Jalankan untuk melihat apa yang teleh anda programkan.
      6:
        text: Mulai dan pada akhir, Anda akan dapat membuat game sendiri dengan segala
          macam pemain yang dapat berinteraksi, berubah bahagia atau sedih, mencetak
          poin, atau melempar bola api, atau bahkan lenyap satu sama lain. Semuanya
          terserah pada Anda dan permainan yang ingin Anda buat.
    playlab_events:
      1:
        text: Sekarang, kita akan belajar tentang sesuatu yang semua pemrogram permainan
          menggunakan setiap hari. Mereka disebut event/peristiwa. sebuah event memberitahu
          program Anda untuk mendengarkan ketika sesuatu terjadi. Ketika hal itu terjadi,
          program anda melakukan tindakan.
      2:
        text: Beberapa contoh peristiwa seperti listening/mendengarkan sebuah mouse
          click/klik mouse, arrow button/tombol panah atau tap on the screen/Tekan
          pada layar.
      3:
        text: Di sini, kita akan membuat ruang bot menyambut para penduduk dunia saat
          pemain mengklik dirinya. Kami akan gunakan blok "when clicked"/"saat diklik"  dan
          memasang block "say"/"katakan"  padanya. Ketika pemain mengklik pada ruang
          bot , segala sesuatu yang melekat pada   event blok "when clicked"/"ketika
          diklik" ini akan dilaksanakan. Apa tanggapan alien Anda ?
      4:
        text: disana juga terdapat blok  "when arrow"/"ketika panah menunjukan". Jika
          Anda menghubungkan blok "move"/"bergerak" untuk ini, Anda dapat mulai menggerakkan
          aktor Anda ke atas, bawah, kiri, atau kanan. Langkah demi langkah, permainan
          Anda semakin interaktif.
    playlab_repeat_forever:
      1:
        text: Ini adalah blok "repeat forever"/ "Ulangi selamanya". Segala hal di
          dalam blok ini akan terjadi selamanya dalam permainan.
      2:
        text: Jika kita ingin aktor untuk melakukan sesuatu yang berulang-ulang, tanpa
          pemain harus melakukan sesuatu, kami akan menempatkan blok tersebut di dalam
          blok "repeat forever"/"Ulangi selamanya".
      3:
        text: Dalam puzzle berikutnya, tujuan kami adalah untuk membantu wizard berpatroli
          di batas-batas kerajaan, kiri dan kanan secara terus menerus. Belajar bagaimana
          ulangi perintah kerja, akan menghemat satu ton waktu nanti ketika Anda membangun
          permainan Anda sendiri.
    C1_artist_intro:
      1:
        text: Ini adalah balok balok gambarmu. Gunakan satu yang benar untuk memindahkan
          artis kemana dia harus pergi untuk mengisi garis-garis abu-abu.
      2:
        text: Ini adalah balok-balok lompatan. Ketika kamu menggunakannya, artismu
          pindah tapi tidak menggambar, maka gunakanlah ini untuk melompat ke garis
          abu-abu berikutnya.
    C1_bee_level_intro:
      1:
        text: Kerenkan? Pada puzzle selanjutnya, target kamu adalah membantu lebah
          menemukan bunga dan mendapatkan nektar dari bunga tersebut dan terbang ke
          sarang lebah untuk membuat madu. Anda akan memakai balok "dapatkan nektar"
          dan balok "buat madu" untuk latihan ini.
      2:
        text: 'Setiap bunga memiliki jumlah nektar yang berbeda: 1, 2, 3, atau lebih.
          Kita mengetahui berapa banyak nektar di bunga-bunga merah, dengan jumlah
          kecil di sudut. Jadi pastikan untuk mendapatkan semua madu dari bunga sebelum
          anda bergerak maju. Juga, setiap sarang lebah hanya dapat menampung begitu
          banyak madu: 1, 2, 3, atau lebih. Jadi pastikan untuk membuat madu sebanyak
          yang dapat ditampung oleh sarang lebah.'
      3:
        text: Jika anda dapat memperoleh semua nektar dan membuat semua madu, anda
          telah berhasil dan pergi ke tingkat berikutnya. Jika tidak, anda perlu mencoba
          puzzle ini lagi. Bermain-main untuk sementara waktu dan lihat apa rasanya
          menjadi "lebah" programmer!
    C1_bee_loops:
      1:
        text: Sebuah loop adalah pengulangan aktivitas. Jadi akan menjadi sarang untuk
          memeriksa, saya melihat sebuah frame dan kemudian saya meletakkannya kembali,
          jadi saya ulangi bahwa aktivitas yang sama beberapa kali. Ini perulangan
          sekitar, melakukan kegiatan yang sama beberapa kali.
      2:
        text: Dalam level ini, kami ingin lebah mengumpulkan tiga nektar dari bunga.
          Alih-alih menggunakan tiga "mendapatkan nektar" blok, anda akan menggunakan
          blok berulang untuk mendapatkan nektar tiga kali. Pencet "Jalankan" dan
          lihat apakah anda sudah benar. Bagus!
    C1_bigevent_unplugged:
      1:
        text: Pelajaran ini disebut peristiwa besar. Ini semua tentang bagaimana kami
          dapat mengendalikan program-program kami dan sebenarnya mengubah cara sebuah
          program berjalan dengan cepat menggunakan peristiwa-peristiwa, seperti menekan
          sebuah tombol atau mengeklik sebuah mouse.
      2:
        text: Untuk pelajaran ini, anda akan dikontrol dengan sebuah remote control
          kertas. Ini seperti permainan video dunia nyata.
      3:
        text: Suatu peristiwa adalah suatu tindakan yang menyebabkan sesuatu terjadi.
          Ini seperti saat anda mengklik tombol pada sebuah mouse dan sebuah halaman
          web yang dimuat. Itu adalah sebuah peristiwa. Saat anda menyentuh layar
          anda di tablet untuk digulir, itu juga sebuah peristiwa. Peristiwa-peristiwa
          adalah cara terbaik untuk membiarkan pengguna mengarahkan program anda kapan
          pun mereka membutuhkan atau menginginkannya.
      4:
        text: Banyak hal terjadi yang mana kami semua meresponnya. Kami merasa lapar
          dan kami menuju ke kulkas. Kami mendengar tukang pos datang dan dia meletakkan
          surat kami di kotak surat dan kemudian kami membuka surat kami. Itu seperti
          kejadian menekan tombol atau menggeser joystick. Mereka adalah sesuatu yang
          terjadi yang memicu kita untuk melakukan sesuatu.
      5:
        text: Dalam video game, ada sebuah event yang disebut "Pembaruan" dan itu
          terjadi 30 atau 60 kali per detik. Untuk videogame programmer itu hampir
          lebih penting sebagai event dari tombol atau joystick.
      6:
        text: Acara utama yang kami tonton adalah event "Update" yang diputar tiap
          detik. Dan kemudian kami mencontreng joystick di tiap detiknya. Jadi kami
          berkata, "Oh, sudahkah ada yang menekan tombol gambar ini? Ya atau tidak?"
          Tanpa kejadian apapun, pemain tersebut tidak dapat bergerak, anda tidak
          dapat melompat, anda tidak akan dapat mengendalikan apa yang sedang terjadi.
          Videogame tidak akan dapat menghidupkan apapun.
    C1_building_foundation:
      1:
        text: Di patung pasir anda harus tahu bahwa kegagalan adalah bagian dari program.
          Tetapi jika anda bertahan, itu hanya akan mendapatkan apa-apa tapi baik
          dan lebih menarik untuk anda. Ketekunan adalah nama permainan. Tetap dengan
          itu, anda akan menyukainya.
      2:
        text: Pelajaran ini disebut bangunan suatu fondasi. Dalam pelajaran ini, kami
          akan mengerjakan satu tugas yang benar-benar sulit dilakukan. Anda akan
          tahu bagaimana membuat struktur setidaknya tinggi sebuah cangkir ini dan
          cukup kuat untuk menahan berat sebuah buku.
      3:
        text: Mungkin ada saatnya dimana ciptaan kita tidak berjalan dengan baik.
          Mungkin ada saatnya dimana kita merasa frustrasi dan ingin menyerah. Mungkin
          ada satu saat. Tapi jika kita terus mencoba, berika yang terbaik tembakan
          berulang-ulang, maka kita pasti yakin akan mendapatkannya sebelum kian lama.
      4:
        text: Keteguhan adalah tentang semua ketergantungan ketika Anda benar-benar
          ingin menyerah disana. Jika Anda ingin buat sesuatu yang baru dan berbeda,
          akan ada suatu kegagalan di sepanjang jalan.
      5:
        text: Trik untuk keteguhan adalah memilih untuk terus berjalan dan belajar
          lagi dari kegagalan Anda, bukan Anda berhenti karena frustrasi. Frustrasi
          sebenarnya hanya berarti apabila ada sesuatu yang indah di tikungan. Jadi
          janganlah anda berhenti sebelum anda sampai ke sana. Wooo!
    C1_getting_loopy:
      1:
        text: Hi, nama saya adalah Miral Kotb dan aku pencipta Iluminate. Dalam pekerjaan
          saya, ada sesuatu yang kita gunakan di kedua tarian dan dalam pemrograman
          lightsuits. Dan itu adalah loop! Loop mengulang suatu tindakan berulang-ulang.
      2:
        text: Ketika Anda mengulangi sesuatu beberapa kali, seperti tindakan saya
          untuk menjaga agar hula hoop tidak berputar, Saya melakukan satu loop dari
          tindakan itu. Ini adalah sebuah loop. Ini adalah sebuah loop. Dan ini adalah
          sebuah loop.
      3:
        text: Hari ini kita akan mengadakan suatu pesta menari. Kami akan mengobrol
          dengan tarian loop baru. Iterasi itu. Kita akan belajar tentang loop menggunakan
          sebuah tarian. Anda akan belajar beberapa langkah mudah dan ulangi berulang-ulang
          untuk lengkapi tariannya.
      4:
        text: Langkah-langkah inilah yang perlu untuk anda pelajari. Tepuk tanganmu.
          Letakkan tangan Anda di belakang kepala Anda. Letakkan tangan Anda di pinggang
          Anda. Angkat tangan kiri ke atas. Angkat tangan kanan ke atas. Cukup sederhana
          kan? Anda akan mengetahui bahwa Anda dapat meringkaskan aturan tolakan arah
          dengan beberapa langkah menari dalam Loops.
      5:
        text: Kami benar-benar menggunakan loop dalam menari. Para penari mengenakan
          komputer, semua dalam jaringan yang sama. Aku mungkin loop lampu melalui
          yang sama penari lagi dan lagi. Dalam loop saya mungkin telah iterasi dimana
          aku akan mengatakan anda ingin pergi loop melalui enam penari lagi dan lagi
          dan kemudian dalam loop anda ingin meningkatkan kecepatan cahaya. Dan itu
          semua dibuat melalui loop. Loop yang penting dalam ilmu komputer karena
          mereka membuat kami bekerja lebih pendek dan lebih mudah.
    C1_happy_maps_unplugged:
      1:
        text: Pelajaran ini disebut Bahagia Maps. Hari ini kita akan membantu kita
          sedikit berbulu teman Flurb dapatkan untuk buah hatinya.
      2:
        text: Jadikan Flurb anda pergi ke buah anda. Untuk melakukan ini, anda perlu
          mencari tahu ke arah mana Flurb harus pergi dan mengarahkannya dengan panah-panah.
          Supaya Flurb bisa sampai ke apel, ke arah mana Flurb harus pergi? Deretkan
          Flurb untuk membuatnya naik.
      3:
        text: Untuk mendapatkan itu ada loop arah itu telah pergi.
      4:
        text: Buat algoritma dengan menempelkan panah di samping peta yang anda mencoba
          untuk memecahkan. Yang kedua itu sama tapi itu akan turun.
      5:
        text: Itu seperti pemrograman dengan kertas. Dan hanya itu!
    C1_maze_debugging:
      1:
        text: Debugging adalah menemukan dan memperbaiki masalah. Ada banyak cara
          untuk men-debug masalah. Salah satu cara termudah adalah untuk memindahkan
          langkah demi langkah sampai di mana anda menemukan di mana ada sesuatu yang
          tidak beres. Di sini saya mencoba untuk melakukan back handspring pada balok
          tapi aku terus jatuh.
      2:
        text: Aku berjalan melalui setiap bagian langkah demi langkah dan menyadari
          di mana kesalahan saya. Aku tidak bisa meletakkan tangan saya pada balok
          dengan benar. Jadi saya mencoba kembali lagi handspring pada balok dengan
          posisi tangan dan saya mendapatkannya. Aku benar-benar senang saya debug
          saya back handspring.
      3:
        text: Untuk belajar tentang debugging, kita mulai dengan satu set blok yang
          sudah di atas panggung. Anda akan melihat bahwa blok ini tidak akan mendapatkan
          anda ke tujuan. Kita perlu untuk men-debug solusi dan memperbaikinya. Apa
          yang salah? Anda akan melihat bahwa anda perlu untuk terus west satu blok
          lagi.
      4:
        text: Mari kita perbaiki hal ini dengan menambahkan blok barat dan memukul
          run untuk melihat apakah anda sudah benar. Yay, anda mendapatkannya!
    C1_maze_intro_sequencing:
      1:
        text: Untuk puzzle ini, anda perlu untuk mendapatkan burung ke babi. Melihat
          puzzle dan melihat apa arah itu perlu untuk mengambil.
      2:
        text: Anda perlu untuk menyeret blok dari toolbox ke ruang kerja. Pastikan
          itu di bawah "ketika menjalankan" blok dan ketika anda berpikir anda punya
          solusi yang tepat, maka anda dapat mengklik "Jalankan" dan menonton burung
          pergi ke babi.
    C1_maze_loops:
      1:
        text: Salah satu hal yang paling bagus pada komputer adalah mengulang banyak
          perintah. Sebagai seorang manusia, anda akan benar-benar bosan jika anda
          harus melakukan hal yang sama banyak dan sering kali berturut-turut. Tapi
          komputer bisa melakukan hal yang sama jutaan bahkan milyaran kali dan tidak
          bosan dan dapat melaksanakannya dengan sangat baik.
      2:
        text: Misalnya, jika saya ingin berharap semua orang di Facebook selamat ulang
          tahun dengan mengirimkan email kepada mereka, mungkin saya lebih dari abad
          untuk benar-benar menulis semua email-email ke semua orang. Tetapi dengan
          hanya beberapa baris kode, saya bisa memiliki sistem kirim email ke semua
          orang di Facebook ucapan selamat ulang tahun.
      3:
        text: Untuk mendapatkan burung ke babi di level ini... daripada menyeret tiga
          Utara blok ke tempat kerja, anda akan menggunakan tombol "ulangi" blok.
          Seret "ulangi" blok ke workspace dan masukkan nomor 3. Kemudian tarik "bergerak
          ke Utara" blok "ulangi" blok dan tekan "Jalankan" untuk melihat apakah anda
          sudah benar. Selamat, anda berhasil!
    C1_moveitmoveit_unplugged:
      1:
        text: Pelajaran ini disebut memindahkannya, memindahkannya. Bersama-sama kita
          akan menulis sebuah program untuk mendapatkan teman-teman kita dari awal
          dengan kompas naik ke wajah tersenyum gol.
      2:
        text: Tapi smiley face down dan hanya satu orang yang tahu bagaimana untuk
          sampai ke sana. Mari kita mendapatkan program ini dimulai.
      3:
        text: Sebuah program adalah sebuah algoritma yang telah diberi kode menjadi
          sesuatu yang bisa dijalankan oleh sebuah mesin. Kebanyakan dari kita menganggap
          sebuah program sebagai sesuatu yang kita tulis untuk sebuah komputer. Program-program
          benar-benar bagus untuk itu tapi juga bermanfaat di tempat-tempat lain.
          Anda dapat menciptakan permainan sendiri atau bahkan memprogram sebuah robot
          untuk melakukan banyak hal untuk anda.
    C1_going_places_safely:
      1:
        text: Nama saya Jeremiah. Hai! Saya berumur tujuh tahun. Saya suka bermain
          di komputer ibu saya tapi saya selalu mendapatkan izin terlebih dahulu.
          "Bu, bisakah saya mengunakan komputer? Tentu saja sayang!"
      2:
        text: Saya menyukai komputer ibu saya karena saya bisa mengakses internet.
          Internet seperti lingkungan anda. Anda dapat mengunjungi tempat-tempat yang
          keren, anda dapat berbicara dengan keluarga dan teman-teman dan anda bisa
          belajar banyak hal-hal baru.
      3:
        text: Kemarin, saya pergi ke kebun binatang yang berada di dekat rumah saya.
          Saya melihat seekor bayi zebra. Saya mengambil fotonya dan mengganti warna
          garis-garisnya, lalu menambahkan sebuah topi dan menambahkannya ke koleksi
          binatang aneh saya. Mengagumkan! Kemuidan, saya pergi ke tempat yang jauh
          sekali. Saya pergi ke Kenya. Itu merupakan sebuah negara di Afrika. Banyak
          sekali zebra yang tinggal di sana.
      4:
        text: Kadang-kadang di Internet saya berbicara dengan orang-orang yang saya
          kenal, seperti nenek saya yang tinggal di negara bagian lain. Hai nenek!
          Dia sedang membuatkan kue untuk saya kemudian dia akan mengirimkannya untuk
          ulang tahun saya. "Lezat, semoga internetnya berbau harum!" Saya bisa berbicara
          dengan orang-orang yang berbeda di Internet, seperti sepupu saya tapi saya
          hanya berbicara dengan orang yang saya kenal.
      5:
        text: Yang paling saya sukai di internet adalah saya dapat bermain game yang
          menyenangkan. Skor! Saya juga suka menggambar dan menciptakan hal-hal baru
          dan membagikannya dengan teman-teman saya. Keren! Kadang-kadang saya mengunjungi
          situs web dimana saya mempelajari hal-hal baru namun saya tetap berpegang
          pada situs-situs web yang tepat untuk saya. Wow, dinosaurus!
      6:
        text: 'Internet adalah sebuah tempat yang sangat menyenangkan. Tapi seperti
          ketika anda menyeberang jalan di lingkungan anda, anda juga mesti berhati-hati
          sedang online. Berikut ini adalah tiga aturan yang perlu diingat. Aturan
          nomor 1: Selalu tanyakan pada orang tua anda terlebih dahulu. Aturan nomor
          2: Hanya berbicara dengan orang yang anda kenal. Aturan nomor 3: Bertahan
          pada tempat-tempat yang tepat untuk anda.'
      7:
        text: Wow, itu menyenangkan! Waktunya makan malam. Saya keluar sekarang. Saya
          tidak sabar untuk masuk lagi untuk melihat kemana saya dapat berkunjung
          selanjutnya.
    C1_pair_programming:
      1:
        text: Hari ini kita akan belajar tentang Pemograman Berpasangan. Dalam pemrograman
          berpasangan anda bekerja sebagai tim. Mengapa harus dua orang menggunakan
          satu komputer? Karena dua kepala lebih baik dari satu. Dalam pemrograman
          berpasangan anda dan pasangan anda akan duduk bersama di satu komputer dan
          anda berdua akan mengerjakan proyek yang sama.
      2:
        text: Dalam pemrograman berpasangan, satu orang adalah supir dan orang lainnya
          adalah navigatornya, sama seperti mengendarai sebuah mobil. Pengemudi duduk
          di depan komputer dan menggunakan keyboard dan mouse atau layar sentuh dan
          mengendalikan tindakan utama komputer. Orang lain adalah navigator. Navigator
          membantu pengemudi dengan menjawab pertanyaan pengemudi dan menunjukkan
          masalah atau potensi kesalahan-kesalahan.
      3:
        text: Komunikasi adalah kunci kesuksesan dalam pemrograman berpasangan. Tidak
          ada hinaan, bersikap hormat, jangan menjadi navigator yang seperti bos,
          karena tidak ada yang menyukai dengan sopir yang berada belakang. Anda dan
          pasangan anda harus selalu berbicara. Sopir tersebut dapat menjelaskan apa
          yang sedang dia lakukan. Dan navigator dapat membantu menyarankan apa yang
          harus dilakukan berikutnya.
      4:
        text: Navigator harus memikirkan gambaran besar tersebut dan pengemudi memusatkan
          perhatian pada rinciannya. Kedua peran itu penting. Pemrograman berpasangan
          adalah tentang bekerja sama sebagai sebuah tim.
    C1_planting_seed:
      1:
        text: Pelajaran ini disebut menanam sebuah benih dan ini akan membantu kita
          memahami tentang algoritma. Algoritma adalah instruksi khusus yang menjelaskan
          urutan tindakan. Bahkan kegiatan sehari-hari seperti makan, sarapan, atau
          menyikat gigi adalah algoritma yang membutuhkan langkah kecil untuk menyelesaikan
          sebuah pekerjaan.
      2:
        text: Komputer-komputer bisa sangat cerdas tapi komputer hanya bisa mengerti
          anda jika anda memberi tahu mereka apa yang anda inginkan selangkah demi
          selangkah. Hal yang hebat tentang algoritma adalah jika anda mengikuti petunjuk
          secara tertib, anda dapat melakukan sesuatu yang tidak anda ketahui sebelumnya.
          Ini seperti mengikuti sebuah resep.
      3:
        text: Hari ini kita akan menanam benih kita sendiri dengan menggunakan algoritma.
          Ciptakan algoritma anda sendiri dengan memotong gambarnya. Pilih gambar-gambar
          yang menunjukkan langkah-langkah menanam sebuah bibit dan mengatur gambar-gambar
          itu dalam urutan yang benar.
      4:
        text: Sekarang, waktunya bagi anda untuk melihat apakah algoritma anda berfungsi.
          Ikuti langkah-langkahnya dalam algoritma dengan sangat seksama. Apakah mereka
          dalam urutan yang benar? Apakah anda berhasil menanam sebuah benih dengan
          mengikuti algoritma tersebut? Ini seperti pemrograman dengan gambar-gambar!
      5:
        text: Ketika kita mau membuat coklat, ada banyak langkah besar untuk proses
          tersebut dan setiap langkah besar tersebut memiliki seperangkat langkah
          yang lebih kecil dan ada beberapa resep atau algoritma yang berbeda tergantung
          pada bagaimana kita ingin merasakan coklat. Setiap langkah itu penting,
          bahkan langkah kecil sekalipun, sehingga tanpa satu langkah pun, selebihnya
          tidak bisa diselesaikan. Membuat algoritma yang bisa dimengerti oleh orang
          lain sangat penting. Itulah sebabnya setiap langkah harus dituliskan sehingga
          tidak jadi masalah siapa yang mengerjakannya, hasilnya tetap sama saja.
    C1_playlab_storytelling:
      1:
        text: Waktunya untuk berkreasi dan menggunakan kemampuan anda bersandi untuk
          menceritakan sebuah cerita. Cerita anda akan memiliki aktor-aktor dan anda
          akan dapat membuat aktor-aktor ini berbicara dan berinteraksi satu sama
          lain. Mulailah memikirkan jenis cerita yang ingin anda ceritakan.
      2:
        text: Kucing itu selalu takut pada anjing tersebut dan bagaimana jika kucing
          mengetahui bahwa anjing itu mencoba bersikap baik? Blok "kapan lari" memulai
          segalanya. Blok "pindah" akan memindahkan karakter anda dan blok "katakan"
          akan membuat karakter anda mengatakan apapun yang anda ketik.
      3:
        text: Ini adalah "saat para pemain menabrak" blok yang dapat anda tautkan
          ke blok-blok lainnya.
      4:
        text: Saya membuat anjing tersebut datang dan berkata "Hai" tapi kemudian
          kucing itu merasa ketakutan sehingga kucing tersebut lari. "Ahh" Jika ada
          lebih banyak waktu, ini akan menjadi akhir yang membahagiakan. Tamat!
    C1_spelling_bee_intro:
      1:
        text: Ini merupakan tingkat ejaan lebah. Gunakan potongan-potongan puzzle
          untuk memindahkan lebah. Saat bergerak, potongan puzzle itu akan mengumpulkan
          huruf-huruf untuk mengeja kata-kata.
      2:
        text: Lihat jika anda bisa mengeja kata-kata mereka memberi anda dalam kotak
          di bawah panggung. Tapi bee-hati! Bergerak ke arah yang salah akan menambah
          huruf yang tidak anda inginkan.
    C1_zuck_repeat_loop:
      1:
        text: Salah satu hal yang paling bagus pada komputer adalah mengulang banyak
          perintah. Sebagai seorang manusia, anda akan benar-benar bosan jika anda
          harus melakukan hal yang sama banyak dan sering kali berturut-turut. Tapi
          komputer bisa melakukan hal yang sama jutaan bahkan milyaran kali dan tidak
          bosan dan dapat melaksanakannya dengan sangat baik.
      2:
        text: Misalnya, jika saya ingin berharap semua orang di Facebook selamat ulang
          tahun dengan mengirimkan email kepada mereka, mungkin saya lebih dari abad
          untuk benar-benar menulis semua email-email ke semua orang. Tetapi dengan
          hanya beberapa baris kode, saya bisa memiliki sistem kirim email ke semua
          orang di Facebook ucapan selamat ulang tahun.
      3:
        text: Pada contoh ini, tujuan anda adalah memindahkan burung itu untuk mendapatkan
          babi tersebut. Sekarang, kita akan dapat menggunakan rintangan yang berulang
          agar bisa mengerjakan ini dengan sangat mudah. Anda dapat mengerjakan ini
          dengan memberi perintah kepada komputer untuk maju lima kali untuk memajukan
          burung satu langkah setiap kali ke babi atau anda bisa memerintahkan komputer
          untuk maju satu kali, dan kemudian mengatakannya untuk mengulanginya sebanyak
          lima kali dan komputer akan melakukan hal yang sama.
      4:
        text: Untuk mengerjakan ini, anda menarik perintah maju anda dan kemudian
          memasukkannya ke dalam blok berulang. Dan anda bisa mengkliknya dan memberitahukannya
          berapa kali anda mengulang blok tersebut untuk memberitahukannya berapa
          banyak langkah yang anda inginkan untuk membawa ke depan.
      5:
        text: Satu hal lagi adalah anda dapat menempatkan perintah sebanyak yang anda
          inginkan dalam mengulang blok. Jadi dalam contoh ini, anda mengatakan itu
          untuk bergerak maju dan belok kiri, yang akan melakukan lima kali. Bersenang-senang!
    C2_artist_intro:
      1:
        text: Anda bahkan tidak layak untuk ikut balapan jika tidak memiliki kru yang
          mahir dalam ilmu komputer saking banyaknya data yang dikumpulkan oleh mobil
          dan keharusan memiliki kru yang bisa menulis program untuk memprediksi langkah
          selanjutnya terkait cara memperbaiki kinerja.
      2:
        text: Dalam puzzle ini, anda akan menjadi seorang seniman yang menggunakan
          pensil untuk menggambar bentuk yang berbeda. Kemanapun seniman anda pergi,
          pencil akan menarik garis di belakang Anda.
      3:
        text: Untuk bergerak sekitar kanvas, anda akan menggunakan blok maju. Di sini
          blok bergerak maju memerintahkan bergerak maju 100 piksel. Saat kita memukul
          lari, apa yang terjadi? Para artis bergerak maju dalam jumlah tertentu dan
          jumlahnya 100 piksel. Pixel pada dasarnya merupakan kotak yang sangat kecil
          di layar komputer anda.
      4:
        text: Blok yang lain yang kita punya dalam puzzle ini memerintahkan belok
          kanan 90 derajat. Dan saat kita seret itu keluar membuat seniman kita membalikkan
          jumlah tertentu. Jadi anda bisa bermain-main dengan seberapa jauh anda ingin
          seniman itu berputar. Ini adalah putaran 90 derajat.
      5:
        text: Dan ini adalah belokan 120 derajat. Ingat, Anda dapat mengubah nilai-nilai
          ini dengan mengklik tanda panah di samping angka untuk piksel dan derajat.
          Nikmati menggambar dengan artis Anda!
    C2_bee_conditionals:
      1:
        text: Ini adalah blok conditional. Blok mengatakan JIKA ada nektar atau madu
          kurang dari, sama dengan, atau lebih dari suatu angka, MAKA lakukan sesuatu.
      2:
        text: Ini jelas membantu ketika kita tidak tahu berapa banyak nektar atau
          madu yang harus diambil karena di sini kita hanya melihat tanda tanya.
      3:
        text: Dalam contoh ini, kita akan mengatakan JIKA bunga ungu memiliki nektar
          lebih dari 0, ambil nektar. Itu akan memerintahkan lebah untuk terus mengambil
          nektar sepanjang masih ada. Tet tot!
    C2_binary_bracelets:
      1:
        text: Ini adalah pelajaran gelang binary. Kita akan mengcode inisial nama
          kita di gelang yang dapat kita pakai dan tunjukkan ke semua teman!
      2:
        text: Berpasangan merupakan cara untuk menunjukkan informasi dengan hanya
          menggunakan dua pilihan. Terkadang orang-orang menganggap ini hanya 1s dan
          0s. Tapi anda bisa menunjukkan berpasangan dengan kombinasi on atau off,
          naik turun, masuk dan keluar atau benar-benar ada yang berlawanan.
      3:
        text: Hai, saya Orion dan saya memprogram robot-robot disini di Play-im. Semua
          otak komputer dan otak robot pada tingkat yang paling mendasar merupakan
          gerbang-gerbang elektronik kecil. Waktu pintu gerbang terbuka, listrik bisa
          mengalir dan saat sudah tertutup, listrik tidak bisa mengalir lagi.
      4:
        text: Sebuah contoh biner pada robot adalah kedua mata robot. Mata robot adalah
          LED dan itu merupakan lampu yang menyala atau mati. Ini merupakan sistem
          biner, satu atau lain. Kita bisa menggunakan lampu untuk mewakili bilangan
          biner. Jika kita memiliki satu set robot, kita bisa mengatakan bahwa robot
          pertama adalah tempat 1s dan robot kedua adalah tempat 2s, robot ketiga
          adalah tempat 4s dan seterusnya. Begitulah cara anda mewakili bilangan biner.
          Robot akan melakukannya dengan mata biner mereka dan menghitungnya untuk
          anda.
    C2_conditionals_with_cards:
      1:
        text: Pelajaran ini disebut conditional dengan kartu. Setiap hari Anda mengambil
          keputusan berdasarkan apa yang Anda lihat dan dengar.
      2:
        text: Saya ingin berjalan ke taman tapi pertama-tama saya harus memutuskan
          apakah saya harus membawa payung atau tidak. Jadi saya melihat ke luar jendela.
          Jika mendung, saya akan mengambil payung saya. Kalau tidak, saya akan mengambil
          beberapa kacamata hitam. saya rasa sebaiknya saya mengambil payung tersebut.
          Apa yang saya lihat dan saya dengan dengar menentukan apa yang saya bawa
          ke taman.
      3:
        text: Kodisional digunakan juga dalam permainan-permainan. Hari ini kita akan
          berlatih menggunakan kondisional dengan permainan kartu. Dalam permainan
          ini, kartu yang saya ambil menentukan apa yang akan teman-teman saya lakukan.
          Jika saya ambil tujuh, setiap orang bertepuk tangan. Selain itu, semua orang
          mengatakan "awww." Ayo coba! "Awww" "sorak sorai"
      4:
        text: Saya yakin anda dapat menciptakan permainan-permainan yang bahkan lebih
          menyenangkan dengan kondisional. Cobalah! Kondisional ini yang membuat komputer-komputer
          terlihat pintar. Sebuah program komputer yang mencakup kondisional dapat
          bereaksi terhadap pengguna dan mengubah arah tindakannya.
      5:
        text: Pikirkan tentang video game favorit anda. Apakah anda mendapatkan lebih
          banyak poin untuk beberapa aksi dibandingkan dengan yang anda lakukan untuk
          orang lain? Hal ini terjadi karena komputer memakai kondisional. Begitulah
          komputer membuat keputusan. Bagaimana kalau, jika anda mencapai target,
          anda memperoleh sepuluh poin. Sebaliknya, anda kalah tiga. Bila anda mengetahui
          bagaimana kondisional berfungsi, anda dapat menciptakan segala macam permainan
          yang seru.
    C2_artist_debugging:
      1:
        text: Di sini kita sudah memiliki beberapa blok di ruang kerja. Namun rupanya
          ada yang salah.
      2:
        text: Ayo debug code ini dengan memperlambat kecepatan dan menontonnya menyusuri
          setiap blok langkah demi langkah.
      3:
        text: Oh, ada masalah! Kumis kucing panjangnya 75 piksel, bukan 25.
    C2_bee_debugging:
      1:
        text: Pernahkah Anda mendengar debugging sebuah program? Inilah cara mencari
          sesuatu yang tidak bekerja semestinya. Ketika mendebug code, Anda mengidentifikasi
          dan menghilangkan kesalahan.
      2:
        text: Di sini sudah tersedia beberapa blok di ruang kerja kita. Kita akan
          menggunakan tombol langkah untuk menyusuri blok, langkah demi langkah, untuk
          mengetahui apakah solusi ini sudah tepat dan adakah lokasi yang mungkin
          perlu diperbaiki.
      3:
        text: Sepertinya di sini masalah kita! Kita perlu satu lagi blok maju selangkah.
          Tombol langkah membantu kita mendebug masalah dengan mengidentifikasi letak
          kesalahan agar kita dapat memperbaikinya.
    C2_digital_footprint:
      1:
        text: Anda pegang topi di kepala, akal itulah yang membawa Anda ke tempat
          mulia, dan jika ingat taman satwa, anggukan dan sapaan ramah ke Anda! Pakai
          otak saat online, agar rahasia tetap terjamin, dan mau tahu caranya aman,
          sisakan cukup ruang batin! Dari kepala turun ke kaki, tarik napas, pikirkan
          itu berkali-kali. Dari kaki naik ke hidung, tarik napas, pikirkan itu dalam-dalam!
      2:
        text: Gunakan hati anda untuk tumbuh dan tumbuh, dan untuk memberikan anda
          cahaya yang sehat, dan untuk memberi sebuah valentin, beritahu seseorang
          bahwa kamu akan menjadi milik saya! Gunakan hati anda saat anda sedang online,
          rasakan apa yang benar dan selalu baik, dan tunjukkan rasa hormat teman-teman
          anda, bersikap adil dan baik di Internet. Dari kepala anda sampai ke jari
          kaki, jeda, pikirkanlah. Dari kaki sampai ke hidung anda, jeda dan pikirkan
          secara online!
      3:
        text: Gunakan tangan anda untuk memeluk hewan peliharaan anda, agar pakaian
          anda tidak basah, dan kenakan lengan favorit anda dan untuk membantu anda
          terbang dan berfantasi. Gunakan tangan anda saat anda online, untuk beristirahat
          dan menyeimbangkan waktu dan membiarkan teknologi anda tertinggal dan untuk
          menemukan sendiri sebatang pohon untuk dipanjat. Dari kepala sampai ke jari
          kaki, jeda, pikirkanlah. Dari kaki anda ke hidung anda, jeda dan pikirkan
          secara online!
      4:
        text: Gunakan usus anda untuk menyimpan makanan anda, dan untuk medengarkan
          keadaannya yang menggeram, untuk membuat sebuah perut kembung, dan untuk
          merasakan gas didalam limun. Gunakan usus anda saat anda sedang online,
          untuk mengetahui dan untuk melihat tanda-tanda tertentu, dan membiarkannya
          membimbing jalan dan memberi tahu anda saat dia tidak baik. Dari kepala
          sampai ke jari kaki anda, jeda, pikirkanlah. Dari kaki sampai ke hidung
          anda, jeda dan pikirkan secara online!
      5:
        text: Jadi pikirkan dengan kepala anda, dan rasakan dengan hati anda, seimbangkan
          dengan lengan anda, dengarkan usus anda, secara online. Gunakan kaki anda
          untuk berlari dan menendang, dan melompat dan bangkit dengan stik pogo,
          dan berdansa di sekitar blok, dan mengabaikan kaus kaki bau anda. Gunakan
          kaki anda saat anda sedang online, berdiri melawan pengganggu yang melewati
          batas, dan ingatlah untuk berdiri tegak, bersikap baik terhadap makhluk-makhluk
          besar dan kecil.
      6:
        text: Dari kepala turun ke kaki, tarik napas, pikirkan itu berkali-kali. Dari
          kaki naik ke hidung, tarik napas, pikirkan itu dalam-dalam! Jadi, pikirkan
          dengan akal, rasakan dengan hati, seimbangkan dengan lengan, dengarkan dengan
          batin, berdirilah dengan kaki. Dari kepala turun ke kaki, tarik napas, pikirkan
          itu berkali-kali. Dari kaki naik ke hidung, tarik napas, pikirkan itu dalam-dalam!
    C2_digital_footprint_v2:
      1:
        text: Setiap kali online, Anda meninggalkan jejak yang dapat dicari, disalin,
          dibagikan, disiarkan, dan bersifat permanen. Apa jenis jejak digital yang
          Anda tinggalkan? Apa jenis jejak digital yang ingin Anda tinggalkan?
    C2_graph_paper:
      1:
        text: Pelajaran ini disebut "Pemrograman Kertas Grafis" dan semua isinya berupa
          algorithm. Hari ini kita akan mempelajari cara menulis program yang dapat
          memperlihatkan kalian semua cara membuat ulang gambar hitam-putih sederhana
          hanya menggunakan panah hasil goresan tangan.
      2:
        text: Algorithm adalah serangkaian instruksi untuk menyelesaikan tugas. Kita
          akan mengikuti kumpulan instruksi ini untuk membuat mangkuk. Algorithm benar-benar
          berguna ketika Anda menginginkan orang lain memahami cara melakukan sesuatu.
      3:
        text: Jika Anda menulis algorithm untuk komputer, Anda harus memecahnya menjadi
          langkah-langkah yang sangat terperinci. Jadi, selesaikan baris ini dan lanjut
          ke berikutnya, lalu berikutnya lagi, barulah pekerjaan Anda akan selesai.
      4:
        text: Saya menggunakan algoritma dalam pekerjaan saya. Jika saya menuliskan
          semua langkah, saya dapat menciptakan kembali bagian yang sama lagi, atau
          saya dapat mengajari orang lain untuk melakukannya. Letakkan gelas tersebut
          di tempat pembakaran, sikat bersama-sama, ikuti sisa instruksi untuk membuat
          mangkuk. Algoritma-algoritma memberikan anda peta jalan untuk mendapatkan
          sesuatu.
    C2_artist_loops:
      1:
        text: Di sini kita akan menggunakan blok repeat untuk membantu menyimpan langkah-langkah
          saat kita memprogram artis. Kita sudah memiliki blok yang siap di panggung,
          tetapi keberadaannya hanya untuk membantu kita mulai.
      2:
        text: Untuk membuat loop blok-blok tersebut empat kali agar dapat menggambar
          persegi empat secara utuh, kita cukup menyeret blok repeat dan meletakkan
          blok moveforward dan blok belok kanan di dalam blok repeat. Ketika kita
          menekan run, artis akan mengulang langkah tersebut empat kali untuk menyelesaikan
          persegi empat.
    C2_bee_loops:
      1:
        text: Sebuah loop adalah pengulangan aktivitas. Jadi akan menjadi sarang untuk
          memeriksa, saya melihat sebuah frame dan kemudian saya meletakkannya kembali,
          jadi saya ulangi bahwa aktivitas yang sama beberapa kali. Ini perulangan
          sekitar, melakukan kegiatan yang sama beberapa kali.
      2:
        text: Ini adalah blok repeat. Apa pun yang Anda masukkan, blok repeat  akan
          mengulang tindakan tersebut berapa kali sesuai perintah Anda. Misalnya,
          di level ini, alih-alih menyeret move forward dan mendapatkan nektar tiga
          kali, kita hanya perlu menyeretnya satu kali dan mengulang tindakan itu
          tiga kali. Mudah sekali!
    C2_maze_intro:
      1:
        text: Biasanya, semua pemrograman berupa teks, tetapi kita akan menggunakan
          Blockly yang memakai blok visual yang bisa Anda drag dan drop untuk menulis
          program. Di balik layar, Anda masih tetap membuat code. Sebagai awal, kita
          akan membuat code untuk sebuah program yang akan membantu Angry Bird ini
          melintasi labirin agar sampai ke babi jahat yang mencuri telur-telurnya.
      2:
        text: Blockly terdiri dari tiga bagian utama. Di sisi kiri adalah labirin
          burung, tempat berjalannya program Anda. Instruksi untuk setiap level ditulis
          di bawah labirin. Area tengah ini adalah toolbox dan setiap blok ini adalah
          perintah yang dapat dimengerti oleh burung. Ruang putih di sisi kanan disebut
          ruang kerja yang menjadi tempat kita membuat program.
      3:
        text: Jika saya menarik blok move ke ruang kerja dan menekan "Jalankan", apa
          yang terjadi? Burung bergerak maju satu kotak di kisi-kisi. Dan bagaimana
          kalau saya ingin burungnya melakukan sesuatu setelah bergerak maju satu
          kotak? Saya bisa menambahkan blok lain ke program.
      4:
        text: Saya akan memilih blok "turn right", dan menariknya ke bawah blok move
          hingga muncul panah kuning. Lalu saya akan melepasnya dan kedua blok akan
          saling menempel. Ketika saya menekan "Jalankan" lagi, burung akan melakukan
          perintah yang ditumpuk dari atas ke bawah di ruang kerja kita.
      5:
        text: Jika Anda ingin menghapus blok, cukup hapus dari tumpukan dan tarik
          ke keranjang sampah. Setelah menekan "run", Anda selalu dapat menekan tombol
          atur ulang untuk mengembalikan burung ke titik awal. Ayo tangkap babi-babi
          itu!
    C2_paper_airplanes:
      1:
        text: Pelajaran ini disebut Algorithm Kehidupan Nyata. Algorithm mendeskripsikan
          hal-hal yang dilakukan manusia sehari-hari. Resep cookie dan arahan untuk
          membuat sangkar burung adalah algorithm sehari-hari.
      2:
        text: Hari ini kita akan membuat, menyusun, dan menguji algorithm untuk pesawat
          kertas. Namun mula-mula, kita perlu membagi proyek besar ini menjadi langkah-langkah
          kecil yang mudah diikuti. Untuk membuat pesawat kertas, kita perlu memutuskan
          langkah yang harus diambil dan dengan urutan apa.
      3:
        text: Anda akan membuat algorithm dengan mula-mula memotong gambar. Berikutnya,
          Anda harus memilih 6 gambar yang menunjukkan langkah-langkah yang diperlukan
          untuk membuat pesawat kertas dan menyusun gambar tersebut dengan urutan
          yang benar. Setelah semuanya beres, Anda akan bertukar algorithm dengan
          tim murid lain untuk menguji apakah algorithm berhasil. Desain algorithm
          yang bagus itu sangat penting untuk membuat pesawat kertas yang terbaik.
      4:
        text: Ketika kami ingin membuat coklat, ada banyak langkah besar menuju proses
          itu. Dan masing-masing langkah besar itu memiliki ukuran langkah yang lebih
          kecil. Dan ada resep yang berbeda, atau algoritma, tergantung bagaimana
          kita menginginkan coklat secukupnya. Setiap langkah penting, bahkan yang
          kecil sekalipun. Jadi tanpa satu langkah pun, selebihnya tidak bisa selesai.
          Membuat algoritma yang bisa dimengerti orang lain sangat penting. Itulah
          sebabnya setiap langkah harus dituliskan, jadi tidak masalah siapa yang
          melakukannya, hasilnya tetap sama saja.
    C2_playlab_createstory:
      1:
        text: Sejauh ini Anda telah membuat animasi atau cerita yang melakukan hal
          yang sama setiap kali Anda menjalankan. Sekarang Anda dapat membuat permainan
          interaktif yang dapat benar-benar bermain.
      2:
        text: Ada blok "when arrow" / "ketika panah"  dan blok "move actor" / "bergerak
          aktor". Anda dapat menempatkan blok ini bersama-sama untuk menggerakan aktor
          dengan tombol panah.
    C2_relay_programming:
      1:
        text: Hari ini kita akan melakukan pemrograman relai. Ini adalah pemrograman
          di bawah tekanan dan debugging kesalahan yang sesekali muncul ketika Anda
          bekerja sangat cepat atau dalam tim. Kita akan menggunakan pemrograman kertas
          grafis untuk membuat simulasi coding, dan menggunakan balapan relai untuk
          membuat simulasi adanya tenggat.
      2:
        text: Dalam pemrograman relai, tim murid akan berpacu menyelesaikan program
          kertas grafis. Anda harus memeriksa hasil kerja rekan tim, atau mendebugnya,
          memperbaikinya jika ada kesalahan, menambahkan panah, dan menjalankan ulang
          dan memberi tag rekan tim Anda.
      3:
        text: Pemrogram sering menggunakan debugging untuk mencari dan memperbaiki
          masalah dalam algorithm atau code. Ada banyak cara mendebug masalah. Salah
          satu cara termudah adalah bergerak langkah demi langkah sampai Anda menemukan
          lokasi masalah, lalu memperbaikinya.
      4:
        text: Di sini, saya mencoba memegang kembali, tapi saya terus terjatuh. Saya
          melalui setiap bagian, selangkah demi selangkah, dan menyadari di mana letak
          kesalahan saya. Pelatih saya menunjukkan bahwa saya tidak meletakkan tangan
          saya di balok dengan benar. Jadi saya mencoba lagi pegangan belakang di
          balok dengan posisi tangan baru saya, dan saya terjebak! Saya benar-benar
          senang, saya dapat bersalto. Kami tahu itu! Penelusuran adalah menemukan
          dan memperbaiki masalah. Bagus, kerjaan yang bagus!
    C2_zuck_repeat_loop:
      1:
        text: Salah satu hal yang paling bagus pada komputer adalah mengulang banyak
          perintah. Sebagai seorang manusia, anda akan benar-benar bosan jika anda
          harus melakukan hal yang sama banyak dan sering kali berturut-turut. Tapi
          komputer bisa melakukan hal yang sama jutaan bahkan milyaran kali dan tidak
          bosan dan dapat melaksanakannya dengan sangat baik.
      2:
        text: Jadi misalnya jika saya ingin mengucapkan semua orang di Facebook ucapan
          selamat ulang tahun dengan mengirimkan email kepada mereka, mungkin perlu
          waktu lebih dari satu abad untuk benar-benar menuliskan semua email itu
          kepada semua orang. Tapi dengan hanya beberapa baris kode, saya dapat meminta
          sebuah sistem mengirim email ke semua orang di Facebook untuk mengucapkan
          selamat ulang tahun kepada mereka. Jadi itulah caranya, dan mengapa itu
          berharga, dan sesuatu yang dapat dilakukan dengan baik oleh komputer.
      3:
        text: Pada contoh ini, tujuan Anda adalah memindahkan burung untuk mendapatkan
          babi. Sekarang, kita akan dapat menggunakan blok "repeat" agar bisa mengerjakan
          ini dengan sangat mudah. Anda dapat mengerjakan ini dengan memberi perintah
          "move forward" ke komputer lima kali untuk membuat burung maju selangkah
          setiap kali ke babi.
      4:
        text: Atau anda dapat memberitahukan komputer untuk "maju terus" sekali, lalu
          katakan "ulangi" sebanyak 5 kali, dan itu akan melakukan hal yang sama.
          Jadi, untuk melakukan ini, anda menyeret perintah "bergerak maju" anda,
          lalu anda memasukkannya ke dalam blok "ulangi". Dan anda dapat mengkliknya
          dan memberitahukannya berapa kali anda ingin mengulang blok tersebut untuk
          memberitahukannya berapa banyak langkah yang anda inginkan untuk terus maju.
      5:
        text: Satu hal lagi adalah Anda dapat memberi perintah sebanyak keinginan
          Anda ke dalam blok "repeat". Jadi dalam contoh ini, Anda memberi tahu blok
          untuk bergerak maju dan belok kiri, yang akan dilakukannya lima kali. Baiklah,
          silakan bersenang-senang!
    C3_artist_functions:
      1:
        text: Salah satu hal yang hebat dalam pemrograman komputer adalah saat anda
          sudah mengajarkan komputer bagaimana melakukan suatu tindakan, anda dapat
          memanggil fungsi itu lagi. Anda memberinya nama dan kemudian anda dapat
          memanggilnya. Itu benar-benar seperti memperluas bahasa.
      2:
        text: Dalam program yang kami buat, kami mempelajari cara menggambar persegi
          dengan bergerak dan berputar empat kali. Kami dapat mengambil fungsi itu
          dan memberinya sebuah nama, menggambar persegi, sehingga setiap saat kami
          ingin melakukannya, kami cukup mengatakan menggambar persegi dan itu akan
          kembali dan memanggil fungsi itu, kode itu. Itu akan berhasil untuk kami.
          Kami telah menambahkan konsep itu ke bahasa pemrograman kami.
    C3_artist_intro:
      1:
        text: Anda bahkan tidak layak untuk ikut balapan jika tidak memiliki kru yang
          mahir dalam ilmu komputer saking banyaknya data yang dikumpulkan oleh mobil
          dan keharusan memiliki kru yang bisa menulis program untuk memprediksi langkah
          selanjutnya terkait cara memperbaiki kinerja.
      2:
        text: Dalam puzzle ini, anda akan menjadi seorang seniman yang menggunakan
          pensil untuk menggambar bentuk yang berbeda. Kemanapun seniman anda pergi,
          pencil akan menarik garis di belakang Anda.
      3:
        text: Untuk bergerak sekitar kanvas, anda akan menggunakan blok maju. Di sini
          blok bergerak maju memerintahkan bergerak maju 100 piksel. Saat kita memukul
          lari, apa yang terjadi? Para artis bergerak maju dalam jumlah tertentu dan
          jumlahnya 100 piksel. Pixel pada dasarnya merupakan kotak yang sangat kecil
          di layar komputer anda.
      4:
        text: Blok yang lain yang kita punya dalam puzzle ini memerintahkan belok
          kanan 90 derajat. Dan saat kita seret itu keluar membuat seniman kita membalikkan
          jumlah tertentu. Jadi anda bisa bermain-main dengan seberapa jauh anda ingin
          seniman itu berputar. Ini adalah putaran 90 derajat.
      5:
        text: Dan ini adalah belokan 120 derajat. Ingat, Anda dapat mengubah nilai-nilai
          ini dengan mengklik tanda panah di samping angka untuk piksel dan derajat.
          Nikmati menggambar dengan artis Anda!
    C3_artist_nested_loops:
      1:
        text: Ketika Anda meletakkan loop ke dalam loop lain, kami menyebutnya nested
          loop. Misalnya, di sini kita sudah mendapatkan code untuk menggambar satu
          segitiga dengan panjang sisi 100 piksel menggunakan blok "repeat times"
          yang diatur ke tiga, satu kali untuk setiap sisi segitiga.
      2:
        text: Namun kita ingin menggambar enam segitiga. Untuk melakukan itu, kita
          akan menggunakan loop tersebut dan meletakkannya ke dalam blok "repeat times"
          yang lain. Keren banget!
    C3_bee_conditionals:
      1:
        text: Ini adalah blok conditional. Blok mengatakan JIKA ada nektar atau madu
          kurang dari, sama dengan, atau lebih dari suatu angka, MAKA lakukan sesuatu.
      2:
        text: Ini jelas membantu ketika kita tidak tahu berapa banyak nektar atau
          madu yang harus diambil karena di sini kita hanya melihat tanda tanya.
      3:
        text: Dalam contoh ini, kita akan mengatakan JIKA bunga ungu memiliki nektar
          lebih dari 0, ambil nektar. Itu akan memerintahkan lebah untuk terus mengambil
          nektar sepanjang masih ada. Tet tot!
    C3_bee_debugging:
      1:
        text: Pernahkah Anda mendengar debugging sebuah program? Inilah cara mencari
          sesuatu yang tidak bekerja semestinya. Ketika mendebug code, Anda mengidentifikasi
          dan menghilangkan kesalahan.
      2:
        text: Di sini sudah tersedia beberapa blok di ruang kerja kita. Kita akan
          menggunakan tombol langkah untuk menyusuri blok, langkah demi langkah, untuk
          mengetahui apakah solusi ini sudah tepat dan adakah lokasi yang mungkin
          perlu diperbaiki.
      3:
        text: Sepertinya di sini masalah kita! Kita perlu satu lagi blok maju selangkah.
          Tombol langkah membantu kita mendebug masalah dengan mengidentifikasi letak
          kesalahan agar kita dapat memperbaikinya.
    C3_bee_functions:
      1:
        text: Salah satu konsep terpenting dalam ilmu komputer adalah bagaimana mendefinisikan
          perintah-perintah baru, bagaimana menambahkan kata-kata anda sendiri ke
          bahasa sebuah komputer. Sebagian besar bahasa-bahasa komputer hanya memiliki
          sekitar seratus kata atau perintah. Seni dan sihir ada dalam mendefinisikan
          kata-kata baru anda sendiri dari blok-blok bangunan ini.
      2:
        text: Kami mengerjakan ini sepanjang waktu dalam olahraga-olahraga. Misalnya,
          di bola basket, anda mulai dengan belajar menggiring bola, bagaimana melakukan
          lay-up, cara rebound. Begitu anda telah mempelajari gerakan-gerakan dasar
          ini, anda akan belajar langkah-langkah baru dan mengumpulkan blok bangunan
          ini, seperti memilih and menggulung atau memberi dan pergi. Anda kemudian
          dapat pergi dari sana untuk melakukan drama yang lebih kompleks. Begitu
          anda belajar bermain itu dan memberinya nama, semua orang di tim mengetahui
          bagaimana cara melakukannya.
      3:
        text: Sama halnya saat anda telah memerintakan komputer bagaimana melakukan
          suatu tindakan setelah menggunakan urutan perintah ini, anda dapat membuat
          nama anda sendiri untuk tindakan itu sehingga mudah untuk mengulanginya
          nanti. Bila anda mendefinisikan perintah anda sendiri dan memberinya sebuah
          nama, itu disebut sebuah fungsi. Sekarang kita akan menggunakan fungsi-fungsi
          tersebut untuk membantu lebah.
      4:
        text: Dalam contoh ini, fungsi kami disebut dapatkan 2 nektar, blok hijau
          ada disini. Kami tahu apa yang dapat 2 nektar lakukan dengan melihat kotak
          abu-abu ini yang merupakan definisi fungsi. Jika kami melihat ke dalam sana,
          dapatkan 2 nektar akan mendapatkan nektar dan kemudian nektar lagi. Selalu
          lihat apa yang ada di dalam kotak abu-abu sehingga anda mengetahui apa yang
          dapat dilakukan oleh blok fungsi yang berwarna hijau ini.
    C3_bee_nested_loops:
      1:
        text: Sekarang kita akan menggunakan nested loop dengan lebah. Kita sudah
          mendapatkan code pemula yang memberi tahu lebah untuk bergerak maju dan
          mengambil nektar tiga kali lalu belok kanan. Ayo ambil semua potong code
          itu, sarangkan ke dalam blok repeat yang lain, dan atur agar mengulang tiga
          kali. Selesai!
    C3_bounce:
      1:
        text: Anda akan membuat bounce game sendiri yang dapat dibagikan ke teman-teman!
          Betapa kerennya!
      2:
        text: Untuk memulainya, kita harus menghubungkan kontrol dayung ke tombol
          panah di keyboard.
      3:
        text: Kita bisa melakukannya dengan menghubungkan blok "when left arrow" ke
          blok "move left" dan blok "when right arrow" ke blok "move right". Coba
          saja, maka Anda akan langsung memprogram bounce game sendiri!
    C3_computational_thinking:
      1:
        text: Pelajaran ini merupakan pemikiran komputasi. Terkadang belajar permainan
          baru mungkin sulit, bukan? Awalnya mungkin sangat membingungkan dan terkadang,
          tidak ada orang di sana yang dapat mengajarkan peraturan kepada anda, jadi
          anda harus mengetahuinya sendiri.
      2:
        text: Kabar baiknya adalah anda dapat menjadi lebih baik dalam memikirkan
          semuanya sendiri saat anda mengetahui beberapa trik berpikir. Trik ini adalah
          cara unik untuk melihat dan memecahkan masalah-masalah. Dalam pelajaran
          ini, anda akan belajar tentang empat trik dan mempraktikkannya dengan teman-teman
          anda untuk mengetahui peraturan-peraturan terhadap sebuah permainan.
      3:
        text: Saat anda memecahkan seuah masalah besar menjadi potongan-potongan yang
          lebih kecil, anda menggunakan otak anda untuk menguraikan masalah besar
          tersebut. Setelah kami menghancurkan masalah besar tersebut menjadi beberapa
          masalah yang lebih kecil, kami dapat melanjutkan ke trik berikutnya, yang
          disebut permainan pola.
      4:
        text: Itulah ketika kita mencari kemiripan benda-benda. Setelah menemukan
          benda-benda yang sama, saya dapat menebak benda-benda yang berbeda. Ketika
          saya menghilangkan perbedaan itu, itulah yang disebut abstraksi.
      5:
        text: Setelah menebak langkah-langkah pemecahan masalah, saya dapat meletakkan
          langkah tersebut dalam urutan tertentu yang disebut algorithm sehingga siapa
          pun dapat menggunakan petunjuk saya untuk memecahkan masalah itu. Kita akan
          menggunakan empat langkah ini untuk menebak cara memainkan permainan tanpa
          aturan. Pada akhir permainan, Anda akan dapat bermain sesuatu yang mirip
          ini!
    C3_crowdsourcing:
      1:
        text: Pelajaran ini disebut crowdsourcing. Dalam pelajaran ini, kita akan
          menggunakan setumpuk kartu untuk mengetahui betapa jauh lebih mudahnya hal-hal
          tertentu jika dilakukan berkelompok daripada dilakukan sendirian. Jadi,
          ajak beberapa teman dan buat sesuatu yang menarik. Crowdsourcing adalah
          mencari bantuan dari sekelompok besar orang untuk menyelesaikan sesuatu
          lebih cepat.
      2:
        text: Dalam ilmu komputer, kita menggunakan crowdsourcing sepanjang waktu.
          Ribuan amatir dan profesional menghubungkan komputer mereka satu sama lain
          untuk menelusuri miliaran informasi. Mencari sesuatu seperti bilangan prima
          Mersenne selanjutnya, atau bahkan kemungkinan komunikasi alien.
      3:
        text: Saat anda menonton sebuah film, setiap detik dari film tersebut adalah
          24 gambar individu, kami menyebutnya kerangka-kerangka. Jadi setiap gambar
          itu perlu diciptakan dan diberikan dan disatukan. Tim saya dan saya, kami
          semua merupakan para pengembang perangkat lunak. Kami semua bekerja sama
          untuk membuat sebuah perangkat lunak yang benar-benar menciptakan sebuah
          gambar, menciptakan gambar akhir yang anda lihat di layar. Itu adalah alat
          yang bisa digunakan oleh seniman dan pengembang lainnya sebagai bagian dari
          kerja tim mereka dan prosesnya untuk dapat membuat gambar-gambar yang mereka
          inginkan di layar.
      4:
        text: Contohnya, di Finding Nemo, saat Crush and Squirt dan semua teman mereka
          sedang berenang melintasi arus Australia Timur. Anda sedang melihat gambar
          air yang mengalir, anda melihat warna di bagian belakang kura-kura tersebut,
          anda melihat sisi ikan. Semua hal itu dihasilkan melalui program matematika
          dan komputer yang kita tulis, yang kemudian kita berikan kepada seniman
          dan mereka mengambilnya untuk menciptakan gambar terakhir dan mengolahnya
          dan membuatnya terlihat cantik dan terlihat menyenangkan.
    C3_dice_race:
      1:
        text: Pelajaran ini disebut balap dadu. Hampir semua orang suka bermain permainan
          komputer. Pernahkah terbetik di pikiran Anda tentang cara pemrogram komputer
          mengubah langkah-langkah permainan menjadi program? Langkah pertama dalam
          membuat permainan komputer dan memecahkan semua masalah adalah pemikiran
          dan perencanaan.
      2:
        text: Langkah berpikir dari pemecahan masalah menghasilkan sebuah algoritma,
          yang merupakan langkah demi langkah rencana untuk memecahkan suatu masalah
          atau menyelesaikan sebuah tugas. Dalam pelajaran ini, anda akan membuat
          sebuah algoritma untuk permainan balap dadu. Kemudian anda akan meminta
          teman anda untuk mencoba rencananya untuk melihat apakah mereka dapat mengikuti
          langkah-langkah untuk memainkan permainan. Setelah pemrogram tersebut yakin
          langkahnya sudah benar, saatnya menerjemahkan algoritme menjadi program
          dengan bahasa yang bisa dimengerti komputer.
      3:
        text: Hampir apa saja yang kita lakukan setiap hari membutuhkan sebuah algoritma,
          daftar langkah-langkah yang bisa anda ikuti untuk menyelesaikan sebuah tugas.
          Pikirkan tentang bersiap-siap ke sekolah atau merencanakan hari yang menyenangkan
          bersama teman anda atau memperbaiki sebuah hal kecil. Untuk menyelesaikan
          semua tugas tersebut, anda harus memecahnya menjadi langkah-langkah yang
          lebih kecil dan terkadang langkah-langkahnya harus dalam urutan tertentu.
      4:
        text: Bayangkan pembuatan roti isi. Bumbu pertama yang Anda ambil dari dapur
          tidak menjadi masalah. Namun Anda tidak dapat menuang selai kacang sebelum
          membuka toples. Komputer membutuhkan algorithm dan program untuk menunjukkan
          cara melakukan hal-hal sederhana yang dapat kita lakukan tanpa memikirkannya.
      5:
        text: Algoritma merupakan pemikiran di balik apa yang harus terjadi saat program
          sedang memberi instruksi yang benar ke komputer untuk mewujudkannya. Algoritma
          harus diterjemahkan ke dalam sebuah program sebelum komputer dapat menjalankannya.
          Melanggar tugas ke dalam langkah yang disebut algoritma terkadang sulit
          dilakukan. Tapi seperti keterampilan baru, ini terlihat lebih mudah lebih
          mudah dan lebih mudah dengan latihan.
    C3_farmer_while:
      1:
        text: While loop sangat mirip dengan perbuatan Anda sehari-hari. Bayangkan
          Anda mencuci mobil, Anda akan terus mengelapnya sampai bersih. Jika mobil
          belum bersih, teruslah mengelap. Anda mengevaluasi hal-hal ini sepanjang
          waktu.
      2:
        text: Ada tampilan baru untuk membantu petani. Namanya blok "while". Blok
          ini sederhana sekali sebenarnya. Selagi pernyataan di atas benar, lakukan
          sesuatu. Misalnya, selagi ada tumpukan, gerakkan satu gulungan. Lakukan
          terus dan cobalah dengan petani Anda.
    C3_functional_suncatchers:
      1:
        text: Pelajaran ini adalah suncatcher fungsional. Anda akan membuat suncatcher
          yang elok menggunakan function. Ada beberapa langkah dalam membuat salah
          satu suncatcher ini. Beberapa langkah harus diulangi berkali-kali.
      2:
        text: Langkah pertama dalam menyederhanakan proses pembuatan suncatcher adalah
          menebak tindakan yang harus diulangi berkali-kali. Kita dapat mengelompokkan
          langkah-langkah ini menjadi sebuah function.
      3:
        text: Namun ada yang lebih menarik dari sekadar mengikuti langkah-langkah
          presisi terkait pembuatan suncatcher yang indah. Sesekali kita ingin kreatif
          dan mengubah warna manik-manik yang kita gunakan. Kita bisa membuat suncatcher
          yang serba unik jika menggunakan manik yang warna-warni.
      4:
        text: Suncatcher akan menjadi milik unik Anda ketika Anda belajar memandang
          manik-manik sebagai variable yang berupa kata yang bisa menggantikan (placeholder)
          informasi yang bisa berubah. Nikmati pembuatan suncatcher yang indah menggunakan
          function dan variable!
    C3_internet:
      1:
        text: Pelajaran ini membahas seluk-beluk internet. Internet adalah tempat
          yang sangat sibuk dan mirip dengan jalan yang padat ini. Pesan itu seperti
          mobil yang melesat agar sampai tujuan. Pesan bergerak melewati internet
          dengan sangat cepat.
      2:
        text: Meniru cara kerja komputer akan membantu Anda memahami apa yang terjadi
          saat Anda menggunakan internet. Anda akan mempelajari cara pesan berpindah
          dari komputer Anda ke situs web favorit atau dari teman ke email inbox.
          Seperti halnya menyusuri jalanan padat itu lebih mudah ketika Anda tahu
          jalan dan bisa membaca rambu lalu lintas, maka menjelajahi internet juga
          tidak begitu rumit jika Anda tahu apa yang terjadi di balik layar.
      3:
        text: Mengirim pesan-pesan di internet hampir sama seperti mengirim pesan-pesan
          melalui pos tapi dengan beberapa perbedaan. Saya di sini di Google.com.
          Alamat IP untuk situs ini adalah nomor ini. Anda dapat memikirkan alamat
          IP sebagai alamat pengirim anda melalui pos. Mari bayangkan saya yang ingin
          mengirim pesan melalui pos ke seseorang di kantor yang ada di sana. Apakah
          anda melihat URL dan alamat IP di pintu itu? Saya telah menulis pesan ini
          dan tekan mengirim.
      4:
        text: Lain halnya dengan Pelayanan Pos, hal yang pertama terjadi adalah internet
          memecah pesan menjadi bagian-bagian yang lebih kecil sehingga dapat dikirim
          dengan lebih mudah. Bagian-bagian kecil ini disebut paket-paket. Setiap
          paket pesan tersebut dikirim ke tempat tujuan satu per satu. Semua paket
          ini disatukan dalam urutan yang benar sehingga penerima dapat membaca pesan
          dengan benar. Tentu saja, ada lebih banyak hal-hal untuk dipelajari tentang
          bagaimana internet bekerja tapi ini merupakan awal yang baik. Anda sedang
          dalam perjalanan untuk menjadi seorang pengguna internet yang cerdas! Pastikan
          untuk menceritakan kepada keluarga dan teman anda tentang apa yang telah
          anda pelajari!
      5:
        text: Nama saya adalah Amanda Camp dan saya adalah seorang insinyur perangkat
          lunak di Google. Saya bekerja pada sebuah tim yang bekerja pada server backend
          yang menyimpan profil-profil dan kontak-kontak. Didalam pekerjaan saya,
          kami banyak memikirkan bagaimana kontak-kontak dapat dikirim ke perangkat-perangakat
          lain, seperti telepon anda. Kebanyakan orang-orang memiliki banyak kontak,
          anda mungkin mennyebutkan, 1000 kontak dan kami tidak ingin mengirim semua
          kontak tesebut sekaligus ke telepon anda karena pesan tersebut terlalu besar.
          Sama halnya dengan cara internet yang memecah pesan besar ke dalam paket-paket,
          kami menggunakan konsep yang dinamakan paging di mana kami hanya dapat mengirim
          kontak 100 telepon anda sekaligus dan membiarkan telepon anda memberikan
          respon kepada kami dan meminta 100 kontak berikutnya.
      6:
        text: Hal yang paling menarik tentang perangkat lunak adalah benar bahwa perangkat
          lunak itu dapat mempengaruhi seluruh dunia. Pertama kali saya belajar memprogram
          adalah saat berusia sekitar sembilan belas tahun. Saya rasa saya sudah menjadi
          mahasiswa tingkat dua atau mahasiswa junior di perguruan tinggi. Saya ingat,
          program pertama yang saya tulis adalah sesuatu yang mengubah Celsius menjadi
          Fahrenheit. Saya menyukai pemrograman karena saya suka membantu orang-orang.
          Saya dapat menulis program-program di Google yang menolong orang-orang di
          seluruh dunia dan itu benar-benar membingungkan dan seru.
    C3_maze_conditionals:
      1:
        text: Orang-orang membuat keputusan setiap harinya. Misalnya, sebelum anda
          pergi ke luar, anda memiliki pernyataan pengandaian yang mengatakan jika
          hujan turun, maka saya perlu mendapatkan jaket saya. Komputer-komputer luar
          biasa sekali saat anda memutuskan jenis pernyataan tersebut sehingga mereka
          dapat dengan baik melakukan hal-hal itu dengan kecepatan yang luar biasa.
          Sebuah program komputer benar-benar sedikit matematika dan beberapa pernyataan
          pengandaian di mana keputusan dibuat.
      2:
        text: Blok "if" membantu zombi mengambil keputusan. Blok ini memeriksa sesuatu,
          Misalnya, mari kita gunakan blok yang berbunyi, jika ada jalur ke kiri,
          dan meletakkan perintah belok kiri ke dalamnya. Kita memberi tahu zombi
          untuk memeriksa sekelilingnya, mencari tahu apakah ada jalur ke kiri dan
          jika ada, ya belok ke kiri.
      3:
        text: Lalu kita menggunakan blok "move forward" di dalam blok "repeat" ini
          agar terus bergerak maju sepanjang ingin berjalan lurus. Lalu ketika ada
          belokan, blok "if" akan memerintahkannya belok ke kiri. Anda dapat melihat
          bahwa jika kita melakukan itu, yaitu belok ke kiri, dan sebaliknya bergerak
          maju, kita akan mencapai tujuan.
      4:
        text: Ini adalah contoh penggunaan pernyataan jika yang merupakan konsep fundamental
          dalam pemrograman komputer. Salah satu pelajaran pertama yang saya petik
          adalah cara menulis program yang memainkan tic-tac-toe. Saya memerintahkan
          pernyataan jika untuk berkata, oke, jika orang lain akan menang, lanjutkan,
          dan blokir tempat itu. Nikmati belajar tentang cara menggunakan pernyataan
          jika, karena ini adalah konsep kunci.
    C3_maze_level_4:
      1:
        text: Dalam contoh ini, tujuan Anda adalah membawa zombi ke bunga matahari.
          Kita dapat menggunakan lima blok "move forward" atau memberi tahu komputer
          untuk bergerak maju dan mengulang lima kali menggunakan satu blok "repeat".
      2:
        text: Cara ini menghemat waktu dan sangat mempermudah. Untuk menggunakannya,
          cukup taruh blok "move forward" ke dalam blok "repeat". Tekan "run" dan
          zombi akan bergerak maju lima kali ke bunga matahari yang ranum.
    C3_playlab_create_game:
      1:
        text: Sejauh ini Anda telah membuat animasi atau cerita yang melakukan hal
          yang sama setiap kali Anda menjalankan. Sekarang Anda dapat membuat permainan
          interaktif yang dapat benar-benar bermain.
      2:
        text: Ada blok "when arrow" / "ketika panah"  dan blok "move actor" / "bergerak
          aktor". Anda dapat menempatkan blok ini bersama-sama untuk menggerakan aktor
          dengan tombol panah.
    C3_songwriting_with_parameters:
      1:
        text: Ini adalah pelajaran menulis lagu. Musik itu sangat mirip dengan program
          komputer. Catatan dan kata-kata yang tertulis memberi tahu penyanyi tentang
          tindakan yang harus dilakukan. Beberapa bagian musik digunakan berkali-kali.
      2:
        text: Kami menyebutnya chorus. Dalam program komputer, bagian program yang
          digunakan berulang-ulang disebut function. Ketika Anda membaca lirik lagu
          dan tertulis kata chorus, apakah Anda menyanyikan kata chorus ini? Tidak,
          Anda melihat bagian atas halaman untuk melihat kata-kata yang membentuk
          chorus.
      3:
        text: Dalam pelajaran ini, Anda akan mempelajari lagu anak kecil yang konyol
          berjudul "little bunny foo foo". Lagu ini memiliki chorus yang akan Anda
          ulangi beberapa kali. Sebuah function adalah sepotong code yang dapat Anda
          panggil dan gunakan berulang-ulang. Function membuat pemrograman lebih mudah
          dan efisien sehingga Anda tidak harus menulis langkah-langkah function berkali-kali.
          Anda hanya perlu menulisnya sekali!
    C4_bee_conditional:
      1:
        text: Ini adalah blok "conditional". Blok ini mengatakan, jika Anda ada di
          bunga atau sarang lebah, maka lakukan sesuatu. Blok ini berguna ketika kita
          tidak tahu berapa banyak madu atau nektar yang harus diambil karena di sini
          hanya ada tanda tanya.
      2:
        text: Dalam contoh ini, kita akan mengatakan, jika ini bunga, ambil semua
          nektar lalu gunakan blok lain untuk mengatakan, jika ini sarang lebah, ambil
          madu. Tet-tot!
    C4_conditionals:
      1:
        text: Kita ada blok baru bernama blok "if/else". Blok ini berupa pernyataan
          conditional persis seperti blok "if" yang sudah Anda gunakan dalam puzzle
          sebelumnya. Namun kini ada bagian baru di sisi bawah yang berkata lain.
          Blok "if/else" membiarkan lebah mengambil keputusan antara dua rangkaian
          tindakan. Jika ada di bunga, lebah akan melakukan rangkaian tindakan yang
          Anda letakkan di bagian pertama yang berkata "lakukan". Jika tidak ada di
          bunga, lebah akan melakukan rangkaian tindakan yang Anda letakkan di slot
          yang berkata "lainnya".
      2:
        text: Pernyataan "if" adalah cara komputer dapat mengambil keputusan.  Manusia
          menetapkan kondisi bagi komputer yang berkata, jika komputer menghadapi
          situasi tertentu, "lakukan ini". Lainnya, yang cuma berarti sebaliknya,
          "lakukan itu". Di bagian atas blok "if/else" mengatakan, jika di bunga.
          Namun di bagian atas blok juga bisa mengatakan yang lain, seperti, jika
          nektar sama dengan 2, atau jika ada jalur di depan, blok akan berperilaku
          serupa.  Bahwa jika pernyataan di bagian atas benar, maka blok akan melakukan
          rangkaian tindakan pertama. Namun jika pernyataan di bagian atas salah,
          blok akan melakukan rangkaian tindakan kedua.
    C4_for_loops:
      1:
        text: Ketika Anda menggunakan blok "repeat" untuk mengulang code, bagaimana
          komputer bisa tahu jumlah pengulangan code-nya sudah benar? Blok "repeat"
          sebenarnya menyembunyikan sepotong code yang lebih canggih bernama "loop"
          yang menghitung dari nilai awal hingga nilai akhir berdasarkan nilai pertambahan
          tertentu.
      2:
        text: Misalnya, blok "repeat three" menghitung dari 1 hingga 3 oleh 1. Setiap
          kali menghitung, blok ini menjalankan code di dalam loop. "For loop" tahu
          berapa kali dirinya sudah berjalan dengan menggunakan variable penghitung
          yang diatur ke nilai awal pada permulaan loop dan menambahkan increment
          pada dirinya setiap kali loop berjalan. Tidak lama setelah variable penghitung
          lebih besar daripada nilai akhir, loop akan berhenti.
      3:
        text: Manfaat menggunakan "for loop" yang asli, alih-alih blok "repeat" adalah
          Anda benar-benar dapat melihat variable penghitung dan menggunakannya dalam
          loop. Misalnya, jika saya punya sederet bunga, dan bunga pertama punya satu
          nektar, bunga kedua punya dua nektar, dan bunga ketiga punya tiga nektar,
          saya dapat menggunakan "for loop" untuk memberi tahu lebah agar mengumpulkan
          nektar 'counter' setiap saat, yang tentunya satu di bunga pertama, dua di
          bunga kedua, dan tiga di bunga ketiga.
      4:
        text: Juga dalam "for loop", Anda dapat menambahi penghitung dengan angka
          selain satu setiap kali. Anda dapat menghitung dengan 2, 4, atau bahkan
          angka yang terus berubah setiap saat.
    C4_for_loops_bee:
      1:
        text: Ketika Anda menggunakan blok "repeat" untuk mengulang code, bagaimana
          komputer bisa tahu jumlah pengulangan code-nya sudah benar? Blok "repeat"
          sebenarnya menyembunyikan sepotong code yang lebih canggih bernama "loop"
          yang menghitung dari nilai awal hingga nilai akhir berdasarkan nilai pertambahan
          tertentu.
      2:
        text: Misalnya, blok "repeat three" menghitung dari 1 hingga 3 oleh 1. Setiap
          kali menghitung, blok ini menjalankan code di dalam loop. "For loop" tahu
          berapa kali dirinya sudah berjalan dengan menggunakan variable penghitung
          yang diatur ke nilai awal pada permulaan loop dan menambahkan increment
          pada dirinya setiap kali loop berjalan. Tidak lama setelah variable penghitung
          lebih besar daripada nilai akhir, loop akan berhenti.
      3:
        text: Manfaat menggunakan "for loop" yang asli, alih-alih blok "repeat" adalah
          Anda benar-benar dapat melihat variable penghitung dan menggunakannya dalam
          loop. Misalnya, jika saya punya sederet bunga, dan bunga pertama punya satu
          nektar, bunga kedua punya dua nektar, dan bunga ketiga punya tiga nektar,
          saya dapat menggunakan "for loop" untuk memberi tahu lebah agar mengumpulkan
          nektar 'counter' setiap saat, yang tentunya satu di bunga pertama, dua di
          bunga kedua, dan tiga di bunga ketiga.
      4:
        text: Juga dalam "for loop", Anda dapat menambahi penghitung dengan angka
          selain satu setiap kali. Anda dapat menghitung dengan 2, 4, atau bahkan
          angka yang terus berubah setiap saat.
    C4_for_loops_no_bee:
      1:
        text: Ketika Anda menggunakan blok "repeat" untuk mengulang code, bagaimana
          komputer bisa tahu jumlah pengulangan code-nya sudah benar? Blok "repeat"
          sebenarnya menyembunyikan sepotong code yang lebih canggih bernama "loop"
          yang menghitung dari nilai awal hingga nilai akhir berdasarkan nilai pertambahan
          tertentu.
      2:
        text: Misalnya, blok "repeat three" menghitung dari 1 hingga 3 oleh 1. Setiap
          kali menghitung, blok ini menjalankan code di dalam loop. "For loop" tahu
          berapa kali dirinya sudah berjalan dengan menggunakan variable penghitung
          yang diatur ke nilai awal pada permulaan loop dan menambahkan increment
          pada dirinya setiap kali loop berjalan. Tidak lama setelah variable penghitung
          lebih besar daripada nilai akhir, loop akan berhenti. Manfaat menggunakan
          "for loop" yang asli, alih-alih blok "repeat" adalah Anda benar-benar dapat
          melihat variable penghitung dan menggunakannya dalam loop.
    C4_function_create:
      1:
        text: Setelah mengedit blok "function", kini saatnya membuat blok "function"
          baru dari nol. Caranya sangat sederhana. Anda akan lihat bahwa toolbox memiliki
          kategori yang disebut function. Jika Anda mengkliknya, Anda akan melihat
          tombol oranye bernama "create a function". Dengan mengklik tombol ini, muncul
          editor function yang sudah Anda gunakan untuk mengedit blok function yang
          sudah ada.
      2:
        text: Persis seperti sebelumnya, Anda memulainya dengan memberi nama function,
          menuliskan deskripsi tentang tujuan function itu. Misalnya, function diharapkan
          dapat menggambar persegi empat atau segitiga dan kemudian menarik blok dari
          toolbox ke ruang kerja warna putih di bawah ini. Ingat untuk menarik blok
          ini di dalam blok pembungkus warna hijau untuk function.
      3:
        text: Setelah selesai, klik simpan dan keluar. Tindakan ini akan membawa Anda
          kembali ruang kerja puzzle utama. Function baru yang Anda buat akan muncul
          di blok hijau di dalam kategori function di toolbox. Drag & drop function
          ini ke ruang kerja utama dan gunakan seperti blok yang lain-lain untuk memecahkan
          puzzle.
    C4_function_edit:
      1:
        text: Salah satu hal yang hebat dalam pemrograman komputer adalah saat anda
          sudah mengajarkan komputer bagaimana melakukan suatu tindakan, anda dapat
          memanggil fungsi itu lagi. Anda memberinya nama dan kemudian anda dapat
          memanggilnya. Itu benar-benar seperti memperluas bahasa.
      2:
        text: Dalam program yang kami buat, kami mempelajari cara menggambar persegi
          dengan bergerak dan berputar empat kali. Kami dapat mengambil fungsi itu
          dan memberinya sebuah nama, menggambar persegi, sehingga setiap saat kami
          ingin melakukannya, kami cukup mengatakan menggambar persegi dan itu akan
          kembali dan memanggil fungsi itu, kode itu. Itu akan berhasil untuk kami.
          Kami telah menambahkan konsep itu ke bahasa pemrograman kami.
      3:
        text: Dalam puzzle ini, kami sudah membuat function "draw a square" untuk
          Anda. Anda bisa melihatnya di toolbox sebagai blok hijau. Yang perlu Anda
          lakukan adalah menulis code yang sama dengan sebelumnya untuk menggambar
          persegi empat dan meletakkannya ke dalam function ini. Untuk melakukannya,
          klik opsi edit di blok "draw a square" warna hijau. Ini akan membuka editor
          function. Editor function memiliki tiga bagian. Sebuah tempat untuk memberi
          nama function. Ini akan muncul di blok hijau di depan function tersebut.
          Lalu tulis deskripsi singkat tentang tujuan function Anda.
      4:
        text: Dalam kasus ini, function ini adalah untuk menggambar persegi empat.
          Ruang putih di bawahnya adalah ruang kerja yang kerjanya mirip dengan ruang
          kerja yang sudah Anda gunakan. Drag dan drop blok dari toolbox ke dalam
          ruang kerja ini. Ingat untuk meletakkan blok yang membuat persegi empat
          di dalam blok pembungkus hijau untuk function itu. Setelah selesai, klik
          simpan dan keluar. Tindakan ini akan membawa Anda kembali ruang kerja puzzle
          utama. Sekarang Anda dapat menggunakan blok function "draw the square" persis
          seperti blok yang lain-lain untuk memecahkan puzzle.
    C4_function_parameters:
      1:
        text: Ini adalah function yang menggambar persegi empat bersisi 50 piksel.
          Bagus, tetapi bagaimana kalau saya ingin menggambar persegi empat bersisi
          50 piksel dan persegi empat lain bersisi 100 piksel? Kita tentu tidak harus
          membuat dua function terpisah yang hampir melakukan tindakan yang sama.
          Justru kita bisa menggunakan satu function dengan parameter.
      2:
        text: Parameter memudahkan kita meneruskan nilai ke function yang biasa digunakan
          sebagai variable di dalam function. Ayo kita coba tambahkan parameter yang
          disebut "length" ke function ini agar kita bisa menggunakannya untuk membuat
          berbagai ukuran persegi empat. Di editor function, Anda dapat mengedit nama
          dan deskripsi seperti sebelumnya tetapi kini Anda juga dapat menambahkan
          parameter. Tulis nama parameter di ruang itu dan klik Add Parameter. Tindakan
          ini akan menciptakan blok merah dengan nama parameter yang barusan Anda
          buat. Kini kita bisa mengganti blok "move forward by 100" dengan parameter
          Length sehingga blok akan bergerak maju berdasarkan Length.
      3:
        text: Klik simpan dan tutup lalu tarik blok "create a square" yang baru keluar
          dari kategori function di toolbox. Anda akan melihat adanya ruang kosong
          di samping "length" karena function ingin tahu berapa nilai yang mestinya
          dimiliki oleh parameter Length. Tarik blok "number" dari kategori Math dan
          letakkan di ruang ini. Pelajari cara menggunakan function berkali-kali dengan
          berbagai "length" untuk membuat berbagai ukuran persegi empat? Cobalah sendiri!
    C4_intro:
      1:
        text: Biasanya, semua pemrograman berupa teks, tetapi kita akan menggunakan
          Blockly yang memakai blok visual yang bisa Anda drag dan drop untuk menulis
          program. Di balik layar, Anda masih tetap membuat code. Sebagai awal, kita
          akan membuat code untuk sebuah program yang akan membantu Angry Bird ini
          melintasi labirin agar sampai ke babi jahat yang mencuri telur-telurnya.
      2:
        text: Blockly terdiri dari tiga bagian utama. Di sisi kiri adalah labirin
          burung, tempat berjalannya program Anda. Instruksi untuk setiap level ditulis
          di bawah labirin. Area tengah ini adalah toolbox dan setiap blok ini adalah
          perintah yang dapat dimengerti oleh burung. Ruang putih di sisi kanan disebut
          ruang kerja yang menjadi tempat kita membuat program.
      3:
        text: Jika saya menarik blok move ke ruang kerja dan menekan "run", apa yang
          terjadi? Burung bergerak maju satu kotak di kisi-kisi. Dan bagaimana kalau
          saya ingin burungnya melakukan sesuatu setelah bergerak maju satu kotak?
          Saya bisa menambahkan blok lain ke program.
      4:
        text: Saya akan memilih blok "turn right", dan menariknya ke bawah blok move
          hingga muncul panah kuning. Lalu saya akan melepasnya dan kedua blok akan
          saling menempel. Ketika saya menekan "run" lagi, burung akan melakukan perintah
          yang ditumpuk dari atas ke bawah di ruang kerja kita.
      5:
        text: Jika Anda ingin menghapus blok, cukup hapus dari tumpukan dan tarik
          ke keranjang sampah. Setelah menekan "run", Anda selalu dapat menekan tombol
          atur ulang untuk mengembalikan burung ke titik awal. Ayo tangkap babi-babi
          itu!
    C4_math_artist:
      1:
        text: Jika saya ingin menggambar persegi bertinggi 50 piksel dengan lebar
          dua kali lipat tingginya, bagaimana cara memprogram komputer untuk melakukan
          itu? Baik, saya bisa memberi tahu artis untuk naik lima puluh, belok kanan,
          lalu lurus saja sejauh 100, dan mengulang langkah tadi dua kali. Namun saya
          jadinya melakukan operasi matematika untuk komputer.
      2:
        text: Mengalikan lima puluh dengan dua secara mencongak mungkin tidak sulit,
          tapi komputer sangat pintar berhitung matematika sehingga lebih baik serahkan
          saja padanya jika memungkinkan. Jika saya menggunakan variable bernama tinggi,
          maka dengan mudah saya dapat mengubah tinggi ke lima puluh lalu mengubah
          algorithm saya untuk memberi tahu artis agar naik sebesar tinggi itu, belok
          kanan, lalu lurus saja sejauh tinggi dikalikan 2, yang menghasilkan persegi
          yang lebarnya dua kali lipat tingginya.
    C4_unplugged_algorithms:
      1:
        text: Pelajaran ini disebut Algorithm Tangram. Tangram adalah puzzle dengan
          tujuh potong yang dapat disusun bersama untuk membuat bentuk lain. Anda
          akan menggunakan algorithm untuk menjelaskan kepada rekan Anda tentang cara
          menyusun puzzle bersama-sama.
      2:
        text: Algorithm itu cuma daftar langkah yang dapat diambil untuk menyelesaikan
          tugas. Kita menggunakannya setiap hari untuk hal-hal seperti daftar belanjaan
          dan resep. Jika algorithm dibuat sederhana, ada banyak cara untuk menginterpretasikannya
          dan siapa pun yang menggunakan algorithm itu bisa saja tidak persis mendapatkan
          hasil yang Anda inginkan. Jika Anda ingin memastikan siapa pun mendapatkan
          hasil yang sama persis, algorithm Anda harus terperinci dan sangat spesifik.
      3:
        text: Hari ini saya menggunakan algorithm untuk menyelesaikan lukisan. Saya
          ingin mencoba melukis beberapa serigala, tetapi saya bukan pelukis yang
          paling mengagumkan. Untungnya bagi orang-orang seperti saya, ada lukisan
          dengan angka. Ada empat puluh warna dengan sedikit huruf dan angka yang
          memberi tahu Anda warna apa untuk menggambar setiap bagian. Melukis dengan
          angka memberi tahu saya persis warna yang harus digunakan dan di mana.
      4:
        text: Arahannya sangat spesifik sehingga dapat saya ikuti dan hasil lukisannya
          juga tampak menakjubkan. Sebuah algorithm yang bagus. Jika instruksinya
          kurang spesifik, serigala saya tentu tidak tampak sebagus itu. Ketika Anda
          benar-benar menginginkan hasil yang sama persis dengan yang Anda rencanakan,
          rencana tersebut harus benar-benar presisi.
    C4_unplugged_binary:
      1:
        text: Setiap tim, orang yang memberi instruksi, yaitu orang yang memegang
          kertas, harus menebak-nebak bagaimana tampilan simbol "off" dan "on" miliknya.
          Dalam binary, tampilannya seperti abjad dengan dua huruf. Seperti memiliki
          A dan B di seluruh abjad, tetapi di sini Anda punya 0 dan 1.
      2:
        text: Cara paling umum menggunakan binary adalah pernyataan jika. Inilah materi
          klasik dalam pemrograman. Programnya berjalan dan berkata, jika sesuatu
          itu benar, lakukan ini. Atau jika tidak benar, Anda melakukan sesuatu yang
          lain. Bagaimana jika Anda ingin melakukan sesuatu yang sedikit lebih rumit.
          Alih-alih pernyataan jika, Anda ingin mengerjakan sesuatu seperti gambar
          atau suara di komputer.
      3:
        text: 'Komputer hanya mengenal binary sebagai gambar, bukan sebagai binary,
          bukan satu dan nol, jadi bagaimana cara mengatasi itu? Berikut ini satu
          contoh: Anda punya gambar yang indah ini. Nah, gambar itu pada dasarnya
          sebuah bentuk informasi. Semua informasi dapat di-encode dalam binary dengan
          satu atau lain cara, Anda hanya perlu menebak cara melakukannya.'
      4:
        text: Bayangkan kita akan meletakkan kisi-kisi pada beruang panda ini dan
          untuk setiap kotak, kita akan memutuskan apakah kotaknya lebih hitam atau
          lebih putih. Lalu kita akan mewarnainya seperti itu. Nah, setiap sel di
          kisi-kisi bisa hitam atau putih dan kemudian kotak hitamnya kita sebut nol
          (digit binary) sedangkan kotak putih adalah satu, digit binary yang lain.
          Pada akhirnya, yang Anda hadapi adalah sekumpulan satu dan nol. Seperti
          itulah cara merepresentasikan gambar ini dalam binary.
    C4_unplugged_forloops:
      1:
        text: Pelajaran ini disebut "for loop fun". Dalam pelajaran ini, kita akan
          menggunakan garis bilangan untuk bermain dadu. Setiap pemain akan melempar
          dadu tiga kali untuk mencari nilai awal, nilai berhenti, dan interval. Di
          setiap putaran, kita memutar nilai awal dan setiap nilai yang jumlah langkah
          majunya sama dengan nilai interval. Kita berhenti memutar ketika mendapat
          nilai berhenti. Orang dengan skor tertinggi akan menang!
      2:
        text: '"For loops" bisa bermanfaat di banyak tempat dan jika Anda ingin menjadi
          pakar meteorologi, Anda pasti menggunakan "for loops" sepanjang waktu. Hai,
          saya Becky. Saya bekerja di EverPower Renewables sebagai pakar meteorologi
          angin. Saya meramal kecepatan angin untuk wilayah Columbia River Gorge yang
          menjadi tempat ladang angin milik perusahaan saya.'
      3:
        text: Kami mencoba memahami volume angin yang akan bertiup di tempat itu sehingga
          kami tahu berapa banyak daya yang bisa dihasilkan. Kami memberikan informasi
          tersebut ke para pedagang energi waktu nyata. Mereka membeli dan menjual
          energi berdasarkan prediksi kami tentang volume daya yang akan muncul di
          tempat itu agar kisi-kisi daya bisa dipastikan seimbang, lampu Anda tetap
          menyala, dan kami dapat memaksimalkan jumlah energi yang diperoleh dari
          ladang angin.
      4:
        text: Kami bertugas di pusat kontrol nasional untuk EverPower Renewables di
          Portland sini dan inilah tempat kami memperoleh informasi dari semua ladang
          angin di seluruh negeri. Bahkan komputer berkekuatan paling tinggi dewasa
          ini tidak dapat membuat simulasi atmosfer di semua tempat. Menurut model
          ramalan komputer, kami memiliki kisi-kisi. Setiap titik kisi-kisi berupa
          garis lintang, garis bujur. Kami harus menghitung ilmu fisika dan mencoba
          menebak kecepatan, suhu, tekanan angin, hal-hal semacam itu.
      5:
        text: Karena kisi-kisi ini lumayan besar dan kami menekuni pekerjaan ini di
          banyak titik, kami mengulang-ulangnya miliaran kali. Setiap yang saya kerjakan,
          saya akan menggunakan "for loops". Berikut ini contoh "for loop" di tempat
          kerja saya. Ketika Anda meramal angin, ada begitu banyak parameter berbeda
          yang masuk ke dalamnya sehingga mustahil seorang manusia duduk nyaman menghitung
          semua itu. Ada begitu banyak aspek berbeda dari peristiwa yang memengaruhi
          terjadinya angin sehingga kami membutuhkan model komputer agar dapat meramalkannya.
    C4_unplugged_madlibs:
      1:
        text: Dalam pelajaran ini, kita akan bermain-main dengan mengisi cerita kosong.
          Ada template yang bisa Anda isi untuk membuat cerita serupa yang memiliki
          perbedaan sangat lucu.
      2:
        text: Dalam pelajaran ini, kita juga mempelajari cara membuat template abstrak
          dari dua cerita yang sudah dibuat. Abstraksi adalah seni menghapus perbedaan
          dan detail sehingga Anda dapat melihat bagaimana satu solusi bisa berhasil
          untuk berbagai masalah. Abstraksi sangat berguna dalam ilmu komputer karena
          memudahkan kita membuat function yang bisa bermanfaat di beberapa situasi
          yang berbeda.
    C4_unplugged_parameters:
      1:
        text: Pelajaran ini disebut menulis lagu dengan parameter. Kita akan menulis
          beberapa lagu di sini. Kadang-kadang chorus sedikit berbeda setiap kali
          Anda menyanyikannya. Apakah Anda ingat Old Macdonald Had a Farm? Chorus-nya
          sedikit berbeda untuk setiap binatang. Dan di ladang tersebut, dia memiliki
          sapi, e-i-e-i-o. Perubahan kecil di setiap chorus bisa ditampilkan menggunakan
          sesuatu yang kita sebut parameter.
      2:
        text: Kadang-kadang function membutuhkan parameter. Parameter adalah sepotong
          informasi tambahan yang dapat Anda alihkan ke function untuk disesuaikan
          demi kebutuhan khusus. Ketika Anda membuat sundae es krim bersama teman-teman,
          Anda menggunakan sebuah proses yang mirip dengan program komputer.
      3:
        text: Lepek es krim vanila mungkin sama untuk semua sundae, tetapi ketika
          Anda bertanya kepada teman manakah dari dua topping yang mereka sukai, Anda
          bisa mendapatkan kombinasi yang sangat beragam. Topping adalah nama function,
          tetapi setiap jenis topping adalah parameter. Function dan parameter saling
          bekerja sama untuk membuat  program komputer dan sundae yang juga sama-sama
          hebat.
    C4_unplugged_variables:
      1:
        text: Pelajaran ini disebut variable dalam amplop. Kita akan mempelajari cara
          menyusun kalimat ketika potongan-potongan informasi masih belum ada. Sebagian
          besar kita sudah akrab dengan ide mengisi kolom kosong. Kita melakukannya
          ketika mencantumkan nama kita di tugas PR. Sesekali ada lebih dari satu
          kata yang harus diisikan dan dalam kasus tersebut, kita memberi label ke
          kolom kosong itu sehingga kita tahu lokasi dari setiap potongan informasinya.
      2:
        text: Variable adalah placeholder untuk potongan informasi yang bisa berubah.
          Dengan menggunakan variable untuk informasi yang belum ada, kita bisa terus
          mengerjakan apa pun yang sudah kita lakukan dan mempersilakan orang lain
          mengisikan informasi yang belum ada belakangan. Di perangkat lunak, kita
          banyak menggunakan variable. Kita menggunakan variable sebagai placeholder
          untuk nama, alamat email, dan bahkan nama pengguna. Dengan cara begitu,
          kita bisa membiarkan program mengetahui lokasi kemunculan detail tersebut
          setelah pengguna mengisikannya. Kita menggunakan variable sepanjang waktu
          dalam pekerjaan kita.
      3:
        text: Setiap kali Anda perlu menyimpan potongan informasi untuk digunakan
          kemudian, kita menggunakan variable. Katakanlah kita harus menghitung berapa
          kali pengguna sudah mengirim pesan tweeter. Setiap kali pengguna tersebut
          mengirim pesan, kita akan menambahkan satu ke angka tersebut dan setiap
          kali pengguna menghapus pesan, kita akan mengurangi angka tersebut dengan
          satu. Setiap kali kita perlu tahu berapa kali pengguna itu sudah mengirim
          pesan tweeter, kita cukup melihat variablenya.
    C4_variables_artist:
      1:
        text: Variable adalah wadah untuk menyimpan nilai. Ketika Anda menggunakan
          variable tersebut dalam algorithm, variable membuka wadah dan mencari nilai
          yang ada di dalam. Cara ini memudahkan Anda menulis agorithm lebih cerdas
          yang berperilaku berbeda bergantung pada nilai yang tersimpan dalam variable
          itu.
      2:
        text: Sebagai contoh, jika Anda ingin menulis algorithm untuk mengucapkan
          Selamat Ulang Tahun, kini usiamu 10! ke adik saya, bagus itu. Nah, ketika
          saya menggunakannya tahun depan, saya akan mengucapkan Selamat Ulang Tahun,
          kini usiamu 11! Saya dapat membuat variable bernama "age" untuk menyimpan
          usia adik saya dan menulis algorithm untuk mengucapkan Selamat Ulang Tahun,
          kini usiamu 'age'. Karena variable bisa berubah, setiap tahun saya dapat
          memperbarui variable 'age' ke 'age' yang sesuai plus 1.
      3:
        text: Dalam puzzle ini, kita akan menggunakan variable yang menetapkan panjang
          garis yang digambar oleh artis. Dalam code kita nanti, blok "move forward"
          akan melihat variable "length" untuk mengetahui berapa nilai yang sudah
          Anda tetapkan.
    C4_variables_playlab:
      1:
        text: Variable adalah wadah untuk menyimpan nilai. Ketika Anda menggunakan
          variable tersebut dalam algorithm, variable membuka wadah dan mencari nilai
          yang ada di dalam. Cara ini memudahkan Anda menulis agorithm lebih cerdas
          yang berperilaku berbeda bergantung pada nilai yang tersimpan dalam variable
          itu.
      2:
        text: Sekarang Anda akan mencoba playlab yang menyediakan beragam permainan
          dan Anda dapat mengubah nilai variable seperti kecepatan, ketinggian, skor,
          untuk mengubah permainan. Anda tidak harus mengubah algorithm permainan
          untuk mengubah cara mainnya, cukup variable saja.
      3:
        text: Di tempat kerja saya di Kindle dan X-ray yang menjual buku, kami menerapkan
          variable dalam berbagai cara. Satu cara untuk menggunakan variable adalah
          menyimpan nomor halaman sebuah buku. Seorang pengguna bisa menambah dan
          mengurangi ukuran font di sebuah halaman. Berdasarkan ukuran font, jumlah
          halaman dalam buku bisa berubah. Kita bisa menyesuaikannya dengan menyimpan
          nomor halaman ke dalam variable.
    infinity_playlab_events:
      1:
        text: Sekarang, kita akan belajar tentang sesuatu yang digunakan sehari-hari
          oleh semua pemrogram permainan. Itulah yang disebut event. Sebuah event
          memberi tahu program Anda untuk mendengarkan kapan sesuatu terjadi. Dan
          ketika hal itu terjadi, program Anda melakukan tindakan. Beberapa contoh
          event adalah mendengarkan klik mouse, tombol panah, atau ketukan di layar.
      2:
        text: Di sini, kita akan menggerakkan Baymax naik untuk menyentuh Hiro dan
          turun untuk menyentuh Rapunzel ketika pemain menggunakan tombol panah "up/down"
          atau tombol "up/down". Kita akan menggunakan blok "when up arrow" dan menempelkan
          blok "move actor up" padanya sehingga ketika pemain menekan tombol panah
          "up", semua yang menempel ke blok "when up arrow" pun berjalan. Kita akan
          melakukan hal yang sama untuk menggerakkan Baymax turun. Langkah demi langkah
          permainan Anda akan semakin interaktif.
    infinity_playlab_intro:
      1:
        text: Jadi, kelas berapa Anda? Kedua. Kelas sepuluh. Kelas satu. Saya kelas
          delapan saat belajar memprogram. Saya punya komputer pertama kali saat berada
          di kelas enam. Yang membuat saya senang adalah bisa memperbaiki masalah
          orang. Anda dapat mengekspresikan diri, Anda dapat membuat banyak hal dari
          sebuah ide.
      2:
        text: Ilmu komputer adalah dasar bagi banyak hal yang akan digeluti mahasiswa
          dan kaum profesional selama dua puluh atau tiga puluh tahun ke depan. Saya
          suka pemrograman karena saya suka menolong orang. Saya berkesempatan membuat
          sesuatu yang akan memudahkan kehidupan orang. Saya pikir ilmu komputer adalah
          modal terbaik untuk menjadi negara adidaya. Memulai adalah bagian yang terpenting.
          Saya sendiri adalah pemula dan saya ingin kalian belajar bersama saya.
      3:
        text: Saya John Vechey, salah satu co-founder PopCap Games. Kami membuat permainan
          seperti Plants vs. Zombies, Bejeweled, dan Peggle. Kebanyakan permainan
          itu masalahnya bukan seberapa sempurna code Anda, bukan seberapa sempurna
          seni Anda, tetapi lebih pada bagaimana rasanya, seberapa serunya. Anda hanya
          bisa merasakan itu dengan mencobanya,  menekuninya, mempelajarinya, dan
          menyesuaikan lalu mengulang-ulang keterampilan Anda sendiri dalam membuat
          permainan.
      4:
        text: Apakah Anda punya permainan video favorit? Baik, kita akan melangkah
          lebih jauh untuk membuat permainan seperti itu menggunakan Play Lab. Permainan
          yang baik punya cerita dan setiap cerita ada aktornya. Aktor melakukan hal-hal
          seperti berbicara, bergerak, dan berinteraksi satu sama lain. Bahkan mungkin
          mencetak poin berdasarkan aturan permainan. Hari ini kita akan mempelajari
          cara melakukan itu semua, satu per satu, dengan karakter Disney seperti
          Anna, Elsa, Hiro, Baymax, dan Rapunzel. Kita akan membuat permainan dari
          nol yang bisa dibagikan dan dimainkan di ponsel.
      5:
        text: Layar terdiri dari tiga bagian utama. Di sisi kiri adalah gamespace,
          tempat berjalannya program Anda. Instruksi untuk setiap level ditulis di
          bawah ini. Area tengah ini adalah toolbox dan setiap blok ini adalah sepotong
          code. Ruang putih di sisi kanan disebut ruang kerja, dan inilah yang menjadi
          tempat kita membuat program.
      6:
        text: Untuk memulai, Anda harus menghubungkan blok Anda ke blok "when run"
          oranye. Anda dapat menghubungkan beberapa blok sekaligus dengan menarik
          mereka keluar sampai terlihat garis luar warna kuning, dan blok-blok tersebut
          akan terpasang sendiri. Dalam puzzle pertama ini, Hiro adalah Aktor 1 dan
          Baymax adalah Aktor 2. Kita harus menggerakkan Hiro untuk sampai ke Baymax
          dengan menarik blok "move right" keluar dan menghubungkannya ke blok "when
          run". Setelah blok Anda terpasang, tekan tombol "Jalankan" untuk melihat
          hasil pemrograman Anda.
      7:
        text: Mulai dan pada akhirnya Anda akan dapat membuat permainan sendiri dengan
          semua aktor menakjubkan yang dapat berinteraksi, mencetak poin, melempar
          mikrobot, ceri, panci, percikan, dan es.. dan lenyap satu sama lain. Semuanya
          terserah Anda!
    infinity_playlab_repeat_forever:
      1:
        text: Bisakah dibayangkan jika Anda harus mengulang sesuatu selama-lamanya?
          Semoga itu tidak pernah terjadi karena komputer sangat piawai mengulang
          segala sesuatu. Inilah blok "repeat forever". Apa saja di dalam blok ini
          akan terjadi selamanya di dalam permainan.
      2:
        text: Jadi, jika kita menginginkan aktor melakukan sesuatu berkali-kali tanpa
          mengharuskan pemain melakukan apa pun, kita akan meletakkan blok tersebut
          ke dalam blok "repeat forever". Dalam puzzle berikut ini, tujuan kita adalah
          membantu Anna berjalan naik dan turun terus-menerus. Mempelajari cara kerja
          perintah "repeat" akan sangat menghemat waktu ketika nantinya Anda membuat
          permainan sendiri.
    tutorial_puzzle_challenge:
      1:
        text: Ingin jadi apa ketika Anda sudah dewasa, Olivia? Astronaut. Tahukah
          Anda apa itu pemrogram komputer? Ya, hmm, tidak. Hmm menunggu apa? Saya
          tidak tahu pasti cara menjelaskannya, pemrograman komputer itu cukup sederhana.
          Bentuknya berupa rangkaian instruksi seperti resep, Anda harus mengikutinya
          langkah demi langkah untuk mendapatkan hasil akhir yang diinginkan.
      2:
        text: Saya bisa mengubah jumlah piksel, panjang garis, menggunakan menu dropdown
          ini. Berapa lagi panjangnya? Anda dapat melihat instruksinya lagi dengan
          melihat di tombol "run". Di sini saya menggunakan blok "move forward" dan
          saya akan memilih 100 piksel. Saya bisa menghapus blok dengan menariknya
          ke dalam toolbox atau keranjang sampah. Ayo kita letakkan kembali.
      3:
        text: Jalankan code dengan menekan "run". Wah, tidak berhasil! Saya akan menekan
          "reset" dan mencari masalahnya. Anda dapat mencoba puzzle sesuai keinginan
          atau melewati puzzle dan kembali lagi nanti. Pastikan saja mencoba sebaik-baiknya
          dan jangan menyerah. Ayo tambahkan "move forward" lagi. Masih belum berhasil
          juga. Saya bisa meletakkan blok di antara blok-blok lain.
      4:
        text: Ayo kita ambil blok "turn" dan meletakkannya di antara blok-blok "move
          forward". Belok kiri 45 derajat. Ayo jalankan lagi. Reset, run, luar biasa!
          Berikut puzzle lain lagi. Sesekali Anda diberi code pemula untuk menyelesaikan
          puzzle. Di sini saya harus menambahkan panjang dan derajat yang tepat.
      5:
        text: Kadang-kadang Anda tak sengaja membuang code pemula. Lantas apa yang
          Anda lakukan? Anda dapat menekan "clear/hapus" puzzle dan memulainya lagi.
          Saya akan menarik blok "number" ini ke area piksel yang berbeda. Pilih 100
          untuk piksel, 45 untuk derajat, dan 100 untuk piksel lagi. Luar biasa! Ini
          adalah lebah Code Studio. Saya harus menggerakkan lebah ke setiap bunga
          dan mengambil nektar.
      6:
        text: Bunga pertama berjarak tiga blok, jadi saya perlu tiga gerak maju. 1,
          2, 3. Lalu mengambil nektar, lalu mengambil nektar lagi. Aduh, tidak berhasil!
          Saya akan meletakkan blok "move forward" lain di antara blok-blok "get nectar"
          dan menjalankannya lagi. Yah, berhasil! Anda baru saja mempelajari cara
          menggunakan puzzle artis dan lebah Code Studio. Semoga berhasil di tantangan
          puzzle Code Studio.
    unplug1:
      1:
        text: Ingin jadi apa ketika Anda sudah dewasa, Olivia? Uhm, astronaut! Tahukah
          Anda apa itu pemrogram komputer? Ya, hmm, tidak. Hmm apa ya? Saya tidak
          tahu pasti cara menjelaskannya. Pemrograman komputer itu cukup sederhana.
          Bentuknya berupa rangkaian instruksi, seperti resep. Anda harus mengikutinya
          langkah demi langkah untuk mendapatkan hasil akhir yang diinginkan.
      2:
        text: Ilmu komputer merupakan cara memengaruhi dunia. Wujudnya bisa berupa
          video musik, permainan, mendeteksi apakah seseorang punya kaitan dengan
          orang lain atau tidak. Menemukan para teman. Anda bisa melakukan segala
          macam hal-hal gila yang bisa menyelamatkan nyawa. Anda harus menyelam, saya
          kira. Bagi saya, rasanya seperti kuas cat. Saya rasa pemrograman yang hebat
          itu tak jauh beda dengan seni yang hebat.
      3:
        text: Ketika saya pada akhirnya sedikit paham tentang pemrograman, dinding
          kosong itu pudar menjadi sederet pintu dan Anda membukanya dan kemudian
          Anda pasti mendapati di baliknya lorong lain yang sarat dengan deretan pintu.
          Pemrograman itu asyik dan mudah. Anda bisa melakukan apa pun sesuka hati.
          Terakhr, Anda mulai membuka pintu secukupnya agar cahaya masuk. Bagi saya,
          program yang jadi itu seperti struktur berisi cahaya. Semua sudut kamar
          jadi terang. Jumlah orang yang bisa Anda sentuh dan interaksi tak pernah
          terbayangkan di dunia nyata.
      4:
        text: Pelajaran pertama kita dalam serial ini adalah tentang pengertian ilmu
          komputer, tugas ilmuwan komputer, dan cara agar Anda bisa lebih bertanggung
          jawab dalam menggunakan teknologi. Pelajaran ini sangat penting tetapi sedikit
          sarat teks. Pada akhirnya, Anda harus membuat encoding khusus Anda sendiri
          menggunakan nama inisial. Aktivitas ini seru dan sangat menggugah karena
          binary merupakan salah satu hal yang terasa sangat teknis, tetapi setelah
          Anda memahaminya, rasanya seolah-olah Anda berbicara dalam bahasa rahasia.
    unplug2:
      1:
        text: Maksud dari pelajaran tentang pemikiran komputasional adalah mengajari
          Anda cara menangani masalah besar yang sulit dan memecahnya menjadi beberapa
          masalah yang lebih sederhana. Tujuan pelajaran ini adalah menulis sederet
          instruksi yang dapat diikuti seseorang untuk menggambar salah satu monster
          yang tercantum di paket pelajaran.
      2:
        text: 'Murid akan mengelompok jadi grup-grup untuk menulis instruksi dan kemudian
          saling bertukar instruksi ke grup lain yang harus menggambar monster. Grup-grup
          murid ini akan menulis instruksi menggunakan empat langkah pemikiran komputasional:
          dekomposisi, lokasi pola, abstraksi, dan algorithm.'
      3:
        text: Grup pertama akan mengurai (dekomposisi) tugas yang berarti menyusun
          rencana permainan. Lalu mereka mencari pola dari semua monster dalam katalog.
          Ketika menemukan perbedaan antarmonster, mereka membuat abstraksi atau menyingkirkan
          detailnya. Misalnya, satu monster dalam katalog memiliki mata vegeta dan
          lainnya mata sprite. Namun keduanya punya mata sehingga kita dapat menulis
          keterangan yang mengatakan monster punya mata kosong.
      4:
        text: Jadi, murid akan dapat menulis rangkaian instruksi, disebut algorithm,
          yang mendata bagian-bagian badan monster dengan ruang kosong yang berisi
          gaya ideal yang dikehendaki. Ini adalah rangkaian instruksi yang akan mereka
          alihkan ke murid-murid lain untuk membuat ulang monster mereka sendiri.
    unplug3:
      1:
        text: Dalam pemrograman kertas grafis, kita membantu menjelaskan cara kerja
          coding dengan mencoba membantu orang membuat ulang gambar hanya menggunakan
          panah dan coretan. Satu orang menerima gambar kecil di kertas grafis dan
          dia harus meniru gambarnya berbekal panah khusus dan mencoba mendeskripsikan
          cara membuat ulang gambar tersebut.
      2:
        text: 'Dalam aktivitas ini, satu-satunya simbol yang bisa Anda gunakan adalah:
          gerak satu kotak maju, satu kotak mundur, satu kotak naik, satu kotak turun,
          ubah ke warna berikutnya, dan isi kotak dengan warna. Setelah semuanya dicode,
          kita bisa menyerahkannya ke orang lain yang bisa membaca code dan mencoba
          membuat ulang gambarnya.'
    unplug4:
      1:
        text: Dalam pemrograman kertas grafis, kita membantu menjelaskan cara kerja
          coding dengan mencoba membantu orang membuat ulang gambar hanya menggunakan
          panah dan coretan. Satu orang menerima gambar kecil di kertas grafis dan
          dia harus meniru gambarnya berbekal panah khusus dan mencoba mendeskripsikan
          cara membuat ulang gambar tersebut.
      2:
        text: Pada paruh kedua aktivitas ini, kita bertanya kepada murid berapa banyak
          cara mereka bisa melipat secarik kertas untuk membuat enam belas persegi
          panjang yang identik. Lalu Anda mendiskusikan berapa banyak solusi yang
          bisa memberikan hasil akhir yang sama dan mengapa sebagian solusi lebih
          baik dalam situasi tertentu.
    unplug5:
      1:
        text: Dalam pemrograman kertas grafis, kita membantu menjelaskan cara kerja
          coding dengan mencoba membantu orang membuat ulang gambar hanya menggunakan
          panah dan coretan. Satu orang menerima gambar kecil di kertas grafis dan
          dia harus meniru gambarnya berbekal panah khusus dan mencoba mendeskripsikan
          cara membuat ulang gambar tersebut.
      2:
        text: Pada paruh kedua aktivitas ini, kita bertanya kepada murid berapa banyak
          cara mereka bisa melipat secarik kertas untuk membuat enam belas persegi
          panjang yang identik. Lalu Anda mendiskusikan berapa banyak solusi yang
          bisa memberikan hasil akhir yang sama dan mengapa sebagian solusi lebih
          baik dalam situasi tertentu.
    unplug6:
      1:
        text: Aktivitas ini disebut coding dengan kartu dan sangat bagus untuk segala
          usia. Seperti yang Anda pelajari dari "if statement" dalam pelajaran sebelumnya,
          selama Blockly, "if statement" memiliki elemen yang harus Anda evaluasi
          untuk mencari tahu benar atau salahnya. Itulah yang disebut conditional
          dan dapat digunakan dalam berbagai macam cara.
      2:
        text: 'Kita memanfaatkan itu dengan membuat program di kertas yang Anda jalankan
          menggunakan undian acak kartu bermain. Anda mungkin mendapat "if statement"
          yang menyatakan: jika kartu yang Anda tarik lebih besar dari 8, Anda dapat
          poin. Jika tidak, lawan Anda mendapat poin. Anda bisa membuatnya sesederhana
          atau sekompleks mungkin sesuka hati.'
    unplug7:
      1:
        text: Anda tahu caranya ketika mencermati lirik lagu, dan mereka mendefinisikan
          chorus di awal permulaan dan untuk sisa lagu, mereka hanya merujuk balik
          ke chorus? Itulah yang Anda sebut dengan function.
      2:
        text: Dalam pelajaran ini, kita menetapkan chorus pada awal lagu dan kemudian
          menyanyikan lagu tersebut dan mengulangnya, lalu kita memperhatikan bahwa
          murid di kelas tidak menyanyikan kata "chorus", mereka otomatis kembali
          ke atas ke lokasi penetapan chorus dan menyanyikan bagian itu. Kita menggunakan
          itu sebagai analogi yang bagus tentang cara memahami perbuatan suatu program
          ketika program itu menentukan dan memanggil suatu function.
      3:
        text: Kita menggunakan lagu populer, termasuk Old Macdonald untuk membicarakan
          cara memanggil chorus berkali-kali dan bagaimana chorus sesekali bisa berubah.
          Ketika Anda menyanyikan lagu seperti Old Macdonald, yang beberapa katanya
          berubah, itulah cara yang bagus untuk mengenalkan ide tentang parameter.
          Pelajari kata-kata tertentu berulang-ulang sehingga Anda dapat mengirim
          informasi ekstra ke function. Setelah kita yakin semua murid mendapatkannya,
          Anda bisa menggarap lagu populer sendiri dan memecahnya sendiri. Cari tahu
          apakah Anda dapat menebaknya bersama-sama.
    unplug8:
      1:
        text: Pelajaran kita tentang abstraksi menggunakan konsep madlib yang sudah
          dikenal, yaitu Anda pada dasarnya menyisipkan ruang kosong ke dalam cerita
          yang bisa diisi dengan berbagai macam kata. Kita mengambil ide itu, lalu
          menantang anak-anak untuk mencetuskan kata-kata mereka sendiri sebagai cerita,
          dan menjelaskan konsep abstraksi dengan sebenarnya.
      2:
        text: Intinya berbicara tentang function dan cara Anda memiliki function,
          seperti dalam Old Macdonald, ketika Anda memiliki struktur chorus, tetapi
          ada sesuatu yang kecil yang berubah dan Anda membuatkan abstraksi untuk
          hal kecil yang berubah tersebut dan Anda bisa memasukkan kata Anda sendiri
          ke dalamnya setiap saat. Namun terkadang ada tiga kata yang berubah sehingga
          Anda mengisikan ketiganya dengan tiga parameter, yang masih sangat membantu.
      3:
        text: Anda bisa memiliki satu function yang menangani beragam masalah. Sering
          kali orang menulis function yang berbeda untuk semua masalah tersebut, tanpa
          menyadari adanya satu perbedaan kecil saja. Seandainya mereka bisa menemukan
          satu cara untuk mengatasi perbedaan kecil ini, mereka bisa menggunakan lagi
          satu function itu berkali-kali, alih-alih membuat 14 function yang berbeda-beda.
    unplug9:
      1:
        text: Pemrograman relai merupakan pelajaran yang sangat asyik yang jauh lebih
          mudah dipahami daripada ilmu komputer. Kadang-kadang setiap murid merasa
          sedikit cemas dan Anda ingin membantu mereka mengatasi itu. Ini adalah cara
          yang bagus untuk menambahkan sedikit kegembiraan pada ilmu komputer.
      2:
        text: Anda membagi semua murid menjadi dua grup yang berdiri berjajar dan
          berlari gaya estafet. Anak pertama di setiap grup berlari ke sisi lain ruangan
          yang ada gambar kertas grafis dan secarik kertas kosong yang siap sedia.
          Kedua anak ini menulis langkah pertama membuat gambar, berlari balik ke
          baris mereka, mencolek pemain berikutnya yang berlari ke sisi ruangan untuk
          menulis langkah selanjutnya.
      3:
        text: Cara ini efektif untuk menyampaikan ide tentang debugging, perlunya
          memeriksa pekerjaan Anda sendiri, dan perlunya memeriksa hasil kerja orang
          lain sebelum Anda. Dengan cepat Anda akan paham betapa pentingnya berhati-hati
          dan cermat dalam melakukan coding ketika seluruh tim mengandalkan Anda.
    unplug10:
      1:
        text: Aktivitas ini menjelaskan cara kerja internet dengan cara yang mudah
          dipahami. Kami menjelaskan semua terminologi yang akan Anda butuhkan dengan
          kata-kata sederhana sehingga murid dapat membuat simulasi pengiriman pesan,
          seperti email.
      2:
        text: Murid akan menyampaikan pesan saat berpura-pura sebagai salah satu dari
          tiga metode transmisi. Internet nirkabel, DSL, atau serat optik. Murid yang
          mewakili wi-fi harus mengenakan pesan yang mereka kirimkan di kepala karena
          wifi besar kemungkinan akan menghilangkan sebagian informasi.
      3:
        text: Murid yang berpura-pura sebagai DSL atau kabel akan membawa pesan di
          punggung tangan karena kecil kemungkinan mereka akan menghilangkan informasi.
          Dan murid yang mewakili serat optik harus membawa pesan dengan kedua tangan.
          Aktivitas ini merupakan cara yang efektif untuk memahami sesuatu yang banyak
          kita gunakan sehari-hari.
    unplug11:
      1:
        text: Jadi, kini saatnya rehat sejenak dan mengevaluasi dengan perspektif
          burung rajawali terhadap semua tugas yang sudah Anda kerjakan dalam sembilan
          belas pelajaran ini. Inilah saat yang tepat untuk mengingatkan murid bahwa
          apa yang sudah mereka kerjakan adalah prestasi besar. Mereka sudah menyerap
          materi lebih besar dari pelajaran tersebut daripada sebagian besar orang
          dewasa tentang ilmu komputer.
      2:
        text: Diskusikan dengan seluruh kelas atau dalam grup-grup kecil tentang pelajaran
          favorit. Setelah Anda menengok kembali semua materi yang sudah dipelajari,
          di sinilah kreativitas murid Anda bisa bersinar. Pecah mereka menjadi grup-grup
          dan perintahkan mereka untuk membuat pelajaran tanpa komputer sendiri. Beri
          konsep kunci kepada setiap grup, seperti function atau algorithm, dan sediakan
          berbagai bahan kerajinan yang siap pakai. Minta setiap grup mempresentasikan
          aktivitas baru tanpa komputer ini atau bahkan siapkan hari lain untuk melakukan
          beberapa aktivitas hasil kreasi murid.
      3:
        text: Dari semua kru di Code.org, kami berharap Anda mendapatkan BANYAK keseruan
          selama kursus ini. Dan apakah cita-cita Anda membuat aplikasi baru terbaik,
          menggunakan pemrograman untuk membantu mengobati penyakit, atau sekadar
          ingin menjadi pemecah masalah yang andal, kursus ini adalah langkah pertama
          dalam mewujudkan cita-cita itu.
    starwars_intro:
      1:
        image: catatan/starwars_pengenalan_1.JPG
        text: Hi, Saya Kathleen Kennedy dan Saya produsen dari Star Wars, The Force
          Awakens. Hari ini Anda akan bekerja dengan salah satu bintang kami, BB-8.
          BB-8 adalah droid berbentuk bola. Segala sesuatu yang ia lakukan dan setiap
          gerakan yang dia buat dikendalikan oleh perangkat lunak komputer. Ilmu komputer
          berdampak pada setiap industri, dari pemasaran untuk perawatan kesehatan
          dalam film. Pada kenyataannya, ratusan insinyur komputer bekerja sama untuk
          membuat sebuah film seperti The Force Awakens.
      2:
        image: catatan/starwars_pengenalan_2.JPG
        text: Hi Saya Rachel Rose, Saya adalah engineer R&D senior di ILM dan Saya
          memimpin tim pengembangan animasi dan ciptaan. Dalam Film The Force Awakens,
          saya bertanggung jawab untuk membantu para seniman mengembangkan rig yang
          merupakan bagian dari karakter yang bergerak yang memungkinkan karakter
          terlihat sangat mudah dipercaya di sebuah galaksi yang jauh.
      3:
        image: catatan/starwars_pengenalan_3.JPG
        text: Pada jam berikutnya, kita akan membangun permainan Star Wars kita sendiri.
          Kami akan mengajarkan konsep-konsep dasar dalam pemrograman. Biasanya pemrograman
          adalah semua teks tetapi kita akan menggunakan blok di sini sehingga kita
          dapat melakukan drag dan drop untuk menulis program. Di balik itu, Anda
          masih membuat kode. Setelah mencoba dasar-dasar dengan blok, kita akan beralih
          ke JavaScript, salah satu bahasa pemrograman yang paling populer didalam
          website.
      4:
        image: catatan/starwars_pengenalan_4.JPG
        text: Untuk memulai, kita akan bekerjasama dengan Rey untuk memprogram BB-8
          agar berjalan untuk mengumpulkan semua bagian berkas. Layar Anda dibagi
          menjadi tiga bagian. Di sebelah kiri adalah Ruang Permainan Star Wars, dimana
          kode akan dijalankan. Petunjuk untuk setiap tingkat atau level ditulis di
          bawah ruang permainan.
      5:
        image: catatan/starwars_pengenalan_5.JPG
        text: Daerah ini tengah adalah toolbox dan masing-masing blok ini adalah perintah
          yang dapat mengerti BB-8.
      6:
        image: catatan/starwars_pengenalan_6.JPG
        text: Ruang putih di sebelah kanan disebut ruang kerja dan ini adalah di mana
          kita akan membangun program kita.
      7:
        image: catatan/starwars_pengenalan_7.JPG
        text: Jika Saya menyeret blok moveLeft(); ke ruang kerja kita dan menekan
          run, apa yang terjadi? BB-8 bergerak kiri satu blok pada grid.
      8:
        image: catatan/starwars_pengenalan_8.JPG
        text: Dan bagaimana jika saya ingin BB-8 untuk melakukan sesuatu setelah blok
          moveLeft();? Saya dapat menambahkan blok lain ke program kita. saya akan
          memilih blok moveUp(); dan saya akan menyeret nya dibawah blok moveLeft()
          saya; hingga cahayanya muncul. Lalu aku akan menjatuhkannya dan kedua blok
          akan menyatu bersama-sama.
      9:
        image: catatan/starwars_pengenalan_9.JPG
        text: Ketika saya menekan run lagi, BB-8 akan melakukan perintah yang disusun
          dari atas ke bawah pada ruang kerja kita. Jika Anda pernah ingin menghapus
          blok, hapus saja dari susunan dan drag atau tarik kembali ke dalam kotak
          alat.
      10:
        image: catatan/starwars_pengenalan_10.JPG
        text: Setelah Anda bisa menekan run, Anda juga dapat menekan tombol reset
          untuk mengembalikan BB-8 kembali ke awal. Sekarang mari kita lakukan kebalikannya!
    starwars_typing:
      1:
        image: catatan/starwars_mengetik_1.JPG
        text: Di dalam blok kami telah menggunakanperintah JavaScript. JavaScript
          adalah bahasa pemrograman paling populer untuk pengembang profesional saat
          ini. Blok adalah cara yang bagus untuk memulai belajar koding dan pada kenyataannya,
          Universitas tekenal seperti Harvard dan Berkeley mulai mengajar dengan menggunakan
          cara ini. Tetapi setelah kita belajar dasar-dasar, engineer menulis kode
          dengan mengetik karena hal ini memungkinkan kita untuk melakukannya lebih
          cepat dan mudah.
      2:
        image: catatan/starwars_mengetik_2.JPG
        text: Kita dapat mengetik ratusan perintah tanpa harus mencarinya di toolbox
          atau menyeretnya keluar. Karena pelajaran mengetik Anda mungkin lebih lambat
          pada awalnya tapi kami ingin Anda mencobanya dulu.
      3:
        image: catatan/starwars_mengetik_3.JPG
        text: Di sudut kanan atas ruang kerja, Anda dapat mengklik tombol "show text"
          di sembarang puzzle untuk beralih dari blok ke pengetikan code sebagai teks.
      4:
        image: catatan/starwars_mengetik_4.JPG
        text: Dalam pelajaran berikutnya, kita akan mulai mengondisikan Anda dalam
          mode "mengetik". Di sini Anda masih dapat menarik blok dari toolbox atau
          mengetik nama perintah. Saat mulai mengetik, Anda akan melihat kemungkinan
          nama-nama perintah di bawah lokasi Anda mengetik. Alih-alih mengetik seluruh
          nama perintah, Anda bisa memilih salah satunya agar bergerak lebih cepat.
          Dalam pekerjaan, saya menggunakan fitur "auto-complete" ini sepanjang waktu
          ketika menulis code.
      5:
        image: catatan/starwars_mengetik_5.JPG
        text: Ketika Anda mengetik code, komputer meminta ketelitian ekstra. Anda
          harus mengeja dan memberi huruf besar pada nama perintah secara tepat, termasuk
          tanda kurung dan titik koma. Kesalahan ketik yang kecil sekalipun membuat
          BB-8 tidak bisa memahami code sehingga tidak akan bisa bergerak.
      6:
        image: catatan/starwars_mengetik_6.JPG
        text: Ketika Anda melakukan kesalahan di baris, editor menandainya agar Anda
          dapat mencoba mengubah teks untuk memperbaikinya.
      7:
        image: catatan/starwars_mengetik_7.JPG
        text: Jika terjebak, Anda selalu dapat mengulang lagi dari awal dengan tombol
          "start over" dan bisa beralih kembali ke mode blok kapan saja dengan mengklik
          sudut kanan atas. Oke, mari coba mengetik! Dan jika Anda melakukan kesalahan,
          jangan frustrasi. Siapa pun perlu mencoba beberapa kali sampai benar.
    starwars_events:
      1:
        image: catatan/starwars_kejadian_1.JPG
        text: Halo, nama saya Charita Carter. Saya adalah produser kreatif senior
          di Walt Disney Imagineering. Saya bertanggung jawab memimpin tim yang memproduksi
          beragam atraksi yang bisa ditonton oleh para tamu. Kami selalu mencari cara-cara
          untuk menyempurnakan dan meningkatkan pengalaman para tamu, dan teknologi
          menjadi inti semua itu.
      2:
        image: catatan/starwars_kejadian_2.JPG
        text: Selamat, Anda berhasil! Anda memprogram BB-8. Sekarang saya yakin kita
          sudah siap melakukan tugas lebih berat. Ayo kita lakukan. Sekarang Anda
          sudah mempelajari dasar-dasar pemrograman, kita mundur ke belakang untuk
          membuat permainan Anda sendiri, dengan R2-D2 dan C-3PO sebagai bintang.
      3:
        image: catatan/starwars_kejadian_3.JPG
        text: 'Untuk membuat sebuah permainan, kita harus belajar tentang sesuatu
          yang digunakan sehari-hari oleh semua pemrogram permainan: itulah yang disebut
          event. Event memberi tahu program Anda untuk mendengarkan atau menunggu
          kapan sesuatu terjadi dan ketika hal itu terjadi, program tersebut melakukan
          tindakan.'
      4:
        image: catatan/starwars_kejadian_4.JPG
        text: Beberapa contoh peristiwa seperti listening/mendengarkan sebuah mouse
          click/klik mouse, arrow button/tombol panah atau tap on the screen/Tekan
          pada layar.
      5:
        image: catatan/starwars_kejadian_5.JPG
        text: Di sini kita akan membuat R2-D2 bergerak naik untuk mengirimkan pesan
          ke pilot pemberontak dan kemudian turun ke pilot pemberontak yang lain.
          Kita akan menggunakan event untuk membuatnya bergerak, ketika pemain menggunakan
          tombol panah "up/down", atau tombol "up/down".
      6:
        image: catatan/starwars_kejadian_6.JPG
        text: Kita menggunakan blok event whenUp() dan menempelkan blok goUp() padanya.
          Ketika pemain menekan tombol panah "up", code yang melekat ke blok whenUp()
          dijalankan. Dan kita melakukan hal yang sama untuk membuat R2-D2 bergerak
          turun.
      7:
        image: catatan/starwars_kejadian_7.JPG
        text: Untuk melakukannya, kita akan menggunakan perintah bernama whenUp().
          Ketika Anda menarik perintah ini keluar dari toolbox, Anda akan melihat
          bahwa perintah tersebut berawalan dan berakhiran dengan tanda kurung kurawal,
          bukan titik koma. Ini memberi kita ruang untuk meletakkan perintah lain
          di tengahnya. Setiap perintah yang kita letakkan di dalam tanda kurung ini
          akan berjalan ketika pemain menekan panah "up".
      8:
        image: catatan/starwars_kejadian_8.JPG
        text: Kita ingin agar R2-D2 naik, jadi, mari kita letakkan blok goUp(); ke
          dalam perintah. Dan kita akan mengerjakan hal yang sama untuk membuat R2-D2
          turun.
      9:
        image: catatan/starwars_kejadian_9.JPG
        text: Nah, alih-alih menulis semua code untuk mengontrol droid terlebih dahulu,
          kita bisa membiarkan R2-D2 bereaksi terhadap event tekanan di tombol yang
          menggerakkanya di seputar layar. Langkah demi langkah, permainan Anda jadi
          makin interaktif.
    starwars_congrats:
      1:
        image: catatan/starwars_selamat_1.JPG
        text: Halo, nama saya Alice dan bertugas memimpin tim produk dan teknisi di
          Code.org dan saya menggarap tutorial yang sedang Anda mainkan dan ikuti
          saat ini.
      2:
        image: catatan/starwars_selamat_2.JPG
        text: Anda berhasil sampai di level terakhir. Selamat! Anda baru saja mempelajari
          semua yang perlu diketahui untuk membuat permainan Star Wars sendiri. Kini
          tidak ada instruksi lagi, tak ada puzzle untuk dipecahkan. Anda bisa membuat
          permainan sendiri dan memilih cara kerjanya. Satu hal lagi, Anda telah membuka
          suara dan perintah baru sehingga bisa leluasa berbuat hal-hal baru.
      3:
        image: catatan/starwars_selamat_3.JPG
        text: "[murid berbicara] Jadi kita membuat permainan yang pada dasarnya memberi
          poin ketika Anda menangkap babi gemuk. Triknya: setiap kali Anda mendapat
          babi gemuk, muncul storm trooper. Sebenarnya seluruh layar penuh dengan
          babi gemuk dan ketika Anda menyentuh 10.000, Anda menang."
      4:
        image: catatan/starwars_selamat_4.JPG
        text: "[pembicaraan murid-murid} Kami membuat sebuah permainan di mana anda
          tidak bisa kalah dan semua yang anda bunuh memberi anda poin. Untuk program
          saya, saya membalikkan kunci sehingga setiap kali anda mengklik, karakter
          anda akan turun dan saat anda melangkah ke kanan, karakter anda akan pindah
          ke kiri. Ini sungguh sulit! Terkadang anda hanya mendapatkan keuntungan,
          keuntungan yang tidak adil jika anda adalah seorang pengembang permainan
          tersebut. Apakah saya mengerti Ya!"
      5:
        image: catatan/starwars_selamat_5.JPG
        text: Ketika Anda selesai membuat permainan, pilih bagikan untuk mendapatkan
          tautan yang dapat dibagikan ke teman-teman atau mainkan permainan Anda di
          ponsel. Bersenang-senanglah!
    starwars_blocks_intro:
      1:
        image: catatan/starwars_pengenalan_blok_1.JPG
        text: 'Hai, saya Kathleen Kennedy dan saya adalah produser Star Wars: The
          Force Awakens. Hari ini anda akan bekerja sama dengan salah satu bintang
          kami, BB-8. BB-8 yang merupakan robot yang berbentuk bola. Semua yang dia
          lakukan dan setiap gerakan yang dia lakukan dikontrol oleh perangkat lunak
          komputer. Pengetahuan komputer berdampak pada setiap industri, mulai dari
          pemasaran hingga perawatan kesehatan hingga perfileman. Bahkan, ratusan
          insinyur komputer bekerja sama dalam membuat film seperti The Force Awakens.'
      2:
        image: catatan/starwars_pengenalan_blok_2.JPG
        text: Hi Saya Rachel Rose, Saya adalah engineer R&D senior di ILM dan Saya
          memimpin tim pengembangan animasi dan ciptaan. Dalam Film The Force Awakens,
          saya bertanggung jawab untuk membantu para seniman mengembangkan rig yang
          merupakan bagian dari karakter yang bergerak yang memungkinkan karakter
          terlihat sangat mudah dipercaya di sebuah galaksi yang jauh.
      3:
        image: catatan/starwars_pengenalan_blok_3.JPG
        text: Pada waktu berikutnya, kami akan membuat permainan Star Wars kami sendiri
          yang akan mengajarkan anda konsep-konsep dasar pemrograman. Biasanya, pemrograman
          adalah semua teks tapi kita akan menggunakan blok disini sehingga kami dapat
          menarik dan mengeluarkan untuk menulis program-program. Untuk memulainya,
          kami akan bekerja sama dengan Rey untuk memprogram BB-8 agara berjalan untuk
          mengumpulkan semua bagian-bagian potongan.
      4:
        image: catatan/starwars_pengenalan_blok_4.JPG
        text: Layar Anda terdiri dari tiga bagian. Di sisi kiri adalah ruang permainan
          Star Wars tempat code akan berjalan. Petunjuk untuk setiap level ditulis
          di bawah ruang permainan.
      5:
        image: catatan/starwars_pengenalan_blok_5.JPG
        text: Daerah ini tengah adalah toolbox dan masing-masing blok ini adalah perintah
          yang dapat mengerti BB-8.
      6:
        image: catatan/starwars_pengenalan_blok_6.JPG
        text: Ruang putih di sebelah kanan disebut ruang kerja dan ini adalah di mana
          kita akan membangun program kita.
      7:
        image: catatan/starwars_pengenalan_blok_7.JPG
        text: Jika saya menarik blok moveLeft(); ke ruang kerja kita, apa yang terjadi?
          BB-8 bergerak ke kiri satu blok di kisi-kisi.
      8:
        image: catatan/starwars_pengenalan_blok_8.JPG
        text: Dan bagaimana jika saya ingin BB-8 melakukan sesuatu setelah blok moveLeft();?
          Saya dapat menambahkan blok lain ke program. Saya akan memilih blok moveUp();
          dan menariknya ke bawah blok moveLeft(); hingga muncul garis bawah. Lalu
          saya akan melepasnya dan kedua blok akan saling menempel. Ketika saya menekan
          "run" lagi, BB-8 akan melakukan perintah yang ditumpuk dari atas ke bawah
          di ruang kerja kita.
      9:
        image: catatan/starwars_pengenalan_blok_9.JPG
        text: Jika Anda ingin menghapus sebuah blok, cukup geser blok dari tumpukan
          dan tarik kembali ke dalam toolbox.
      10:
        image: catatan/starwars_pengenalan_blok_10.JPG
        text: Setelah Anda bisa menekan run, Anda juga dapat menekan tombol reset
          untuk mengembalikan BB-8 kembali ke awal. Sekarang mari kita lakukan kebalikannya!
    starwars_blocks_events:
      1:
        image: catatan/starwars_kejadian_blok_1.JPG
        text: Halo, nama saya Charita Carter. Saya adalah produser kreatif senior
          di Walt Disney Imagineering. Saya bertanggung jawab memimpin tim yang memproduksi
          beragam atraksi yang bisa ditonton oleh para tamu. Kami selalu mencari cara-cara
          untuk menyempurnakan dan meningkatkan pengalaman para tamu, dan teknologi
          menjadi inti semua itu.
      2:
        image: catatan/starwars_kejadian_blok_2.JPG
        text: Selamat, Anda berhasil! Anda memprogram BB-8. Sekarang saya yakin kita
          sudah siap melakukan tugas lebih berat. Ayo kita lakukan. Sekarang Anda
          sudah mempelajari dasar-dasar pemrograman, kita mundur ke belakang untuk
          membuat permainan Anda sendiri, dengan R2-D2 dan C-3PO sebagai bintang.
      3:
        image: catatan/starwars_kejadian_blok_3.JPG
        text: 'Untuk membuat sebuah permainan, kita harus belajar tentang sesuatu
          yang digunakan sehari-hari oleh semua pemrogram permainan: itulah yang disebut
          event. Event memberi tahu program Anda untuk mendengarkan atau menunggu
          kapan sesuatu terjadi dan ketika hal itu terjadi, program tersebut melakukan
          tindakan.'
      4:
        image: catatan/starwars_kejadian_blok_4.JPG
        text: Beberapa contoh peristiwa seperti listening/mendengarkan sebuah mouse
          click/klik mouse, arrow button/tombol panah atau tap on the screen/Tekan
          pada layar.
      5:
        image: catatan/starwars_kejadian_blok_5.JPG
        text: Di sini kita akan membuat R2-D2 bergerak naik untuk mengirimkan pesan
          ke pilot pemberontak dan kemudian turun ke pilot pemberontak yang lain.
          Kita akan menggunakan event untuk membuatnya bergerak, ketika pemain menggunakan
          tombol panah "up/down", atau tombol "up/down".
      6:
        image: catatan/starwars_kejadian_blok_6.JPG
        text: Kita menggunakan blok event whenUp() dan menempelkan blok goUp() padanya.
          Ketika pemain menekan tombol panah "up", code yang melekat pada blok whenUp()
          pun berjalan. Dan kita akan melakukan hal yang sama untuk membuat R2-D2
          bergerak turun. Nah, alih-alih menulis semua code untuk mengontrol droid
          di depan, kita bisa membiarkan R2-D2 bereaksi terhadap event tekanan tombol
          yang menggerakkannya di seputar layar.
      7:
        image: catatan/starwars_kejadian_blok_7.JPG
        text: Langkah demi langkah, permainan Anda akan makin menarik.
    starwars_blocks_congrats:
      1:
        image: catatan/starwars_selamat_blok_1.JPG
        text: Halo, nama saya Alice dan bertugas memimpin tim produk dan teknisi di
          Code.org dan saya menggarap tutorial yang sedang Anda mainkan dan ikuti
          saat ini.
      2:
        image: catatan/starwars_selamat_blok_2.JPG
        text: Anda berhasil sampai di level terakhir. Selamat! Anda baru saja mempelajari
          semua yang perlu diketahui untuk membuat permainan Star Wars sendiri. Kini
          tidak ada instruksi lagi, tak ada puzzle untuk dipecahkan. Anda bisa membuat
          permainan sendiri dan memilih cara kerjanya. Satu hal lagi, Anda telah membuka
          suara dan perintah baru sehingga bisa leluasa berbuat hal-hal baru.
      3:
        text: "[murid berbicara] Jadi kita membuat permainan yang pada dasarnya memberi
          poin ketika Anda menangkap babi gemuk. Triknya: setiap kali Anda mendapat
          babi gemuk, muncul storm trooper. Sebenarnya seluruh layar penuh dengan
          babi gemuk dan ketika Anda menyentuh 10.000, Anda menang."
      4:
        text: "[pembicaraan murid-murid} Kami membuat sebuah permainan di mana anda
          tidak bisa kalah dan semua yang anda bunuh memberi anda poin. Untuk program
          saya, saya membalikkan kunci sehingga setiap kali anda mengklik, karakter
          anda akan turun dan saat anda melangkah ke kanan, karakter anda akan pindah
          ke kiri. Ini sungguh sulit! Terkadang anda hanya mendapatkan keuntungan,
          keuntungan yang tidak adil jika anda adalah seorang pengembang permainan
          tersebut. Apakah saya mengerti Ya!"
      5:
        text: Ketika Anda selesai membuat permainan, pilih bagikan untuk mendapatkan
          tautan yang dapat dibagikan ke teman-teman atau mainkan permainan Anda di
          ponsel. Bersenang-senanglah!
    mc_intro:
      1:
        text: Namaku Jens Bergensten tapi lebih dikenal sebagai Jeb. Saya adalah kepala
          pengembang Minecraft, di Mojang, Stockholm. Saya berusia sebelas atau mungkin
          dua belas tahun dan mulai memprogram karena ingin membuat permainan. Salah
          satu teman ayahku mengatakan bahwa untuk membuat permainan saya harus belajar
          cara memprogram. Begitulah saya memulainya. Saya suka merancang dan membayangkan
          arsitektur permainan. Itulah yang paling saya sukai di Minecraft.
      2:
        text: Selama satu jam berikutnya kamu akan mempelajari hal-hal dasar ilmu
          komputer dengan memprogram Alex atau Steve agar bergerak melalui potongan
          simulasi dunia Minecraft.
      3:
        text: Pemrograman biasa pada umumnya dibuat berupa teks tapi kini kita akan
          menggunakan Blockly, sebuah sistem yang menggunakan balok visual yang bisa
          kamu seret dan jatuhkan untuk menulis program. Dengan kata lain, kamu menciptakan
          kode Javascript.
      4:
        text: Konsep yang akan kamu pelajari adalah yang digunakan programer komputer
          setiap hari dan dasar ilmu komputer. Di Mojang, kami menggunakan konsep
          yang sama untuk membuat Minecraft berfungsi.
      5:
        text: Sebelum memulai, pilih karakter terlebih dahulu. Saya akan memilih Alex.
          Ayo kita buat kode untuk program yang akan membantunya bergerak mengitari
          layar.
      6:
        text: Layar kamu dibagi menjadi tiga bagian utama. Di sebelah kiri adalah
          area bermain Minecraft di mana program kamu akan dijalankan. Instruksi untuk
          tiap tingkat dituliskan di bawah ini.
      7:
        text: Area di tengah ini adalah kotak perkakas dan tiap balok merupakan perintah
          yang mengarahkan tindakan Alex.
      8:
        text: Ruang putih di sebelah kanan disebut area kerja dan di sinilah kita
          akan membuat program.
      9:
        text: Jika kita menyeret balok bergerak maju(); ke area kerja lalu mengeklik
          jalankan, apa yang akan terjadi? Alex bergerak maju satu kotak di atas petak.
      10:
        text: Dan bagaimana jika kita ingin melakukan sesuatu setelah dia bergerak
          maju satu kotak? Kita dapat menambahkan balok lain pada program. Saya akan
          memilih balok belokKanan(); dan menyeretnya ke bawah balok bergerakMaju();
          hingga garis jingga ini muncul. Lalu saya akan menjatuhkannya dan dua balok
          akan saling menempel. Ketika kita menekan jalankan lagi, Alex akan melakukan
          perintah yang ditumpuk dari atas ke bawah di area kerja kita.
      11:
        text: Jika kamu ingin menghapus sebuah balok, cukup seret balok dari tumpukan
          kembali ke kotak perkakas.
      12:
        text: 'Untuk membatalkan perubahan dan kembali ke awal level, gunakan tombol
          Mulai Lagi di sudut kanan atas area kerja. Satu hal lagi: kamu lihat segitiga
          kecil pada balok untuk berbelok? Setiap kali kamu melihatnya, itu berarti
          bahwa kamu bisa mengambil pilihan lain. Ayo kita coba membuat kode!'
    mc_repeat:
      1:
        text: Saya Lydia Winters, direktur merek Mojang dan kami membuat game kecil
          bernama Minecraft ini.
      2:
        text: Aktivitas favorit saya di Minecraft adalah menggali. Saya sangat mencintai
          petualangan di gua dan melihat apa yang saya temukan. Karena saya bukan
          programer, saya sangat bersemangat untuk mempelajari Minecraft dan benar-benar
          belajar membuat kode sendiri.
      3:
        text: Level terakhir memerlukan banyak balok bergerakMaju();. Akan lebih mudah
          jika kita cukup memberi tahu komputer untuk melakukan perintah bergerakMju();
          empat atau lima kali. Untung saja komputer benar-benar hebat dalam mengulang
          perintah menggunakan putaran pengulangan.
      4:
        text: Saat membuat Minecraft, kami menggunakan putaran pengulangan untuk menempatkan
          semua materi awal dalam membuat dunia baru. Terdapat beribu-ribu balok di
          dalamnya. Kami juga menggunakan putaran dalam hal-hal kecil, misalnya untuk
          menggerakkan kaki Alex ke depan dan ke belakang saat ia berjalan kaki. Putaran
          pengulangan merupakan bagian pemrograman yang hebat.
      5:
        text: Malam menjelang dan dalam beberapa level berikutnya kita akan membangun
          rumah agar tetap aman. Kita akan menggunakan balok pengulangan untuk melakukannya
          dengan sangat mudah.
      6:
        text: Untuk membuat dinding rumah, kita dapat meminta Alex untuk bergerakMaju();
          dan menempatkan papan empat kali atau kita dapat memintanya agar bergerakMaju();
          dan menempatkan satu papan lalu mengambil perintah ini dan menggunakan balok
          pengulangan agar Alex melakukan tindakan itu berkali-kali. Sekarang kita
          akan mengeklik balok pengulangan dan memberi tahu Alex berapa kali dia harus
          melakukan tindakan ini. Sekarang ayo kita bangun rumah sebelum malam datang!
          Selamat bersenang-senang.
    mc_if_statements:
      1:
        text: Sekarang kita akan belajar tentang pernyataan jika. Pernyataan jika
          adalah bagian mendasar untuk belajar memprogram. Mereka membantu komputer
          membuat keputusan.
      2:
        text: Semua komputer menggunakan pernyataan jika, termasuk ponsel saya. Misalnya,
          saat saya membuka ponsel, maka beberapa kode dijalankan yang mengatakan
          bahwa jika saya memasukkan kata sandi dengan benar, maka ponsel akan terbuka.
          Atau, menunjukkan pesan kesalahan.
      3:
        text: Anda dapat menggunakan pernyataan jika dalam kode untuk membuat Steve
          dan Alice menanggapi apa yang mereka lihat di dunia. Misalnya, jika ada
          batu di depan, mereka akan berbelok ke kiri. Atau berbelok ke kanan jika
          ada pohon di sana.
      4:
        text: Dalam hal ini, tentu saja kita tidak mau jatuh ke dalam lava. Mudah
          saja untuk merencanakan lava. Kita dapat melihatnya di layar. Tapi bagaimana
          dengan lava yang tidak dapat kita lihat di bawah batu?
      5:
        text: Setelah menggali batu, kita harus memeriksa apakah ada lava di tempat
          itu sebelum bergerak maju. Jika ada lava, kita harus memindahkan batu di
          depan karakter kita sebelum dapat bergerak maju. Dengan begitu kita dapat
          bergerak dengan aman. Saatnya menggali lebih banyak! Dan ingatlah untuk
          menggunakan pernyataan jika untuk memperhatikan langkahmu.
    mc_congrats_share:
      1:
        text: Selamat! Anda baru saja mempelajari balok pembangunan dasar menurut
          ilmu komputer.
      2:
        text: Sekarang kamu dapat menggunakan balok ini untuk membangun kreasimu sendiri.
          Tidak ada lagi instruksi dan puzzle yang harus dipecahkan. Anda bisa membangun
          apa saja yang kamu inginkan. Anda harus memilih.
      3:
        text: "[siswa berkata] Ini sungguhan. Cukur. Aku membuat huruf L dari obor.
          Aku membuat huruf A dari papan pohon birch. Berhasil, berhasil. Kami membangun
          rumah dari wol!"
      4:
        text: Setelah selesai dengan kreasimu, pilih bagikan agar mendapatkan tautan
          untuk membagikannya dengan teman-teman kamu. Selamat bersenang-senang!
    mc_congrats_no_share:
      1:
        text: Selamat! Anda baru saja mempelajari balok pembangunan dasar menurut
          ilmu komputer.
      2:
        text: Sekarang kamu dapat menggunakan balok ini untuk membangun kreasimu sendiri.
          Tidak ada lagi instruksi dan puzzle yang harus dipecahkan. Anda bisa membangun
          apa saja yang kamu inginkan. Anda harus memilih.
      3:
        text: "[siswa berkata] Ini sungguhan. Cukur. Aku membuat huruf L dari obor.
          Aku membuat huruf A dari papan pohon birch. Berhasil, berhasil. Kami membangun
          rumah dari wol!"
      4:
        text: Sekarang kamu bisa membangun apa saja yang kamu inginkan. Selamat bersenang-senang!
    gumball_intro:
      1:
        text: Jika Anda ingin membuat permainan sendiri, caranya mudah sekali. Yang
          Anda butuhkan hanya sedikit dasar-dasar pemrograman dan Anda pun bisa mulai
          memainkan permainan buatan sendiri.
      2:
        text: Apakah Anda punya permainan video favorit? Kita akan melangkah lebih
          jauh untuk membuat permainan seperti itu di Play Lab. Permainan yang baik
          punya cerita dan setiap cerita ada aktornya. Aktor yang melakukan hal-hal
          seperti berbicara, bergerak, dan berinteraksi satu sama lain. Bahkan mungkin
          mencetak poin berdasarkan aturan permainan. Hari ini kita akan mempelajari
          cara melakukan itu semua, satu per satu, dengan aktor yang seru lalu membuat
          permainan dari nol yang bisa dibagikan dan dimainkan di ponsel.
      3:
        text: Hari ini kita akan mempelajari cara melakukan semua hal ini satu per
          satu dengan aktor yang seru lalu membuat permainan dari nol yang bisa dibagikan
          dan dimainkan di ponsel.
      4:
        text: Layar Anda dibagi menjadi 3 bagian utama. Di sebelah kiri adalah ruang
          permainan dimana program Anda akan berjalan. Petunjuk untuk setiap tingkat
          ditulis di bawah ini.
      5:
        text: Area tengah ini adalah toolbox dan masing-masing blok ini berupa sepotong
          code.
      6:
        text: Ruang putih di sebelah kanan disebut area kerja dan di sinilah kita
          akan membuat program.
      7:
        text: Untuk memulai, Anda harus hubungkan blok anda ke blok "when run" / "ketika
          menjalankan" yang bewarna oranye. Anda dapat menghubungkan beberapa blok
          bersama-sama dengan menyeret mereka sampai Anda melihat garis kuning, dan
          kemudian mereka akan merampas bersama-sama.
      8:
        text: Dalam puzzle pertama ini, kita akan membuat aktornya mengucapkan sesuatu
          dengan menghubungkan blok "say" ke blok "when run" dan mengetikkan pesan
          Anda. Setelah blok sudah siap, tekan tombol "run" untuk melihat hasil program
          Anda.
      9:
        text: Mulai dan pada akhirnya Anda akan dapat membuat permainan sendiri dengan
          semua jenis pemain yang dapat berinteraksi, mencetak poin, atau melempar
          benda-benda, atau bahkan lenyap satu sama lain. Semuanya terserah Anda!
    gumball_events:
      1:
        text: Sekarang, kita akan belajar tentang sesuatu yang digunakan sehari-hari
          oleh semua pemrogram permainan. Itulah yang disebut event. Sebuah event
          memberi tahu program Anda untuk mendengarkan kapan sesuatu terjadi dan ketika
          hal itu terjadi, program Anda melakukan tindakan.
      2:
        text: Beberapa contoh event adalah mendengarkan sebuah klik mouse, tombol
          panah naik atau turun, atau bahkan ketukan pada layar.
      3:
        text: Di sini, kita akan membuat aktor mengatakan sesuatu ketika pemain mengkliknya.
          Kita akan menggunakan blok "when clicked"  dan menempelkan blok "say" padanya.
          Ketika pemain mengklik, semua blok yang ditempelkan pada blok ini akan dilaksanakan.
      4:
        text: Ada juga blok "when arrow". Jika Anda mengaitkan blok "move" ke blok
          "when arrow", Anda dapat mulai menggerakkan aktor ke atas, bawah, kiri,
          kanan, dengan tombol panah. Pelan-pelan permainan Anda akan semakin interaktif.
    gumball_repeat:
      1:
        text: Bisakah Anda membayangkan diri harus mengulang sesuatu selama-lamanya?
          Semoga itu tidak terjadi karena komputer sangat mahir mengulang sesuatu.
      2:
        text: Ini adalah blok "repeat forever". Apa saja yang ada dalam blok ini akan
          terjadi selamanya dalam permainan. Jika kita menginginkan aktor melakukan
          sesuatu berulang-ulang tanpa mengharuskan pemain melakukan apa pun, kita
          meletakkan blok tersebut ke dalam blok "repeat forever".
      3:
        text: Dalam puzzle berikutnya, tujuan kita adalah membantu aktor melakukan
          pekerjaan terus-menerus. Belajar cara kerja perintah "repeat" akan banyak
          menghemat waktu ketika nanti Anda membuat permainan sendiri.
    iceage_intro:
      1:
        text: Jika Anda ingin membuat permainan sendiri, caranya mudah sekali. Yang
          Anda butuhkan hanya sedikit dasar-dasar pemrograman dan Anda pun bisa mulai
          memainkan permainan buatan sendiri.
      2:
        text: Apakah Anda punya permainan video favorit? Kita akan melangkah lebih
          jauh untuk membuat permainan seperti itu di Play Lab. Permainan yang baik
          punya cerita dan setiap cerita ada aktornya. Aktor yang melakukan hal-hal
          seperti berbicara, bergerak, dan berinteraksi satu sama lain. Bahkan mungkin
          mencetak poin berdasarkan aturan permainan. Hari ini kita akan mempelajari
          cara melakukan itu semua, satu per satu, dengan aktor yang seru lalu membuat
          permainan dari nol yang bisa dibagikan dan dimainkan di ponsel.
      3:
        text: Hari ini kita akan mempelajari cara melakukan semua hal ini satu per
          satu dengan aktor yang seru lalu membuat permainan dari nol yang bisa dibagikan
          dan dimainkan di ponsel.
      4:
        text: Layar Anda dibagi menjadi 3 bagian utama. Di sebelah kiri adalah ruang
          permainan dimana program Anda akan berjalan. Petunjuk untuk setiap tingkat
          ditulis di bawah ini.
      5:
        text: Area tengah ini adalah toolbox dan masing-masing blok ini berupa sepotong
          code.
      6:
        text: Ruang putih di sebelah kanan disebut area kerja dan di sinilah kita
          akan membuat program.
      7:
        text: Untuk memulai, Anda harus hubungkan blok anda ke blok "when run" / "ketika
          menjalankan" yang bewarna oranye. Anda dapat menghubungkan beberapa blok
          bersama-sama dengan menyeret mereka sampai Anda melihat garis kuning, dan
          kemudian mereka akan merampas bersama-sama.
      8:
        text: Dalam puzzle pertama ini, kita akan membuat aktornya mengucapkan sesuatu
          dengan menghubungkan blok "say" ke blok "when run" dan mengetikkan pesan
          Anda. Setelah blok sudah siap, tekan tombol "run" untuk melihat hasil program
          Anda.
      9:
        text: Mulai dan pada akhirnya Anda akan dapat membuat permainan sendiri dengan
          semua jenis pemain yang dapat berinteraksi, mencetak poin, atau melempar
          benda-benda, atau bahkan lenyap satu sama lain. Semuanya terserah Anda!
    iceage_events:
      1:
        text: Sekarang, kita akan belajar tentang sesuatu yang digunakan sehari-hari
          oleh semua pemrogram permainan. Itulah yang disebut event. Sebuah event
          memberi tahu program Anda untuk mendengarkan kapan sesuatu terjadi dan ketika
          hal itu terjadi, program Anda melakukan tindakan.
      2:
        text: Beberapa contoh event adalah mendengarkan sebuah klik mouse, tombol
          panah naik atau turun, atau bahkan ketukan pada layar.
      3:
        text: Di sini, kita akan membuat aktor mengatakan sesuatu ketika pemain mengkliknya.
          Kita akan menggunakan blok "when clicked"  dan menempelkan blok "say" padanya.
          Ketika pemain mengklik, semua blok yang ditempelkan pada blok ini akan dilaksanakan.
      4:
        text: Ada juga blok "when arrow". Jika Anda mengaitkan blok "move" ke blok
          "when arrow", Anda dapat mulai menggerakkan aktor ke atas, bawah, kiri,
          kanan, dengan tombol panah. Pelan-pelan permainan Anda akan semakin interaktif.
    iceage_repeat:
      1:
        text: Bisakah Anda membayangkan diri harus mengulang sesuatu selama-lamanya?
          Semoga itu tidak terjadi karena komputer sangat mahir mengulang sesuatu.
      2:
        text: Ini adalah blok "repeat forever". Apa saja yang ada dalam blok ini akan
          terjadi selamanya dalam permainan. Jika kita menginginkan aktor melakukan
          sesuatu berulang-ulang tanpa mengharuskan pemain melakukan apa pun, kita
          meletakkan blok tersebut ke dalam blok "repeat forever".
      3:
        text: Dalam puzzle berikutnya, tujuan kita adalah membantu aktor melakukan
          pekerjaan terus-menerus. Belajar cara kerja perintah "repeat" akan banyak
          menghemat waktu ketika nanti Anda membuat permainan sendiri.
    mc_2016_intro:
      1:
        text: Hai, nama saya Jens dan saya adalah seorang perancang kreatif terkemuka
          dari Minecraft. Pada jam berikutnya, anda akan membuat permainan Minecraft
          anda sendiri. Ini terlihat seperti Minecraft tapi dunia telah berhenti.
          Domba tidak sedang bergerak, ayam tidak sedang bertelur, dan zombie hanya
          berdiri diam. Terserah anda untuk menambahkan kode tersebut untuk membuat
          karya dunia Minecraft.
      2:
        text: 'Saya Melissa dan saya adalah seorang peneliti pengguna di Minecraft.
          Yang sangat saya sukai adalah bagaimana orang-orang berpikir dan berinteraksi
          dengan teknologi sehingga pekerjaan ini adalah pekerjaan yang sempurna bagi
          saya untuk mengumpulkan teknik komputer dengan psikologi: bagaimana orang
          berpikir dan berperilaku.'
      3:
        text: Layar Anda akan tampak terbagi menjadi tiga bagian utama. 1) Di sisi
          kiri adalah permainan Minecraft. Saat ini dunia sedang beku, tetapi kita
          akan memperbaikinya dengan code.
      4:
        text: 2) Area tengah ini adalah toolbox. Setiap blok ini adalah perintah yang
          dapat dipahami oleh ayam, domba, dan makhluk Minecraft lainnya.
      5:
        text: 3) Ruang di sebelah kanan disebut ruang kerja dan di sinilah kita akan
          membuat program.
      6:
        text: Jika Anda lupa harus melakukan apa, instruksi untuk setiap level berada
          di sisi atas.
      7:
        text: Untuk memulai, kita akan memprogram ayam. Mari kita tarik perintah "move
          forward" ke ruang kerja. Ketika saya menekan "Jalankan", ayam maju selangkah.
          Untuk maju lagi, saya akan menarik blok "move forward" yang lain di bawah
          blok "move forward" yang pertama hingga muncul garis luar. Lalu saya melepasnya
          sehingga kedua blok terpasang jadi satu. Jika saya menekan "Jalankan" lagi,
          ayam berjalan dua langkah.
      8:
        text: Jika Anda ingin menghapus sebuah blok, cukup geser blok dari tumpukan
          dan tarik kembali ke toolbox.
      9:
        text: Setelah menekan "Jalankan", Anda selalu bisa menekan tombol "Reset"
          untuk mengatur ulang permainan dan memulai lagi dari nol. Sekarang giliran
          Anda untuk membuat versi Minecraft sendiri. Bersenang-senanglah!
    mc_2016_loops:
      1:
        text: Hai, saya Lisa. Saya seorang developer perangkat lunak di Minecraft
          dan mengerjakan beberapa binatang serta musuh dalam permainan. Salah satu
          binatang yang saya kerjakan adalah ocelot. Saya mengerjakan bagian ocelot
          yang memungkinkan Anda bisa memberi makan ocelot dengan ikan untuk menjinakkannya
          menjadi kucing Anda.
      2:
        text: Sebagai manusia, kita jadi sangat bosan jika harus melakukan hal yang
          sama berkali-kali tanpa henti. Namun sisi keren dari komputer adalah kemampuannya
          melakukan hal yang sama jutaan atau bahkan miliaran kali secara berurutan
          tanpa bosan. Pengulangan ini disebut loop dan setiap makhluk di Minecraft
          menggunakan loop.
      3:
        text: Sebelumnya, kami membawa ayam untuk bergerak melintasi layar tersebut
          namun kemudian dia berhenti. Di Minecraft, ayam-ayam itu berkeliaran selamanya.
          Mari kita gunakan loop "selamanya" dari kotak peralatan kami agar ayam kita
          tetap bergerak selamanya. Kekuatan loop akan menghemat banyak waktu dan
          membuka semua jenis pilihan-pilihan yang rapi saat anda membuat versi Minecraft
          anda sendiri.
    mc_2016_events:
      1:
        text: Di level berikutnya ini, Anda dapat memilih menjadi Steve atau Alex.
          Tekan tombol panah di keyboard untuk bergerak naik, turun, kiri, dan kanan.
          Sekarang Anda dapat bergerak mengelilingi level sesuka hati. Untuk menggunakan
          makhluk, cukup jalan ke arahnya, belok untuk menghadapnya, dan tekan spacebar.
      2:
        text: Jika Anda menggunakan layar sentuh, usap ke atas, bawah, kiri, dan kanan
          untuk bergerak berkeliling. Lalu ketuk permainan untuk menggunakan item
          di depan Anda.
      3:
        text: Namun apa yang terjadi ketika anda menggunakannya? Di Minecraft, domba
          melepaskan wolnya saat anda mengguntingnya, sapi-sapi melarikan diri saat
          anda memukulnya, dan tanaman merambat mendadak saat anda mendekati mereka.
          Reaksi ini terjadi berkat sesuatu yang disebut peristiwa-peristiwa. Peristiwa-peristiwa
          itu memberitahu program anda untuk mendengarkan atau menunggu kapan sesuatu
          terjadi. Dan bila itu terjadi, lakukanlah sebuah tindakan.
      4:
        text: Sejauh ini Anda sudah menggunakan satu event. Code yang Anda masukkan
          ke slot "when spawned" pun berjalan ketika makhluk Anda tercipta atau ketika
          permainan dimulai. Sepanjang beberapa level berikutnya, Anda akan memiliki
          slot event baru, seperti "when touched" yang berjalan ketika Anda menyentuh
          makhluk, atau "when used" ketika Anda menggunakan makhluk. Atau, jika Anda
          ingin zombinya lenyap ketika matahari terbit, letakkan itu ke dalam slot
          "when day"
    mc_2016_spawn:
      1:
        text: Dalam permainan, bertelur sama artinya dengan membuat. Di level ini,
          mari membuat zombi bertelur saat matahari tenggelam. Untuk melakukannya,
          kita akan menggunakan blok "when night".
      2:
        text: Karena kita menginginkan zombi jadi pada malam hari, kita akan menambahkan
          blok "spawn zombie" di bawah blok "when night". Tidak lama setelah jadi,
          setiap zombi akan menjalankan code yang Anda letakkan ke dalam slot event
          "when spawned" mereka. Bersenang-senanglah membuat zombi!
    mc_2016_congrats:
      1:
        text: Selamat! Anda sudah mempelajari cara menggunakan perintah ilmu komputer
          untuk menghidupkan dunia Minecraft. Kini Anda jadi developer. Anda telah
          membuka semua perintah dan melepas semua makhluk. Anda memilih peristiwa
          yang akan terjadi.
      2:
        text: Ketika Anda selesai membuat permainan, pilih bagikan untuk mendapatkan
          tautan yang bisa dibagikan ke teman atau memainkan permainan Anda di ponsel.
          Nikmatilah! Saya ingin sekali memainkan Minecraft buatan Anda.
    applab_intro_welcome:
      1:
        text: Nama saya Mei'lani. Saya sedang magang di code.org dan juga seorang
          siswa ilmu komputer. Saya suka ilmu komputer karena ilmu ini benar-benar
          kreatif. Saya harus menjadi pemecah masalah. Saya harus membuat segalanya
          berfungsi seperti yang saya ingini. Namun saya juga harus menjadi desainer.
          Saya harus jadi artis dan memilih segala sesuatu dari sisi kreatifnya.
      2:
        text: Membuat aplikasi sendiri itu mudah dengan App Lab! Entah Anda baru mengenal
          coding atau sudah punya pengalaman. App Lab adalah alat yang andal untuk
          membuat aplikasi baru dan membagikannya ke teman-teman.
      3:
        text: Ini adalah App Lab. Di sisi kiri adalah aplikasi Anda. Di sisi kanan
          adalah code yang akan menjalankan aplikasi itu. Anda membuat program dengan
          menarik blok dari toolbox. Untuk memulainya, Anda hanya perlu satu blok
          bernama 'setProperty'.
      4:
        text: Blok "set property" mengubah tampilan elemen di layar Anda. Seperti
          tombol, label, atau bahkan layar itu sendiri. Mula-mula Anda harus memutuskan
          elemen yang ingin diubah. Jika Anda mengarahkan kursor ke elemen dalam aplikasi,
          Anda dapat melihat nama atau ID di sini. Lalu pilih ID tersebut dari menu
          dropdown pertama.
      5:
        text: Elemen memiliki banyak properti yang dapat diubah seperti warna teks,
          warna latar belakang, atau ukuran font. Anda dapat melihat daftar lengkapnya
          dan memilih properti mana yang ingin diubah di menu dropdown kedua.
      6:
        text: Menu dropdown terakhir merupakan tempat untuk menuliskan nilai yang
          ingin Anda gunakan. Blok ini akan memberi saran kepada Anda. Namun Anda
          selalu dapat mengetik sendiri warna atau angka yang berbeda.
      7:
        text: Setelah selesai, blok membaca sesuatu yang mirip kalimat:'Set button1's
          background color to green.' Tekan "run" untuk melihat perubahan yang Anda
          buat dalam code. Jika Anda mengatur ulang, Anda dapat menarik lebih banyak
          blok untuk mengubah hal-hal lain menyangkut aplikasi Anda. Seperti teks!
      8:
        text: Untuk tutorial ini, kita akan bekerja dalam "block mode" tetapi App
          Lab juga mendukung pengerjaan dalam teks.
      9:
        text: Mana pun itu, Anda akan tetap memprogram dalam JavaScript, bahasa pemrograman
          web. Setiap level memiliki tujuan, instruksi, dan gambar objek yang hendak
          Anda buat.
      10:
        text: Jika Anda sampai terjebak, klik gambar ini, dan Anda akan ditunjukkan
          persis cara menyelesaikan level ini. Namun periksa dulu apakah Anda dapat
          melakukannya sendiri.
      11:
        text: Setelah Anda menyelesaikan tujuan untuk level ini, klik Finish untuk
          melanjutkan. Selesai sudah! Tekan tombol oranye "continue" untuk membuka
          level berikutnya dan mulai petualangan Anda dengan App Lab!
    applab_intro_events:
      1:
        text: Aplikasi itu keren banget karena jadi semacam awal mula bisnis Anda
          sendiri. Maksud saya, Anda harus merancang segalanya dari nol, Anda harus
          mengelola semuanya, dan Anda adalah pemilik hasil karya yang baru saja Anda
          buat dengan code ini.
      2:
        text: Sekarang Anda dapat mengubah tampilan aplikasi, ayo kita buat interaktif
          dengan menanggapi event! Event adalah tindakan pengguna, seperti mengklik
          tombol, menggulir menu, atau mengarahkan kursor ke gambar. Aplikasi interaktif
          membutuhkan cara untuk menanggapi event, seperti memutar suara ketika saya
          mengklik tombol ini. Untuk melakukannya di App Lab, Anda harus menggunakan
          blok baru bernama 'onEvent'.
      3:
        text: Program ini menyetel layar ke biru. Saya ingin layarnya berubah ke hijau
          ketika saya mengklik tombol ini. Pertama, saya harus menarik blok onEvent.
          Dengan kursor, saya tahu ID tombol adalah "bigButton" jadi saya akan pilih
          itu di menu drop-down pertama.
      4:
        text: Berikutnya saya akan memilih jenis event. Ada banyak sekali opsi yang
          dapat dipilih, tetapi untuk saat ini saya membiarkannya ke klik lama yang
          biasanya.
      5:
        text: 'Terakhir, saya akan menambahkan code ke dalam "on event" yang akan
          mengubah warna latar belakang layar. Anda dapat membaca blok ini seperti
          kalimat: "Pada saat tombol diklik, jalankan semua code ini."'
      6:
        text: Mari kita coba! Blok di luar "onEvent" masih langsung berjalan sehingga
          layar mulai biru.
      7:
        text: Dan ketika saya mengklik tombol besar, code di dalam onEvent pun berjalan
          dan layar berubah hijau.
      8:
        text: Jika Anda ingin mengubah lebih banyak hal setelah event, seperti teks
          di layar, cukup tambahkan code ke onEvent.
      9:
        text: Untuk membuat program Anda menanggapi event lebih banyak, tambahkan
          lebih banyak blok onEvent. Pastikan saja untuk tidak meletakkan blok tersebut
          ke dalam satu sama lain. Kini saatnya mencoba sendiri. Bersenang-senanglah!
    applab_intro_sounds:
      1:
        text: Berikutnya Anda akan belajar tentang penambahan gambar dan suara ke
          aplikasi. Mari kita mulai dengan memeriksa opsi suara.
      2:
        text: Di tool box, Anda akan menemukan blok baru bernama "playSound". Tariklah
          ke ruang kerja. Anda dapat memilih menghidupkan suara dengan mengklik "drop-down"
          lalu mengklik "Choose".
      3:
        text: Dari sini Anda dapat mengunggah file suara dari komputer, atau mencari
          suara dari perpustakaan audio. Perpustakaan audio memiliki berbagai kategori
          seperti instrumen, musik latar belakang, atau binatang.
      4:
        text: Setelah Anda mendapatkan suara yang diinginkan, klik "Choose". Ketika
          sudah berjalan, blok ini akan memutar suara yang Anda pilih.
      5:
        text: Untuk menambahkan gambar ke elemen, Anda cukup menggunakan blok setProperty.
          Pilih properti gambar di drop-down kedua
      6:
        text: Lalu pilih "Choose" dari menu drop down ketiga.
      7:
        text: Dari sini, Anda dapat mengunggah gambar dari komputer atau Anda dapat
          memerika perpustakaan ikon yang besar di galeri ikon.
      8:
        text: Kembali di mode code, Anda dapat menggunakan blok "setProperty" untuk
          mengubah warna ikon Anda. Setelah memilih gambar yang harus digunakan oleh
          ikon Anda, klik "Jalankan" untuk melihat tampilannya.
      9:
        text: Selesai sudah! Sekarang Anda dapat mulai menambahkan gambar dan suara
          ke aplikasi Anda dengan lebih seru dan dinamis lagi.
    applab_intro_designmode:
      1:
        text: Untuk membuat aplikasi sendiri, Anda harus memulai perancangan layar
          dan elemen dari nol. App Lab memudahkan cara melakukannya dengan Design
          Mode.
      2:
        text: Gunakan switch di bagian atas aplikasi Anda untuk membuka Design Mode.
      3:
        text: Anda dapat menambahkan elemen baru dengan menariknya ke layar. Anda
          dapat menggerakkannya berkeliling ke berbagai lokasi dan mengubah ukurannya
          dengan menariknya ke sudut kanan bawah.
      4:
        text: Untuk mengubah properti elemen, gunakan kontrol di sisi kanan. Misalnya,
          mudah sekali mengubah teks, warna, dan ukuran font tombol ini.
      5:
        text: Bila anda menambahkan sebuah unsur baru di layar anda, itu akan memberikan
          ID generik seperti tombol 1. Sebaiknya ubahlah ID tombol ini menjadi sesuatu
          yang lebih berarti seperti "Tombolkanan". Sehingga anda akan tahu yang mana
          saat anda menggunakan program tersebut.
      6:
        text: Jika Anda secara tak sengaja menambahkan elemen ke aplikasi, cukup tarik
          keluar atau tekan "delete".
      7:
        text: Anda dapat menambahkan layar yang benar-benar baru ke aplikasi dengan
          menarik masuk elemen layar
      8:
        text: Dari menu drop-down di atas, Anda dapat bolak-balik antarlayar yang
          Anda buat dengan cepat.
      9:
        text: Di dalam aplikasi, Anda perlu cara untuk beralih di antara semua layar
          ini, jadi blok setScreen telah ditambahkan ke toolbox. Gunakan "setScreen"
          di dalam blok "onEvent" untuk mengubah layar saat mengklik tombol.
      10:
        text: Dalam beberapa level berikutnya, Anda akan mengerjakan satu proyek.
          Pertama, Anda akan menambahkan tombol, lalu menambahkan layar baru, dan
          terakhir menulis code sehingga tombol beralih ke layar baru.
    applab_intro_share:
      1:
        text: Setelah mempelajari sebagian dasar-dasar App Lab seperti menambahkan
          tombol, suara, gambar, teks, dan layar baru, Anda dapat membuat semua jenis
          aplikasi.
      2:
        text: Di level berikutnya, Anda akan mendapati aplikasi yang baru saja selesai
          Anda buat. Dengan sedikit kreativitas, Anda dapat menyulap aplikasi ini
          menjadi kuis kepribadian untuk teman-teman, kartu ucapan yang dapat dibagikan
          ke keluarga, atau permainan petualangan yang bisa Anda pilih sendiri. Semua
          aplikasi ini hanyalah kombinasi keterampilan yang sudah Anda pelajari, dan
          saya berani taruh Anda bisa lebih kreatif lagi.
      3:
        text: Setelah aplikasi selesai dibuat, Anda dapat dengan mudah mengirimnya
          ke ponsel untuk melihat cara kerjanya. Cukup klik "Share" dan masukkan nomor
          ponsel di sini.
      4:
        text: Anda akan menerima pesan teks yang mempersilakan Anda membuka aplikasi
          seketika.
      5:
        text: Anda juga dapat membagikan tautan ke aplikasi lewat media sosial atau
          mempostingnya ke galeri umum code.org agar orang lain dapat bermain dan
          membagikannya.
      6:
        text: Anda baru mengupas kulit ari kemampuan App Lab. Fitur lengkap App Lab
          menampilkan interaksi pengguna yang lebih canggih, berbagai elemen layar
          baru, dan bahkan database bawaan sehingga Anda dapat dengan cepat membuat
          aplikasi berfitur lengkap. Di "code.org/applab", Anda akan mendapati tool
          lengkap dan ribuan ide jika Anda gigih belajar.
      7:
        text: Terima kasih sudah ikutan gabung. Ayo buat dan bagikan aplikasi pertama
          Anda, dan teruslah membuat aplikasi dengan App Lab!
    mc_2017_agent_intro:
      1:
        text: 'Stacy: Stampy, Lizzy, Preston - terima kasih sudah menyertai saya.
          Yang ingin saya tunjukkan kepada kalian persis ada di atas dataran tinggi
          meta ini. Saya rasa kalian akan menyukainya!'
      2:
        text: Tunggu sebentar - ada lubang di lintasan! (menjerit)
      3:
        text: 'Apakah semua baik-baik saja? Stampy: Ah, saya tahu masalahnya. Lihat!
          Ada lubang di lintasan. Stacy: Benarkah, Stampy? Lizzy: Mungkin kita perlu
          mengumpulkan blok untuk memperbaikinya. Preston: Ayo kita balapan. Siapa
          yang duluan sampai puncak akan menang. Stacy: Oke, bersedia, siap, YA! Oke,
          saya cuma mau mengumpulkan sedikit tembikar ini. Tunggu. Teman-teman, saya
          tak bisa menambang! Preston: Sama. Lizzy: Saya juga. Stacy: Oke, ini benar-benar
          aneh. Stampy, bisakah Anda menambang? Stampy: Tidak bisa! Stacy: Oke, semuanya
          tenang ya. Stampy: Apakah permainannya rusak? Stacy: Jika ya, bagaimana
          cara memperbaikinya? Lizzy: Saya tidak tahu. Stampy: Adakah yang tahu cara
          menulis code Minecraft?'
      4:
        text: "(mak jleb) Preston: Apa itu? Stampy: Saya belum pernah lihat sebelumnya.
          Lizzy: Begitu menggemaskan! Stacy: Apakah...apakah jinak? Preston: Oke,
          apa yang sedang terjadi? Harus ada yang kembali ke dunia nyata dan memperbaiki
          ini.  Semua: Bukan itu! Stacy: Jangan saya- (Hela napas.) Oke, saya saja."
      5:
        text: Oh, oke, hai, jadi saya ada di dunia nyata sekarang. Saya akan mencari
          kantor Minecraft.
      6:
        text: Namun saya pasti membutuhkan bantuan Anda. Mulai ikuti tutorial, mulai
          belajar cara mengcode, dan saya akan menyusul kaliansetel ah beberapa level,
          oke? Semoga berhasil! Saya rasa ini jalannya. Aduh! Kaktus! Saya baik-baik
          saja!
      7:
        text: Untuk menyelesaikan tantangan Hour of Code, Anda harus menulis code
          untuk memprogram agen. Anda akan bekerja sama dengan Agen untuk menyingkirkan
          rintangan di jalur agar Anda dapat memilih item yang dibutuhkan dalam perjalanan.
          Hanya Agen yang dapat meletakkan dan memecah blok, dan hanya Anda yang dapat
          mengumpulkan item. Layar Anda terdiri dari tiga bagian utama. Di sisi kiri
          adalah Minecraft.
      8:
        text: Area tengah adalah toolbox berisi perintah yang dapat dipahami oleh
          Agen.
      9:
        text: Dan di sisi kanan adalah ruang kerja. Di situlah Anda menumpuk perintah
          untuk membuat program untuk mengontrol Agen.
      10:
        text: Agen bisa berjalan, belok, dan mengaktifkan pelat tekanan. Dia juga
          bisa menghancurkan blok dan meletakkan blok. Ketika dia meletakkan blok
          seperti rel minecart ini, dia meletakkannya di bawah dirinya.
      11:
        text: Jika Anda lupa harus melakukan apa, instruksi untuk setiap level berada
          di sisi atas.
      12:
        text: Jika ingin mencoba lagi, Anda dapat menekan tombol "reset" biru untuk
          mengatur ulang semuanya ke posisi semula. Dan jika Anda perlu menghapus
          blok code, tariklah dari ruang kerja ke toolbox. Ingat untuk menekan "run"
          untuk menggerakkan Agen. Oke, maju terus dan coba beberapa level pertama.
          Semoga berhasil!
    mc_2017_repeat:
      1:
        text: 'Stampy: Saya bertanya-tanya Stacy sedang apa ya?'
      2:
        text: 'Stacy: Waah, saya rasa ada di tempat yang tepat. Ini menakjubkan!'
      3:
        text: Rasanya saya seperti kembali ke Minecraft! Halo. Apa kabar? Halo?
      4:
        text: 'Oh, ada creeper. Anda tidak membahayakan, kan? Katie: Stacy? Stacy:Hai,
          Katie? Katie: Ya, selamat datang di Minecraft!'
      5:
        text: 'Stacy: Ini luar biasa. Jadi Anda bekerja setiap hari di sini sebagai
          developer, kan? Katie: Yaah, asyik sekali. Saya adalah developer di tim
          marketplace Minecraft. Stacy: Berapa banyak bahasa coding yang Anda tahu?
          Katie: Sepanjang karier, saya mungkin sudah bekerja dengan belasan. Stacy:
          Belasan? Katie: Yah. Stacy: Nah, saya mau tanya nih, Anda pastinya tahu
          tentang sosok golem kecil yang menyebut dirinya, Agen? Katie: Kami menggunakan
          Agen untuk melakukan hal-hal yang tidak bisa dilakukan Steve atau Alex,
          seperti melintasi lava. Stacy: Baik, saya ingin tahu caranya mencode, dan
          mereka ingin tahu caranya mencode, jadi apa satu hal pertama yang perlu
          diketahui ketika sedang belajar?'
      6:
        text: 'Katie: Oke, Anda perlu mempelajari cara menggunakan loop. Loop adalah
          hal-hal yang ditulis developer untuk memberi perintah ke komputer yang bisa
          dijalankan berulang-ulang. Stacy: Oke paham, saya rasa ada beberapa rintangan
          yang muncul di level di depan, jadi langsung saja dan coba loop.'
      7:
        text: Di level berikutnya, Anda bisa menggunakan loop untuk menggerakkan Agen
          di sepanjang jalur. Tarik blok "repeat" ke ruang kerja dan letakkan blok
          "move forward" ke dalam blok "repeat". Langkah ini memberi tahu komputer
          untuk melakukan hal yang sama berkali-kali tanpa harus menarik seluruh tumpukan
          blok ke ruang kerja. Anda dapat memilih berapa kali mengulang dengan memasukkan
          angka ke blok "repeat".
      8:
        text: Anda dapat meletakkan perintah belok dan perkalian di blok "repeat"
          juga, tetapi sekarang coba gunakan "repeat" untuk menggerakkan Agen maju
          beberapa langkah. Ingat, jika Anda terjebak di puzzle, Anda selalu dapat
          menekan tombol atur ulang warna hijau dan mencoba lagi.
      9:
        text: 'Jika kalian berpikiran punya pekerjaan keren seperti Katie, maju terus
          dan klik tombol code tampilkan ketika menyelesaikan setiap level. Tombol
          ini akan menunjukkan code Javascript yang digunakan oleh orang seperti Katie
          ketika dia sedang memprogram Minecraft. Katie: Yaah, semoga sukses semuanya!'
    mc_2017_functions:
      1:
        text: 'Preston: Saya tidak sombong ya, tetapi saya cukup mahir melakukan parkour.
          Lizzy: Ayo tidur agar hari sudah siang saat Stacy kembali.'
      2:
        text: 'Stacy: Oke teman-teman, saya sudah kembali dari kantor Minecraft, dand
          saya yakin tahu cara memecahkan masalah yang muncul dalam permainan saya.
          Saya rasa bisa menggunakan function. Saya coba buka ini ya.'
      3:
        text: Jadi, function adalah sekumpulan instruksi spesifik untuk mengerjakan
          tugas tertentu, semacam resep. Di beberapa level berikutnya, Anda akan dapat
          mengakses function yang bisa digunakan untuk memecahkan puzzles.
      4:
        text: Cermati code dalam function saat berada di ruang kerja untuk melihat
          apa yang dilakukannya.
      5:
        text: Lalu, cari blok dengan nama tersebut di toolbox dan tariklah dari toolbox
          ke blok "when run".
      6:
        text: Ingat, Anda dapat menggunakan function yang sama setiap kali perlu menjalankan
          rangkaian instruksi yang sama untuk melakukan sesuatu, seperti membuat jembatan.
          Semoga berhasil, saya yakin Anda pasti bisa!
    mc_2017_congratulations:
      1:
        text: 'Preston: Selamat!'
      2:
        text: 'Lizzy: Selamat!'
      3:
        text: 'Stampy: Selamat, Anda berhasil!'
      4:
        text: 'Stacy: Selamat teman-teman, kalian benar-benar hebat! Nah, setelah
          menyelesaikan Hour of Code, kalian dapat mulai mencoding di Minecraft. Kalian
          sudah belajar tentang loop, function, dan tindakan yang dilakukan Agen perangkat
          lunak.'
      5:
        text: Kini saatnya level bermain bebas, dengan posisi Anda sebagai developer.
          Gunakan sisa waktu yang ada untuk menulis function Anda sendiri untuk mengeksplorasi,
          menambang, dan membuat.
      6:
        text: 'Anda dapat memasukkan code yang Anda tulis di level ini ke dalam dunia
          Minecraft di Minecraft: Edisi Pendidikan. Cukup klik ''Finish'' dan ikuti
          instruksi untuk mendapatkan tautan yang akan digunakan di dunia Anda untuk
          terus melakukan coding dengan Agen. Bersenang-senanglah, dan kerja yang
          bagus!'
      7:
        text: 'Stacy: Dan saya kembali! Oke, teman-teman, ini adalah Agen! Akan saya
          tunjukkan apa yang bisa dilakukannya. Lihat, dia melakukannya! Saya memerintahkannya
          membuat tangga dari blok-blok tembikar ini, jadi kita bisa menggunakan ini
          untuk keluar dari sini. Dan ingat teman-teman, ini bukan sekadar tangga.
          Saya bisa memerintahkan Agen melakukan apa pun yang saya inginkan, dan dia
          pasti melakukannya.'
      8:
        text: 'Stampy: Bagaimana Anda bisa melakukannya? Stacy: Mudah saja, sebenarnya.
          Saya cuma pakai code!'
    csd_concept_how_computers_work:
      1:
        text: 'Ke mana pun Anda berpaling, di mana-mana komputer mengubah dunia. Entah
          ada di desktop, di rumah, di saku, atau di mana pun tempat. Namun meskipun
          sebagian besar kita menggunakan teknologi revolusioner ini setiap hari,
          kita jarang bertanya: "Bagaimana cara kerja komputer?" Dalam serial ini,
          Anda akan belajar tentang cara kerja komputer yang sesungguhnya, dimulai
          dengan komponen dan elemen yang membentuk komputer itu sendiri. Lalu, Anda
          akan mempelajari cara merepresentasikan informasi di dalam komputer menggunakan
          sinyal-sinyal listrik kecil yang berkedip-kedip dalam kecepatan yang tak
          terukur di benak kita.'
      2:
        text: Setelah itu, Anda akan mempelajari cara komputer menggunakan sirkuit
          untuk melakukan semua tugas dari matematika sederhana hingga simulasi seluruh
          dunia maya. Berikutnya, Anda akan menyelam masuk dan mencermati berbagai
          komponen komputer yang memberi input, output, dan menympan semua informasi
          itu. Terakhir, Anda akan mempelajari apa itu code sebenarnya dan cara perangkat
          lunak mengontrol perangkat keras. Jadi, entah Anda penasaran dengan perangkat
          yang Anda gunakan sehari-hari ataukah Anda ingin merancang inovasi masa
          depan, langkah pertama adalah belajar tentang cara kerja komputer.
    csd_concept_computer:
      1:
        text: Nama saya May-Li Khoe, seorang desainer dan penemu. Jadi, beberapa karya
          desain saya lakukan di Apple, dan kini saya merancang produk untuk anak-anak
          agar proses belajar mereka di sekolah terasa lebih mudah. Pekerjaan saya
          yang lain meliputi DJ dan dansa.
      2:
        text: Komputer ada di mana-mana! Komputer ada di saku, di mobil, bahkan di
          genggaman tangan. Komputer bahkan ada di tas gendong Anda saat ini. Namun
          apakah yang menjadikan komputer itu komputer? Apa elemen pembentuk komputer
          itu sendiri? Dan bagaimana pula cara kerjanya?
      3:
        text: Hai, saya Nat! Saya adalah salah satu desainer asli Xbox. Saya sudah
          bekerja dengan komputer sejak usia tujuh tahun dan kini saya bekerja di
          dunia maya. Sebagai manusia, kita selalu membuat alat-alat untuk membantu
          memecahkan masalah. Peralatan seperti gerobak sorong, martil, atau mesin
          cetak, atau traktor-trailer.
      4:
        text: Semua temuan ini membantu meringankan kerja manual kita. Seiring waktu,
          orang mulai penasaran apakah mesin bisa dirancang dan dibuat untuk membantu
          pikiran kita, seperti memecahkan persamaan atau melacak bintang di langit.
          Alih-alih menggerakkan atau memanipulasi benda-benda fisik seperti tanah
          dan batu, mesin harus dirancang untuk memanipulasi informasi. Sewaktu para
          pelopor ilmu komputer mengeksplorasi cara merancang mesin berpikir, mereka
          sadar bahwa mesin harus melakukan empat tugas berbeda.
      5:
        text: Komputer pasti perlu mengambil input, menyimpan informasi, memprosesnya,
          dan kemudian mengeluarkan hasil atau output. Nah, mungkin kedengarannya
          sederhana, tetapi empat hal ini lazim di semua komputer. Itulah yang menjadikan
          komputer sebagai komputer.
      6:
        text: Komputer bermula sebagai kalkulator dasar, yang juga sudah luar biasa
          pada zamannya, dan hanya memanipulasi angka ketika itu. Namun kini kita
          bisa menggunakan komputer untuk saling berbicara, memutar permainan, mengontrol
          robot, dan melakukan banyak hal-hal gila yang bisa Anda bayangkan. Komputer
          modern sama sekali tidak mirip dengan mesin tua yang berat dan kaku itu,
          tetapi keduanya masih melakukan empat hal yang sama.
      7:
        text: Pertama, kita akan berbicara tentang input. Anda dapat memberi tahu
          komputer untuk melakukan tindakan tertentu pada keyboard, Anda bisa memberitahunya
          melakukan tindakan tertentu pada mouse, mikrofon, kamera. Semua input yang
          berbeda ini memberikan informasi ke komputer, yang lantas disimpan dalam
          memori.
      8:
        text: Prosesor komputer mengambil informasi dari memori. Prosesor memanipulasi
          informasi dan mengubahnya menggunakan algorithm, yang hanya berupa rangkaian
          perintah. Lalu prosesor mengirim kembali informasi yang sudah diolah untuk
          disimpan di memori lagi. Proses ini terus berlanjut sampai informasi yang
          diolah siap menjadi output.
      9:
        text: Cara komputer menghasilkan output informasi bergantung pada rancangan
          tugas komputer itu sendiri. Sebuah tampilan komputer bisa berupa teks, foto,
          video, atau permainan interaktif -- bahkan dunia maya! Output komputer bahkan
          mungkin meliputi sinyal untuk mengontrol robot.
      10:
        text: Dan siapa yang tahu tampilan komputer pada masa depan? Harapan saya
          adalah agar Anda ikut memutuskan seperti apa tampilan komputer masa depan.
          Namun dari semua jenis komputer, apa pun keragaman teknologi yang digunakan,
          komputer selalu melakukan empat hal yang sama itu. Komputer menerima informasi,
          menyimpannya sebagai data, memprosesnya, dan kemudian menghasilkan output.
    csd_concept_binary_data:
      1:
        text: Hai! Nama saya Limor Fried, seorang teknisi di Adafruit Industries.
          Dan di sinilah saya melakukan teknik rekayasa dan desain, dan saya mendesain
          sirkuit untuk busana, musik, dan teknologi.
      2:
        text: Nama saya Federico Gomez Suarez, seorang developer perangkat lunak untuk
          Microsoft Hack for Good. Saya berusaha menggunakan teknologi untuk membantu
          memecahkan sebagian masalah sosial besar zaman kita.
      3:
        text: Anda mungkin sudah mendengar bahwa komputer mengolah satu dan nol. Namun
          hampir tak seorang pun di dunia ini berhubungan langsung dengan satu dan
          nol ini. Namun satu dan nol berperan besar terhadap cara kerja internal
          komputer.
      4:
        text: Di dalam komputer ada kabel listrik dan sirkuit yang membawa semua informasi
          di dalam komputer. Bagaimana Anda menyimpan atau merepresentasikan informasi
          menggunakan listrik?
      5:
        text: Baik, jika ada satu kawat yang dialiri listrik, sinyalnya bisa "on"
          atau "off". Pilihannya memang tidak banyak, tetapi jadi langkah awal yang
          sangat penting. Dengan satu kawat, kita bisa merepresentasikan ya atau tidak,
          benar atau salah, satu atau nol, atau apa saja yang hanya punya dua opsi.
          Kondisi kawat tunggal yang "on/off" ini disebut bit, dan merupakan potongan
          informasi terkecil yang dapat disimpan oleh komputer.
      6:
        text: 'Jika Anda menggunakan lebih banyak kawat, Anda mendapat bit lebih banyak:
          satu dan nol lebih banyak. Berbekal bit lebih banyak, Anda dapat merepresentasikan
          informasi lebih kompleks. Namun untuk memahami itu, kita perlu belajar tentang
          sesuatu yang disebut sistem bilangan biner.'
      7:
        text: 'Dalam sistem bilangan desimal, ada sepuluh digit dari nol hingga sembilan,
          dan begitulah cara kita belajar berhitung. Dalam sistem bilangan binary,
          hanya ada digit: nol dan satu. Dengan dua digit ini, kita dapat menghitung
          hingga sembarang angka.'
      8:
        text: Berikut ini caranya. Dalam sistem bilangan desimal yang sudah kita kenal,
          setiap posisi dalam bilangan memiliki nilai yang berbeda. Ada posisi 1,
          posisi 10, posisi 100, dan seterusnya. Sebagai contoh, 9 dalam posisi 100
          adalah 900. Dalam binary, setiap posisi juga mengandung nilai. Tetapi bukannya
          mengalikan dengan 10, kita justru mengalikannya dengan 2. Jadi, ada posisi
          1, posisi 2, posisi 4, posisi 8, dan seterusnya. Sebagai contoh, angka 9
          dalam binary adalah 1001. Untuk menghitung nilai, kita menambahkan 1 kali
          8, plus 0 kali 4, plus 0 kali 2, plus 1 kali 1. Hampir tidak ada orang melakukan
          operasi matematika ini karena komputer sudah melakukannya untuk kita. Yang
          penting adalah bahwa sembarang angka bisa direpresentasikan hanya dengan
          satu dan nol, atau oleh sekumpulan kawat yang berupa "on" atau "off". Semakin
          banyak kawat yang Anda gunakan, semakin besar angka yang dapat Anda simpan.
          Dengan 8 kawat, Anda dapat menyimpan angka antara 0 hingga 255. Itulah satu-satu
          yang 8. Dengan 32 kawat saja, Anda dapat menyimpan semua angka dari 0 hingga
          di atas 4 miliar. Dengan menggunakan sistem bilangan binary, Anda dapat
          merepresentasikan sembarang angka yang Anda suka.
      9:
        text: Namun bagaimana dengan jenis informasi yang lain? Seperti teks, gambar,
          atau suara? Ternyata semua itu juga bisa direpresentasikan dengan angka.
          Bayangkan semua huruf dalam abjad. Anda dapat menetapkan angka ke setiap
          huruf. A jadi 1, B jadi 2, dan seterusnya. Anda lantas bisa merepresentasikan
          setiap kata atau paragraf sebagai urutan angka. Dan seperti yang kita lihat,
          angka-angka ini bisa disimpan sebagai sinyal listrik "on" atau "off". Setiap
          kata yang Anda lihat di setiap halaman web atau ponsel direpresentasikan
          menggunakan sistem seperti ini.
      10:
        text: Sekarang, mari kita cermati foto, video, dan semua grafis yang Anda
          lihat di layar.
      11:
        text: Semua gambar ini terbuat dari titik renik yang disebut piksel, dan setiap
          piksel memiliki warna. Setiap warna bisa direpresentasikan dengan angka.
          Ketika Anda ingat bahwa gambar normal memiliki jutaan piksel, dan video
          normal menampilkan 30 gambar per detik, maka yang kita bicarakan di sini
          adalah tentang banyaknya data.
      12:
        text: Setiap suara pada dasarnya berupa rangkaian getaran di udara. Getaran
          bisa direpresentasikan secara grafis sebagai bentuk gelombang. Setiap titik
          di bentuk gelombang ini bisa direpresentasikan dengan bilangan. Dengan cara
          ini, setiap suara bisa diperinci menjadi rangkaian bilangan. Jika Anda menginginkan
          suara berkualitas lebih tinggi, Anda harus memilih audio 32-bit atau audio
          8-bit. Bit lebih banyak berarti rentang bilangan yang lebih tinggi.
      13:
        text: Ketika Anda menggunakan komputer untuk menulis code atau membuat aplikasi
          sendiri, Anda tidak berurusan langsung dengan satu dan nol. Namun Anda berhubungan
          dengan gambar atau suara atau video. Jadi, jika Anda ingin memahami cara
          kerja internal komputer, semuanya bermula dari satu dan nol sederhana ini
          beserta sinyal listrik di dalam sirkuit di belakangnya.
    csd_concept_circuits_logic:
      1:
        text: Salah satu sisi paling keren yang saya temukan tentang sirkuit adalah
          sirkuit bisa jadi bentuk seni jika saya punya ide kreatif, saya dapat mencetuskan
          ide kreatif itu menggunakan sirkuit. Jadi, jika Anda punya ide, Anda bisa
          menggunakan teknologi untuk mewujudkan ide tersebut.
      2:
        text: Setiap input atau output komputer sebenarnya merupakan jenis informasi,
          yang bisa direpresentasikan dengan sinyal listrik "on" atau "off" atau satu
          dan nol.
      3:
        text: Agar dapat memproses informasi yang masuk sebagai input, dan menghasilkan
          informasi sebagai output, komputer harus mengubah dan menggabungkan sinyal-sinyal
          input. Untuk melakukannya, komputer menggunakan jutaan komponen elektronik
          renik, yang disatukan untuk membentuk sirkuit.
      4:
        text: Mari kita pelajari lebih jauh tentang cara sirkuit memodifikasi dan
          memproses informasi yang direpresentasikan dalam satu dan nol. Ini adalah
          sirkuit yang luar biasa sederhana. Sirkuit ini menerima sinyal listrik,
          on atau off, dan membolak-baliknya. Intinya, jika sinyal yang masuk adalah
          1, sirkuit akan mengeluarkan 0, dan jika Anda memberi sirkuit 0, sirkuit
          akan menghasilkan 1. Sinyal yang masuk tidak sama dengan sinyal yang keluar,
          sehingga kita menyebut sirkuit ini dengan BUKAN.
      5:
        text: Sirkuit yang lebih kompleks bisa menerima banyak sinyal dan menggabungkannya,
          dan memberikan hasil yang berbeda. Dalam contoh ini, sirkuit akan menerima
          dua sinyal listrik, yang masing-masingnya bisa berupa 1 atau 0. Jika salah
          satu sinyal yang masuk adalah 0, maka hasilnya juga 0. Sirkuit ini hanya
          akan menghasilkan 1, jika sinyal pertama dan kedua sama-sama 1, maka kita
          menyebutnya dengan sirkuit DAN.
      6:
        text: Ada banyak sirkuit kecil seperti ini yang melakukan perhitungan logika
          sederhana. Dengan saling menghubungkan sirkuit kecil ini, kita bisa membuat
          sirkuit lebih kompleks yang melakukan perhitungan lebih kompleks.
      7:
        text: Misalnya, Anda bisa membuat sirkuit yang menambahkan 2 bit sekaligus
          yang disebut penambah. Sirkuit ini menerima 2 bit individual, masing-masingnya
          berupa 1 atau 0, dan menambahkan keduanya sekaligus untuk menghitung jumlah
          total. Jumlah total bisa berupa 0 tambah 0 sama dengan 0, 0 tambah 1 sama
          dengan 1, atau 1 tambah 1 sama dengan 2. Anda membutuhkan dua kawat yang
          muncul karena bisa mengolah hingga dua digit binary untuk merepresentasikan
          jumlah total. Setelah ada penambah tunggal untuk menambahkan dua bit informasi,
          Anda dapat meletakkan sekaligus beberapa sirkuit penambah ini secara berderet
          untuk menambahkan angka-angka yang jauh lebih besar sekaligus.
      8:
        text: Sebagai contoh, begini cara penambah 8-bit menambahkan angka 25 dan
          50. Setiap angka direpresentasikan menggunakan 8 bit, yang menghasilkan
          16 sinyal listrik berbeda yang masuk ke dalam sirkuit. Sirkuit untuk penambah
          8-bit ini memiliki banyak penambah mini di dalamnya, yang jika disatukan,
          membentuk jumlah seluruhnya.
      9:
        text: Sirkuit listrik yang berbeda dapat melakukan perhitungan sederhana yang
          lain seperti pengurangan atau perkalian. Bahkan semua pemrosesan informasi
          yang dilakukan oleh komputer Anda hanyalah berupa ribuan operasi kecil sederhana
          yang dijadikan satu. Setiap satu operasi yang dilakukan oleh komputer begitu
          sederhananya sehingga bisa dilakukan manusia, tetapi sirkuit di dalam komputer
          ini jauh lebih cepat.
      10:
        text: Kembali ke masa silam, sirkuit ini dulunya besar dan kaku, dan komponen
          penambah 8-bit bisa sebesar kulkas, dan alat ini perlu waktu bermenit-menit
          untuk melakukan perhitungan sederhana. Hari ini, sirkuit komputer berukuran
          super mini, dan jauh lebih cepat. Mengapa komputer yang lebih kecil juga
          lebih cepat? Jawabannya, karena semakin kecil sirkuit, semakin dekat jarak
          yang harus ditempuh oleh sinyal listrik. Listrik bergerak nyaris mendekati
          kecepatan cahaya, yang menjadi alasan mengapa sirkuit modern bisa melakukan
          miliaran perhitungan per detik.
      11:
        text: Jadi apakah anda sedang bermain game, merekam video, atau menjelajahi
          alam semesta, segala sesuatu yang mungkin anda bisa lakukan dengan teknologi
          yang membutuhkan banyak informasi untuk diproses sangat cepat. Di balik
          semua kompleksitas ini adalah banyak sirkuit kecil mungil yang mengubah
          sinyal biner menjadi situs web, video, musik, dan permainan Sirkuit ini
          bahkan dapat membantu kita memecahkan kode DNA untuk mendiagnosa dan mengobati
          penyakit. Jadi apa yang akan anda lakukan dengan semua sirkuit ini?
    csd_concept_memory_cpu_input_output:
      1:
        text: Hai, nama saya Madison Maxey. Saya punya perusahaan bernama Loomia,
          dan kami fokus membuat kain yang cerdas untuk baju dan produk lembut yang
          juga cerdas. Untuk urusan tekstil, batas kreativitas kami adalah langit.
      2:
        text: Nama saya Danielle Applestone, dan saya adalah CEO Othermachine Company.
          Kami membuat mesin frais desktop. Mesin frais menggunakan alat potong yang
          berputar dan menggeruskannya ke logam untuk membuat objek 3D.
      3:
        text: Di bawah permukaan, semua komputer mengerjakan empat hal dasar yang
          sama. Komputer memberi input informasi, menyimpan dan memproses informasi,
          lalu menghasilkan output informasi. Masing-masing dari empat hal ini dilakukan
          oleh bagian komputer yang berbeda.
      4:
        text: Ada perangkat input yang mengambil input dari dunia luar dan mengubahnya
          menjadi informasi binary. Ada memori untuk menyimpan informasi ini. Ada
          unit pemrosesan pusat atau CPU, tempat melakukan semua perhitungan. Dan,
          terakhir, ada perangkat output yang mengambil informasi tersebut dan mengubahnya
          menjadi output fisik.
      5:
        text: Mula-mula, mari bicara tentang input. Komputer bisa mengambil berbagai
          jenis input, seperti keyboard sebuah komputer, touchpad sebuah ponsel, kamera,
          mikrofon, atau GPS. Bahkan sensor di mobil, termostat, atau drone pun merupakan
          perangkat input yang berlainan.
      6:
        text: Sekarang mari kita cermati contoh sederhana cara input berjalan melewati
          komputer dan menjadi output. Ketika Anda menekan tombol di keyboard - katakanlah
          huruf "B". Keyboard mengubah huruf ini ke angka. Angka ini dikirim sebagai
          binary, satu dan nol, ke dalam komputer.
      7:
        text: Bermula dari angka ini, CPU menghitung cara menampilkan huruf "B" piksel
          demi piksel. CPU meminta instruksi langkah demi langkah dari memori, yang
          memberi tahu cara menggambar huruf "B". CPU menjalankan instruksi ini dan
          menyimpan hasilnya sebagai piksel dalam memori.
      8:
        text: Terakhir, informasi piksel ini dikirim dalam binary ke layar. Layar
          adalah perangkat output, yang mengubah sinyal binary menjadi cahaya dan
          warna renik yang membentuk tampilan yang Anda lihat.
      9:
        text: Ini semua terjadi begitu cepat rasanya sesaat, tapi untuk menampilkan
          setiap huruf komputer berjalan ribuan petunjuk, mulai dari saat jari anda
          menekan titik kunci.
      10:
        text: Dalam contoh tersebut, perangkat output adalah layar, tetapi ada berbagai
          jenis output yang mengambil sinyal binary dari komputer dan melakukan sesuatu
          di dunia fisik. Sebagai contoh, speaker akan memutar suara, dan printer
          3D akan mencetak objek. Perangkat output juga bisa mengontrol gerakan fisik
          seperti lengan robot, torak mobil, atau alat potong pada mesin frais yang
          dibuat oleh perusahaan saya. Jenis input dan output yang baru memungkinkan
          komputer berinteraksi dengan dunia dengan cara yang benar-benar baru. Interaksi
          ini semakin terbantu berkat perbaikan kecepatan dan ukuran memori dan CPU.
      11:
        text: Semakin kompleks tugas dan semakin banyak informasi yang berupa input
          atau output, semakin besar daya pemrosesan dan memori yang dibutuhkan oleh
          komputer. Pengetikan huruf di layar mungkin mudah, tetapi untuk mengerjakan
          grafis 3d yang kompleks atau merekam film resolusi tinggi, maka komputer
          modern sering memiliki beberapa CPU untuk memproses semua informasi tersebut
          dan banyak gigabyte memori untuk menyimpannya.
      12:
        text: 'Tak peduli apa pun yang ingin Anda lakukan dengan komputer, setiap
          tindakan pasti berupa: pemberian input informasi dari dunia fisik, penyimpanan
          dan pemrosesan informasi tersebut, dan pengembalian output ke dunia fisik
          lagi.'
    csd_concept_hardware_software:
      1:
        text: Hai, nama saya Erica Gomez, seorang manajer teknik di Amazon.com. Salah
          satu hal paling asyik bekerja di bidang teknologi, dan khususnya di Amazon,
          adalah kebolehan membawa anjing ke tempat kerja setiap hari. Pekerjaan saya
          adalah memastikan output perangkat lunak yang bagus sedangkan anjing saya
          tidur di meja kantor dan mendengkur keras-keras.
      2:
        text: 'Nama saya Jerome Holman, seorang Manajer Program di Team Xbox dan pekerjaan
          saya benar-benar mengasyikkan: Intinya merakit perangkat keras dan lunak
          untuk menghadirkan permainan yang Anda sukai di Xbox.'
      3:
        text: Ketika Anda mencermati isi perangkat komputasi, Anda melihat sekumpulan
          sirkuit, chip, kabel, speaker, plug, dan segala macam komponen lain. Ini
          adalah perangkat keras.
      4:
        text: Namun yang tidak Anda lihat adalah perangkat lunak. Perangkat lunak
          adalah semua program komputer, atau code, yang berjalan di mesin ini. Perangkat
          lunak bisa berupa apa saja dari aplikasi dan permainan hingga halaman web
          serta perangkat lunak ilmu data yang saya dan tim saya gunakan di Amazon
          untuk memahami pola perilaku pelanggan.
      5:
        text: Namun bagaimana cara perangkat keras dan perangkat lunak berinteraksi
          satu sama lain? Mari kita mulai dengan mencermati unit pemrosesan pusat
          komputer, atau CPU.
      6:
        text: CPU adalah chip master yang mengontrol semua bagian lain komputer. CPU
          harus melakukan berbagai hal sehingga isi di dalamnya berupa bagian yang
          lebih kecil dan sederhana yang menangani tugas spesifik. CPU memiliki sirkuit
          untuk melakukan operasi matematika dan logika sederhana. CPU punya sirkuit
          lain untuk mengirim dan menerima informasi ke dan dari bagian lain komputer.
      7:
        text: Keajaiban nyata CPU terletak pada caranya mengetahui sirkuit yang harus
          digunakan dan kapan menggunakannya. CPU menerima perintah sederhana yang
          memberitahukan sirkuit mana yang harus digunakan untuk melakukan tugas tertentu.
          Sebagai contoh, perintah "add" memberi tahu CPU untuk menggunakan sirkuit
          luarnya agar menghitung angka baru. Lalu perintah "store" memberi tahu CPU
          untuk menggunakan sirkuit lain agar menyimpan hasil tersebut ke dalam memori.
      8:
        text: Sama seperti angka, semua ini perintah sederhana dapat direpresentasikan
          dalam biner satu dan nol atau hidup dan mati sinyal-sinyal listrik. Biner
          perintah-perintah yang disimpan di memori dan CPU mengambil dan mengeksekusi
          mereka di urutan satu setelah yang lain. Urutan perintah ini, pada kenyataannya,
          sebuah program komputer yang sangat sederhana.
      9:
        text: Code binary adalah bentuk perangkat lunak paling dasar yang mengontrol
          semua perangkat keras sebuah komputer. Dewasa ini tak seorang pun menulis
          perangkat lunak dalam binary. Waktu yang dibutuhkan pasti selama-lamanya!
      10:
        text: Hari ini, perangkat lunak yang kita tulis lebih terlihat seperti ini
          (Python), atau ini (Ruby), atau bahkan ini (Blockly). Bahasa pemrograman
          seperti ini memudahkan Anda mengetikkan perintah yang mirip sekali dengan
          bahasa Inggris.
      11:
        text: Untuk menggambar sebuah persegi panjang pada layar, anda hanya perlu
          satu perintah. Ini tingkat tinggi perintah diubah menjadi ratusan, atau
          ribuan, biner sederhana perintah bahwa CPU mengerti. Perangkat lunak memberitahu
          CPU apa yang harus dilakukan, tetapi ketika anda sedang mendengarkan musik,
          dan penjelajah web, dan mengobrol dengan teman, komputer anda menjalankan
          beberapa buah perangkat lunak sekaligus.
      12:
        text: Jadi, bagaimana semua program ini bisa masuk ke komputer itu sendiri
          sejak awal, dan bagaimana CPU bisa menjalankan semuanya sekaligus? Untuk
          mencari tahu jawabannya, kita harus mempelajari sistem operasi.
      13:
        text: Sistem operasi komputer adalah program master yang mengelola cara perangkat
          lunak menggunakan perangkat keras komputer. Sebagai contoh, Saya ikut membuat
          sistem operasi Windows yang berjalan di sebagian besar PC (personal computer).
      14:
        text: Sistem operasi (OS) adalah sebuah program dengan kemampuan khusus yang
          dapat mengontrol perangkat lunak lain di komputer. OS memungkinkan Anda
          menginstal program-program baru dengan mengunggahnya ke memori komputer.
          OS memutuskan kapan program dijalankan oleh CPU (central processing unit),
          dan apakah program tersebut dapat mengakses perangkat input dan output komputer.
          Dan ketika Anda menganggap komputer menjalankan berbagai program sekaligus,
          faktanya, SO-lah yang dengan cepat beralih antarprogram untuk membagikan
          CPU tersebut dalam hitungan sepersekian detik.
      15:
        text: Ada sistem operasi (OS) yang mengelola perangkat lunak yang mengontrol
          perangkat keras komputer di dalam setiap komputer.
      16:
        text: Perangkat lunak adalah serangkaian perintah yang dibuat sederhana kode
          biner, dan kode biner adalah hanya sinyal-sinyal listrik yang mengalir melalui
          miliaran sirkuit kecil.
      17:
        text: Komputer berpotensi melakukan semua hal yang menakjubkan. Namun satu-satunya
          yang membuat komputer itu cerdas, atau bermanfaat, adalah Anda. Ketika Anda
          belajar mencode, Anda harus menetapkan masalah yang ingin dipecahkan, dan
          menulis perangkat lunak yang menyulap ide tersebut menjadi kenyataan.
    hoc_dance_warmup:
      1:
        text: 'Hour of Code | Pesta Dansa: Pemanasan'
      2:
        text: Hai! Nama saya Miral Kotb dan saya seorang pedansa, developer perangkat
          lunak, dan pembuat iLuminate.
      3:
        text: Jadi, ilmu komputer berkaitan dengan kreativitas dalam beragam cara.
          Bahkan tak terhitung. Maksud saya, setelah memiliki kemampuan menulis perangkat
          lunak, Anda dapat menyulap segala macam ide menjadi apa pun. Saya melakukannya
          dengan kostum bercahaya. Ada begitu banyak hal yang bisa dilakukan setelah
          Anda punya tool untuk menulis software, dan kemungkinan itu benar-benar
          tak terhingga.
      4:
        text: Selama satu jam berikutnya, Anda akan memulai ilmu komputer dengan memprogram
          pesta dansa sendiri! Kami sudah mengumpulkan beberapa musik tenar dan satu
          tim pedansa hebat sebagai objek permainan Anda.
      5:
        text: Anda akan menggunakan blok code untuk memilih pedansa yang berbeda-beda,
          mengubah gerakan mereka, dan membuat mereka menanggapi musik, dan menjadikan
          mereka interaktif.
      6:
        text: Anda akan melihat layar terbagi menjadi tiga bagian utama. Di sisi kiri
          adalah ruang bermain. Di sinilah pedansa akan muncul.
      7:
        text: Area tengah ini adalah toolbox. Blok-blok code baru akan tersedia di
          ruang ini sepanjang Anda mengikuti pelajaran.
      8:
        text: Ruang di sisi kanan adalah ruang kerja. Anda dapat menarik blok keluar
          dari toolbox dan masuk ke ruang kerja untuk membuat program.
      9:
        text: Instruksi untuk setiap level akan muncul di bagian atas layar. Jika
          Anda memerlukan tips, cukup klik bola lampu.
      10:
        text: Untuk memulai, mari membuat pedansa baru dengan blok merah ini. Pertama,
          tarik blok keluar dari toolbox dan pasang di bawah blok "setup" oranye ini.
          Pedansa ini berupa kucing yang bernama "my_first_dancer". Anda dapat mengubah
          namanya menjadi apa pun sesuai keinginan dengan mengklik di sini.
      11:
        text: Anda juga dapat mengubah lokasi munculnya pedansa di ruang bermain Anda
          dengan ini.
      12:
        text: Terdapat menu di atas ruang bermain untuk memilih musik. Ada banyak
          sekali pilihan lagu, jadi nikmati memilih lagu favorit Anda. Di bawah ruang
          bermain ada tombol "run". Ketika Anda menekan "run", Anda akan melihat pedansa
          dari program Anda muncul di ruang bermain dan musik akan berputar.
      13:
        text: Cobalah sendiri! Dan jika Anda merasa terjebak, tak apa-apa! Segera
          bangun dan bergeraklah, dan sebelum benar-benar sadar, Anda malah sudah
          membuat pesta dansa sendiri. Jadi, apa yang akan Anda buat?
    hoc_dance_events:
      1:
        text: 'Hour of Code | Pesta Dansa: Event'
      2:
        text: Saya Aloe Blacc. Saya seorang penyanyi, penulis lagu, dan entertainer.
          Saya rasa ilmu komputer sangat penting untuk dipelajari karena ilmu komputer
          adalah masa depan, dan saya rasa ilmu ini penting bagi orang yang ingin
          mengontrol teknologi yang secara benar-benar mengontrol hidup kita.
      3:
        text: Agar berbagai gerakan dansa terjadi sesuai dengan irama musiknya, Anda
          dapat menggunakan sesuatu yang disebut event. Event memberi tahu program
          untuk mendengarkan sesuatu yang akan terjadi, lalu bereaksi seketika.
      4:
        text: Beberapa contoh event adalah mendengarkan klik mouse, tombol panah,
          atau ketukan di layar. Kini event yang akan kita gunakan adalah mendengar
          perubahan pada lagu. Perubahan ini memicu pedansa untuk melakukan dansa
          baru.
      5:
        text: Pedansa profesional melatih koreografi mereka dengan menghitung ketukan
          lagu.
      6:
        text: Dalam musik, birama merujuk pada sejumlah ketukan tertentu. Di sebagian
          besar lagu pop, panjang birama itu empat ketukan.
      7:
        text: Agar pedansa Anda bebas berdansa, Anda membutuhkan blok event hijau.
          Blok event ini mengatakan, "setelah 4 birama".
      8:
        text: Jika Anda menarik blok "do forever" ungu keluar, Anda bisa memilih dansa
          untuk diperagakan oleh pedansa Anda. Karena ada di bawah blok event "after
          4 measures", pedansa akan menunggu sampai empat birama lagu sebelum mulai
          berdansa.
      9:
        text: Terus awasi penghitung birama di bagian atas area tampilan.
      10:
        text: Lihat dan dengarkan event yang akan memicu code dansa. Dan tepat sesuai
          aba-aba, pedansa mulai bergerak.
    hoc_dance_properties:
      1:
        text: 'Hour of Code | Pesta Dansa: Properti'
      2:
        text: Nama saya Maria, mahasiswi tahun ketiga di University of Washington
          dan seorang Teknisi Amazon Future.
      3:
        text: Saya suka ilmu komputer karena ilmu ini menggabungkan pemecahan masalah
          dengan pemikiran kritis dan setelah berjam-jam menekuni sesuatu, Anda bisa
          menghasilkan sesuatu yang benar-benar keren dan memuaskan.
      4:
        text: Sejauh ini Anda sudah berkesempatan bermain dengan beberapa jenis pedansa
          dan memprogram mereka untuk melakukan berbagai jenis gerakan dansa. Namun
          sebesarnya bagaimana cara kerja gerakan tersebut?
      5:
        text: Setiap gerakan dansa terdiri atas rangkaian gambar yang disebut frame.
          Setiap frame sedikit berbeda dengan frame sebelumnya. Ketika program Anda
          berjalan, komputer menampilkan frame secara berturut-turut. Begitu cepatnya
          frame muncul seolah-olah pedansanya bergerak. Inilah rahasia di balik semua
          animasi.
      6:
        text: Anda tidak hanya dapat mengubah gerakan pedansa, Anda juga dapat mengubah
          properti pedansa. Properti mendeskripsikan hal-hal seperti posisi pedansa
          di layar, ukuran pedansa, dan warna pedansa.
      7:
        text: Untuk mengubah properti pedansa, Anda akan menggunakan blok "set". Mari
          kita gunakan blok "set" untuk membuat pedansa kita tampak lebih kecil. Pertama,
          tarik blok "set" ke dalam program. Lalu, pilih pedansa yang ingin Anda ubah
          dan ketikkan ukuran yang akan muncul di layar.
      8:
        text: Ukuran penuh adalah 100. Jika Anda memilih angka lebih rendah, pedansa
          akan jadi lebih kecil. Semakin kecil pedansa, semakin jauh kelihatannya.
          Cara ini bagus untuk membuat pedansa cadangan.
      9:
        text: Dengan menggunakan blok "set", Anda juga dapat mengubah dimensi, rotasi,
          posisi, dan warna pedansa. Dengan mengolah properti ini, Anda dapat membuat
          semua jenis perubahan dan menghubungkannya ke beragam bagian lagu.
      10:
        text: Ingat, Anda hanya dapat mengatur properti pedansa yang sudah ada. Pastikan
          blok "set" muncul setelah blok "Make a new dancer". Jangan ragu-ragu bereksperimen
          menjadi kreatif, dan bersenang-senanglah.
    hoc_dance_congrats:
      1:
        text: 'Hour of Code | Pesta Dansa: Pestanya Dimulai!'
      2:
        text: Selamat! Anda baru saja mempelajari dasar-dasar ilmu komputer. Sekarang
          Anda dapat menggunakan blok-blok ini untuk membuat desain pesta dansa sendiri
          untuk dibagikan ke teman-teman.
      3:
        text: Jika Anda mencermati toolbox, Anda akan menemukan beberapa blok yang
          benar-benar baru yang belum terlihat sebelumnya. Misalnya, Anda dapat menggunakan
          blok "layout" untuk mengatur pedansa dengan berbagai cara di layar.
      4:
        text: Lihatlah ke sekeliling dan coba bereksperimen dengan berbagai blok dan
          fitur baru ini. Maukah Anda membuat koreografi dansa yang cermat untuk lagu
          favorit Anda?
      5:
        text: Atau berdansa dengan teman-teman Anda?
      6:
        text: Atau kegiatan lain yang benar-benar berbeda?
      7:
        text: Pada akhir tutorial, Anda dapat membagikan tautan ke hasil karya Anda
          kepada teman-teman.  Lepaskan imajinasi dan nikmati saja!
    mc_2018_intro:
      1:
        text: Halo! Anda datang tepat waktu. Selamat datang di Voyage Aquatic. Saya
          hampir memulai petualangan mencari harta karun bawah air yang tersembunyi
          dan saya senang sekali mendapatkan bantuan Anda. Siapa yang tahu makhluk
          yang akan kita jumpai di perairan penuh misteri ini? Rencananya kita akan
          bertemu dengan pemandu pertama di satu tempat di dek ini.
      2:
        text: Selamat datang, petualang! Untuk menyelesaikan Voyage Aquatic, Anda
          harus memecahkan serangkaian puzzle menggunakan code. Begini cara kerjanya.
          Layar Anda dibagi menjadi tiga bagian.
      3:
        text: Di sebelah kiri, Anda akan melihat dunia Minecraft.
      4:
        text: Area tengah adalah toolbok untuk mencari perintah coding.
      5:
        text: Dan area besar di sisi kanan adalah ruang kerja Anda. Di sinilah Anda
          dapat menumpuk perintah untuk membuat program dan mengontrol gerakan.
      6:
        text: Instruksi setiap level berada di atas halaman. Klik tanda plus untuk
          mengubah antara instruksi panjang dan pendek.
      7:
        text: Coba tarik blok dari toolbox ke ruang kerja, tumpuklah, dan kemudian
          klik tombol "run" untuk mengeksekusi perintah Anda.
      8:
        text: Anda mungkin harus mencoba beberapa kali sampai benar dan beberapa puzzle
          memang punya solusi lebih dari satu, jadi bereksperimenlah untuk mencari
          yang berhasil.
      9:
        text: Jika Anda ingin mencoba lagi, klik tombol atur ulang untuk kembali ke
          tempat semula.
      10:
        text: Jika Anda harus menghapus perintah, cukup tarik kembali blok dari ruang
          kerja ke toolbox. Ingat, klik "Jalankan" untuk melihat tampilan code dalam
          tindakan.
      11:
        text: Oke, cukup main-mainnya, teman-teman petualang. Ayo mulai coding untuk
          menemukan harta karun di bawah air.
    MC_2018_loops:
      1:
        text: Hebat! Kita menangkap ikan kod! Tahukah Anda jika Anda memberi makan
          lumba-lumba dengan ikan kod, lumba-lumba itu akan memandu Anda ke bangkai
          kapal yang mungkin jadi tempat harta karun? Kita pasti semakin dekat. Serangkaian
          puzzle berikutnya pasti lebih pelik, jadi sebaiknya kita mempelajari beberapa
          keterampilan coding lagi. Apa inis? Gua?
      2:
        text: Selamat datang, petualang! Nama saya Squid. Saya lihat Anda menggunakan
          rangkaian perintah yang sama berulang-ulang di beberapa puzzle terakhir.
          Pastinya sedikit melelahkan. Pernahkah Anda berkeinginan punya cara melakukan
          sesuatu berkali-kali seperti, misalnya, mencuci piring atau menggosok gigi
          tanpa lelah atau bosan? Pasti asyik itu.
      3:
        text: Komputer sangat pandai mengerjakan sesuatu yang sama berulang-ulang
          menggunakan loop coding. Ketika Anda menginginkan program memberikan instruksi
          yang sama berkali-kali, Anda dapat menggunakan loop!
      4:
        text: Blok "loop" berisi instruksi yang diulang-ulang sampai tujuan tercapai.
          Setelah program Anda memulai loop "Repeat until goal", loop akan terus mengulang
          instruksi sampai tiba di tujuan.
      5:
        text: Cobalah sendiri! Letakkan perintah yang ingin Anda ulangi ke dalam blok
          "Repeat until goal" block, klik "Jalankan", dan tonton saja!
      6:
        text: Wah, sedikit aneh. Siapa yang tahu cumi-cumi bisa mencode? Bahkan saya
          tak terpikir mereka punya jari-jari. Jadi, kini kita tahu tentang loop.
          Ayo gunakan cumi-cumi untuk mengantongi harta karun buat kita.
    mc_2018_conditionals:
      1:
        text: Wow! Tiga puzzle terpecahkan lagi! Dan kita menangkap...ikan salem.
          Memang tidak seasyik tumpukan emas, tetapi kita akan membawa pulang apa
          yang kita dapat. Dan saya merasa cangkang nautilus akan berguna nanti. Saya
          penasaran apa yang mengintai di balik puing-puing ini. Mungkin ada tips
          lain! Ayo kita lihat ke dalam.
      2:
        text: Nama saya Netty dan selamat datang di puing-puing saya. Kami mengambil
          keputusan sepanjang waktu berdasarkan kondisi. Jika sepertinya akan hujan,
          kami akan mengambil payung. Jika lapar, kami akan makan camilan.
      3:
        text: Jika terlihat creeper, kami lari ke arah yang berlawanan. Komputer juga
          mengambil jenis keputusan ini. Komputer bahkan bisa menanggapi kondisi menggunakan
          code.
      4:
        text: Untuk memprogram tanggapan seperti ini menggunakan perintah code Anda,
          pilih blok 'if path'.
      5:
        text: Pilih dropdown untuk membuat perintah.
      6:
        text: Misalnya, jika Anda menulis perintah "if path to the right" dan meletakkan
          "turn right" ke dalam conditional, maka ketika Steve sampai di jalur terbuka
          ke kanan, dia akan selalu belok kanan. Jika tidak ada lubang ke kanan, dia
          tidak akan belok kanan. Perintah "conditional if" ini berguna saat Anda
          menjalankan code dalam situasi yang tak bisa diprediksi, seperti puing-puing
          misterius di gua bawah air.
      7:
        text: Coba gunakan blok "if" dan gunakan code untuk spin.
      8:
        text: Wow! Puing-puing Netty menakjubkan. Saya benar-benar harus keluar dari
          rumah orang tua saya. Jadi, bagaimana menurut Anda? Apakah kondisinya tepat
          buat kami untuk menyelesaikan puzzle terakhir? Mari kita coba.
    mc_2018_closing:
      1:
        text: 'Amy Lee33: Selamat, Anda berhasil!'
      2:
        text: 'Squid: Selamat!'
      3:
        text: 'Netty: Anda berhasil! Selamat!'
      4:
        text: 'Tomohawk: Selamat!'
      5:
        text: Hari yang luar biasa! Semua perburuan harta karun telah mendorong kita
          membuat konduit Minecraft, menemukan cangkang Nautilus, dan menemukan kotak
          harta karun. Saya murni suka warna prisma. Kita juga mempelajari cara mencode
          dengan loop dan conditional.
      6:
        text: Berbicara tentang coding, ada satu level lagi bagi perburuan ini. Anda
          siap menempuhnya, petualang?
      7:
        text: Inilah level bermain bebas dan Anda dapat mengerahkan seluruh keterampilan
          coding dan membangun sesuatu yang menakubkan.
      8:
        text: Hmmm... tempat yang cocok untuk menyembunyikan harta karun, monumen
          bawah air, kastil batu? Ahhh...begitu banyak ide. Coba gunakan loop untuk
          membuat tindakan berulang, dan conditional untuk mempersiapkan semua skenario
          yang tidak bisa diprediksi.
      9:
        text: Anda sudah membuktikan diri sebagai coder yang bernyali sampai detik
          ini, dan saya tak sabar ingin melihat hasil karya Anda. Dan semoga petualangan
          Anda dengan code tidak berakhir di sini. Semoga Sukses!
    teaching_csf_how_it_works:
      1:
        image: notes/teaching_cs_fundamentals_1.png
        text: Kursus ini dipecah menjadi tahapan-tahapan.
      2:
        image: notes/teaching_cs_fundamentals_2.png
        text: Beberapa tahapan pertama akan mengenalkan pengertian ilmu komputer dan
          beberapa kosa kata kunci.
      3:
        image: notes/teaching_cs_fundamentals_3.png
        text: Selanjutnya Anda akan mempelajari cara mencode persis sama dengan cara
          murid Anda. Tahapan akhir kursus akan membantu Anda menyusun rencana pengajaran
          ilmu komputer di ruang kelas. Di sepanjang kursus, Anda akan melihat contoh-contoh
          pelajaran dengan komputer – atau online – dan "unplugged" yang dikerjakan
          tanpa komputer.
      4:
        image: notes/teaching_cs_fundamentals_4.png
        text: Platform pembelajaran akan melacak kemajuan Anda sehingga Anda dapat
          melanjutkan materi yang tertinggal kapan saja.
    what_is_cs:
      1:
        image: notes/what_is_cs.png
        text: Coding berupa rangkaian instruksi yang Anda berikan ke komputer. Ilmu
          komputer adalah bidang yang menjadi tempat orang menggunakan kekuatan komputer
          untuk memecahkan masalah besar. Ilmu komputer meliputi coding, tetapi juga
          mencakup hal-hal lain, seperti cara kerja internet dan dampaknya terhadap
          masyarakat, sikap/perlakuan terhadap mahadata, dan cara memerinci masalah
          besar. Ilmu komputer berurusan dengan pemecahan masalah, pemikiran kritis,
          dan kegigihan.
    writing_first_program:
      1:
        image: notes/writing_first_program_1.png
        text: Code.org menggunakan bahasa pemrograman visual, drag, dan drop yang
          disebut Blockly. Blockly menggunakan instruksi penuh warna yang disebut
          blok untuk membuat program dan memecahkan puzzle.
      2:
        image: notes/writing_first_program_2.png
        text: Setiap puzzle memiliki empat bagian.
      3:
        image: notes/writing_first_program_3.png
        text: Area bermain ada di sisi kiri, tempat program Anda berjalan.
      4:
        image: notes/writing_first_program_4.png
        text: Tengah adalah area toolbox, yang menyimpan semua blok yang Anda butuhkan.
      5:
        image: notes/writing_first_program_5.png
        text: Di sisi kanan adalah ruang kerja, tempat Anda menarik blok untuk membuat
          program.
      6:
        image: notes/writing_first_program_6.png
        text: Ada instruksi untuk setiap puzzle di atas ruang kerja.
      7:
        image: notes/writing_first_program_7.png
        text: Jika Anda kebanyakan menarik blok keluar dari toolbox, cukup tarik kembali
          blok yang berlebih ke dalam toolbox.  Tekan Jalankan untuk mencoba program,
          dan Reset untuk mencobanya lagi.
    repeat_block:
      1:
        image: notes/repeat_block.png
        text: Blok "repeat" memudahkan Anda mengulang-ulang code di dalamnya sebanyak
          perintah Anda.
    what_is_an_event:
      1:
        image: notes/what_is_an_event.png
        text: Event memberi tahu program Anda untuk mendengarkan sesuatu yang akan
          terjadi. Ketika itu terjadi, program melakukan tindakan. Komputer bisa mendengarkan
          klik mouse, tekanan di tombol panah, atau ketukan di layar.
    lesson_planning:
      1:
        image: notes/lesson_planning_1.png
        text: Pelajaran CS Fundamentals diawali dengan gambaran umum untuk mengenalkan
          pokok bahasan pelajaran ini kepada Anda.
      2:
        image: notes/lesson_planning_2.png
        text: Pelajaran memiliki pemanasan, aktivitas, dan ringkasan. Jika Anda ingin
          membuat paket pelajaran sendiri, Anda harus mencamkan baik-baik kiat ini.
      3:
        image: notes/lesson_planning_3.png
        text: 1. Coba gunakan rancangan kurikulum spiral. Perkenalkan konsep-konsep
          lalu kaji lagi.
      4:
        image: notes/lesson_planning_4.png
        text: 2. Buat pengalaman belajar campuran lewat kombinasi pelajaran online
          dengan pelajaran tanpa komputer.
      5:
        image: notes/lesson_planning_5.png
        text: 3. Pecah kurikulum Anda menjadi pelajaran yang lebih kecil.
      6:
        image: notes/lesson_planning_6.png
        text: 4. Pastikan kecocokan kurikulum dengan standar perguruan tinggi lokal
          dan keterampilan/kesiapan merintis karier.
    opd_closing:
      1:
        image: notes/opd_closing_1.png
        text: Selamat! Anda menyelesaikan kursus online Pengajaran Dasar-Dasar Ilmu
          Komputer. Kini Anda adalah bagian dari komunitas guru yang terus berkembang
          yang mempersiapkan murid menyongsong masa depan.
      2:
        image: notes/opd_closing_2.png
        text: 'Pelajari materi pembelajaran ini jika Anda perlu dukungan lanjut: 1.
          forum.code.org 2. @teachcode di Twitter 3. studio.code.org '
    hoc_dance_warmup_2019:
      1:
        text: 'Hour of Code | Pesta Dansa: Pemanasan'
      2:
        text: Hai! Nama saya Miral Kotb dan saya seorang pedansa, developer perangkat
          lunak, dan pembuat iLuminate.
      3:
        text: Ilmu komputer berkaitan dengan kreativitas dalam beragam cara. Bahkan
          tak terhitung. Maksud saya, setelah memiliki kemampuan menulis perangkat
          lunak, Anda dapat menyulap segala macam ide menjadi apa pun. Saya melakukannya
          dengan kostum bercahaya. Ada begitu banyak hal yang bisa dilakukan setelah
          Anda punya tool untuk menulis software, dan kemungkinan itu benar-benar
          tak terhingga.
      4:
        text: Selama satu jam berikutnya, Anda akan memulai ilmu komputer dengan memprogram
          pesta dansa sendiri! Kami sudah mengumpulkan beberapa musik tenar dan satu
          tim pedansa hebat sebagai objek permainan Anda.
      5:
        image: notes/hoc_dance_warmup_2019_5.png
        text: Anda akan menggunakan blok code untuk memilih pedansa yang berbeda-beda,
          mengubah gerakan mereka, dan membuat mereka menanggapi musik, dan menjadikan
          mereka interaktif.
      6:
        image: notes/hoc_dance_warmup_2019_6.png
        text: Anda akan melihat layar terbagi menjadi tiga bagian utama. Di sisi kiri
          adalah ruang bermain. Di sinilah pedansa akan muncul.
      7:
        image: notes/hoc_dance_warmup_2019_7.png
        text: Area tengah adalah toolbox. Blok-blok code baru akan tersedia di ruang
          ini sepanjang Anda mengikuti pelajaran.
      8:
        image: notes/hoc_dance_warmup_2019_8.png
        text: Ruang di sisi kanan adalah ruang kerja. Anda dapat menarik blok keluar
          dari toolbox dan masuk ke ruang kerja untuk membuat program.
      9:
        image: notes/hoc_dance_warmup_2019_9.png
        text: Instruksi untuk setiap level akan muncul di bagian atas layar. Jika
          Anda memerlukan tips, cukup klik bola lampu.
      10:
        image: notes/hoc_dance_warmup_2019_10.png
        text: Untuk mengawalinya, ayo membuat pedansa baru dengan blok merah ini.
          Pertama, tarik dia keluar dari toolbox dan pasang di bawah blok "setup"
          oranye ini. Pedansa ini adalah kucing.
      11:
        image: notes/hoc_dance_warmup_2019_11.png
        text: Anda juga dapat mengubah lokasi munculnya pedansa di ruang bermain Anda
          dengan ini.
      12:
        image: notes/hoc_dance_warmup_2019_12.png
        text: Terdapat menu di atas ruang bermain untuk memilih musik. Ada banyak
          sekali pilihan lagu, jadi nikmati memilih lagu favorit Anda. Di bawah ruang
          bermain ada tombol "run". Ketika Anda menekan "run", Anda akan melihat pedansa
          dari program Anda muncul di ruang bermain dan musik akan berputar.
      13:
        text: Cobalah sendiri! Dan jika Anda merasa terjebak, tak apa-apa, bangun
          dan bergeraklah! Sebelum benar-benar sadar, Anda malah sudah membuat pesta
          dansa sendiri. Jadi, apa yang akan Anda buat?
    hoc_dance_events_2019:
      1:
        text: 'Hour of Code | Pesta Dansa: Event'
      2:
        image: notes/hoc_dance_events_2019_2.png
        text: Nama saya Erin, seorang teknisi perangkat lunak di Code.org, dan saya
          ikut membuat Pesta Dansa.
      3:
        image: notes/hoc_dance_events_2019_3.png
        text: Agar berbagai gerakan dansa terjadi sesuai dengan irama musiknya, Anda
          dapat menggunakan sesuatu yang disebut event. Event memberi tahu program
          untuk "mendengarkan" sesuatu yang akan terjadi, lalu bereaksi seketika.
      4:
        image: notes/hoc_dance_events_2019_4.png
        text: Beberapa contoh peristiwa seperti listening/mendengarkan sebuah mouse
          click/klik mouse, arrow button/tombol panah atau tap on the screen/Tekan
          pada layar.
      5:
        image: notes/hoc_dance_events_2019_5.png
        text: Di sini kita akan memprogram pedansa agar melakukan gerakan ketika Anda
          menekan tombol panah di layar, atau tombol di keyboard.
      6:
        image: notes/hoc_dance_events_2019_6.png
        text: Kita bisa menggunakan blok event "when up arrow" dan menghubungkan blok
          "do once" dengannya. Ketika seseorang menekan tombol panah "up",  code yang
          menempel ke blok "when up arrow" pun berjalan. Gerakan dansa mana yang akan
          Anda pilih?
      7:
        image: notes/hoc_dance_events_2019_7.png
        text: Pastikan jenis pedansa yang Anda pilih cocok dengan salah satu pedansa
          yang Anda buat di dalam blok "setup", jika tidak, Anda takkan melihat kejadian
          apa pun.
      8:
        image: notes/hoc_dance_events_2019_8.png
        text: Intinya, Anda dapat membuat lebih banyak event seperti ini agar pedansa
          Anda melakukan berbagai gerakan dengan setiap tombol. Coba saja, dan dengan
          beberapa baris code, Anda dapat membuat dansa interaktif sendiri.
    hoc_dance_measures_2019:
      1:
        image: notes/hoc_dance_measures_2019_1.png
        text: 'Hour of Code | Pesta Dansa: Birama'
      2:
        image: notes/hoc_dance_measures_2019_2.png
        text: Saya Aloe Blacc. Saya seorang penyanyi, penulis lagu, dan entertainer.
          Saya rasa ilmu komputer sangat penting untuk dipelajari karena ilmu komputer
          adalah masa depan, dan saya rasa ilmu ini penting bagi orang yang ingin
          mengontrol teknologi yang secara benar-benar mengontrol hidup kita.
      3:
        image: notes/hoc_dance_measures_2019_3.png
        text: Event yang akan kita gunakan sekarang adalah mendengarkan perubahan
          dalam lagu. Perubahan tersebut akan memicu pedansa untuk melakukan dansa
          baru.
      4:
        image: notes/hoc_dance_measures_2019_4.png
        text: Pedansa profesional melatih koreografi mereka dengan menghitung ketukan
          lagu. Dalam musik, birama mengacu pada sejumlah ketukan tertentu. Di sebagian
          besar lagu pop, panjang birama adalah empat ketukan.
      5:
        image: notes/hoc_dance_measures_2019_5.png
        text: Agar pedansa Anda bebas berdansa, Anda membutuhkan blok event hijau.
          Blok event ini mengatakan, "setelah 4 birama".
      6:
        image: notes/hoc_dance_measures_2019_6.png
        text: Jika Anda menarik blok "do forever" ungu keluar, Anda bisa memilih dansa
          untuk diperagakan oleh pedansa Anda. Karena ada di bawah blok event "after
          4 measures", pedansa akan menunggu sampai empat birama lagu sebelum mulai
          berdansa.
      7:
        image: notes/hoc_dance_measures_2019_7.png
        text: Terus awasi penghitung birama di bagian atas area tampilan.
      8:
        image: notes/hoc_dance_measures_2019_8.png
        text: Lihat dan dengarkan event yang akan memicu code dansa. Dan tepat sesuai
          aba-aba, pedansa mulai bergerak.
    hoc_dance_properties_2019:
      1:
        text: 'Hour of Code | Pesta Dansa: Properti'
      2:
        text: Nama saya Maria, mahasiswi tahun ketiga di University of Washington
          dan seorang Teknisi Amazon Future.
      3:
        text: Saya suka ilmu komputer karena ilmu ini menggabungkan pemecahan masalah
          dengan pemikiran kritis dan setelah berjam-jam menekuni sesuatu, Anda bisa
          menghasilkan sesuatu yang benar-benar keren dan memuaskan.
      4:
        text: Sejauh ini Anda sudah berkesempatan memainkan beberapa jenis pedansa
          dan memprogram mereka untuk melakukan berbagai jenis gerakan dansa. Namun
          sebesarnya bagaimana cara kerja gerakan tersebut?
      5:
        text: Setiap gerakan dansa terdiri atas rangkaian gambar yang disebut frame.
          Setiap frame sedikit berbeda dengan frame sebelumnya. Ketika program Anda
          berjalan, komputer menampilkan frame secara berturut-turut. Begitu cepatnya
          frame muncul seolah-olah pedansanya bergerak. Inilah rahasia di balik semua
          animasi.
      6:
        text: Anda tidak hanya dapat mengubah gerakan pedansa, Anda juga dapat mengubah
          properti pedansa. Properti mendeskripsikan hal-hal seperti posisi pedansa
          di layar, ukuran pedansa, dan warna pedansa.
      7:
        image: notes/hoc_dance_properties_2019_7.png
        text: Untuk mengubah properti pedansa, Anda harus menggunakan blok "set".
          Mari gunakan blok "set" untuk mengecilkan tampilan pedansa. Pertama, tarik
          blok "set" ke program Anda.
      8:
        image: notes/hoc_dance_properties_2019_8.png
        text: Lalu pilih pedansa yang ingin Anda ubah, dan ketik ukuran kemunculan
          pedansa di layar. Ukuran penuh adalah 100. Jika Anda memilih angka rendah,
          pedansa akan tampak lebih kecil. Semakin kecil pedansa, semakin jauh kelihatannya.
      9:
        image: notes/hoc_dance_properties_2019_9.png
        text: Dengan menggunakan blok "set", Anda juga dapat mengubah dimensi, rotasi,
          posisi, dan warna pedansa. Dengan mengolah properti ini, Anda dapat membuat
          semua jenis perubahan dan menghubungkannya ke beragam bagian lagu.
      10:
        image: notes/hoc_dance_properties_2019_10.png
        text: Ingat, Anda hanya dapat mengatur properti pedansa yang sudah ada. Pastikan
          blok "set" muncul setelah blok "Make a new dancer". Jangan ragu-ragu bereksperimen
          menjadi kreatif, dan bersenang-senanglah!
    hoc_dance_congrats_2019:
      1:
        text: 'Hour of Code | Pesta Dansa: Pestanya Dimulai!'
      2:
        text: Selamat! Anda baru saja mempelajari dasar-dasar ilmu komputer. Sekarang
          Anda dapat menggunakan blok-blok ini untuk membuat desain pesta dansa sendiri
          untuk dibagikan ke teman-teman.
      3:
        text: Jika Anda mencermati toolbox, Anda akan menemukan beberapa blok yang
          benar-benar baru yang belum terlihat sebelumnya. Misalnya, Anda dapat menggunakan
          blok "layout" untuk mengatur pedansa dengan berbagai cara di layar.
      4:
        text: Lihatlah ke sekeliling dan coba bereksperimen dengan berbagai blok dan
          fitur baru ini. Maukah Anda membuat koreografi dansa yang cermat untuk lagu
          favorit Anda?
      5:
        text: Atau berdansa dengan teman-teman Anda?
      6:
        text: Atau kegiatan lain yang benar-benar berbeda?
      7:
        image: notes/hoc_dance_congrats_7.png
        text: Pada akhir tutorial, Anda dapat membagikan tautan ke hasil karya Anda
          kepada teman-teman.  Lepaskan imajinasi dan nikmati saja!
    poemart_intro:
      1:
        image: notes/hoc_poem_art_2021_introduction_01.jpg
      2:
        image: notes/hoc_poem_art_2021_introduction_02.jpg
      3:
        image: notes/hoc_poem_art_2021_introduction_03.jpg
      4:
        image: notes/hoc_poem_art_2021_introduction_04.jpg
      5:
        image: notes/hoc_poem_art_2021_introduction_05.jpg
      6:
        image: notes/hoc_poem_art_2021_introduction_06.jpg
      7:
        image: notes/hoc_poem_art_2021_introduction_07.jpg
      8:
        image: notes/hoc_poem_art_2021_introduction_08.jpg
      9:
        image: notes/hoc_poem_art_2021_introduction_09.jpg
      10:
        image: notes/hoc_poem_art_2021_introduction_10.jpg
      11:
        image: notes/hoc_poem_art_2021_introduction_11.jpg
