---
uk-UA:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Якщо ти використаєш для мене блок "рухатися вперед на
          100 пікселів", я намалюю лінію автоматично.
        2-3_Artist_1_new_b: Виникли проблеми з повертанням за ріг? Використай блок
          "повернути праворуч на 90 градусів".
      2-3 Artist 11:
        2-3_Artist_11_a: 'Виникають проблеми з кутами? Тобі потрібно піти на 360 градусів
          у 8 поворотів. Скільки це 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: В колі є 360 градусів, тому, якщо художник повертає на 1
          градус в кожному циклі, то йому потрібно зробити це 360 разів.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Виглядає, що художник прямує у вірному напрямку. Чи можеш
          ти спочатку повернути їх перед тим, як малювати лінію?
      2-3 Artist 3new:
        2-3_Artist_3new_a: Що таке 100-70? На основі проблеми із сюжетом, - це на
          скільки високим має бути капелюх!
        2-3_Artist_3new_b: Виглядає, що художник прямує у вірному напрямку. Чи можеш
          ти спочатку повернути їх перед тим, як малювати лінію?
      2-3 Artist 4:
        2-3_Artist_4_a: Щоб закінчити будинок, все що нам потрібно - це намалювати
          квадрат!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Щоб зробити ці маленькі кути, тобі потрібно повернути _далі_
          кожного разу, як ти це робив з квадратом.   '
        2-3_Artist_6_b: Оскільки я вже стикаюсь праворуч, то найлегше почати шляхом
          переміщення вперед, а потім зробити поворот вліво для створення трикутника.
        2-3_Artist_6_c: У кожної сторони трикутника є довжини, як у кожної сторони
          квадрата... 100 пікселів!
      2-3 Artist 7:
        2-3_Artist_7_a: Найпростіший спосіб вирішити цю загадку полягає в тому, щоб
          намалювати першу площу і закінчити художник, який вказує вниз перед початком
          вашої другої площі.
      2-3 Artist 8:
        2-3_Artist_8_a: Якщо ви нарізати 200 наполовину, скільки пікселів шириною
          має кожний квадрат бути?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Цей алмаз дійсно просто квадрат на його боці
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Підказка: кожен вусик завдовжки 75 пікселів.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Один з поворотів 15 градусів занадто малий.
        2-3_Artist_Debugging_3_b: Якщо програма запускається занадто швидко, щоб побачити,
          що відбувається, спробуйте уповільнити роботу слайдера.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Що станеться, якщо ви рухаєтеся художником або стрибаєте
          назад, коли малює перший рядок?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Мистецтво потрібно повернути на 60 градусів, перш
          ніж почати малювати!
        2-3_Artist_Debugging_9_b: Вам не потрібно додавати ще один блок, щоб отримати
          повний оборот, просто додайте 60 градусів до блоку "повернути ліворуч",
          який вже є!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Квадрати мають 100 пікселів, тобто вам доведеться
          просувати вперед 175 пікселів перед тим, як малювати свою другу площу.
        2-3_Artist_Functions_1_b: Добре малювати перехресні лінії, щоб зробити свої
          окуляри.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Вам потрібно буде змінити не тільки кількість і
          довжину сторін у межах функції, а й кут, який художник обертає між кожною
          стороною.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Спершу спробуйте запустити код, щоб побачити, що
          потрібно додати.
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Художник повинен перетворити 120 градусів між кожним
          квадратом, щоб завершити цей дизайн.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          Пригадай, в останньому завданні код був таким:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">8</title>
                  <statement name="DO">
                    <block type="draw_colour" inline="true">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">turnRight</title>
                          <title name="VALUE" config="45,60,90,120,180">45</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">50</title>
                              <next>
                                <block type="draw_turn_by_constant_dropdown">
                                  <title name="DIR">turnLeft</title>
                                  <title name="VALUE" config="45,60,90,120,180">90</title>
                                  <next>
                                    <block type="draw_move_by_constant">
                                      <title name="DIR">moveForward</title>
                                      <title name="VALUE">50</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Ваш новий хід має йти на \*\* кінці \*\* коду всередині
          циклу.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Перед початком роботи алмазу, художник повинен
          повернути ліворуч на 60 градусів, щоб досягти правильного шляху.
        2-3_Artist Loops_New_12_b: Після того, як художник пройде вперед на 100 пікселів,
          він повинен буде повернути праворуч на 120 градусів, щоб зробити гострим
          кутом.
        2-3_Artist Loops_New_12_c: Художнику доведеться повернути праворуч лише на
          60 градусів, щоб створити широкий кут.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: В кінці кожного алмазу, художник вже стоїть у правильному
          напрямку, щоб розпочати наступний. Через це нам не потрібно додавати додатковий
          блок \`повернути ліворуч 'до того, як ми знову почнемось.
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Художник повинен повернути 45 градусів праворуч,
          перш ніж почати малювати.
        2-3_Artist_Loops_New_9_b: Це V дійсно лише половина площі. Що б код намальовувати
          половину квадрата?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Не забудьте помістити всі сірі блоки всередині
          вашого циклу.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: Потрібна допомога з кутами? \*\* 360/12 = 30
          \*\*
        2-3_Artist_Nested_Loops_3_b: Не забудьте помістити весь сірий код і ваш блок
          повороту всередині циклу.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: Потрібна допомога з кутами? \*\* 360/12 = 30
          \*\*
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: Спробуйте скористатись блоком "стрибати вперед",
          щоб отримати від верху одного квадрата до місця, де ви почнете наступне.
          Якщо ваші квадрати високі в 20 пікселів, і вони розрізняються на 20 пікселів,
          як далеко вам потрібно стрибати?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: Як далеко вам слід звернутися до кожної петлі?
          Що таке 360/10?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: Потрібна допомога у пошуку правильного кута?
          \*\* 360/12 = 30 \*\*
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Маючи важкий час, розуміючи, як отримати блоки
          вниз? Спробуйте звернути червону квітку точно так само, як фіолетова квітка!
        2-3_Bee_Conditionals_14_b: Якщо червона квітка була пурпурною, чи могли б
          ви зрозуміти, як використати додатковий цикл `repeat` для скорочення коду?
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Пам''ятайте: фіолетові квіти мають лише 0 або
          1 нектар, і вони можуть змінюватися при кожному запуску програми.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: Код буде найкоротшим, якщо ви будете використовувати
          цикл при кожному русі вперед, інший цикл, щоб зібрати нектар, а інший -
          зробити мед.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Пам''ятайте: фіолетові квіти змінюються між 0 і
          1 нектаром при запуску вашої програми!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Як тільки ви знайдете та виправите неправильний блок,
          ви бачите будь-які шаблони, які можна було б зробити більш простим, використовуючи
          `repeat` loop?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Як тільки ви знайдете та виправите неправильний блок,
          ви бачите будь-які шаблони, які можна було б зробити більш простим, використовуючи
          `repeat` loop?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Чи є місце, де бджола робить те, що не має сенсу? Що
          відбувається, коли ви змінюєте цей блок?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Вам не потрібно використовувати цикл з функцією. Спробуйте
          перемістити, скориставшись функцією, а потім рухатись і знову використовувати
          функцію.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Вам не потрібно використовувати цикл з функцією. Спробуйте
          перемістити, скориставшись функцією, а потім рухатись і знову використовувати
          функцію.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: Якщо головоломка здається складною, спробуйте трохи
          побудувати свою функцію. Додайте кілька блоків, а потім спробуйте. Додайте
          більше, а потім повторіть спробу. Незабаром ти туди дістанешся! ! \[] (<https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif>)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: Якщо головоломка здається складною, спробуйте трохи
          побудувати свою функцію. Додайте кілька блоків, а потім спробуйте. Додайте
          більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Ви повинні скластися з чотирма блоками всередині вашого
          циклу.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Ви повинні мати 6 блоків у вашому циклі.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Вам буде потрібно два різних `repeat` цикли, один за іншим.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Ви повинні скласти п'ять блоків у вашому циклі.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: Перша акція стане чергою, а не рухом.
        2-3_Bee_Loops_4A_b: Остання частина програми може бути завершена написанням
          коду в кінці вашої програми за межами вашого циклу.
        2-3_Bee_Loops_4A_c: Якщо ви ще не можете помітити петлі, спочатку спочатку
          кодируйте його далі, а потім подивіться, що ви можете об'єднати в цикл `repeat`
          в кінці.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Якщо ви не можете визначити блоки, щоб вставити всередину
          `repeat` відразу, почніть, кодуючи кожний крок і шукати шаблон.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Якщо ви не можете сказати, що повинно йти в цикл `repeat`,
          спробуйте перетягнути блоки один за іншим і подивитися, чи можете ви знайти
          шаблон.
        2-3_Bee_Loops_6_b: У вашому циклі `repeat` повинно бути 6 блоків, коли ви
          закінчите.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: Перша акція стане чергою, а не рухом.
        2-3_Bee_Loops_7_b: Якщо ви не можете цілком зобразити цикл з самого початку,
          спробуйте кодування далеко вперед, а потім шукайте шаблон.
      2-3 Maze 1:
        2-3_Maze_1_a: Щоб використати блок "рухатися вперед", перетягніть його з області
          панелі інструментів у робоче середовище та підключіть його до блоку "when
          run".
      2-3 Maze 16:
        2-3_Maze_16_a: Якщо схему важко побачити, спочатку спробуйте все це спершу
          копіювати та побачити, що все повторюється знову і знову, перш ніж ви кладете
          цикли.
        2-3_Maze_16_b: Щоб помістити багато блоків у цикл `repeat`, просто перетягніть
          цикл у робочу область, потім перетягніть всі блоки з початкової програми
          всередині нього. Підключіть його назад до блоку `when run`, і ви можете
          піти!
      2-3 Maze 6:
        2-3_Maze_6_a: Існує два способи вирішити цю загадку!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Якщо схему важко побачити, спочатку спробуйте все це
          спершу копіювати та побачити, що все повторюється знову і знову, перш ніж
          ви кладете цикли.
        2-3_Maze_Loops_17_b: Чи видалено вихідний код? Натисніть кнопку "почати",
          щоб повернути його!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Якщо схему важко побачити, спочатку спробуйте все це
          спершу копіювати та побачити, що все повторюється знову і знову, перш ніж
          ви кладете цикли.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Якщо ви застрягли, спробуйте спершу виписати код без
          петлі та шукати шаблони.
        2-3_Maze_Loops_19_b: Встановлення одного повторюваного циклу всередині іншого
          може допомогти зменшити кількість використаних блоків.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Шукайте шаблон сходинки в цьому лабіринті, щоб знайти,
          де можна використовувати цикл.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Якщо у вас виникли проблеми з пошуком шаблону сходами,
          спробуйте накрити заблоковані шляхи пальцем.
      4-5 Artist 11:
        4-5_Artist_11_a: Усередині своєї петлі переконайтеся, що художник стрибає
          назад і вгору після нанесення кожного рядка.
      4-5 Artist 3:
        4-5_Artist_3_b: Якщо ви не можете побачити, де відбувається повторення циклу,
          спробуйте кодування всього рішення і шукати шаблон.
      4-5 Artist 4:
        4-5_Artist_4_a: У крузі 360 градусів! Ось скільки разів вам потрібно повторити
          цей код (повертаючи 1 градус за раз), перш ніж кола буде зроблено!
      4-5 Artist 7:
        4-5_Artist_7_a: Який кут є найменшим? На якому куті стоїть художник?
      4-5 Artist 9:
        4-5_Artist_9_b: Вам потрібно буде намалювати три трикутника одного розміру.
          Не забудьте перейти на нове місце після кожного.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Вам потрібно лише намалювати зовнішній трикутник,
          щоб завершити цю загадку.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Якщо в крузі 360 градусів, а кожен цикл повертається
          на 3 градуси, скільки разів вам потрібно було зациклювати малювати половину
          повного кола?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Зверніть увагу, що оскільки квадрати довжиною 20
          пікселів, вам потрібно буде перейти до 20 пікселів, перш ніж почати наступний
          квадрат.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Будьте обережні, щоб витягнути повний блок "коду
          з панелі інструментів кожного разу, коли ви спробуєте новий.
        4-5_Artist_Patterns_3_b: Якщо ваш код стає занадто заплутаним, ви завжди можете
          натиснути "Почати більше" і спробувати ще раз!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Тепер, коли художник закінчив кожен алмаз, він стикається
          з протилежним напрямком, звідки він повинен почати наступний алмаз.  \n\nСкільки
          степеней він повинен бути обернений, щоб встановити себе прямо?"
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Ви можете вирішити цю головоломку, використовуючи
          лише блоки на робочому місці. Який порядок вони повинні входити?
        4-5 Bee Conditionals 6_b: Переконайтеся, що ви перевіряєте, чи є квітка більш
          ніж \*\* 0 \*\* нектаром принаймні \*\* 3 \*\* раз, щоб вирішити цю загадку.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Якщо у вас виникли проблеми з з'ясуванням того, що
          неправильно, спробуйте запустити його, щоб побачити, де все йде неправильно.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Спробуйте розглянути цю головоломку як довгий
          прямокутник, де бджола має рухатися вперед, а потім повернути наліво кілька
          разів, щоб завершити шлях.
      4-5 Maze 10:
        4-5_Maze_10_a: Якщо ви не можете бачити, як використовувати петлі для вирішення
          головоломки відразу, спочатку спробуйте вирішити цю проблему, а потім шукайте
          візерунок. Що ви повинні поставити `repeat` навколо, щоб зробити код коротшим?
      4-5 Maze 4:
        4-5_Maze_4_a: Якщо вам важко зрозуміти, де повторити, спробуйте кодувати все
          і шукати шаблон.
      4-5 Maze 5:
        4-5_Maze_5_a: Спробуйте скористатися циклом `repeat` в будь-який час, коли
          вам потрібно« перейти вперед »більш ніж на два етапи.
        4-5_Maze_5_b: Ви можете використовувати декілька циклів `repeat` у головоломці.
      4-5 Maze 6:
        4-5_Maze_6_a: Спробуйте простежити шлях пальцем. Це найкоротший шлях, який
          ви можете знайти?
      4-5 Maze 7:
        4-5_Maze_7_a: "\\*\\* Хочете отримати ваш код як можна менше? \\*\\* Шукайте
          шаблони у ваших блоках. Ви бачите щось, що повторюється? Спробуйте вставити
          цикл навколо нього замість цього!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: Не забудьте зробити чергу після внутрішньої петлі. Ви
          будете петлі 6 трикутників більше 360 градусів. \*\* 360/6 =? \*\*
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          Цей дизайн буде петлі 10 разів більше 360 градусів.

          \*\* 360/10 =? \*\*
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          Ви будете циклу цієї форми 6 разів більше 360 градусів.

          \*\* 360/6 =? \*\*
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Кожен елемент потребує власного циклу `while`.
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'На пів шестикутника має \*\* довжину 30 \*\* і повертає
          направо на \*\* 60 градусів \*\*.  '
        Course_4_Artist_11_b: '2/3 трикутник має \*\* довжину 80 \*\* і повертає вправо
          на \*\* 120 градусів \*\*. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: Кожна повторювана форма являє собою комбінацію \*\*
          половини шестикутника \*\*, а потім \*\* 2/3 трикутника \*\*.
        Course_4_Artist_12_b: Форма одиниці практично така ж, як і в останній головоломці,
          за винятком того, що пів шестигранник трохи більший.
      Course 4 Artist 6:
        Course_4_Artist_6_a: Є 3 трикутники в межах 360 градусів обертання ... скільки
          разів 3 йде в 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: "Потрібна допомога, з'ясувати, як далеко повернути? \nУ
          межах 360 градусів є три трикутники. \nСкільки разів 3 переходять на 360?"
      Course 4 Artist 9:
        Course_4_Artist_9_a: Потрібно знати, скільки повернути? Що 360 розділено на
          10?
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: Цей код використовує два `для циклів`.
          Один піднімається від 1 до 8, другий відраховує від 8 до 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Кожен `для циклу` має три повторення.  Перший
          малює найліпший набір з 1, другий малює 0 в середині, а третій малює 1 в
          правій частині.
        Course_4_Artist_Binary_Free_Play_2b_c: У кожному повторенні вам потрібно `counter`
          для 1ї і `16-(2 x counter)` для 0s.
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: Кут повороту зміниться з кожною формою! Використовуйте
          математичний блок, щоб ввести 360, поділений на кількість сторін, для яких
          форма повинна отримати правий кут.
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: 360, поділена на кількість сторін, у формі
          - це кількість градусів, які потрібно буде повернути.
        Course_4_Artist_For_Loops_11a_b: Кожного разу вам доведеться рухатися вперед
          10 разів довжиною поточної кількості сторін.
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: Щоб мати `цикл` для циклічного переміщення,
          переконайтеся, що ви використовуєте `counter` як відстань.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: "\\*\\* Яке мінімальне число вам знадобиться?
          \nЯке найбільше число? \nНаскільки велика кількість кожного разу? \\*\\*\nЦе
          питання, які вам потрібно запитати, щоб заповнити пробіли для циклу `for`."
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: Найбільша форма має 19 сторін. Найменший
          має всього два.
        Course_4_Artist_For_Loops_Challenge_b: Цикл `for` нараховує два раз на один
          раз.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: Основою цього коду є те ж саме, що й
          рішення попереднього завдання ... з парою змін.
        Course_4_Artist_For_Loops_inspire_b: Спробуйте цикл `for`, який проходить
          від 3 до 10 зі збільшенням 1.
        Course_4_Artist_For_Loops_inspire_c: Існує два повторення одного циклу повтору
          всередині петлі `for`, але друге повторення повертає протилежний напрям.
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_b: Спробуйте повернути на більш ніж
          90 градусів за межами `повторного циклу` але всередині `для циклу`.
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Частина розуміння того, як використовувати
          функції, - з'ясувати, які саме вам потрібні, а які ти не маєте.
        Course_4_Artist_Functions_challenge_b: Використовуйте символ `for loop ',
          а потім використовуйте його лічильник змінної всередині вкладеного циклу`
          repeat\`.
        Course_4_Artist_Functions_challenge_c: Кожна ітерація, ви повинні зробити
          квадрат, то стрибати вперед.
        Course_4_Artist_Functions_challenge_d: Вам доведеться повернути наліво на
          90 градусів за межами вашого `repeat`, але все одно в« for loop ».
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: Після завершення однієї площі спробуйте стрибати
          вперед половину його довжини, перш ніж повертати і зробити інший.
        Course_4_Artist_Inspire_b: Кожен квадрат і стрибок повторюють чотири рази
          (використовуючи ліву чергу між ними), щоб зробити повний штифтовий елемент.
        Course_4_Artist_Inspire_c: Кожен штифт також повторюється чотири рази, з правого
          повороту \*\* 360 / сторони \*\*.
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: Вам потрібні два повторюваних цикли (один в іншому),
          що повторюють `` сторін`` разів.
        Course_4_Artist_Vars_13_b: Внутрішня повторювана петля малює восьмикутник
          (повертаючи зліва). Після цього вам потрібно рухатися вперед і повернути
          праворуч лише у зовнішній петлі.
        Course_4_Artist_Vars_13_c: Щоб відрегулювати фігуру, щоб зберегти той самий
          розмір, коли змінюється кількість сторін, використовуйте блок математики,
          щоб розділити довжину у пікселях на кількість сторін.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Щоб намалювати правильний багатокутник, повертайте
          \*\* 360/боки \*\* кожного разу.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Якщо розподілити початкову довжину за кількістю
          сторін, довжина кожної сторони зменшиться, коли кількість сторін збільшується.
      Course 4 Bee Params 7:
        notice_pattern: Ти бачиш, як змінюється кількість нектарів?
        count_with_for: Зверніть увагу, що нектар піднімається по кроках. Який блок
          ви можете використовувати для того, щоб робити те ж саме багато разів під
          час підрахунку?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: Добре, коли потрібно запитати номер мед і номер нектару.
          Якщо нічого немає, то число може бути 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: Вам потрібно буде натиснути "редагувати" на
          функцію стрибка і оновити його так, щоб він використовував параметр `height`.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Обов'язково встановіть число для `dog_speed` на
          щось більше, ніж`cat_speed`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: Що б ви додати до свого «for» петлі кожен
          раз, щоб пропустити парні числа?
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: Прапори близько 330 пікселів від персонажів.
        Course_4_Playlab_For_Loops_4b_b: Як ви можете зробити кожен символ досягти
          330 пікселів у тій самій кількості ходів з різними початковими і зупиняючими
          числами?
        Course_4_Playlab_For_Loops_4b_c: Пам'ятайте, що неважливо, скільки персонаж
          пропускає прапор на своєму останньому кроці, доки кожен символ буде мати
          таку ж кількість кроків, щоб потрапити до прапора.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Символи знаходяться приблизно в 175 пікселях
          від центру.
        Course_4_Playlab_For_Loops_5b_b: Пам'ятайте, що наступний крок персонажа буде
          довшим за останні, оскільки лічильник постійно збільшується.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Кожен шестикутник має 40 пікселів.
        Course_4_SCF_1_b: Між кожним шестикутником у кожній горизонтальній лінії є
          стрибок на 120 пікселів.
        Course_4_SCF_1_c: Перш ніж намалювати другий рядок шестикутників, потрібно
          повернути вправо на 60 градусів і перейти вперед до 40 пікселів. Після того,
          як ви перебуваєте у правильному вертикальному положенні, вам доведеться
          повернути свого виконавця назад і повернутися до 320 пікселів.
        Course_4_SCF_1_d: Перш ніж намалювати третій рядок шестикутників, потрібно
          повернути вправо на 60 градусів і перестрибнути вперед 40 пікселів. Після
          того, як ви перебуваєте у правильному вертикальному положенні, вам доведеться
          знову повернути свого виконавця та перейти назад у розмірі 440 пікселів
          (120 пікселів далі, ніж функція переміщення вниз / вперед).
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Запам'ятайте свої функції зі стадії 16.
        Course_4_SCF_1a_c: Ви повинні розглянути можливість використання `для циклу`
          Не для кроків, а для параметра функції.
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: Зверніть увагу, що форма всіх медоносних точок аналогічна.
          Гарне місце для функції!
        Course_4_SCF_1b_c: Ви повинні розглянути можливість використання `для циклу`
          на відстані, яке подорожує бджола.
      Course 4 SCF 2:
        Course_4_SCF_2_a: Кожний восьмикутник має 40 пікселів.
        Course_4_SCF_2_b: Між кожним восьмикутником у кожній горизонтальній лінії
          є 136-піксельний стрибок.
        Course_4_SCF_2_c: Перш ніж намалювати другий рядок восьмикутників, потрібно
          повернути вправо на 45 градусів і перейти вперед до 96 пікселів. Після того,
          як ви перебуваєте у правильному вертикальному положенні, вам доведеться
          повернути свого виконавця знову і перейти назад у 408 пікселів.
        Course_4_SCF_2_d: Зверніть увагу, що, оскільки в четних рядках менше вісімнадцяти,
          вам не доведеться знову перескочити назад, щоб перейти до початкового місця
          для непарних рядків. Це означає, що ви можете використовувати ту саму функцію
          для всіх рядків.
      Course 4 SCF 3:
        Course_4_SCF_3_b: 'Це серія восьмикутників з боками, які є довжиною `контр-пікселів`. '
        Course_4_SCF_3_c: Кожний восьмикутник викликається з внутрішньої лінії `for`,
          яка йде від 200 до 2 на 2.
        Course_4_SCF_3_d: Не забудьте повернути на 22,5 градусів в кінці кожної ітерації.
        Course_4_SCF_3_e: Як колір кожного восьмикутника, так і ширина пера контролюються
          змінні `counter`.
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Спробуйте використати два «за» петлі: один для підйому
          та захоплення нектару, а інший - для підйому та виготовлення меду.'
        Course_4_SCFL_1_c: "Зверніть увагу, що для циклу `for` потрібні кілька регулярних
          циклів всередині, що повторюють`counter` times, щоб зробити збільшене зображення
          сходами. \nІнший `for` петлі потребує лише одного регулярного циклу, щоб
          зробити `counter` суму мед."
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: Можливо, вам доведеться подорожувати далі загалом, щоб
          використовувати найменшу кількість блоків.
        Course_4_SCFL_1a_b: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1a_c: "`for loop` допоможе вам виконати той самий шаблон, але
          з мінливим числом кроків. Зверніть увагу, що кількість кроків, необхідних,
          зменшується від 7 до 5 на 1."
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Спробуйте використати `for loop`.
        Course_4_SCFL_1b_b: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
      Course 4 SCV 4:
        Course_4_SCV_4_c: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
      CourseD_Dance_Party_01:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Танцівник повинен обов'язково з'явитися на екрані.

          _Цей рівень закінчується після 4 тактів._
        challenges: |-
          "**Додаткові завдання**

          -   Оберіть іншу пісню.
          -   Перейменуйте танцівника.".
      CourseD_Dance_Party_02:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Танцівник повинен виконувати новий рух після 4 тактів.

          _Цей рівень закінчується після 7 тактів._"
      CourseD_Dance_Party_03:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Після 6 тактів танцівник має виконати інший рух, ніж той, який він виконує після 4 тактів.

          _Цей рівень закінчується після 11 тактів._"
      CourseD_Dance_Party_04:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Вам необхідно зробити так, що фоновий ефект змінився до сьомого такту пісні.

          _Цей рівень закінчується після 9 тактів._"
        challenges: |-
          "**Додаткове завдання**

          Змінюйте фоновий ефект в різні моменти пісні, додавши новий блок під подіями <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.".
      CourseD_Dance_Party_06:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Потрібно принаймні два танцівники.

          _Цей рівень закінчується після 5 тактів._"
        challenges: |-
          "**Додаткове завдання**

          -   Додайте третього танцівника (або стільки, скільки бажаєте!)
          -   Нехай всі танцівники виконують різні рухи в різні моменти пісні.".
      CourseD_Dance_Party_08:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Розмір двох танцівників має бути іншим, ніж 100.

          _Цей рівень закінчується після 5 тактів._"
        challenges: |-
          "**Додаткове завдання**

          -   Поекспериментуйте, змінюючи інші властивості (ширина, висота, оберт тощо)"
      CourseD_Dance_Party_09:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Змініть відтінок принаймні одного танцівника.

          _Цей рівень закінчується після 7 тактів._"
      CourseD_Dance_Party_10:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Властивості двох або більше танцівників повинні змінитися.

          _Цей рівень закінчується після 7 тактів._"
      CourseD_Dance_Party_11:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Просто проявіть творчий підхід!

          _Цей рівень закінчується після 7 тактів._"
      CourseD_Dance_Party_11_5:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Просто проявіть творчий підхід!

          _Цей рівень закінчується після 7 тактів._"
      CourseD_Dance_Party_11b:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Використайте блок `при натисканні стрілки вліво`, щоб змусити Робота виконувати танцювальний рух при натисканні цієї клавіші.

          _Цей рівень закінчується після 7 тактів._"
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Подивись на **Морські ліхтарі** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Як їх можна використати для складання умови при переміщенні Монументом Океану?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Можна використати блок "якщо є шлях", щоб допомогти виконати поворот
          праворуч.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Бачиш червоні та сині коралові блоки? Використай їх, як
          ключові точки поворотів праворуч та ліворуч.
      Dance_2019_01:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Танцівник повинен обов'язково з'явитися на екрані.

          _Цей рівень закінчується після 4 тактів._
        challenges: |-
          **Додаткові завдання**

          -   Оберіть іншу пісню.
          -   Перемістіть танцівника на нове місце.
          -   Створіть більше одного танцівника.
      Dance_2019_02:
        validation: |-
          **Як мені пройти цей рівень?**

          -   Танцівник має виконати рух.
          -   Ви маєте натиснути клавішу зі стрілкою.

          _Цей рівень закінчується після 4 тактів._
        challenges: |-
          **Додаткове завдання**

          Використайте більше одного блока <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml>.
      Dance_2019_03:
        validation: |-
          **Як мені пройти цей рівень?**

          -   Обидва танцівники мають виконати рух.
          -   Ви маєте натиснути клавіші зі стрілками.

          _Цей рівень закінчується після 4 тактів._
        challenges: |-
          **Додаткове завдання**

          -   Зробіть так, щоб танцівник реагував на клавіші "стрілка вліво" та "стрілка вправо".
      Dance_2019_04:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Танцівник повинен виконувати новий рух після 4 тактів.

          _Цей рівень закінчується після 7 тактів._"
      Dance_2019_05:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Після 6 тактів танцівник має виконати інший рух, ніж той, який він виконує після 4 тактів.

          _Цей рівень закінчується після 11 тактів._"
        challenges: |-
          **Додаткове завдання**

          -   Змінюйте фон кожен раз, коли танцівники змінюють рухи.
      Dance_2019_06:
        validation: |-
          **Як мені пройти цей рівень?**

          -   Створіть одного головного танцівника та групу другорядних танцівників під час 4 перших тактів пісні.

          _Цей рівень закінчується після 7 тактів._
        challenges: |-
          **Додаткове завдання**

          -   Створіть кілька груп другорядних танцівників.
      Dance_2019_07:
        validation: |-
          **Як мені пройти цей рівень?**

          -   Змініть розмір принаймні одного танцівника після початку музики.

          _Цей рівень закінчується після 6 тактів._
        challenges: |-
          **Додаткове завдання**

          -   Поекспериментуйте, змінюючи інші властивості, такі як ширина або оберт.
      Dance_2019_08:
        validation: |-
          **Як мені пройти цей рівень?**

          -   Змініть відтінок принаймні одного танцівника.

          _Цей рівень закінчується після 6 тактів._
        tint_hint: Чи помітили ви, що колір, якого набувають ваші танцівники, не є
          тим самим кольором, який ви обрали? Це тому, що **відтінки** змішують обраний
          вами колір із кольорами танцівника.
      Dance_2019_09:
        validation: |-
          **Як мені пройти цей рівень?**

          -   Просто натисніть клавішу "Закінчити"!
        repeat_every_ideas: |-
          **Потрібні ідеї?**

          -   Декілька разів змініть розмір танцівника, щоб він виріс.
          -   Декілька разів змініть оберт танцівника, щоб він крутився.
          -   Декілька разів змініть горизонтальне або вертикальне положення танцівника, щоб він рухався по екрану.

          _Ви також можете використати від’ємні числа для протилежного ефекту!_
        next_previous: |-
          **Додаткове завдання**

          -   Ви також можете використати цей новий блок події, щоб циклічно повторювати перелік танцювальних рухів, установивши рух як "(Випадковий)", "(Наступний)" або "(Попередній)".
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Танцівник повинен обов'язково з'явитися на екрані.

          _Цей рівень закінчується після 4 тактів._
        challenges: |-
          "**Додаткові завдання**

          -   Оберіть іншу пісню.
          -   Перейменуйте танцівника.".
      Dance_Party_02:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Танцівник повинен виконувати новий рух після 4 тактів.

          _Цей рівень закінчується після 7 тактів._"
      Dance_Party_03:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Після 6 тактів танцівник має виконати інший рух, ніж той, який він виконує після 4 тактів.

          _Цей рівень закінчується після 11 тактів._"
      Dance_Party_04:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Вам необхідно зробити так, що фоновий ефект змінився до сьомого такту пісні.

          _Цей рівень закінчується після 9 тактів._"
        challenges: |-
          "**Додаткове завдання**

          Змінюйте фоновий ефект в різні моменти пісні, додавши новий блок під подіями <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.".
      Dance_Party_05:
        validation: "**Як мені пройти цей рівень?** \n\n-   Ваш танцівник має виконати
          хоча б 4 різних танцювальних рухи до того, як закінчиться рівень. \n\n_Цей
          рівень закінчується після 12 тактів._"
      Dance_Party_06:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Потрібно принаймні два танцівники.

          _Цей рівень закінчується після 5 тактів._"
        challenges: |-
          "**Додаткове завдання**

          -   Додайте третього танцівника (або стільки, скільки бажаєте!)
          -   Нехай всі танцівники виконують різні рухи в різні моменти пісні.".
      Dance_Party_08:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Розмір двох танцівників має бути іншим, ніж 100.

          _Цей рівень закінчується після 5 тактів._"
        challenges: |-
          "**Додаткове завдання**

          -   Поекспериментуйте, змінюючи інші властивості (ширина, висота, оберт тощо)"
      Dance_Party_09:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Змініть відтінок принаймні одного танцівника.

          _Цей рівень закінчується після 7 тактів._"
      Dance_Party_10:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Властивості двох або більше танцівників повинні змінитися.

          _Цей рівень закінчується після 7 тактів._"
      Dance_Party_11:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Просто проявіть творчий підхід!

          _Цей рівень закінчується після 7 тактів._"
      Dance_Party_11_5:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Просто проявіть творчий підхід!

          _Цей рівень закінчується після 7 тактів._"
      Dance_Party_11b:
        validation: |-
          "**Як мені пройти цей рівень?**

          -   Використайте блок `при натисканні стрілки вліво`, щоб змусити Робота виконувати танцювальний рух при натисканні цієї клавіші.

          _Цей рівень закінчується після 7 тактів._"
      Dance_Party_extras_alternate_2019:
        alternate: Блок зміни рухів знаходиться в категорії "Танцівники".
      Function intro Ryan:
        Function_intro_Ryan_a: Ви можете викликати функцію в програмі багато разів!  Спробуйте
          викликати її двічі, щоб виконати завдання.
      Function intro Ryan_2019:
        Function_intro_Ryan_a: Ви можете викликати функцію в програмі багато разів!  Спробуйте
          викликати її двічі, щоб виконати завдання.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Подивись на **Морські ліхтарі** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Як їх можна використати для складання умови при переміщенні Монументом Океану?
      HOC 2018 Level_7a:
        aquatic7: Можна використати блок "якщо є шлях", щоб допомогти виконати поворот
          праворуч.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Бачиш червоні та сині коралові блоки? Використай їх, як
          ключові точки поворотів праворуч та ліворуч.
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Перетягніть один блок "рухатися вперед" із панелі
          інструментів до робочої області та прикріпіть його під блоком "коли запущено".
        MC_HOC_2017_01_RETRY_b: Не забудьте клацнути "Запустити", щоб розпочати виконання
          коду для Agent.
        MC_HOC_2017_01_RETRY_c: Коли Agent виконає весь свій код, ви зможете переміщати
          гравця, натискаючи клавіші зі стрілками!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Перетягніть один блок "рухатися вперед" із панелі
          інструментів до робочої області та прикріпіть його під блоком "коли запущено".
        MC_HOC_2017_01_RETRY_b: Не забудьте клацнути "Запустити", щоб розпочати виконання
          коду для Agent.
        MC_HOC_2017_01_RETRY_c: Коли Agent виконає весь свій код, ви зможете переміщати
          гравця, натискаючи клавіші зі стрілками!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Перемістіть Agent уперед на дві клітинки, щоб зупинитися
          на притискній пластині.  Таким чином ви відкриєте двері для свого гравця.
        MC_HOC_2017_02_Cole_b: "Натисніть \"Запустити\"! \nКод можна виконати, навіть
          якщо він неправильний.  Знову й знову пробуйте запускати та скидати свій
          код, доки не з’ясуєте, у чому проблема."
        MC_HOC_2017_02_Cole_c: Щойно Agent відкриє двері, натискайте клавіші зі стрілками,
          переміщаючи гравця по карті!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Перемістіть Agent уперед на дві клітинки, щоб зупинитися
          на притискній пластині.  Таким чином ви відкриєте двері для свого гравця.
        MC_HOC_2017_02_Cole_b: "Натисніть \"Запустити\"! \nКод можна виконати, навіть
          якщо він неправильний.  Знову й знову пробуйте запускати та скидати свій
          код, доки не з’ясуєте, у чому проблема."
        MC_HOC_2017_02_Cole_c: Щойно Agent відкриє двері, натискайте клавіші зі стрілками,
          переміщаючи гравця по карті!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Щойно Agent опиниться на притискній пластині, ви зможете
          провести гравця до компаса, натискаючи клавіші зі стрілками!
        MC_HOC_2017_03_Cole_b: Чи не задовгий ваш код?  Спробуйте використати цикл
          "повтор", щоб скоротити програму!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Щойно Agent опиниться на притискній пластині, ви зможете
          провести гравця до компаса, натискаючи клавіші зі стрілками!
        MC_HOC_2017_03_Cole_b: Чи не задовгий ваш код?  Спробуйте використати цикл
          "повтор", щоб скоротити програму!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Використайте блок "повернути праворуч", щоб
          змінити напрямок руху Agent '
        MC_HOC_2017_04POINT5_RYAN_a: Agent має стати лише на першу притискну пластину,
          щоб Алекс або Стів зміг дістатися сокири.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Використайте блок "повернути праворуч", щоб
          змінити напрямок руху Agent '
        MC_HOC_2017_04POINT5_RYAN_a: Agent має стати лише на першу притискну пластину,
          щоб Алекс або Стів зміг дістатися сокири.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent має виконати дію "рухатися вперед" 7 разів.  Як
          можна досягти цього за допомогою циклу "повтор"?
        MC_HOC_2017_04_Cole_c: "Натисніть \"Запустити\"! \nКод можна виконати, навіть
          якщо він неправильний.  Знову й знову пробуйте запускати та скидати свій
          код, доки не з’ясуєте, у чому проблема."
        MC_HOC_2017_04_Cole_b: Щойно Agent опиниться на притискній пластині, він відкриє
          двері для гравця.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent має виконати дію "рухатися вперед" 7 разів.  Як
          можна досягти цього за допомогою циклу "повтор"?
        MC_HOC_2017_04_Cole_c: "Натисніть \"Запустити\"! \nКод можна виконати, навіть
          якщо він неправильний.  Знову й знову пробуйте запускати та скидати свій
          код, доки не з’ясуєте, у чому проблема."
        MC_HOC_2017_04_Cole_b: Щойно Agent опиниться на притискній пластині, він відкриє
          двері для гравця.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Чи ви знали, що всередину циклу можна помістити кілька
          блоків коду?  Спробуйте розмістити дошку **та** команду руху вперед всередину
          циклу "повтор", щоб виконати завдання.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Чи ви знали, що всередину циклу можна помістити кілька
          блоків коду?  Спробуйте розмістити дошку **та** команду руху вперед всередину
          циклу "повтор", щоб виконати завдання.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Скільки разів виконується цей цикл?  Скільки разів
          він _має_ виконатися?
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Скільки разів виконується цей цикл?  Скільки разів
          він _має_ виконатися?
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Все, що потрібно для роботи агента, - це очистити шлях
          від Minecart.
        MC_HOC_2017_07_Cole_a: Щоб виконати це завдання, спробуйте з’ясувати, що робить
          функція "очистити шлях", і викличте її стільки разів, скільки потрібно,
          вставивши маленький зелений блок "очистити шлях" із панелі інструментів.
        MC_HOC_2017_07_Cole_b: Спробуйте скомбінувати блоки функцій з іншими блоками
          з панелі інструментів, щоб виконати це завдання.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Все, що потрібно для роботи агента, - це очистити шлях
          від Minecart.
        MC_HOC_2017_07_Cole_a: Щоб виконати це завдання, спробуйте з’ясувати, що робить
          функція "очистити шлях", і викличте її стільки разів, скільки потрібно,
          вставивши маленький зелений блок "очистити шлях" із панелі інструментів.
        MC_HOC_2017_07_Cole_b: Спробуйте скомбінувати блоки функцій з іншими блоками
          з панелі інструментів, щоб виконати це завдання.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_a: Функції допоможуть вам швидше виконати це завдання!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_a: Функції допоможуть вам швидше виконати це завдання!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "Натисніть \"Запустити\"! \nКод можна виконати, навіть
          якщо він неправильний.  Знову й знову пробуйте запускати та скидати свій
          код, доки не з’ясуєте, у чому проблема."
        MC_HOC_2017_08_RY_b: Це завдання можна виконати БАГАТЬМА способами.  Спробуйте
          кілька з них!
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "Натисніть \"Запустити\"! \nКод можна виконати, навіть
          якщо він неправильний.  Знову й знову пробуйте запускати та скидати свій
          код, доки не з’ясуєте, у чому проблема."
        MC_HOC_2017_08_RY_b: Це завдання можна виконати БАГАТЬМА способами.  Спробуйте
          кілька з них!
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Спробуй змусити Agent побудувати кілька мостів, щоб
          Алекс або Стів міг пересуватися за межами карти!
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Спробуй змусити Agent побудувати кілька мостів, щоб
          Алекс або Стів міг пересуватися за межами карти!
      NEW Course 4 Artist Params inspire:
        brush_width: Ми встановили ширину щітки до 1, а потім колір до синього, перш
          ніж ми зробили що-небудь ще.
        double_loop: Спробуйте вставити "for loop" всередині циклу `repeat`.
        after: Коли ви закінчите з кожним "пелюстком", переконайтеся, що "переміщаєтеся
          вперед" 20 пікселів перед тим, як зробити 60 градусів обертання.
      Overworld House Frame Chosen:
        mc_6_b: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Overworld House Frame Chosen_2019:
        mc_6_b: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Overworld Place Wall:
        mc_5_c: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Overworld Place Wall_2019:
        mc_5_c: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Overworld Shear Sheep:
        mc_3_c: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Overworld Shear Sheep_2019:
        mc_3_c: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Underground Iron:
        mc_10_c: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      Underground Iron_2019:
        mc_10_c: Не бійся помилятися! Запустіть код, щоб побачити, що станеться, навіть
          якщо ви ще не вирішили головоломку.
      comment_intro_maze_2018:
        courseC_maze_programming4_b: Додайте коментар, коли ви зміните маршрути -
          що б сталося, якщо ви повернули інший шлях?
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: Найкращий шлях може не працювати на цей раз.
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_b: Додайте код, щоб намалювати трикутник
          всередині вкладеного циклу. Використовуйте 120 градусів для вашого трикутника.
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'Прямокутник 200 пікселів шириною та 100
          пікселів висотою. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "Ти можеш вставляти команди всередину блоку
          \"Повтор\" для повторення їх знову и знову. Спробуй\n\n<xml>\n  \n          <block
          type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_b: У цій головоломці кожен простір може
          мати квітку, медову гребіну або нічого. Це означає, що ви можете повторити
          ваш `if / else` умовно на кожному квадраті.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Не думайте навіть про спробу цього спробувати
          без циклів!
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Один із способів вирішити це виглядає
          як зигзаг. Інший спосіб виглядає як спіраль! Існує безліч різних рішень
          для загадки, як це. Бути наполегливим!
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Думай про цей шлях, як про три різні етапи.
          Кожен з них має патерн, який можна повторити.
        courseC_maze_loops_challenge1_b: Між кожним блоком "Повтор", тобі буде треба
          "Повернути ліворуч" або "Повернути праворуч" щоб підготувати Scrat до наступного
          патерну.
        courseC_maze_loops_challenge1_c: Якщо ти робиш це таким довгим шляхом, то
          треба "повернути ліворуч" і тоді "рухатись вперед" де-кілька разів. Не здавайся
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Якщо направляєте мене в зворотньому
          напрямку, уважно слідкуйте, щоб я повернувся в правильну сторону!_
        courseC_maze_programming_challenge2_b: Найкоротша відповідь використовує лише
          п'ять блоків, але в ній є блок "Повтор"!
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_c: "Після того, як бджола перетворить його
          у нижній рядок, повторіть ці команди: \n\n-   Повторіть 2 рази: \n-   Перемістіть
          вперед \n-   Зробіть 3 порції меду \n-   Перемістіть назад"
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: Якщо головоломка здається складною, спробуйте
          трохи побудувати свою функцію. Додайте кілька блоків, а потім спробуйте.
          Додайте більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
        courseE_bee_functions_challenge1_b: Не забудьте побудувати свій код усередині
          зеленого функціонального блоку.
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: Якщо головоломка здається складною, спробуйте
          трохи побудувати свою функцію. Додайте кілька блоків, а потім спробуйте.
          Додайте більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
        courseE_bee_functions_challenge1_b: Не забудьте побудувати свій код усередині
          зеленого функціонального блоку.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Вліво або вправо? Тобі вирішувати!
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Не забувайте, що ви можете `repeat`
          одній команді або більш довгий шаблон. Ви навіть можете `повторити` блок`repeat`!
        courseD_bee_nested_loops_challenge2_b: Щоб отримати всі 4 дорогоцінних каменів,
          спершу скористайтеся циклом, щоб відійти від центру. Поверніть ліворуч або
          праворуч, а потім використовуйте вкладену петлю, щоб перейти від першої
          купи скарбів до другої. Якщо ви повторюєте вкладену петлю достатньо разів,
          колектор буде переміщатися по \* печері \* \* повністю \*!
      courseA_artist_loops4:
        courseA_artist_loops4_a: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseA_artist_loops5:
        courseA_artist_loops5_b: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseA_artist_loops5_2018:
        courseA_artist_loops5_b: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseA_artist_loops5_2019:
        courseA_artist_loops5_b: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseA_artist_loops6:
        courseA_artist_loops6_a: Не можете зрозуміти, як зробити пагорб? Спробуйте
          грати з блоками трохи, щоб побачити, що кожен малює.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: Не можете зрозуміти, як зробити пагорб? Спробуйте
          грати з блоками трохи, щоб побачити, що кожен малює.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: Не можете зрозуміти, як зробити пагорб? Спробуйте
          грати з блоками трохи, щоб побачити, що кожен малює.
      courseA_artist_loops7:
        courseA_artist_loops7_a: Не можете зрозуміти, де поставити цикл? Спробуйте
          написати код покрокові і шукайте шаблон.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: Не можете зрозуміти, де поставити цикл? Спробуйте
          написати код покрокові і шукайте шаблон.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: Не можете зрозуміти, де поставити цикл? Спробуйте
          написати код покрокові і шукайте шаблон.
      courseA_artist_loops9:
        courseA_artist_loops9_a: Додайте ще один блок до коду, який ви надішлете,
          щоб намалювати решту сходів.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: Додайте ще один блок до коду, який ви надішлете,
          щоб намалювати решту сходів.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: Додайте ще один блок до коду, який ви надішлете,
          щоб намалювати решту сходів.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_c: Всі ваші блоки повинні бути всередині циклу,
          щоб закінчити цю головоломку.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_c: Всі ваші блоки повинні бути всередині циклу,
          щоб закінчити цю головоломку.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_c: Всі ваші блоки повинні бути всередині циклу,
          щоб закінчити цю головоломку.
      courseA_collector_loops6:
        courseA_collector_loops6_a: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseA_collector_loops8:
        courseA_collector_loops8_a: Якщо у вас виникли проблеми з виявленням цієї
          головоломки, спробуйте написати рухами на папірці та шукати малюнок.
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: Якщо у вас виникли проблеми з виявленням цієї
          головоломки, спробуйте написати рухами на папірці та шукати малюнок.
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: Якщо у вас виникли проблеми з виявленням цієї
          головоломки, спробуйте написати рухами на папірці та шукати малюнок.
      courseA_harvester_loops9:
        courseA_harvester_loops9_b: Не бійтеся запускати свій код після кожної частини,
          щоб побачити, що станеться!
      courseA_harvester_loops9_2019:
        courseA_harvester_loops9_b: Не бійтеся запускати свій код після кожної частини,
          щоб побачити, що станеться!
      courseA_maze_seq10:
        courseA_maze_seq10_a: Якщо у вас виникли проблеми, спробуйте в першу чергу
          записати сходинки на папірці.
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: Якщо у вас виникли проблеми, спробуйте в першу чергу
          записати сходинки на папірці.
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: Якщо у вас виникли проблеми, спробуйте в першу чергу
          записати сходинки на папірці.
      courseA_maze_seq13:
        courseA_maze_seq13_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: Існує два рішення цієї загадки.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: Існує два рішення цієї загадки.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: Існує два рішення цієї загадки.
      courseA_playLab_events2:
        courseA_playLab_events2_a: Шукай блок, який змушує собаку щось сказати.
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: Шукай блок, який змушує собаку щось сказати.
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: Шукай блок, який змушує собаку щось сказати.
      courseB_Scrat_ramp1_2018:
        '2': Не бійся помилятися! Спробуйте щось, і якщо він не працює, спробуйте
          щось інше!
      courseB_Scrat_ramp1_2019:
        '2': Не бійся помилятися! Спробуйте щось, і якщо він не працює, спробуйте
          щось інше!
      courseB_artist_loops2:
        courseB_artist_loops2_a: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: Якщо ви хочете повторити цикл більше, ніж 4 рази,
          ви можете змінити номер у верхній частині блоку.
      courseB_artist_loops9:
        courseB_artist_loops9_c: Не можете зрозуміти, де поставити цикл? Спробуйте
          написати код покрокові і шукайте шаблон.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_c: Не можете зрозуміти, де поставити цикл? Спробуйте
          написати код покрокові і шукайте шаблон.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_c: Не можете зрозуміти, де поставити цикл? Спробуйте
          написати код покрокові і шукайте шаблон.
      courseB_iceage_loops2:
        courseB_iceage_loops2_b: Якщо ви застрягли, спробуйте виписати кроки на аркуші
          паперу.
      courseB_iceage_loops2_2019:
        courseB_iceage_loops2_b: Якщо ви застрягли, спробуйте виписати кроки на аркуші
          паперу.
      courseB_iceage_loops4:
        courseB_iceage_loops4_b: Не бійся запускати свій код і подивитися, що станеться!
      courseB_iceage_loops4_2019:
        courseB_iceage_loops4_b: Не бійся запускати свій код і подивитися, що станеться!
      courseB_maze_seq5:
        courseB_maze_seq5_a: Якщо ви застрягли, спробуйте розібрати шлях на папері.
        courseB_maze_seq5_b: Є 2 способи вирішити цю загадку!
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Якщо ви застрягли, спробуйте розібрати шлях на папері.
        courseB_maze_seq5_b: Є 2 способи вирішити цю загадку!
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Якщо ви застрягли, спробуйте розібрати шлях на папері.
        courseB_maze_seq5_b: Є 2 способи вирішити цю загадку!
      courseB_maze_seq6:
        courseB_maze_seq5_c: Існує два способи вирішити цю загадку!
      courseB_maze_seq6_2018:
        courseB_maze_seq5_c: Існує два способи вирішити цю загадку!
      courseB_maze_seq6_2019:
        courseB_maze_seq5_c: Існує два способи вирішити цю загадку!
      courseB_maze_seq7:
        courseB_maze_seq7_a: Додати 1 блок, щоб перемістити птаха до свині.
      courseB_maze_seq7_2018:
        courseB_maze_seq7_a: Додати 1 блок, щоб перемістити Scrat до жолудя.
      courseB_maze_seq7_2019:
        courseB_maze_seq7_a: Додати 1 блок, щоб перемістити Scrat до жолудя.
      courseB_maze_seq8:
        courseB_maze_seq8_b: Існує два способи вирішити цю загадку!
      courseB_maze_seq9:
        courseB_maze_seq9_c: Існує два способи вирішити цю загадку!
        courseB_maze_seq9_d: Застряг? Спробуй цей шлях!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_c: Існує два способи вирішити цю загадку!
        courseB_maze_seq9_d: Застряг? Спробуй цей шлях!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_c: Існує два способи вирішити цю загадку!
        courseB_maze_seq9_d: Застряг? Спробуй цей шлях!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: Найкращий шлях може не працювати на цей раз.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: Найкращий шлях може не працювати на цей раз.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: Найкращий шлях може не працювати на цей раз.
      courseB_playlab_events6:
        courseB_playlab_events6_c: Отримати всі прапори, щоб пройти!
      courseB_playlab_events6_2018:
        courseB_playlab_events6_c: Отримати всі прапори, щоб пройти!
      courseB_playlab_events6_2019:
        courseB_playlab_events6_c: Отримати всі прапори, щоб пройти!
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_b: Клацніть на Octavia, коли ви запускаєте свою програму,
          щоб перевірити, чи вона працює!
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_b: Клацніть на Octavia, коли ви запускаєте свою програму,
          щоб перевірити, чи вона працює!
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_b: Клацніть на Octavia, коли ви запускаєте свою програму,
          щоб перевірити, чи вона працює!
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: Коло має 360 градусів. Помножте ступені у свою чергу
          на кількість разів, коли ви повторюєте. Чи він дорівнює 360? Перевірте запропоновані
          повороти, щоб побачити, що це працює!
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: Коло має 360 градусів. Помножте ступені у свою чергу
          на кількість разів, коли ви повторюєте. Чи він дорівнює 360? Перевірте запропоновані
          повороти, щоб побачити, що це працює!
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: Коло має 360 градусів. Помножте ступені у свою чергу
          на кількість разів, коли ви повторюєте. Чи він дорівнює 360? Перевірте запропоновані
          повороти, щоб побачити, що це працює!
      courseC_artist_prog2:
        courseC_artist_prog2_a: Якщо ти використаєш для мене блок "рухатися вперед
          на 100 пікселів", я намалюю лінію автоматично.
        courseC_artist_prog2_b: Виникли проблеми з повертанням за ріг? Використай
          блок "повернути праворуч на 90 градусів".
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Якщо ти використаєш для мене блок "рухатися вперед
          на 100 пікселів", я намалюю лінію автоматично.
        courseC_artist_prog2_b: Виникли проблеми з повертанням за ріг? Використай
          блок "повернути праворуч на 90 градусів".
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Якщо ти використаєш для мене блок "рухатися вперед
          на 100 пікселів", я намалюю лінію автоматично.
        courseC_artist_prog2_b: Виникли проблеми з повертанням за ріг? Використай
          блок "повернути праворуч на 90 градусів".
      courseC_artist_prog5:
        courseC_artist_prog5_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseC_artist_prog5_2018:
        courseC_artist_prog5_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseC_artist_prog5_2019:
        courseC_artist_prog5_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseC_artist_prog7:
        courseC_artist_prog7_a: Кожен кут - 45 або 90 градусів.
        courseC_artist_prog7_e: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseC_artist_prog7_2018:
        courseC_artist_prog7_a: Кожен кут - 45 або 90 градусів.
        courseC_artist_prog7_e: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseC_artist_prog7_2019:
        courseC_artist_prog7_a: Кожен кут - 45 або 90 градусів.
        courseC_artist_prog7_e: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: Після намалювання першого рядка поверніть
          наліво, перш ніж намалювати другу лінію.
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: Після намалювання першого рядка поверніть
          наліво, перш ніж намалювати другу лінію.
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: Після намалювання першого рядка поверніть
          наліво, перш ніж намалювати другу лінію.
      courseC_collector_prog2:
        courseC_collector_prog2_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseC_collector_prog2_2018:
        courseC_collector_prog2_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseC_collector_prog2_2019:
        courseC_collector_prog2_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseC_collector_prog4:
        courseC_collector_prog4_a: Якщо ви застрягли, спробуйте виписати кроки на
          аркуші паперу.
        courseC_collector_prog4_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
        courseC_collector_prog4_c: Спробуйте цю опцію для шляху.
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: Якщо ви застрягли, спробуйте виписати кроки на
          аркуші паперу.
        courseC_collector_prog4_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
        courseC_collector_prog4_c: Спробуйте цю опцію для шляху.
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: Якщо ви застрягли, спробуйте виписати кроки на
          аркуші паперу.
        courseC_collector_prog4_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
        courseC_collector_prog4_c: Спробуйте цю опцію для шляху.
      courseC_collector_prog5:
        courseC_collector_prog5_c: Якщо ви застрягли, спробуйте виписати кроки на
          аркуші паперу.
      courseC_collector_prog5_2018:
        courseC_collector_prog5_c: Якщо ви застрягли, спробуйте виписати кроки на
          аркуші паперу.
      courseC_collector_prog5_2019:
        courseC_collector_prog5_c: Якщо ви застрягли, спробуйте виписати кроки на
          аркуші паперу.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_b: Забули свій шлях? Спробуйте цей шлях,
          щоб вирішити головоломку!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_b: Забули свій шлях? Спробуйте цей шлях,
          щоб вирішити головоломку!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_b: Забули свій шлях? Спробуйте цей шлях,
          щоб вирішити головоломку!
      courseC_harvester_loops3:
        courseC_harvester_loops3_a: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
        courseC_harvester_loops3_c: Якщо ви хочете спростити свій код, ви можете поставити
          один цикл в інший! Це називається \*\* вкладена петля \*\*.
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_a: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
        courseC_harvester_loops3_c: Якщо ви хочете спростити свій код, ви можете поставити
          один цикл в інший! Це називається \*\* вкладена петля \*\*.
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_a: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
        courseC_harvester_loops3_c: Якщо ви хочете спростити свій код, ви можете поставити
          один цикл в інший! Це називається \*\* вкладена петля \*\*.
      courseC_harvester_loops4:
        courseC_harvester_loops4_c: Якщо ви хочете спростити свій код, ви можете поставити
          один цикл в інший! Це називається \*\* вкладена петля \*\*.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_c: Якщо ви хочете спростити свій код, ви можете поставити
          один цикл в інший! Це називається \*\* вкладена петля \*\*.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_c: Якщо ви хочете спростити свій код, ви можете поставити
          один цикл в інший! Це називається \*\* вкладена петля \*\*.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: Це дуже важко без циклів!
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: Це дуже важко без циклів!
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: Це дуже важко без циклів!
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Один із способів вирішити це виглядає
          як зигзаг. Інший спосіб виглядає як спіраль! Існує безліч різних рішень
          для загадки, як це. Бути наполегливим!
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: Один із способів вирішити це виглядає
          як зигзаг. Інший спосіб виглядає як спіраль! Існує безліч різних рішень
          для загадки, як це. Бути наполегливим!
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: Один із способів вирішити це виглядає
          як зигзаг. Інший спосіб виглядає як спіраль! Існує безліч різних рішень
          для загадки, як це. Бути наполегливим!
      courseC_maze_debugging1:
        courseC_maze_debugging1_a: |-
          -   Чи все працює після першого кроку?
          -   Чи він все ще працює після другого?
          -   Звідки пішло не так?
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_a: |-
          -   Чи все працює після першого кроку?
          -   Чи він все ще працює після другого?
          -   Звідки пішло не так?
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_a: |-
          -   Чи все працює після першого кроку?
          -   Чи він все ще працює після другого?
          -   Звідки пішло не так?
      courseC_maze_debugging2:
        courseC_maze_debugging2_b: |-
          -   Чи все працює після першого кроку?
          -   Чи він все ще працює після другого?
          -   Звідки пішло не так?
        courseC_maze_debugging2_c: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_b: |-
          -   Чи все працює після першого кроку?
          -   Чи він все ще працює після другого?
          -   Звідки пішло не так?
        courseC_maze_debugging2_c: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_b: |-
          -   Чи все працює після першого кроку?
          -   Чи він все ще працює після другого?
          -   Звідки пішло не так?
        courseC_maze_debugging2_c: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseC_maze_debugging3:
        courseC_maze_debugging3_b: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_b: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_b: Не можете зрозуміти, що не так? Спробуйте запустити
          код кілька разів, щоб побачити, що станеться.
      courseC_maze_debugging7:
        courseC_maze_debugging7_a: |-
          -   Чи все працює на першому кроці?
          -   Як на рахунок другого кроку?
          -   Звідки це не так?
      courseC_maze_debugging7_2018:
        courseC_maze_debugging7_a: |-
          -   Чи все працює на першому кроці?
          -   Як на рахунок другого кроку?
          -   Звідки це не так?
      courseC_maze_debugging7_2019:
        courseC_maze_debugging7_a: |-
          -   Чи все працює на першому кроці?
          -   Як на рахунок другого кроку?
          -   Звідки це не так?
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Вліво або вправо? Тобі вирішувати!
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: Вліво або вправо? Тобі вирішувати!
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: Вліво або вправо? Тобі вирішувати!
      courseC_maze_programming6:
        courseC_maze_programming6_a: Існує два способи вирішити цю загадку!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Існує два способи вирішити цю загадку!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Існує два способи вирішити цю загадку!
      courseC_maze_programming7:
        courseC_maze_programming7_a: Не забудьте скористатися кнопкою "Крок", щоб
          пройти через блок по блоках і шукати помилки.
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: Не забудьте скористатися кнопкою "Крок", щоб
          пройти через блок по блоках і шукати помилки.
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: Не забудьте скористатися кнопкою "Крок", щоб
          пройти через блок по блоках і шукати помилки.
      courseC_maze_programming8:
        courseC_maze_programming8_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseC_maze_programming8_2018:
        courseC_maze_programming8_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseC_maze_programming8_2019:
        courseC_maze_programming8_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseC_starWars_loops1:
        courseC_starWars_loops1_b: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops10:
        courseC_starWars_loops10_b: Якщо ви хочете використовувати менше коду, ви
          можете помістити один цикл `repeat` іншим! Це називається \*\* вкладена
          петля \*\*.
        courseC_starWars_loops10_c: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_b: Якщо ви хочете використовувати менше коду, ви
          можете помістити один цикл `repeat` іншим! Це називається \*\* вкладена
          петля \*\*.
        courseC_starWars_loops10_c: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_b: Якщо ви хочете використовувати менше коду, ви
          можете помістити один цикл `repeat` іншим! Це називається \*\* вкладена
          петля \*\*.
        courseC_starWars_loops10_c: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_b: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_b: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops6:
        courseC_starWars_loops6_b: Якщо ви хочете використовувати менше коду, ви можете
          помістити один цикл `repeat` іншим! Це називається \*\* вкладена петля \*\*.
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_b: Якщо ви хочете використовувати менше коду, ви можете
          помістити один цикл `repeat` іншим! Це називається \*\* вкладена петля \*\*.
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_b: Якщо ви хочете використовувати менше коду, ви можете
          помістити один цикл `repeat` іншим! Це називається \*\* вкладена петля \*\*.
      courseC_starWars_loops7:
        courseC_starWars_loops7_c: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_c: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_c: Не бійся помилятися! Запустіть код, щоб побачити,
          що станеться, навіть якщо ви ще не вирішили головоломку.
      courseD_artist_binary3:
        courseD_artist_binary3_a: Один із чотирьох бінарних візерунків у наборі інструментів
          вирішить цю загадку!
        courseD_artist_binary3_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: Один із чотирьох бінарних візерунків у наборі інструментів
          вирішить цю загадку!
        courseD_artist_binary3_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: Один із чотирьох бінарних візерунків у наборі інструментів
          вирішить цю загадку!
        courseD_artist_binary3_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_artist_binary4:
        courseD_artist_binary4_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_artist_binary4_2018:
        courseD_artist_binary4_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_artist_binary4_2019:
        courseD_artist_binary4_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_artist_binary7:
        courseD_artist_binary7_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_artist_binary7_2018:
        courseD_artist_binary7_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_artist_binary7_2019:
        courseD_artist_binary7_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_artist_binary8:
        courseD_artist_binary8_c: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_artist_binary8_2018:
        courseD_artist_binary8_c: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_artist_binary8_2019:
        courseD_artist_binary8_c: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: Спробуйте скористатись блоком "стрибати вперед",
          щоб отримати від верху одного квадрата до місця, де ви почнете наступне.
          Якщо ваші квадрати високі в 20 пікселів, і вони розрізняються на 20 пікселів,
          як далеко вам потрібно стрибати?
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: Спробуйте скористатись блоком "стрибати вперед",
          щоб отримати від верху одного квадрата до місця, де ви почнете наступне.
          Якщо ваші квадрати високі в 20 пікселів, і вони розрізняються на 20 пікселів,
          як далеко вам потрібно стрибати?
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: Спробуйте скористатись блоком "стрибати вперед",
          щоб отримати від верху одного квадрата до місця, де ви почнете наступне.
          Якщо ваші квадрати високі в 20 пікселів, і вони розрізняються на 20 пікселів,
          як далеко вам потрібно стрибати?
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_b: Не забудьте стрибати вперед на 50 пікселів
          між колами.
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_b: Не забудьте стрибати вперед на 50 пікселів
          між колами.
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_b: Не забудьте стрибати вперед на 50 пікселів
          між колами.
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_b: Додайте другий набір вкладеного циклу до кінця
          першого набору, але на цей раз використовуйте трикутники.
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_b: Додайте другий набір вкладеного циклу до кінця
          першого набору, але на цей раз використовуйте трикутники.
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_b: Додайте другий набір вкладеного циклу до кінця
          першого набору, але на цей раз використовуйте трикутники.
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_b: Додайте код, щоб змінити колір на
          зелений, і перетворити трикутник на 50 пікселів та 120 градусів на лівий
          поворот.
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_b: Додайте код, щоб змінити колір на
          зелений, і перетворити трикутник на 50 пікселів та 120 градусів на лівий
          поворот.
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_b: Додайте код, щоб змінити колір на
          зелений, і перетворити трикутник на 50 пікселів та 120 градусів на лівий
          поворот.
      courseD_artist_project2:
        courseD_artist_project2_b: Після першого впорядкування та перенесення ви можете
          повторити код, додаючи цикл навколо зовнішнього вигляду.
      courseD_artist_project2_2018:
        courseD_artist_project2_b: Після першого впорядкування та перенесення ви можете
          повторити код, додаючи цикл навколо зовнішнього вигляду.
      courseD_artist_project2_2019:
        courseD_artist_project2_b: Після першого впорядкування та перенесення ви можете
          повторити код, додаючи цикл навколо зовнішнього вигляду.
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: Один із чотирьох бінарних візерунків у наборі інструментів
          вирішить цю загадку!
        courseD_artist_binary3_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_autorun_binary4_2019:
        courseD_artist_binary4_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_autorun_binary7_2019:
        courseD_artist_binary7_b: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_autorun_binary8_2019:
        courseD_artist_binary8_c: Не бійся помилятися! Спробуйте набрати двійковий
          код і запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
        courseD_bee_conditionals3_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
        courseD_bee_conditionals3_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_bee_conditionals3_2019:
        courseD_bee_conditionals3_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: Потрібна допомога з початку роботи? Переглянути
          відео!
      courseD_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_b: У цій головоломці кожен простір може
          мати квітку, медову гребіну або нічого. Це означає, що ви можете повторити
          ваш `if / else` умовно на кожному квадраті.
      courseD_bee_conditionals_challenge1_2018:
        courseD_bee_conditionals_challenge1_b: У цій головоломці кожен простір може
          мати квітку, медову гребіну або нічого. Це означає, що ви можете повторити
          ваш `if / else` умовно на кожному квадраті.
      courseD_bee_conditionals_challenge1_2019:
        courseD_bee_conditionals_challenge1_b: У цій головоломці кожен простір може
          мати квітку, медову гребіну або нічого. Це означає, що ви можете повторити
          ваш `if / else` умовно на кожному квадраті.
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_c: "Після того, як бджола перетворить його
          у нижній рядок, повторіть ці команди: \n\n-   Повторіть 2 рази: \n-   Перемістіть
          вперед \n-   Зробіть 3 порції меду \n-   Перемістіть назад"
      courseD_collector_debugging5:
        courseD_collector_debugging5_b: Як тільки у вас є перший цикл так, як ви хочете,
          що залишилося у вашому коді?
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Не забувайте, що ви можете `repeat`
          одній команді або більш довгий шаблон. Ви навіть можете `повторити` блок`repeat`!
        courseD_bee_nested_loops_challenge2_b: Щоб отримати всі 4 дорогоцінних каменів,
          спершу скористайтеся циклом, щоб відійти від центру. Поверніть ліворуч або
          праворуч, а потім використовуйте вкладену петлю, щоб перейти від першої
          купи скарбів до другої. Якщо ви повторюєте вкладену петлю достатньо разів,
          колектор буде переміщатися по \* печері \* \* повністю \*!
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_a: Не забувайте, що ви можете `repeat`
          одній команді або більш довгий шаблон. Ви навіть можете `повторити` блок`repeat`!
        courseD_bee_nested_loops_challenge2_b: Щоб отримати всі 4 дорогоцінних каменів,
          спершу скористайтеся циклом, щоб відійти від центру. Поверніть ліворуч або
          праворуч, а потім використовуйте вкладену петлю, щоб перейти від першої
          купи скарбів до другої. Якщо ви повторюєте вкладену петлю достатньо разів,
          колектор буде переміщатися по \* печері \* \* повністю \*!
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_a: Не забувайте, що ви можете `repeat`
          одній команді або більш довгий шаблон. Ви навіть можете `повторити` блок`repeat`!
        courseD_bee_nested_loops_challenge2_b: Щоб отримати всі 4 дорогоцінних каменів,
          спершу скористайтеся циклом, щоб відійти від центру. Поверніть ліворуч або
          праворуч, а потім використовуйте вкладену петлю, щоб перейти від першої
          купи скарбів до другої. Якщо ви повторюєте вкладену петлю достатньо разів,
          колектор буде переміщатися по \* печері \* \* повністю \*!
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_a: Не забувайте, що ви можете `repeat`
          одній команді або більш довгий шаблон. Ви навіть можете `повторити` блок`repeat`!
      courseD_collector_ramp9:
        courseD_collector_ramp9_b: Якщо ви хочете спростити свій код, ви можете помістити
          один цикл повторення всередині іншого! Це називається \*\* вкладена петля
          \*\*.
      courseD_farmer_while3:
        courseD_farmer_while3_a: Цикл може допомогти вам спростити свій код тут.
      courseD_farmer_while3_2018:
        courseD_farmer_while3_a: Цикл може допомогти вам спростити свій код тут.
      courseD_farmer_while3_2019:
        courseD_farmer_while3_a: Цикл може допомогти вам спростити свій код тут.
      courseD_iceage_loops2:
        courseD_iceage_loops2_b: Якщо ви застрягли, спробуйте виписати кроки на аркуші
          паперу.
      courseD_iceage_loops2_2019:
        courseD_iceage_loops2_b: Якщо ви застрягли, спробуйте виписати кроки на аркуші
          паперу.
      courseD_iceage_loops4:
        courseD_iceage_loops4_a: Не бійся запускати свій код і подивитися, що станеться!
      courseD_iceage_loops4_2019:
        courseD_iceage_loops4_a: Не бійся запускати свій код і подивитися, що станеться!
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_nestedLoops3:
        courseD_maze_nestedLoops3_b: Не вдається з'ясувати, де класти цикли? Спробуйте
          написати код покроково або дивіться в шаблон.
      courseD_maze_nestedLoops3_2018:
        courseD_maze_nestedLoops3_b: Не вдається з'ясувати, де класти цикли? Спробуйте
          написати код покроково або дивіться в шаблон.
      courseD_maze_nestedLoops3_2019:
        courseD_maze_nestedLoops3_b: Не вдається з'ясувати, де класти цикли? Спробуйте
          написати код покроково або дивіться в шаблон.
      courseD_maze_nestedLoops5:
        courseD_maze_nestedLoops5_b: Не вдається з'ясувати, де класти цикли? Спробуйте
          написати код покроково або дивіться в шаблон.
      courseD_maze_nestedLoops5_2018:
        courseD_maze_nestedLoops5_b: Не вдається з'ясувати, де класти цикли? Спробуйте
          написати код покроково або дивіться в шаблон.
      courseD_maze_nestedLoops5_2019:
        courseD_maze_nestedLoops5_b: Не вдається з'ясувати, де класти цикли? Спробуйте
          написати код покроково або дивіться в шаблон.
      courseD_maze_ramp1:
        courseC_maze_programming1_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5a:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5b:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Існує два способи вирішити цю загадку!
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: Не забудьте скористатися кнопкою "Крок", щоб пройти
          через блок по блоках і шукати помилки.
        courseD_maze_ramp7_c: Якщо ви хочете спростити свій код, ви можете помістити
          один цикл повторення всередині іншого! Це називається \*\* вкладена петля
          \*\*.
      courseD_maze_until3:
        courseD_maze_until3_b: Якщо ви застрягли, спробуйте виписати кроки на папері
          та шукати місця, де вони повторюються.
        courseD_maze_until3_c: Чи є шаблон сходи, який ви можете слідкувати за цією
          загадкою?
      courseD_maze_until3_2018:
        courseD_maze_until3_b: Якщо ви застрягли, спробуйте виписати кроки на папері
          та шукати місця, де вони повторюються.
        courseD_maze_until3_c: Чи є шаблон сходи, який ви можете слідкувати за цією
          загадкою?
      courseD_maze_until3_2019:
        courseD_maze_until3_b: Якщо ви застрягли, спробуйте виписати кроки на папері
          та шукати місця, де вони повторюються.
        courseD_maze_until3_c: Чи є шаблон сходи, який ви можете слідкувати за цією
          загадкою?
      courseD_maze_until4:
        courseD_maze_until4_b: Чи є шаблон сходи, який ви можете слідкувати за цією
          загадкою?
      courseD_maze_until4_2018:
        courseD_maze_until4_b: Чи є шаблон сходи, який ви можете слідкувати за цією
          загадкою?
      courseD_maze_until4_2019:
        courseD_maze_until4_b: Чи є шаблон сходи, який ви можете слідкувати за цією
          загадкою?
      courseD_maze_until5:
        courseD_maze_until5_c: Після кожного кроку, зомбі повинні перевірити, чи є
          шлях наліво. Що він повинен зробити, якщо знайде його?
      courseD_scrat_ramp1:
        courseC_maze_programming1_b: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_scrat_ramp4:
        courseC_maze_programming4_c: Не бійся помилятися! Спробуйте додати блоки та
          запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте, що
          ви вирішили головоломку ще.
      courseD_scrat_ramp5:
        courseC_maze_programming5_b: Як далеко потрібно рухатися, щоб дістатися до
          кута?
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Існує два способи вирішити цю загадку!
        courseD_scrat_programming6_c: Не бійся помилятися! Спробуйте додати блоки
          та запустити код, щоб побачити, що станеться, навіть якщо ви не думаєте,
          що ви вирішили головоломку ще.
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: Не забудьте скористатися кнопкою "Крок", щоб пройти
          через блок по блоках і шукати помилки.
        courseD_maze_ramp7_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви не думаєте, що ви вирішили
          головоломку ще.
      courseE_artist_concept4:
        courseE_artist_concept4_c: Після нанесення лінії квадратів ви можете обернутись
          і намалювати чергу лінійки квадратів, що йдуть зліва, або ви можете перейти
          назад до лівої частини малюнка, щоб намалювати іншу лінію квадратів. Кого
          ви віддаєте перевагу?
      courseE_artist_concept4_2018:
        courseE_artist_concept4_c: Після нанесення лінії квадратів ви можете обернутись
          і намалювати чергу лінійки квадратів, що йдуть зліва, або ви можете перейти
          назад до лівої частини малюнка, щоб намалювати іншу лінію квадратів. Кого
          ви віддаєте перевагу?
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'На пів шестикутника має \*\* довжину
          30 \*\* і повертає направо на \*\* 60 градусів \*\*.  '
        courseE_artist_concept_challenge1_b: '2/3 трикутник має \*\* довжину 80 \*\*
          і повертає вправо на \*\* 120 градусів \*\*. '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'На пів шестикутника має \*\* довжину
          30 \*\* і повертає направо на \*\* 60 градусів \*\*.  '
        courseE_artist_concept_challenge1_b: '2/3 трикутник має \*\* довжину 80 \*\*
          і повертає вправо на \*\* 120 градусів \*\*. '
      courseE_artist_functions1:
        courseE_artist_functions1_a: Квадрати мають 100 пікселів, тобто вам доведеться
          просувати вперед 175 пікселів перед тим, як малювати свою другу площу.
        courseE_artist_functions1_b: Добре малювати перехресні лінії, щоб зробити
          свої окуляри.
      courseE_artist_functions4:
        courseD_artist_functions4_a: Спробуйте скористатись функцією!
      courseE_artist_functions6:
        grade4_artist_functions_windows0_c: Не бійся помилятися! Спробуйте додати
          блоки та запустити код, щоб побачити, що станеться, навіть якщо ви ще не
          вирішили головоломку.
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: Якщо ви ще раз телефонуєте функцію,
          ви зможете створити такий самий дизайн у фінальному кутку.
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_a: Якщо ви ще раз телефонуєте функцію,
          ви зможете створити такий самий дизайн у фінальному кутку.
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_a: Якщо ви ще раз телефонуєте функцію,
          ви зможете створити такий самий дизайн у фінальному кутку.
      courseE_bee_functions5:
        courseE_bee_functions5_a: Редагуйте функцію так, щоб вона вирішила головоломку
          без зміни основної програми.
      courseE_bee_functions6:
        courseE_bee_functions6_a: Якщо головоломка здається складною, спробуйте трохи
          побудувати свою функцію. Додайте кілька блоків, а потім спробуйте. Додайте
          більше, а потім повторіть спробу. Незабаром ти туди дістанешся! ! \[] (<https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif>)
        courseE_bee_functions6_b: Це може допомогти в цьому випадку рухатися всередині
          функції, але не всі ваші `move` блоків повинні бути там.
      courseE_bee_functions7:
        courseE_bee_functions7_a: Якщо головоломка здається складною, спробуйте трохи
          побудувати свою функцію. Додайте кілька блоків, а потім спробуйте. Додайте
          більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: Якщо головоломка здається складною, спробуйте
          трохи побудувати свою функцію. Додайте кілька блоків, а потім спробуйте.
          Додайте більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
        courseE_bee_functions_challenge1_b: Не забудьте побудувати свій код усередині
          зеленого функціонального блоку.
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: Якщо головоломка здається складною, спробуйте
          трохи побудувати свою функцію. Додайте кілька блоків, а потім спробуйте.
          Додайте більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
        courseE_bee_functions_challenge1_b: Не забудьте побудувати свій код усередині
          зеленого функціонального блоку.
      courseE_farmer_concept2:
        courseE_farmer_concept2_b: Функція, яка повертається, йде вниз по шляху, збирає
          гарбузи, і тут повертається головна горизонтальна шляха.
      courseE_farmer_concept2_2018:
        courseE_farmer_concept2_b: Функція, яка повертається, йде вниз по шляху, збирає
          гарбузи, і тут повертається головна горизонтальна шляха.
      courseE_farmer_functions4b:
        courseE_farmer_functions4b_a: Не бійся помилятися! Спробуйте додати блоки
          та запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseE_farmer_functions5c:
        courseE_farmer_functions5c_b: Не бійся помилятися! Спробуйте додати блоки
          та запустити код, щоб побачити, що станеться, навіть якщо ви ще не вирішили
          головоломку.
      courseE_farmer_functions8b:
        courseE_farmer_functions8b_a: Спробуйте запустити вказаний код, щоб побачити,
          що це робить. Що вам потрібно після цього?
      courseF_artist_for10:
        courseF_artist_for10_b: Зображення на малюнку використовує поворот 61 градус.
      courseF_artist_for10_2018:
        courseF_artist_for10_b: Зображення на малюнку використовує поворот 61 градус.
      courseF_artist_for10_2019:
        courseF_artist_for10_b: Зображення на малюнку використовує поворот 61 градус.
      courseF_artist_for3:
        courseF_artist_for3_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_artist_for3_2018:
        courseF_artist_for3_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_artist_for3_2019:
        courseF_artist_for3_b: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_artist_for4:
        courseF_artist_for4_a: "\\*\\* Яке мінімальне число вам знадобиться? \nЯке
          найбільше число? \nНаскільки велика кількість кожного разу? \\*\\*\nЦе питання,
          які вам потрібно запитати, щоб заповнити пробіли для циклу `for`."
        courseF_artist_for4_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: "\\*\\* Яке мінімальне число вам знадобиться? \nЯке
          найбільше число? \nНаскільки велика кількість кожного разу? \\*\\*\nЦе питання,
          які вам потрібно запитати, щоб заповнити пробіли для циклу `for`."
        courseF_artist_for4_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: "\\*\\* Яке мінімальне число вам знадобиться? \nЯке
          найбільше число? \nНаскільки велика кількість кожного разу? \\*\\*\nЦе питання,
          які вам потрібно запитати, щоб заповнити пробіли для циклу `for`."
        courseF_artist_for4_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_artist_for7:
        courseF_artist_for7_b: Зверніть увагу, що ця спіраль виявляється правильним,
          а не зліва!
      courseF_artist_for7_2018:
        courseF_artist_for7_b: Зверніть увагу, що ця спіраль виявляється правильним,
          а не зліва!
      courseF_artist_for7_2019:
        courseF_artist_for7_b: Зверніть увагу, що ця спіраль виявляється правильним,
          а не зліва!
      courseF_artist_fwp5:
        courseF_artist_fwp5_b: Не забудьте стрибати 100 пікселів між фігурами.
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_b: 'Це серія восьмикутників з боками, які є
          довжиною `контр-пікселів`. '
        courseF_artist_fwp_challenge1_c: Кожний восьмикутник викликається з внутрішньої
          лінії `for`, яка йде від 200 до 2 на 2.
        courseF_artist_fwp_challenge1_d: Не забудьте повернути на 22,5 градусів в
          кінці кожної ітерації.
        courseF_artist_fwp_challenge1_e: Як колір кожного восьмикутника, так і ширина
          пера контролюються змінні `counter`.
      courseF_artist_variables8:
        courseF_artist_variables8_c: Обов'язково використовуйте цикл `repeat` для
          нанесення трикутника.
      courseF_artist_variables8_2018:
        courseF_artist_variables8_c: Обов'язково використовуйте цикл `repeat` для
          нанесення трикутника.
      courseF_artist_variables8_2019:
        courseF_artist_variables8_c: Обов'язково використовуйте цикл `repeat` для
          нанесення трикутника.
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_d: |-
          \*\* Рішення: \*\*

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_d: |-
          \*\* Рішення: \*\*

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_d: |-
          \*\* Рішення: \*\*

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_for5:
        courseF_bee_for5_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_bee_for5_2018:
        courseF_bee_for5_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_bee_for5_2019:
        courseF_bee_for5_c: Не бійся помилятися! Спробуйте додати блоки та запустити
          код, щоб побачити, що станеться, навіть якщо ви ще не вирішили головоломку.
      courseF_bee_for8:
        courseF_bee_for8_b: У цій головоломці вам доведеться пересуватися по шаблону
          сходами, щоб дістати до квітів.
      courseF_bee_for8_2018:
        courseF_bee_for8_b: У цій головоломці вам доведеться пересуватися по шаблону
          сходами, щоб дістати до квітів.
      courseF_bee_for8_2019:
        courseF_bee_for8_b: У цій головоломці вам доведеться пересуватися по шаблону
          сходами, щоб дістати до квітів.
      courseF_bee_for9:
        courseF_bee_for9_c: Схоже, вам потрібно буде перетворити бджолу на початку
          кожної ітерації циклу, якщо хочете вирішити головоломку.
      courseF_bee_for9_2018:
        courseF_bee_for9_c: Схоже, вам потрібно буде перетворити бджолу на початку
          кожної ітерації циклу, якщо хочете вирішити головоломку.
      courseF_bee_for9_2019:
        courseF_bee_for9_c: Схоже, вам потрібно буде перетворити бджолу на початку
          кожної ітерації циклу, якщо хочете вирішити головоломку.
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Спробуйте використати два «за» петлі: один
          для підйому та захоплення нектару, а інший - для підйому та виготовлення
          меду.'
        courseF_bee_for_challenge2_c: "Зверніть увагу, що для циклу `for` потрібні
          кілька регулярних циклів всередині, що повторюють`counter` times, щоб зробити
          збільшене зображення сходами. \nІнший `for` петлі потребує лише одного регулярного
          циклу, щоб зробити `counter` суму мед."
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Спробуйте використати два «за» петлі: один
          для підйому та захоплення нектару, а інший - для підйому та виготовлення
          меду.'
        courseF_bee_for_challenge2_c: "Зверніть увагу, що для циклу `for` потрібні
          кілька регулярних циклів всередині, що повторюють`counter` times, щоб зробити
          збільшене зображення сходами. \nІнший `for` петлі потребує лише одного регулярного
          циклу, щоб зробити `counter` суму мед."
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: "Подивіться на цю опцію для переміщення:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Спробуйте використати два «за» петлі: один
          для підйому та захоплення нектару, а інший - для підйому та виготовлення
          меду.'
        courseF_bee_for_challenge2_c: "Зверніть увагу, що для циклу `for` потрібні
          кілька регулярних циклів всередині, що повторюють`counter` times, щоб зробити
          збільшене зображення сходами. \nІнший `for` петлі потребує лише одного регулярного
          циклу, щоб зробити `counter` суму мед."
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: Якщо головоломка здається складною, спробуйте трохи
          побудувати свою функцію. Додайте кілька блоків, а потім спробуйте. Додайте
          більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: Якщо головоломка здається складною, спробуйте трохи
          побудувати свою функцію. Додайте кілька блоків, а потім спробуйте. Додайте
          більше, а потім повторіть спробу. Незабаром ти туди дістанешся!
      courseF_bee_fwp5:
        courseF_bee_fwp5_a: Порахуйте кількість пропусків, які потрібно перевірити
          в кожному розтяжку, і використовуйте ці цифри як параметри для виклику функції.
      coursea_maze_ramp1_2018:
        courseC_maze_programming1_b: Не бійся помилятися! Спробуйте щось, і якщо він
          не працює, спробуйте щось інше!
      coursea_maze_ramp1_2019:
        courseC_maze_programming1_b: Не бійся помилятися! Спробуйте щось, і якщо він
          не працює, спробуйте щось інше!
