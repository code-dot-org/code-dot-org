---
ko-KR:
  data:
    long_instructions:
      2-3 Artist 4: 고양이를 위한 집을 완성해주세요.
      2-3 Artist 9 NEW: 이 연을 완성해주세요.
      2-3 Artist Free Play: '자유 플레이: 원하는 것을 그려보세요.'
      2-3 Artist Nested Loops 10: 패턴을 완성시키기 위해서 이 코드를 12번 반복해 보세요.
      2-3 Artist Nested Loops 12: 이 코드를 12번 반복시켜서 곱슬곱슬한 그림을 그려보세요.
      2-3 Artist Nested Loops Free Play: |-
        자유 플레이시간입니다.
        중첩 반복을 이용해서 원하는 것을 그려보세요.
      2-3 Bee Functions 1: "함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 모임이라고 할 수 있습니다.\\\r\n\\\r\n\"꽃꿀
        2번 모으기\" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요."
      2-3 Bee Loops 3A: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      4-5 Artist Free Draw 1: |-
        자유롭게 그려보세요!
        무엇이든지 그리고 싶은 것을 그려보세요.
      4-5 Artist Patterns 7: 이전 퍼즐에서 사용했던 코드를 변형해서 더 복잡한 패턴을 만들어보세요. 다이아몬드들이 얼마나 겹쳐
        그려지는지 살펴보고, 첫 번째 "뒤로 점프하기"를 100에서 50사이 정도로 바꿔보세요. - 그리고 나서 두 번째 "뒤로 점프하기"는
        얼마나 더 멀리 해야 할까요?
      4-5 Nested Loops 5: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      4-5 Nested Loops 9: 악어 입 안에 이빨을 그려주세요!
      CSD U6 iter predict bubbles: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      Course 4 Artist For Loops 6a: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      CourseD_Dance_Party_01: |-
        _댄스 파티를 해볼까요!_

        `새로 만들기` 블록을 작업공간에 드래그하고, `설정` 블록 안에 연결하여 첫 번째 댄서를 만들어보세요.

        -   _더 자세한 정보나 추가 과제를 원하면 왼쪽 전구를 클릭해보세요._
      CourseD_Dance_Party_02: |-
        이 사슴을 춤추게 해볼까요!

        <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> 블록을 작업공간에 드래그하세요. <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml> 블록 밑에 연결하세요. 4번째 마디 후에는 댄서가 새로운 동작을 시작해야 합니다.

        **박자**는 음악에서 시간 계산에 사용됩니다. 이 튜토리얼에서 한 마디는 네 박자 길이입니다.
      CourseD_Dance_Party_03: |-
        _이제 춤을 춰볼까요!_

        <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> 블록을 작업공간에 추가하세요. 6번째 마디 후 댄서가 새로운 움직임을 시작하도록 하세요.
      CourseD_Dance_Party_04: |-
        _이 댄스에 플래시가 필요합니다!_

        댄서 뒤에 배경 효과를 추가하는 도구 상자에서 새 블록을 찾아보세요. 음악에 맞춰 변하는 효과를 보세요!
      CourseD_Dance_Party_05: |-
        **두 마디마다** 댄서가 동작을 변경하도록 새로운 블록을 사용하세요!

        \*선택 '(다음)', '(이전)', 또는 '(무작위)'를 선택하면 코드가 실행될 때마다 댄서가 여러 동작을 실행하도록 합니다.
      CourseD_Dance_Party_06: |-
        _댄서가 더 필요해요!_

        고양이와 함께 춤을 추는 'backup\_dancer1'라는 백업 댄서를 만드세요.
      CourseD_Dance_Party_08: |-
        모든 댄서마다 어떻게 보일지를 제어하는 _properties_ 집합이 있습니다.

        댄서의 _size_를 축소하여 댄서가 백그라운드에 있는 것처럼 보이게 할 수 있습니다. 두 백업 댄서를 모두 같은 크기로 만들 수 있나요?
      CourseD_Dance_Party_09: |-
        댄서는 색상의 레이어를 추가할 수 있는 "색조" 속성이 있습니다. 댄서 중 한 명의 색조를 변경해 보세요.
        \*색조는 선택하신 색상을 댄서의 색상과 혼합합니다.
      CourseD_Dance_Party_10: |-
        이제 우리는 댄서의 속성을 변경하는 방법을 알게 되었습니다. 또한 이 블록을 사용하여 음악에 자동으로 응답하는 동일한 속성을 만들 수 있습니다.
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        이 프로그램은 한 댄서의 높이를 제어하는 데 음악의 "베이스" 볼륨(저음)를 사용합니다. 다른 댄서도 음악에 반응하도록 만들 수 있나요?
      CourseD_Dance_Party_11: |-
        <xml><block type="Dancelab_whenKey"></block></xml> 블록을 이용하면 위쪽 화살표를 누를 때 코드를 실행할 수 있습니다.

        댄스의 움직임 변경, 댄서의 속성 변경 또는 한 번에 빠른 이동하기 등을 할 수 있습니다. 창의성을 발휘해서 새로운 블록을 찾아보세요!
      CourseD_Dance_Party_11_5: |-
        이 블록을 확인하세요.

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        이제 한 번에 댄서 여러 명을 만들 수 있어요!

        “모든 오리” 블록을 사용하여 모든 오리가 함께 춤추도록 만드는 코드를 작성해보세요.
      CourseD_Dance_Party_11b: 이제 본격적인 댄스 시간이에요! 왼쪽 화살표 키를 누르면 고양이가 살짝 움직입니다. 오른쪽
        화살표 키를 누르면 로봇이 "드롭"합니다.
      CourseD_Dance_Party_12: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      CourseE_HOC 2018 Level_1: 항해를 앞둔 여러분에게는 보급품이 필요합니다. **상자**![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png)에서
        **보트**![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)를
        얻으세요.
      CourseE_HOC 2018 Level_10: 이것은 바다 유적 어딘가에 숨어 있는 **오징어**![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)입니다.
        여러분은 발견할 수 있을까요?
      CourseE_HOC 2018 Level_11: 검은색 콘크리트 주변에 **프리즈머린** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        벽을 만듭니다. 이것은 **도관**![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)을
        활성화하여 챌린지를 완료합니다!
      CourseE_HOC 2018 Level_2: 넓은 바다에서는 헤엄치는 것보다 보트를 타는 것이 훨씬 쉽습니다! 부두 끝으로 가서 탑승하세요.
      CourseE_HOC 2018 Level_3: 노를 쥐고 보트를 조종하여 바다를 건너 **대구**![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png)를
        잡으세요.
      CourseE_HOC 2018 Level_4: 대구를 **돌고래**![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)에게
        먹여 봅시다. 반복 블록을 사용해서 바다를 빠르게 건너세요.
      CourseE_HOC 2018 Level_5: 어딘가에 **앵무조개**![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)가
        숨어 있어요! 난파선을 탐험하고 **상자**![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)에
        도달하세요.
      CourseE_HOC 2018 Level_6: 밖은 추워 보이네요! 수중 유적으로 가는 길에 **연어**![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)를
        잡으세요.
      CourseE_HOC 2018 Level_7a: 수중 유적을 발견했습니다. 사암에서 **프리즈머린**![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        보물이 들어 있는 **상자**![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)를
        찾으세요.
      CourseE_HOC 2018 Level_8: 처음에는 빙산이더니 이제는 용암인가요? 이 화산 섬을 지나 산호초에서 **열대어**![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)를
        찾으세요.
      CourseE_HOC 2018 Level_9b: 산호초에 도달했습니다. 이제 **바다의 심장**![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)을
        찾을 시간이에요! 파란색과 빨간색 산호를 사용해서 보물 **상자**![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)에
        도달하세요.
      Dance_Party_01: |-
        _댄스 파티를 해볼까요!_

        `새로 만들기` 블록을 작업공간에 드래그하고, `설정` 블록 안에 연결하여 첫 번째 댄서를 만들어보세요.

        -   _더 자세한 정보나 추가 과제를 원하면 왼쪽 전구를 클릭해보세요._
      Dance_Party_02: |-
        이 사슴을 춤추게 해볼까요!

        <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> 블록을 작업공간에 드래그하세요. <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml> 블록 밑에 연결하세요. 4번째 마디 후에는 댄서가 새로운 동작을 시작해야 합니다.

        **박자**는 음악에서 시간 계산에 사용됩니다. 이 튜토리얼에서 한 마디는 네 박자 길이입니다.
      Dance_Party_03: |-
        _이제 춤을 춰볼까요!_

        <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> 블록을 작업공간에 추가하세요. 6번째 마디 후 댄서가 새로운 움직임을 시작하도록 하세요.
      Dance_Party_04: |-
        _이 댄스에 플래시가 필요합니다!_

        댄서 뒤에 배경 효과를 추가하는 도구 상자에서 새 블록을 찾아보세요. 음악에 맞춰 변하는 효과를 보세요!
      Dance_Party_05: |-
        **두 마디마다** 댄서가 동작을 변경하도록 새로운 블록을 사용하세요!

        \*선택 '(다음)', '(이전)', 또는 '(무작위)'를 선택하면 코드가 실행될 때마다 댄서가 여러 동작을 실행하도록 합니다.
      Dance_Party_06: |-
        _댄서가 더 필요해요!_

        고양이와 함께 춤을 추는 'backup\_dancer1'라는 백업 댄서를 만드세요.
      Dance_Party_08: |-
        모든 댄서마다 어떻게 보일지를 제어하는 _properties_ 집합이 있습니다.

        댄서의 _size_를 축소하여 댄서가 백그라운드에 있는 것처럼 보이게 할 수 있습니다. 두 백업 댄서를 모두 같은 크기로 만들 수 있나요?
      Dance_Party_09: |-
        댄서는 색상의 레이어를 추가할 수 있는 "색조" 속성이 있습니다. 댄서 중 한 명의 색조를 변경해 보세요.
        \*색조는 선택하신 색상을 댄서의 색상과 혼합합니다.
      Dance_Party_10: |-
        이제 우리는 댄서의 속성을 변경하는 방법을 알게 되었습니다. 또한 이 블록을 사용하여 음악에 자동으로 응답하는 동일한 속성을 만들 수 있습니다.
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        이 프로그램은 한 댄서의 높이를 제어하는 데 음악의 "베이스" 볼륨(저음)를 사용합니다. 다른 댄서도 음악에 반응하도록 만들 수 있나요?
      Dance_Party_11: |-
        <xml><block type="Dancelab_whenKey"></block></xml> 블록을 이용하면 위쪽 화살표를 누를 때 코드를 실행할 수 있습니다.

        댄스의 움직임 변경, 댄서의 속성 변경 또는 한 번에 빠른 이동하기 등을 할 수 있습니다. 창의성을 발휘해서 새로운 블록을 찾아보세요!
      Dance_Party_11_5: |-
        이 블록을 확인하세요.

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        이제 한 번에 댄서 여러 명을 만들 수 있어요!

        “모든 오리” 블록을 사용하여 모든 오리가 함께 춤추도록 만드는 코드를 작성해보세요.
      Dance_Party_11b: 이제 본격적인 댄스 시간이에요! 왼쪽 화살표 키를 누르면 고양이가 살짝 움직입니다. 오른쪽 화살표 키를 누르면
        로봇이 "드롭"합니다.
      Dance_Party_12: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      Dance_Party_extras_battle: |-
        # 댄스 크루

        두 명의 댄스 크루가 댄스 대결을 펼칩니다. 화살표 키는 댄서 한 명을 제어하고 "w, a, s, d" 키는 다른 댄서를 제어합니다. 친구와 댄스 대결을 펼치고 댄스 대결을 향상하도록 노력해보세요.

        -   춤을 제어하는 키 추가
        -   키를 누를 때 백댄서도 반응하게 하기
        -   가시성을 설정하여 4마디마다 댄서 교체
      Dance_Party_extras_every_beat: |-
        # 4분 음표

        우리 댄스의 대부분은 전체 마디를 사용했지만 각 마디는 4분 음표 네 개로 구성됩니다. ‘0.25 마디마다’를 사용하여 댄서가 4분 음표마다 박수치게 하는 춤입니다.

        또한 이 댄스는 _조건_ 블록을 사용하여 ‘0.25 마디마다’ 블록이 댄스를 변경할 수 있는 타이밍을 제어합니다. 조건 블록의 숫자를 변경하며 댄스가 어떻게 변하는지 확인하세요.

        -   다른 음표 길이로 실험하세요.(2분 음표의 경우 0.5, 8분 음표의 경우 0.125)
        -   ‘마디 이후’ 이벤트를 추가하세요.
        -   "마디"를 "초"로 전환하는 방식으로 댄스의 타이밍을 시험해보세요.
      Dance_Party_extras_layout: |-
        # 대형 만들기

        댄스 전체에서 백댄서의 대형을 변경하기 위해 '레이아웃' 블록을 사용하는 댄스입니다. 한번 확인해보세요. 다음의 아이디어를 통해 확장해보세요.

        -   다른 레이아웃으로 두 번째 댄서 그룹 만들기
        -   키를 누를 때 레이아웃 변경
        -   댄서 대형을 바꿀 때 속성 변경
      Dance_Party_extras_on_beat: |-
        # 저음, 중간음, 고음

        음악의 다른 부분의 소리가 커지면 “피크” 이벤트를 사용하여 코드를 실행하는 댄스입니다. 다양한 음악을 이용하면서 댄스가 어떻게 변하는지 확인해보세요.
      Dance_Party_extras_speed: |-
        # 속도를 높이고 속도를 낮추세요

        이 마지막 댄스에서는 '스피드 설정' 블록을 사용하여 댄서 각각이 얼마나 빨리 움직이는지 제어해봅니다. 음악의 다른 지점에서 다른 속도로 실험해보세요. 이 댄스를 다양하게 만들어보거나 이전 댄스 중 원하는 댄스로 돌아가 더욱 멋지게 만들어보세요.
      Dance_Party_extras_visible: |-
        # 그들이 어디로 갔나요?

        이 댄스는 두 개의 댄서 그룹을 보여주고 숨깁니다. 확인해 보시고 나만의 솜씨를 추가하세요.

        -   다른 댄서 그룹 추가
        -   화살표 키를 사용하여 댄서 보이기 및 숨기기
        -   모든 댄서를 숨기고 흥미로운 배경 효과로 바꾸기
      Function intro Ryan: "작업 공간에 있는 '다리 짓기' **함수가** 보이죠?  강을 건너는 해결 방법은 이미 주어졌어요!
        \\\r\n \\\r\n녹색의 작은 블록을 작업 공간으로 두 번 가져와 길을 만들고 {currentPlayerName}이(가) 레드스톤
        횃불 [redstone_torch] 쪽으로 갈 수 있게 도와주세요."
      Function intro Ryan_2019: "작업 공간에 있는 '다리 짓기' **함수가** 보이죠?  강을 건너는 해결 방법은 이미
        주어졌어요! \\\r\n \\\r\n녹색의 작은 블록을 작업 공간으로 두 번 가져와 길을 만들고 {currentPlayerName}이(가)
        레드스톤 횃불 [redstone_torch] 쪽으로 갈 수 있게 도와주세요."
      HOC 2018 Level_1: 항해를 앞둔 여러분에게는 보급품이 필요합니다. **상자**![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png)에서
        **보트**![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)를
        얻으세요.
      HOC 2018 Level_10: 이것은 바다 유적 어딘가에 숨어 있는 **오징어**![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)입니다.
        여러분은 발견할 수 있을까요?
      HOC 2018 Level_11: 검은색 콘크리트 주변에 **프리즈머린** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        벽을 만듭니다. 이것은 **도관**![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)을
        활성화하여 챌린지를 완료합니다!
      HOC 2018 Level_12: 축하합니다! 활짝 열린 수중 월드가 여러분을 기다립니다. 산호초를 만드세요! 화산을 만드세요! 난파선을
        만드세요! 모든 것은 여러분에게 달렸습니다.
      HOC 2018 Level_2: 넓은 바다에서는 헤엄치는 것보다 보트를 타는 것이 훨씬 쉽습니다! 부두 끝으로 가서 탑승하세요.
      HOC 2018 Level_3: 노를 쥐고 보트를 조종하여 바다를 건너 **대구**![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png)를
        잡으세요.
      HOC 2018 Level_4: 대구를 **돌고래**![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)에게
        먹여 봅시다. 반복 블록을 사용해서 바다를 빠르게 건너세요.
      HOC 2018 Level_5: 어딘가에 **앵무조개**![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)가
        숨어 있어요! 난파선을 탐험하고 **상자**![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)에
        도달하세요.
      HOC 2018 Level_6: 밖은 추워 보이네요! 수중 유적으로 가는 길에 **연어**![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)를
        잡으세요.
      HOC 2018 Level_7a: 수중 유적을 발견했습니다. 사암에서 **프리즈머린**![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        보물이 들어 있는 **상자**![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)를
        찾으세요.
      HOC 2018 Level_8: 처음에는 빙산이더니 이제는 용암인가요? 이 화산 섬을 지나 산호초에서 **열대어**![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)를
        찾으세요.
      HOC 2018 Level_9b: 산호초에 도달했습니다. 이제 **바다의 심장**![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)을
        찾을 시간이에요! 파란색과 빨간색 산호를 사용해서 보물 **상자**![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)에
        도달하세요.
      K-1 Bee Loops 5: 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모아보세요!
      K-1 Maze Loops 2: 돼지에게 갈 수 있도록, 반복(횟수) 블록을 사용해보세요.
      K-1 Maze Loops 8: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      MC HOC 2016 SCORE LEVEL: 일부 게임에서는 점수를 얻을 수 있습니다. 철 골렘과 술래잡기를 하세요. 철 골렘을 건드리면
        점수를 얻을 수 있도록 '1점 추가' 블록을 사용하세요. 5점을 획득하여 승리하세요!
      MC_HOC_2017_01_RETRY: "{currentPlayerName}이(가) 집 안에 갇혀 버렸어요. 하지만 Agent가 있으니
        걱정할 필요는 없답니다!   \\\r\n \\\r\n   \\\r'앞으로 이동하기' 블록을 작업 공간의 '실행하면' 블록에 연결해서
        Agent가 감압판 [PressurePlate_Up] 위로 가게 하세요. 그런 다음 '실행'을 누르고 방향키를 사용해 {currentPlayerName}을(를)
        집 밖으로 움직여 **상자** [chest]를 집게 하세요. "
      MC_HOC_2017_01_RETRY_2019: "{currentPlayerName}이(가) 집 안에 갇혀 버렸어요. 하지만 Agent가
        있으니 걱정할 필요는 없답니다!   \\\r\n \\\r\n   \\\r'앞으로 이동하기' 블록을 작업 공간의 '실행하면' 블록에 연결해서
        Agent가 감압판 [PressurePlate_Up] 위로 가게 하세요. 그런 다음 '실행'을 누르고 방향키를 사용해 {currentPlayerName}을(를)
        집 밖으로 움직여 **상자** [chest]를 집게 하세요. "
      MC_HOC_2017_02_Cole: "{currentPlayerName}의 모험이 시작되었어요! 모험에 필요한 **지도** [map_empty]를
        얻으려면 오른쪽에 있는 잠긴 문을 열어야 합니다. \\\r\n \\\r\n작업 공간으로 코드를 가져온 다음 Agent를 감압판 [PressurePlate_Up]
        위로 움직여 {currentPlayerName}이(가) 들어갈 수 있게 해주세요. "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName}의 모험이 시작되었어요! 모험에 필요한 **지도** [map_empty]를
        얻으려면 오른쪽에 있는 잠긴 문을 열어야 합니다. \\\r\n \\\r\n작업 공간으로 코드를 가져온 다음 Agent를 감압판 [PressurePlate_Up]
        위로 움직여 {currentPlayerName}이(가) 들어갈 수 있게 해주세요. "
      MC_HOC_2017_03_Cole: "{currentPlayerName}이(가) 모험을 계속하려면 **나침반** [compass]이 필요합니다.
        \ \\\r\n   \\\r\nAgent가 문을 열게 코드를 만드세요. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName}이(가) 모험을 계속하려면 **나침반** [compass]이
        필요합니다.  \\\r\n   \\\r\nAgent가 문을 열게 코드를 만드세요. "
      MC_HOC_2017_04POINT5_RYAN: "무사히 건넜군요! \\\r\n\\\r\n이제 {currentPlayerName}이(가)
        안전하게 미로를 통과해 **도끼** [diamond_axe]를 찾을 수 있게 도와주세요.\\\r"
      MC_HOC_2017_04POINT5_RYAN_2019: "무사히 건넜군요! \\\r\n\\\r\n이제 {currentPlayerName}이(가)
        안전하게 미로를 통과해 **도끼** [diamond_axe]를 찾을 수 있게 도와주세요.\\\r"
      MC_HOC_2017_04_Cole: "Agent는 물을 그냥 건널 수 있어요!  \\\r\n \\\r\n'반복' 루프를 사용해 이 퍼즐을
        해결하고 {currentPlayerName}이(가) 문 안쪽에 있는 **양동이** [bucket_empty]를 찾게 도와주세요."
      MC_HOC_2017_04_Cole_2019: "Agent는 물을 그냥 건널 수 있어요!  \\\r\n \\\r\n'반복' 루프를 사용해
        이 퍼즐을 해결하고 {currentPlayerName}이(가) 문 안쪽에 있는 **양동이** [bucket_empty]를 찾게 도와주세요."
      MC_HOC_2017_05_Cole: "이런, 다리가 무너져 버렸어요! \\\r\n\\\r\nAgent가 블록을 '설치'해 다리를 다시
        짓게 코드를 만들어 {currentPlayerName}이(가) **삽** [diamond_shovel]까지 갈 수 있게 도와주세요."
      MC_HOC_2017_05_Cole_2019: "이런, 다리가 무너져 버렸어요! \\\r\n\\\r\nAgent가 블록을 '설치'해 다리를
        다시 짓게 코드를 만들어 {currentPlayerName}이(가) **삽** [diamond_shovel]까지 갈 수 있게 도와주세요."
      MC_HOC_2017_06_Cole: "이번에 만난 강은 훨씬 폭이 넓군요! \\\r\n \\\r\nAgent가 다리를 지을 수 있게 코드를
        바꿔서 짓게 도와 {currentPlayerName}이(가) **곡괭이** [diamond_pickaxe]까지 갈 수 있게 도와주세요. "
      MC_HOC_2017_06_Cole_2019: "이번에 만난 강은 훨씬 폭이 넓군요! \\\r\n \\\r\nAgent가 다리를 지을 수
        있게 코드를 바꿔서 짓게 도와 {currentPlayerName}이(가) **곡괭이** [diamond_pickaxe]까지 갈 수 있게
        도와주세요. "
      MC_HOC_2017_07_Cole: "얼음이 길목을 막고 있네요!  \\\r\n \\\r\n`경로 확보하기` 함수를 사용하면 얼음을 제거해
        {currentPlayerName}이(가) 광물 수레 [minecart_normal까지 갈 수 있어요]! "
      MC_HOC_2017_07_Cole_2019: "얼음이 길목을 막고 있네요!  \\\r\n \\\r\n`경로 확보하기` 함수를 사용하면
        얼음을 제거해 {currentPlayerName}이(가) 광물 수레 [minecart_normal까지 갈 수 있어요]! "
      MC_HOC_2017_10_RETRY: "작업 공간에 있는 두 함수가 어떻게 다른지 아시겠어요? \\\r\n \\\r\n각 함수를 툴 박스의
        다른 코드와 함께 사용해 광물 수레로 가는 길을 확보하고 **부싯돌과 부시** [flint_and_steel]를 찾으세요. \\\r\n "
      MC_HOC_2017_10_RETRY_2019: "작업 공간에 있는 두 함수가 어떻게 다른지 아시겠어요? \\\r\n \\\r\n각 함수를
        툴 박스의 다른 코드와 함께 사용해 광물 수레로 가는 길을 확보하고 **부싯돌과 부시** [flint_and_steel]를 찾으세요.
        \\\r\n "
      MC_HOC_2017_Ali: '아래 함수들을 살펴 보고 이 함수들을 사용해 {currentPlayerName}이(가) 가스트를 피해 **효과부여
        책** [book_enchanted]까지 안전하게 갈 수 있는 방법을 생각해보세요. '
      MC_HOC_2017_Ali_2019: '아래 함수들을 살펴 보고 이 함수들을 사용해 {currentPlayerName}이(가) 가스트를
        피해 **효과부여 책** [book_enchanted]까지 안전하게 갈 수 있는 방법을 생각해보세요. '
      MC_HOC_2017_FP20x20: "**무료플레이:** 이제 실력을 발휘할 시간입니다! Agent의 코드를 사용해 월드를 탐험하세요."
      MC_HOC_2017_FP20x20_2019: "**무료플레이:** 이제 실력을 발휘할 시간입니다! Agent의 코드를 사용해 월드를 탐험하세요."
      Overworld Chop Tree: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록 부수기"
        명령을 이용해 나무를 베세요.
      Overworld Chop Tree_2019: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록
        부수기" 명령을 이용해 나무를 베세요.
      Overworld House Frame Chosen: 여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요. "repeat"
        명령은 편리하게 사용할 수 있습니다.
      Overworld House Frame Chosen_2019: 여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요. "repeat"
        명령은 편리하게 사용할 수 있습니다.
      Overworld Move to Sheep: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Move to Sheep_2019: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Place Wall: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에 놓아서 집의
        첫 번째 부분을 지어보세요.
      Overworld Place Wall_2019: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에
        놓아서 집의 첫 번째 부분을 지어보세요.
      Overworld Shear Sheep: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Overworld Shear Sheep_2019: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Underground Avoiding Lava: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground Avoiding Lava_2019: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground If Statements: 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는 마세요.
        "if"(만약) 명령을 사용해서 용암을 발견하면 조약돌을 놓으세요.
      Underground If Statements_2019: 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는
        마세요. "if"(만약) 명령을 사용해서 용암을 발견하면 조약돌을 놓으세요.
      course4_artist_fwp_challenge1: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을
        모두 지우고 완전히 새로 만들어 봐도 됩니다.)
      courseD_bee_nestedLoops8: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2018: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2019: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_maze_nestedLoops4: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복 실행
        구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2018: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2019: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseE_bee_functions2: "함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 모임이라고 할 수 있습니다.\\\r\n\\\r\n\"꽃꿀
        2번 모으기\" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요."
      courseE_bee_functions3: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\\r\n\\\r\n\"5번
        모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      courseF_bee_for_challenge2: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2018: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2019: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      frozen circle: 원은 특별한 도형입니다. 원을 그리기 위해서 물음표 부분에 어떤 수가 들어가야 할까요?
      frozen circle function: 새로운 "원 그리기" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는
        것을 잊지 마세요.
      frozen circle function in circle: 이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요.
      frozen circle function with parameter: 원하는 크기로 그릴 수 있는 "원 그리기" 블럭이 있습니다. 이 블럭을
        사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?
      frozen cross: |-
        더하기 기호를 만들기 위해서 이 명령어들을 "반복" 블럭 안에 넣어보세요.
        엘사가 앞 뒤로 움직일 수 있는 것 아시죠?
      frozen cross rotate: 이제 10번 반복해보세요. 각 선들을 그리면서 회전하기 위해서 몇 도가 필요할까요?
      frozen cross rotate dense: '이제 90번 반복해 보세요. 360도를 회전하려면 90도를 몇 번 회전해야 할까요? 힌트:
        생각보다 작은 수입니다.'
      frozen diamond: |-
        이 블록들을 반복 블록 안에 넣어서 평행사변형을 만들어보세요.
        사각형하고 비슷하지만 각이 다릅니다. 4개의 각이 모두 90도가 아니라, 한 가지는 60도 이고 다른 한가지는 120도 입니다.
      frozen diamond mini snowflake: 모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번
        그리기 위해 "반복"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보세요.
      frozen diamond snowflake: 이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩
        오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다.
      frozen freeplay: 여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요.
      frozen perpendicular: 이제 두 개의 선을 90도 만큼 교차시켜 그릴 수 있는지 살펴보세요. "회전"블럭과 "이동" 블럭을
        사용해야 할 것 입니다.
      frozen snowflake branch: '"눈송이 가지 만들기" 블럭을 이용해 3개의 가지로 뻗어나가는 그럴 듯한 눈송이를 만들어보세요.'
      frozen snowflake full: 이제 이쁜 눈송이를 만들기 위해 8번 반복해 보세요.
      frozen snowflower: 아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의
        원을 5개 이용해 패턴을 만들 수 있겠어요?
      frozen square iterative: 사각형을 만들기 위한 과정에 반 정도 왔습니다. 4개의 선을 모아 사각형을 그려보세요.
      frozen square loop: |-
        안녕하세요. 저는 아렌델의 안나입니다!
        더 적은 블록들을 사용하는 "반복" 블록을 이용해서 사각형을 1개 만들어보세요.
        사각형 1개를 만들기 위해서 "반복" 블록 안 (???) 값으로 얼마나 넣어야 할까요?
      frozen square loop 3x: 이제 3개의 사각형을 회전시켜 만들어 보세요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는
        것을 잊지 마세요.
      frozen square snowflake: |-
        "반복" 블록을 사용해서 사각형을 10번 만들어 보세요.
        삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요.
