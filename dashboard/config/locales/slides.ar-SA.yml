---
ar:
  slides:
    maze_intro:
      1:
        image: 'notes/hoc1_1.jpg

'
        text: مرحباً في أول ساعة من البرمجة! دعنا نتجه إلى تذوقك الأول للبرمجة .
      2:
        image: notes/hoc1_2.jpg
        text: بلوكلي هي لغة برمجية مرئية تمكنك من سحب وافلات القطع لكتابة الكود البرمجي.
      3:
        image: notes/hoc1_3.jpg
        text: تتم كتابة معظم الاكواد البرمجية، ولكن بلوكلي هو مرئي. بحيث ان كل القطع
          تطابق سطر من الكود البرمجي " الحقيقي ".
      4:
        image: 'notes/hoc1_4.jpg

'
        text: أنت ستتعلم أسس علوم الكمبيوتر، والمفاهيم التي يتم استخدامها في أي مكان
          من صنع تطبيقات للتحكم في تجول المريخ.
      5:
        image: 'notes/hoc1_5.jpg

'
        text: البرنامج هو مجموعة من الإيعازات التي يتبعها جهاز الكمبيوتر الخاص بك.
      6:
        image: 'notes/hoc1_6.jpg

'
        text: الهدف من برنامجك الاول هو  توصيل "الطيور الغاضبة" عبر المتاهة لضرب "
          المخلوق الاخضر".
      7:
        image: 'notes/hoc1_7.jpg

'
        text: الجانب الايسر هو مكان تنفيذ المتاهة. حيث يمكنك ايجاد الارشادات لكل لغز
          والتي تكون اسفل المتاهة.
      8:
        image: 'notes/hoc1_8.jpg

'
        text: شريط الادوات الوسطي يمتلك مجموعة من الاوامر المتعلقة بلعبة "الطيور الغاضبة"
          . والتي ستستخدم في بناء الكود البرمجي الخاص بك.
      9:
        image: 'notes/hoc1_9.jpg

'
        text: على الجانب الايمن توجد مساحة عمل بيضاء حيث يتم عليها سحب القطع من شريط
          الادوات من اجل بناء برنامجك . لحذف القطعة الغير مرغوب بها , عليك القيام
          بسحبها الى سلة المهملات الواقعة في الزاوية.
      10:
        image: 'notes/hoc1_10.jpg

'
        text: كل قطعة تقوم بأمر واحد. بحيث إذا سحبت قطعة "تقدم للامام" الى مساحة العمل
          البيضاء وضغطت على  "تنفيذ البرنامج" ، سوف يتحرك الطير مسافة واحدة في المتاهة.
      11:
        image: 'notes/hoc1_11.jpg

'
        text: للقيام بأكثر من عمل، يمكنك سحب العديد من القطع إلى مساحة العمل البيضاء
          وربطهم معاً. سوف يقوم الطائر بنفيذ الأوامر من الأعلى إلى الأسفل.
      12:
        image: 'notes/hoc1_12.jpg

'
        text: إذا قمت بتنفيذ برنامج وترغب في إصلاحه ومحاولة تنفيذه مرة أخرى، اضغط
          على الزر "اعادة تعيين".
      13:
        image: 'notes/hoc1_13.jpg

'
        text: دعنا نذهب للحصول على المخلوق الاخضر!
    artist_intro:
      1:
        image: 'notes/stage5_1.jpg

'
        text: مرحبا، أنا جر! كل فريق سباق سيارات بحاجة إلى علماء الكمبيوتر من اجل
          الفوز.  هم يحللون البيانات من السيارة لجعلها تسير بسرعة.
      2:
        image: 'notes/stage5_2.jpg

'
        text: في هذه الألغاز، أنت ستكون رسام يرسم خط في كل مكان.
      3:
        image: 'notes/stage5_3.jpg

'
        text: هذه القطعة تقول "التقدم للامام" بمقدار 100 بكسل . " البكسلات هي النقاط
          الصغيرة الموجودة في شاشة الكمبيوتر.
      4:
        image: 'notes/stage5_4.jpg

'
        text: 'هذه القطعة تقول "الانعطاف يمينا بدرجة 90" . " هذا سيمكن الرسام من الانعطاف
          بنفس المقدار مثل قطعة "اتجه" المستخدمة في الغاز المتاهة. '
      5:
        image: 'notes/stage5_5.jpg

'
        text: اضغط على السهم في أي من هذه القطع لتغيير مقدار تحرك الرسام للامام او
          الانعطاف. العب من اجل ان تكون على دراية باستخدام هذه القطع الجديدة.
    farmer_intro:
      1:
        text: مرحبا، أنا باولا! في هذه الألغاز، انت ستصبح المزارع الذي يجب ان يقوم
          بجعل حقله الزراعي مسطحا تماما من اجل البدء بزراعة المحاصيل.
      2:
        text: بامكانك مساعدتها بأزلة جميع الاكداس من التراب و ملاْ جميع الثقوب.
      3:
        text: القطعة الجديدة ازالة مجرفة تراب واحدة من الكدس وتملأ مجرفة واحدة من
          التراب في الحفرة.
      4:
        text: الاكداس والثقوب مختلفة الاحجام, لذلك يجب ان تخبر المزارع كم عدد من الجرافات
          تحتاج.
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: مرحبا، أنا كاتي! واحدة من الأمور الأكثر إثارة حول علوم الحاسوب هي ان
          البرامج الحاسوبية تمكن أن تكون تفاعلية.
      2:
        image: notes/flappy02.jpg
        text: عندما يقوم أحد بالنقر أو الضغط أو الكتابة على الحاسوب أو الجوال، ينتج
          (حدث)، وهناك بعض الأوامر البرمجية التي تحدد ما على البرنامج فعله حين حصول
          حدث.
      3:
        image: notes/flappy03.jpg
        text: 'على سبيل المثال، قد يكون لديك معالج الحدث الذي يقول "عند النقر على
          الماوس، شغّل الصوت" '
      4:
        image: notes/flappy04.jpg
        text: هل سمعت سابقًا بلعبة FlappyBird؟ باستخدام معالجات الأحداث، سنتعلم طريقة
          برمجة نسختنا الخاصة من FlappyBird!
      5:
        image: notes/flappy05.jpg
        text: الكود الذي ستكتبه يعمل بسحب ووضع قطع تمثّل الأوامر التي ينفذها الحاسوب.
          كل قطعة تمثّل سطر كود حقيقي يفهمه البرنامج.
      6:
        image: notes/flappy06.jpg
        text: 'إذا ألقيت نظرة على مساحة العمل، وهناك بعض الكتل الخضراء التي تمتلئ
          لك--هذه "معالجات الأحداث" '
      7:
        image: notes/flappy07.jpg
        text: إذا كنت أن ترفرف الطيور عند النقر بالماوس، يمكنك القيام بذلك عن طريق
          ربط كتلة "رفرف" إلى معالج الحدث المناسب، والآن في اللعبة الخاصة بك كلما
          نقرت بالماوس، الطيور سوف ترفرف.
      8:
        image: notes/flappy08.jpg
        text: 'في كل لغز في هذا النشاط سوف نقدم أنواع جديدة من الأحداث كقطع خضراء
          على مساحة العمل، ويمكنك أن تقرر القِطع المناسبة لإضافة رداًً على تلك الأحداث.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             '
      9:
        image: notes/flappy09.jpg
        text: عند ظهور القائمة المنسدلة السهم بمثل هذا، وهذا يعني يمكنك تغيير الإعدادات
          - مثل ما الصوت للعب عندما يضرب flappy الأرض.
      10:
        image: notes/flappy10.jpg
        text: في اللغز الأخير، ستتمكن من إنشاء لعبتك الخاصة ومشاركتها مع أصدقائك.
          استمتع!
    loop_times:
      1:
        image: 'notes/hoc2_1.jpg

'
        text: مرحباً، أنا مارك! دعنا نتعرف على الحلقات التكرارية. بإستخدام الحلقات
          التكرارية يمكنك أن تأمر الكمبيوتر بتكرار أي مجموعة من الإجراءات عدة مرات،
          بالاف أو حتى بلايين من المرات.
      2:
        image: 'notes/hoc2_2.jpg

'
        text: في هذا اللغز، نريد أن نقدم الطير الى الامام 5 خطوات من اجل الوصول الى
          المخلوق الاخضر .
      3:
        image: 'notes/hoc2_3.jpg

'
        text: يمكننا استخدام قطعة "أكرر" الجديدة لمساعدتنا حل المشكلة.
      4:
        image: 'notes/hoc2_4.jpg

'
        text: بدلاً من سحب 5  قطع "تقدم للامام" ...
      5:
        image: 'notes/hoc2_5.jpg

'
        text: يمكننا وضع قطعة "تقدم للامام" داخل قطعة "أكرر" وكتابة عدد معين في القطعة
          من اجل ان تقوم بتكرار الامر العديد من المرات.
      6:
        image: 'notes/hoc2_6.jpg

'
        text: 'وهذا أمر مهم: يمكنك وضع أمر واحد أو أكثر داخل القطعة "أكرر".'
      7:
        image: 'notes/hoc2_7.jpg

'
        text: تمتع بإستخدام قطعتك "أكرر" الجديدة!
    loop_until:
      1:
        image: 'notes/hoc3_1.jpg

'
        text: مرحبا، أنا كريس. قبل أنضمامي إلى "ميامي هيت"، ذهبت إلى معهد "جورجيا
          للتكنولوجيا" لدراسة "علوم الكمبيوتر". دعونا نجرب قطعتنا الجديدة، قطعة "أكرر
          حتى".
      2:
        image: 'notes/hoc3_2.jpg

'
        text: ماذا اذا لم نعرف كم مسافة التقدم بين الطير والمخلوق الاخضر ؟
      3:
        image: 'notes/hoc3_3.jpg

'
        text: إذا وضعنا قطعة "تقدم للامام" داخل قطعة "أكرر حتى" ، سوف يتقدم الطير
          إلي الأمام حتى يصل للمخلوق الاخضر (أو يتحطم في الجدار).
      4:
        image: 'notes/hoc3_4.jpg

'
        text: هذا مهم كما في السابق، نحن نستطيع أن نضع قطع متعددة داخل قطعة "أكرر
          حتى"، من اجل تكرار القطع جميعا.
    if:
      1:
        image: 'notes/hoc4_1.jpg

'
        text: 'مرحبا، أنا بيل! دعونا نتعلم مفهوم أساسي جديد: عبارات "اذا". هذه هي
          الطريقة التي تجعل أجهزة الكمبيوتر تتخذ القرارات.'
      2:
        image: 'notes/hoc4_2.jpg

'
        text: أنت بنفسك تستخدم  عبارات"اذا" يومياً. قبل الذهاب إلى الخارج كل صباح،
          أنت تقول 'اذا' كانت تمطر بالخارج، يجب ان ارتدي الجاكيت.
      3:
        image: 'notes/hoc4_3.jpg

'
        text: يمكن أن نقول للزومبي التحقق "إذا كان" يوجد طريق على اليسار، و "إذا وجد
          طريق على اليسار، نحن بأستطاعتنا أن نجعلة يدور في هذاك الاتجاه.
      4:
        image: 'notes/hoc4_4.jpg

'
        text: لكتابة الكود البرمجي لهذا اللغز، دعونا نسحب قطعة "اذا كان" ونضعها داخل
          قطعة "اتجه لليسار".
      5:
        image: 'notes/hoc4_5.jpg

'
        text: الآن، إذا وضعنا قطعة "تقدم للامام" فوقها قطعة "أكرر" حول كل شيء، في
          كل مرة يتحرك الزومبي، هو سوف يتحقق من إذا يوجد طريق على اليسار ومنعطف .
          أمر "أكرر" هو  حاسم،لانه يقوم بالتحقق من وجود منعطفاً في كل خطوة.
      6:
        image: 'notes/hoc4_6.jpg

'
        text: إذا كانت العبارات هامة جداً في علوم الكمبيوتر. من أولى البرامج التي
          كتبتها هى لعبة تيك تاك تو، وكانت هناك عبارة تقول "اذا" كان الشخص الآخر على
          وشك الفوز، أمنع الاماكن التي تسمح لهم بالفوز.
      7:
        image: 'notes/hoc4_7.jpg

'
        text: أستمتع بإستخدام قطعة "اذا كان" !
    if_else:
      1:
        image: 'notes/hoc5_1.jpg

'
        text: مرحبا، إسمي سالوني. استخدم "علم الحاسوب" للمساعدة في حل المشاكل الصحيّة
          والطبيّة. دعنا نتعلم عن القطع البرمجي "إذا وإلا". أنها تشبه قطعة "إذا"،
          ولكن قد أضيف جزءً إضافي في النهاية و هى كلمة "وإلا".
      2:
        image: 'notes/hoc5_2.jpg

'
        text: إذا وضعت قطعة "تقدم للأمام" في موقع الحدث حيث تقول القطعة "شغل" و "اتجه
          لليسار" حيث تقول "وإلا" وهذا يعني أن الزومبي سيختار بين خيارين اثنين. 'إذا'
          كان الطريق سالكا، الزومبي سوف يتقدم للأمام، وإلا (لن تكون الطرق سالكة)،
          وسوف يتجه الزومبي يساراً.
      3:
        image: 'notes/hoc5_3.jpg

'
        text: تماما مثل قطعة "إذا"، يمكننا أن نضع قطع "إذا وإلا" داخل حلقة "التكرار"
          بحيث تستمر الزومبي بمتابعة التقدم وسوف تستمر قطعة "إذا وإلا" من التحقق إذا
          كان هناك أي مكان أخر للإنعطاف.
      4:
        image: 'notes/hoc5_4.jpg

'
        text: الآن، وصل هؤلاء الزومبي إلى حيث ينتمون!
    if_else_scrat:
      1:
        text: بيان إذا-وإلّا هو قرار بين شيئين. دعونا نرى كيف يمكننا استخدام عبارة
          إذا-وإلّا مع شركائنا صديقنا "Scrat" السنجاب.
      2:
        text: هذه القطعة تبدو نفس القطعة "إذا"، ولكن يوجد جزء إضافي في الأسفل يقول
          "وإلّا". إذا وضعت قطعة "تقدم للأمام" حيث تقول "نفّذ" و كتلة "الاتجاه إلى
          اليسار" حيث تقول "وإلّا"، وهذا يعني أن "Scrat" السنجاب سوف يتحرك إلى الأمام
          إذا كان هناك مسار أو طريق مفتوح. إذا لم يكن هناك مسار للتقدم، سوف يتجه "Scrat"
          إلى اليسار.
      3:
        text: "اتخاذ القرار والقيام بأحد الإجرائين بناء على هذا القرار. \nوتماما مثل
          كتلة \"إذا\"، يمكنك وضع كتل \"إذا-وإلّا\" داخل حلقة \"التكرار\"."
      4:
        text: الآن دعنا نساعد السنجاب سكرات للحصول على ثمرة البلوط!
    function:
      1:
        text: مرحباً، أنا برينا، مهندسة في إينستاجرام. الدالة عبارة عن بعض الأسطر
          من الكود البرمجي التي تريد استخدامها مراراً وتكراراً، لذا بدلاً من كتابة
          الكود البرمجي عدة مرات، يمكنك فقط استخدام قطعة واحدة.
      2:
        text: نحن في طريقنا لمعرفة كيفية تعريف الدوال . تعرف الدالة بنجمة في الزاوية.
          يتم كتابة اسم الدالة في السطر العلوي.
      3:
        text: القطع التي تذهب داخل التعريف تخبرنا بعملها . لذلك هذه تعريف الدالة التي
          تسمى "املأ 5" والتي تصنع من قطعة "كرر" و قطعة "املأ".
      4:
        text: التعريف يجلس على مساحة العمل . ولكن مزارعنا لايرغب بتنفيذ الدالة حتى
          نقوم بسحب قطعة "دالة املأ 5" من قسم الدول.
      5:
        text: دعنا نضع "المتعة" مرة اخرى في "الدالة!"
    loop_while:
      1:
        text: 'مرحبا، أنا ماكندي! دعنا نتعرف على قطعة "اكرر طالما." '
      2:
        text: قطعة "اكرر طالما" ستنفذ اي شي في داخلها ما دام العبارة في الاعلى صحيحة.
      3:
        text: على سبيل المثال، إذا كان المزارع يقف على التكدس ، سستمر الجرافة بالازالة
          في حين لايزال يوجد تكدس تحتها.
    loop_for:
      1:
        text: مرحبا، أنا ترينا، أعمل على بيكسار. لقد عملت على مجموعة من الأفلام، من
          ضمنها فلم شريك.
      2:
        text: هذه هي حلقة "العداد" الجديدة. ستقوم بتنفيذ الإجراءات مراراً وتكراراً،
          ويمكنك أن تجعل الإجراءات تتغير قليلاً في كل مرة.
      3:
        text: في هذا المثال، حلقة"العداد" تقول " قم بالعد مع العداد من 50 إلى 90 من
          10" ، وداخله يوجد لدينا قطعة "ارسم مربع". اسحب قطعة "العداد" من قسم "المتغيرات"
          الى مكان "الطول".
      4:
        text: وهذا يعني الرسام سيقوم برسم مربع طول اضلاعه 50 بكسل، ثم يضيف 10 بكسلات
          ورسم مربعاً طول اضلاعه 60 بكسل. ثم نضيف 10 بكسلات اخرى ورسم المربعات حتى
          تصل إلى 90. لذا سوف نحصل على مربعات من 50، 60، 70، 80 و 90.
    parameters:
      1:
        text: مرحباً، أنا جانيت، وأنا مهندسة في Zynga.
      2:
        text: ماذا اذا كنا نرغب برسم مجموعة من المثلثات ويكون اطوالهم بأحجام مختلفة؟
      3:
        text: يمكن أن نكتب جميع الكود البرمجي هذا باليد، أو يمكن أن نستخدم دالة مع
          المعلمات.
      4:
        text: للقيام بهذا، اضغط فوق النجمة الزرقاء في "رسم المثلث" تعريف الدالة .
          ثم اسحب "اسم الادخال" إلى قطعة "الادخال".
      5:
        text: ثم إذا قمت بكتابة "الطول" في المكان حيث يقول "x" ثم اضغط "ادخل" سوف
          تقوم بإنشاء الإدخال الطولي للدالة الخاصة بك.
      6:
        text: ثم اضغط على النجمة. الآن، انت ترغب بالضغط على قسم المتغيرات وسحب قطعة
          "الطول" الى قطعة "التقدم للامام" لتعريف الدالة الخاصة بك. واسحب بعيداً قطعة
          الأرقام القديمة.
      7:
        text: لاستخدام الدالة الخاص بك مع المعلمات، اضغط على قسم الدوال واسحب الدالة
          "ارسم مثلث مع الطول".
      8:
        text: الآن يمكنك استخدام قطعة الرياضيات لإدخال أرقام مختلفة لرسم مثلثات ذات
          أحجام مختلفة.
    hoc_wrapup:
      1:
        image: 'notes/hoc6_1.jpg

'
        text: تهانينا! مع حل اللغز الاخر، انت لقد كتبت الكود البرمجي الذي يمكن أن
          يخبر اي روبوت عن كيفية العثور على طريقها من خلال المتاهات غير المتفرعة أو
          الأنفاق بأي طول، سواء أكان الزومبي، الطيور، مارس روفر (عربة المريخ)، أو
          حتى سيارة ذاتية القيادة.
      2:
        image: 'notes/hoc6_2.jpg

'
        text: الفكرة أو المفاهيم الأساسية التي أستخدمتها هى الجوهر لكل البرامج أو
          التطبيقات التي أستخدمتها في أي وقت مضى.  تعلمنا عن الحلقات المتكررة، عبارة
          "أكرر حتى", عبارة "أذا" و أيضاً عبارة "أذا والا".
      3:
        image: 'notes/hoc6_3.jpg

'
        text: إذا احببت الساعة الاولى من البرمجة ، قم بزيارة code.org لمواصلة تعلمك
          علوم الكمبيوتر! بمجرد إكمالك 20 ساعة من دورتنا التعليمية، ستكون قد أتقنت
          أساسيات البرمجة، ويمكن البدء بتعلم كيفية كتابة تطبيقات الهاتف الخليوي وأوامر
          الروبوت والألعاب، وأختر ما شئت.
      4:
        image: 'notes/hoc6_4.jpg

'
        text: التكنلوجيا غيرت كل شي نقوم به، ولا يهم إذا كنت صغير أو كبير فالبرمجة
          متعة و إبداع، ويمكن للجميع تعلمها!
    20_wrapup:
      1:
        image: 'notes/bird.png

'
        text: بيان الملاحظات قريبا!
    frozen_intro:
      1:
        text: مرحباً، اسمي لِندسي وأنا عارضة أزياء وممثلة وأبرمج التطبيقات الخاصة
          بي. هيا نبرمج معاً لننضم إلى آنا وإلسا فر رحلتهما لاكتشاف سحر وجمال الجليد.
      2:
        text: سنقوم بإنشاء ندفات الثلج والأشكال المختلفة بينما نتزلج على الجليد ونصنع
          شتاء عجائب يمكنكم مشاركته مع أصدقائكم.
      3:
        text: خلال الساعة القادمة، سنتعلّم أساسيات البرمجة. عادةً ما تكون البرمجة
          التقليدية من خلال النص، ولكن سنقوم باستخدام بلوكلي، وهو استخدام الكتل المرئية
          التي يمكنكم سحبها وإفلاتها لكتابة البرامج. هكذا يتعلّم الطلاب الأساسيات،
          حتى في الجامعات لكن في الحقيقة لا زلتم تكتبون التعليمات البرمجية.
      4:
        text: البرنامج هو عبارة عن مجموعة من الإرشادات التي تخبر الكمبيوتر ما يجب
          فعله. دعونا نكتب تعليمات برمجية، أو برنامج، ليساعد إلسا في إنشاء خط بسيط.
          سوف نستخدم هذا في وقت لاحق لإنشاء أنماط أكثر تعقيداً.
      5:
        text: تنقسم الشاشة إلى ثلاثة أجزاء رئيسية. على اليسار، يوجد السطح الجليدي
          حيث يجب تشغيل برنامجك. وتتم كتابة التعليمات الخاصة بكل مستوى تحت سطحها تماماً.
      6:
        text: أما المساحة الوسطى، فهي علبة الأدوات، وكل من هذه القطع البرمجية هي أعمال
          من الممكن لآنا وإلسا القيام بها.
      7:
        text: المساحة البيضاء على اليمين تُسَمّى مساحة العمل، وهنا سنقوم ببناء برنامجنا.
          للتحرك على سطح الجليد، سنقوم باستخدام القطعة البرمجية "تقدم للأمام".
      8:
        text: الآن, القطعة البرمجية "القدم إلى الأمام" تقول, "التقدم إلى الأمام بمقدار
          100 بكسل." عندما نضغط على "تشغيل", ماذا يحصل؟ إلسا ستتحرك إلى الأمام بمقدار
          معين على الشاشة, في الحقيقة 100 بكسل! البكسل في الواقع هي مربعات صغيرة جداً
          على شاشة الحاسوب.
      9:
        text: القطعة البرمجية الأخرى التي لدينا في هذا اللغز تقول "استدر يميناً بمقدار
          90 درجة."وعندما نستخدم هذه القطعة "استدر يميناً", هذا يجعل إلسا تستدير بقدار
          معين. يمكنك أن تتحكم بمقدار الدوران. الزاوية يتم قياسها من مكان توجّه إلسا.
          لذلك, هذا يعني الدوران بمقدار 90 درجة. وأيضاً يعني الدوران بقدار 120 درجة.
      10:
        text: تذكر, يمكنك ان تغير رقم البكسل والدرجات بالنقر على الأسهم الموجودة جانبها.
    frozen_loops:
      1:
        text: مرحبا, أنا باولا! أجهزة الحاسبو جيدة حقاً بتكرار العمليات. يمكنك أن
          تعد إلى 10, 20, أو 100. ولكن الحاسوب يمكنه العدّ حتى إلى البليون أو الترليون.
          ذلك لن يكون ممل بالنسبة له و إنه سوف يستغرق فقط بضعة ثواني. سواء كان عدّ,
          أو رسم أو أي شيء آخر--أجهزة الحاسوب يمكنها تكرار الأشياء مئات أو حتى بلايين
          المرات.
      2:
        text: في البرمجة, نسمي هذه "حلقة". الحلقة هي كيف تكرر أوامرك البرمجية أكثر
          من مرة, من أجل اللغز القدم, هدفك هو مساعدة أنا في إنشاء مربع باستخام حلقة
          "التكرار".
      3:
        text: أية قطع من الاوامر البرمجية الموضوعة داخل حلقة "التكرار" سوف تتكرر بتسلسل,
          بعدد من المرات الذي تريد.
      4:
        text: لكي ترسم مربعا, يمكنك استخدام كتل "التقدم للأمام" و "التوجه إلى اليمين"
          أربع مرات. ولكن الطريقة الأسهل أن تطلب من الحاسوب "التقدم للأمام" و "التوجه
          إلى اليمين" بمقدار 90 درجة مرة واحدة, وبعدها تطلب منه أن يكرر هذين الأمرين
          4 مرات, تحتاج أن تضع كتلتي "التقدم للأمام" و "التوجه إلى اليمين" داخل حلقة
          "التكرار".
      5:
        text: تذكر, يمكنك تغيير العدد في حلقة "التكرار" إلى أي شيء, و سوف يتم تكرار
          القطع البرمجية التي في داخلها ذلك العدد من المرات.
    frozen_functions:
      1:
        text: مرحبا, أنا كريس بوش. أنا لاعب كرة سلة محترف و اكتب الأوامر البرمجية
          في الكلية.
      2:
        text: واحد من أهم المفاهيم في علم الحاسوب كيفية تعريف الأوامر الجديدة. معظم
          لغات الحاسوب تحوي فقط حوالي 100 من كلمة أو أمر فقط. وفي الحقيقة، الفن والمهارة
          تكمن في تحديد الكلمات الجديدة من هذه القطع البرمجية.
      3:
        text: بمجرد تعليم الحاسوب كيفية القيام بعمل ما بمجرد استخدام هذا التسلسل من
          الأوامر، يمكنك تعريف اسم لهذا الإجراء حتى يسهل تكراره لاحقًا. عندما تحدد
          الأمر الخاص بك وتعطيه اسمًا، فإن هذا يسمى "وظيفة".
      4:
        text: مرحبا، أنا جيس. عند البرمجة بواسطة القطع البرمجية، يمكنك استخدام "وظائف"إذا
          كانت هناك مجموعة من الإجراءات التي ترغب في استخدامها عدة مرات. على سبيل
          المثال، لقد كتبت الكود لإنشاء مربع.
      5:
        text: 'يمكنك تسمية هذه كوظيفة اسمها "إنشاء مربع" '
      6:
        text: الآن لديك مربع جديد يمكنك استخدامه عدة مرات لإنشاء عدة مربعات.
      7:
        text: يمكن استخدام الكثير من الأشكال البسيطة لإنشاء أنماط أكثر تعقيداً. في
          اللغز القادم، الكود التي كتبته مؤخراً لعمل الدائرة أصبح متاحاً كوظيفة يمكنها
          عمل دوائر ذات أحجام مختلفة. هل يمكنك استخدامها لمساعدة إلسا في إنشاء أنماط
          معقدة وجميلة في الثلج؟
    playlab_intro:
      1:
        text: سوف نقوم بإنشاء ألعاب باستخدام "مختبر الألعاب". الألعاب الرائعة لها
          قصة، ولكل قصة ممثلين. سوف نتعلم كيفية عمل ممثلينا مثل السحرة، الكائنات الفضائية،
          والحيوانات التي تتكلم وتتحرك، وتتفاعل مع بعضها البعض. بنهاية هذا البرنامج
          التعليمي، يمكنك تصميم لعبة من الصفر ومشاركتها مع أصدقائك.
      2:
        text: الشاشة مقسمة إلى ثلاثة أجزاء رئيسية. على اليسار مساحة اللعب حيث سيتم
          تشغيل برنامجك. التعليمات لكل مستوى مذكورة في الأسفل.
      3:
        text: المنطقة الوسطى يوجد بها صندوق الأدوات، وكل من هذه المربعات هي قطعة من
          الكود. المساحة البيضاء على اليمين تسمى مساحة العمل، وهذه المنطقة التي سوف
          نبني برنامجنا.
      4:
        text: لنبدأ، ستحتاج إلى ربط القطع البرمجية بالقطعة البرتقالية "عند الركض".
          يمكنك ربط أوامر متعددة معاً عن طريق سحبها حتى يظهر الخط الأصفر, وبعدها سيلتصقون
          معا.
      5:
        text: |-
          في اللغز الأول, ممثلنا هو البطريق وسوف نجعله يقول "مرحباً" عبر سحب القطعة البرمجية للنطق, و ربطها في قطعة عند التشغيل, و كتابة "مرحباً" بداخلها.
          يمكننا أيضاً جعل البطريق يتحرك عبر سحب القطعة البرمجية تحرك لليمين و تحرك لليسار.
          بمجرد الانتهاء من وضع القطع البرمجية، اضغط على زر التشغيل لترى ما قمت ببرمجته.
      6:
        text: ابدأ، وفي النهاية، ستكون قادرًا على إنشاء لعبتك الخاصة مع جميع أنواع
          اللاعبين الذين يمكنهم التفاعل، أو الشعور بالسعادة أو الحزن، أو تسجيل النقاط،
          أو رمي الكرات النارية، أو حتى اختفاء بعضهم البعض. الأمر كله متروك لك وباللعبة
          التي تريد صنعها.
    playlab_events:
      1:
        text: |-
          الأن, سوف نقوم بتعلم شيئاً يستخدمه جميع مبرمجي الألعاب يومياً.
          ويسمونه بالأحداث.
          يخبر "الحدث" برنامجك للاستماع إليه عند حدوث شيء ما. عندما يحدث هذا الشيء، فإنه يقوم بعمل ما.
      2:
        text: بعض الأمثلة من الأحداث الاستماع لنقر الماوس أو مفتاح السهم، أو النقر
          على الشاشة.
      3:
        text: |-
          هنا, سوف نقوم بإنشاء روبوت فضائي يقوم بتحية أهل الأرض عندما يقوم اللاعب بالضغط عليه.
          سوف نستخدم القطعة البرمجية "عند الضغط" و ارفاق القطعة البرمجية "تكلّم" لها. عندما يضغط اللاعب على الروبوت الفضائي, كل شيء مرفق بحدث القطعة البرمجية "عند الضغط" سوف يقوم بالتنفيذ. ماذا سيقول المخلوق الفضائي الخاص بك ؟
      4:
        text: هناك أيضاً قطعة برمجية تسمى "عند السهم". إذا قمت بإرفاق القطعة البرمجية
          "تحرك" لها, يمكنك البدء بتحريك ممثلك  بالأسهم نحو الأعلى, الأسفل, اليمين
          أو نحو اليسار. خطوة بخطوة, لعبتك تصبح أكثر تفاعلاً.
    playlab_repeat_forever:
      1:
        text: هذه هي القصطعة البرمجية "تكرار إلى الأبد". كل شيء داخل هذه القطعة البرمجية
          سوف يحدث للأبد في هذه اللعبة.
      2:
        text: إذا أردت لممثل أن يقوم بشيء ما بشكل متكرر, دون الحاجة لأن يقوم اللاعب
          بأي شيء, سوف نقوم بوضع هذه القطع البرمجية داخل حلقة "تكرار إلى الأبد".
      3:
        text: |-
          في اللغز التالي, هدفنا هو مساعدة دورية حرس الحدود لهذه المملكة, يساراً ويميناً بشكل متكرر.
          تَعلَّم كيفية انشاء الأوامر المتكررة, والتي سوف توفر عليك الكثير من الوقت لاحقاً عندما تريد إنشاء لعبتك الخاصة.
    C1_artist_intro:
      1:
        text: هذه هي القطع البرمجية الخاصة بالرسم. أختر القطع الصحيحة لجعل الممثل
          يتحرك بحيث يَملأ الخطوط الرمادية.
      2:
        text: هذه القطع البرمجية للقفز. عندما تستخدم هذه القطع, سوف يقوم فنانك بالتحرك
          وكنه لن يرسم, لذلك استخدم هذه القطع للقفز إلى الخط الرمادي التالي.
    C1_bee_level_intro:
      1:
        text: أليس النحل بشيء رائع؟ في المجموعة القادمة من الألغاز, هدفك هو مساعدة
          النحل للوصول للأزهار للحصول على الرحيق من الأزهار و الطيران للمنحلة لصنع
          العسل. سوف تحتاج للقطع البرمجية "احصل على الرحيق" و "اصنع العسل" لهذا التمرين.
      2:
        text: 'كل زهرة لها رقم مختلف من الرحيق: 1,2,3 أو أكثر. نحن نعلم كم من الرحيق
          يوجد في الزهور الحمراء, من خلال الرقم الصغير في الزاوية. لذلك أحرص على الحصول
          على كل الرحيق الموجود في الزهرة قبل المضي للزهرة التالية. كذلك, كل خلية
          نحل تحتوي على عدد محدد من الرحيق: 1,2,3 أو أكثر. لذلك أحرص على صنع عسل على
          القدر الذي يمكن أن تحتويه كل خلية نحل.'
      3:
        text: إذا كنت قادر على الحصول على كل الرحيق و صنع كل العسل, بهذه الحالة تكون
          قد نجحت و انتقلت للمرحلة التالية. وبخلاف ذلك, ستحتاج لتجربة هذا اللغز مرة
          أخرى. استرخي و قم بأخذ استراحة ذهنية و فكر ماهو شعورك بأن تكون مبرمج!
    C1_bee_loops:
      1:
        text: الحلقة هي تكرار للنشاط. لذا عند الذهاب إلى خلية لتفتيشها، ألقي نظرة
          على الإطار ثم أعيده مرة أخرى ، لذلك أكرر نفس النشاط عدة مرات. إنها تدور
          حول نفسها ، وتقوم بنفس النشاط عدة مرات.
      2:
        text: في هذه المرحلة, نريد للنحلة أن تجمع 3 رحيق من الزهور. وعوضاً عن استخدام
          القطعة البرمجية "أحصل على الرحيق" ثلاث مرات, سوف نحتاج حلقة "التكرار" لتكرار
          القطعة "أحصل على الرحيق" ثلاث مرات. اضغط "تشغيل" و انظر إن أصبت بذلك. رائع!
    C1_bigevent_unplugged:
      1:
        text: هذا الدرس يسمى الحدث الكبير. وهو يتحدث عن كيفية التحكم وتغيير الطريقة
          التي يعمل بها البرنامج على الفور وذلك باستخدام الأحداث, مثل الضغط على زر
          أو النقر على الفأرة.
      2:
        text: في هذا الدرس, سوف يتم التحكم بك من خلال جهاز تحكم ورقي. وهي بالظبط مثل
          لعبة فيديو حقيقية.
      3:
        text: الحدث هو فعل يسبب وقوع شيء ما. وهو مثل عندما تقوم بالنقر على زر الماوس
          و تقوم بتحميل صفحة على الانترنت. هذا هو الحدث. عندما تقوم بلمس شاشة الجهاز
          اللوحي الخاص بك للتمرير, فهذا حدث أيضاَ. الأحداث هي طريقة رائعة للسماح للمستخدم
          بتوجيه برنامجك بالطريقة و الوقت الذي يريدونه.
      4:
        text: الأشياء تحدث ونحن نستجيب لها. نحن نشعر بالجوع فنذهب للثلاجة. ونحن نسمع
          ساعي البريد قد أتى ووضع الرسائل في صندوق البريد فنذهب حينها لصندوق بريدنا
          للحصول على البريد. هذه الأمثلة هي تماماً مثل الأحداث التي تتجسد بنقر زر
          معين أو تحريك عصا التحكم. تلك أشياء تحدث و تدفعنا للقيام بشيء ما.
      5:
        text: في ألعاب الفيديو, يوجد حدث يسمى "تحديث" وهو يحدث 30 أو 60 مرة في الثانية
          الواحدة. ولمبرمجي ألعاب الفيديو يعد هذا الأمر أكثر أهمية كحدث من الأزرار
          أو عصا التحكم.
      6:
        text: الحدث الرئيسي الذي ننظر له هو أن "تحديث" يحفز الوقوع. وعندها نتحقق من
          عصا التحكم في النقر. لذلك نقول, " ياللهول, هل قام أحدهم بضغط الزر في هذا
          الإطار؟ نعم أو لا؟" بدون أحداث, اللاعب لا يمكنه اللعب, لا يمكنك القفز, لا
          يمكنك التحكم بما يجري. لعبة الفيديو لا يمكنها تحريك أي شيء.
    C1_building_foundation:
      1:
        text: عليك أن تعلم أن الفشل هو جزء من البرنامج. ولكن عليك المثابرة, فسوف تصبح
          أفضل و أكثر إثارة لك. المثابرة هو اسم اللعبة. ابقى معها, سوف تحب ذلك.
      2:
        text: هذا الدرس يسمى بناء الأساس. في هذا الدرس، سنعمل على مهمة تعتبر صعبة
          حقاً. سوف تكتشف كيف تصنع هيكلًا بطول أحد هذه الأكواب على الأقل ويجب أن يكون
          قويًا بما يكفي لتحمل وزن الكتاب.
      3:
        text: في بعض الأوقات لن ينجح عملنا. وفي بعض الأوقات قد نشعر فيها بالإحباط
          ونريد الاستسلام. قد يكون هناك الكثير من تلك اللحظات. ولكن إذا واصلنا المحاولة،
          فقدمنا أفضل ما لدينا مرة تلو الأخرى، فنحن على يقين أننا سننجح قريبًا.
      4:
        text: المثابرة لا تعني سوى الصمود عندما ترغب بالإستسلام، إذا كنت تريد صنع
          شيء جديد ومختلف فلا بد أن تواجه العديد من الإخفاقات في الطريق.
    C1_maze_debugging:
      3:
        text: لمعرفة المزيد حول تصحيح الأخطاء، نبدأ مع مجموعة من القطع فعلا في المرحلة.
          ستلاحظ أن هذه القطع لن تحقق الهدف. نحن بحاجة إلى تصحيح الحل وإصلاحه. ما
          هو الخطأ؟ ستلاحظ أنك بحاجة إلى الاستمرار في الذهاب غربًا بقطعة أخرى.
    C2_bee_loops:
      1:
        text: الحلقة هي تكرار للنشاط. عند الذهاب إلى خلية لتفتيشها، ألقي نظرة على
          إطار، ثم أعيده. أكرر نفس النشاط عدة مرات. إنها تدور حول نفسها، وتقوم بنفس
          النشاط عدة مرات.
    starwars_intro:
      1:
        text: |-
          مرحبا، أنا كاثلين كينيدي وأنا منتجة فلم حرب النجوم: القوة تنهض. اليوم سوف تعمل مع أحد نجومنا BB-8.
          BB-8 و هو رجل آلي كروي. و كل فعل أو حركة يقوم بها، تتحكم بها برامج الحاسوب. علم الحاسوب يؤثر على كل صناعة من الصناعات، من التسويق للرعاية الصحية و الأفلام. في الواقع، مئات مهندسي الحاسوب عملوا معا لصناعة فيلم مثل "القوة تنهض".
      2:
        text: مرحبا أنا راشيل روز، أنا مهندسة خبيرة في البحث و التطوير في شركة ILM
          وأنا أقود فريق الرسوم المتحركة والمخلوقات. في "القوة تنهض"، أنا مسؤولة عن
          مساعدة الفنانين في تطوير المعدات التي هي الأجزاء من الرجل الآلي والتي تتحرك
          و تشعرنا أن شكل الروبوت مقنع جداً في مجرة بعيداً جدا.
      3:
        text: في الساعة القادمة، سنقوم ببناء لعبتنا الخاصة من حرب النجوم. سوف نعلمك
          المفاهيم الأساسية للبرمجة. عادة البرمجة نكون بشكل نصوص ولكن نحن سنستخدم
          القطع التي يمكن سحبها وإسقاطها لكتابة البرامج. وراء الستار، أنت لا تزال
          تكتب التعليمات البرمجية. بعد أن جربت الأساسيات باستعمال القطع، سوف نتحول
          إلى جافا سكريبت، واحد من لغات البرمجة الأكثر شعبية على شبكة الإنترنت.
      4:
        text: في البداية، سنعمل مع Rey برنامجا يجعل BB-8 يمشي لجمع كافة أجزاء الخردة.
          يتم تقسيم الشاشة إلى ثلاثة أجزاء. على اليمين فضاء لعبة حرب النجوم، حيث سيتم
          تشغيل الأوامر البرمجية. تتم كتابة الأوامر الخاصة بكل لغز أسفل فضاء اللّعب.
      5:
        text: المنطقة الوسطى تحتوي صندوق الأدوات وكل واحدة من هذه المقاطع البرمجيّة
          هو أمر يمكن لـ BB-8 أن يفهمه.
      6:
        text: المساحة البيضاء على اليمين تسمى مساحة العمل، و هو مكان إنتاج البرنامج.
      7:
        text: إذا سحبنا القطعة "تحريك إلى اليسار()" لمساحة العمل ثم ضغطنا على تشغيل،
          ماذا يحدث؟ BB-8 يتحرك لليسار بخطوة واحدة.
      8:
        text: وماذا لو كنت أريد من BB-8 أن يفعل شيئا آخر بعد مقطع التّحرك إلى اليسار؟
          يمكنني أن أضيف قطعة أخرى إلى برنامجنا. سأختار القطعة "التّحرّك إلى الأعلى"،
          وسوف اسحبها تحت القطعة "التّحرك إلى اليسار" حتى يظهر اللّون البرتقالي. ثم
          أسقطها فيلتصق المقطعان معا.
      9:
        text: عند الضغط على تشغيل مرة أخرى، سيقوم BB-8 بتطبيق الأوامر مرتبة من الأعلى
          إلى الأسفل في مساحة العمل. إذا كنت تريد حذف مقطع، أزله من مجموعة المقاطع
          وأرجعه مرة أخرى إلى صندوق الأدوات.
      10:
        text: بعد النقر على تشغيل، يمكنك دائماً نقر الزر إعادة تعيين لتجعل BB-8 يعود
          إلى البداية. إنطلق الآن!
    starwars_typing:
      1:
        text: القطع البرمجية المستخدمة عبارة عن أوامر جافا سكريبت. جافا سكريبت هي
          لغة البرمجة الأكثر شعبية للمبرمجين المحترفين اليوم. المقاطع البرمجية طريقة
          رائعة للبدء في تعلم البرمجة، وفي الواقع، أفضل الجامعات مثل جامعة هارفارد
          وبيركلي تبدأ التدريس بهذه الطريقة. ولكن بعد تعلم الأساسيات، يستعمل المهندسون
          طريقة كتابة الأوامر البرمجية لأن ذلك أسرع.
      2:
        text: يمكننا كتابة المئات من الأوامر دون الاضطرار إلى العثور عليها في صندوق
          الأدوات أو نقلها. لأنك في مرحلة التّعلّم الكتابة قد تكون أبطأ في البداية
          ولكننا نريد أن نعطيك الفرصة للتجربة.
    starwars_events:
      1:
        text: مرحبا، أنا شريتا كارتر. مختصّة في الإنتاج الإبداعي في والت ديزني. أنا
          مسؤولة على قيادة الفرق المنتجة للألعاب التي سيجرّبها ضيوفنا. نحن نبحث دائمًا
          عن طرق يمكننا من خلالها تحسين وتقديم تجربة أفضل لضيوفنا والتكنولوجيا في
          صميم ذلك.
      2:
        text: تهانينا، لقد استطعت فعل ذلك! لقد برمجت BB-8. والآن أعتقد أننا مستعدون
          لشيء أكثر صعوبة. دعونا ننطلق. والآن بعد أن تعلمت أساسيات البرمجة، سنعود
          في الوقت المناسب لبناء لعبتنا، بطولة R2-D2 و C-3PO..
      3:
        text: 'لصنع لعبة، نحن بحاجة إلى معرفة شيء يستخدمه المبرمجون كل يوم: يسمى الأحداث.
          الأحداث تطلب من برنامجك أن يستمع أو ينتظر حتى يحدث شيء ما، وعندما يحدث ذلك،
          فإنه يقوم بعمل ما.'
      4:
        text: بعض الأمثلة من الأحداث الاستماع لنقر الماوس أو مفتاح السهم، أو النقر
          على الشاشة.
      5:
        text: هنا سنجعل R2-D2 يتحرّك للأعلى ليسلّم رسالة إلى الطيّارين المتمردين وثم
          يتحرّك للأسفل لبقيّة الطيّارين المتمردين. سنستخدم الأحداث لإجباره على التحرك.
          عندما يستخدم اللاعب مفاتيح الأسهم أعلى/أسفل ، أوالأزرار الأعلى/أسفل.
      6:
        text: سنستخدم قطعة الحدث "عند نقر السّهم أعلى" وسنرفق القطعة "إذهب إلى الأعلى".
          عندما يقوم اللاعب بالضغط على مفتاح السهم العلوي، يتم تشغيل الأوامر البرمجية
          المرفقة إلى القطعة "عند نقر السّهم أعلى". وسوف نفعل نفس الشيء لجعل R2-D2
          يتحرك للأسفل.
      9:
        text: الآن بدلاً من كتابة كافة الأوامر البرمجية للتحكم مسبقا بالروبوت، يمكننا
          أن ندع R2-D2 يتفاعل مع أحداث الضغط على الزر الذي ينقله حول الشاشة. في كل
          خطوة، لعبتك تصبح أكثر تفاعلية.
    starwars_congrats:
      1:
        text: مرحبا، اسمي أليس و أقود فرق البرمجة و الهندسة في موقع Code.org وعملت
          في هذا البرنامج التعليمي الذي كنت تلعب به الآن.
      2:
        text: لقد استطعت إنجاز ذلك للمستوى الأخير. تهانينا! تعلمت كل ما تحتاج إلى
          معرفته لإنشاء لعبتك الخاصة من حرب النجوم. ليس هناك الآن المزيد من التعليمات
          والألغاز لحلها. يمكنك إنشاء لعبتك الخاصة، ويمكنك اختيار كيف تعمل. شيء آخر،
          لقد قمت بفتح أصوات وأوامر جديدة للقيام بالمزيد..
      3:
        text: "[الطلاب يتحدثون] لذلك صنعنا لعبة بشكل أساسي حيث تحصل على نقاط عندما
          تحصل على الخنازير المنتفخة. الدوران في كل مرة تحصل فيها على خنزير منتفخ
          يظهر جندي عاصفة. في الواقع، الشاشة بأكملها مليئة بالخنازير المنتفخة، وبعد
          ذلك عندما تلمس 10000 منهم، ستفوز."
      4:
        text: "[طلاب يتحدثون] صنعنا لعبة لا يمكنك أن تخسر فيها وكل شيء تقتله يمنحك
          نقاطًا. بالنسبة لبرنامجي، قمت بعكس المفاتيح بحيث عندما تنقر فوق، تنخفض شخصيتك
          وعندما تتجه يمينًا، تذهب شخصيتك إلى اليسار. من الصعب حقا! في بعض الأحيان
          تحصل على ميزة، وهي ميزة غير عادلة إذا كنت مطور اللعبة. هل فهمت؟ ياي!"
      5:
        text: عند الإنتهاء من صناعة اللعبة الخاصة بك، اختر "شارك" للحصول على رابط
          يمكنك مشاركته مع الأصدقاء أو اللعب بلعبتك على الهاتف الخاص بك. استمتع!
    starwars_blocks_intro:
      1:
        text: 'مرحبا، أنا كاثلين كينيدي وأنا منتجة فلم حرب النجوم: القوة تنهض. اليوم
          سوف تعمل مع أحد نجومنا، BB-8 و هو رجل آلي كروي. أي شيء يفعله، و كل حركة
          يقوم بها تتتحكم بها البرمجيات في الحاسوب. علوم الحاسوب تؤثر على كل صناعة
          من الصناعات، من التسويق للرعاية الصحية و الأفلام. في الواقع، مئات مهندسي
          الحاسوب عملوا معا لصناعة فيلم مثل "القوة تنهض".'
      2:
        text: مرحبا أنا راشيل روز، أنا مهندسة خبيرة في البحث و التطوير في شركة ILM
          وأنا أقود فريق الرسوم المتحركة والمخلوقات. في "القوة تنهض"، أنا مسؤولة عن
          مساعدة الفنانين في تطوير المعدات التي هي الأجزاء من الآلي التي تتحرك و تشعرنا
          أن شكل الروبوت مقنع جداً في مجرة بعيداً جدا.
      3:
        text: في الساعة القادمة، سنقوم ببناء لعبتنا الخاصة من حرب النجوم. سوف نعلمك
          المفاهيم الأساسية للبرمجة. عادة البرمجة نكون بشكل نصوص ولكن نحن سنستخدم
          القطع التي يمكن سحبها وإسقاطها لكتابة البرامج. في البداية، سنعمل مع Rey
          برنامجا يجعل BB-8 يمشي لجمع كافة أجزاء الخردة.
      4:
        text: تنقسم الشاشة إلى 3 أجزاء رئيسية. يوجد على اليمين مساحة اللّعب بحرب النجوم،
          أين سيشتغل البرنامج. التعليمات لكل مستوى مكتوبة أسفله.
      5:
        text: المنطقة الوسطى تحتوي صندوق الأدوات وكل واحدة من هذه المقاطع البرمجيّة
          هو أمر يمكن لـ BB-8 أن يفهمه.
      6:
        text: المساحة البيضاء على اليمين تسمى مساحة العمل، و هو مكان إنتاج البرنامج.
      8:
        text: وماذا لو كنت أريد من BB-8 أن يفعل شيئا آخر بعد قطعة التّحرك إلى اليسار؟
          يمكنني أن أضيف مقطعاً آخراً إلى برنامجنا. سأختار القطعة التّحرّك إلى الأعلى،
          وسوف اسحبها تحت القطعة التّحرك إلى اليسار حتى يظهر اللّون البرتقالي. ثم
          سوف ألصقهما معا. عندما أضغط على تشغيل مرة أخرى، سيقوم BB-8 بتطبيق التعليمات
          مرتبة من الأعلى إلى الأسفل في مساحة العمل.
      10:
        text: بعد النقر على تشغيل، يمكنك دائماً نقر الزر إعادة تعيين لتجعل BB-8 يعود
          إلى البداية. إنطلق الآن!
    starwars_blocks_events:
      1:
        text: مرحبا، أنا شريتا كارتر. مختصّة في الإنتاج الإبداعي في والت ديزني. أنا
          مسؤولة على قيادة الفرق المنتجة للألعاب التي سيجرّبها ضيوفنا. نحن نبحث دائمًا
          عن طرق يمكننا من خلالها تحسين وتقديم تجربة أفضل لضيوفنا والتكنولوجيا في
          صميم ذلك.
      2:
        text: تهانينا، لقد استطعت فعل ذلك! لقد برمجت BB-8. والآن أعتقد أننا مستعدون
          لشيء أكثر صعوبة. دعونا ننطلق. والآن بعد أن تعلمت أساسيات البرمجة، سنعود
          في الوقت المناسب لبناء لعبتنا، بطولة R2-D2 و C-3PO..
      3:
        text: 'لصنع لعبة، نحن بحاجة إلى معرفة شيء يستخدمه المبرمجون كل يوم: يسمى الأحداث.
          الأحداث تطلب من برنامجك أن يستمع أو ينتظر حتى يحدث شيء ما، وعندما يحدث ذلك،
          فإنه يقوم بعمل ما.'
      4:
        text: بعض الأمثلة من الأحداث الاستماع لنقر الماوس أو مفتاح السهم، أو النقر
          على الشاشة.
      5:
        text: هنا سنجعل R2-D2 يتحرّك للأعلى ليسلّم رسالة إلى الطيّارين المتمردين وثم
          يتحرّك للأسفل لبقيّة الطيّارين المتمردين. سنستخدم الأحداث لإجباره على التحرك.
          عندما يستخدم اللاعب مفاتيح الأسهم أعلى/أسفل ، أوالأزرار الأعلى/أسفل.
      7:
        text: خطوةً بخطوة ، تصبح لعبتك أكثر تفاعلية.
    starwars_blocks_congrats:
      1:
        text: مرحبا، اسمي أليس و أقود فرق البرمجة و الهندسة في موقع Code.org وعملت
          في هذا البرنامج التعليمي الذي كنت تلعب به الآن.
      2:
        text: لقد استطعت إنجاز ذلك للمستوى الأخير. تهانينا! تعلمت كل ما تحتاج إلى
          معرفته لإنشاء لعبتك الخاصة من حرب النجوم. ليس هناك الآن المزيد من التعليمات
          والألغاز لحلها. يمكنك إنشاء لعبتك الخاصة، ويمكنك اختيار كيف تعمل. شيء آخر،
          لقد قمت بفتح أصوات وأوامر جديدة للقيام بالمزيد..
      3:
        text: "[الطلاب يتحدثون] لذلك صنعنا لعبة بشكل أساسي حيث تحصل على نقاط عندما
          تحصل على الخنازير المنتفخة. الدوران في كل مرة تحصل فيها على خنزير منتفخ
          يظهر جندي عاصفة. في الواقع، الشاشة بأكملها مليئة بالخنازير المنتفخة، وبعد
          ذلك عندما تلمس 10000 منهم، ستفوز."
      4:
        text: "[طلاب يتحدثون] صنعنا لعبة لا يمكنك أن تخسر فيها وكل شيء تقتله يمنحك
          نقاطًا. بالنسبة لبرنامجي، قمت بعكس المفاتيح بحيث عندما تنقر فوق، تنخفض شخصيتك
          وعندما تتجه يمينًا، تذهب شخصيتك إلى اليسار. من الصعب حقا! في بعض الأحيان
          تحصل على ميزة، وهي ميزة غير عادلة إذا كنت مطور اللعبة. هل فهمت؟ ياي!"
      5:
        text: عند الإنتهاء من صناعة اللعبة الخاصة بك، اختر "شارك" للحصول على رابط
          يمكنك مشاركته مع الأصدقاء أو اللعب بلعبتك على الهاتف الخاص بك. استمتع!
    mc_intro:
      1:
        text: اسمي Jens Bergensten ولكن الاسم المفضل لي هو Jeb. أنا المطور الرئيسي
          في Minecraft هنا في Mojang في ستوكهولم. أعتقد أنني كنت أبلغ من العمر 11
          أو 12 عامًا حين بدأت البرمجة لرغبتي في تصميم الألعاب. وقد أخبرني أحد أصدقاء
          أبي أنني بحاجة لتعلم البرمجة من أجل تصميم الألعاب. ومن هنا بدأ الأمر. فأنا
          معجب بتصميم بنية الألعاب واكتشافها. وهذا ما أعجبني حقًا في Minecraft.
      2:
        text: خلال الساعة القادمة، ستتمكن من تعلم أساسيات علوم الكمبيوتر من خلال برمجة
          Alex أو Steve للتنقل على قطعة مخصصة لمحاكاة عالم Minecraft.
      3:
        text: تعتمد البرمجة التقليدية عادة على النصوص ولكن اليوم سنستخدم Blockly،
          وهو نظام يستخدم كتل مرئية يمكنك سحبها وإفلاتها لكتابة البرامج. ما تقوم به،
          بكل بساطة، هو إنشاء تعليمات Javascript البرمجية.
      4:
        text: المفاهيم التي ستتعلمها هي التي يستخدمها مبرمجو الكمبيوتر يوميًا وهي
          أساس علوم الكمبيوتر. هنا في Mojang، نستخدم نفس المفاهيم لتصميم العمل الخاص
          بـ Minecraft.
      5:
        text: قبل أن تبدأ، ستختار شخصيتك. بالنسبة لي، سأختار Alex. هيا ننشئ تعليمة
          برمجية لبرنامج يساعدها على التنقل في الشاشة.
      6:
        text: وتنقسم شاشتك إلى ثلاثة أجزاء رئيسية. على اليسار، ستجد مكان لعب Minecraft
          والذي سيتم تشغيل البرنامج خلاله. تظهر التعليمات الخاصة بكل مستوى بالأسفل.
      7:
        text: هذه المنطقة الموجودة بالمنتصف هي مربع الأدوات، وكل كتلة من تلك الكتل
          بمثابة أمر يوجه الإجراءات التي تتخذها Alex.
      8:
        text: والمنطقة البيضاء الموجودة على اليمين تعرف باسم مساحة العمل، وهي المكان
          المخصص لإنشاء البرنامج الخاص بنا.
      9:
        text: فإذا قمنا بسحب الكتلة moveForward(); إلى مساحة العمل، وبعد ذلك قمت بالنقر
          فوق تشغيل، فما الذي يحدث؟ تتحرك Alex للأمام رقعة واحدة على الشبكة.
      10:
        text: وما الذي يحدث إذا كنا نرغب في تنفيذ أمر معيّن بعد تقدمها للأمام رقعة
          واحدة؟ يمكننا إضافة كتلة أخرى إلى البرنامج الخاص بنا. سأختار الكتلة turnRight();
          واسحبها أسفل كتلة moveForward(); التي اخترتها مسبقًا حتى يظهر هذا الخط البرتقالي.
          وبعد ذلك سأفلتها وتتم محاذاة الكتلتين معًا. وعندما نضغط على تشغيل مرة أخرى،
          ستنفّذ Alex الأوامر المكدسة من الأعلى إلى الأسفل في مساحة العمل الخاصة بنا.
      11:
        text: وإذا كنت ترغب في حذف أي كتلة، فما عليك إلا سحبها من التكدس وإعادتها
          إلى مربع الأدوات.
      12:
        text: للتراجع عن أي تغييرات والعودة إلى بداية المستوى، استخدم الزر Start Over
          "البدء من جديد" في الزاوية العلوية اليمنى من مساحة العمل. شيء آخر تلاحظ
          المثلث الصغير الموجود على كتل الاتجاهات؟ في أي وقت تلاحظ هذه المثلثات، يشير
          ذلك إلى إمكانية اختيار خيار مختلف. هيا نبدأ تعلم التعليمات البرمجية!
    mc_repeat:
      1:
        text: أنا Lydia Winters، مدير العلامة التجارية بشركة Mojang، وقد قمنا بتصميم
          لعبة صغيرة اسمها Minecraft.
      2:
        text: الأمر المفضل لي في Minecraft هو الاستكشاف. أحب خوض المغامرات داخل الكهوف
          واكتشاف ما يمكنني العثور عليه. كشخص لا يعمل في البرمجة، كانت لدي حماسة كبيرة
          للبحث في درس Minecraft وبالفعل أتعلم بعض التعليمات البرمجية بنفسي.
      3:
        text: فالمستوى الأخير يحتاج إلى الكثير من كتل moveForward();. وسيكون من الأسهل
          أن نخبر الكمبيوتر بتنفيذ الأمر moveForward(); أربع أو خمس مرات. ومن حسن
          حظنا، تعد أجهزة الكمبيوتر جيدة في تكرار الأوامر من خلال التكرارات الحلقية.
      4:
        text: عند إنشاء Minecraft، نستخدم التكرارات الحلقية لوضع جميع المواد الأولية
          لإنشاء عالم جديد. فهناك الآلاف والآلاف من الكتل. نستخدم الحلقات من خلال
          طرق بسيطة، على سبيل المثال لنجعل قدمي Alex تتحرك للأمام والخلف أثناء سيرها.
          فالتكرارات الحلقية جزء فعال من البرمجة.
      5:
        text: بدأ الليل في الحلول، لذا فخلال المستويين التاليين سنقوم ببناء منزل لنشعر
          بالأمان. سنستخدم كتلة التكرار لبناء المنزل بسهولة كبيرة.
      6:
        text: لبناء جدار بالمنزل، يمكننا إما إخبار Alex بتنفيذ الأمر moveForward();
          ووضع ألواح الخشب أربع مرات، أو إخبارها بتنفيذ الأمر moveForward(); ووضع
          لوح خشب واحد، ثم نقل هذا الأمر واستخدام كتلة التكرار لدفعها لتنفيذ الإجراء
          مرات متعددة. والآن سننقر فوق كتلة التكرار ونخبرها بعدد المرات التي نرغب
          في أن تنفّذ هذا الإجراء خلالها. والآن هيا نبني منزلنا قبل أن يحل الليل.
          استمتع.
    mc_if_statements:
      1:
        text: الآن سنتعلم العبارات الشرطية. تعد العبارات الشرطية جزءًا أساسيًا في
          تعلم البرمجة، حيث تساعد الكمبيوتر على اتخاذ قرارات.
      2:
        text: تستخدم جميع أجهزة الكمبيوتر العبارات الشرطية، بما في ذلك هاتفي. على
          سبيل المثال، عند إلغاء قفل هاتفي، يتم تشغيل بعض التعليمات البرمجية التي
          تفيد بأنه في حالة قيامي بإدخال كلمة المرور بشكل صحيح، فحينها يتم إلغاء قفل
          الهاتف. وإلا، سيعرض الهاتف رسالة خطأ.
      3:
        text: يمكنك استخدام العبارات الشرطية في التعليمات البرمجية لمساعدة Steve وAlice
          في التفاعل مع ما يرونه في العالم. على سبيل المثال، في حالة وجود صخرة أمامهما،
          يمكنهما الاتجاه إلى اليسار. أو الاتجاه إلى اليمين في حالة الذهاب نحو شجرة.
      4:
        text: في الحالة المبينة، نريد تفادي السقوط في الحمم. ومن السهل التخطيط لتجنب
          الحمم، التي نراها على الشاشة. ولكن ماذا عن الحمم التي لا يمكننا رؤيتها تحت
          الحجر؟
      5:
        text: بعد أن نحفر الحجر، نحتاج إلى التأكد مما إذا كانت هناك أي حمم في المكان
          قبل المضي قدمًا. ففي حالة وجود حمم، نرغب في وضع حجر أمام الشخصية التي اخترناها
          قبل أن نتقدم للأمام. وبهذه الطريقة يمكننا التقدم بسهولة. حان الوقت للتعدين
          بصورة أكبر! وتذكر استخدام العبارات الشرطية لمزيد من الحرص أثناء التقدم.
    mc_congrats_share:
      1:
        text: تهانينا! لقد تعلمت للتو العناصر الأساسية لعلوم الكمبيوتر.
      2:
        text: والآن يمكنك استخدام تلك اللبنات لبناء الابتكار الخاص بك. فلم يعد هناك
          المزيد من التعليمات والألغاز التي يتعين عليك حلها. يمكنك بناء أي شيء تريده.
          يمكنك الاختيار.
      3:
        text: "[الطلاب يتحدثون] الأمر يوشك أن يكون حقيقيًا. قص. نجحت في تصميم حرف
          L من المصابيح. نجحت في تصميم حرف A من ألواح خشب البتولا. لقد نجح الأمر،
          لقد نجح الأمر. نجحنا في تصميم منزل من الصوف."
      4:
        text: عندما تنتهي من تصميم الابتكار الخاص بك، اختر مشاركة للحصول على ارتباط
          لمشاركته مع أصدقائك. استمتع!
    mc_congrats_no_share:
      1:
        text: تهانينا! لقد تعلمت للتو العناصر الأساسية لعلوم الكمبيوتر.
      2:
        text: والآن يمكنك استخدام تلك اللبنات لبناء الابتكار الخاص بك. فلم يعد هناك
          المزيد من التعليمات والألغاز التي يتعين عليك حلها. يمكنك بناء أي شيء تريده.
          يمكنك الاختيار.
      3:
        text: "[الطلاب يتحدثون] الأمر يوشك أن يكون حقيقيًا. قص. نجحت في تصميم حرف
          L من المصابيح. نجحت في تصميم حرف A من ألواح خشب البتولا. لقد نجح الأمر،
          لقد نجح الأمر. نجحنا في تصميم منزل من الصوف."
      4:
        text: الآن، يمكنك بناء أي شيء تريده. استمتع!
    gumball_intro:
      1:
        text: إذا كنت ترغب بإنشاء اللعبة الخاصة بك، فإن ذلك سهل جداً. لا تحتاج سوى
          القليل من أساسيات البرمجة ويمكنك البدء بلعب اللعبة الذي قمت بإنشائها.
      2:
        text: هل لديك لعبة فيديو مفضلة؟ نحن في طريقنا إلى إنشاء لعبة مشابهة لتلك المفضلة
          لديك من خلال PlayLab. الألعاب الجيدة تروي قصصاً ولكل قصة شخصياتها. تقوم
          هذه الشخصيات بأفعال كالكلام، أيضاً التحرك والتفاعل مع شخصيات أخرى. كم يمكن
          أن تجمع النقاط إعتماداً على قواعد اللعب. اليوم، سنتعلم كيفية تنفيذ هذه الأشياء
          الممتعة مع الشخصيات و ثم نبني اللعبة من الصفر التي يمكن أن نشاركها ونلعبها
          من الهاتف.
      3:
        text: اليوم، سنتعلم كيفية تنفيذ هذه الأشياء الممتعة مع الشخصيات و ثم نبني
          اللعبة من الصفر التي يمكن أن نشاركها ونلعبها من الهاتف.
      4:
        text: الشاشة مقسمة إلى ثلاثة أجزاء رئيسية. على اليسار مساحة اللعب حيث سيتم
          تشغيل البرنامج. التعليمات لكل مستوى مذكورة في الأسفل.
      5:
        text: هذه المنطقة الوسطى هي صندوق الأدوات وكل واحد من هذه القطع هو أمر من
          الأوامر البرمجية.
      6:
        text: ويطلق على المساحة البيضاء على اليمين مساحة العمل وهذا هو المكان الذي
          سوف نبني فيه برنامجنا.
      7:
        text: لتبدأ، ستحتاج إلى ربط القطع الخاصة بك إلى البرتقالي وهو أمر عند الركض.
          يمكنك ربط أوامر متعددة معا عن طريق سحبهم حتى ترى الخط الأصفر ثم سيلتصقون
          معا.
      8:
        text: في هذا اللغز الأول، سنجعل الشخصيات تقول شيء وذلك من خلال ربط الأمر "تكلّم"
          بالأمر "اركض" عندما يكتب اللاعب القول. بمجرد وضع القطع في مكانها، اضغط على
          زر التشغيل لترى ما قمت ببرمجته.
      9:
        text: ابدأ وعندما تصل إلى النهاية ستصبح قادراً على إنشاء كل أنواع الشخصيات
          التي يمكنها التفاعل، وتسجيل النقاط، ورمي الأشياء، وتخفي بعضها البعض. الأمر
          يرجع لك!
    gumball_events:
      1:
        text: الآن سوف نتعرف على شيء يستخدمه جميع مبرمجي الألعاب يومياً. يسمّى "الأحداث".
          يخبر الحدث برنامجك للاستماع إليه عند حدوث شيء ما، ثم عندما يحدث ذلك، تقوم
          اللعبة بتنفيذ إجراء ما.
      2:
        text: أحد الأمثلة على الأحداث هي الاستماع إلى نقرة الماوس أو ضغط مفتاح السهم
          الأعلى أو الأسفل أو حتى النقر على الشاشة.
      3:
        text: هنا، سوف نجعل الشخصية تقول شيئا عندما ينقر اللاعب عليها. سوف نستخدم
          أمر الحظر عند النقر عليها ونربط به محتوى الكلام. عندما ينقر اللاعب، جميع
          محتوى الكلام المربوط سوف يظهر.
      4:
        text: يوجد أيضا أوامر الأسهم. إذا قمت بربط أمر التحرك بذلك، يمكنك البدء في
          نقل الشخصية الخاصة بك إلى أعلى أو أسفل و يسار أو يمين، باستخدام مفاتيح الأسهم.
          شيئًا فشيئًا، تصبح لعبتك أكثر تفاعلية.
    gumball_repeat:
      1:
        text: "هل لك أن تتخيل لو اردت تكرار أمر ما إلى الأبد؟ \nنأمل أن لا يضطر أحد
          لذلك حيث أن أجهزة الحاسوب تقوم بهذا و بسهولة."
      2:
        text: يسمى هذا حلقة التكرار للأبد. وأي شيء يربط به يتكرر باستمرار في اللعبة.
          إذا كنا نريد أحد الشخصيات بالقيام بحركة ما مرارا وتكرارا دون أن يفعل اللاعب
          أي شيء، سوف نربط أمر تلك الحركة بأمر التكرار إلى الأبد.
      3:
        text: في هذا اللغز القادم، هدفنا هو مساعدة الشخصية بالقيام بحركة مستمرة. عندما
          تتعلم كيفية القيام بأوامر التكرار سيوفر لك ذلك طن من الوقت عند بناء اللعبة
          خاصتك.
    iceage_intro:
      1:
        text: إذا كنت ترغب بإنشاء اللعبة الخاصة بك، فإن ذلك سهل جداً. لا تحتاج سوى
          القليل من أساسيات البرمجة ويمكنك البدء بلعب اللعبة الذي قمت بإنشائها.
      2:
        text: هل لديك لعبة فيديو مفضلة؟ نحن في طريقنا إلى إنشاء لعبة مشابهة لتلك المفضلة
          لديك من خلال PlayLab. الألعاب الجيدة تروي قصصاً ولكل قصة شخصياتها. تقوم
          هذه الشخصيات بأفعال كالكلام، أيضاً التحرك والتفاعل مع شخصيات أخرى. كم يمكن
          أن تجمع النقاط إعتماداً على قواعد اللعب. اليوم، سنتعلم كيفية تنفيذ هذه الأشياء
          الممتعة مع الشخصيات و ثم نبني اللعبة من الصفر التي يمكن أن نشاركها ونلعبها
          من الهاتف.
      3:
        text: اليوم، سنتعلم كيفية تنفيذ هذه الأشياء الممتعة مع الشخصيات و ثم نبني
          اللعبة من الصفر التي يمكن أن نشاركها ونلعبها من الهاتف.
      4:
        text: الشاشة مقسمة إلى ثلاثة أجزاء رئيسية. على اليسار مساحة اللعب حيث سيتم
          تشغيل البرنامج. التعليمات لكل مستوى مذكورة في الأسفل.
      5:
        text: هذه المنطقة الوسطى هي صندوق الأدوات وكل واحد من هذه القطع هو أمر من
          الأوامر البرمجية.
      6:
        text: والمنطقة البيضاء الموجودة على اليمين تعرف باسم مساحة العمل، وهي المكان
          المخصص لإنشاء البرنامج الخاص بنا.
      7:
        text: لتبدأ، ستحتاج إلى ربط القطع الخاصة بك إلى البرتقالي وهو أمر عند الركض.
          يمكنك ربط أوامر متعددة معا عن طريق سحبهم حتى ترى الخط الأصفر ثم سيلتصقون
          معا.
      8:
        text: في هذا اللغز الأول، سنجعل الشخصيات تقول شيء وذلك من خلال ربط الأمر "تكلّم"
          بالأمر "اركض" عندما يكتب اللاعب القول. بمجرد وضع القطع في مكانها، اضغط على
          زر التشغيل لترى ما قمت ببرمجته.
      9:
        text: ابدأ وعندما تصل إلى النهاية ستصبح قادراً على إنشاء كل أنواع الشخصيات
          التي يمكنها التفاعل، وتسجيل النقاط، ورمي الأشياء، وتخفي بعضها البعض. الأمر
          يرجع لك!
    iceage_events:
      1:
        text: الآن سوف نتعرف على شيء يستخدمه جميع مبرمجي الألعاب يومياً. يسمّى "الأحداث".
          يخبر الحدث برنامجك للاستماع إليه عند حدوث شيء ما، ثم عندما يحدث ذلك، تقوم
          اللعبة بتنفيذ إجراء ما.
      2:
        text: أحد الأمثلة على الأحداث هي الاستماع إلى نقرة الماوس أو ضغط مفتاح السهم
          الأعلى أو الأسفل أو حتى النقر على الشاشة.
      3:
        text: هنا، سوف نجعل الشخصية تقول شيئا عندما ينقر اللاعب عليها. سوف نستخدم
          أمر الحظر عند النقر عليها ونربط به محتوى الكلام. عندما ينقر اللاعب، جميع
          محتوى الكلام المربوط سوف يظهر.
      4:
        text: يوجد أيضا أوامر الأسهم. إذا قمت بربط أمر التحرك بذلك، يمكنك البدء في
          نقل الشخصية الخاصة بك إلى أعلى أو أسفل و يسار أو يمين، باستخدام مفاتيح الأسهم.
          شيئًا فشيئًا، تصبح لعبتك أكثر تفاعلية.
    iceage_repeat:
      1:
        text: "هل لك أن تتخيل لو اردت تكرار أمر ما إلى الأبد؟ \nنأمل أن لا يضطر أحد
          لذلك حيث أن أجهزة الحاسوب تقوم بهذا و بسهولة."
      2:
        text: هذه حلقة التكرار للأبد. وأي شيء يربط به يتكرر باستمرار في اللعبة. إذا
          كنا نريد أحد الشخصيات بالقيام بحركة ما مرارا وتكرارا دون أن يفعل اللاعب
          أي شيء، سوف نربط أمر تلك الحركة بأمر التكرار إلى الأبد.
      3:
        text: في هذا اللغز القادم، هدفنا هو مساعدة الشخصية بالقيام بحركة مستمرة. عندما
          تتعلم كيفية القيام بأوامر التكرار سيوفر لك ذلك طن من الوقت عند بناء اللعبة
          خاصتك.
    hoc_dance_events_2019:
      4:
        text: بعض الأمثلة من الأحداث الاستماع لنقر الماوس أو مفتاح السهم، أو النقر
          على الشاشة.
    poemart_intro:
      1:
        image: notes/hoc_poem_art_2021_introduction_01.jpg
      2:
        image: notes/hoc_poem_art_2021_introduction_02.jpg
      3:
        image: notes/hoc_poem_art_2021_introduction_03.jpg
      4:
        image: notes/hoc_poem_art_2021_introduction_04.jpg
      5:
        image: notes/hoc_poem_art_2021_introduction_05.jpg
      6:
        image: notes/hoc_poem_art_2021_introduction_06.jpg
      7:
        image: notes/hoc_poem_art_2021_introduction_07.jpg
      8:
        image: notes/hoc_poem_art_2021_introduction_08.jpg
      9:
        image: notes/hoc_poem_art_2021_introduction_09.jpg
      10:
        image: notes/hoc_poem_art_2021_introduction_10.jpg
      11:
        image: notes/hoc_poem_art_2021_introduction_11.jpg
