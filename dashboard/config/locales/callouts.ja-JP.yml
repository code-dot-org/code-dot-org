---
ja-JP:
  data:
    callouts:
      2-3 Artist Debugging 1:
        2-3_Artist_Debugging_1_a: アーティストは「ステップ」実行（じっこう）ボタンを持っていませんが、スライダーを左にドラッグすれば、プログラムを、ゆっくり動（うご）かすことができます。
      2-3 Bee Conditionals 5:
        Bee_Cond_5_1a: ムラサキ色の花は、1 または 0 の、ミツをもっていますが、プログラムを動（うご）かすまでは、わからないんです！
      4-5 Artist Patterns Free Play:
        4-5_Artist_Patterns_Free_Play_1: 全部のお気に入りブロックが、種類ごとに分けられました。これらの言葉をクリックすると、どうなったか確認できます。
      AppLab Intro 7 - Change Screen Color:
        applab_hoc_finish: '画面は緑に変わりましたか？もしそうならば「終了」を押してください。そうでなければ「リセット」を押して、プログラムを変更した後、もう一度「実行」を押してください。

'
      CSD U3 rect:
        CSD_U3_rect_c2: "「実行」ボタンはここにあります。"
      Course 4 Artist 4:
        repeat_full_circle: ゾンビが完璧な円を描くために移動する回数を入力してください。
      Course 4 Artist 7:
        repeat_blocks: ワークスペースのブロックたちを、「くりかえし」ブロックを使って、かこみます。
      Course 4 Artist For Loops 4:
        place_counter_variable: このブロック内にカウンター変数をドラッグしてください
      Course 4 Artist Vars 1:
        repeat_blocks: ワークスペースのブロックたちを、「くりかえし」ブロックを使って、かこみます。
      Course 4 Artist Vars 12:
        set_length: このブロックを使い、「長さ」を適切な値にセットします。
      Course 4 Artist Vars 2:
        set_length: このブロックを使い、「長さ」を適切な値にセットします。
      Course 4 Artist Vars 6:
        degrees_per_side: 360度を辺の数で割って、各角度の大きさを度で求めます。
      Course 4 Bee Params 2:
        edit_get_nectar: 関数を編集し、はちが みつを集めるために方向を変えるには、このボタンを使います。
      Course 4 Maze 4:
        repeat: コマンドを繰り返すには、ループ内にブロックを配置します。
      Course 4 Play Lab Params 3:
        edit_function: ここをクリックしてあなたの関数を編集します。
      Course 4 Play Lab Params 6:
        edit_add_parameter: 編集をクリックして関数にパラメーターを追加します
      Course 4 Play Lab Vars 1:
        arrows_move_actor: やじるしをつかって、キャラをうごかそう。
      CourseD_Dance_Party_01:
        dance_callout_01: プログラムにこのブロックを追加！
      CourseD_Dance_Party_02:
        dance_callout_02: プログラムにこのブロックを追加！
      CourseD_Dance_Party_04:
        dance_callout_04: プログラムにこのブロックを追加！
      CourseD_Dance_Party_06:
        dance_callout_06: 新しいダンサーをここに追加
      CourseD_Dance_Party_11:
        dance_callout_11_a: 新しいブロック！
        dance_callout_11_b: 新しいブロック！
      Dance_Party_01:
        dance_callout_01: プログラムにこのブロックを追加！
      Dance_Party_02:
        dance_callout_02: プログラムにこのブロックを追加！
      Dance_Party_04:
        dance_callout_04: プログラムにこのブロックを追加！
      Dance_Party_06:
        dance_callout_06: 新しいダンサーをここに追加
      Dance_Party_11:
        dance_callout_11_a: 新しいブロック！
        dance_callout_11_b: 新しいブロック！
      Function intro Ryan:
        Function_intro_Ryan_1: このほんの小さな命令が、ワークスペースにある同じ名前をもったぼう大なコードを実行するようコンピューターに命令します。
      Function intro Ryan_2019:
        Function_intro_Ryan_1: このほんの小さな命令が、ワークスペースにある同じ名前をもったぼう大なコードを実行するようコンピューターに命令します。
      Geometric Sun:
        4-5_Artist_Patterns_Free_Play_1: 全部のお気に入りブロックが、種類ごとに分けられました。これらの言葉をクリックすると、どうなったか確認できます。
      Geometric Sun_2018:
        4-5_Artist_Patterns_Free_Play_1: 全部のお気に入りブロックが、種類ごとに分けられました。これらの言葉をクリックすると、どうなったか確認できます。
      Infinity_move_collide:
        Infinity_move_collide_callout: このイベントが起きたときに音を鳴らしてください。
      Infinity_move_directions:
        Infinity_move_directions_callout: どのブロックが上矢印を押したときにベイマックスを上に動かすでしょうか。
        Infinity_move_directions_callout_arrow: これらの矢印を使って操縦してください。
      Infinity_move_right:
        Infinity_move_right_runbutton: うごかすブロックをここに足してください。
      Infinity_repeat:
        Infinity_repeat_callout: 移動ブロックをこの中に置いてください
      MC HOC 2016 Level 2-2:
        craft2_run_button_callout: 用意ができたら、「実行」をクリックして君のプログラムを試してみよう。
      MC HOC 2016 New Walk:
        MC_HOC_2016_New_Walk_callout2: "「実行」ボタンを押して動かしてください。"
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_1: これが「繰り返す」ループです!  ワークスペースにあるこれをクリックして、繰り返し実行したいコードを追加しましょう。
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_1: これが「繰り返す」ループです!  ワークスペースにあるこれをクリックして、繰り返し実行したいコードを追加しましょう。
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent は水の上に立つことができますが、プレイヤーはできません!
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent は水の上に立つことができますが、プレイヤーはできません!
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_1: これらのブロックは削除できませんが、変更することはできます!
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_1: これらのブロックは削除できませんが、変更することはできます!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_1: 'Agent は溶岩の上に立つことができますが、プレイヤーはできません!  '
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_1: 'Agent は溶岩の上に立つことができますが、プレイヤーはできません!  '
      NEW Course 4 Artist Functions 7:
        edit_function: ここをクリックしてあなたの関数を編集します。
      NEW Course 4 Artist Functions 8:
        edit_function: ここをクリックしてあなたの関数を編集します。
      NEW Course 4 Artist Params 10:
        create_function: ここをクリックして「関数」ポップアップを開き、「関数の作成」ボタンをクリックします。
      NEW Course 4 Artist Params 9:
        edit_add_parameter: 編集をクリックして関数にパラメーターを追加します
        add_and_drag_parameter: ここにパラメーターの名前を書いて、追加をクリックし、関数定義内にドラッグしてください。
      NEW Course 4 Artist Vars 6:
        place_length_variable: 長さ変数をドラッグして"???"を置きかえてください。
      NEW Course 4 Bee For Loops 5:
        actions_category: ツール ボックスが新しくなりました！「アクション」ブロックがここにあります。
      Overworld Chop Trees:
        craft_callout_preplaced: 用意されたブロックを使って始めましょう
      Overworld Chop Trees_2019:
        craft_callout_preplaced: 用意されたブロックを使って始めましょう
      Overworld House Frame Chosen:
        craft_callout_preplaced_house: このコードで家を建ててみましょう
      Overworld House Frame Chosen_2019:
        craft_callout_preplaced_house: このコードで家を建ててみましょう
      Overworld Move to Sheep:
        craft_run_button_callout: "「実行」ボタンをおして、プログラムを動かしてください。"
      Overworld Move to Sheep_2019:
        craft_run_button_callout: "「実行」ボタンをおして、プログラムを動かしてください。"
      Overworld Place Wall:
        craft_inside_repeat: ここにブロックを置いて繰り返しましょう
      Overworld Place Wall_2019:
        craft_inside_repeat: ここにブロックを置いて繰り返しましょう
      Underground Avoiding Lava:
        craft_callout_moveforward: 溶岩を調べるコードに前進のコマンドを追加しましょう
      Underground Avoiding Lava_2019:
        craft_callout_moveforward: 溶岩を調べるコードに前進のコマンドを追加しましょう
      Underground Iron:
        craft_what_is_iron: 鉄を掘りましょう！
      Underground Iron_2019:
        craft_what_is_iron: 鉄を掘りましょう！
      courseA_artist_loops4:
        courseA_artist_loops4_1: いくつのブロックが つかえるか、この すうじを みてください。
      courseA_artist_loops4_2018:
        courseA_artist_loops4_1: いくつのブロックが つかえるか、この すうじを みてください。
      courseA_artist_loops4_2019:
        courseA_artist_loops4_1: いくつのブロックが つかえるか、この すうじを みてください。
      courseA_collector_loops1:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseA_collector_loops3:
        gradek_adventurer_loops2_1: いくつのブロックが つかえるか、この すうじを みてください。
      courseA_collector_loops3_2018:
        gradek_adventurer_loops2_1: いくつのブロックが つかえるか、この すうじを みてください。
      courseA_collector_loops3_2019:
        gradek_adventurer_loops2_1: いくつのブロックが つかえるか、この すうじを みてください。
      courseA_collector_preLoops2:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops3:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops4:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops5:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops6:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseA_maze_seq1:
        courseA_maze_seq1_1: ヒントが ほしいときは、でんきゅうを クリック！
      courseA_maze_seq1_2018:
        courseA_maze_seq1_1: ヒントが ほしいときは、でんきゅうを クリック！
      courseA_maze_seq1_2019:
        courseA_maze_seq1_1: ヒントが ほしいときは、でんきゅうを クリック！
      courseA_maze_seq2:
        courseA_maze_seqA_callout1: ステップ ボタンを つかうと プログラムが ひとつずつ うごきます。これで バグを みつけよう！
      courseA_maze_seq4:
        made_of_stone: このブロックは いしで できてます。うごかす ことは できるけど、けす ことは できません！
      courseB_Scrat_ramp1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseB_Scrat_ramp1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseB_collector_loops1:
        courseB_collector_loops1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseB_maze_seq1:
        courseB_maze_seq1: ヒントが ほしいときは、でんきゅうを クリック！
      courseB_maze_seq1_2018:
        courseB_maze_seq1: ヒントが ほしいときは、でんきゅうを クリック！
      courseB_maze_seq1_2019:
        courseB_maze_seq1: ヒントが ほしいときは、でんきゅうを クリック！
      courseB_maze_seq2:
        courseB_maze_seq2_callout1: ステップ ボタンを つかうと プログラムが ひとつずつ うごきます。これで バグを みつけよう！
      courseC_collector_prog1:
        courseC_collector_prog1_1: ツールボックスに あたらしい ブロックが ありますよ。あとで せつめいを するので、まっててね。
      courseC_maze_programming1:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseC_maze_programming1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseC_maze_programming1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseD_maze_ramp1:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseD_maze_ramp1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseD_maze_ramp1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseD_scrat_ramp1:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを開始してください。
      courseE_artist_functions2:
        courseD_artist_functions2_1: この緑のブロックが実行されるとき関数内のすべてのプログラムが実行されます。最初の四角を描いた後、アーティストは何をすべきでしょう？
      courseE_artist_functions2_2018:
        courseD_artist_functions2_1: この緑のブロックが実行されるとき関数内のすべてのプログラムが実行されます。最初の四角を描いた後、アーティストは何をすべきでしょう？
      courseE_artist_functions2_2019:
        courseD_artist_functions2_1: この緑のブロックが実行されるとき関数内のすべてのプログラムが実行されます。最初の四角を描いた後、アーティストは何をすべきでしょう？
      frozen circle function with parameter:
        frozen_circle_function_with_parameter_circle: '"円を描く"ブロックを使い、そして大きさを変えてください。'
      frozen cross:
        repeat_blocks_1: "(1)このブロックを使います。作業領域にある灰色のブロック達のあたりに置いてください"
        repeat_blocks_2: (2)"繰り返し"ブロックをここに移動させて、灰色のブロック達を内側に置いてください
      frozen cross rotate:
        replace_questions_degree: ドロップダウンを使って"???"を数字に変えてください
      frozen diamond:
        frozen_diamond_repeat: 繰り返しブロックを使ってこの形を作ってください
      frozen diamond snowflake:
        frozen_diamond_repeat: 繰り返しブロックを使ってこの形を作ってください
      frozen freeplay:
        snowflake_dropdown: このドロップダウンリストを使って異なる雪の結晶を作ってみましょう!
      frozen line:
        run: "「実行」ボタンを押してプログラムを試してみてください！"
        move_elsa_forward: エルサをまえにすすませるために、"まえにうごく"ブロックをドラッグして"実行時"ブロックにくっつけてください。
      frozen perpendicular:
        turn_elsa: '"回転"ブロックを使ってエルサの向きを変えてください。ドロップダウンの数字でどれくらいエルサを回転させるかを決めます。'
      frozen snowflake branch:
        frozen_snowflake_branch: '"雪の結晶の枝を描く"ブロックを使ってください'
      frozen square iterative:
        frozen_create_square: 四角形を描くためにもっとブロックをくっつけてください
      frozen square loop:
        replace_questions: ドロップダウンを使って"???"を数字に変えてください
      frozen square loop 3x:
        replace_questions: ドロップダウンを使って"???"を数字に変えてください
      frozen square snowflake:
        replace_questions: ドロップダウンを使って"???"を数字に変えてください
