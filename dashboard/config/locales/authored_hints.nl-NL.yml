---
nl-NL:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Als je het blok 'beweeg vooruit door 100 pixels', zal
          ik automatisch een lijn tekenen.
        2-3_Artist_1_new_b: Problemen met het draaien van de hoek? Gebruik het blok
          'rechts 90 graden'.
      2-3 Artist 11:
        2-3_Artist_11_a: 'Heeft u problemen met de hoeken? Draai dan 360 graden in
          8 bochten. Wat is 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: Er zijn 360 graden in een cirkel, zodat als de kunstenaar
          telkens 1 graad door de lus draait, hij moet om te gaan door 360 tijden.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Het lijkt erop dat de kunstenaar niet de juiste kant op
          kijkt. Kun je hem eerst draaien voor je de lijn tekent?
      2-3 Artist 3new:
        2-3_Artist_3new_a: Wat is 100-70? Op basis van het probleem in het verhaal
          is dat hoe hoog de hoed moet zijn!
        2-3_Artist_3new_b: Het lijkt erop dat de kunstenaar niet de juiste kant op
          kijkt. Kun je hem eerst draaien voor je de lijn tekent?
      2-3 Artist 4:
        2-3_Artist_4_a: Om het huis af te maken moet je een vierkant tekenen!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Om die kleine hoeken te maken, moet je telkens \* verder
          \* draaien dan je met het vierkant deed.   '
        2-3_Artist_6_b: Omdat ik al naar rechts kijk, kun je het best eerst vooruit
          bewegen, en dan naar links draaien om de driehoek te maken.
        2-3_Artist_6_c: Elke zijde van de driehoek heeft dezelfde lengte als elke
          kant van het plein... 100 pixels!
      2-3 Artist 7:
        2-3_Artist_7_a: De simpelste manier om deze puzzel op te lossen is om het
          eerste vierkant te tekenen en te zorgen dan de kunstenaar aan het eind naar
          beneden kijk voor je begint met je tweede vierkant.
      2-3 Artist 8:
        2-3_Artist_8_a: Als je 200 doormidden deelt, hoeveel pixels breed moet ieder
          vierkant dan worden?
      2-3 Artist 9:
        2-3_Artist_9_a: Deze diamant is eigenlijk gewoon een vierkant op zijn kant
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Denk eraan, je wilt het controle paneel 10 pixels
          \* breder \*... dus zorg ervoor dat je 10 tot welk nummer je wilt veranderen
          \* toevoegt \*.
        2-3_Artist_Debugging_10_b: "\\*\\* Proberen en fouten maken is prima hier!\\*\\*."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Tip: Elke snorhaar is 75 pixels lang.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Een van de bochten is 15 graden te klein.
        2-3_Artist_Debugging_3_b: Als het programma te snel gaat om te kunnen zien
          wat er gebeurt, probeer het dan te vertragen met de schuifregelaar.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Wat gebeurt er als je de kunstenaar naar achteren
          laat bewegen of springen nadat hij de eerste lijn tekent?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: Hoeveel keer werd mijn vorm herhaald?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: De kunstenaar moet 60 graden verder naar links draaien
          voor je begint met tekenen!
        2-3_Artist_Debugging_9_b: Je hoeft geen ander blok toe te voegen om de volledige
          draai te krijgen, voeg enkel 60 graden aan het 'draai naar links' blok toe
          dat er al is!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: De vierkanten hebben elk zijden van 100 pixels,
          dat betekent dat je 175 pixels vooruit moet bewegen voor je je tweede vierkant
          tekent.
        2-3_Artist_Functions_1_b: Het is oke om overlappende lijnen te gebruiken om
          je bril te tekenen.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Je moet niet alleen het aantal en de lengte van
          de zijden binnen de functie wijzigen, maar ook de hoek die de kunstenaar
          draait tussen iedere zijde.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Probeer de code eerst om te zien wat je nog moet
          toevoegen.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          Je programma: moet:

          -   functie gebruiken
          -   100 + 75 pixels vooruit bewegen
          -   functie gebruiken
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "\\*\\* 115 + 45 = 160 \\*\\*"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: De kunstenaar moet 120 graden draaien tussen elk
          vierkant om dit ontwerp te voltooien.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          Vergeet niet dat de code van de laatste puzzel was:

          !\[] (<https://images.code.org/15288d042780242ec5edeed5204c6ebb-image-1469640792081.png>)
        2-3_Artist_Loops_New_11_b: Je nieuwe bocht moet komen aan het \*\* einde \*\*
          van de code binnen de lus.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Voordat je begint met de diamant, moet de kunstenaar
          60 graden naar rechts draaien om op de goede weg te komen.
        2-3_Artist Loops_New_12_b: Nadat de kunstenaar 100 pixels vooruit is gegaan,
          moet hij 120 graden naar rechts draaien om de scherpe hoek te maken.
        2-3_Artist Loops_New_12_c: De kunstenaar moet maar 60 graden naar rechts om
          een stompe hoek te maken.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          Aan het eind van iedere diamant kijkt de kunstenaar al de goede kant op om de volgende diamant te starten.
          Daarom hoeven we geen extra 'draai links met' blok toe te voegen voor we weer starten.
        2-3_Artist_Loops_New_13_b: |-
          Voor elke diamant moet de kunstenaar:

          -   bewegen
          -   120 graden naar rechts draaien
          -   bewegen
          -   60 graden naar rechts draaien.

          En het dan opnieuw doen!
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: De kunstenaar moet 45 graden naar rechts draaien
          voordat hij begint te tekenen.
        2-3_Artist_Loops_New_9_b: Deze V is eigenlijk maar de helft van een vierkant.
          Wat zou de code moeten zijn om een half vierkant te tekenen?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Vergeet niet om alle grijze blokken binnen je
          lus te plaatsen.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: Hulp nodig bij de hoeken?   \*\* 360/12 = 30
          \*\*
        2-3_Artist_Nested_Loops_3_b: Vergeet niet om alle grijze blokken en je draai
          blok binnen een lus te plaatsen.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: Hulp nodig bij de hoeken?   \*\* 360/12 = 30
          \*\*
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          Probeer het 'spring vooruit' blok te gebruiken om van de bovenkant van het ene vierkant naar de plaats te komen waar je het volgende vierkant gaat beginnen.

          Als je vierkanten 20 pixels hoog zijn en ze staan 20 pixels uit elkaar, hoe ver moet je dan springen?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: Hoe ver moet je draaien in elke lus?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: Hulp nodig bij het vinden van de juiste hoek?
          \*\* 360 / 12 = 30 \*\*
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Vind je het lastig om te bedenken hoe je de blokken
          beneden kunt krijgen? Probeer de rode bloem op precies dezelfde manier te
          behandelen als de paarse bloem!
        2-3_Bee_Conditionals_14_b: Als de rode bloem paars zou zijn, kun je dan uitzoeken
          hoe je een extra 'herhaal-lus' kunt gebruiken om de code korter te maken?
        2-3_Bee_Conditionals_14_c: |-
          Probeer dit  eens in twee aparte stukken op te delen.

          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)

          1.  Haal 3 keer nectar op

          2.  Beweeg 5 keer vooruit

          3.  Controleer of het nectar is, als dat zo is, haal het op

          4.  Draai naar links

          5.  Maak honing

          6.  Beweeg één keer vooruit

          7.  Maak twee honing
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Denk er aan: Paarse bloemen hebben 0 of 1 nectar
          en ze kunnen veranderen, iedere keer dat je het programma uitvoert.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: De code zal het kortst zijn als je gebruik maakt
          van een loop elke keer je voorwaarts beweegt, een andere loop om nectar
          te verzamelen en nog een andere om honing te maken.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Vergeet niet: Paarse bloemen wisselen tussen 0
          en 1 nectar wanneer je het programma uitvoert!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Als je het foute blok hebt gevonden en opgelost, herken
          je dan een terugkerend patroon die je eenvoudiger kunt maken door een "herhaal
          keer" blok te gebruiken?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Als je het foute blok hebt gevonden en opgelost, herken
          je dan een terugkerend patroon die je eenvoudiger kunt maken door een "herhaal
          keer" blok te gebruiken?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Is er een plek waar de bij iets doet wat helemaal geen
          zin heeft? Wat gebeurt er als je dat blok verandert?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Je hoeft niet altijd een lus met een functie te gebruiken.
          Probeer het blok "beweeg vooruit", daarna het functie blok, dan weer "beweeg
          vooruit" en daarna weer de functie.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Je hoeft niet altijd een lus met een functie te gebruiken.
          Probeer het blok "beweeg vooruit", daarna het functie blok, dan weer "beweeg
          vooruit" en daarna weer de functie.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: "Als de puzzel moeilijk lijkt, probeer dan je functie
          stap voor stap te maken. \n\nVoeg een paar blokken toe en test je programma.
          Voeg daarna weer een paar blokken toe en test dan opnieuw. Zo kom je er
          wel!"
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: "Als de puzzel moeilijk lijkt, probeer dan je functie
          stap voor stap te maken. \n\nVoeg een paar blokken toe en test je programma.
          Voeg daarna weer een paar blokken toe en test dan opnieuw. Zo kom je er
          wel!"
        2-3_Bee_Functions_8_b: Vergeet niet om jouw code binnenin het groene functie
          blok te plaatsen.
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Uiteindelijk moet je 4 blokken in jouw lus hebben.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Je zou 6 blokken moeten hebben in je lus.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Je zal twéé verschillende `herhaal` lussen nodig hebben,
          de één achter de andere.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Je zou moeten eindigen met 5 blokken in je lus.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: De eerste actie is een draai, in plaats van een beweging.
        2-3_Bee_Loops_4A_b: Om het laatste stukje van het programma te schrijven,
          moet je onder de lus nog een paar blokken plaatsen.
        2-3_Bee_Loops_4A_c: Als je de lussen niet gelijk ziet, maak dan stap voor
          stap eerst een lang programma en bekijk daarna wat je kunt combineren in
          een "herhaal keer" blok.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Als je niet gelijk ziet welke blokken je in het "herhaal
          keer" blok moet zetten, probeer dan eerst elke stap te programmeren en daarna
          een terugkerend patroon te zoeken.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Als je niet gelijk weet welke blokken je in het "herhaal
          keer" blok moet zetten, probeer dan eerst de blokken één voor één en kijk
          of je een terugkerend patroon kan vinden.
        2-3_Bee_Loops_6_b: Er zouden 6 blokken binnen in je `herhaal` lus moeten staan
          wanneer je gedaan hebt.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: De eerste actie is een draai, in plaats van een beweging.
        2-3_Bee_Loops_7_b: Als je in het begin niet gelijk ziet hoe de lus eruit moet
          zien, maak dan eerst een lang programma en zoek daarna naar een terugkerend
          patroon.
      2-3 Maze 1:
        2-3_Maze_1_a: Om het "beweeg vooruit" blok te gebruiken, sleep je het vanuit
          het blokken gebied naar de werkplaats en plak je het direct onder het blok
          "als gestart".
      2-3 Maze 16:
        2-3_Maze_16_a: Als het patroon moeilijk te zien is, codeer dan eerst alles
          volledig zonder lussen. Bekijk vervolgens welke dingen zich herhalen en
          voeg dan de lussen toe.
        2-3_Maze_16_b: "Om meer blokken in een \"Herhaal\" lus te zetten, sleep je
          eerst het \"herhaal keer\" blok naar de werkplaats en daarna sleep je alle
          blokken onder het \"als gestart\" blok binnenin de lus. \n\nZet daarna alles
          weer terug onder het \"als gestart\" blok en je bent klaar!"
      2-3 Maze 6:
        2-3_Maze_6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Als het patroon moeilijk te zien is, codeer dan eerst
          alles volledig zonder lussen. Bekijk vervolgens welke dingen zich herhalen
          en voeg dan de lussen toe.
        2-3_Maze_Loops_17_b: Is de start code verwijderd? Klik dan op `Begin opnieuw`
          om het terug te krijgen!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Als het patroon moeilijk te zien is, codeer dan eerst
          alles volledig zonder lussen. Bekijk vervolgens welke dingen zich herhalen
          en voeg dan de lussen toe.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Als je vastzit, probeer dan eerst de code zonder loops
          te schrijven. Zoek vervolgens naar patronen.
        2-3_Maze_Loops_19_b: Door een "herhaal keer" blok binnenin een andere "herhaal"
          lus te zetten, hoef je minder blokken te gebruiken.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Bekijk het traptrede patroon in dit doolhof om te zien
          waar je een lus kan gebruiken.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Als je het lastig vindt om het traptrede patroon te vinden,
          volg dan eerst het pad met je vinger.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Wees er zeker van dat je artiest in je lus, na het tekenen
          van iedere lijn, achterwaarts en naar boven springt.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          Als het bloemenbed een totale omtrek van 600 pixels heeft en de twee lange zijden 200 pixels lang zijn, kan je uitzoeken wat de som is van de twee korte zijden:

          **600 - 200 - 200 = 200**

          Dat betekent dat de twee korte zijden tezamen 200 pixels lang zijn.

          **Wat is 200 / 2?**
        4-5_Artist_3_b: Als je niet onmiddellijk kan zien waar de `herhaal` lus thuishoort,
          codeer dan de volledige oplossing en zoek vervolgens naar een patroon.
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          Er zitten 360 graden in een cirkel!

          Dat is hoeveel keren je deze code moet herhalen (als je 1 graad draait per keer) vooraleer de cirkel compleet is!
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Vallen en opstaan (trial and error) is een geweldige methode, maar je kan het probleem ook oplossen door 90 graden te delen door drie.

          **90 / 3 = **\_****
      4-5 Artist 7:
        4-5_Artist_7_a: Welke hoek is het kleinst? In welke hoek staat de kunstenaar?
      4-5 Artist 8:
        4-5_Artist_8_a: "De lange zijden zijn elk 240 pixels lang. Dat betekent dat
          de 2 korte zijden:\n\n**800 - 240 - 240 = 320**\n\nWat is **320/2** ? "
        4-5_Artist_8_b: |-
          Deze afbeelding kan op 2 manieren gemaakt worden!

          -   Teken 2 rechthoeken die **120** lang en **160** breed zijn, met een overlappende zijde

          -   Teken één rechthoek die **240** lang en **160** breed is, en voeg dan een lijn in het midden toe.
      4-5 Artist 9:
        4-5_Artist_9_a: Wanneer een driehoek gelijkzijdig is, zijn alle zijden en
          hoeken hetzelfde.
        4-5_Artist_9_b: Je moet 3 driehoeken van dezelfde grootte tekenen. Vergeet
          niet achter elke driehoek naar de nieuwe positie te springen.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Je hoeft alleen de buitenste driehoek te tekenen
          om deze puzzel te maken.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Indien er 360 graden in een cirkel zit en iedere
          lus 3 graden draait, hoeveel keren moet je dan de lus uitvoeren om een halve
          cirkel te tekenen?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Merk op dat doordat de vierkanten elk 20 pixels lang
          zijn, je 20 pixels zal moeten springen om aan het volgend vierkant te beginnen.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Zorg ervoor dat je de vorige blok code er volledig
          uittrekt, elke keer wanneer je een nieuwe uitprobeert.
        4-5_Artist_Patterns_3_b: Als jouw programma te verwarrend wordt, kun je altijd
          op "Begin opnieuw" klikken en het opnieuw proberen!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Als de kunstenaar klaar is met de diamant, dan staat
          hij in de de tegenovergestelde richting van waar hij moet staan om de volgende
          diamant te tekenen. \n\nHoeveel graden moet hij draaien om weer goed te
          staan?"
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          **Herinnering:** De puzzel verandert iedere keer hij wordt uitgevoerd.

          Je zult een voorwaardelijke blok (`als` of `als/anders`) moeten gebruiken om deze uitdaging op te lossen.
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          **Herinnering:** De puzzel verandert iedere keer hij wordt uitgevoerd.

          Je zult een voorwaardelijke blok (`als` of `als/anders`) moeten gebruiken om deze uitdaging op te lossen.
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Je kan deze puzzel oplossen, gebruik makende van
          enkel de blokken op de werkplaats. In welke volgorde moeten ze worden geplaatst?
        4-5 Bee Conditionals 6_b: Wees zeker dat je ten minste **3** keer checkt dat
          de bloem meer dan **0** nectar heeft om deze puzzel op te lossen.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Als je het lastig vindt om te zien wat er niet klopt,
          test dan eerst het programma en kijk dan waar het fout gaat.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Denk bij deze puzzel aan een lange rechthoek
          waar de bij eerst vooruit moet bewegen en dan een paar keer linksom moet
          draaien om het hele pad af te gaan.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          Als je niet gelijk ziet hoe je met lussen de puzzel kunt oplossen, probeer dan eerst de puzzel blok voor blok op te lossen en kijk daarna of je een patroon ziet.

          Wat moet je een 'herhaal totdat' blok omheen zetten om de code korter te maken?
      4-5 Maze 4:
        4-5_Maze_4_a: Als je het lastig vindt om te bepalen waar je de lus moet plaatsen,
          probeer dan eerst alles blok voor blok te programmeren en ga daarna op zoek
          naar een patroon.
      4-5 Maze 5:
        4-5_Maze_5_a: Gebruik een 'herhaal keer' blok als je meer dan twee 'beweeg
          vooruit' blokken moet gebruiken.
        4-5_Maze_5_b: Je kan meer dan één `herhaal` lus gebruiken in een puzzel.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          Probeer een pad uit te tekenen met je vinger.
          Is dit het kortste pad dat je kan vinden?
      4-5 Maze 7:
        4-5_Maze_7_a: "**Wil je je code zo klein als mogelijk maken?** \n\nZoek dan
          naar patronen in je blokken. Zie je iets dat zich herhaalt? Probeer er dan
          een lus rond te plaatsen!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          Vergeet niet te draaien na je binnenste lus.

          Je dient binnen de 360 graden 6 driehoeken te tekenen.

          **360 / 6 = ?**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          Dit design maakt 10 keer een volledige loop in 360 graden.

          **360 / 10 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          Herhaal deze vorm 6 keer binnen 360 graden.

          **360 / 6 = ?**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Elk item heeft zijn eigen `herhaal` loop nodig.
      Course 4 Artist 11:
        Course_4_Artist_11_a: De halve zeshoek heeft een \*\* lengte van 30 \*\* en
          draait rechts met \*\* 60 graden \*\*.
        Course_4_Artist_11_b: De driehoek heeft een \*\* lengte van 80 \*\* en draait
          naar rechts met \*\* 120 graden \*\*.
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Elke herhaalde vorm is de combinatie van een **halve
          zeshoek**, gevolgd door **2/3 van een driehoek**. '
        Course_4_Artist_12_b: Het patroon is bijna hetzelfde als in de laatste puzzel.
          De halve achthoek is enkel een beetje groter.
        Course_4_Artist_12_c: "1.  De eerste drie lijnen zijn 60 pixels lang en je
          moet 60 graden draaien.\n2.  De volgende twee lijnen zijn 80 pixels lang
          en je moet 120 graden draaien. "
        Course_4_Artist_12_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: Er worden 3 driehoeken getekend tijdens de 360 graden
          rotatie... Hoeveel keren gaat 3 in 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          Hulp nodig met het uitzoeken hoeveel te draaien?

          Er zijn 3 driehoeken in de 360 graden rotatie.

          Hoeveel keer gaat 3 in 360?
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: Deze code bevat twee `lussen`. Één
          telt op van 1 tot 8, de andere telt af van 8 tot 1.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Oplossing:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          **Wat is het kleinste nummer dat je nodig hebt?
          Wat is het grootste nummer?
          Hoe groot is de toename iedere keer?**

          Dit zijn vragen die je jezelf moet stellen wanneer je de leegtes in de `herhaal` lus invult.
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: De grootste vorm heeft 19 zijden. De
          kleinste slechts twee.
        Course_4_Artist_For_Loops_Challenge_b: De `herhaal` loop vermeerdert iedere
          keer met twee.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: De basis van deze code is de oplossing
          van de vorige puzzeluitdaging... met enkele aanpassingen.
        Course_4_Artist_For_Loops_inspire_b: Probeer een `herhaal` loop dat gaat van
          3 tot 10 met een stapgrootte van 1.
        Course_4_Artist_For_Loops_inspire_d: "**Oplossing:**  \n\n<xml>\n  <block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block
          type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation
          counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block
          type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n
          \       </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">10</title>\n          </block>\n        </value>\n
          \       <value name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Start met de code van de laatste
          puzzel en voeg een extra `draai rechts` van 3 graden toe aan de binnenste
          lus.
        Course_4_Artist_Functions_Inspiration_c: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">14</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a square 20"></mutation>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">20</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">3</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">100</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_b: Gebruik een `herhaal` lus, gebruik
          vervolgens zijn teller variabele binnen in een geneste `lus`.
        Course_4_Artist_Functions_challenge_c: Teken iedere herhaling een vierkant
          en spring voorwaarts.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Om een vierkant te tekenen, draai dan iedere keer
          **360/sides** graden.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Als je je startlengte deelt door het aantal zijden,
          zal de lengte van iedere zijde korter worden naarmate het aantal zijden
          vermeerdert.
      Course 4 Bee Params 7:
        count_with_for: Merk op dat de hoeveelheid nectar naar omhoog gaat in stappen.
          Welk soort blok kan je gebruiken om hetzelfde te doen?
      Course 4 SCF 1:
        Course_4_SCF_1_a: Elke zeshoek heeft een zijde van 40 pixels.
        Course_4_SCF_1_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/forward"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/backward"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a hexagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/backward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">440</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a line of hexagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a hexagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">120</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/forward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">320</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Herinner je functies van stage 16.
        Course_4_SCF_1a_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">left</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">right</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">0</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">21</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathLeft</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">right</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <title name="NAME">get nectar</title>
          <statement name="STACK">
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"></block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">make honey up and over</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: Elke achthoek heeft zijden van 40 pixels.
        Course_4_SCF_2_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="numOctagons"></arg>
          </mutation>
          <title name="NAME">draw octagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">numOctagons</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw an octagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">136</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">shift down</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">96</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">408</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        Course_4_SCF_3_f: |-
          **Oplossing:**

          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_c: |-
          Merk op dat er binnen één `voor` loop meerdere standaard lussen moeten zitten die zich `counter` keer herhalen om het stijgende trap patroon te creëren.

          De andere 'voor`lus heeft slechts één standaard lus nodig om`counter\` keer honing te maken.
        Course_4_SCFL_1_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Probeer een `herhaal loop` te gebruiken.
        Course_4_SCFL_1b_c: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_b: Merk op dat je bij elke iteratie van de `herhaal` lus op
          drie punten stopt om interactie te hebben met de objecten.
        Course_4_SCFL_2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: De `pendikte` is 1. De eerste vierkant heeft en zijde van
          50 pixels. Ieder volgend vierkant is 50 pixels breder dan het vorige.
        Course_4_SCFL_3_b: De ondoorzichtigheid van de brush is telkens `teller`/2.
        Course_4_SCFL_3_c: Vergeet niet om, nadat je elk vierkant maakt, terug te
          springen, te draaien, opnieuw terug te springen en nog eens te draaien!
        Course_4_SCFL_3_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_c: De artiest draait 15 graden tussen elk vierkant.
        Course_4_SCFL_4_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_c: 'De `for lus` gaat van 5 tot 250 in stappen van 2. '
        Course_4_SCFL_6_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_d: Je dient 225 graden te draaien tussen twee `herhaal` lussen
          in.
        Course_4_SCFL_7_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Variabelen kunnen handig zijn omdat je ermee kan optellen
          doorheen een lus. '
        Course_4_SCV_1_b: Deze puzzel heeft één lus die veelhoeken maakt, één lus
          die deze veelhoeken `sides` keer herhaalt, en dan nog eens een lus die dit
          nogmaal eens herhaalt maar 5 bij `slides` bijtelt.
        Course_4_SCV_1_c: Een variabele voor `sides` en één voor `length` maakt de
          code properder omdat je meerdere keren over dezelfde code kan loopen, in
          de plaats van een kopij te creëren voor elke set getallen.
        Course_4_SCV_1_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_d: Om te voorkomen dat al je 10 "bloembladen" op dezelfde plaats
          zouden getekend worden, wees er dan zeker van om voorwaarts te springen
          met een stapgrootte van `length / sides` vooraleer `360 / sides` graden
          te draaien als onderdeel van je buitenste lus.
        Course_4_SCV_2_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_a: Gebruik de wiskunde blok om punten op en af te tellen van
          de `points` variabele wanneer spelers botsen.
        Course_4_SCV_3_c: |-
          **Oplossing:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">points</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">points</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_f: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: |-
          **Hoe haal ik dit level?**

          -   Zorg ervoor dat er een danser op het scherm verschijnt.

          -   Dit level eindigt na 4 maten.\*
        challenges: |-
          **Extra uitdagingen**

          -   Kies een ander lied om te spelen.
          -   Kies een ander die eruitziet als een eland!
          -   Verander de naam van je danser.
      CourseD_Dance_Party_02:
        validation: |-
          **Hoe haal ik dit level?**

          -   De danser moet na 4 maten een nieuwe move doen.

          _Dit level eindigt na 8 maten._
      CourseD_Dance_Party_03:
        validation: |-
          **Hoe haal ik dit level?**

          -   Na 6 maten moet je danser een andere move doen dan na 4 maten.

          _Dit level eindigt na 12 maten._
      CourseD_Dance_Party_04:
        validation: |-
          **Hoe haal ik dit level?**

          -   Je moet het achtergrondeffect ergens tijdens de zevende maat van het lied veranderen.

          _Dit level eindigt na 10 maten._
        challenges: |-
          **Extra uitdaging**

          Verander het achtergrondeffect op verschillende momenten door het nieuwe blok te verbinden onder de <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> gebeurtenissen.
      CourseD_Dance_Party_06:
        validation: |-
          **Hoe haal ik dit level?**

          -   Je moet minstens twee dansers hebben.

          _Dit level eindigt na 6 maten._
        challenges: |-
          **Extra uitdaging**

          -   Voeg een derde danser toe (of zoveel als je wilt!)
          -   Zorg ervoor dat al je dansers verschillende moves doen op verschillende momenten tijdens het liedje.
      CourseD_Dance_Party_08:
        validation: |-
          **Hoe haal ik dit level?**

          -   Twee dansers moeten een andere grootte hebben dan 100.

          _Dit level eindigt na 6 maten._
        challenges: |-
          **Extra uitdaging**

          -   Experimenteer door andere eigenschappen te veranderen (breedte, hoogte, rotatie, enz.)
      CourseD_Dance_Party_09:
        validation: |-
          **Hoe haal ik dit level?**

          -   Verander de tint van minstens een danser.

          _Dit level eindigt na 8 maten._
      CourseD_Dance_Party_10:
        validation: |-
          **Hoe haal ik dit level?**

          -   De eigenschappen van twee of meer dansers moeten wijzigen.

          _Dit level eindigt na 8 maten._
      CourseD_Dance_Party_11:
        validation: |-
          **Hoe haal ik dit level?**

          -   Wees creatief!

          _Dit level eindigt na 8 maten._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Hoe haal ik dit level?**

          -   Wees creatief!

          _Dit level eindigt na 8 maten._
      CourseD_Dance_Party_11b:
        validation: |-
          **Hoe haal ik dit level?**

          -   Gebruik het blok 'wanneer linkerpijltoets ingedrukt' om de Robot een dansmove te laten doen wanneer je de linkerpijltoets indrukt.

          _Dit level eindigt na 8 maten._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Zie je de **zeelantaarns** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Hoe kun je een voorwaardelijk opdrachtblok met ze combineren om door het
          Oceaanmonument te komen?
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Wat een prachtig koraalrif! Blauw koraal geeft de \*\*
          rechte \*\* manier aan, en zorg ervoor dat je rood koraal niet \*\* links
          \*\* laat liggen!
      Dance_Party_01:
        validation: |-
          **Hoe haal ik dit level?**

          -   Zorg ervoor dat er een danser op het scherm verschijnt.

          -   Dit level eindigt na 4 maten.\*
        challenges: |-
          **Extra uitdagingen**

          -   Kies een ander lied om te spelen.
          -   Kies een ander die eruitziet als een eland!
          -   Verander de naam van je danser.
      Dance_Party_02:
        validation: |-
          **Hoe haal ik dit level?**

          -   De danser moet na 4 maten een nieuwe move doen.

          _Dit level eindigt na 8 maten._
      Dance_Party_03:
        validation: |-
          **Hoe haal ik dit level?**

          -   Na 6 maten moet je danser een andere move doen dan na 4 maten.

          _Dit level eindigt na 12 maten._
      Dance_Party_04:
        validation: |-
          **Hoe haal ik dit level?**

          -   Je moet het achtergrondeffect ergens tijdens de zevende maat van het lied veranderen.

          _Dit level eindigt na 10 maten._
        challenges: |-
          **Extra uitdaging**

          Verander het achtergrondeffect op verschillende momenten door het nieuwe blok te verbinden onder de <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> gebeurtenissen.
      Dance_Party_06:
        validation: |-
          **Hoe haal ik dit level?**

          -   Je moet minstens twee dansers hebben.

          _Dit level eindigt na 6 maten._
        challenges: |-
          **Extra uitdaging**

          -   Voeg een derde danser toe (of zoveel als je wilt!)
          -   Zorg ervoor dat al je dansers verschillende moves doen op verschillende momenten tijdens het liedje.
      Dance_Party_08:
        validation: |-
          **Hoe haal ik dit level?**

          -   Twee dansers moeten een andere grootte hebben dan 100.

          _Dit level eindigt na 6 maten._
        challenges: |-
          **Extra uitdaging**

          -   Experimenteer door andere eigenschappen te veranderen (breedte, hoogte, rotatie, enz.)
      Dance_Party_09:
        validation: |-
          **Hoe haal ik dit level?**

          -   Verander de tint van minstens een danser.

          _Dit level eindigt na 8 maten._
      Dance_Party_10:
        validation: |-
          **Hoe haal ik dit level?**

          -   De eigenschappen van twee of meer dansers moeten wijzigen.

          _Dit level eindigt na 8 maten._
      Dance_Party_11:
        validation: |-
          **Hoe haal ik dit level?**

          -   Wees creatief!

          _Dit level eindigt na 8 maten._
      Dance_Party_11_5:
        validation: |-
          **Hoe haal ik dit level?**

          -   Wees creatief!

          _Dit level eindigt na 8 maten._
      Dance_Party_11b:
        validation: |-
          **Hoe haal ik dit level?**

          -   Gebruik het blok 'wanneer linkerpijltoets ingedrukt' om de Robot een dansmove te laten doen wanneer je de linkerpijltoets indrukt.

          _Dit level eindigt na 8 maten._
      Function intro Ryan:
        Function_intro_Ryan_b: Als je de functies correct aanroept, dan is dit het
          pad dat je zal volgen...
        Function_intro_Ryan_a: Je kunt een functie meerdere keren aanroepen in je
          programma!  Probeer de functie twee keer aan te roepen om deze puzzel op
          te lossen.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: Als je de functies correct aanroept, dan is dit het
          pad dat je zal volgen...
        Function_intro_Ryan_a: Je kunt een functie meerdere keren aanroepen in je
          programma!  Probeer de functie twee keer aan te roepen om deze puzzel op
          te lossen.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Zie je de **zeelantaarns** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Hoe kun je een voorwaardelijk opdrachtblok met ze combineren om door het
          Oceaanmonument te komen?
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Wat een prachtig koraalrif! Blauw koraal geeft de \*\*
          rechte \*\* manier aan, en zorg ervoor dat je rood koraal niet \*\* links
          \*\* laat liggen!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Sleep een 'naar voren'-blok van de werkplaats naar
          de werkruimte en maak deze vast onder het 'wanneer uitgevoerd'-blok.
        MC_HOC_2017_01_RETRY_b: Vergeet niet op 'Uitvoeren' te klikken om de code
          voor de agent uit te voeren.
        MC_HOC_2017_01_RETRY_c: Wanneer er geen code meer over is voor de agent, kun
          je de speler bewegen met de pijltoetsen.
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Sleep een 'naar voren'-blok van de werkplaats naar
          de werkruimte en maak deze vast onder het 'wanneer uitgevoerd'-blok.
        MC_HOC_2017_01_RETRY_b: Vergeet niet op 'Uitvoeren' te klikken om de code
          voor de agent uit te voeren.
        MC_HOC_2017_01_RETRY_c: Wanneer er geen code meer over is voor de agent, kun
          je de speler bewegen met de pijltoetsen.
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Beweeg de agent twee vakjes naar voren om op de drukplaat
          te staan.  Hiermee wordt de deur voor de speler geopend.
        MC_HOC_2017_02_Cole_b: "Druk op 'Uitvoeren'! \nJe kunt je code ook uitvoeren
          als deze niet juist is.  Blijf je code opnieuw uitvoeren en instellen om
          erachter te komen wat er misgaat."
        MC_HOC_2017_02_Cole_c: Wanneer de agent de deur heeft geopend, kun je de pijltoetsen
          gebruiken om de speler naar de kaart te bewegen.
        MC_HOC_2017_02_Cole_d: Wees er zeker van dat de agent het aangeduide pad op
          de kaart volgt!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Beweeg de agent twee vakjes naar voren om op de drukplaat
          te staan.  Hiermee wordt de deur voor de speler geopend.
        MC_HOC_2017_02_Cole_b: "Druk op 'Uitvoeren'! \nJe kunt je code ook uitvoeren
          als deze niet juist is.  Blijf je code opnieuw uitvoeren en instellen om
          erachter te komen wat er misgaat."
        MC_HOC_2017_02_Cole_c: Wanneer de agent de deur heeft geopend, kun je de pijltoetsen
          gebruiken om de speler naar de kaart te bewegen.
        MC_HOC_2017_02_Cole_d: Wees er zeker van dat de agent het aangeduide pad op
          de kaart volgt!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Wanneer de agent zich op de drukplaat bevindt, kun
          je de pijltoetsen gebruiken om de speler naar het kompas te bewegen.
        MC_HOC_2017_03_Cole_b: Lijkt de code iets te lang?  Probeer een 'herhalen'-lus
          te gebruiken en kijk of je erachter kunt komen hoe je de code korter maakt!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Wanneer de agent zich op de drukplaat bevindt, kun
          je de pijltoetsen gebruiken om de speler naar het kompas te bewegen.
        MC_HOC_2017_03_Cole_b: Lijkt de code iets te lang?  Probeer een 'herhalen'-lus
          te gebruiken en kijk of je erachter kunt komen hoe je de code korter maakt!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Gebruik het ''rechtsom''-blok om de richting
          van de agent te veranderen. '
        MC_HOC_2017_04POINT5_RYAN_a: De agent hoeft alleen de eerste drukplaat te
          bereiken, zodat Alex of Steve naar de bijl kunnen.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Gebruik het ''rechtsom''-blok om de richting
          van de agent te veranderen. '
        MC_HOC_2017_04POINT5_RYAN_a: De agent hoeft alleen de eerste drukplaat te
          bereiken, zodat Alex of Steve naar de bijl kunnen.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: De agent moet 7 keer 'naar voren' gaan.  Hoe kun je
          een 'herhalen'-lus hiervoor gebruiken?
        MC_HOC_2017_04_Cole_c: "Druk op 'Uitvoeren'! \nJe kunt je code ook uitvoeren
          als deze niet juist is.  Blijf je code opnieuw uitvoeren en instellen om
          erachter te komen wat er misgaat."
        MC_HOC_2017_04_Cole_b: Wanener de agent de drukplaat bereikt, opent hij de
          deur voor de speler.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: De agent moet 7 keer 'naar voren' gaan.  Hoe kun je
          een 'herhalen'-lus hiervoor gebruiken?
        MC_HOC_2017_04_Cole_c: "Druk op 'Uitvoeren'! \nJe kunt je code ook uitvoeren
          als deze niet juist is.  Blijf je code opnieuw uitvoeren en instellen om
          erachter te komen wat er misgaat."
        MC_HOC_2017_04_Cole_b: Wanener de agent de drukplaat bereikt, opent hij de
          deur voor de speler.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Wist je dat je meerdere stukken code in een lus kunt
          plaatsen?  Probeer een plank **en** naar voren in een 'herhalen'-lus te
          plaatsen om deze puzzel op te lossen.
        MC_HOC_2017_05_Cole_b: Leid de agent over de rivier, terwijl je een brug bouwt.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Wist je dat je meerdere stukken code in een lus kunt
          plaatsen?  Probeer een plank **en** naar voren in een 'herhalen'-lus te
          plaatsen om deze puzzel op te lossen.
        MC_HOC_2017_05_Cole_b: Leid de agent over de rivier, terwijl je een brug bouwt.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Hoe vaak wordt deze lus uitgevoerd?  Hoe vaak _moet_
          deze worden uitgevoerd?
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Hoe vaak wordt deze lus uitgevoerd?  Hoe vaak _moet_
          deze worden uitgevoerd?
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Al wat je de agent moet laten doen is het pad naar
          het mijnkarretje vrijmaken.
        MC_HOC_2017_07_Cole_a: Om deze puzzel op te lossen, moet je erachter komen
          wat de 'pad vrijmaken'-functie doet en deze zo vaak als nodig aanroepen
          met het kleine groene 'pad vrijmaken'-blok in de werkplaats.
        MC_HOC_2017_07_Cole_b: Probeer functieblokken met andere blokken uit de werkplaats
          te combineren om deze puzzel op te lossen.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Al wat je de agent moet laten doen is het pad naar
          het mijnkarretje vrijmaken.
        MC_HOC_2017_07_Cole_a: Om deze puzzel op te lossen, moet je erachter komen
          wat de 'pad vrijmaken'-functie doet en deze zo vaak als nodig aanroepen
          met het kleine groene 'pad vrijmaken'-blok in de werkplaats.
        MC_HOC_2017_07_Cole_b: Probeer functieblokken met andere blokken uit de werkplaats
          te combineren om deze puzzel op te lossen.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Weet je niet waarheen te gaan? Zoek de stippellijn!
        MC_HOC_2017_10_Cole_a: Gebruik functies om deze puzzel makkelijker te maken
          om op te lossen!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Weet je niet waarheen te gaan? Zoek de stippellijn!
        MC_HOC_2017_10_Cole_a: Gebruik functies om deze puzzel makkelijker te maken
          om op te lossen!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "Druk op 'Uitvoeren'! \nJe kunt je code ook uitvoeren
          als deze niet juist is.  Blijf je code opnieuw uitvoeren en instellen om
          erachter te komen wat er misgaat."
        MC_HOC_2017_08_RY_b: Er zijn VEEL manieren om deze puzzel op te lossen.  Probeer
          er een paar uit!
        MC_HOC_2017_08_RY_c: Probeer de stippellijn te volgen voor een eenvoudig pad
          doorheen de lava.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "Druk op 'Uitvoeren'! \nJe kunt je code ook uitvoeren
          als deze niet juist is.  Blijf je code opnieuw uitvoeren en instellen om
          erachter te komen wat er misgaat."
        MC_HOC_2017_08_RY_b: Er zijn VEEL manieren om deze puzzel op te lossen.  Probeer
          er een paar uit!
        MC_HOC_2017_08_RY_c: Probeer de stippellijn te volgen voor een eenvoudig pad
          doorheen de lava.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Probeer de agent wat bruggen te laten bouwen zodat
          Alex of Steve voorbij de grenzen van de kaart kunnen komen.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Probeer de agent wat bruggen te laten bouwen zodat
          Alex of Steve voorbij de grenzen van de kaart kunnen komen.
      NEW Course 4 Artist Params inspire:
        brush_width: We zetten de penseelbreedte op 1 en de kleur op blauw vooraleer
          iets anders te doen.
        double_loop: Probeer een `herhaal` lust binnen in een andere `herhaal` lus
          te plaatsen.
        specifics: |-
          Het 'herhaal counter' blok loopt van drie tot zeventien voor elk "bloemblaadjes" en gaat daarna de volgende maken tot er in totaal 6 zijn. De vorm heeft een oneven aantal zijden.

          De 'zet doorzichtigheid' blok gebruikt delen door om de kleur te vervagen als de teller hoger wordt.
        after: Vergeet niet om 20 pixels voorwaarts te bewegen en 60 graden te draaien
          na het tekenen van ieder "bloemblad".
        solution: |-
          **Oplossing**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Overworld House Frame Chosen:
        mc_6_c: Je kan meer dan één blok binnen in een `herhaal` lus plaatsen.
      Overworld House Frame Chosen_2019:
        mc_6_c: Je kan meer dan één blok binnen in een `herhaal` lus plaatsen.
      Overworld Move to Sheep:
        mc_1_a: Het `beweeg voorwaarts` blok staat bovenaan de gereedschapskist.
        mc_1_b: Wees er zeker van dat beide `beweeg voorwaarts` blokken geplakt zijn
          aan het `als gestart` blok.
      Overworld Move to Sheep_2019:
        mc_1_a: Het `beweeg voorwaarts` blok staat bovenaan de gereedschapskist.
        mc_1_b: Wees er zeker van dat beide `beweeg voorwaarts` blokken geplakt zijn
          aan het `als gestart` blok.
      Overworld Place Wall:
        mc_5_a: Gebruik het `plaats` blok eerst, vervolgens het `beweeg` blok.
        mc_5_b: Wees er zeker van dat beide blokken in de `herhaal` lus staan zodat
          de code meer dan één keer wordt uitgevoerd.
      Overworld Place Wall_2019:
        mc_5_a: Gebruik het `plaats` blok eerst, vervolgens het `beweeg` blok.
        mc_5_b: Wees er zeker van dat beide blokken in de `herhaal` lus staan zodat
          de code meer dan één keer wordt uitgevoerd.
      Overworld Plant Crops:
        mc_7_c: Je kan meer dan één blok binnen in een `herhaal` lus plaatsen.
      Overworld Plant Crops_2019:
        mc_7_c: Je kan meer dan één blok binnen in een `herhaal` lus plaatsen.
      Overworld Powered Minecart:
        mc_13_b: Gebruik `herhaal` lussen om je code in te korten.
      Overworld Powered Minecart_2019:
        mc_13_b: Gebruik `herhaal` lussen om je code in te korten.
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_c: |-
          Beweeg tweemaal naar het oosten tussen elk pad.
          <xml>
            <block type="maze_moveEast"/><next>
            <block type="maze_moveEast"/></next>next>
            </xml>
          Dit is mogelijk met slechts 14 blokken. De volgende hint is de oplossing.
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_c: Probeer een `herhaal` blok te gebruiken
          om de schatstapel aan het einde te verzamelen!
        courseB_collector_loops_challenge2_d: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: Je hoeft geen blokken toe te voegen of te verwijderen
          om deze puzzel op te lossen.
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: Het kan zijn dat het kortste pad niet werkt
          deze keer.
        courseB_maze_seq_challenge1_b: Probeer om te beginnen naar het westen te bewegen.
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_c: |-
          Je kan een boos monster laten grommen.

          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_c: |-
          Gebruik een geneste lus:

          -   Herhaal 8 keer
          -   teken een achthoek
          -   teken een driehoek
          -   spring 50 pixels voorwaarts
          -   beweeg 90 graden naar rechts
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: De rechthoek is 200 pixels breed en 100
          pixels hoog.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Denk er maar zelfs niet aan om hier
          aan te beginnen zonder lussen!
        courseC_harvester_loops_challenge1_b: Je kan `beweeg voorwaarts` en `maïs
          plukken` herhalen zoveel je maar wilt. Gebruik `draai rechts` aan elke hoek.
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Een oplossing van deze puzzel lijkt
          op een zig-zag. Een andere manier lijkt op een spiraal! Er zijn vele verschillende
          oplossing op een puzzel zoals deze. Wees volhardend!
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_b: De kortste oplossing gebruikt enkel
          5 blokken, gebruik makende van de `herhaal` blok!
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "Als de puzzel moeilijk lijkt, probeer
          dan je functie stap voor stap te maken. \n\nVoeg een paar blokken toe en
          test je programma. Voeg daarna weer een paar blokken toe en test dan opnieuw.
          Zo kom je er wel!"
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "Als de puzzel moeilijk lijkt, probeer
          dan je functie stap voor stap te maken. \n\nVoeg een paar blokken toe en
          test je programma. Voeg daarna weer een paar blokken toe en test dan opnieuw.
          Zo kom je er wel!"
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_a: |-
          Als er een pad is naar rechts, moet je het volgende doen:

          -   Neem nectar of maak honing.
          -   Beweeg naar rechts, in de richting van het zijpad.
          -   Beweeg naar het einde van het zijpad.
          -   Beweeg rechts.

          Als je de bovenstaande acties tweemaal herhaalt, zal je klaar zijn om terug te keren via het hoofdpad.

          **De volgende hint bevat de volledige oplossing!**
        courseF_bee_functions_challenge2_b: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_binary_challenge2:
        courseD_artist_binary_challenge2_a: |-
          De beste tip die ik voor je heb is om op `⟲ Herbeginnen` te duwen als het wanordelijk begint te worden.

          Er zijn slechts enkele lijnen fout in het originele programma. Als een aanpak niet werkt, neem dan enkele stappen terug en probeer opnieuw. Er is een oplossing!
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_e: |-
          **Oplossing:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_d: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_collector_loops1:
        courseA_collector_loops1_b: Een eenvoudige oplossing is om 2 keer naar het
          oosten te bewegen, en dan de schat te machtigen.
      courseA_collector_loops1_2018:
        courseA_collector_loops1_b: Een eenvoudige oplossing is om 2 keer naar het
          oosten te bewegen, en dan de schat te machtigen.
      courseA_collector_loops1_2019:
        courseA_collector_loops1_b: Een eenvoudige oplossing is om 2 keer naar het
          oosten te bewegen, en dan de schat te machtigen.
      courseA_collector_loops6:
        courseA_collector_loops6_b: De kortste oplossing heeft 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> lussen. De één achter
          de andere.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_b: De kortste oplossing heeft 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> lussen. De één achter
          de andere.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_b: De kortste oplossing heeft 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> lussen. De één achter
          de andere.
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: Probeer dit pad om een oplossing te
          krijgen.
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: Probeer dit pad om een oplossing te
          krijgen.
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: Probeer dit pad om een oplossing te
          krijgen.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: Deze puzzel heeft twee oplossingen.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: Deze puzzel heeft twee oplossingen.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: Deze puzzel heeft twee oplossingen.
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_c: |-
          Je kan een boos monster laten grommen.

          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_c: |-
          Je kan een boos monster laten grommen.

          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_c: |-
          Je kan een boos monster laten grommen.

          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseB_artist_loops2:
        courseB_artist_loops2_b: Probeer deze code eerst uit te voeren om te zien
          waar de artiest eindigt.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_b: Probeer deze code eerst uit te voeren om te zien
          waar de artiest eindigt.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_b: Probeer deze code eerst uit te voeren om te zien
          waar de artiest eindigt.
      courseB_artist_loops3:
        courseB_artist_loops3_b: De artiest zal naar het zuiden willen gaan om zijn
          zijn te kunnen tekenen.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_b: De artiest zal naar het zuiden willen gaan om zijn
          zijn te kunnen tekenen.
      courseB_artist_loops3_2019:
        courseB_artist_loops3_b: De artiest zal naar het zuiden willen gaan om zijn
          zijn te kunnen tekenen.
      courseB_collector_loops1:
        courseB_collector_loops1_a: De <xml><block type="collector_collect_simplified"/></xml>
          blok kan gebruikt worden om schatten op te pikken wanneer je er bovenop
          staat.
      courseB_collector_loops1_2018:
        courseB_collector_loops1_a: De <xml><block type="collector_collect_simplified"/></xml>
          blok kan gebruikt worden om schatten op te pikken wanneer je er bovenop
          staat.
      courseB_collector_loops1_2019:
        courseB_collector_loops1_a: De <xml><block type="collector_collect_simplified"/></xml>
          blok kan gebruikt worden om schatten op te pikken wanneer je er bovenop
          staat.
      courseB_collector_loops5:
        courseB_collector_loops5_b: Probeer de code enkele keren uit te voeren om
          te zien wat er gebeurt.
      courseB_collector_loops5_2018:
        courseB_collector_loops5_b: Probeer de code enkele keren uit te voeren om
          te zien wat er gebeurt.
      courseB_collector_loops5_2019:
        courseB_collector_loops5_b: Probeer de code enkele keren uit te voeren om
          te zien wat er gebeurt.
      courseB_collector_loops9:
        courseB_collector_loops9_b: Je hebt 3 `herhaal` lussen nodig. De één achter
          de andere.
      courseB_collector_loops9_2018:
        courseB_collector_loops9_b: Je hebt 3 `herhaal` lussen nodig. De één achter
          de andere.
      courseB_collector_loops9_2019:
        courseB_collector_loops9_b: Je hebt 3 `herhaal` lussen nodig. De één achter
          de andere.
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_c: |-
          Beweeg tweemaal naar het oosten tussen elk pad.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Je kan dit doen met slechts 14 blokken. De volgende hint bevat de oplossing.
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_c: |-
          Beweeg tweemaal naar het oosten tussen elk pad.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Je kan dit doen met slechts 14 blokken. De volgende hint bevat de oplossing.
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_c: |-
          Beweeg tweemaal naar het oosten tussen elk pad.
          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>
          Je kan dit doen met slechts 14 blokken. De volgende hint bevat de oplossing.
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_c: Probeer een `herhaal` blok te gebruiken
          om de schatstapel aan het einde te verzamelen!
        courseB_collector_loops_challenge2_d: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_maze_seq11:
        courseB_maze_seq11_b: 'Los deze puzzel op in twee delen: één voor de hoek
          en één achter de hoek.'
      courseB_maze_seq2:
        courseB_maze_seq2_b: Probeer de code uit te voeren om te zien wat de vogel
          moet doen als volgende actie.
      courseB_maze_seq4:
        courseB_maze_seq4_b: Je zal het <xml><block type="maze_moveEast"/></xml> blok
          willen gebruiken om deze puzzel op te lossen.
      courseB_maze_seq4_2018:
        courseB_maze_seq4_b: Je zal het <xml><block type="maze_moveEast"/></xml> blok
          willen gebruiken om deze puzzel op te lossen.
      courseB_maze_seq4_2019:
        courseB_maze_seq4_b: Je zal het <xml><block type="maze_moveEast"/></xml> blok
          willen gebruiken om deze puzzel op te lossen.
      courseB_maze_seq5:
        courseB_maze_seq5_a: Als je vastzit, probeer dan het pad uit te tekenen op
          een blad papier.
        courseB_maze_seq5_b: Er zijn 2 manieren om deze puzzel op te lossen!
        courseB_maze_seq5_c: Niet zeker hoe het varken te bereiken? Probeer dit pad.
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Als je vastzit, probeer dan het pad uit te tekenen op
          een blad papier.
        courseB_maze_seq5_b: Er zijn 2 manieren om deze puzzel op te lossen!
        courseB_maze_seq5_c: Niet zeker hoe het varken te bereiken? Probeer dit pad.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Als je vastzit, probeer dan het pad uit te tekenen op
          een blad papier.
        courseB_maze_seq5_b: Er zijn 2 manieren om deze puzzel op te lossen!
        courseB_maze_seq5_c: Niet zeker hoe het varken te bereiken? Probeer dit pad.
      courseB_maze_seq6:
        courseB_maze_seq6_b: Als je vastzit, probeer dan de puzzel op te lossen in
          twee delen, één zijwaarts en één boven-en-beneden.
        courseB_maze_seq5_c: Er zijn meerdere manieren om deze puzzel op te lossen.
        courseB_maze_seq5_d: Niet zeker hoe het varken te bereiken? Probeer dit pad!
      courseB_maze_seq6_2018:
        courseB_maze_seq6_b: Als je vastzit, probeer dan de puzzel op te lossen in
          twee delen, één zijwaarts en één boven-en-beneden.
        courseB_maze_seq5_c: Er zijn meerdere manieren om deze puzzel op te lossen.
        courseB_maze_seq5_d: Niet zeker hoe het varken te bereiken? Probeer dit pad!
      courseB_maze_seq6_2019:
        courseB_maze_seq6_b: Als je vastzit, probeer dan de puzzel op te lossen in
          twee delen, één zijwaarts en één boven-en-beneden.
        courseB_maze_seq5_c: Er zijn meerdere manieren om deze puzzel op te lossen.
        courseB_maze_seq5_d: Niet zeker hoe het varken te bereiken? Probeer dit pad!
      courseB_maze_seq7:
        courseB_maze_seq7_b: Probeer de code uit te voeren die je gegeven wordt om
          te zien waar je eindigt.
        courseB_maze_seq7_c: Kan je het varken niet bereiken? Probeer dit pad!
      courseB_maze_seq7_2018:
        courseB_maze_seq7_b: Probeer de code uit te voeren die je gegeven wordt om
          te zien waar je eindigt.
        courseB_maze_seq7_c: Kan je het varken niet bereiken? Probeer dit pad!
      courseB_maze_seq7_2019:
        courseB_maze_seq7_b: Probeer de code uit te voeren die je gegeven wordt om
          te zien waar je eindigt.
        courseB_maze_seq7_c: Kan je het varken niet bereiken? Probeer dit pad!
      courseB_maze_seq8:
        courseB_maze_seq8_b: Er zijn 2 manieren om deze puzzel op te lossen!
        courseB_maze_seq8_c: Weet je niet welke weg te gaan? Probeer dit pad!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_b: Er zijn 2 manieren om deze puzzel op te lossen!
        courseB_maze_seq8_c: Weet je niet welke weg te gaan? Probeer dit pad!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_b: Er zijn 2 manieren om deze puzzel op te lossen!
        courseB_maze_seq8_c: Weet je niet welke weg te gaan? Probeer dit pad!
      courseB_maze_seq9:
        courseB_maze_seq9_b: Bouw je programma één blok per keer en test terwijl je
          bouwt.
        courseB_maze_seq9_c: Er zijn meerdere manieren om deze puzzel op te lossen.
        courseB_maze_seq9_d: Zit je vast? Probeer dit pad!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_b: Bouw je programma één blok per keer en test terwijl je
          bouwt.
        courseB_maze_seq9_c: Er zijn meerdere manieren om deze puzzel op te lossen.
        courseB_maze_seq9_d: Zit je vast? Probeer dit pad!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_b: Bouw je programma één blok per keer en test terwijl je
          bouwt.
        courseB_maze_seq9_c: Er zijn meerdere manieren om deze puzzel op te lossen.
        courseB_maze_seq9_d: Zit je vast? Probeer dit pad!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: Het kan zijn dat het kortste pad niet werkt
          deze keer.
        courseB_maze_seq_challenge1_b: Probeer om met de <xml><block type="maze_moveWest"/></xml>
          blok te starten.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: Het kan zijn dat het kortste pad niet werkt
          deze keer.
        courseB_maze_seq_challenge1_b: Probeer om met de <xml><block type="maze_moveWest"/></xml>
          blok te starten.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: Het kan zijn dat het kortste pad niet werkt
          deze keer.
        courseB_maze_seq_challenge1_b: Probeer om met de <xml><block type="maze_moveWest"/></xml>
          blok te starten.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: Je hoeft geen blokken toe te voegen of te verwijderen
          om deze puzzel op te lossen.
        courseB_maze_seq_challenge2_b: Herorder de blokken en gebruik het pad in de
          vorm van een trap.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: Je hoeft geen blokken toe te voegen of te verwijderen
          om deze puzzel op te lossen.
        courseB_maze_seq_challenge2_b: Herorder de blokken en gebruik het pad in de
          vorm van een trap.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: Je hoeft geen blokken toe te voegen of te verwijderen
          om deze puzzel op te lossen.
        courseB_maze_seq_challenge2_b: Herorder de blokken en gebruik het pad in de
          vorm van een trap.
      courseB_starWars_prog5:
        courseB_starWars_prog5_da: |-
          Bekijk wat er gebeurt wanneer je dezelfde oplossing zou gebruiken als de trap-stap puzzel:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018:
        courseB_starWars_prog5_da: |-
          Bekijk wat er gebeurt wanneer je dezelfde oplossing zou gebruiken als de trap-stap puzzel:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019:
        courseB_starWars_prog5_da: |-
          Bekijk wat er gebeurt wanneer je dezelfde oplossing zou gebruiken als de trap-stap puzzel:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseC_artist_prog2:
        courseC_artist_prog2_a: Als je het blok 'beweeg vooruit door 100 pixels',
          zal ik automatisch een lijn tekenen.
        courseC_artist_prog2_b: Problemen met het draaien van de hoek? Gebruik het
          blok 'rechts 90 graden'.
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Als je het blok 'beweeg vooruit door 100 pixels',
          zal ik automatisch een lijn tekenen.
        courseC_artist_prog2_b: Problemen met het draaien van de hoek? Gebruik het
          blok 'rechts 90 graden'.
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Als je het blok 'beweeg vooruit door 100 pixels',
          zal ik automatisch een lijn tekenen.
        courseC_artist_prog2_b: Problemen met het draaien van de hoek? Gebruik het
          blok 'rechts 90 graden'.
      courseC_collector_prog1:
        courseC_collector_prog1_b: De simpelste oplossing is éénmaal voorwaarts te
          bewegen, en de schat te nemen.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_b: De simpelste oplossing is éénmaal voorwaarts te
          bewegen, en de schat te nemen.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_b: De simpelste oplossing is éénmaal voorwaarts te
          bewegen, en de schat te nemen.
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Een oplossing van deze puzzel lijkt
          op een zig-zag. Een andere manier lijkt op een spiraal! Er zijn vele verschillende
          oplossing op een puzzel zoals deze. Wees volhardend!
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: Een oplossing van deze puzzel lijkt
          op een zig-zag. Een andere manier lijkt op een spiraal! Er zijn vele verschillende
          oplossing op een puzzel zoals deze. Wees volhardend!
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: Een oplossing van deze puzzel lijkt
          op een zig-zag. Een andere manier lijkt op een spiraal! Er zijn vele verschillende
          oplossing op een puzzel zoals deze. Wees volhardend!
      courseC_maze_programming5:
        courseC_maze_programming5_c: De oplossing bevat twee `beweeg voorwaarts` blokken,
          één draai en nog eens twee `beweeg voorwaarts` blokken.
      courseC_maze_programming5_2018:
        courseC_maze_programming5_c: De oplossing bevat twee `beweeg voorwaarts` blokken,
          één draai en nog eens twee `beweeg voorwaarts` blokken.
      courseC_maze_programming5_2019:
        courseC_maze_programming5_c: De oplossing bevat twee `beweeg voorwaarts` blokken,
          één draai en nog eens twee `beweeg voorwaarts` blokken.
      courseC_maze_programming6:
        courseC_maze_programming6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_b: |-
          De kortste oplossing bevat slechts 5 blokken, waaronder deze blok:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_b: |-
          De kortste oplossing bevat slechts 5 blokken, waaronder deze blok:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_b: |-
          De kortste oplossing bevat slechts 5 blokken, waaronder deze blok:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops5:
        courseC_starWars_loops5_a: De beste oplossing gebruikt eerst een draai, vervolgens
          een enkele `beweeg voorwaarts`, een andere draai, en als laatste een lus.
      courseC_starWars_loops5_2018:
        courseC_starWars_loops5_a: De beste oplossing gebruikt eerst een draai, vervolgens
          een enkele `beweeg voorwaarts`, een andere draai, en als laatste een lus.
      courseC_starWars_loops5_2019:
        courseC_starWars_loops5_a: De beste oplossing gebruikt eerst een draai, vervolgens
          een enkele `beweeg voorwaarts`, een andere draai, en als laatste een lus.
      courseC_video_angles2:
        courseF_artist_ramp10_c: |-
          Voor deze uitdaging moet je 6 driehoeken in totaal tekenen:

          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          Probeer het 'spring vooruit' blok te gebruiken om van de bovenkant van het ene vierkant naar de plaats te komen waar je het volgende vierkant gaat beginnen.

          Als je vierkanten 20 pixels hoog zijn en ze staan 20 pixels uit elkaar, hoe ver moet je dan springen?
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          Probeer het 'spring vooruit' blok te gebruiken om van de bovenkant van het ene vierkant naar de plaats te komen waar je het volgende vierkant gaat beginnen.

          Als je vierkanten 20 pixels hoog zijn en ze staan 20 pixels uit elkaar, hoe ver moet je dan springen?
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          Probeer het 'spring vooruit' blok te gebruiken om van de bovenkant van het ene vierkant naar de plaats te komen waar je het volgende vierkant gaat beginnen.

          Als je vierkanten 20 pixels hoog zijn en ze staan 20 pixels uit elkaar, hoe ver moet je dan springen?
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_a: |-
          **Herinnering:** De puzzel verandert iedere keer hij wordt uitgevoerd.

          Je zult een voorwaardelijke blok (`als` of `als/anders`) moeten gebruiken om deze uitdaging op te lossen.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_a: |-
          **Herinnering:** De puzzel verandert iedere keer hij wordt uitgevoerd.

          Je zult een voorwaardelijke blok (`als` of `als/anders`) moeten gebruiken om deze uitdaging op te lossen.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          **Herinnering:** De puzzel verandert iedere keer hij wordt uitgevoerd.

          Je zult een voorwaardelijke blok (`als` of `als/anders`) moeten gebruiken om deze uitdaging op te lossen.
      courseD_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_d: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_d: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_d: |-
          **Oplossing:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      courseD_scrat_predict1:
        courseF_maze_ramp6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      courseD_scrat_ramp6:
        courseC_maze_programming6_a: Er zijn 2 manieren om deze puzzel op te lossen!
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: De halve zeshoek heeft een \*\* lengte
          van 30 \*\* en draait rechts met \*\* 60 graden \*\*.
        courseE_artist_concept_challenge1_b: De driehoek heeft een \*\* lengte van
          80 \*\* en draait naar rechts met \*\* 120 graden \*\*.
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: De halve zeshoek heeft een \*\* lengte
          van 30 \*\* en draait rechts met \*\* 60 graden \*\*.
        courseE_artist_concept_challenge1_b: De driehoek heeft een \*\* lengte van
          80 \*\* en draait naar rechts met \*\* 120 graden \*\*.
      courseE_artist_functions1:
        courseE_artist_functions1_a: De vierkanten hebben elk zijden van 100 pixels,
          dat betekent dat je 175 pixels vooruit moet bewegen voor je je tweede vierkant
          tekent.
        courseE_artist_functions1_b: Het is oke om overlappende lijnen te gebruiken
          om je bril te tekenen.
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          Je programma: moet:

          -   functie gebruiken
          -   100 + 75 pixels vooruit bewegen
          -   functie gebruiken
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          Je programma: moet:

          -   functie gebruiken
          -   100 + 75 pixels vooruit bewegen
          -   functie gebruiken
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          Je programma: moet:

          -   functie gebruiken
          -   100 + 75 pixels vooruit bewegen
          -   functie gebruiken
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_bee_functions6:
        courseE_bee_functions6_a: "Als de puzzel moeilijk lijkt, probeer dan je functie
          stap voor stap te maken. \n\nVoeg een paar blokken toe en test je programma.
          Voeg daarna weer een paar blokken toe en test dan opnieuw. Zo kom je er
          wel!"
      courseE_bee_functions7:
        courseE_bee_functions7_a: "Als de puzzel moeilijk lijkt, probeer dan je functie
          stap voor stap te maken. \n\nVoeg een paar blokken toe en test je programma.
          Voeg daarna weer een paar blokken toe en test dan opnieuw. Zo kom je er
          wel!"
        courseE_bee_functions7_b: Vergeet niet om jouw code binnenin het groene functie
          blok te plaatsen.
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "Als de puzzel moeilijk lijkt, probeer
          dan je functie stap voor stap te maken. \n\nVoeg een paar blokken toe en
          test je programma. Voeg daarna weer een paar blokken toe en test dan opnieuw.
          Zo kom je er wel!"
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "Als de puzzel moeilijk lijkt, probeer
          dan je functie stap voor stap te maken. \n\nVoeg een paar blokken toe en
          test je programma. Voeg daarna weer een paar blokken toe en test dan opnieuw.
          Zo kom je er wel!"
      courseE_farmer_ramp12e:
        courseE_farmer_ramp12e_b: De oplossing van deze puzzel lijkt sterk op de oplossing
          van de laatste puzzel, maar draait in de andere richting.
      courseE_farmer_ramp12e_2018:
        courseE_farmer_ramp12e_b: De oplossing van deze puzzel lijkt sterk op de oplossing
          van de laatste puzzel, maar draait in de andere richting.
      courseE_farmer_ramp12e_2019:
        courseE_farmer_ramp12e_b: De oplossing van deze puzzel lijkt sterk op de oplossing
          van de laatste puzzel, maar draait in de andere richting.
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          **Wat is het kleinste nummer dat je nodig hebt?
          Wat is het grootste nummer?
          Hoe groot is de toename iedere keer?**

          Dit zijn vragen die je jezelf moet stellen wanneer je de leegtes in de `herhaal` lus invult.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          **Wat is het kleinste nummer dat je nodig hebt?
          Wat is het grootste nummer?
          Hoe groot is de toename iedere keer?**

          Dit zijn vragen die je jezelf moet stellen wanneer je de leegtes in de `herhaal` lus invult.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          **Wat is het kleinste nummer dat je nodig hebt?
          Wat is het grootste nummer?
          Hoe groot is de toename iedere keer?**

          Dit zijn vragen die je jezelf moet stellen wanneer je de leegtes in de `herhaal` lus invult.
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: De `pendikte` is 1. De eerste vierkant heeft
          en zijde van 50 pixels. Ieder volgend vierkant is 50 pixels breder dan het
          vorige.
        courseF_artist_for_challenge1_b: De ondoorzichtigheid van de brush is telkens
          `teller`/2.
        courseF_artist_for_challenge1_c: Vergeet niet om, nadat je elk vierkant maakt,
          terug te springen, te draaien, opnieuw terug te springen en nog eens te
          draaien!
        courseF_artist_for_challenge1_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: De `pendikte` is 1. De eerste vierkant heeft
          en zijde van 50 pixels. Ieder volgend vierkant is 50 pixels breder dan het
          vorige.
        courseF_artist_for_challenge1_b: De ondoorzichtigheid van de brush is telkens
          `teller`/2.
        courseF_artist_for_challenge1_c: Vergeet niet om, nadat je elk vierkant maakt,
          terug te springen, te draaien, opnieuw terug te springen en nog eens te
          draaien!
        courseF_artist_for_challenge1_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: De `pendikte` is 1. De eerste vierkant heeft
          en zijde van 50 pixels. Ieder volgend vierkant is 50 pixels breder dan het
          vorige.
        courseF_artist_for_challenge1_b: De ondoorzichtigheid van de brush is telkens
          `teller`/2.
        courseF_artist_for_challenge1_c: Vergeet niet om, nadat je elk vierkant maakt,
          terug te springen, te draaien, opnieuw terug te springen en nog eens te
          draaien!
        courseF_artist_for_challenge1_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: 'De `for lus` gaat van 5 tot 250 in stappen
          van 2. '
        courseF_artist_for_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: 'De `for lus` gaat van 5 tot 250 in stappen
          van 2. '
        courseF_artist_for_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: 'De `for lus` gaat van 5 tot 250 in stappen
          van 2. '
        courseF_artist_for_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables4_2019:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_e: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: 'Variabelen kunnen handig zijn omdat
          je ermee kan optellen doorheen een lus. '
        courseF_artist_variables_challenge2_c: Een variabele voor `sides` en één voor
          `length` maakt de code properder omdat je meerdere keren over dezelfde code
          kan loopen, in de plaats van een kopij te creëren voor elke set getallen.
        courseF_artist_variables_challenge2_d: |-
          **Oplossing:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: 'Variabelen kunnen handig zijn omdat
          je ermee kan optellen doorheen een lus. '
        courseF_artist_variables_challenge2_c: Een variabele voor `sides` en één voor
          `length` maakt de code properder omdat je meerdere keren over dezelfde code
          kan loopen, in de plaats van een kopij te creëren voor elke set getallen.
        courseF_artist_variables_challenge2_d: |-
          **Oplossing:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: 'Variabelen kunnen handig zijn omdat
          je ermee kan optellen doorheen een lus. '
        courseF_artist_variables_challenge2_c: Een variabele voor `sides` en één voor
          `length` maakt de code properder omdat je meerdere keren over dezelfde code
          kan loopen, in de plaats van een kopij te creëren voor elke set getallen.
        courseF_artist_variables_challenge2_d: |-
          **Oplossing:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          **Herinnering:** De puzzel verandert iedere keer hij wordt uitgevoerd.

          Je zult een voorwaardelijke blok (`als` of `als/anders`) moeten gebruiken om deze uitdaging op te lossen.
      courseF_bee_for2:
        courseF_bee_for2_b: Denk eraan om voorwaarts te bewegen tussen elke loop,
          zodat je elke bloem bereikt.
      courseF_bee_for2_2018:
        courseF_bee_for2_b: Denk eraan om voorwaarts te bewegen tussen elke loop,
          zodat je elke bloem bereikt.
      courseF_bee_for2_2019:
        courseF_bee_for2_b: Denk eraan om voorwaarts te bewegen tussen elke loop,
          zodat je elke bloem bereikt.
      courseF_bee_for5:
        courseF_bee_for5_b: Gebruik de `counter` variabele in elke lus zodat de bij
          verschillende afstanden aflegt tussen elke bloem.
      courseF_bee_for5_2018:
        courseF_bee_for5_b: Gebruik de `counter` variabele in elke lus zodat de bij
          verschillende afstanden aflegt tussen elke bloem.
      courseF_bee_for5_2019:
        courseF_bee_for5_b: Gebruik de `counter` variabele in elke lus zodat de bij
          verschillende afstanden aflegt tussen elke bloem.
      courseF_bee_for6:
        courseF_bee_for6_c: Je lus zou moeten tellen **van 5 naar 1**.
      courseF_bee_for6_2018:
        courseF_bee_for6_c: Je lus zou moeten tellen **van 5 naar 1**.
      courseF_bee_for6_2019:
        courseF_bee_for6_c: Je lus zou moeten tellen **van 5 naar 1**.
      courseF_bee_for7:
        courseF_bee_for7_c: Denk eraan om de `counter` variabele te gebruiken in je
          `herhaal` lus.
      courseF_bee_for7_2018:
        courseF_bee_for7_c: Denk eraan om de `counter` variabele te gebruiken in je
          `herhaal` lus.
      courseF_bee_for7_2019:
        courseF_bee_for7_c: Denk eraan om de `counter` variabele te gebruiken in je
          `herhaal` lus.
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_c: |-
          Merk op dat er binnen één `voor` loop meerdere standaard lussen moeten zitten die zich `counter` keer herhalen om het stijgende trap patroon te creëren.

          De andere 'voor`lus heeft slechts één standaard lus nodig om`counter\` keer honing te maken.
        courseF_bee_for_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_c: |-
          Merk op dat er binnen één `voor` loop meerdere standaard lussen moeten zitten die zich `counter` keer herhalen om het stijgende trap patroon te creëren.

          De andere 'voor`lus heeft slechts één standaard lus nodig om`counter\` keer honing te maken.
        courseF_bee_for_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_c: |-
          Merk op dat er binnen één `voor` loop meerdere standaard lussen moeten zitten die zich `counter` keer herhalen om het stijgende trap patroon te creëren.

          De andere 'voor`lus heeft slechts één standaard lus nodig om`counter\` keer honing te maken.
        courseF_bee_for_challenge2_d: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: "Als de puzzel moeilijk lijkt, probeer dan je functie
          stap voor stap te maken. \n\nVoeg een paar blokken toe en test je programma.
          Voeg daarna weer een paar blokken toe en test dan opnieuw. Zo kom je er
          wel!"
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: "Als de puzzel moeilijk lijkt, probeer dan je functie
          stap voor stap te maken. \n\nVoeg een paar blokken toe en test je programma.
          Voeg daarna weer een paar blokken toe en test dan opnieuw. Zo kom je er
          wel!"
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_a: |-
          Als er een pad is naar rechts, moet je het volgende doen:

          -   Neem nectar of maak honing.
          -   Beweeg naar rechts, in de richting van het zijpad.
          -   Beweeg naar het einde van het zijpad.
          -   Beweeg rechts.

          Als je de bovenstaande acties tweemaal herhaalt, zal je klaar zijn om terug te keren via het hoofdpad.

          **De volgende hint bevat de volledige oplossing!**
        courseF_bee_functions_challenge2_b: |-
          **Oplossing:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_e: |-
          **Oplossing:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_c: |-
          **Oplossing:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
