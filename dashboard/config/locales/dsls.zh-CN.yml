---
zh-CN:
  data:
    dsls:
      2-3 Algorithms Multi 1:
        answers:
        - text: |-
            从一个正方形开始
            在正方形上放置一个三角形
            再在正方形下放置一个三角形
        - text: "从一个三角形开始  \n在正方形右边放一个三角形  \n在正方形下面放一个平行四边形  \n在平行四边形右边放一个三角形"
          correct: true
        - text: |-
            从一个正方形开始
            在正方形上面放置一个平行四边形
            在平行四边形右边放置一个三角形
        - text: |-
            从一个正方形开始
            在正方形下面放置一个三角形
            在三角形右边放置一个平行四边形
        content1: "/script_assets/2-3_images/unplugged/algorithms_1_q.png"
        questions:
        - text: 为这个图像选择一种算法
        title: 选择题
      2-3 Algorithms Multi 2:
        answers:
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a1.png"
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a3.png"
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a4.png"
        content1: |-
          从一个三角形开始
          在三角形下面放置一个正方形
          在正方形下面放置另一个三角形
        questions:
        - text: 哪个图像 _不_ 符合算法？
        title: 选择题
      2-3 Big Event Match 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a3.pngac"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a4.png"
        content1: "/script_assets/k_1_images/unplugged_images/big_event_1_desc.png"
        content2: 用按键组合完成跳舞动作。
        questions:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q3.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q4.png"
        title: 匹配
      2-3 Binary Match 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/binary_1_a3.png"
        - text: "/script_assets/2-3_images/unplugged/binary_1_a1.png"
        - text: "/script_assets/2-3_images/unplugged/binary_1_a2.png"
        - text: "/script_assets/2-3_images/unplugged/binary_1_a4.png"
        content1: "/script_assets/2-3_images/unplugged/binary_1_q.png, 250"
        content2: 用键与字母的代码匹配
        questions:
        - text: "**N**"
        - text: "**O**"
        - text: "**P**"
        - text: "**Q**"
        title: 匹配
      2-3 Conditionals Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a1.png"
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a2.png"
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a3.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a4.png"
        content1: "/script_assets/2-3_images/unplugged/conditionals_1_q.png"
        questions:
        - text: 根据游戏规则，哪一组卡片的得分是正确的？
        title: 选择题
      2-3 Getting Loopy Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a1.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a2.png"
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a3.png"
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a4.png"
        content1: "/script_assets/2-3_images/unplugged/getting_loopy_1_q.png"
        questions:
        - text: 你将如何用循环来简化这个序列？
        title: 选择题
      2-3 Graph Paper Match 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_a3.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_a2.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_a1.png"
        content1: 将程序与网格相匹配。
        questions:
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_q1.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_q2.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_q3.png"
        title: 匹配
      2-3 Graph Paper Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/graph_paper_1_a1.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_1_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/graph_paper_1_a3.png"
        content1: "/script_assets/2-3_images/unplugged/graph_paper_1_q.png"
        questions:
        - text: 哪一个程序画出了这个图像？
        title: 选择题
      2-3 Maze Match 2:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_a1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_a2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_a3.png"
        content1: 将谜题与模块相匹配
        questions:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_q1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_q2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_q3.png"
        title: 迷宫比赛
      2-3 Maze Multi 2:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a3.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a4.png"
        content1: "/script_assets/2-3_images/maze/2-3_maze_multi_2_q.png, 500"
        questions:
        - text: 哪组模块会让我到达猪那里？
        title: 迷宫的选择题
      2-3 Relay Programming Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/relay_programming_1_a1.png"
        - text: "/script_assets/2-3_images/unplugged/relay_programming_1_a2.png"
        - text: "/script_assets/2-3_images/unplugged/relay_programming_1_a3.png"
          correct: true
        content1: "/script_assets/2-3_images/unplugged/relay_programming_1_q.png"
        questions:
        - text: 哪一个程序 **不会** 画出这个图像？
        title: 选择题
      2-3 Relay Programming Multi 2:
        answers:
        - text: "/script_assets/2-3_images/unplugged/relay_programming_2_a1.png"
        - text: "/script_assets/2-3_images/unplugged/relay_programming_2_a2.png"
        - text: "/script_assets/2-3_images/unplugged/relay_programming_2_a3.png"
          correct: true
        questions:
        - text: 哪一组图像-程序没有问题？
        title: 选择题
      2-3 artist debug multi 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a4.png"
        content1: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_q1.png,
          700"
        questions:
        - text: 什么地方需要修复，才能完成这个圆圈？
        title: 小艺术家调试：选择题 1
      2-3 artist functions multi 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_a1.png"
          correct: true
        - text: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_a2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_a3.png"
        content1: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_q.png,
          500"
        questions:
        - text: 用给定的函数在正确的方块上画出这个图像
        title: 小艺术家函数：选择题一
      2-3 artist loops match 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a4.png"
        content2: 将循环与形状相匹配
        questions:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q4.png"
        title: 小艺术家循环匹配 1
      2-3 artist loops multi 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q3.png"
          correct: true
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q4.png"
        content1: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_a3.png,
          500"
        questions:
        - text: 哪个形状是由这个循环做的呢？
        title: 小艺术家循环：选择题
      2-3 artist loops multi 2:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q4.png"
          correct: true
        content1: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_a4.png,
          500"
        questions:
        - text: 哪个形状是这个程序所做的？
        title: 小艺术家循环：选择题
      2-3 artist match 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a4.png"
        content1: 找到和形状相对应的代码块完成匹配.
        questions:
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q4.png"
        title: 小艺术家的匹配
      2-3 bee conditionals multi 1:
        answers:
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a1.png"
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a2.png"
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a3.png"
          correct: true
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a4.png"
        questions:
        - text: 比较一下哪个是正确的？
        title: 蜜蜂条件语句：选择题 1
      2-3 bee conditionals multi 3:
        answers:
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a1.png"
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a3.png"
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a4.png"
        content1: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_q.png,
          500"
        questions:
        - text: 选择最好的模块。
        title: 蜜蜂条件语句：选择题 2
      2-3 bee loops multi 1:
        answers:
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a1.png"
          correct: true
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a2.png"
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a3.png"
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a4.png"
        content1: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_q.png, 500"
        questions:
        - text: 哪一个代码块收集了所有的花蜜？
        title: 蜜蜂循环语句：选择题一
      2-3 maze match 1:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_a1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_a2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_a3.png"
        content1: 将谜题与模块相匹配
        questions:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_q1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_q2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_q3.png"
        title: 迷宫比赛一
      2-3 maze multi 1:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a3.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a4.png"
        content1: "/script_assets/2-3_images/maze/2-3_maze_multi_1_q.png, 500"
        questions:
        - text: 哪一个程序块是正确答案？
        title: 迷宫选择题一
      4-5 Algorithms Match 1:
        answers:
        - text: "**设置玩家 1 分数为 0**"
        - text: "**玩家 1 掷出骰子**"
        - text: "**将玩家 1 的比分添加到总分**"
        - text: "**比较玩家的分数，看看谁赢了**"
        content1: 匹配骰子游戏比赛的步骤及他们在算法中应该出现的顺序.
        questions:
        - text: "**1)**"
        - text: "**2)**"
        - text: "**3)**"
        - text: "**4)**"
        title: 匹配
      4-5 Algorithms Multi 1:
        answers:
        - text: 刷牙
        - text: 烘烤饼干
        - text: 按照购物单来买东西。
        - text: 香蕉
          correct: true
        questions:
        - text: 哪一项最难用算法来描述？
        title: 选择题
      4-5 Computational Thinking Match 1:
        answers:
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a1.png"
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a2.png"
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a3.png"
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a4.png"
        content1: 这些车辆已被分解成更小的部分。匹配每辆车与其分解的列表。
        questions:
        - text: |-
            **每侧车轮数量： 2**
            **每侧窗户数量： 0**
        - text: |-
            **每侧车轮数量： 2**
            **每侧窗户数量： 1**
        - text: |-
            **每侧车轮数量： 2**
            **每侧窗户数量： 6**
        - text: |-
            **每侧车轮数量： 3**
            **每侧窗户数量： 2**
        title: 匹配
      4-5 Computational Thinking Multi 1:
        answers:
        - text: 北京____一个____ ____。
        - text: ____是一个 ____城市。
          correct: true
        - text: ____是____一个 ____。
        - text: 齐齐哈尔是一个______城市。
        content1: 这里有三个句子。哪一个模板描述了这三句话共有的特点？
        questions:
        - text: |-
            北京是一个大城市。
            齐齐哈尔是一个中等城市。
            张家界是一个小城市。
        title: 选择题
      4-5 Crowdsourcing Multi 1:
        answers:
        - text: "/script_assets/4-5_images/unplugged/crowdsourcing_2_a1.png"
        - text: "/script_assets/4-5_images/unplugged/crowdsourcing_2_a2.png"
          correct: true
        questions:
        - text: 哪一张图片最恰当的描述了众包策略？
        title: 选择题
      4-5 Crowdsourcing Multi 2:
        answers:
        - text: 打扫房间
          correct: true
        - text: 吃甜点
        - text: 梳理头发
        - text: 洗脸
        questions:
        - text: 哪一个项目最适合众包？
        title: 选择题
      4-5 Digital Footprint Multi 1:
        answers:
        - text: 生日
        - text: 最喜欢的食物
          correct: true
        - text: 你的地址
        - text: 父母的信用卡卡号
        questions:
        - text: 下面列表中的哪一条信息可以分享到互联网？
        title: 选择题
      4-5 Internet Multi 1:
        answers:
        - text: 23.23.224.106
        - text: 54.209.61.132
        - text: 64.14.68.10
        - text: 54.243.71.82
          correct: true
        content1: "/script_assets/4-5_images/unplugged/internet_1_q.png"
        questions:
        - text: 当尝试登录到 code.org，哪个 IP 地址是 DNS 最有可能到达的？
        title: 选择题
      4-5 Internet Multi 2:
        answers:
        - text: code.org
        - text: csisfun.com
          correct: true
        - text: thinkersmith.org
        - text: khanacademy.org
        content1: "/script_assets/4-5_images/unplugged/internet_1_q.png"
        questions:
        - text: 如果 DNS 发送给你100.42.50.110这个IP地址上的网页，你登录的是哪个网站？
        title: 选择题
      4-5 Songwriting Multi 1:
        answers:
        - text: Lou, Lou, skip to my Lou,
        - text: "Lou, Lou, skip to my Lou,   \nLou, Lou, skip to my Lou,   \nLou,
            Lou, skip to my Lou,   \nSkip to my Lou, my darlin."
          correct: true
        - text: "Lou, Lou, skip to my Lou,   \nLou, Lou, skip to my Lou,   \nLou,
            Lou, skip to my Lou,   \nSkip to my Lou, my darlin.\n\nFly's in the buttermilk,
            \  \nShoo, fly, shoo,"
        - text: "Fly's in the buttermilk,   \nShoo, fly, shoo,   \nFly's in the buttermilk,
            \  \nShoo, fly, shoo,   \nFly's in the buttermilk,   \nShoo, fly, shoo,
            \  \nSkip to my Lou, my darlin."
        content1: "/script_assets/4-5_images/unplugged/songwriting_1_q.png"
        questions:
        - text: 在这首歌里，哪一大段因为每次都能完全重复，所以能被称为副歌？
        title: 选择题
      4-5 Suncatchers Match 1:
        answers:
        - text: "**STACK**"
        - text: "**STAMP**"
        - text: "**STAR**"
        - text: "**RAMP**"
        content1: 用提供的技巧，将程序匹配到输出的词语上。
        content2: "/script_assets/4-5_images/unplugged/suncatchers_1.png"
        questions:
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a1.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a2.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a3.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a4.png"
        title: 匹配
      4-5 Suncatchers Multi 1:
        answers:
        - text: "/script_assets/4-5_images/unplugged/suncatchers_2_a1.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_2_a2.png"
          correct: true
        - text: "/script_assets/4-5_images/unplugged/suncatchers_2_a3.png"
        content1: "/script_assets/4-5_images/unplugged/suncatchers_2_q.png"
        questions:
        - text: 下面哪个程序所产生的顺序和程序 1 的顺序 _不同_ ？
        title: 选择题
      4-5 artist loops multi 1:
        answers:
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a1.png"
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a2.png"
          correct: true
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a3.png"
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a4.png"
        content1: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_q.png,
          500"
        questions:
        - text: 哪一个代码块可以画出这个设计？
        title: 小艺术家循环：选择题
      4-5 artist multi 1:
        answers:
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a1.png"
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a2.png"
          correct: true
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a3.png"
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a4.png"
        questions:
        - text: 哪一个模块画出了周长为100的长方形？
        title: 小艺术家 选择题
      4-5 artist multi 2:
        answers:
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a1.png"
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a2.png"
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a3.png"
          correct: true
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a4.png"
        questions:
        - text: 哪一个图像是对称的？
        title: 小艺术家 选择题
      4-5 bee conditionals multi 1:
        answers:
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a1.png"
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a2.png"
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a3.png"
          correct: true
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a4.png"
        content1: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_q.png"
        content2: 紫色花里可能有 3，2，或 1 个花蜜，但不知道有多少。哪个模块能从紫花里正确检查，并收集所有的花蜜？
        questions:
        - text: 选择最好的模块。
        title: 蜜蜂条件语句选择题
      4-5 bee debug multi 1:
        answers:
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a2.png"
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a3.png"
          correct: true
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a1.png"
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a4.png"
        content1: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_q1.png"
        content2: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_q2.png"
        questions:
        - text: 哪一个版本的函数可以运行？
        title: 蜜蜂调试选择题
      4-5 bee loops multi 1:
        answers:
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a1.png"
          correct: true
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a2.png"
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a3.png"
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a4.png"
        content1: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_q.png"
        questions:
        - text: 哪一个模块可以解决这个问题？
        title: 蜜蜂循环选择题
      4-5 maze conditionals multi 1:
        answers:
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a1.png"
          correct: true
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a2.png"
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a3.png"
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a4.png"
        content1: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_q.png,
          500"
        questions:
        - text: 哪些模块解决了这一问题？
        title: 迷宫条件语句选择题
      4-5 maze match 1:
        answers:
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_a1.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_a2.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_a3.png"
        content1: 将谜题与模块相匹配
        questions:
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_q1.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_q2.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_q3.png"
        title: 迷宫比赛
      4-5 maze multi 1:
        answers:
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a1.png"
          correct: true
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a2.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a3.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a4.png"
        content1: "/script_assets/4-5_images/maze/4-5_maze_multi_1_q.png, 500"
        questions:
        - text: 哪些模块解决了这一问题？
        title: 迷宫的选择题
      Begin planning your project:
        content1: 描述
        markdown: "# 设计过程\n设计软件，意味着每时每刻都要解决许多的小问题。软件设计的主要问题是要创造些什么。\n\n此流程对所有事情都适用，但这里会聚焦于应用设计上。\n\n<!--
          翻译词汇 \"定义\", \"准备\", \"尝试\", \"反思\" 并根据需要来改变字体大小和位置-->\n<div style=\"position:
          relative; text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position:
          absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">定义</div> \n  <div style=\"position: absolute; top: 52%; left: 61%;
          transform: translateX(-61%); font-weight: bold;\">准备</div>\n  <div style=\"position:
          absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">尝试</div>\n  <div style=\"position: absolute; top: 52%; left: 39%;
          transform: translateX(-39%); font-weight: bold;\">反思</div>\n</div>\n\n*
          **定义**\n  * 想要创建什么样的应用？\n  * 有什么限制？\n  * 什么是成功？\n* **准备**\n  * 头脑风暴 / 研究可能的元素\n
          \ * 比较有点和缺陷\n  * 制定计划\n* **尝试**\n  * 将计划变为行动\n* **反思**\n  * 结果与定义应用时设定的目标相比如何？\n
          \ * 这次学到了什么，下次怎么做会更好？\n  * 发现了什么新问题？\n\n# 看起来像什么\n在接下来的几周中，有机会尝试一些已有的游戏，并根据所学知识设计自己的游戏。创建游戏后，还有机会向他人展示游戏并获得反馈。这些步骤在软件行业中都至关重要，而实践设计流程中的要素将帮助更有效地创建更好的产品。
          \ \n\n随着对设计过程的更多了解，以下几周将举行：\n\n1. **定义和准备**\n   * 玩一玩已有的游戏，来获取灵感，了解局限性\n
          \  * 头脑风暴，并为新应用或改进的应用制定计划\n1. **尝试**\n   * 根据计划来构建应用\n1. **反思和更新**\n   *
          与其它组交换应用，来帮助项目变得更好\n1. **演示**\n   * 炫耀一下最终产品吧！\n"
      Begin planning your project_2018:
        content1: 描述
        markdown: "# 设计过程\n设计软件，意味着每时每刻都要解决许多的小问题。软件设计的主要问题是要创造些什么。\n\n此流程对所有事情都适用，但这里会聚焦于应用设计上。\n\n<!--
          翻译词汇 \"定义\", \"准备\", \"尝试\", \"反思\" 并根据需要来改变字体大小和位置-->\n<div style=\"position:
          relative; text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position:
          absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">定义</div> \n  <div style=\"position: absolute; top: 52%; left: 61%;
          transform: translateX(-61%); font-weight: bold;\">准备</div>\n  <div style=\"position:
          absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">尝试</div>\n  <div style=\"position: absolute; top: 52%; left: 39%;
          transform: translateX(-39%); font-weight: bold;\">反思</div>\n</div>\n\n*
          **定义**\n  * 想要创建什么样的应用？\n  * 有什么限制？\n  * 什么是成功？\n* **准备**\n  * 头脑风暴 / 研究可能的元素\n
          \ * 比较有点和缺陷\n  * 制定计划\n* **尝试**\n  * 将计划变为行动\n* **反思**\n  * 结果与定义应用时设定的目标相比如何？\n
          \ * 这次学到了什么，下次怎么做会更好？\n  * 发现了什么新问题？\n\n# 看起来像什么\n在接下来的几周中，有机会尝试一些已有的游戏，并根据所学知识设计自己的游戏。创建游戏后，还有机会向他人展示游戏并获得反馈。这些步骤在软件行业中都至关重要，而实践设计流程中的要素将帮助更有效地创建更好的产品。
          \ \n\n随着对设计过程的更多了解，以下几周将举行：\n\n1. **定义和准备**\n   * 玩一玩已有的游戏，来获取灵感，了解局限性\n
          \  * 头脑风暴，并为新应用或改进的应用制定计划\n1. **尝试**\n   * 根据计划来构建应用\n1. **反思和更新**\n   *
          与其它组交换应用，来帮助项目变得更好\n1. **演示**\n   * 炫耀一下最终产品吧！\n"
      Begin planning your project_2018_2019:
        content1: 描述
        markdown: |+
          # 项目案例

          你即将开始你最终的项目。 在开始之前，花一些时间查看示例项目。

          | 饥饿的松鼠Hungry Squirrel |外星人传奇Alien Story |
          |---|---|
          | [![Hungry Squirrel (Play Lab)](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG "Hungry Squirrel (Play Lab")](https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view) | [![Alien Story (Play Lab)](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG "Alien Story (Play Lab")](https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view) |
          | 尝试给这个游戏增加一些声音! | 尝试为这个游戏增加一幕情节! |

      BigEvent-Unplugged:
        markdown: |
          # 大事件

          在计算机科学中，事件是计算机监控的行动。这节课中，当按钮按下时，会用不同的方法来响应。
      BinaryBracelets-Unplugged:
        markdown: |
          # 二进制手镯

          创建一个二进制手镯，在一个计算机能够理解的系统中代表你的名字。

          ![](https://images.code.org/ed15a484276c0989e4adb5daf480f68a-image-1557870226222.png)
      BinaryImages-Unplugged:
        markdown: |
          # 二进制图片

          如何只用两个简单的值通讯，来重新创建出图片。
      Building a UI with Design Mode:
        markdown: |
          # 欢迎使用应用实验室设计模式
          在应用实验室的 "设计模式" 中，能够拖拽界面元素到应用中。

          ### 词汇表
          **用户界面（UI）** - 应用的 "用户界面（User Interface）" 或 **UI** 表示如何让人（用户）与计算机或应用进行交互。可能会从经验中了解一些用户界面的模式：

          * **用户界面元素（UI Element）** 或目标，如按钮、图片、文本框、下拉菜单、屏幕等等。
          * **用户界面事件** 或控制，如 *点击*，*滚动*，*移动鼠标*，*按下键盘按键*，等等。

          应用实验室能轻松的将用户界面元素加入到应用中，并添加代码，在用户与这些元素交互时响应。这是两步的过程，将在本课中学习所有内容。

          首先，看一下设计模式，并添加单个用户界面元素（按钮）到应用中。稍后会增加代码。

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          可以在应用区域看到一个新开关，可以在 "设计模式" 和 "代码模式" 间相互切换。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>添加元素就像将它拖放到应用中一样容易。元素在应用屏幕中之后，可以调整它的位置、大小，以及其它许多属性。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span><em>属性</em>选项卡会显示此元素可以修改的所有外观等属性。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span><strong>元素标识（ID）</strong> 很重要，这是如何在代码中引用元素的方式。稍后将讨论元素标识。</p>
          </div>

          ![](https://images.code.org/01a31ac3be66deb6d01a92a1edfffd21-image-1476726587662.png)


          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 66%; float: right">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>可将用户能看到的按钮文本随意修改。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span><strong>注意：</strong>  向下滚动可能看到元素其它在下面 "隐藏" 的属性。</p>
          </div>

          <div style="clear: both"></div>
          <hr>

          **现在试试吧！**
      CSD - Getters and Setters:
        markdown: |
          # 取值器 (getter) 和设置器 (setter)

          # 设置器 (setter)

          设置器是 **设置** 或改变信息的命令。所有设置器至少需要一个输入：想要设置的信息。

          以前用过了 `setScreen()`。`setScreen()` 会改变用户当前看到的屏幕。`setScreen()` 的这个输入是要改变的新屏幕。

          另一个要使用的设置器的示例是 `setText()`。

          <img src="//curriculum.code.org/images/applab/setText.png" style="margin: 20px auto">

          # 取值器 (getter)

          取值器是用来 **获取** 信息的命令。取值器通常要求至少一个参数：从哪里获得信息。

          `getText()` 是经常使用的取值器。可以从文本输入框这样的元素中读取文本。

          <img src="//curriculum.code.org/images/applab/getText.png" style="margin: 20px auto">

          在使用取值器时，将结果保存到变量中，通常是个好主意，这样能在程序中随时使用。
      CSD Header Size MC:
        answers:
        - text: https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47
            AM.png
        - text: https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08
            AM.png
          correct: true
        - text: https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25
            AM.png
        - text: https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50
            AM.png
        content1: 查看下面的代码，预测标题的显示方式，从右侧选项中选择一个选项。
        markdown: |
          <pre>
          &lt;h3&gt; Eggs &lt;/h3&gt;
          &lt;h1&gt; Bacon &lt;/h1&gt;
          &lt;h6&gt; Waffles &lt;/h6&gt;
          </pre>
        title: 快速检查标题
      CSD Header Size MC_2018:
        answers:
        - text: https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47
            AM.png
        - text: https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08
            AM.png
          correct: true
        - text: https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25
            AM.png
        - text: https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50
            AM.png
        content1: 查看下面的代码，预测标题的显示方式，从右侧选项中选择一个选项。
        markdown: |
          <pre>
          &lt;h3&gt; Eggs &lt;/h3&gt;
          &lt;h1&gt; Bacon &lt;/h1&gt;
          &lt;h6&gt; Waffles &lt;/h6&gt;
          </pre>
        title: 快速检查标题
      CSD Header Size MC_2018_2019:
        answers:
        - text: https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47
            AM.png
        - text: https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08
            AM.png
          correct: true
        - text: https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25
            AM.png
        - text: https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50
            AM.png
        content1: 查看下面的代码，预测标题的显示方式，从右侧选项中选择一个选项。
        markdown: |
          <pre>
          &lt;h3&gt; Eggs &lt;/h3&gt;
          &lt;h1&gt; Bacon &lt;/h1&gt;
          &lt;h6&gt; Waffles &lt;/h6&gt;
          </pre>
        title: 快速检查标题
      CSD U1 Lesson 5 Overview:
        markdown: |
          #概述
          在这一课中，你会学习到计算机使用到的不同种类的输入、输出设备，以及学习到他们发送、接收的信息类型

          ##词汇
          * **输入设备** - 允许将信息提供给计算机的设备或组件
          * **输出设备** - 任何从计算机接收信息的设备或组件

          ##资料
          * [输入与输出设备 - 活动指导](https://docs.google.com/document/d/1ObS_kxkXoueaotPYFAEkcCDzn690zumqoLLnrU5kY2Q/export?format=pdf)
      CSD U1 Lesson 6 Overview:
        markdown: |
          #概述
          在这一课中，你会学到人类与计算机是如何将输入信息处理并转换为输出信息的

          ##词汇
          * **算法** - 一个用于处理流程的、可被计算机执行的精确指令序列

          ## 资料
          * [卡片排序算法 - 活动指导](https://docs.google.com/document/d/1o4kVRnXnigufkS9WsjHjeD38f8MQrX6qCEFpka-F9Oo/export?format=pdf)
      CSD U1 Lesson 7 Overview:
        markdown: |
          #概述
          在这一课中，你会学到计算机存储信息的类型，以及存储是如何成为处理信息的关键部分的

          ##资料
          * [存储与处理 - 活动指导](https://docs.google.com/document/d/1I-OzbJizf7m5DK5jfRxDtSYtc_SoSk6vGtSM9tqlGw0/export?format=pdf)
      CSD U1 Lesson 8 Overview:
        markdown: |
          #概述
          在这一课中，你将会探索应用程序为了达到解决问题的目的，采用的处理不同种类的信息的方式

          ##资料
          * [应用探索 - 活动指导](https://docs.google.com/document/d/1OW-fkwA7xeNZWiduWescL-6a6zFigtJVP7hfL1oNgVA/export?format=pdf)
      CSD U1 Lesson 9 Overview:
        markdown: |
          #概述
          在这个项目中，你会设计你自己的应用程序来解决你自己定义的问题

          ##资料
          * [应用程序和问题解决 - 项目指导](https://docs.google.com/document/d/1S7X-B2V1-WuT7ZLk1LAZRO1O5f4u7pgth4F7G00tGak/export?format=pdf)
          * [应用程序和问题解决 - 同行评审](https://docs.google.com/document/d/13ekhJvtz1vovS6FhGBeDf1mcYFRyJe65bQdi8S8T9lU/export?format=pdf)
          * [应用程序和问题解决 - 专栏](https://docs.google.com/document/d/1ix0LfgiVglwyC5Bb6PBlfBrnbeCOz2wPIPTgXu-qMZE/export?format=pdf)
      CSD U2 Design Project:
        content1: 描述
        markdown: |+
          # 开始自己的页面

          是时候创建自己的网页了！可以将内容分享给全世界。

          ## 定义

          用学会的知识，使用 HTML 来制作网页。页面要有至少 **两种不同大小的标头**，还要 **使用段落**。

          ## 准备

          在开始给网页写代码前，需要有个计划。通过前面课程写下的想法，决定页面是关于什么的。后面还有机会做其它页面。

          先画个页面的草稿，包括标头段落。将草稿给伙伴看看，并解释一下页面不同部分会用哪些标签。如果忘了这些标签，可以看看前几课，或者让伙伴帮助。

          如果草图里有些还不知道怎么写代码，可以先存下来。

          ## 尝试

          使用学过的 HTML 来创建页面。如果遇到了问题，可以找伙伴们来帮忙，但是 **你是自己网页的责任人**，这表示应该自己编写所有的代码。

          ## 反思

          完成网页后，与草稿作比较，确保没有忘了什么内容。也请伙伴们看看，思考一下他们的反馈，是否应该做一些改动。


      CSD U2 Design Project_2018:
        content1: 描述
        markdown: |+
          # 开始自己的页面

          是时候创建自己的网页了！可以将内容分享给全世界。

          ## 定义

          用学会的知识，使用 HTML 来制作网页。页面要有至少 **两种不同大小的标头**，还要 **使用段落**。

          ## 准备

          在开始给网页写代码前，需要有个计划。通过前面课程写下的想法，决定页面是关于什么的。后面还有机会做其它页面。

          先画个页面的草稿，包括标头段落。将草稿给伙伴看看，并解释一下页面不同部分会用哪些标签。如果忘了这些标签，可以看看前几课，或者让伙伴帮助。

          如果草图里有些还不知道怎么写代码，可以先存下来。

          ## 尝试

          使用学过的 HTML 来创建页面。如果遇到了问题，可以找伙伴们来帮忙，但是 **你是自己网页的责任人**，这表示应该自己编写所有的代码。

          ## 反思

          完成网页后，与草稿作比较，确保没有忘了什么内容。也请伙伴们看看，思考一下他们的反馈，是否应该做一些改动。


      CSD U2 Design Project_2018_2019:
        content1: 描述
        markdown: |+
          # 开始自己的页面

          是时候创建自己的网页了！可以将内容分享给全世界。

          ## 定义

          用学会的知识，使用 HTML 来制作网页。页面要有至少 **两种不同大小的标头**，还要 **使用段落**。

          ## 准备

          在开始给网页写代码前，需要有个计划。通过前面课程写下的想法，决定页面是关于什么的。后面还有机会做其它页面。

          先画个页面的草稿，包括标头段落。将草稿给伙伴看看，并解释一下页面不同部分会用哪些标签。如果忘了这些标签，可以看看前几课，或者让伙伴帮助。

          如果草图里有些还不知道怎么写代码，可以先存下来。

          ## 尝试

          使用学过的 HTML 来创建页面。如果遇到了问题，可以找伙伴们来帮忙，但是 **你是自己网页的责任人**，这表示应该自己编写所有的代码。

          ## 反思

          完成网页后，与草稿作比较，确保没有忘了什么内容。也请伙伴们看看，思考一下他们的反馈，是否应该做一些改动。


      CSD U2 Expression Exemplars:
        markdown: |
          # 个人网站示例

          点击下面的链接，看看其他同学做的个人网站。

          <a href="https://codeprojects.org/SYRw7CQJzSmAErCEF-mMXQ" target="_blank"><img src="https://images.code.org/25b7284a4cd3d26f9b989a5c3bba6485-image-1493760609250.29.54 PM.png" style="width:200px;float:left"></a>

          <a href="https://codeprojects.org/y6u1W372PZh2MfzxwHQBKA" target="_blank"><img src="https://images.code.org/5929f61d14370a72e2e3b77c1948d5ed-image-1493943243592.13.32 PM.png" style="width:200px;float:left"></a>
      CSD U2 Expression Exemplars_2018:
        markdown: |
          # 个人网站示例

          点击下面的链接，看看其他同学做的个人网站。

          <a href="https://codeprojects.org/SYRw7CQJzSmAErCEF-mMXQ" target="_blank"><img src="https://images.code.org/25b7284a4cd3d26f9b989a5c3bba6485-image-1493760609250.29.54 PM.png" style="width:200px;float:left"></a>

          <a href="https://codeprojects.org/y6u1W372PZh2MfzxwHQBKA" target="_blank"><img src="https://images.code.org/5929f61d14370a72e2e3b77c1948d5ed-image-1493943243592.13.32 PM.png" style="width:200px;float:left"></a>
      CSD U2 Expression Exemplars_2018_2019:
        markdown: |
          # 个人网站示例

          点击下面的链接，看看其他同学做的个人网站。

          <a href="https://codeprojects.org/SYRw7CQJzSmAErCEF-mMXQ" target="_blank"><img src="https://images.code.org/25b7284a4cd3d26f9b989a5c3bba6485-image-1493760609250.29.54 PM.png" style="width:200px;float:left"></a>

          <a href="https://codeprojects.org/y6u1W372PZh2MfzxwHQBKA" target="_blank"><img src="https://images.code.org/5929f61d14370a72e2e3b77c1948d5ed-image-1493943243592.13.32 PM.png" style="width:200px;float:left"></a>
      CSD U2 L1 Overview:
        content1: 描述
        markdown: |
          # 概述

          本课程讲述了网站对于用户和创作者的存在价值。探索了美国的几个最有名的网站，以及它们对用户的用途和对创作者的价值。
          ## 词汇

          * **网站** - 连接到互联网的位置，维护万维网中一个或多个网页。


          ## 资源

          * [网站的目的 - 活动指南](https://docs.google.com/document/d/16M-x8qNr0tdpfoHqyKo4sdbTzFOy5rKp8IBYmTQ7xkU/export?format=pdf)
      CSD U2 L12 Overview:
        markdown: |
          # 概述

          在第一次完成了网络搜索寻宝后，班级学会了搜索引擎内部如何工作，并有机会在搜索奇怪、罕见的动物上发挥分析能力。
          ## 词汇表

          * **算法（algorithm）** - 一组有精确顺序的计算机上的可执行指令
          * **相关的（relevant）** - 与一些事情非常有关系。
          * **搜索引擎（search engine）** - 在数据库中，通过用户输入的，相应的关键词或字符来找到对应的条目，特别是用来在互联网上搜索特定的网站和内容。
          * **可信赖** - 因为诚实、真实而特别能被依赖。


          ## 资源

          * [网络寻宝 - 活动指南](https://docs.google.com/document/d/14sOf5YZ5iTvB0jzlm7X-18HE6S_KEG3IcrsFHN7OeCk/export?format=pdf)
          * [奇怪的真实动物 - 活动指南](https://docs.google.com/document/d/1t7gmFWj0fneGzJbPRHk0eq3hz-kRQ_xwnVbKwdL3tEw/export?format=pdf)
      CSD U2 L2 Overview:
        content1: 描述
        markdown: |
          # 课程预览
          本课程以通俗的方式介绍了网站。首先讨论了人们表达和分享他们的兴趣与观点的几种方式；然后展示了几个上堂课学生制作的示意网站；最后进行了头脑风暴，每个人都分享了话题和兴趣列表，准备在接下来的课程单元里用于开发个人网站所需要的资源。

          ## 参考词汇
          ***网页内容** - 在网页中呈现的文字、图片以及其它元素。

          ## 资源
          * [个人网站草图 - 课堂活动指南](https://docs.google.com/document/d/1wnK0ntxFWvUyuEB6SksiTtUDqrEhZZn3VPLWynz-fV4/export?format=pdf)
      CSD U2 L3 Overview:
        content1: 描述
        markdown: |
          # 课程预览

          本课程介绍了HTML，HTML是实现网站的内容与结构和电脑进行传输呈现的一个解决方案。开始先进行了一个简短的课堂活动，展示了有效传输呈现网页结构的挑战。学生们在WEB试验台看HTML网页，讨论HTML的标签是如何解决问题的，然后使用HTML完成本单元的一个网页。

          ## 词汇参考
          * **HTML** - 超文本标记语言，一种用于创建网页的语言
          * **HTML Element** - 网页元素，通常由开头标签标记，一般也有一个结束标签
          * **HTML Tag** - 一组特殊字符，用于指示HTML元素的开头和结尾以及该元素的类型
          * **Website Content** - 网页中包含的文本，图像和其他元素
          * **Website Structure** - 网页中用于帮助计算机确定应如何显示内容的不同内容块

          ## 已学代码

          * **[HTML](//studio.code.org/docs/html/)** - `<html></html>`
          * **[Doctype](//studio.code.org/docs/doctype/)** - `<!DOCTYPE>`
          * **[Paragraph](//studio.code.org/docs/P/)** - `<p></p>`
          * **[Body](//studio.code.org/docs/body/)** - `<body></body>`
          * **[Head](//studio.code.org/docs/head/)** - `<head></head>`
      CSD U2 L4 Overview:
        content1: 描述
        markdown: |+
          # 概述

          这节课会继续介绍 HTML 标签，这次是标头（head）。 课堂会练习使用标头标签来创建页面和小节的标题，并学习如何显示不同的默认标头元素。接下来，会规划如何组织个人网页中的内容，这回贯穿整个单元，并开始构建这个项目的第一个页面。
          ## 词汇

          * **标头** - 文档或文档中章节的标题。

          ## 介绍的代码

          *  **[Heading](//studio.code.org/docs/weblab/h/)** - `<h1></h1>`

      CSD U2 L5 Overview:
        content1: 描述
        markdown: |
          # 概述

          这堂课从创建个人网站往回了一步，来讲述如何选择共享哪些数字信息。课堂从讨论什么样的信息可以与别人分享开始，然后浏览几个社交媒体示例来看看什么样的个人信息会被有意或无意的共享。最后，课程会提供一些关于共享信息的指导。
          ## 词汇

          * **数字足迹** - 在互联网上跨越多个网站收集的个人信息。

          ## 资源

          * [为什么个人隐私很重要？ - 活动指导](https://docs.google.com/document/d/1SmCceDGntI-rJI40dTR7rA0Tfa0cH1OQoRNNxPEmXG0/export?format=pdf)
          * [社交侦探 - 活动指导](https://docs.google.com/document/d/1A9q31rwrBA7tZZcZ3KZqjMb30UncM-eycwMvYgj9os4/export?format=pdf)
      CSD U2 L6 Overview:
        content1: 描述
        markdown: |+
          # 概述

          本课介绍有编号和无编号的列表，以及相关的 &lt;ul&gt;, &lt;ol&gt;, 和 &lt;li&gt; HTML 标签。还会练习使用这些标签，然后在个人网页项目中添加包含新标签的 HTML 页面。

          ## 介绍的代码


          *  **[无编号的列表](//studio.code.org/docs/weblab/ul/)** - `<ul></ul>`
          *  **[列表项目](//studio.code.org/docs/weblab/li/)** - `<li></li>`
          *  **[有编号的列表](//studio.code.org/docs/weblab/ol/)** - `<ol></ol>`

      CSD U2 L7 Overview:
        markdown: |
          # 概述

          本课包括了如何使用别人创作的资源，并同时尊重原创者的权利。学习了作品共享许可后，会学习如何将图片添加到网页中，并设置正确的属性。

          ## 词汇表

          * **引用（Citation）** - 对书籍、论文或作者内容的参考、引用，特别是在学术作品中。
          * **版权（Copyright）** - 专有的法律权利，可以让原始作者或授权者能够授权别人对记录文学、艺术或音乐作品等，打印、发表、表演、拍摄。
          * **作品共享许可（Creative Commons）** - 是一种开放的版权许可，和保护版权的许可不同，这种许可允许免费分发作品。当作者希望别人能有权共享、使用、进一步创作作者自己的作品时，就可以使用 CC 许可。
          * **知识产权** - 通过创造力产生的作品或发明，如手稿、设计等。对这些作品均有权利，并可进一步申请专利、版权、商标等。

          ## 介绍的代码

          *  **[Image](//studio.code.org/docs/weblab/img/)** - `<img />`

          ## 资源

          * [作品共享许可概述](https://www.youtube.com/watch?v=HKfqoPYJdVc) - Video
          * [许可你的作品 - 活动指南](https://docs.google.com/document/d/1twenNK2xrjc4bhIXuKfMXFA2yocLsR7MK8ZPvi-HckI/export?format=pdf)
      CSD U2 Lesson 6 Overview:
        content1: 描述
        markdown: |
          # 概述

          本课程将介绍设计HTML网页时会出现的常见问题。课程会纠正代码工作室里，一系列逐渐复杂的网页中找到的问题，并学习注释、空格和缩进的重要性，以及它们如何让网页更易读。
          ## 词汇表

          * **缺陷（bug）** - 程序中不能正常工作的部分。
          * **注释（comment）** - 注释是在计算机程序源代码中，给程序员阅读的文字。
          * **调试（debug）** - 找到并修复算法或程序中问题的过程。
          * **缩进（indentation）** - 放置在文本右边或左边的空间，用来与周围的文本相区分，帮助理解代码的结构。
          * **空格（whitespace）** - 空格指任何在屏幕上不能看到的空白空间，例如空格键，TAB 键或新行。空格能将文档分成不同部分，帮助阅读。

          ## 引入的代码

          *  **[注释](//studio.code.org/docs/weblab/comment/)** - `<!-- -->`
      CSD U2 Lesson 9 Overview:
        markdown: "# 概述\n\n本课介绍了超链接，网站开发者使用它来将多个页面连接到一起成为一个网站。本课会将以前的页面都连接到一个项目里，为每个页面创建导航栏，并将整个网站发布到网络中。
          \ \n## 词汇表\n\n* **超链接** - 从一个 HTML 文件链接到另一个位置或文件，一般通过点击屏幕上高亮的文字或图片来激活。\n\n##
          引入的代码\n\n*  **[超链接](//studio.code.org/docs/weblab/A/)** - `<a></a>`\n\n##
          资源\n\n* [个人网站 - 项目指南](https://docs.google.com/document/d/1sPdFBq1nrwG9742tu3sXQ93xWbCWmNdCgo0dv3eYfXY/export?format=pdf)\n*
          [个人网站 - 相互评审](https://docs.google.com/document/d/1B5QXF0ASAy3vHcFQilQo3Q3J3GiiuQxBxnZFg8WDYaw/export?format=pdf)\n*
          [个人网站 - 专栏](https://docs.google.com/document/d/16ddR5r96qvv_Ti5gWN-AcjvCx0-SP6B7shSp-caKuDI/export?format=pdf)\n"
      CSD U2 PSP Programming:
        markdown: |+
          # 编程中解决问题的流程

          ## 定义
          <img src="https://images.code.org/4684a4cd531d3750d2a11051f6e0729f-image-1493396308445.png" style="float:right; width: 250px;">

          * 认真阅读说明，确保理解了目标
          * 用自己的话来重新描述问题
          * 找到被要求申请的任何新技能
          * 看看已解决的问题中有没有类似的
          * 如果有入门的代码，阅读并理解它做了什么

          ## 准备
          * 用简单的语言或伪代码写出想法
          * 在纸上勾勒出想法
          * 列出已经知道怎样做的，和不知道怎样做的
          * 给同学讲一下想法
          * 回顾一下过去写的类似的程序

          ## 尝试
          * 一次写一小部分
          * 经常的测试程序
          * 用注释来记下代码做了什么
          * 使用合适的调试策略
          * 如果卡住了，或不知道问题是否解决了，回到前几步

          ## 反思
          * 将完成的程序与定义的问题相比较，确保解决了问题的所有方面
          * 让同学来试试程序，并记录哪里有迷惑的情况
          * 让同学阿里阅读代码，确保文档清楚、精确
          * 试着 "中断" 程序来找到交互过程中可以处理得更好的地方
          * 找到一些能在下一次迭代中增量改动的东西


      CSD U2 PSP Programming_2018:
        markdown: |+
          # 编程中解决问题的流程

          ## 定义
          <img src="https://images.code.org/4684a4cd531d3750d2a11051f6e0729f-image-1493396308445.png" style="float:right; width: 250px;">

          * 认真阅读说明，确保理解了目标
          * 用自己的话来重新描述问题
          * 找到被要求申请的任何新技能
          * 看看已解决的问题中有没有类似的
          * 如果有入门的代码，阅读并理解它做了什么

          ## 准备
          * 用简单的语言或伪代码写出想法
          * 在纸上勾勒出想法
          * 列出已经知道怎样做的，和不知道怎样做的
          * 给同学讲一下想法
          * 回顾一下过去写的类似的程序

          ## 尝试
          * 一次写一小部分
          * 经常的测试程序
          * 用注释来记下代码做了什么
          * 使用合适的调试策略
          * 如果卡住了，或不知道问题是否解决了，回到前几步

          ## 反思
          * 将完成的程序与定义的问题相比较，确保解决了问题的所有方面
          * 让同学来试试程序，并记录哪里有迷惑的情况
          * 让同学阿里阅读代码，确保文档清楚、精确
          * 试着 "中断" 程序来找到交互过程中可以处理得更好的地方
          * 找到一些能在下一次迭代中增量改动的东西


      CSD U2 PSP Programming_2018_2019:
        markdown: |+
          # 编程中解决问题的流程

          ## 定义
          <img src="https://images.code.org/4684a4cd531d3750d2a11051f6e0729f-image-1493396308445.png" style="float:right; width: 250px;">

          * 认真阅读说明，确保理解了目标
          * 用自己的话来重新描述问题
          * 找到被要求申请的任何新技能
          * 看看已解决的问题中有没有类似的
          * 如果有入门的代码，阅读并理解它做了什么

          ## 准备
          * 用简单的语言或伪代码写出想法
          * 在纸上勾勒出想法
          * 列出已经知道怎样做的，和不知道怎样做的
          * 给同学讲一下想法
          * 回顾一下过去写的类似的程序

          ## 尝试
          * 一次写一小部分
          * 经常的测试程序
          * 用注释来记下代码做了什么
          * 使用合适的调试策略
          * 如果卡住了，或不知道问题是否解决了，回到前几步

          ## 反思
          * 将完成的程序与定义的问题相比较，确保解决了问题的所有方面
          * 让同学来试试程序，并记录哪里有迷惑的情况
          * 让同学阿里阅读代码，确保文档清楚、精确
          * 试着 "中断" 程序来找到交互过程中可以处理得更好的地方
          * 找到一些能在下一次迭代中增量改动的东西


      CSD U2 Top Websites:
        markdown: |
          # 美国最多访问量的网站

          以下是在美国访问量最多的网站。每一条都包含了有关于该网站的核心内容和功能简介。

          1. Google.com - 用于查找网站内容、图片、视频及其他多媒体信息的搜索引擎
          2. Youtube.com - 用户可自行上传视频，并发表观点以及进行讨论
          3. Facebook.com - 用户可与好友分享精彩内容的社交媒体
          4. Yahoo.com - 一款搜索引擎，同时也是电子邮件提供者及新闻网站
          5. Wikipedia.org - 自由而且免费的百科全书，用户可以编辑其中的内容
      CSD U2 Top Websites_2018:
        markdown: |
          # 美国最多访问量的网站

          以下是一些在美国访问量最多的网站。包含了关于该网站的核心内容和功能简介。

          * Google.com - 用于查找网站内容、图片、视频及其他多媒体信息的搜索引擎
          * Youtube.com - 用户可上传视频，并发表观点以及进行讨论
          * Facebook.com - 用户可与好友分享精彩内容的社交媒体
          * Yahoo.com - 一款搜索引擎，同时也是电子邮件提供者及新闻网站
          * Wikipedia.org - 自由而且免费的百科全书，用户可以编辑其中的内容
      CSD U2 Top Websites_2018_2019:
        markdown: |
          # 美国最多访问量的网站

          以下是一些在美国访问量最多的网站。包含了关于该网站的核心内容和功能简介。

          * Google.com - 用于查找网站内容、图片、视频及其他多媒体信息的搜索引擎
          * Youtube.com - 用户可上传视频，并发表观点以及进行讨论
          * Facebook.com - 用户可与好友分享精彩内容的社交媒体
          * Yahoo.com - 一款搜索引擎，同时也是电子邮件提供者及新闻网站
          * Wikipedia.org - 自由而且免费的百科全书，用户可以编辑其中的内容
      CSD U2 expand project:
        content1: 描述
        markdown: |
          # 扩展网站

          下一关中，要制作第二个页面来扩展网站。要和伙伴讨论计划，但还是自己做自己的网站。

          下一关中要做下面三件事。

          1. 创建一个新页面。
          2. 给新页面命名。
          3. 将内容放到新页面里。

          新页面要有：

          * 至少一个列表
          * 至少一个标头

          开始写代码以前，要为网站的主题做个计划。这里有些建议。可以点击每个页面看大点的版本。

          | 配方 |  有趣的事实 | 帮助指南 |
          |---------|--------------|--------------|
          | [![](https://images.code.org/fbfd4e89f4b1514845c203550c59bbd1-image-1493419989564.48.07 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/recipe.html) |[![](https://images.code.org/8780832b11e2149848bf944acaf0cd6a-image-1493419989562.47.46 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/candy.html) | [![](https://images.code.org/9cff12744e7036498821e7d59b21f2ba-image-1493419989560.29.25 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/juggle.html) |
      CSD U2 expand project_2018:
        content1: 描述
        markdown: |
          # 扩展网站

          下一关中，要制作第二个页面来扩展网站。要和伙伴讨论计划，但还是自己做自己的网站。

          下一关中要做下面三件事。

          1. 创建一个新页面。
          2. 给新页面命名。
          3. 将内容放到新页面里。

          新页面要有：

          * 至少一个列表
          * 至少一个标头

          开始写代码以前，要为网站的主题做个计划。这里有些建议。可以点击每个页面看大点的版本。

          | 配方 |  有趣的事实 | 帮助指南 |
          |---------|--------------|--------------|
          | [![](https://images.code.org/fbfd4e89f4b1514845c203550c59bbd1-image-1493419989564.48.07 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/recipe.html) |[![](https://images.code.org/8780832b11e2149848bf944acaf0cd6a-image-1493419989562.47.46 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/candy.html) | [![](https://images.code.org/9cff12744e7036498821e7d59b21f2ba-image-1493419989560.29.25 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/juggle.html) |
      CSD U2 expand project_2018_2019:
        content1: 描述
        markdown: |
          # 扩展网站

          下一关中，要制作第二个页面来扩展网站。要和伙伴讨论计划，但还是自己做自己的网站。

          下一关中要做下面三件事。

          1. 创建一个新页面。
          2. 给新页面命名。
          3. 将内容放到新页面里。

          新页面要有：

          * 至少一个列表
          * 至少一个标头

          开始写代码以前，要为网站的主题做个计划。这里有些建议。可以点击每个页面看大点的版本。

          | 配方 |  有趣的事实 | 帮助指南 |
          |---------|--------------|--------------|
          | [![](https://images.code.org/fbfd4e89f4b1514845c203550c59bbd1-image-1493419989564.48.07 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/recipe.html) |[![](https://images.code.org/8780832b11e2149848bf944acaf0cd6a-image-1493419989562.47.46 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/candy.html) | [![](https://images.code.org/9cff12744e7036498821e7d59b21f2ba-image-1493419989560.29.25 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/juggle.html) |
      CSD U2 image debug match:
        answers:
        - text: https://images.code.org/6015fb13fa76d32072de2762d7d363ba-image-1553717013288.02.34
            PM.png
        - text: https://images.code.org/555e64ae1a9a586d902f1ed254e4e00c-image-1553717003484.03.01
            PM.png
        - text: https://images.code.org/e3b9be5444661a34eefe9bfa89e94cbc-image-1553717006899.02.47
            PM.png
        - text: https://images.code.org/0ffde880f790f497b2aaef29f40272f4-image-1553717010350.02.40
            PM.png
        - text: https://images.code.org/a86b628a71ae0415fe48dfd8a19ee69a-image-1553717016038.02.24
            PM.png
        content1: 将这段存在问题的 HTML 代码与描述中所对应的问题相连线。
        questions:
        - text: 属性“src”拼写错误。
        - text: "`src` 和 `alt` 属性放反了"
        - text: 图像路径中的文件扩展名（.jpg）丢失
        - text: 图像路径的属性不是“src”
        - text: 文件名中包含空格
      CSD U2 lists match:
        answers:
        - text: https://images.code.org/c77491ea22b3b977383bfd2ca3655df1-image-1493336218041.31.27
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/d3be2ba9f4a398277f9663bbd5fdf783-image-1493336218042.31.59
            PM.png
        - text: https://images.code.org/1bbd9b340b51a295760f8daa4714cf84-image-1493336218035.32.21
            PM.png
        content1: 匹配列表和相对应的代码。
        markdown: " *提示：一些 HTML 列表有错误，想想代码里什么位置造成了这些错误。*\n\n"
        questions:
        - text: https://images.code.org/b7b998dd12e507d163d7dac0fcd37b8c-image-1493336218044.31.41
            PM.png
        - text: https://images.code.org/d9af5a34631dee994f99750f48f52b66-image-1493336218042.50.24
            PM.png
        - text: https://images.code.org/63b9f044db7dfa10d0486920e982f217-image-1493336218039.32.08
            PM.png
        - text: https://images.code.org/17bf31d6521c45f56301f6224732e514-image-1493336218041.32.29
            PM.png
        - text: https://images.code.org/50e0264011243637e12e4972d573d278-image-1493399022792.02.38
            AM.png
        title: 快速检查列表
      CSD U2 lists match_2018:
        answers:
        - text: https://images.code.org/c77491ea22b3b977383bfd2ca3655df1-image-1493336218041.31.27
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/d3be2ba9f4a398277f9663bbd5fdf783-image-1493336218042.31.59
            PM.png
        - text: https://images.code.org/1bbd9b340b51a295760f8daa4714cf84-image-1493336218035.32.21
            PM.png
        content1: 匹配列表和相对应的代码。
        markdown: " *提示：一些 HTML 列表有错误，想想代码里什么位置造成了这些错误。*\n\n"
        questions:
        - text: https://images.code.org/b7b998dd12e507d163d7dac0fcd37b8c-image-1493336218044.31.41
            PM.png
        - text: https://images.code.org/d9af5a34631dee994f99750f48f52b66-image-1493336218042.50.24
            PM.png
        - text: https://images.code.org/63b9f044db7dfa10d0486920e982f217-image-1493336218039.32.08
            PM.png
        - text: https://images.code.org/17bf31d6521c45f56301f6224732e514-image-1493336218041.32.29
            PM.png
        - text: https://images.code.org/50e0264011243637e12e4972d573d278-image-1493399022792.02.38
            AM.png
        title: 快速检查列表
      CSD U2 lists match_2018_2019:
        answers:
        - text: https://images.code.org/c77491ea22b3b977383bfd2ca3655df1-image-1493336218041.31.27
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/d3be2ba9f4a398277f9663bbd5fdf783-image-1493336218042.31.59
            PM.png
        - text: https://images.code.org/1bbd9b340b51a295760f8daa4714cf84-image-1493336218035.32.21
            PM.png
        content1: 匹配列表和相对应的代码。
        markdown: " *提示：一些 HTML 列表有错误，想想代码里什么位置造成了这些错误。*\n\n"
        questions:
        - text: https://images.code.org/b7b998dd12e507d163d7dac0fcd37b8c-image-1493336218044.31.41
            PM.png
        - text: https://images.code.org/d9af5a34631dee994f99750f48f52b66-image-1493336218042.50.24
            PM.png
        - text: https://images.code.org/63b9f044db7dfa10d0486920e982f217-image-1493336218039.32.08
            PM.png
        - text: https://images.code.org/17bf31d6521c45f56301f6224732e514-image-1493336218041.32.29
            PM.png
        - text: https://images.code.org/50e0264011243637e12e4972d573d278-image-1493399022792.02.38
            AM.png
        title: 快速检查列表
      CSD U2 project guide:
        content1: 描述
        markdown: |
          # 个人网站

          下面几关中，会完成并发布自己的个人网站。

          在网站上已经完成了很多工作了，现在有机会发挥创意，为自己感兴趣的内容增加新页面。

          这是一些新页面的主意，也可以在老师同意的情况下，做些别的。

          * 电影，电视或书的评论
          * 最喜欢的节日传统的描述
          * 解释对你重要的问题的 "原因" 页面

          如果有多个想法，可以为网站加入多个页面。

          项目指南会帮助记录所有要做的事情。确保在进入下一关以前，得到老师的同意。

          ## 示例

          [![](https://images.code.org/77ab5eb6cbec8541f8ec83134fbb2e2d-image-1494627985387.24.43 PM.png)](https://codeprojects.org/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/2e39e80cb5227d908426184019fd6b70-image-1494631930884.23.49 PM.png)](https://codeprojects.org/OhiVQD7XXnijdjNp2yFaIB5fyNDwsp9ymYo7gvEy8qg/)
      CSD U2 project guide_2018:
        content1: 描述
        markdown: |
          # 个人网站

          下面几关中，会完成并发布自己的个人网站。

          在网站上已经完成了很多工作了，现在有机会发挥创意，为自己感兴趣的内容增加新页面。

          这是一些新页面的主意，也可以在老师同意的情况下，做些别的。

          * 电影，电视或书的评论
          * 最喜欢的节日传统的描述
          * 解释对你重要的问题的 "原因" 页面

          如果有多个想法，可以为网站加入多个页面。

          项目指南会帮助记录所有要做的事情。确保在进入下一关以前，得到老师的同意。

          ## 示例

          [![](https://images.code.org/77ab5eb6cbec8541f8ec83134fbb2e2d-image-1494627985387.24.43 PM.png)](https://codeprojects.org/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/2e39e80cb5227d908426184019fd6b70-image-1494631930884.23.49 PM.png)](https://codeprojects.org/OhiVQD7XXnijdjNp2yFaIB5fyNDwsp9ymYo7gvEy8qg/)
      CSD U2 project guide_2018_2019:
        content1: 描述
        markdown: |
          # 个人网站

          下面几关中，会完成并发布自己的个人网站。

          在网站上已经完成了很多工作了，现在有机会发挥创意，为自己感兴趣的内容增加新页面。

          这是一些新页面的主意，也可以在老师同意的情况下，做些别的。

          * 电影，电视或书的评论
          * 最喜欢的节日传统的描述
          * 解释对你重要的问题的 "原因" 页面

          如果有多个想法，可以为网站加入多个页面。

          项目指南会帮助记录所有要做的事情。确保在进入下一关以前，得到老师的同意。

          ## 示例

          [![](https://images.code.org/77ab5eb6cbec8541f8ec83134fbb2e2d-image-1494627985387.24.43 PM.png)](https://codeprojects.org/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/2e39e80cb5227d908426184019fd6b70-image-1494631930884.23.49 PM.png)](https://codeprojects.org/OhiVQD7XXnijdjNp2yFaIB5fyNDwsp9ymYo7gvEy8qg/)
      CSD U3 - conditionals - Matching:
        answers:
        - text: dog.rotation &lt; cat.rotation
        - text: dog.x &lt; cat.x
        - text: dog.scale &gt; cat.scale
        - text: dog.x &gt; cat.x
        - text: dog.x == cat.x
        content1: 让布尔值表达式与描述一致。
        questions:
        - text: 是否狗精灵图的旋转要比猫精灵图少？
        - text: 是否狗精灵图的 x 比猫精灵图的 x 要小？
        - text: 是否狗精灵图的比例要大于猫精灵图的比例？
        - text: 是否狗精灵图的 x 比猫精灵图的 x 要大？
        - text: 是否狗精灵图的 x 与猫精灵图的 x 相等？
        title: 匹配：比较操作符
      CSD U3 - conditionals - Matching_2018:
        answers:
        - text: dog.rotation &lt; cat.rotation
        - text: dog.x &lt; cat.x
        - text: dog.scale &gt; cat.scale
        - text: dog.x &gt; cat.x
        - text: dog.x == cat.x
        content1: 让布尔值表达式与描述一致。
        questions:
        - text: 是否狗精灵图的旋转要比猫精灵图少？
        - text: 是否狗精灵图的 x 比猫精灵图的 x 要小？
        - text: 是否狗精灵图的比例要大于猫精灵图的比例？
        - text: 是否狗精灵图的 x 比猫精灵图的 x 要大？
        - text: 是否狗精灵图的 x 与猫精灵图的 x 相等？
        title: 匹配：比较操作符
      CSD U3 - conditionals - Matching_2018_2019:
        answers:
        - text: dog.rotation &lt; cat.rotation
        - text: dog.x &lt; cat.x
        - text: dog.scale &gt; cat.scale
        - text: dog.x &gt; cat.x
        - text: dog.x == cat.x
        content1: 让布尔值表达式与描述一致。
        questions:
        - text: 是否狗精灵图的旋转要比猫精灵图少？
        - text: 是否狗精灵图的 x 比猫精灵图的 x 要小？
        - text: 是否狗精灵图的比例要大于猫精灵图的比例？
        - text: 是否狗精灵图的 x 比猫精灵图的 x 要大？
        - text: 是否狗精灵图的 x 与猫精灵图的 x 相等？
        title: 匹配：比较操作符
      CSD U3 AnimationsMulti STOP project guide:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U3 AnimationsMulti STOP project guide_2018:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U3 AnimationsMulti STOP project guide_2018_2019:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U3 Boolean MC:
        answers:
        - text: |-
            true
            false
            true
          correct: true
        - text: |-
            0
            200
            100
        - text: |-
            true
            error
            true
        - text: |-
            false
            true
            false
        markdown: |
          # 布尔表达式

          在计算机上做决策，需要基于叫做 **布尔表达式** 的语句。布尔表达式是 **任何计算结果是 `TRUE` 或 `FALSE` 的表达式**。 当比较两个精灵图的属性时，这特别有用。例如：要知道哪个比较大，或哪个放得比较高。下面几关中，会使用简单的布尔表达式来比较精灵图属性。

          # 预测

          阅读代码。有些符号还没有介绍过。猜一猜它们的作用，并回答下列问题。
        questions:
        - text: 程序的控制台将打印出什么结果？
        title: 标题
      CSD U3 Boolean MC_2018:
        answers:
        - text: |-
            true
            false
            true
          correct: true
        - text: |-
            0
            200
            100
        - text: |-
            true
            error
            true
        - text: |-
            false
            true
            false
        markdown: |
          # 布尔表达式

          在计算机上做决策，需要基于叫做 **布尔表达式** 的语句。布尔表达式是 **任何计算结果是 `TRUE` 或 `FALSE` 的表达式**。 当比较两个精灵图的属性时，这特别有用。例如：要知道哪个比较大，或哪个放得比较高。下面几关中，会使用简单的布尔表达式来比较精灵图属性。

          # 预测

          阅读代码。有些符号还没有介绍过。猜一猜它们的作用，并回答下列问题。
        questions:
        - text: 程序的控制台将打印出什么结果？
        title: 标题
      CSD U3 Boolean MC_2018_2019:
        answers:
        - text: |-
            true
            false
            true
          correct: true
        - text: |-
            0
            200
            100
        - text: |-
            true
            error
            true
        - text: |-
            false
            true
            false
        markdown: |
          # 布尔表达式

          在计算机上做决策，需要基于叫做 **布尔表达式** 的语句。布尔表达式是 **任何计算结果是 `TRUE` 或 `FALSE` 的表达式**。 当比较两个精灵图的属性时，这特别有用。例如：要知道哪个比较大，或哪个放得比较高。下面几关中，会使用简单的布尔表达式来比较精灵图属性。

          # 预测

          阅读代码。有些符号还没有介绍过。猜一猜它们的作用，并回答下列问题。
        questions:
        - text: 程序的控制台将打印出什么结果？
        title: 标题
      CSD U3 Card Examples_2018:
        content1: 描述
        markdown: |
          # 自己的交互卡片

          下面的几关中，会完成自己的交互卡片。可以参考这些例子的想法。别忘了看看它们的代码是如何起作用的。

          ## 示例

          [![](https://images.code.org/7bbdbbb01c354a7c09bb4b9b5182a951-image-1522780803299.png)](https://studio.code.org/projects/gamelab/OzdFqrZ4oHPYsTddaRWaZxtTvdj9NzZVwCq6NkyONXM/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ed307e22854e4958a006d8023636cfd5-image-1522780803295.png)](https://studio.code.org/projects/gamelab/fmFrWsocELzP19CfbGI5P_hsgxN5ewVaB5f0Bw5S1_E/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ae0eca1dab46f13fcb21d4d0e264d637-image-1522780803298.png)](https://studio.code.org/projects/gamelab/z4XDrC0lsqoRY0xzYaXdJfChmyCl5O6YM-EOByecscc/edit)
      CSD U3 Card Examples_2018_2019:
        content1: 描述
        markdown: |
          # 自己的交互卡片

          下面的几关中，会完成自己的交互卡片。可以参考这些例子的想法。别忘了看看它们的代码是如何起作用的。

          ## 示例

          [![](https://images.code.org/7bbdbbb01c354a7c09bb4b9b5182a951-image-1522780803299.png)](https://studio.code.org/projects/gamelab/OzdFqrZ4oHPYsTddaRWaZxtTvdj9NzZVwCq6NkyONXM/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ed307e22854e4958a006d8023636cfd5-image-1522780803295.png)](https://studio.code.org/projects/gamelab/fmFrWsocELzP19CfbGI5P_hsgxN5ewVaB5f0Bw5S1_E/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ae0eca1dab46f13fcb21d4d0e264d637-image-1522780803298.png)](https://studio.code.org/projects/gamelab/z4XDrC0lsqoRY0xzYaXdJfChmyCl5O6YM-EOByecscc/edit)
      CSD U3 Collisions SFLP:
        markdown: |+
          # 概述

          学生会用新的交互方式来为精灵图编程。在简单回顾了如何使用 isTouching 模块后，班级会用头脑风暴找到其它让两个精灵图交互的方法。然后会用 isTouching 让一个精灵图推着另一个穿过屏幕，然后再练习四种碰撞模块（collide - 碰撞，displace - 置换，bounce - 弹跳，和 bounceOff - 反弹）。
          ## 词汇表

          * **抽象（abstraction）** - 简化不同问题的差异，使得一个方法能解决多个问题。

          ## 引入的代码

          * [sprite.bounceOff()](//studio.code.org/docs/gamelab/bounceOff/)
          * [sprite.collide()](//studio.code.org/docs/gamelab/collide/)
          * [sprite.displace()](//studio.code.org/docs/gamelab/displace/)
          * [sprite.setCollider()](//studio.code.org/docs/gamelab/setCollider/)
          * [sprite.bounce()](//studio.code.org/docs/gamelab/bounce/)
          * [sprite.bounciness](//studio.code.org/docs/gamelab/bounciness/)

      CSD U3 Defender SFLP:
        markdown: |
          # 概述

          本课介绍了在接下来的单元中设计游戏的流程。学生会在一系列的关卡中完成这个过程。作为课程的一部分，学生也会简单的学习使用游戏实验室中的多帧动画。课程的最后，学生有机会创作并改进自己的游戏。


          ## 资源

          * [项目指南 - 防守游戏 - 项目指南](https://docs.google.com/document/d/10tgS4d9feduPveRZSMzWV0TdyL6AL5VHHGFy_-m2XNQ/export?format=pdf)
      CSD U3 Entertainment:
        markdown: |+
          # 开始搜索

          要了解计算机科学和编程是如何在娱乐中发挥作用的，需要做一些调查。搜索 "计算机科学和娱乐"，还可以找找不同类型的娱乐，比如电影，电视，音乐，游戏，动画，时尚等等。


      CSD U3 Entertainment_2018_2019:
        markdown: |+
          # 开始搜索

          要了解计算机科学和编程是如何在娱乐中发挥作用的，需要做一些调查。搜索 "计算机科学和娱乐"，还可以找找不同类型的娱乐，比如电影，电视，音乐，游戏，动画，时尚等等。


      CSD U3 Functions Prediction define first:
        answers:
        - text: 红色正方形会画出来，但绿色的不会。不能在它们创建前调用函数。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 绿色正方形会画出来，但红色的不会。不能在它们创建前调用函数。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 两个正方形都会画出来。可以在任何地方创建函数。
          correct: true
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 没有正方形画出来。代码中有错误。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        markdown: |
          # 创建的函数写哪里重要吗？

          现在，函数都创建在了代码最下面。如果在定义函数之前就调用它，会发生什么？

          注意，红色正方形在它的函数创建 **之前** 调用了，而绿色正方形是在它的函数创建 **之后** 调用的。画出来的图形会是什么样的？
      CSD U3 Functions Prediction define first_2018:
        answers:
        - text: 红色正方形会画出来，但绿色的不会。不能在它们创建前调用函数。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 绿色正方形会画出来，但红色的不会。不能在它们创建前调用函数。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 两个正方形都会画出来。可以在任何地方创建函数。
          correct: true
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 没有正方形画出来。代码中有错误。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        markdown: |
          # 创建的函数写哪里重要吗？

          现在，函数都创建在了代码最下面。如果在定义函数之前就调用它，会发生什么？

          注意，红色正方形在它的函数创建 **之前** 调用了，而绿色正方形是在它的函数创建 **之后** 调用的。画出来的图形会是什么样的？
      CSD U3 Functions Prediction define first_2018_2019:
        answers:
        - text: 红色正方形会画出来，但绿色的不会。不能在它们创建前调用函数。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 绿色正方形会画出来，但红色的不会。不能在它们创建前调用函数。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 两个正方形都会画出来。可以在任何地方创建函数。
          correct: true
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        - text: 没有正方形画出来。代码中有错误。
          feedback: 函数可以在代码的任何位置创建。但将函数放在下面是比较好的组织方法！
        markdown: |
          # 创建的函数写哪里重要吗？

          现在，函数都创建在了代码最下面。如果在定义函数之前就调用它，会发生什么？

          注意，红色正方形在它的函数创建 **之前** 调用了，而绿色正方形是在它的函数创建 **之后** 调用的。画出来的图形会是什么样的？
      CSD U3 Functions SFLP:
        markdown: |+
          # 概述

          本课讲述了函数是组织代码的一种方法，能让代码更易阅读，减少重复的代码。学生们会学习一些更高级或更抽象的步骤，这样有助于理解这些步骤的原因，然后在游戏实验室中创建函数。在课程的最后，学生会用学会的知识来为滚动条游戏组织代码并添加新功能。
          ## 词汇表

          * **函数（function）** - 能够很容易的多次调用的代码段。

          ## 引入的代码

          * [定义函数](//studio.code.org/docs/gamelab/functionParams_none/)
          * [调用函数](//studio.code.org/docs/gamelab/callMyFunction/)

      CSD U3 Keypress Matching:
        answers:
        - text: keyWentDown()
        - text: keyWentUp()
        - text: keyDown()
        content1: 根据按键模块的描述来匹配它的功能。如果要再试试，可随时返回上一关。
        questions:
        - text: 仅当按键被按下时为真且单次有效。
        - text: 仅当按键被松开时为真且单次有效。
        - text: 当按键被按下或松开时均为真。
        title: 匹配：响应按键
      CSD U3 Keypress Matching_2018:
        answers:
        - text: keyWentDown()
        - text: keyWentUp()
        - text: keyDown()
        content1: 根据按键模块的描述来匹配它的功能。如果要再试试，可随时返回上一关。
        questions:
        - text: 仅当按键被按下时为真且单次有效。
        - text: 仅当按键被松开时为真且单次有效。
        - text: 当按键被按下或松开时均为真。
        title: 匹配：响应按键
      CSD U3 Keypress Matching_2018_2019:
        answers:
        - text: keyWentDown()
        - text: keyWentUp()
        - text: keyDown()
        content1: 根据按键模块的描述来匹配它的功能。如果要再试试，可随时返回上一关。
        questions:
        - text: 仅当按键被按下时为真且单次有效。
        - text: 仅当按键被松开时为真且单次有效。
        - text: 当按键被按下或松开时均为真。
        title: 匹配：响应按键
      CSD U3 Lesson Overview 1:
        markdown: |
          # 概述

          班级需要考虑无聊和表达自我的 "问题"，反思怎样在生活中处理这类问题。从这里，要开始探索计算机科学是多么广泛，特别是编程。可在某个娱乐项目或媒介中自我表达来扮演角色。


          ## 资源

          * [娱乐中的计算机科学 - 活动指南](https://docs.google.com/document/d/1RtwJU7Lh2dKdGoj-zfF1pjn-yxhkwP-05G8pgdYi-BY/export?format=pdf)
      CSD U3 Lesson Overview 10:
        markdown: |
          # 概述

          本课会介绍布尔（boolean）值和逻辑，以及条件语句。学生会从玩一个简单的起立、坐下游戏开始，通过布尔（真、假）语句来描述个人的属性（头发、眼睛颜色、衣服类型、年龄等等）。然后会增加布尔语句的复杂性，并看看条件是如何影响程序执行的。
          ## 词汇表

          * **布尔 （boolean）** - 一个简单的值，为 TRUE（真） 或 FALSE（假）
          * **条件 （conditionals）** - 只在某些条件下运行的代码。
          * **表达式 （expression）** - 可以解析为一个值的代码。


          ## 资源

          * [布尔属性 - 活动指南](https://docs.google.com/document/d/1kRNIUD5Z3r7HK9twMPMnenyEFPh9ouMsJKIb4T0-6so/export?format=pdf)
      CSD U3 Lesson Overview 11:
        markdown: |
          # 概述

          班级从用布尔来比较精灵属性的当前值和目标值开始，通过比较来确定精灵是否到达了屏幕上的某个点，长到某个大小，否则会用计数器模式到达某个值。在使用了布尔值直接查看精灵属性或值以后，学生会添加条件的如果语句来响应布尔值的比较结果。
          ## 词汇表

          * **布尔表达式** - 在程序中，运行结果是 True 或 False。
          * **如果语句** - 实现 "条件语句" 的通用编程结构。

          ## 引入的代码

          * [如果语句](//studio.code.org/docs/gamelab/ifBlock/)
          * [小于操作符](//studio.code.org/docs/gamelab/lessThanOperator/)
          * [不等于操作符](//studio.code.org/docs/gamelab/inequalityOperator/)
          * [小于等于操作符](//studio.code.org/docs/gamelab/lessThanOrEqualOperator/)
          * [大于操作符]](//studio.code.org/docs/gamelab/greaterThanOperator/)
          * [等于操作符](//studio.code.org/docs/gamelab/equalityOperator/)
          * [大于等于操作符](//studio.code.org/docs/gamelab/greaterThanOrEqualOperator/)
      CSD U3 Lesson Overview 12:
        markdown: |
          # 概述

          根据前面课程对布尔值和如果语句的介绍，学生们会学到新的 keyDown() 模块，它会返回布尔值，并用在条件语句中用来移动精灵图。最后，学生们会写程序来通过用户的键盘输入来控制屏幕上的精灵图。

          ## 引入的代码

          * [keyDown()](//studio.code.org/docs/gamelab/keyDown/)

          ## 资源

          * [布尔表达式](https://youtu.be/y3rCKJNOwpA) - 视频 ([下载](https://videos.code.org/2015/csp/applab/conditionals_1.mp4))
      CSD U3 Lesson Overview 13:
        markdown: |+
          # 概述

          学生会继续探索使用条件语句来获取用户输入的方法。除了已经学会的简单的 keyDown() 命令，学生还会学习一些其它的输入命令来获取鼠标的输入。
          ## 词汇表

          * **条件** - 在某些条件下才运行的语句。

          ## 引入的代码

          * [keyWentUp()](//studio.code.org/docs/gamelab/keyWentUp/)
          * [mouseWentDown()](//studio.code.org/docs/gamelab/mouseWentDown/)
          * [mouseWentUp()](//studio.code.org/docs/gamelab/mouseWentUp/)
          * [keyWentDown()](//studio.code.org/docs/gamelab/keyWentDown/)
          * [mouseDown()](//studio.code.org/docs/gamelab/mouseDown/)
          * [mouseDidMove()](//studio.code.org/docs/gamelab/mouseDidMove/)
          * [sprite.visible](//studio.code.org/docs/gamelab/visible/)
          * [如果/否则 语句 （if/else）](//studio.code.org/docs/gamelab/ifElseBlock/)

      CSD U3 Lesson Overview 14:
        markdown: |
          # 概述

          这是第 1 章的连续项目，学生会使用学到的所有编程技巧来计划并开发交互的卡片。


          ## 资源

          * [交互卡片 - 项目指南](https://docs.google.com/document/d/1PtGpvAAyCYa_glecPhytGPrZau9ElJfJRhnVogFEqv4/export?format=pdf)
          * [交互卡片 - 专栏](https://docs.google.com/document/d/1EdEpsowofT8WGQSFvzYVF53HEKipLYdWULtjLgpOEBw/export?format=pdf)
          * [交互卡片 - 相互评审](https://docs.google.com/document/d/1aVP_8YU-JWkxVvRiituCOf66w7refwDaecNBLMZkKgs/export?format=pdf)
      CSD U3 Lesson Overview 2:
        markdown: |
          # 概述

          本课探索了沟通中的挑战，如何画出各种形状，在游戏实验室中使用工具来引入此问题。班级使用游戏实验室的工具来在 400x400 的网格中交互画出图形。伙伴们会使用此工具，通过别人的指示来画出隐藏的图形，解决游戏实验室里的编程挑战。


          ## 资源

          * [画图形 - 活动指南](https://docs.google.com/document/d/1BKFLM2cmov3Lh23vsw1hGfUwTz9bM-diFCGHBf_GH6Y/export?format=pdf)
      CSD U3 Lesson Overview 3:
        markdown: |+
          # 概述

          班级会开始接触游戏实验室，这是本单元的编程环境，会用它定位屏幕上的图形。本课会介绍基本的序列和调试，也会有一些简单的命令。在课程结束时，学生会将上节课的图像做成在线版本。
          ## 词汇表

          * **缺陷（bug）** - 程序中不正常的部分。
          * **调试（debug）** - 找到并修复算法或程序中的问题。
          * **程序（program）** - 能在某台机器上运行的代码。

          ## 引入的代码

          * [ellipse() （椭圆）](//studio.code.org/docs/gamelab/ellipse/)
          * [rect() （矩形）](//studio.code.org/docs/gamelab/rect/)
          * [fill() （填充）](//studio.code.org/docs/gamelab/fill/)

      CSD U3 Lesson Overview 4:
        markdown: |+
          # 概述

          本课会扩展画图技巧，包括宽、高，以及生成随机数的概念。班级会学习画出不同版本的 ellipse() 和rect()，会实现宽和高的参数，并使用 background() 模块来填充屏幕的背景色。课程最后，会介绍 randomNumber() 模块，用新模块画出随机的彩虹蛇。
          ## 词汇表

          * **参数（parameter）** - 根据需要定制函数，来传递的额外信息。

          ## 引入的代码

          * [background() （背景色）](//studio.code.org/docs/gamelab/background/)
          * [ellipse() （椭圆）](//studio.code.org/docs/gamelab/ellipse/)
          * [rect() （矩形）](//studio.code.org/docs/gamelab/rect/)
          * [randomNumber() （随机数）](//studio.code.org/docs/gamelab/randomNumber/)

      CSD U3 Lesson Overview 5:
        markdown: |
          # 概述

          本课介绍了在程序中使用变量来标记数字，或保存随机生成的值。班级会从非常基础的变量意义开始，并练习使用新模块。随后，会用变量来保存随机数字，让程序可以多次使用这个随机数字。
          ## 词汇表

          * **变量（variable）** - 可以改动信息的占位符。

          ## 引入的代码

          * [声明变量](//studio.code.org/docs/gamelab/declareNoAssign_x/)
          * [声明变量并赋值](//studio.code.org/docs/gamelab/declareAssign_x/)

          ## 资源

          * [变量的介绍](https://youtu.be/G41G_PEWFjE) - 视频 ([可下载](https://videos.code.org/2015/csp/applab/variables_1.mp4))
      CSD U3 Lesson Overview 6:
        markdown: |
          # 概述

          为了创建更有趣，更多细节的图像，会为班级介绍精灵图对象。每个精灵图都可以显示一张图片，精灵图也可以保存多个值，这样可以方便的显示动画。课程结束时，学生们会使用精灵图创建出一个场景。
          ## 词汇表

          * **属性 （property）** - 描述目标特征的一些信息
          * **精灵图 （sprite）** - 在屏幕上的一个图形角色，有一些属性来描述位置、动作、外观等等。

          ## 引入的代码

          * [drawSprites()](//studio.code.org/docs/gamelab/drawSprites/)
          * [sprite.scale](//studio.code.org/docs/gamelab/scale/)
          * [var sprite = createSprite()](//studio.code.org/docs/gamelab/createSprite/)

          ## 资源

          * [精灵图场景 - 活动指南](https://docs.google.com/document/d/1I5w4VKBu4qPmoSSve_AwyaVQ47FWkJ-fSq4zfmQCsG8/export?format=pdf)
      CSD U3 Lesson Overview 7:
        markdown: |+
          # 概述

          本课介绍了画图循环，这是游戏实验室中重要的编程模式。本课会将画图循环与随机数组合起来，控制一些简单的动物，然后使用精灵图。最后，大家会用学会的知识来修改上节课的精灵图场景。
          ## 词汇表

          * **动画 （animation）** - 快速的顺序显示一系列的图片，让人产生运动的错觉
          * **帧 （frame）** - 动画中的单张图片
          * **帧率 （frame rate）** - 动画中显示帧的速度，一般以每秒显示帧的数量来衡量

          ## 引入的代码

          * [World.frameRate](//studio.code.org/docs/gamelab/World.frameRate/)
          * [function draw() {}](//studio.code.org/docs/gamelab/draw/)


      CSD U3 Lesson Overview 8:
        markdown: |
          # 概述

          本线下课程会探索变量的基本行为。用记录卡和字符串来模拟程序中的变量，班级会实现一个非常短的程序。一旦习惯了语法，班级用精灵图属性一样的过程，来在屏幕上跟踪精灵图的变化。
          ## 词汇表

          * **表达式 （expression)** - 代码中一段可以解析值的部分。
          * **变量 （variable）** - 一段可变化信息的占位符。


          ## 资源

          * [线下的变量 - 活动指南](https://docs.google.com/document/d/12-tfreuhFfNnxzBSl4dsLavDptTIruVcRiC3AzGKq1Y/export?format=pdf)
          * [线下的变量板 - 操作](https://docs.google.com/document/d/1hxwkz9ed4Qd3KvKJ7MLQdgKGOtItXQ_qaYRQfZcfRn8/export?format=pdf)
      CSD U3 Lesson Overview 9:
        markdown: |+
          # 概述

          通过组合画图循环和计数器模式，本课写出程序来移动精灵图穿过屏幕，还会做其它的精灵图属性动画。


      CSD U3 Movement Challenges:
        markdown: |
          # 挑战

          _在进行任何挑战前，先获得老师的同意。_

          * 返回 [15 关](15) 继续编写动画。首先要取消提交的项目，完成后再次提交。
          * 返回 [12 关](12) 继续编写鱼的动画。试试随机改变鱼的方向，让它们看起来像是在有用。
          * 返回 [13 关](13) 继续齿轮的动画。试试添加更多不同大小的齿轮，并调整它们的转速，来让它们看起来能正确的啮合。
          * 打开 [完整的游戏实验室](/projects/gamelab/new) 来从头创建新的动画。
      CSD U3 Project Build a Game SFLP:
        markdown: |
          # 概述

          在前两节课中，学生根据项目指南，来计划并构建了游戏。独立或结对工作，学生们计划、开发游戏并相互反馈。合并了伙伴的反馈后，学生们会分享出完成的游戏。


          ## 资源

          * [制作自己的游戏 - 项目指南](https://docs.google.com/document/d/1SBye25XfdnytxCrc6a_OtpcS02YsT99nyJ9Vjwp_zeo/export?format=pdf)
          * [制作自己的游戏 - 专栏](https://docs.google.com/document/d/1WChOizSb4gZsEbdER5KwYXj9c6Ogpeuv0AzegJ5HD8A/export?format=pdf)
          * [制作自己的游戏 - 相互评审](https://docs.google.com/document/d/1ORjDuRep39xwiFaz20_jF74eWB63FVtK2FIQhq7Wecg/export?format=pdf)
      CSD U3 SFLP Velocity:
        markdown: |
          # 概述

          了解了计数器模式是如何用来移动精灵图后，学生会了解用于设置速度和旋转速度的属性。这些使用这些新属性的方法，可以用来创建基本的滚动条游戏。

          ## 引入的代码

          * [sprite.velocityY](//studio.code.org/docs/gamelab/velocityY/)
          * [sprite.velocityX](//studio.code.org/docs/gamelab/velocityX/)
          * [sprite.rotationSpeed](//studio.code.org/docs/gamelab/rotationSpeed/)
      CSD U3 Sprite Movement Predict Multi:
        answers:
        - text: "![](https://images.code.org/649915789345f5958475cd2b91e0630c-image-1491939133180.gif)"
        - text: "![](https://images.code.org/2f5e7773ae2f99d6217929bd58490393-image-1491939162998.gif)"
        - text: "![](https://images.code.org/7c43fbce8cbbe7c15614203290f806e7-image-1491939169414.gif)"
          correct: true
        - text: "![](https://images.code.org/c62dbed9a37b03958cb056bf493bd59c-image-1491939175575.gif)"
        questions:
        - text: 都程序，并预测会产生下列哪个动画。
      CSD U3 Sprite Movement Predict Multi_2018:
        answers:
        - text: "![](https://images.code.org/649915789345f5958475cd2b91e0630c-image-1491939133180.gif)"
        - text: "![](https://images.code.org/2f5e7773ae2f99d6217929bd58490393-image-1491939162998.gif)"
        - text: "![](https://images.code.org/7c43fbce8cbbe7c15614203290f806e7-image-1491939169414.gif)"
          correct: true
        - text: "![](https://images.code.org/c62dbed9a37b03958cb056bf493bd59c-image-1491939175575.gif)"
        questions:
        - text: 都程序，并预测会产生下列哪个动画。
      CSD U3 Sprite Movement Predict Multi_2018_2019:
        answers:
        - text: "![](https://images.code.org/649915789345f5958475cd2b91e0630c-image-1491939133180.gif)"
        - text: "![](https://images.code.org/2f5e7773ae2f99d6217929bd58490393-image-1491939162998.gif)"
        - text: "![](https://images.code.org/7c43fbce8cbbe7c15614203290f806e7-image-1491939169414.gif)"
          correct: true
        - text: "![](https://images.code.org/c62dbed9a37b03958cb056bf493bd59c-image-1491939175575.gif)"
        questions:
        - text: 都程序，并预测会产生下列哪个动画。
      CSD U3 Sprites intro predict multi:
        answers:
        - text: "![](https://images.code.org/9b55104462fe654f5f5410e635671c36-image-1579828016057.png)"
        - text: "![](https://images.code.org/03bee2faf00d4edb534098397596df49-image-1579828016060.png)"
        - text: "![](https://images.code.org/f7641c6d502ccae8c6e311a7b764ea4e-image-1579828016054.png)"
          correct: true
        - text: "![](https://images.code.org/cd6993477eac8964c01303661ef4e9ce-image-1579828016062.png)"
        questions:
        - text: 当运行时，精灵图 `mySprite` 会在何处？
      CSD U3 Sprites intro predict multi_2018:
        answers:
        - text: "![](https://images.code.org/ad526743d374c692b411f61a52b89398-image-1579828535705.png)"
          correct: true
        - text: "![](https://images.code.org/975d041b251956c9f821ab976f22a005-image-1579828535713.png)"
        - text: "![](https://images.code.org/6e19ea3d0036aa734e9b9cd6a4b3fbc8-image-1579828535708.png)"
        - text: "![](https://images.code.org/d3f8937565496bba2654f0eb3935554b-image-1579828535710.png)"
        questions:
        - text: 当运行时，精灵图 `mySprite` 会在何处？
      CSD U3 Sprites intro predict multi_2018_2019:
        answers:
        - text: "![](https://images.code.org/8ca2c292184206f6b197b5818ac2af7c-image-1580245775794.png)"
          correct: true
        - text: "![](https://images.code.org/2176c09b3f0e422581bef15c4e6ec4eb-image-1580245775797.png)"
        - text: "![](https://images.code.org/62791d20c9fb0acd71ae0d11edfb639b-image-1580245775799.png)"
        - text: "![](https://images.code.org/3624e09a23ed5409b3dae36e82d79233-image-1580245775795.png)"
        questions:
        - text: 当运行时，精灵图 `mySprite` 会在何处？
      CSD U3 Using the Game Design Process SLFP:
        markdown: |
          # 概述

          在几天的课程中，学生从第一单元开始，使用解决问题的流程来创建平台跳跃游戏。在观看了示例游戏后，学生定义游戏应该是什么样子，并用结构化的方法来创建它。最后，学生会反思游戏时如何改进的，并实现这些改动。


          ## 资源

          * [计划平台游戏 - 项目指南](https://docs.google.com/document/d/1-h8vfW6PfppsDKKqVeVDMU6FxbPP8tA1Up_oc5_p9Dk/export?format=pdf)
      CSD U3 combining rep:
        content1: 描述
        markdown: |+
          ### 能解码这个二进制字符串吗？



          # 1000011



          ### 需要什么样的信息来帮助解码？

      CSD U3 combining rep_2018:
        content1: 描述
        markdown: |+
          ### 能否解码这个二进制字符串？



          ![](https://images.code.org/3aa6cac930e44cdc71b8fdcb7b1babe9-image-1531247036544.23.16 AM.png)



          ### 什么信息能帮助解码？

      CSD U3 combining rep_2018_2019:
        content1: 描述
        markdown: |+
          ### 能否解码这个二进制字符串？



          ![](https://images.code.org/3aa6cac930e44cdc71b8fdcb7b1babe9-image-1531247036544.23.16 AM.png)



          ### 什么信息能帮助解码？

      CSD U3 drawSprites placement match:
        answers:
        - text: https://images.code.org/131282b44fe34cd619a9a21bc68888da-image-1523902103487.58.48
            AM.png,300px
        - text: https://images.code.org/2fbe4029dc47f6f048e7c9f90ac99cac-image-1523902103485.25.09
            AM.png
        - text: https://images.code.org/c4cb49e00f7087765865da87cff37549-image-1523902103477.58.00
            AM.png
        - text: https://images.code.org/7465035fc6701dcb91731fe9d160b638-image-1523902103481.58.28
            AM.png
        content1: 将代码所生成的图像与之连线。
        questions:
        - text: https://images.code.org/cd11d762b2cb3e36c3d45157b965c968-image-1523901253224.59.08
            AM.png
        - text: https://images.code.org/653dff2d49f07341b2f2552747212b34-image-1523901253222.59.21
            AM.png
        - text: https://images.code.org/db71e0cde6861faabc0b5a55d67c739e-image-1523901253227.58.12
            AM.png
        - text: https://images.code.org/15d6014329fa3da9b73016af9f1d0d74-image-1523901253226.58.34
            AM.png
        title: drawSprites
      CSD U3 drawSprites placement match_2019:
        answers:
        - text: https://images.code.org/131282b44fe34cd619a9a21bc68888da-image-1523902103487.58.48
            AM.png,300px
        - text: https://images.code.org/2fbe4029dc47f6f048e7c9f90ac99cac-image-1523902103485.25.09
            AM.png
        - text: https://images.code.org/c4cb49e00f7087765865da87cff37549-image-1523902103477.58.00
            AM.png
        - text: https://images.code.org/7465035fc6701dcb91731fe9d160b638-image-1523902103481.58.28
            AM.png
        content1: 将代码所生成的图像与之连线。
        questions:
        - text: https://images.code.org/cd11d762b2cb3e36c3d45157b965c968-image-1523901253224.59.08
            AM.png
        - text: https://images.code.org/653dff2d49f07341b2f2552747212b34-image-1523901253222.59.21
            AM.png
        - text: https://images.code.org/db71e0cde6861faabc0b5a55d67c739e-image-1523901253227.58.12
            AM.png
        - text: https://images.code.org/15d6014329fa3da9b73016af9f1d0d74-image-1523901253226.58.34
            AM.png
        title: drawSprites
      CSD U3 game intro:
        content1: 描述
        markdown: |
          # 创建自己的游戏

          现在已经学会了所有需要的技巧，该创建自己的游戏了！

          与伙伴来一场头脑风暴，为游戏找一些不同的想法。可以想想见过的游戏，或者多看看示例游戏来获得灵感。

          [<img src="https://images.code.org/fc2d4cdba80a476b1ff476081991031e-image-1498594631779.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/AwDcX5nehOApfzyywI6BOLT1xbf0MIV1dUj8KjQaNtA)

          [<img src="https://images.code.org/b89895bdd43be4b729ca9165fc2923cf-image-1498595512898.28.24 PM.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/r9OYVTSj2od8vaCA-nKikTVpx-2Co8qHhuZiBIu30JA)

          [<img src="https://images.code.org/d430061caab264330da0227b53e2db90-image-1498595505047.27.59 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/hAz7RSdqc0c_MSQVUpvz1XrLDr8QLsansWDVI0ZberQ)

          [<img src="https://images.code.org/c9fb241c5684e10d9ba2b85d4d4a906b-image-1498764384615.25.58 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/DmRPNYR3n7bMO--_KkP7r6mOoGynBVyi3BMVPWDiVeI)

          一旦与伙伴确定了游戏类型，在项目指南中填写游戏中需要的背景、变量、精灵图和函数。接下来的几关会用来创建这个游戏。
      CSD U3 game intro_2018:
        content1: 描述
        markdown: |
          # 创建自己的游戏

          现在已经学会了所有需要的技巧，该创建自己的游戏了！

          与伙伴来一场头脑风暴，为游戏找一些不同的想法。可以想想见过的游戏，或者多看看示例游戏来获得灵感。

          [<img src="https://images.code.org/fc2d4cdba80a476b1ff476081991031e-image-1498594631779.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/AwDcX5nehOApfzyywI6BOLT1xbf0MIV1dUj8KjQaNtA)

          [<img src="https://images.code.org/b89895bdd43be4b729ca9165fc2923cf-image-1498595512898.28.24 PM.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/r9OYVTSj2od8vaCA-nKikTVpx-2Co8qHhuZiBIu30JA)

          [<img src="https://images.code.org/d430061caab264330da0227b53e2db90-image-1498595505047.27.59 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/hAz7RSdqc0c_MSQVUpvz1XrLDr8QLsansWDVI0ZberQ)

          [<img src="https://images.code.org/c9fb241c5684e10d9ba2b85d4d4a906b-image-1498764384615.25.58 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/DmRPNYR3n7bMO--_KkP7r6mOoGynBVyi3BMVPWDiVeI)

          一旦与伙伴确定了游戏类型，在项目指南中填写游戏中需要的背景、变量、精灵图和函数。接下来的几关会用来创建这个游戏。
      CSD U3 game intro_2018_2019:
        content1: 描述
        markdown: |
          # 创建自己的游戏

          现在已经学会了所有需要的技巧，该创建自己的游戏了！

          与伙伴来一场头脑风暴，为游戏找一些不同的想法。可以想想见过的游戏，或者多看看示例游戏来获得灵感。

          [<img src="https://images.code.org/fc2d4cdba80a476b1ff476081991031e-image-1498594631779.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/AwDcX5nehOApfzyywI6BOLT1xbf0MIV1dUj8KjQaNtA)

          [<img src="https://images.code.org/b89895bdd43be4b729ca9165fc2923cf-image-1498595512898.28.24 PM.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/r9OYVTSj2od8vaCA-nKikTVpx-2Co8qHhuZiBIu30JA)

          [<img src="https://images.code.org/d430061caab264330da0227b53e2db90-image-1498595505047.27.59 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/hAz7RSdqc0c_MSQVUpvz1XrLDr8QLsansWDVI0ZberQ)

          [<img src="https://images.code.org/c9fb241c5684e10d9ba2b85d4d4a906b-image-1498764384615.25.58 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/DmRPNYR3n7bMO--_KkP7r6mOoGynBVyi3BMVPWDiVeI)

          一旦与伙伴确定了游戏类型，在项目指南中填写游戏中需要的背景、变量、精灵图和函数。接下来的几关会用来创建这个游戏。
      CSD U3 platform intro:
        content1: 描述
        markdown: |
          # 创建平台跳跃者

          接下来的几关，会创建一个平台跳跃游戏。在开始前，要看一下这个项目的项目指南。在点击下一关以前，要等待老师的说明。
      CSD U3 platform intro_2018:
        content1: 描述
        markdown: |
          # 创建平台跳跃者

          接下来的几关，会创建一个平台跳跃游戏。在开始前，要看一下这个项目的项目指南。在点击下一关以前，要等待老师的说明。
      CSD U3 platform intro_2018_2019:
        content1: 描述
        markdown: |
          # 创建平台跳跃者

          接下来的几关，会创建一个平台跳跃游戏。在开始前，要看一下这个项目的项目指南。在点击下一关以前，要等待老师的说明。
      CSD U4L01 SFLP:
        markdown: |
          # 概述

          本课会学习，与用户需求产生共鸣，是设计流程中非常重要的部分。然后，会调研一组产品，思考并批判它们是如何满足多种需求的。

          ## 词汇表

          * **批判（critique）** - 明确和有建设性的评价方法。
          * **共鸣（empathy）** - 在设计产品时，要注意用户的感受和需求。
          * **用户（user）** - 使用软件或硬件的人。

          ## 资源

          * [确定用户](https://docs.google.com/document/d/1X0qwGigSXa1hq6Q6dws3PxHryGhEyCgkaEHyJCMgvj4/export?format=pdf) - 活动指南
          * [共鸣的解决问题的过程](https://staging.code.org/curriculum/docs/csd/PSPE.png) - 图片
      CSD U4L02 SFLP:
        markdown: |
          # 概述

          设计者需要理解用户的需求。这节课中，会根据用户资料来扮演另一个人，并使用一系列的产品，从而能思考如何为别人设计产品。

          ## 词汇表

          * **易用性（usability）** - 在使用人造物体或设备（包括软件）时，有多容易、有效并满意。

          ## 资源

          * [像用户一样操作](https://docs.google.com/document/d/1cQXtr4zj3LEuOMoOYJf8KtBUl9ge3qmwBBzEBv8GixA/export?format=pdf) - 活动指南


          * [人物简介 1](https://docs.google.com/document/d/1N6Ks8rp6YoLgsbA3FE0x9RatJY3znevnMkMyUN3yRE8/export?format=pdf) - 用户资料
          * [人物简介 2](https://docs.google.com/document/d/14nHf-TzkKBUC0hvYlcviVe-S9wDdo1TqPUIcnTcHMzw/export?format=pdf) - 用户资料
          * [人物简介 3](https://docs.google.com/document/d/1Nw_0v_uGCe4J_tcimhyJiWKYgw4jhNgg8qP1zo4GddE/export?format=pdf) - 用户资料
          * [人物简介 4](https://docs.google.com/document/d/1kRKQYsomhS9UakiDazQ9dXNk8AIWHaq082Y4wBflK34/export?format=pdf) - 用户资料
      CSD U4L03 SFLP:
        markdown: |
          # 概述

          这节课会从头设计一个产品来满足用户需求。有各种方法来做，但前面学过的如何进行头脑风暴并分类想法，是非常有用的方法。

          ## 资源

          * [以用户为中心的设计](https://docs.google.com/document/d/1HxcW76EFNVIJykCVELgjr4WRpFjPgrVvz9tURRR1gWY/export?format=pdf) - 活动指南
      CSD U4L04 SFLP:
        markdown: |
          # 概述

          这节课会学习，什么是应用，以及如何设计应用来满足用户需要。还会学到如何使用原型来创建一部分软件的草稿。

          ## 词汇表

          * **原型（prototype）** - 产品最初或早期的模型，能在开发最终版前用来验证一些想法。
          * **用户界面（user interface）** - 程序的可见元素，能让用户控制或与应用程序交流。通常缩写为 UI。


          ## 资源

          * [用户界面屏幕](https://docs.google.com/document/d/1JOVsR0T5P7zQ6LdxfDjRSsX1EC8xk0TYZKe7X_GjYlk/export?format=pdf) - 活动指南
          * [用户测试 (计算机)](https://docs.google.com/document/d/1Rtla8WSmJol6sHT5SToep5_hhTM5I8z3UjA7yCap-nw/export?format=pdf) - 活动指南
          * [用户测试 (用户)](https://docs.google.com/document/d/1IPu6hsHRui_ChXogq0nklAUuPUae2yx0RaADW9b4Nrs/export?format=pdf) - 活动指南
      CSD U4L05 SFLP:
        markdown: |
          # 概述

          这节课会学习如何仔细的阅读产品反馈，从而找到想要表达的需求。然后更新纸面的原型来更好的满足需求。

          ## 资源

          * [用户界面屏幕](https://docs.google.com/document/d/1JOVsR0T5P7zQ6LdxfDjRSsX1EC8xk0TYZKe7X_GjYlk/export?format=pdf) - 活动指南
          * [原型反馈](https://docs.google.com/document/d/1DzoLUATK8k1lyr_TLhR4mJ5UHLhrZN6-sLRay0tLX4Q/export?format=pdf) - 活动指南
          * [改进屏幕](https://docs.google.com/document/d/1y0YfE6qZKKlRRpeVGU2d-SuctJP9P5fI2062yo85nZg/export?format=pdf) - 活动指南
      CSD U4L06 SFLP:
        markdown: |
          # 概述

          目前，一直在学习为有些距离的用户来设计产品。无论通过头脑风暴，用户资料，文本反馈，都不是与最终用户的直接联系。这节课中，可以直接采访伙伴，来设计应用满足他们的需求。

          ## 资源

          * [采访用户](https://docs.google.com/document/d/1u3mOVcBHWJpsMJwrvjb4_B8532xg774hkiWPEH7fbqQ/export?format=pdf) - 活动指南
          * [项目 - 纸面原型](https://docs.google.com/document/d/12dSfN9z_sEbo41hx4reMUQxl399RjbE5cgCKl0rCHz4/export?format=pdf) - 活动指南
      CSD U4L07 SFLP:
        markdown: |
          # 概述

          基于上节课进行的采访，设计一个应用能帮助伙伴，来克服学习新东西时的障碍。


          ## 资源

          * [纸面原型规则](https://docs.google.com/document/d/16llO0PF7rJhz_ImtNDAxG3MAt9vU6QVGpDSPGoi_-04/export?format=pdf) - 规则
          * [项目 - 纸面原型](https://docs.google.com/document/d/12dSfN9z_sEbo41hx4reMUQxl399RjbE5cgCKl0rCHz4/export?format=pdf) - 活动指南
      CSD U4L08 SFLP:
        markdown: |+
          # 概述

          要开始应用的设计项目，学生要分组，并开始探索应用的主题。可以通过几个有社会影响力的应用来获得灵感。


          ## 资源

          * [开始应用设计](https://docs.google.com/document/d/1u5oTuQcEV0sweTA6bEER_wZT6FKoX7EqX8JdiY8YCAA/export?format=pdf) - 活动指南

      CSD U4L09 SFLP:
        markdown: |
          # 概述

          通过探索已有的，能满足类似用户的应用来开始开发。每个小组都找到了一组应用，这些应用与小组正在进行的主题一样。用这些应用来帮助改进现有的一些想法。


          ## 资源

          * [市场调研](https://docs.google.com/document/d/1zDS5HCQ3nTwWHh4Dr4Ix17Db9fMRVJA8lNefwdcjiA0/export?format=pdf) - 活动指南
      CSD U4L10 SFLP:
        markdown: |
          # 概述

          纸面原型能让开发人员在写大量代码前，快速验证想法。在这节课中，小组会探索一些应用实验室已有的示例应用，通过这些来帮助创建第一个纸面原型。
          ## 词汇表

          * **原型（prototype）** - 产品最初或早期的模型，能在开发最终版前用来验证一些想法。


          ## 资源

          * [电话纸面原型](https://drive.google.com/open?id=0B2UNlnU_5Vg4c1VJZ1Zrd0NXUkE) - 模板
          * [午餐吃什么](https://docs.google.com/drawings/d/12qoCyr8ApVLVT9OlnHpDX7qM5mVopbw7w-0TcxlQd2k) - 原型
          * [原型头脑风暴](https://docs.google.com/document/d/1t6pRCn-oSUsuQ2rog24KzbbZ7iORothH_Gp1i3Hm8A4/export?format=pdf) - 活动指南
      CSD U4L11 SFLP:
        markdown: |
          # 概述

          本课中，小组会和班级里的其他人一起测试纸面原型。一个学生会扮演计算机，一个叙述，剩下的人观察。小组会立刻得到应用设计上的反馈，这会应用到下一版的原型上。


          ## 资源

          * [纸面原型用户测试](https://docs.google.com/document/d/1cPIdaayUutKdsq1RFT-keF4X-o4XBrF2BnMaVutc-_4/export?format=pdf) - 活动指南
          * [什么是午餐测试](https://drive.google.com/open?id=0BxKeX2-Lg_EYUTBNbnMyUENFcGs) - 视频
      CSD U4L12 SFLP:
        markdown: |
          # 概述

          在纸面原型上经过开发、测试和收集反馈，小组现在要在应用实验室上进行应用的下一次迭代。使用设计模式中的拖放功能，每个小组成员都可以为团队应用制作出至少一个页面，对上一轮测试中收到的反馈做出响应。


          ## 资源

          * [屏幕的主人](https://docs.google.com/document/d/1eAl3Gpi1iLLOMjaO44-w2dUuJvHEzGVPrIDxpP4rkW4/export?format=pdf) - 活动指南
          * [屏幕设计](https://docs.google.com/document/d/1dtMInlgLRk_DUZwpqF6KF8TvGUJNp-vWFYYU4wG-ZLc/export?format=pdf) - 活动指南
      CSD U4L13 SFLP:
        markdown: |+
          # 概述

          在上节课构建的屏幕上，小组会将屏幕组合成一个应用。可以加一些简单的代码能让按钮在点击后到达合适的屏幕。

          ## 引入的代码

          * [onEvent](//studio.code.org/docs/applab/onEvent/)
          * [setScreen](//studio.code.org/docs/applab/setScreen/)

      CSD U4L15 SFLP:
        markdown: |
          # 概述

          小组进入了新的一轮用户测试，这次会有可交互的原型。从这轮收集的反馈会影响原型的最后一次迭代。

          ## 资源

          * [应用用户测试](https://docs.google.com/document/d/1-ZgkOaZ1Y_jCG1c9Hzkz_SMEZXrJAzVFLgoCVIQiIts/export?format=pdf) - 活动指南
      CSD U4L16 SFLP:
        markdown: |
          # 概述

          通过上一轮测试的反馈，小组实现了改动，并满足了用户的需求。每个小组对于要添加的功能和要修复的缺陷，都要进行跟踪并设置优先级。
          ## 词汇表

          * **缺陷（bug）** - 程序中不能正常工作的部分。
          * **功能（feature）** - 软件的一个功能元素。它可以实现新的东西，或者支持更多平台，或提高效率。

          ## 资源

          * [应用的用户测试分析](https://docs.google.com/document/d/1Y7cri91LU_70n6CrIGnUSedPwA_TMfYCkyhCjfpfTns/export?format=pdf) - 活动指南
      CSD U4L17 SFLP:
        markdown: |
          # 概述

          每个小组都要准备演示来 "推销" 自己开发的应用。这是分享奋斗、胜利，为下一步做计划的时刻。

          ## 资源

          * [应用演示模板](https://docs.google.com/presentation/d/19KVEybGqu6pdFB3QwjvJNA_VTM5W5Kxy3fUlxf1xnc4/edit) - 幻灯片
          * [应用演示模板](https://docs.google.com/presentation/d/1qRbnSABMrfeZHUiQ_mGdhzW7UIGuiGiWyMcQK_pH-tY/edit) - 示例
          * [应用演示模板](https://docs.google.com/document/d/1RVmBL9jCfG2QJXyEiya4w9dSBluRxinEOKBZLicv4lg/export?format=pdf) - 规则
      CSD U5 Encryption 1:
        content1: 描述
        markdown: |
          # 解码二进制字符串

          ![](https://images.code.org/6d8dcf1c1e6c2955fa767e9839af820e-image-1505420730035.24.20 PM.png)

          ## 编码系统：

          ![](https://images.code.org/df5db2027cac3c16c4ef4b2b8f940d5d-image-1505420957117.28.48 PM.png) ![](https://images.code.org/4de0035c9053477fa6f5484800dc8140-image-1505420957118.28.39 PM.png)

          ![](https://images.code.org/8335bef013e9655291fcfecf2c60fcd3-image-1505420957118.28.30 PM.png)  &nbsp;&nbsp; ![](https://images.code.org/ab3337f5b0848557c37fd114fe0d65b7-image-1505420957116.28.56 PM.png)
      CSD U5 Encryption 1_2018:
        content1: 描述
        markdown: |
          # 解码二进制字符串

          ![](https://images.code.org/6d8dcf1c1e6c2955fa767e9839af820e-image-1505420730035.24.20 PM.png)

          ## 编码系统：

          ![](https://images.code.org/df5db2027cac3c16c4ef4b2b8f940d5d-image-1505420957117.28.48 PM.png) ![](https://images.code.org/4de0035c9053477fa6f5484800dc8140-image-1505420957118.28.39 PM.png)

          ![](https://images.code.org/8335bef013e9655291fcfecf2c60fcd3-image-1505420957118.28.30 PM.png)  &nbsp;&nbsp; ![](https://images.code.org/ab3337f5b0848557c37fd114fe0d65b7-image-1505420957116.28.56 PM.png)
      CSD U5 Encryption 1_2018_2019:
        content1: 描述
        markdown: |
          # 解码二进制字符串

          ![](https://images.code.org/6d8dcf1c1e6c2955fa767e9839af820e-image-1505420730035.24.20 PM.png)

          ## 编码系统：

          ![](https://images.code.org/df5db2027cac3c16c4ef4b2b8f940d5d-image-1505420957117.28.48 PM.png) ![](https://images.code.org/4de0035c9053477fa6f5484800dc8140-image-1505420957118.28.39 PM.png)

          ![](https://images.code.org/8335bef013e9655291fcfecf2c60fcd3-image-1505420957118.28.30 PM.png)  &nbsp;&nbsp; ![](https://images.code.org/ab3337f5b0848557c37fd114fe0d65b7-image-1505420957116.28.56 PM.png)
      CSD U5 Encryption 2:
        content1: 描述
        markdown: |
          # 解码二进制字符串

          ![](https://images.code.org/8d98818a95a736974cb4e6e5ab3717f4-image-1514928554045.24.20 PM.png)

          * 能否解码这个二进制字符串？
          * 解码前需要知道什么？
      CSD U5 Encryption 2_2018:
        content1: 描述
        markdown: |
          # 解码二进制字符串

          ![](https://images.code.org/8d98818a95a736974cb4e6e5ab3717f4-image-1514928554045.24.20 PM.png)

          * 能否解码这个二进制字符串？
          * 解码前需要知道什么？
      CSD U5 Encryption 2_2018_2019:
        content1: 描述
        markdown: |
          # 解码二进制字符串

          ![](https://images.code.org/8d98818a95a736974cb4e6e5ab3717f4-image-1514928554045.24.20 PM.png)

          * 能否解码这个二进制字符串？
          * 解码前需要知道什么？
      CSD U5 L13 SFLP Interpreting Data:
        content1: 描述
        markdown: |
          # 概述

          通过找到两种不同类型数据间的相关性，来进一步了解数据解释。看看找到数据间的关系是如何帮助解决问题的。

          ## 资源

          * [表示数据](https://docs.google.com/document/d/1JZJ5-kZoHb6xI7B4Ua5EHwaS1UiLoeM8i6YUNAAbaEM/export?format=pdf) - 活动指南
          * [表示数据](https://docs.google.com/document/d/1YCqOxw4u8m142zaIVdUk4eBn8VnJBpkMzr4uEaDq2pM/export?format=pdf) - 资源
      CSD U5 crosstab warmup:
        content1: 描述
        markdown: |+
          # 蛋糕问卷

          这个问卷里，人们选择了蛋糕和糖霜的口味。

          <table style="text-align: center; border: solid 1px darkgray;">
          <tr><td style="width: 50px; background-color: gray; color:white"></td><td style="width: 200px; background-color: gray; color:white">蛋糕口味</td><td style="width: 200px; background-color: gray; color:white">糖霜口味</td></tr>
          <tr><td>1</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>2</td><td>红天鹅绒蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>3</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>4</td><td>胡萝卜蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>5</td><td>胡萝卜蛋糕</td><td>香草糖霜</td></tr>
          <tr><td>6</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>7</td><td>巧克力蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>8</td><td>胡萝卜蛋糕</td><td>奶油乳酪糖霜</td></tr>
          </table>
          <br><br>

          如果人们必须为派对选出一种蛋糕和糖霜的组合，应该选什么？

          如果能选择两种，应该怎么做？

          知道这两种选择后，如何帮助决定订购什么样的蛋糕？

      CSD U5 crosstab warmup_2018:
        content1: 描述
        markdown: |+
          # 蛋糕问卷

          这个问卷里，人们选择了蛋糕和糖霜的口味。

          <table style="text-align: center; border: solid 1px darkgray;">
          <tr><td style="width: 50px; background-color: gray; color:white"></td><td style="width: 200px; background-color: gray; color:white">蛋糕口味</td><td style="width: 200px; background-color: gray; color:white">糖霜口味</td></tr>
          <tr><td>1</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>2</td><td>红天鹅绒蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>3</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>4</td><td>胡萝卜蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>5</td><td>胡萝卜蛋糕</td><td>香草糖霜</td></tr>
          <tr><td>6</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>7</td><td>巧克力蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>8</td><td>胡萝卜蛋糕</td><td>奶油乳酪糖霜</td></tr>
          </table>
          <br><br>

          如果人们必须为派对选出一种蛋糕和糖霜的组合，应该选什么？

          如果能选择两种，应该怎么做？

          知道这两种选择后，如何帮助决定订购什么样的蛋糕？

      CSD U5 crosstab warmup_2018_2019:
        content1: 描述
        markdown: |+
          # 蛋糕问卷

          这个问卷里，人们选择了蛋糕和糖霜的口味。

          <table style="text-align: center; border: solid 1px darkgray;">
          <tr><td style="width: 50px; background-color: gray; color:white"></td><td style="width: 200px; background-color: gray; color:white">蛋糕口味</td><td style="width: 200px; background-color: gray; color:white">糖霜口味</td></tr>
          <tr><td>1</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>2</td><td>红天鹅绒蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>3</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>4</td><td>胡萝卜蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>5</td><td>胡萝卜蛋糕</td><td>香草糖霜</td></tr>
          <tr><td>6</td><td>巧克力蛋糕</td><td>巧克力糖霜</td></tr>
          <tr><td>7</td><td>巧克力蛋糕</td><td>奶油乳酪糖霜</td></tr>
          <tr><td>8</td><td>胡萝卜蛋糕</td><td>奶油乳酪糖霜</td></tr>
          </table>
          <br><br>

          如果人们必须为派对选出一种蛋糕和糖霜的组合，应该选什么？

          如果能选择两种，应该怎么做？

          知道这两种选择后，如何帮助决定订购什么样的蛋糕？

      CSD U5 data visualization:
        content1: 描述
        markdown: |
          ## 班级最佳宠物
          ### 有三种不同的方法来显示班级最佳宠物的投票结果。

          ![](https://images.code.org/7c9f4de7b0028ab929a3a10494535525-image-1488389767180.png) ![](https://images.code.org/7e14d63776050e7aad994ee2e47cb7ce-image-1488389776283.png) ![](https://images.code.org/cf0dd06d2e0ccdf9573e204d24aad90a-image-1488389830915.png)


          ### 哪种方法对于人来说，是最容易决定哪个宠物是最受欢迎的？
          ### 那种对于计算机最容易做出决定？
      CSD U5 data visualization_2018:
        content1: 描述
        markdown: |
          ## 班级最佳宠物
          ### 有三种不同的方法来显示班级最佳宠物的投票结果。

          ![](https://images.code.org/7c9f4de7b0028ab929a3a10494535525-image-1488389767180.png) ![](https://images.code.org/7e14d63776050e7aad994ee2e47cb7ce-image-1488389776283.png) ![](https://images.code.org/cf0dd06d2e0ccdf9573e204d24aad90a-image-1488389830915.png)


          ### 哪种方法对于人来说，是最容易决定哪个宠物是最受欢迎的？
          ### 那种对于计算机最容易做出决定？
      CSD U5 data visualization_2018_2019:
        content1: 描述
        markdown: |
          ## 班级最佳宠物
          ### 有三种不同的方法来显示班级最佳宠物的投票结果。

          ![](https://images.code.org/7c9f4de7b0028ab929a3a10494535525-image-1488389767180.png) ![](https://images.code.org/7e14d63776050e7aad994ee2e47cb7ce-image-1488389776283.png) ![](https://images.code.org/cf0dd06d2e0ccdf9573e204d24aad90a-image-1488389830915.png)


          ### 哪种方法对于人来说，是最容易决定哪个宠物是最受欢迎的？
          ### 那种对于计算机最容易做出决定？
      CSD U5 student record:
        content1: 描述
        markdown: "# 学生记录\n\n<div style=\"float: right; height:209px; width: 456px;
          background-color: black;\">\n  <div style=\"float:left; height:52px; width:
          40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">0</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">1</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">2</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:53px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">3</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n</div>\n\n## 学生记录用下列规则来保存：\n\n * <h4>前 8 位比特用二进制数字表示学生的年级。</h4>\n
          * <h4>随后 8 位用二进制数字保存学生年龄。</h4>\n * <h4>接下来的 8 位用 ASCII 保存学生名字的首字母。</h4>\n
          * <h4>最后 8 位用 ASCII 保存学生姓氏的首字母。</h4>\n\n<br />\n<br />\n"
      CSD U5 student record_2018:
        content1: 描述
        markdown: "# 学生记录\n\n<div style=\"float: right; height:209px; width: 456px;
          background-color: black;\">\n  <div style=\"float:left; height:52px; width:
          40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">0</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">1</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">2</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:53px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">3</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n</div>\n\n## 学生记录用下列规则来保存：\n\n * <h4>前 8 位比特用二进制数字表示学生的年级。</h4>\n
          * <h4>随后 8 位用二进制数字保存学生年龄。</h4>\n * <h4>接下来的 8 位用 ASCII 保存学生名字的首字母。</h4>\n
          * <h4>最后 8 位用 ASCII 保存学生姓氏的首字母。</h4>\n\n<br />\n<br />\n"
      CSD U5 student record_2018_2019:
        content1: 描述
        markdown: "# 学生记录\n\n<div style=\"float: right; height:209px; width: 456px;
          background-color: black;\">\n  <div style=\"float:left; height:52px; width:
          40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">0</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">1</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">2</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:53px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">3</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n</div>\n\n## 学生记录用下列规则来保存：\n\n * <h4>前 8 位比特用二进制数字表示学生的年级。</h4>\n
          * <h4>随后 8 位用二进制数字保存学生年龄。</h4>\n * <h4>接下来的 8 位用 ASCII 保存学生名字的首字母。</h4>\n
          * <h4>最后 8 位用 ASCII 保存学生姓氏的首字母。</h4>\n\n<br />\n<br />\n"
      CSD U6 LED create intro:
        content1: 描述
        markdown: |
          # LED 应用

          上一关中，制作了能用屏幕上不同按钮控制 LED 的应用。接下来的两关中，会看到一些其它应用的例子，然后有机会做出自己的应用。

          当查看示例时，想想什么样的代码，可能对你和伙伴要创建的应用有用。
      CSD U6 LED create intro_2018:
        content1: 描述
        markdown: |
          # LED 应用

          上一关中，制作了能用屏幕上不同按钮控制 LED 的应用。接下来的两关中，会看到一些其它应用的例子，然后有机会做出自己的应用。

          当查看示例时，想想什么样的代码，可能对你和伙伴要创建的应用有用。
      CSD U6 LED create intro_2018_2019:
        content1: 描述
        markdown: |
          # LED 应用

          上一关中，制作了能用屏幕上不同按钮控制 LED 的应用。接下来的两关中，会看到一些其它应用的例子，然后有机会做出自己的应用。

          当查看示例时，想想什么样的代码，可能对你和伙伴要创建的应用有用。
      CSD U6 array multi:
        answers:
        - text: https://images.code.org/fc497646edb1fc92a4dfdca09030f294-image-1512686800362.42.54
            PM.png,200px
        - text: https://images.code.org/d9b2a9eca6e2027c032bbc6c1e47e107-image-1512686800356.44.34
            PM.png,200px
        - text: https://images.code.org/ae34c1d87e697c789303c5c1b602b7c6-image-1512686800360.44.11
            PM.png,200px
        - text: https://images.code.org/d220337a4cd1ec31b0a5bb70eaf6bffe-image-1512686800364.42.00
            PM.png,200px
          correct: true
        markdown: "![](https://images.code.org/134a993836c148f64a7045d489ec58dc-image-1512686800350.45.08
          PM.png)\n"
        questions:
        - text: 当左侧的代码运行时，应用实验室将显示什么内容？
        title: 使用数组
      CSD U6 array multi_2018:
        answers:
        - text: https://images.code.org/fc497646edb1fc92a4dfdca09030f294-image-1512686800362.42.54
            PM.png,200px
        - text: https://images.code.org/d9b2a9eca6e2027c032bbc6c1e47e107-image-1512686800356.44.34
            PM.png,200px
        - text: https://images.code.org/ae34c1d87e697c789303c5c1b602b7c6-image-1512686800360.44.11
            PM.png,200px
        - text: https://images.code.org/d220337a4cd1ec31b0a5bb70eaf6bffe-image-1512686800364.42.00
            PM.png,200px
          correct: true
        markdown: "![](https://images.code.org/134a993836c148f64a7045d489ec58dc-image-1512686800350.45.08
          PM.png)\n"
        questions:
        - text: 当左侧的代码运行时，应用实验室将显示什么内容？
        title: 使用数组
      CSD U6 array multi_2018_2019:
        answers:
        - text: https://images.code.org/fc497646edb1fc92a4dfdca09030f294-image-1512686800362.42.54
            PM.png,200px
        - text: https://images.code.org/d9b2a9eca6e2027c032bbc6c1e47e107-image-1512686800356.44.34
            PM.png,200px
        - text: https://images.code.org/ae34c1d87e697c789303c5c1b602b7c6-image-1512686800360.44.11
            PM.png,200px
        - text: https://images.code.org/d220337a4cd1ec31b0a5bb70eaf6bffe-image-1512686800364.42.00
            PM.png,200px
          correct: true
        markdown: "![](https://images.code.org/134a993836c148f64a7045d489ec58dc-image-1512686800350.45.08
          PM.png)\n"
        questions:
        - text: 当左侧的代码运行时，应用实验室将显示什么内容？
        title: 使用数组
      CSD U6 circuit smart bike blinker build:
        markdown: |
          # 创建自己的闪光灯

          用刚刚构建的电路，返回到智能自行车原型，并添加闪光灯。
      CSD U6 circuit smart bike blinker build_2018:
        markdown: |
          # 创建自己的闪光灯

          用刚刚构建的电路，返回到智能自行车原型，并添加闪光灯。
      CSD U6 circuit smart bike blinker build_2018_2019:
        markdown: |
          # 创建自己的闪光灯

          用刚刚构建的电路，返回到智能自行车原型，并添加闪光灯。
      CSD U6 final intro:
        content1: 描述
        markdown: |
          # 为自己的创新构建原型

          现在已经学会了所有的技巧，该创作自己的游戏了！

          与伙伴或小组头脑风暴一下，想一些能制作原型的物理设备。可以基于前面课程的程序，真实场景中见过的创新设备，或者任何疯狂的想法。

          一旦和小组达成了共识，填写项目指南中的设备草图，需要的输入输出，计划需要处理的信息。

          ## 创新的想法

          为了帮助看展头脑风暴，可看看下面的示例项目：

          ### 自动小夜灯

          使用导线、LED 灯、和光纤传感器，创作小夜灯，熄灭后还可以当作墙面艺术装饰。这样的设计看起来像闪烁的萤火虫。

          ![](https://images.code.org/159af2d362c678c341d22b7f29635f8a-image-1518201828308.gif)

          ### 乐器

          设计能随意演奏的乐器，用传感器或按钮作为输入。在这个案例中，用导电的铜带做了 5 个新按钮，也可以用铝箔或其他导电物质。

          ![](https://images.code.org/deeb3d33ac1b51b19eec108f3b92efc7-image-1518202587911.gif)

          ### 敲敲它

          做个游戏！这个游戏使用数组来存放不同的命令，随机取出一个，并需要根据屏幕做出正确的指令。

          ![](https://images.code.org/3e67cd6a112a10063d4183662d8fecc0-image-1518202606948.gif)
      CSD U6 final intro_2018:
        content1: 描述
        markdown: |
          # 为自己的创新构建原型

          现在已经学会了所有的技巧，该创作自己的游戏了！

          与伙伴或小组头脑风暴一下，想一些能制作原型的物理设备。可以基于前面课程的程序，真实场景中见过的创新设备，或者任何疯狂的想法。

          一旦和小组达成了共识，填写项目指南中的设备草图，需要的输入输出，计划需要处理的信息。

          ## 创新的想法

          为了帮助看展头脑风暴，可看看下面的示例项目：

          ### 自动小夜灯

          使用导线、LED 灯、和光纤传感器，创作小夜灯，熄灭后还可以当作墙面艺术装饰。这样的设计看起来像闪烁的萤火虫。

          ![](https://images.code.org/159af2d362c678c341d22b7f29635f8a-image-1518201828308.gif)

          ### 乐器

          设计能随意演奏的乐器，用传感器或按钮作为输入。在这个案例中，用导电的铜带做了 5 个新按钮，也可以用铝箔或其他导电物质。

          ![](https://images.code.org/deeb3d33ac1b51b19eec108f3b92efc7-image-1518202587911.gif)

          ### 敲敲它

          做个游戏！这个游戏使用数组来存放不同的命令，随机取出一个，并需要根据屏幕做出正确的指令。

          ![](https://images.code.org/3e67cd6a112a10063d4183662d8fecc0-image-1518202606948.gif)
      CSD U6 final intro_2018_2019:
        content1: 描述
        markdown: |
          # 为自己的创新构建原型

          现在已经学会了所有的技巧，该创作自己的游戏了！

          与伙伴或小组头脑风暴一下，想一些能制作原型的物理设备。可以基于前面课程的程序，真实场景中见过的创新设备，或者任何疯狂的想法。

          一旦和小组达成了共识，填写项目指南中的设备草图，需要的输入输出，计划需要处理的信息。

          ## 创新的想法

          为了帮助看展头脑风暴，可看看下面的示例项目：

          ### 自动小夜灯

          使用导线、LED 灯、和光纤传感器，创作小夜灯，熄灭后还可以当作墙面艺术装饰。这样的设计看起来像闪烁的萤火虫。

          ![](https://images.code.org/159af2d362c678c341d22b7f29635f8a-image-1518201828308.gif)

          ### 乐器

          设计能随意演奏的乐器，用传感器或按钮作为输入。在这个案例中，用导电的铜带做了 5 个新按钮，也可以用铝箔或其他导电物质。

          ![](https://images.code.org/deeb3d33ac1b51b19eec108f3b92efc7-image-1518202587911.gif)

          ### 敲敲它

          做个游戏！这个游戏使用数组来存放不同的命令，随机取出一个，并需要根据屏幕做出正确的指令。

          ![](https://images.code.org/3e67cd6a112a10063d4183662d8fecc0-image-1518202606948.gif)
      CSD U6 game project stop:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U6 game project stop_2018:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U6 game project stop_2018_2019:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U6 setProperty predict multi:
        answers:
        - text: "![](https://images.code.org/1e226012bfa76c84938097e1ff117150-image-1579828841757.png)"
        - text: "![](https://images.code.org/dc9e1f761ff6a95542f283e2c700f9f1-image-1579828841754.png)"
        - text: "![](https://images.code.org/f89441dfc9260030feac9de3af2b7d3a-image-1579828841748.png)"
        - text: "![](https://images.code.org/b82461e6219e023280c4e22df59071d4-image-1579828841751.png)"
          correct: true
        questions:
        - text: 阅读代码，并预测当应用运行起来，看起来会是什么样子。
        title: 猜测一下
      CSD U6 setProperty predict multi_2018:
        answers:
        - text: "![](https://images.code.org/1e226012bfa76c84938097e1ff117150-image-1579828841757.png)"
        - text: "![](https://images.code.org/dc9e1f761ff6a95542f283e2c700f9f1-image-1579828841754.png)"
        - text: "![](https://images.code.org/f89441dfc9260030feac9de3af2b7d3a-image-1579828841748.png)"
        - text: "![](https://images.code.org/b82461e6219e023280c4e22df59071d4-image-1579828841751.png)"
          correct: true
        questions:
        - text: 阅读代码，并预测当应用运行起来，看起来会是什么样子。
        title: 猜测一下
      CSD U6 setProperty predict multi_2018_2019:
        answers:
        - text: "![](https://images.code.org/1e226012bfa76c84938097e1ff117150-image-1579828841757.png)"
        - text: "![](https://images.code.org/dc9e1f761ff6a95542f283e2c700f9f1-image-1579828841754.png)"
        - text: "![](https://images.code.org/f89441dfc9260030feac9de3af2b7d3a-image-1579828841748.png)"
        - text: "![](https://images.code.org/b82461e6219e023280c4e22df59071d4-image-1579828841751.png)"
          correct: true
        questions:
        - text: 阅读代码，并预测当应用运行起来，看起来会是什么样子。
        title: 猜测一下
      CSD U6 tugowar stop:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U6 tugowar stop_2018:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD U6 tugowar stop_2018_2019:
        markdown: |
          # 停一下

          在继续之前，要查看该项目的项目指南。还要等待老师的指示。
      CSD-U5-SFLP ASCII and Binary Representation:
        markdown: "# 概述\n\n学习 ASCII 系统如何使用开关模式来表达字母，然后用它来创造自己的能表达字母表的二进制系统。 \n\n##
          词汇表\n\n* **ASCII** - 美国信息交换标准代码（American Standard Code for Information Interchange）。ASCII
          是任何计算机都认可并理解的原始的文本格式。\n* **二进制（binary）** - 只用两个选项表达信息的一种方法。\n* **比特（bit）**
          - \"二进制数字（Binary Digit）\" 的缩写。一个比特是计算机上信息的最小单元，一般用 0 或 1 来表示。\n\n## 资源\n\n*
          [ASCII - 活动指南](https://docs.google.com/document/d/1zg1hNebVEGMbIepFS1pGqS-QqAyzENjP9F59UqXwDzI/export?format=pdf)\n"
      CSD-U5-SFLP Automating Data Decisions:
        markdown: |
          # 概述

          将看到的示例说明了，如何使用计算机从根本上解决数据问题时，其中的每个步骤。可以创建计算机能够自动做决定的规则或算法。

          ## Resources

          * [自动的数据决策](https://docs.google.com/document/d/1BaqqDWT1Y0cA80ytaXOfB8RbnVpMsqQ4K7KU_kX__gs/export?format=pdf) - 资源 (版本 [MS Word](https://docs.google.com/document/d/1BaqqDWT1Y0cA80ytaXOfB8RbnVpMsqQ4K7KU_kX__gs/export?format=doc), [Google Doc](https://docs.google.com/document/d/1BaqqDWT1Y0cA80ytaXOfB8RbnVpMsqQ4K7KU_kX__gs/copy))
          * [自动的数据决策](https://docs.google.com/document/d/1ww7OiPAWu03K2C3c5LKbUm_Opkz9x0lZfizA_uJ7JsI/export?format=pdf) - 活动指南 (版本 [MS Word](https://docs.google.com/document/d/1ww7OiPAWu03K2C3c5LKbUm_Opkz9x0lZfizA_uJ7JsI/export?format=doc), [Google Doc](https://docs.google.com/document/d/1ww7OiPAWu03K2C3c5LKbUm_Opkz9x0lZfizA_uJ7JsI/copy))
      CSD-U5-SFLP Combining Representations:
        markdown: |
          # 概述

          课程将组合三种二进制表示系统（ASCII 字符，二进制数字和图片）来在一条记录中编码更复杂的信息类型。拿到一些比特，并解密它们后，学生会学习到一种思想，即理解二进制的信息，必须理解被使用的编码系统，还要理解编码的信息的意义。


          ## 资源

          * [宠物记录 - 活动指南](https://docs.google.com/document/d/14-oji3xpZfTXyU6eXLETyc9r9MAZAxlDuxQAi4L3G9g/export?format=pdf)
          * [ASCII 到二进制表格 - 参考](https://docs.google.com/document/d/1RgqkSXE8NGRfJe2Slw5DSIaP_YbpMhRE5u1zrutoyMk/export?format=pdf)
      CSD-U5-SFLP Create a Representation:
        markdown: |
          # 概述

          用这章学会的二进制表达系统，来设计一个结构，表达完美的一天。需要用到 ASCII，二进制数字和图片来设计打卡格式。

          ## 资源

          * [创建表示 - 项目指南](https://docs.google.com/document/d/1JAjFoPRfZF1V5WZqrdusZ_qjGWblaqTL-_l5jmaPhf0/export?format=pdf)
      CSD-U5-SFLP Interpreting Data:
        markdown: |
          # 概述

          通过清理并可视化原始数据，来进一步了解数据的结构。了解可视化是如何改变理解数据、做出决定的方法。

          ## 资源

          * [结构化数据](https://docs.google.com/document/d/1z2ocdwgBgWLeAG3IHhKvNHEVtyGrLePsmDg2liFkJ9Y/export?format=pdf) - 活动指南
      CSD-U5-SFLP Making Decisions with Data:
        markdown: |
          # 概述

          本课会练习用数据来解决一些感觉熟悉的问题。

          ## Resources

          * [用数据做决定](https://docs.google.com/document/d/1ByeV-Q0e0VsgphCoVUZOxol0Fp2ArrsyV3rH8djnllg/export?format=pdf) - 活动指南
      CSD-U5-SFLP Patterns and Representation:
        markdown: |
          # 概述

          课程会详细介绍创建表示系统需要些什么。小组们会创建一个系统，能只用一堆卡片就能表示字母表里的任何字母，然后用这个系统来创造消息，并与其他组交换信息，来确保系统能够按照设计工作。学生会讨论能工作的系统之间的共性，并认识到会有很多种可行的方案。
          ## 词汇表

          * **解码（decode）** - 将信息变换一种表达方式，以便人可以阅读
          * **编码（encode）** - 将信息变换一种表达方式，以便计算机可以阅读


          ## 资源

          * [表示信息](https://docs.google.com/document/d/1emQKHuyzXvzg3cShX88CH8r8kMXInjItRIu9PdrfRpI/export?format=pdf) - 活动指南 (复制为 [MS Word](https://docs.google.com/document/d/1emQKHuyzXvzg3cShX88CH8r8kMXInjItRIu9PdrfRpI/export?format=doc), [Google 文档](https://docs.google.com/document/d/1emQKHuyzXvzg3cShX88CH8r8kMXInjItRIu9PdrfRpI/copy))
      CSD-U5-SFLP Problem Solving and Data:
        markdown: |
          # 概述

          用解决问题的流程，来帮助解决数据问题。

          ## 资源

          * [数据和解决问题](https://docs.google.com/document/d/1_5JzwIIl8u72QJq_dFpFPnVcNREBc3UHtQtObkwgckw/export?format=pdf) - 活动指南
      CSD-U5-SFLP Problem Solving with Big Data:
        markdown: |
          # 概述

          课程涵盖了数据是如何被组织来搜索并使用，从而能解决现实世界中的问题。学生们会观看三个用数据能解决的问题场景，并通过头脑风暴来怎样收集并使用不同类型的数据，来解决问题。每个场景都包括一个真实世界的视频，用数据解决了类似的问题。


          ## 资源

          * [真实世界中的数据](https://docs.google.com/document/d/10MwyEV-wgpE6tHZxi-d9SQKrTPoz8J-QwmND8rn-m2I/export?format=pdf) - 活动指南
      CSD-U5-SFLP Representation Matters:
        markdown: |
          # 概述

          首先了解信息如何表达的重要性，以及如何影响做决策。你需要帮助人们确定他们应该吃什么。

          ## 资源

          * [表达的重要性 - 活动指南](https://docs.google.com/document/d/1wU8QANCmyz_DiJf2vdg2QPqKHq1YE0XDLGJmEsbKfiU/export?format=pdf)
      CSD-U5-SFLP Representing Images:
        markdown: |+
          # 概述

          学习上节课了解的开关模式，是如何用来表示图片。在此过程中，会探索已了解的标识系统的属性，是如何应用到图像上的。

          ## 词汇表

          * **像素（pixel）** - 这是 "图片元素（picture element）" 的缩写，是数字图片的基本单元，一般表示一张大一些图片中的一个非常小的正方形或点的颜色。


      CSD-U5-SFLP Representing Numbers Part 1:
        markdown: |
          # 概述

          本课介绍了二进制数字系统。用一组卡片来表示二进制数字系统的数值，学生会将通过将卡片朝上或朝下来表示比特的 "开" 或 "关"，然后观察不同的图形表示的数字是多少。最后，这些图形会扩展到更通用的 4 比特系统。

          ## 资源
          * [表示数字 - 活动指南](https://docs.google.com/document/d/1Bv2q50lF0wxx9D9n5JzsKFKXXmP8-p6LInO29Lm3Plk/export?format=pdf)
          * [数字卡片 - 可操作](https://docs.google.com/document/d/1UWJdBo0C7wE3jmSCDVTOSdDtRkxtIBqe4ttN0v5GFXM/export?format=pdf)
      CSD-U5-SFLP Representing Numbers Part 2:
        markdown: |
          # 概述

          本课会解决如何在其他人能看到的时候，为数据保密的问题。学生会了解为表情符号编码的方法，然后学会用关键词给自己的表情消息加密。


          ## 资源

          * [数据保密 - 活动指南](https://docs.google.com/document/d/1i_s3XXcwG8QpE7dk7GfYkfcekGKTqpD0AOs1ZLvcnco/export?format=pdf)
      CSD-U5-SFLP Solve a Data Problem:
        markdown: |
          # 概述

          本单元中，需要设计一种方法，使用数据来进行推荐或预测，帮助解决选择的问题。

          ## 资源

          * [进行推荐](https://docs.google.com/document/d/1pKeFH1OkWzfg3MFTPCezhK_r4p8xu7QUkPKSf5vV41c/export?format=pdf) - 项目指南
          * [进行推荐](https://docs.google.com/document/d/1ZdA-VIdyPZLONBFr7ojFeNfHCHYmacbrrphiR31k6Bk/export?format=pdf) - 相互评审
      'CSD: getText vs getNumber':
        markdown: "# getText 与 getNumber\n\n计算机用不同的方法来存储数据。两种计算机存储数据的方法是字符串和数字。 \n\n`getNumber()`
          会试图返回数字。\n\n`getText()` 的返回会是字符串。通常，程序中的字符串会用 `\" \"` 标记。例如，所有标识名称都是字符串。可以用
          `getText()` 来获取数字，但也会由 `\" \"` 括起来。\n\n## 为什么这很重要？\n\n通常，可以通过字符串的方式获得所有信息，但要进行数学操作时，需要数字才行。当要将两个字符串加到一起时，计算机会将两个字符串合并成一个。
          \n\n因此，当进行 `\"2\" + \"2\"`，时，计算机的结果是 `\"22\"`。\n\n因此，当进行 `2 + 2` (注意，没有
          `\" \"`) 计算机的结果是 `4`。\n"
      'CSD: setProperty':
        markdown: "# setProperty（设置属性）是如何工作的？\n\n`setProperty` 是能够设置界面元素属性的代码，比如，颜色、宽度、字体大小等等。任何能在设计模式中设置的属性都能在代码中使用
          `setProperty`，来设置。\n\n<br><br>\n\n<div style=\"column-count: 3; column-gap:
          20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%\">\n\n<p
          style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after:
          always;\">\n\n\t<span style=\"color: #00adbc; font-size: 150%\">1.</span>
          代码模式中，可以在界面元素工具栏中找到 <code>setProperty</code> 。<br>\n\n\t<span style=\"color:
          #00adbc; font-size: 150%\">2.</span> 选择需要修改属性的元素标识\n</p>\n\n<p style=\"break-after:
          always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\n\n\t<span
          style=\"color: #00adbc; font-size: 150%\">3.</span> 下拉菜单显示了这个元素可以设置的属性。这与该元素在<strong>设计模式</strong>中，能看到的属性列表是一样的。
          \n</p>\n\n<p style=\"break-after: always; -moz-column-break-after: always;
          -webkit-column-break-after: always;\">\n\n\t<span style=\"color: #00adbc;
          font-size: 150%\">4.</span> 最后一个参数是为此属性要设置的值。要设置的是 background-color，可以设置成很多种值。\n</p>\n\n\n</div>\n\n<img
          src=\"https://images.code.org/b7736bdcbde48f7951ebdc87135dd46c-image-1480536740764.png\"
          style=\"display: block; margin: auto\">\n\n\n## 如何设置 \"background-color\"\n\n<span
          style=\"color: #00adbc; font-size: 150%\">1.</span> *background-color* 是一个表达颜色的字符串（在引号中）。一般来说，可以将颜色表示为十六进制值，或者三个十进制的
          RGB 值，如 *\"rgb(255,0,0)\"*\n\n<img src=\"https://images.code.org/43291bf1c067145771bf88a147d74d26-image-1480538343306.png\"
          style=\"display: block; margin: auto\">\n"
      CSDU6 Innovation:
        markdown: |+
          # 创新研究

          从下列主题中选择一个进行调查。可以找到此类的最新的创新计算设备。

          ## 可穿戴技术
          可穿戴技术包括让用户穿戴的各种形式计算，无论是嵌入到衣服中还是作为附件穿戴。许多可穿戴设备（例如智能计步器）在一定程度上与健康和安全领域重叠，因为该设备既可穿戴也可帮助改善个人健康。

          ## 健康和安全
          这个广泛的主题不仅包括消费者的技术（个人用来提高健康或安全），也包括专业技术（供医生或专业人员使用）。

          ## 农业
          农业可能不是一个明显的技术话题，但技术创新已经深入影响了农业生产。包括将计算机整合进现有的农业设备，使用传感器和机器人来监控农作物，分析数据来提高效率和可持续性。

          ## 制造
          快速原型制作，工业机器人和自动化方面的进步，已对商品生产产生了重大影响。无论是进行低成本的小规模制造（例如3D打印机和激光切割机），还是将计算机集成到工厂工作中，都有许多有趣的领域需要研究。

          ## 艺术和设计
          艺术的表达力和计算的交叉，产生了令人印象深刻，而又出乎意料的结果。可能不太容易找到与艺术和设计相关的商品，但会发现有各种自制的作品，它们用有创造性和表现力的方法来使用计算设备。

          ## 智能家居
          能够理解甚至预测人们需求的房屋的梦想快要实现了。无论是通过语音命令来明确控制，还是通过传感器来监视并响应条件变化，智能家居设备可以处理房屋能数量繁多而又重复的任务。


          # 研究考虑

          在研究有关主题的设备时，请记住以下注意事项：

          * 聚焦于基于硬件的解决方案，而不仅仅是软件程序
          * 聚焦于最近的创新，而不仅是旧新闻
          * 跟随自己的兴趣

          除了为每个主题推荐的站点列表，也可以看看一些众筹网站（例如，Kickstarter 和 Indiegogo），看一些刚刚开始成型的产品。

      CSDU6 Innovation_2018:
        markdown: |+
          # 创新研究

          从下列主题中选择一个进行调查。可以找到此类的最新的创新计算设备。

          ## 可穿戴技术
          可穿戴技术包括让用户穿戴的各种形式计算，无论是嵌入到衣服中还是作为附件穿戴。许多可穿戴设备（例如智能计步器）在一定程度上与健康和安全领域重叠，因为该设备既可穿戴也可帮助改善个人健康。

          ## 健康和安全
          这个广泛的主题不仅包括消费者的技术（个人用来提高健康或安全），也包括专业技术（供医生或专业人员使用）。

          ## 农业
          农业可能不是一个明显的技术话题，但技术创新已经深入影响了农业生产。包括将计算机整合进现有的农业设备，使用传感器和机器人来监控农作物，分析数据来提高效率和可持续性。

          ## 制造
          快速原型制作，工业机器人和自动化方面的进步，已对商品生产产生了重大影响。无论是进行低成本的小规模制造（例如3D打印机和激光切割机），还是将计算机集成到工厂工作中，都有许多有趣的领域需要研究。

          ## 艺术和设计
          艺术的表达力和计算的交叉，产生了令人印象深刻，而又出乎意料的结果。可能不太容易找到与艺术和设计相关的商品，但会发现有各种自制的作品，它们用有创造性和表现力的方法来使用计算设备。

          ## 智能家居
          能够理解甚至预测人们需求的房屋的梦想快要实现了。无论是通过语音命令来明确控制，还是通过传感器来监视并响应条件变化，智能家居设备可以处理房屋能数量繁多而又重复的任务。


          # 研究考虑

          在研究有关主题的设备时，请记住以下注意事项：

          * 聚焦于基于硬件的解决方案，而不仅仅是软件程序
          * 聚焦于最近的创新，而不仅是旧新闻
          * 跟随自己的兴趣

          除了为每个主题推荐的站点列表，也可以看看一些众筹网站（例如，Kickstarter 和 Indiegogo），看一些刚刚开始成型的产品。

      CSDU6 Innovation_2018_2019:
        markdown: |+
          # 创新研究

          从下列主题中选择一个进行调查。可以找到此类的最新的创新计算设备。

          ## 可穿戴技术
          可穿戴技术包括让用户穿戴的各种形式计算，无论是嵌入到衣服中还是作为附件穿戴。许多可穿戴设备（例如智能计步器）在一定程度上与健康和安全领域重叠，因为该设备既可穿戴也可帮助改善个人健康。

          ## 健康和安全
          这个广泛的主题不仅包括消费者的技术（个人用来提高健康或安全），也包括专业技术（供医生或专业人员使用）。

          ## 农业
          农业可能不是一个明显的技术话题，但技术创新已经深入影响了农业生产。包括将计算机整合进现有的农业设备，使用传感器和机器人来监控农作物，分析数据来提高效率和可持续性。

          ## 制造
          快速原型制作，工业机器人和自动化方面的进步，已对商品生产产生了重大影响。无论是进行低成本的小规模制造（例如3D打印机和激光切割机），还是将计算机集成到工厂工作中，都有许多有趣的领域需要研究。

          ## 艺术和设计
          艺术的表达力和计算的交叉，产生了令人印象深刻，而又出乎意料的结果。可能不太容易找到与艺术和设计相关的商品，但会发现有各种自制的作品，它们用有创造性和表现力的方法来使用计算设备。

          ## 智能家居
          能够理解甚至预测人们需求的房屋的梦想快要实现了。无论是通过语音命令来明确控制，还是通过传感器来监视并响应条件变化，智能家居设备可以处理房屋能数量繁多而又重复的任务。


          # 研究考虑

          在研究有关主题的设备时，请记住以下注意事项：

          * 聚焦于基于硬件的解决方案，而不仅仅是软件程序
          * 聚焦于最近的创新，而不仅是旧新闻
          * 跟随自己的兴趣

          除了为每个主题推荐的站点列表，也可以看看一些众筹网站（例如，Kickstarter 和 Indiegogo），看一些刚刚开始成型的产品。

      Choosing Good IDs:
        markdown: "# 选择好的标识\n\n**好的标识** 是 **有意义和描述性的**。\n\n就像要给函数取个好名字一样，也需要用标识来描述元素的预期意图。
          \ \n\n例如，如果在程序里有很多按钮，需要让每个标识都描述这个按钮做什么。 \n\n因此，不要用这样的标识：\n \n * `button1`
          和 `button2`\n\n要让标识不仅能表示这是个按钮，还能表示这个按钮要用来做什么，比如：\n\n * `homeButton` 和 `saveButton`
          或\n * `buttonHome` 和 `buttonSave` 或\n * `homeBtn` 和 `saveBtn`\n * 自己决定！\n\n<img
          src=\"https://images.code.org/b33be9ee1521f2aa80fedcf22c929d44-image-1476910499958.png\"
          style=\"display: block; margin: auto;\">\n\n# 标识的规则\n在创建描述性的又有意义的标识时，需要了解**一些标识的规则**。标识……\n\n*
          是区分大小写的。\n* 不能包含空格。\n* *必须*以字母开始 (A-Z 或 a-z)，后面可以是任何字母和数字。\n* 可以包含连字符 (\"-\"),
          下划线 (\"_\"), 冒号 (\":\"), 或点 (\".\")。\n\n**区分大小写？**\n\n这表示 `HomeButton` 和
          `homeButton` 是不同的 (注意第一个的 H 是大写的)。\n\n这些差异乍看之下很烦人，但是一旦习惯了，并且实际上会赞赏计算机的要求是如此的精确。\n\n大小写和多词语拼写的标识有一些共同的风格：\n\n*
          **\"Camelcase（首字母大写）\"** -- `aCamelcaseNameMightLookLikeThis`\n* **Underscores（下划线隔开）**
          -- `Some_people_like_to_use_underscores_to_separate_words`\n* **dashes（连字符隔开）**
          -- `Others-like-to-use-hyphens-or-dashes`\n\n选择什么风格由自己决定。这是自己的风格。有助于保持一致。\n\n\n\n\n"
      ConditionalsWithCards-Unplugged:
        markdown: |
          # 纸牌和条件语句

          玩纸牌，创建一些这样的规则： "如果拿到红牌，获得 1 分" 以及 "如果拿到黑牌，你得 1 分"。
      Crowdsourcing-Unplugged:
        markdown: |
          # 众包

          了解众包，这是一种计算机科学中常用的解决问题的方法。与独自完成任务相比，它能让一个班一起更有效的完成任务。
      Dance_Party_extras_intro:
        markdown: |
          # 继续跳舞！

          在第二部分中，会创建自己的项目。这部分没有难题了 - 有一大堆项目展示了通过不同方法来制作更复杂的舞蹈派对。

          可以按照 _任何顺序_ 来完成这些关卡。可以跳回去看看上一关怎么做的，或者将不同项目中的概念结合起来。都试试，看看喜欢哪个，然后花点时间来完成自己的项目。

          <a class="btn btn-large btn-primary next-stage submitButton pull-right">继续</a>

          <div class="clearfix"></div>

          <div style="float: left; margin: 10px">
          <a href="2">
          <h2>
          编队
          </h2>

          <img src="https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="3">
          <h2>
          他们去哪儿了？
          </h2>

          <img src="https://images.code.org/524010de61c9af76e98bd2a5ccdba461-image-1541746855689.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="4">
          <h2>
          舞蹈队
          </h2>

          <img src="https://images.code.org/f4ccfd43f9a15d68a339b449be8e96c3-image-1541746870889.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="5">
          <h2>
          四分音符
          </h2>

          <img src="https://images.code.org/6b538efe77ea6e19f1428f7c0e45c621-image-1541746886875.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="6">
          <h2>
          低音、中音、高音
          </h2>

          <img src="https://images.code.org/3825556a395fd31bc4f767ca7ea5c566-image-1541746894197.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="7">
          <h2>
          加速、减速
          </h2>

          <img src="https://images.code.org/d7f35c686ef0a9c5a6975889fd7c566b-image-1541746900730.gif"></a>

          </div>
      Dance_Party_extras_intro_2019:
        markdown: |
          # 继续跳舞！

          在第二部分中，会创建自己的项目。这部分没有难题了 - 有一大堆项目展示了通过不同方法来制作更复杂的舞蹈派对。

          可以按照 _任何顺序_ 来完成这些关卡。可以跳回去看看上一关怎么做的，或者将不同项目中的概念结合起来。都试试，看看喜欢哪个，然后花点时间来完成自己的项目。


          <a class="btn btn-large btn-primary next-stage submitButton pull-right">继续</a>

          <div class="clearfix"></div>


          <div style="float: left; margin: 10px">
          <a href="2">
          <h2>
          来来回回
          </h2>

          <img src="https://images.code.org/2ecaa2dc4e7c6f672ced7e043d8ae0ff-image-1573667207373.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="3">
          <h2>
          更多按钮
          </h2>

          <img src="https://images.code.org/b25c6c68477a794c3086cf1169a5782f-image-1573666336377.gif"></a>

          </div>
          <div style="float: left; margin: 10px">
          <a href="4">
          <h2>
          编队
          </h2>

          <img src="https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="5">
          <h2>
          他们去哪儿了？
          </h2>

          <img src="https://images.code.org/524010de61c9af76e98bd2a5ccdba461-image-1541746855689.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="6">
          <h2>
          舞蹈队
          </h2>

          <img src="https://images.code.org/f4ccfd43f9a15d68a339b449be8e96c3-image-1541746870889.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="7">
          <h2>
          四分音符
          </h2>

          <img src="https://images.code.org/6b538efe77ea6e19f1428f7c0e45c621-image-1541746886875.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="8">
          <h2>
          低音、中音和高音
          </h2>

          <img src="https://images.code.org/3825556a395fd31bc4f767ca7ea5c566-image-1541746894197.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="9">
          <h2>
          加速、减速
          </h2>

          <img src="https://images.code.org/d7f35c686ef0a9c5a6975889fd7c566b-image-1541746900730.gif"></a>

          </div>
      Design a Screen for your App_2018:
        markdown: |
          # 制作模拟应用

          现在已经在应用实验室中有了元素布局的练习了，可以开始模拟自己的应用程序了。和小组一起，分派一下屏幕，这样每个人都可以开始不同的屏幕。

          因为工作被分配开了，要做些计划来提前决定通用的页面外观。例如，可能需要在以下方面达成共识：

          * 导航按钮放在哪里？
          * 背景，文本和按钮应该用什么颜色？
          * 一般的样式和布局是什么样？

          # 命名空间

          下节课中，会将所有团队成员的屏幕组合到一个应用中。要确保大家在同一个页面上的 ID 不会冲突，需要为自己的页面加一个唯一的 _命名空间_ 。这是每个 ID 的开始部分，这样就不会在合并的时候，自己的元素 ID 和别人的一样，而造成冲突了。命名空间要用屏幕的ID，并以下划线结束。比如，如果在制作首页，可以用 "home_" 作为命名空间，这样 ID 会是：

          * "home_title"
          * "home_loginButton"
          * "home_logo"
      Design a Screen for your App_2018_2019:
        markdown: |
          # 制作模拟应用

          现在已经在应用实验室中有了元素布局的练习了，可以开始模拟自己的应用程序了。和小组一起，分派一下屏幕，这样每个人都可以开始不同的屏幕。

          因为工作被分配开了，要做些计划来提前决定通用的页面外观。例如，可能需要在以下方面达成共识：

          * 导航按钮放在哪里？
          * 背景，文本和按钮应该用什么颜色？
          * 一般的样式和布局是什么样？

          # 命名空间

          下节课中，会将所有团队成员的屏幕组合到一个应用中。要确保大家在同一个页面上的 ID 不会冲突，需要为自己的页面加一个唯一的 _命名空间_ 。这是每个 ID 的开始部分，这样就不会在合并的时候，自己的元素 ID 和别人的一样，而造成冲突了。命名空间要用屏幕的ID，并以下划线结束。比如，如果在制作首页，可以用 "home_" 作为命名空间，这样 ID 会是：

          * "home_title"
          * "home_loginButton"
          * "home_logo"
      DesigningForAccessibilityMarkdownLevel_2019:
        markdown: |
          # 无障碍设计

          * 在计算机科学的世界中，**无障碍访问（accessibility）** 表示如何让残疾人访问的技术。
          * 残障人士包括身体上，听觉，视觉以及其它类型。
          * 残障人士的各方面都会受到影响，包括他们如何使用 **智能电话的应用**。
          * 设计适合残疾人士使用的应用程序，也会使这些应用程序对其他所有人都更好！

          ![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)
      DigitalCitizenship-Unplugged:
        markdown: |
          # 数字公民

          一些信息在网上共享不安全。本课会帮助学习安全和隐私信息的不同。
      DigitalFootprint-Unplugged:
        markdown: |
          # 数字足迹

          将自己的在线信息创建为数字足迹。
      DigitalSharing-Unplugged:
        markdown: |
          # 数字共享

          这节课会思考尊重所有权和版权的挑战和好处，特别是在数字环境中。
      EnvelopeVariables-Unplugged:
        markdown: |
          # 信封变量

          在计算机科学中，变量带来了很大的自由度。本课会解释变量是什么，如何用不同的方法来使用它们。
      Example App Types_2018:
        markdown: |
          # 示例应用类型

          接下来的几关中，会看到不同类型的应用。这会帮助理解具有不同目的应用程序的 UI （用户界面）是什么样子的。

          对于每个应用程序：

          * 点击示例来了解一下它的功能。
          * 在活动指南中，记下找到的功能或 UI 元素及其用途。
          * 与小组讨论此应用程序或 UI 功能如何能用到自己选择的主题上。

          # 功能的注意事项

          这些应用都是 _原型_; 原型能让用户与设计交互，而不用担心下面的功能。例如，当使用测验应用时，不管怎么选择，每个问题都是同样的回答。

          通过先关注交互式原型，可以在花费大量精力实现应用前，了解用户可能会如何使用这个应用。
      Example App Types_2018_2019:
        markdown: |
          # 示例应用类型

          接下来的几关中，会看到不同类型的应用。这会帮助理解具有不同目的应用程序的 UI （用户界面）是什么样子的。

          对于每个应用程序：

          * 点击示例来了解一下它的功能。
          * 在活动指南中，记下找到的功能或 UI 元素及其用途。
          * 与小组讨论此应用程序或 UI 功能如何能用到自己选择的主题上。

          # 功能的注意事项

          这些应用都是 _原型_; 原型能让用户与设计交互，而不用担心下面的功能。例如，当使用测验应用时，不管怎么选择，每个问题都是同样的回答。

          通过先关注交互式原型，可以在花费大量精力实现应用前，了解用户可能会如何使用这个应用。
      ForLoopFun-Unplugged:
        markdown: |
          # 有趣的计数循环

          学习了循环能重复做一些事情后，现在要学习如何使用有额外的结构的循环。
      GettingLoopy-Unplugged:
        markdown: |
          # 循环吧

          这节课会通过舞蹈活动，来介绍编程中循环的概念。
      GoingPlacesSafely-unplugged:
        markdown: |
          # 安全的去某处

          互联网是一个非常强大，但有时也很危险的地方。浏览互联网时，要保证安全！

          <p align=center>
      GraphPaperProgramming-Unplugged:
        markdown: |
          # 画图纸编程

          写下算法，让同学能用来画图。
      HappyLoops-Unplugged:
        markdown: |
          # 快乐的循环

          这节课会学习循环！

          ![](https://images.code.org/6aac7f675f0c69033f42ccac6a733f68-image-1557769673400.png)
      HappyMaps-Unplugged:
        markdown: |
          # 快乐地图

          创建算法来移动角色通过迷宫。
      Internet Simulator Setup:
        content1: 描述
        markdown: "# Code.org 的互联网模拟器\n\n_注意：本教程中列出的说明，是为需要单独使用互联网模拟器，而不使用 Code.org
          计算机科学原理教案的教师准备的。如果计划将此活动用于 Code.org 计算机科学原理教案的一部分，可访问[计算机科学原理教案页面](https://code.org/educate/csp)。_\n\n###
          内容\n这里包含 3 部分背景信息：\n\n* 什么是网络模拟器？概述（见下文）\n* [设置说明](/s/netsim/stage/1/puzzle/2)\n*
          [常见问答](/s/netsim/stage/1/puzzle/3)\n \n### 什么是网络模拟器？概述：\n\n互联网模拟器是由 Code.org
          为新的高中[计算机科学原理](https://code.org/educate/csp) 课程开发的工具。该工具旨在让学生获得尝试（和解决）与网络计算机相关的各种问题的经验。在教案的第
          1、2 单元的多节课中都使用了互联网模拟器，成功的构建了互联网的不同层次。 \n\n如果考虑在课堂上使用该工具进行自己设计的活动，建议通过[课程计划](https://curriculum.code.org/csp/unit1)来熟悉它。
          下一页的 **设置说明** 适用于希望独立于 Code.org 计算机科学原理教案，来使用互联网模拟器的教师。 \n\n本工具本身不会 _教授_
          这些概念，它只是提供环境，让多名学生到一起能相互发送二进制、十进制或基于 ASCII 码的消息。**环境可以被配置** 为多种情况，来展示不同的问题，可视化主机间的连接和数据，并支持多种与互联网相关概念的学习。\n\n互联网模拟器被设计用于
          *课堂* 中，让学生面对面合作来解决问题。这些问题通常会涉及发明一种通信协议，或通过结构化的方法来编码信息，并能通过互联网传输。 \n\n**在
          Code.org 的计算机科学原理教案中**，通常以下列方式组织课程和活动：\n\n* **首先向学生提出挑战**\n * 例如，真实的互联网本来就不可靠，并且可能会丢弃消息\n*
          **有机会尝试使用模拟器来理解问题** \n * 例如，查看路由器日志来了解，10-20% 的消息都被丢弃了，包的顺序可能错了\n* **有机会发明自己的方法来解决挑战**
          \n  * 例如，发明自己的协议，来解决如何在不可靠的网络上可靠的发送消息\n* **最后，学生会研究协议或发明如何在 \"真实世界\" 工作**\n
          * 例如，研究 TCP 实际上是如何工作的，并观看视频\n\n### 可以配置互联网模拟器做什么？\n\n从最基本的层次来看，互联网模拟器可以在单条没有协调或同步的共享线路上，发送单个比特。从高层次来看，可以模拟多个路由器间的不可靠连接，来使用
          IP 地址，域名解析协议，以及类似于创建 TCP/IP 或 HTTP 所需要的固定大小的数据包。 \n\n互联网模拟器已经根据教学的某些主题进行了大量的配置。但如果要在班级中使用互联网模拟器，需要知道一些用户设置，以便进行控制或让学生用某种方法来设置。
          \ \n\n例如：互联网模拟器的其中一项功能是可以显示二进制、十进制、十六进制以及以 ASCII 表示的任何发送的数据。在一些配置下，用户还可以设置
          \"chunk size\" （块大小）来描述如何表示这些比特。在自己设计的课程中，可以选择某种已有的配置，但也需要要求学生只表示某种特定的比特，或希望将块大小设置为特定的值。\n\n更广泛的是，已提供的配置可能是讲授某个特定观点的起点。可能需要通过一些独创性和教学策略，来进一步优化模拟器的使用，以满足需求。\n\n\n
          <br><br>\n<img src=\"https://images.code.org/0bf9799b2bec2756c1664b84e12cbe27-image-1438642671141.57.13.png\"
          width=\"600px\" style=\"margin:0 100px\"/>\n<br><br>\n\n\n\n    \n\n\n_下一页：设置说明_\n\n<a
          class=\"btn btn-large btn-primary next-stage submitButton\">继续</a>\n"
      Internet Simulator Setup 2:
        content1: 描述
        markdown: "# 互联网模拟器：设置说明\n\n1. **在代码工作室中创建小组。** 为了班级中的学生能相互通讯，需要在代码工作室关联到同一个小组中。作为教师账号登录后，需要为所有学生的加入创建小组。要创建小组：\n
          * 浏览至教师面板的[小组](https://code.org/teacher-dashboard#/sections)部分\n * 点击 '新建小组'
          按钮。推荐讲登录类型选为 'Email' 并将课程选为 'cspunit1'。 \n <br>\n<img src=\"https://images.code.org/9e9961a44b0a2f76ab92e6f9634d8f55-image-1438640255737.17.04.png\"
          width=\"600px\" />\n<br><br>\n2. **让学生加入小组。** 小组创建好后，点击小组的 '管理学生' 链接。学生创建了自己的代码工作室账号后，就可以让他们通过页面中的小组代码来加入。\n<br>\n<img
          src=\"https://images.code.org/9b8863dbb5a8e229e9bc1c4fc74ddd22-image-1438641516264.png\"
          width=\"400px\" />\n<br><br>\n3. **将要使用的互联网模拟器版本的地址共享给学生。** 在 [code.org/internetsimulator](http://code.org/internetsimulator)
          上已经有了几个不同的互联网模拟器配置。当找到自己的活动可以使用的配置后，将地址共享给学生。如果学生们都在同一个小组里，会在打开同样的地址后，自动连接到一起。
          \ \n\n_下一页：常见问题_\n\n<a class=\"btn btn-large btn-primary next-stage submitButton\">继续</a>\n\n"
      Internet Simulator Setup 3:
        content1: 描述
        markdown: |
          # 互联网模拟器：常见问题

          #### 哪里有设计用来使用互联网模拟器的活动？
          为计算机科学原理课程设计的活动，包括特定的互联网模拟器，可以在[这里](https://code.org/educate/csp) 的单元课程计划中找到。许多课程计划都有 "老师的提示和技巧" 的支持视频，这些视频演示了在课堂活动中，如何将互联网模拟器作为一部分来使用。可以按原样使用这些活动，或者随时修改以适合自己的课堂！

          #### 是否能为自己的班级定制互联网模拟器？
          很遗憾，当前不能为 Code.org 之外的人员创建互联网模拟器的特殊配置和说明。我们已尝试提供了大量的配置，希望能适合您的课堂和活动。长期来看，希望能让其他人有办法配置此工具。

          #### 当学生访问提供的互联网模拟器网址时，彼此看不见。该怎么办？
          为了让学生们能在互联网模拟器的大厅里相互看到，他们需要在同一个小组中。再检查一下是否完成了前一页的小组设置说明，并确定有问题的学生都用特定的小组代码加入了。同时，有的学生可能已经使用过 Code.org，并存在于多个小组中，因此确保他们知道本小组的名称，并在进入大厅前，从下拉框中选择了此小组。


          <a class="btn btn-large btn-primary next-stage submitButton">继续</a>
      Internet-Unplugged:
        markdown: |
          # 互联网

          在班级里只用纸来构建自己的互联网。
      K-1 Artist 1 Multi 1:
        answers:
        - text: "/script_assets/k_1_images/artist_images/W-S-S.png"
        - text: "/script_assets/k_1_images/artist_images/E-S-S.png"
          correct: true
        - text: "/script_assets/k_1_images/artist_images/S-E-E.png"
        - text: "/script_assets/k_1_images/artist_images/E-S.png"
        content1: "/script_assets/k_1_images/artist_images/rshort_dlong.png, 500"
        questions:
        - text: 哪些模块解决了这一问题？
        title: 选择题
      K-1 Artist 1 Multi 2:
        answers:
        - text: "/script_assets/k_1_images/artist_images/N-E-S-W.png"
          correct: true
        - text: "/script_assets/k_1_images/artist_images/E-S-W-N.png"
        - text: "/script_assets/k_1_images/artist_images/N-S-E-W.png"
        - text: "/script_assets/k_1_images/artist_images/N-W-S-E.png"
        content1: "/script_assets/k_1_images/artist_images/square.png, 500"
        questions:
        - text: 哪些模块可以绘制正方形？
        title: 选择题
      K-1 Artist 2 Match 2:
        answers:
        - text: "/script_assets/k_1_images/artist_images/medium_circle.png"
        - text: "/script_assets/k_1_images/artist_images/small_square.png"
        - text: "/script_assets/k_1_images/artist_images/large_rectangle.png"
        - text: "/script_assets/k_1_images/artist_images/large_triangle.png"
        content2: 基于类型来匹配形状。
        questions:
        - text: "/script_assets/k_1_images/artist_images/small_circle.png"
        - text: "/script_assets/k_1_images/artist_images/large_square.png"
        - text: "/script_assets/k_1_images/artist_images/medium_rectangle.png"
        - text: "/script_assets/k_1_images/artist_images/small_triangle.png"
        title: 匹配
      K-1 Bee 1 Multi 1:
        answers:
        - text: "/script_assets/k_1_images/bee_images/nectar.png"
        - text: "/script_assets/k_1_images/bee_images/2nectar.png"
          correct: true
        - text: "/script_assets/k_1_images/bee_images/3nectar.png"
        - text: "/script_assets/k_1_images/bee_images/4nectar.png"
        content1: "/script_assets/k_1_images/bee_images/1nectar+2nectar.png"
        questions:
        - text: 这是多少个蜂蜜？
        title: 选择题
      K-1 Bee 1 Multi 2:
        answers:
        - text: "/script_assets/k_1_images/bee_images/nectar.png"
        - text: "/script_assets/k_1_images/bee_images/2nectar.png"
        - text: "/script_assets/k_1_images/bee_images/3nectar.png"
        - text: "/script_assets/k_1_images/bee_images/4nectar.png"
          correct: true
        content1: "/script_assets/k_1_images/bee_images/2nectar+2nectar.png"
        questions:
        - text: 这是多少个蜂蜜？
        title: 选择题
      K-1 Bee Loops Match 1:
        answers:
        - text: "/script_assets/k_1_images/bee_images/4_gnectar.png"
        - text: "/script_assets/k_1_images/move_blocks/NNN.png"
        - text: "/script_assets/k_1_images/bee_images/5_ghoney.png"
        - text: "/script_assets/k_1_images/move_blocks/EEEEE.png"
        content2: 匹配这些模块
        questions:
        - text: "/script_assets/k_1_images/bee_images/r4_gnectar.png"
        - text: "/script_assets/k_1_images/move_blocks/r3_N.png"
        - text: "/script_assets/k_1_images/bee_images/r5_ghoney.png"
        - text: "/script_assets/k_1_images/move_blocks/r5_E.png"
        title: 匹配
      K-1 Big Event Match 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a3.pngac"
        content1: "/script_assets/k_1_images/unplugged_images/big_event_1_desc.png"
        content2: 用按键组合完成跳舞动作。
        questions:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q3.png"
        title: 匹配
      K-1 Digital Footprint Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_a1.png"
        - text: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_a3.png"
          correct: true
        content1: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_q.png"
        questions:
        - text: 哪一个动物留下的数字足迹最**不**安全？
        title: 选择题
      K-1 Getting Loopy Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_a1.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_a3.png"
        content1: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_q.png"
        questions:
        - text: 你将如何用循环来简化这个序列？
        title: 选择题
      K-1 Happy Maps Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/up.png"
        - text: "/script_assets/k_1_images/unplugged_images/down.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/left.png"
        - text: "/script_assets/k_1_images/unplugged_images/right.png"
        content1: "/script_assets/k_1_images/unplugged_images/happy_maps_1q.png"
        questions:
        - text: 哪个箭头让会让福乐波得到宝藏？
        title: 选择题
      K-1 Keep it Private Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/keep_it_private_1_a1.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/keep_it_private_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/keep_it_private_1_a3.png"
        questions:
        - text: "**不**应该在线共享哪些信息？"
        title: 选择题
      K-1 Maze Debugging Multi 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/N.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/S.png"
        - text: "/script_assets/k_1_images/move_blocks/E.png"
        - text: "/script_assets/k_1_images/move_blocks/W.png"
        content1: "/script_assets/k_1_images/maze_images/EESq.png, 700"
        questions:
        - text: 哪个选择是最终的模块？
        title: 选择题
      K-1 Maze Loops Multi 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/r3_N.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/r3_NN.png"
        - text: "/script_assets/k_1_images/move_blocks/r4_N.png"
        content1: "/script_assets/k_1_images/move_blocks/NNNequals.png, 300"
        questions:
        - text: 哪个重复模块一样？
        title: 选择题
      K-1 Maze Loops Multi 2:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/r3_S.png"
        - text: "/script_assets/k_1_images/move_blocks/r3_ES.png"
        - text: "/script_assets/k_1_images/move_blocks/r3_SE.png"
          correct: true
        content1: "/script_assets/k_1_images/move_blocks/SESESEequals.png, 240"
        questions:
        - text: 选择正确的重复块。
        title: 选择题
      K-1 Maze Match 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/EN.png"
        - text: "/script_assets/k_1_images/move_blocks/ENE.png"
        - text: "/script_assets/k_1_images/move_blocks/WW.png"
        - text: "/script_assets/k_1_images/move_blocks/WSS.png"
        content2: 匹配谜题和模块
        questions:
        - text: "/script_assets/k_1_images/maze_images/maze_EN.png"
        - text: "/script_assets/k_1_images/maze_images/maze_ENE.png"
        - text: "/script_assets/k_1_images/maze_images/maze_WW.png"
        - text: "/script_assets/k_1_images/maze_images/maze_WSS.png"
        title: 匹配
      K-1 Maze Multiple Choice 2:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/EN.png"
        - text: "/script_assets/k_1_images/move_blocks/ES.png"
        - text: "/script_assets/k_1_images/move_blocks/WS.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/WN.png"
        content1: "/script_assets/k_1_images/maze_images/maze_WS.png, 500"
        questions:
        - text: 哪个答案可以解出这一关？
        title: 迷宫
      K-1 Move It Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/rightright.png"
        - text: "/script_assets/k_1_images/unplugged_images/leftleft.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/upleft.png"
        - text: "/script_assets/k_1_images/unplugged_images/leftdown.png"
        content1: "/script_assets/k_1_images/unplugged_images/move_it_1_q.png"
        questions:
        - text: 哪种算法使福乐波能到花那里？
        title: 选择题
      K-1 Plant a Seed Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/poke-hole.png"
        - text: "/script_assets/k_1_images/unplugged_images/foot-in-shoe.png"
        - text: "/script_assets/k_1_images/unplugged_images/dirty-teeth.png"
          correct: true
        content1: "/script_assets/k_1_images/unplugged_images/plant_a_seed_1_q.png"
        questions:
        - text: 在这个算法的开头应该是哪一步？
        title: 选择题
      K-1 Plant a Seed Multi 2:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/brush-teeth.png"
        - text: "/script_assets/k_1_images/unplugged_images/cover-seed.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/water-pot.png"
        content1: "/script_assets/k_1_images/unplugged_images/plant_a_seed_2_q.png"
        questions:
        - text: 哪一步可以填入算法的空白处？
        title: 选择题
      K-1 Word Search Multi 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/EEES.png"
        - text: "/script_assets/k_1_images/move_blocks/EESS.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/ESSS.png"
        content1: "/script_assets/k_1_images/search_images/move.png, 450"
        questions:
        - text: 哪些模块拼出了"MOVE"？
        title: 选择题
      K-1 Word Search Multi 3:
        answers:
        - text: SET
        - text: SQUARE
          correct: true
        - text: SOUTH
        content1: "/script_assets/k_1_images/search_images/square.png, 700"
        questions:
        - text: 哪个单词被拼出来了？
        title: 选择题
      MoveItMoveIt-Unplugged:
        markdown: |
          # 移动它，移动它

          用地图和给出的命令来到达目标。
      Multi-Screen Apps:
        content1: 描述
        markdown: |
          # 制作多个屏幕

          可能会想像一个典型的应用程序在使用过程中会看到多个 "屏幕" 或视图。下面是带有欢迎屏幕，游戏屏幕和游戏结束屏幕的典型示例。

          <img src="https://images.code.org/27065f81b2bf53dea099a76868f66e8e-image-1477324003598.png" style="display: block; margin: auto">

          ## 什么是屏幕？

          在设计模式下，屏幕只是一个用户界面元素。但它有几个特别的属性。

          1. 屏幕是可以容纳其它用户界面元素。
          2. 一次只能有一个屏幕可见
          3. 当屏幕被激活时，只有 "属于" 这个屏幕的元素才能可见。
          4. **多个屏幕，只有同一个代码工作区**
            * 即便 *设计元素* 可能分布在多个屏幕上，代码也不会像这样分布开。
            * 只有一个代码工作区，容纳应用的所有代码。

          ## 如何创建新屏幕

          <div style="float: left; width: 33%">
          有两种方法往应用里添加屏幕。首先，确保在<em>设计模式</em>中。
          <br><br>
          <span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          要么从显示区域上的下拉菜单中选择 <em>创建屏幕 ...</em>。 <strong>注意：</strong> 这个下拉菜单还用于在设计模式中切换屏幕。
          <br><br>
          <span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          或者从从工具箱中拖出一个屏幕。 <strong>注意：</strong>一旦松开屏幕元素，应用会显示<strong>新的空屏幕</strong>。 可以使用上方的下拉框返回其它屏幕。

          </div>

          ![](https://images.code.org/ed8f45d70a65329597c1623ddd756249-image-1477165123570.png)

          ## 设置屏幕属性

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 4; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          在下拉菜单中选择要操作的屏幕。列表会包含所有创建出的屏幕的标识。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          在背景的空白区域上点击，来选择屏幕并设置它的属性。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          屏幕也有标识。和其它界面元素一样，<em>给屏幕一个描述性并有意义的标识</em>是个好主意。这会让编码过程更轻松。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          如果屏幕上布满了界面元素，没有空白区域去点击选择屏幕，使用工作区的下拉菜单。它列出了包括屏幕在内，以及这个屏幕包含的所有界面元素。</p>
          </div>

          <img src="https://images.code.org/5f8934e6ae0fc2d9dfde8c9a0d93eec2-image-1477249243769.png" style="display: block; margin: auto;">

          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 50%; float: right">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>
          点击按钮来将当前屏幕设置为 "默认屏幕"，这表示在应用启动时，这个屏幕会首先显示。</p>



          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span>
          屏幕没有太多属性，但可以将屏幕的背景设为某种颜色或一张图片。图片会被拉伸或挤压来适配屏幕。</p>

          </div>
          <div style="clear: both">&nbsp;</div>

          ## 使用 *setScreen* 命令来用代码改变屏幕

          `setScreen` 命令会将需要的屏幕显示出来。通过屏幕的标识来指定。

          <img src="https://images.code.org/005222ed01ade7940963ce149d637286-image-1477168080948.png" style="display: block; margin: auto">

          <div style="column-count: 3; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          在界面元素工具箱中找到 <em>setScreen</em>，并拖到代码工作区。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          大多数情况下，是根据用户事件来修改屏幕。这里，<em>setScreen</em> 会被加到标识为 <em>smileyFace</em> 的 "click" 事件处理函数中。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          将屏幕标识设置为需要变化的。这里，当屏幕上的笑脸被点击时，要将说 "hello" 的屏幕换成说 "再见" 的。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          <strong>主要思想：多个屏幕 - 一个代码工作区。</strong> 这是处理 "click" 事件的代码，来设置为<em>有不同图片的另一个屏幕</em> - <em>goodbyeScreen</em>。现在不能看到那张图片或屏幕，因为没有选择那个屏幕。无论如何，它的代码可以写在这里。</p>

          </div>
      MyLoopyRoboticFriends-Unplugged:
        markdown: |
          # 我的循环机器人朋友们Jr.

          将假装您的同学是机器人，但这次使用循环把你的程序变短。
      MyRoboticFriends-Unplugged:
        markdown: |
          # 我的机器人朋友

          将假装您的同学是机器人，并对它们进行编程以构建堆叠杯子的模式。
      New Challenge Introduction:
        content1: 描述
        markdown: "### 新挑战：用新部件破解随机替换密码\n\n如果不移动整个字母表，而是将每个字母映射到字母表上不同的字母上会怎样？这叫做
          ** 随机替换加密**。\n\n![](https://images.code.org/7837e7fef2f38659f4bf51a29b6dc4d3-image-1473863470440.gif)\n\n现在，加密信息不是用简单的字母表移位了，现在面对的消息用了
          **随机替换** 来编码。  \n\n\n\n这个破解会难一些，并且会用更复杂的工具，因此...\n\n点击继续后，会看见 **新的，更复杂版本的加密工具**
          会显示很多不同的东西。\n\n但这确实很神秘！  \n\n### 任务：\n\n * 搞懂新工具里有什么\n * 提供的是什么信息？\n * 弄明白工具能做什么\n
          * 和往常一样：弄不坏的。到处点点，试试。\n * 如果弄明白了，也许能够破解随机替换的消息。\n \n### 提示\n\n* 是否知道 **E**
          是英语里最常用的字母？\n\n### 集合并讨论\n 在玩了一段时间之后，与其他人（伙伴，小组，全班）聚在一起，讨论自己的发现，并验证一下进度，以及使用该工具的各种方式。\n\n\n"
      OPD-K5 About:
        markdown: "# 入门：关于本课程\n\n## 课程概述\n\n本课程旨在介绍 Code.org 的计算机科学基础课程和教师资源。通过阅读，观看视频，完成互动难题并反思自己的学习。在准备课堂上教授计算机科学的同时，发展自己的理解。\n\n##
          学习目标\n\n通过完成这些在线课程，参与者可以：\n\n- 学习计算机科学的基础 \n- 查看向学生教授这些基础知识的最佳实践 \n- 访问免费的教师资源和教案
          \n- 规划如何开始教授计算机科学基础知识\n- 与社区的教育工作者建立联系，他们通过在课堂上编码来产生积极的变化 \n\n## 先决条件\n\n不需要编码或计算机科学教育的预先经验。这是个初学者教程。\n\n>
          **听众注意事项：** 本课程侧重于 k-5 学生的 Code.org 的免费计算机科学基础课程。尽管许多相同的概念都可以应用于任何计算机科学课程，但是如果希望教授比计算机科学基础知识更深入的计算机科学课程（例如，我们的
          [中学](https://code.org/educate/csd) 或 [高中](https://code.org/educate/csp)
          课程），建议您继续学习 [深入持续的专业发展机会](https://code.org/educate/professional-learning/middle-high)。\n\n##
          课程长度\n\n完成在线课程可能需要 3-7 个小时，体取决于先前的知识以及希望探究 Code.org 资源的深度。\n"
      OPD-K5 Assessment:
        markdown: "# 计划 > 其它资源\n\n作为教师登录 Code.org 后，可以看到更多学生没有的功能。已经了解了如何查找课程，创建部分并将课程分配给该部分。还可以：
          \n\n- **跟踪学生进度**：[评估](https://support.code.org/hc/en-us/articles/115000693231-Viewing-student-progress)
          所有学生的学习情况。\n- **课程进度**：作为学习者，可以在 Code.org 课程上查看自己的个人进度。学生也可以查看他自己的进度。但作为老师，也可以查看课程计划并查看每个难题的解决方案。\n-
          **帮助和社区**: 访问 [support.code.org](https://support.code.org/)，可发布问题，答复其他教师的发现，阅读
          Code.org 员工提供的常见问答。在这个页面，还可以直接联系 Code.org，提出任何问题。\n- **专业发展**：访问为教师提供的 [个人培训](https://code.org/professional-development-workshops)。\n-
          **计算机科学演讲嘉宾**: [寻找聪明、热情和有吸引力的科技行业专业人员](https://code.org/volunteer/local)，他们非常愿意到班级中谈论自己的工作。\n\n<br/>\n---\n>
          ## 访问 support.code.org\n> 如果遇到困难或有疑问，请确保查看了 support.code.org 上的支持文档！也可以直接通过此页面找到我们。[论坛](http://forum.code.org/t/teaching-conditionals/406/1)。\n\n>
          <a href=\"http://support.code.org\" target=\"blank\"><button class=\"plc\">获得帮助
          >></button></a>\n\n在论坛中发表评论后，返回此处，然后单击下面的按钮进入下一阶段。\n"
      OPD-K5 CS Courses:
        markdown: "# 计划 > Code.org 入门\n\n\n## 第 1 步：选择课程\n所有的课程 -- 从学前班到高中 -- 都列在了
          **[课程分类](https://studio.code.org/courses)**。要找到学习的计算机科学基础课程，访问 **[小学页面](https://code.org/educate/curriculum/elementary-school)**
          并滚动到 \"课程\" 章节。所有的课程都不需要付费。与学校的同事讨论，以确定如何将课程与各种科目整合在一起。\n![](https://images.code.org/37dd42348eba605513fd0b1f17d1409c-image-1549066063927.png)\n***\n##
          第 2 步：设置课堂小组\n设置课堂小组来查看学生进度，为学生打印登录卡片，管理账号，并在完成后打印出能带回家的证书。点击链接 **[观看简短介绍](https://code.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=56d32934-3f67-48db-98db-e66e9152df7b)**，展示了如何在
          Code.org 设置第一个计算机科学班级。也可以在 **[支持文档](https://support.code.org/hc/en-us/articles/115000488132-Creating-a-classroom-section)**
          中找到这些步骤。\n![](https://images.code.org/26b023ea019f33492aebea43eb6a1dfe-image-1549065670221.png)\n***\n##
          第 3 步：将课程分配给小组\n点击正在教学的课程 -- 应该可看到下面这样的页面。点击 \"分配课程\" 并将课程分配给某个小组。 \n![](https://images.code.org/3b81aa7989d237447e525f42646412d4-image-1549065690577.png)\n***\n##
          第 4 步：开始教学！ \n所需要的只是一堂将计算机科学概念带入课堂的课程。一旦看到学生对计算机科学的热情，就可以进一步制定每日课程计划来指导学生，无需计算机即可进行的线下活动，以及与其他老师建立联系的论坛。\n\n\n"
      OPD-K5 CS Tips:
        markdown: |
          # 入门 > 浏览在线课程

          如果已经做过了，恭喜！当完成此课程后，将熟悉计算机科学基础提供的所有内容。

          如果遇到问题，下列信息会帮助浏览并使用此专业工具，来完成在线课程。

          ---

          ## 阶段

          主要的专业发展页面如图。本页会分成几个 _阶段_，每个都表示一个不同的主题或创意。

          <img src ="https://images.code.org/3f0fa0abc76fa6e6bde06bb4bc705202-image-1548976538784.png" />

          <br/>
          <br/>

          ## 难题

          每个阶段都由一组，称之为 __难题__ 所组成，包括单独的视频、读物、或问题。难题由带数字的圆圈来表示。难题圆圈的颜色会根据进度而改变。在专业发展课程中，会看到以下几种类型的颜色：
          <br/>

          <img src ="https://images.code.org/8b3fcfcf0120bed0dc34c014f1f81071-image-1548976153188.png" />

          <br/>
          <br/>

          ## 访问难题

          难题会在以下几处：
          <p>-在专业发展主页面</p>
          <p>-在任何难题页面的页头上</p>
          <p>-任何难题页头的下拉列表里</p>

          <h4><details>
          <summary style="color:#ffa400;">点击了解如何访问难题的更多介绍</summary>
          <br>
          <div><em>查看结束后，点击上面的箭头来折叠本节</em></div>
          <br>
          <img src ="https://images.code.org/27681ae1028bb26bcacd9970086c3792-image-1548976069596.gif" />
          </details></h4>

          <br/>

          ## 在难题间移动

          在每个难题之后，要达到下一个，点击 "继续" 或 "下一个资源"。或者，任何时候，都可以点击页头的数字来跳到新的难题上。

          <h4><details>
          <summary style="color:#ffa400;">点击了解如何在难题间移动的更多介绍</summary>
          <br>
          <div><em>>查看结束后，点击上面的箭头来折叠本节</em></div>
          <br>
          <img src ="https://images.code.org/d28046a78ecb03f9501f3bb7764c7ce8-image-1548976730590.gif" />
          </details></h4>

          <br/>
          <br/>


          > 这就是所有内容！如果要了解如何使用此平台，可随时回到此关。
      OPD-K5 Celebrate:
        markdown: |
          # 下一步 > 该庆祝了！

          祝贺完成了专业发展在线课程！如果已完成本培训的所有级别，则可以通过完成以下步骤立即下载并打印成就证书：

          1. 访问[链接](https://code.org/certificates?course=Teaching%20Computer%20Science%20Fundamentals).
          2. 在输入狂中输入姓名。
          3. 点击打印证书
          4. 右击证书图片，并选择 "另存为"，即可将证书下载到自己的计算机。

          别忘了... 可随时返回此在线课程来回顾学习，访问链接或资源，或者仅仅回忆一下！

          感谢您的参与！迫不及待想听听您如何在课堂中实践计算机科学和代码工作室！
      OPD-K5 Congrats:
        markdown: "# 事件 > 回顾\n\n本阶段中，制作了一些有趣的游戏，组合了关键概念，并展示了学习成果。通过基于程序的其它部分来触发动作，事件提高了代码的能力。
          \ \n\n**花点时间来看看计算机科学基础教案是如何介绍事件的，并考虑如何在课堂中开展建议的活动。**\n\n![](https://images.code.org/8312823c84d52d7119ab0b5e99363d39-image-1549054807593.jpg)\n"
      OPD-K5 CongratsFinal:
        markdown: |
          # 祝贺！

          <img src="https://images.code.org/3e21c6e68f0b6565ba16ad2b63b892f0-image-1434398206115.jpg" width="450px">
          <br/><br/>
          现在，已经完成了第 1-8 阶段，学会了计算机科学的基础。希望在这个过程中感到了喜悦！也希望您已经考虑好了如何将学到的东西，应用到教学实践中。
          <br/><br/>
          下个阶段中，会介绍一些最佳实践，以便在课堂上传授这些基础知识。
      OPD-K5 Connect:
        markdown: "# 下一步 > 建立联系\n\n除了进行进一步的正式培训之外，还可以考虑访问 code.org 社区以继续与他人进行非正式学习，或者只是寻求支持或建立同伴网络。这样做：
          \ \n\n<br/><br/>\n\n> **继续参与 code.org 的教师专业学习社区：** 在本课程中一直使用的论坛将是前进的重要资源。不仅可以使用它来回顾本课程的学习内容，还可以在继续旅途中找到支持，甚至为需要专业知识的其他人提供支持。请立即将其添加为书签并经常访问：[http://forum.code.org/c/csf](http://forum.code.org/c/csf)
          \ \n\n<br/>\n\n> **与推特中的 [@teachcode](http://twitter.com/teachcode) 联系。**
          \ \n\n<br/>\n\n> **加入计算机科学教师协会 (CSTA):** [CSTA](http://csta.acm.org/index.html)
          是一个遍布全国的教育工作者团体，致力于为学生提供计算机科学教育，同时提高公众对这一学科的认识。他们会举办年度会议和地区分会。\n"
      OPD-K5 Culture:
        markdown: |+
          # 最佳实践 > 课堂文化

          如何在计算机科学课程中倡导健康的课堂文化？首先，要确保教室中的每个人，包括我们自己，都了解我们可以像计算机科学家一样行事的方式以及应牢记的注意事项。这样可以使每个人都有同样的理解，并使课堂上的教学工作更加轻松。

          <img src="https://images.code.org/b5d9ae18a882a4359f096b9c6ade135e-image-1434398703448.jpg" width="450px" style="margin-right:45px; border-radius:10px;">

          ## 像计算机科学家一样的行动方式：

          - **保持好奇：** 好奇时，会点点不同的菜单，运行一段代码看看会发生什么，或者看看不同设置的效果。好奇心经常能让自己找到问题的答案。
          - **问问题：** 尝试自己解决问题后，再寻求他人的合作。
          - **有耐心：** 保持信息来解决开放复杂的问题，并坚持住。一旦成功的写了一些程序，并感受了解决困难问题后成功的喜悦，这就会更容易了。
          - **将大问题分解为更小，更易于管理的问题：** 这称为 **分解**。
          - **通读自己的代码：** 计算机会严格执行人的指令。逐步跟踪代码（就像自己在处理指令一样），这有助于查找逻辑错误或缺少的步骤。
          - **不要为犯错误感到难过：** 犯错不是失败；这是里找到正确方案或完成产品的更近的一步。
          - **离开屏幕：** 这会给自己一个急需的休息时间，通常在回来看问题的时候会有新的视角。

          ## 学习计算机科学时要记住的事情：

          - 计算机编程的世界发展的非常快，因而没人真正的精通。**我们都是学习者**。虽然所处的阶段不同，但一直都是学习者。
          - 每次回来时，都会感到更适应。**没人会在第一次学习时就成为专家。**
          - 不能绕过去，**编程的活动以及学习编程都需要时间，但任何人都能做到！**
          - 可以与学生分享 **自己学习编程的真实体验**！

          > ## 反思：
          > 在讲授计算机科学时，准备如何创造健康的课堂文化？ [分享推特](https://twitter.com/codeorg) 并加上 @teachcode 标签，以便我们能反馈。

          > <a href="http://ctt.ec/pdL3a" target="blank"><button class="default">在推特上分享 >></button></a>

      OPD-K5 Outline:
        markdown: |
          # 入门 > 课程大纲

          该课程分为11个阶段，每个阶段均由 "关卡" 或 "难题" 组成。以下是完成整个课程后所学内容的概述：

          ## 第 1 阶段：入门 (10-30 分钟)

          通过完成第 1 阶段：

          - 回顾课程详情
          - 练习将 Code.org 作为学习平台来使用
          - 计划参与课程

          ## 第 2 阶段：计算机科学基础 (10-30 分钟)

          通过完成第 2 阶段：

          - 定义计算机科学，回顾关键词汇
          - 确定计算机科学教学的好处
          - "编码" 和 "计算机科学" 的不同
          - 说明可视化编程来入门的好处

          ## 第 3 阶段：展望 (10 分钟)

          通过完成第 3 阶段：

          - 通过回顾接下来的课程，来准备好 "掌握计算机科学基础"

          ## 第 4 阶段：掌握基础知识：序列 (10-30 分钟)

          通过完成第 4 阶段：

          - 定义 "程序" 和 "算法"
          - 使用 Code.org 可视化编程引擎写一些简单程序
          - 在班级应用上的反思

          ## 第 5 阶段：掌握基础知识：循环 (20-45 分钟)

          通过完成第 5 阶段：

          - 定义 "循环" 并解释它们的重要性
          - 练习编写简单的循环
          - 反思班级应用

          ## 第 6 阶段：掌握基础知识：条件语句 (20-45 分钟)

          通过完成第 6 阶段：

          - 定义 "条件语句" 并解释它们的重要性
          - 练习编写简单的条件语句
          - 反思班级应用

          ## 第 7 阶段：掌握基础知识：函数 (20-45 分钟)

          通过完成第 7 阶段：

          - 定义 "函数" 并解释它们的重要性
          - 练习编写简单的函数
          - 反思班级应用

          ## 第 8 阶段：掌握基础知识：事件 (30-60 分钟)

          通过完成第 8 阶段：

          - 定义 "事件" 并解释它们的重要性
          - 练习编写简单的事件
          - 反思班级应用

          ## 第 9 阶段：教授计算机科学的最佳实践 (30-60 分钟)

          通过完成第 9 阶段：

          - 回顾教授计算机科学的最佳实践

          ## 第 10 阶段：计划 (30-60 minutes)

          通过完成第 10 阶段：

          - 浏览 Code.org 资源，如教师面板
          - 计划如何将计算机科学集成到实践中

          ## 第 11 阶段：下一步 (10-30 分钟)

          通过完成第 11 阶段：

          - 反思学习过程
          - 为下一步继续学习做计划
          - 与对计算机科学教育感兴趣的全球教育工作者社区建立联系
          - 分享体验和对此课程的反馈

          > **注意**：上面提供了建议时间，以帮助计划学习。请注意，根据自己以前的知识，兴趣和学习速度，实际花费的时间可能更多或更少。这门课程完全是自定进度的；可以随时退出课程并随时返回，或重新访问任何阶段或级别。
      OPD-K5 Pair:
        markdown: |+
          # 最佳实践 > 结对编程

          许多教师使用的最重要的课堂管理方法是有策略的分组。在 Code.org，我们建议尝试使用顶级技术公司在现实世界中使用的分组策略：结对编程。

          >**结对编程（pair programming）** 是两个学生使用同一台计算机写程序。The National Center for Women & Information Technology (NCWIT,国家妇女与信息技术中心) 有 [关于结对编程好处的大量资源](http://www.ncwit.org/sites/default/files/resources/pairprogramming_retainingwomencollaborativelearning_practice.pdf).

          研究表示，结对编程：

          - 相对于非配对学生的程序，可以带来更高质量的学生程序。
          - 减少男女学生之间的所谓 "自信差距"，同时增加所有学生的编程信心
          <br/><br/>

          观看视频来了解结对编程是如何起作用的，并直接从学生听到它是如何增强学习效果的。

          [![](https://images.code.org/2c721ff31fbd06f527d99965d3460fa8-image-1571172758005.52.13 PM.png)](https://www.youtube.com/watch?v=vgkahOzFH2Q)

          [不能打开视频？点击这里](http://videos.code.org/2014/C1-pair-programming.mp4)
          <br/><br/>
          结对编程不仅对学生有益，而且某些专业计算机程序员也正在实践这种编程。观看此视频，了解如何向学生介绍结对编程。

          [![](https://images.code.org/01da36dbe56da7986c3652991d4828e8-image-1571172869229.54.16 PM.png)](https://www.youtube.com/watch?v=sxToW3ixrwo)

          [不能打开视频？点击这里](https://videos.code.org/levelbuilder/06pairprogramming_small-mp4.mp4)
          <br/>


      OPD-K5 Participation:
        markdown: "# 入门 > 规划学习\n\n在开始前，先花点时间考虑学习的需求，目标，以及在线学习的特点，自定进度的环境 - 特别是如果这是第一个在线课程！\n\n##
          由自己主导\n\n自定进度的在线课程，进度控制在自己手上。 ***请抽出时间，按照自己的进度来完成本课程。每个阶段的建议时间都已给出。*** 如果自己的速度比每个阶段的多或者少，都不用担心！我们的主要目标是让你感兴趣，学习基础，并且将学到的内容按照自己的方法应用到班级中。\n\n##
          建立联系\n\n要在整个学习过程中保持动力和专注，一种方法是积极参与我们的 <a href=\"http://forum.code.org/c/plc\"
          target=\"_new\">专业学习社区 (PLC) 论坛</a>。 \n可以先介绍一下自己：<a href=\"http://forum.code.org/t/welcome-please-introduce-yourself/410\"
          target=\"_new\">\"自我介绍\" 贴</a>。整个过程中，都可以用论坛来与其他学习者，随时分享想法，收获与问题。\n\n<a href=\"http://forum.code.org/t/welcome-please-introduce-yourself/410/1\"
          target=\"blank\"><button class=\"plc\">立刻介绍自己 >></button></a><br>\n\n##
          在需要时寻求帮助\n\n无论何时，在课程中卡住了，可前往 [support.code.org](http://support.code.org)
          并访问 [社区论坛](https://support.code.org/hc/communities/public/topics)。可能会找到答案。如果没找到答案，或还有困难，可发邮件给
          [teacher@code.org](mailto:teacher@code.org)，Code.org 的工作人员会尽快与您联系。\n\n##
          一起学习！\n\n请记住，我们是一个很小的团队，并且我们能力的规模，我们无法像面对面的培训一样回应所有的支持请求。出于这个原因，我们建议您与合作伙伴或同事小组一起完成此在线课程***。\n\nCode.org
          认识到结对学习和协作的力量。实际上，\"结对编程\" 是一种很好的行业实践，将在第 8 阶段将其作为课堂最佳实践进行探讨。如果觉得与伙伴或小组学习会更好，为什么不与他们一起完成课程？如果您不认识现实中有人能一起学习，可前往
          [PLC论坛](http://forum.code.org/t/never-swim-alone-the-find-a-buddy-thread/411),
          [Twitter](https://twitter.com/teachcode), or [Facebook](https://www.facebook.com/groups/1457214714576953/)
          以及 Code.org 社区中找到一起学习的人。\n\n## 寻找适合的学习体验\n\n最后，在线学习并不适合所有人。本课程没有指导者或内置机制可以与伙伴进行及时交流。如果发现自己需要更多的一对一关注，或者知道自己在一个有更多合作和参与机会的现实世界教室中学习得更好，建议选择我们的面对面的专业发展机会。\n\n<a
          href=\"http://code.org/professional-development-workshops\" target=\"blank\"><button>查找附近的面对面学习研讨会
          >></button></a>\n\n* * *\n\n## 有什么计划？\n\n现在花点时间考虑如何和何时完成此在线课程，以确保从体验中获得最大的收益。当草拟好计划后，继续深入研究第一阶段。\n"
      OPD-K5 PostSurvey:
        markdown: "# 入门 - 填写结束问卷\n\n感谢使用教师的计算机科学基础在线专业发展课程！ \n\n无论是否完成了整个课程，我们都希望听到您的反馈。请提交这份简短的问卷调查，以帮助我们改进此课程！\n\n<a
          class=\"btn btn-large btn-primary submitButton\" href=\"https://form.jotform.com/90557778075168?user_id=<user_id/>\">
          填写结束问卷</a>\n\n"
      OPD-K5 PreSurvey:
        markdown: |+
          # 开始 > 填写前置问卷

          希望您从这次专业发展中获得最大的收获。因此，我们请您填写 [此简短的前置问卷](https://form.jotform.com/90556900301146)。调查将要求您对本课程的目标进行反思，并介绍您的身份以及我们如何为您提供支持。

          <a class="btn btn-large btn-primary" href="https://form.jotform.com/90556900301146?user_id=<user_id/>">填写前置问卷</a>

      OPD-K5 Puzzles:
        markdown: "# 展望 > 关于难题\n\n在接下来的阶段中，将使用 Code.org 学习计算机科学的基础知识。将面临一系列需要解决的难题。为了解决难题，必须使用不同的角色编写程序来完成不同的目标。将在第
          3 阶段中练习第一个难题。在那之前，这里总结了将遇到的各种难题：\n\n## 示例迷宫难题\n\n![](//code.org/images/mockup_birds.png)\n![](//code.org/images/pvz.png)\n\n需要让愤怒的小鸟抓到猪，还要让僵尸到达太阳花。\n\n##
          示例小艺术家难题\n\n![](//code.org/images/artist.png)\n\n要让小艺术家通过移动，在画布上画出灰色的线条。无论他走到哪里，都会在后面划一条线。\n\n##
          示例蜜蜂难题\n\n![](//code.org/images/bee.png)\n\n需要四处移动蜜蜂来收集花蜜，并酿蜂蜜。每个需要的花和蜂蜜的数量，都写在它的右下方。\n\n##
          剧本实验室\n\n![](//code.org/images/playlab.png)\n\n在剧本实验室中，需要根据不同目标，来创建游戏和故事。\n\n##
          像素鸟\n\n![](//code.org/images/flappy.png)\n\n在像素鸟中，可以创建自己的像素鸟游戏。\n此游戏的难题，会帮助学习创建自己游戏所需要的代码。\n\n##
          弹球\n\n![](//code.org/images/bounce.png)\n\n在弹球游戏中，要创建自己的游戏。 \n和像素鸟类似，此游戏的难题，会帮助学习创建自己游戏所需要的代码。\n\n*
          * *\n\n本系列中，将介绍 [计算机科学基础](http://code.org/educate/k5) 中的难题。这些难题可作为在线教程，帮助学生学习循环，事件，条件和函数等概念。\n\n在此专业发展体验中，将穿插一些难题的过程，使得有机会熟悉计算机科学基础中的编程概念以及学生会喜欢的角色。在本课程中，会注意到在不同的环境之间快速切换；是让愤怒的小鸟抓到猪，画图，或者让蜜蜂收集花蜜。在本课程中，这些切换会很快，以展示计算机科学基础中提供的一系列难题。学生将在每种环境上花费更多的时间。\n\n如果要更熟悉学生的体验，随时可以自行完成
          [计算机科学基础](http://studio.code.org/) 课程。但本课程通过提供一些最基本的难题和课程，将在短时间内提供很好预期的结果。\n"
      OPD-K5 Stage10Start:
        markdown: |
          # 下一步 > 开始回顾

          <img src="https://images.code.org/606dbb1b30885387e25bc1265f8966b2-image-1434150440566.JPG" width="450px">

          ## 快完成了！

          到目前为止，已经学习了编码的基础知识，探索了如何教授计算机科学，并为下一步创建简单的计划。

          完成第 11 阶段，可以：

          - 反思自己的学习
          - 为下一步继续学习做计划
          - 与对计算机科学教育感兴趣的全球教育工作者社区建立联系
      OPD-K5 Stage1Go:
        markdown: |
          # 入门 > 准备好了？开始！

          <img src="https://images.code.org/80a1fa04481359759d2b86ddca9b33a4-image-1433972662378.png" class="level-image">

          完成此阶段后，可以：

          - 回顾课程详情
          - 学习如何浏览学习平台
          - 规划如何参与此课程

          下一阶段会：

          - 定义 "计算机科学"，并回顾关键词汇
          - 明确教、学计算机科学的好处
          - "编码" 和 "计算机科学" 的不同
          - 说明通过可视化编程入门的好处
      OPD-K5 Stage2Go:
        markdown: |
          # 计算机科学基础 > 展望

          希望本阶段能给计算机科学一个很好的介绍。

          完成此阶段后，可以：

          - 定义 "计算机科学"，并回顾关键词汇
          - 明确教、学计算机科学的好处
          - "编码" 和 "计算机科学" 的不同
          - 说明通过可视化编程入门的好处

          > **教学技巧：** 尽管计算机科学可以是一门丰富而复杂的学科，但在 Code.org 中，我们认识到教师和学生在进入更高层次的项目之前需要掌握基础知识。该在线课程将教给老师这些基本知识，以便可以为学生提供支持。

          在下一阶段，将简要介绍一些框架，用于思考本课程的其余内容。然后，将深入研究并开始学习计算机科学。
      OPD-K5 Stage2Overview:
        markdown: |
          # 计算机科学基础 > 阶段概述

          在第 1 阶段中，了解了本课程，并学习了如何浏览学习平台。现在要开始学习真正的内容了。

          先从基础开始。

          <img src="https://images.code.org/8af62f96e37199542519fae8580b0a29-image-1434146715374.jpg" width="450px" style="margin-right:45px; border-radius:10px;">

          通过学习第 2 阶段，可以：

          - 定义 "计算机科学"，并回顾关键词汇
          - 明确教、学计算机科学的好处
          - "编码" 和 "计算机科学" 的不同
          - 说明通过可视化编程入门的好处

          规划出 10-30 分钟来完成此阶段。
      OPD-K5 Stage3Go:
        markdown: "# 顺序 > 反思\n\n祝贺！刚刚写了一些代码，成为了正式的程序员！我们的平台会跟踪写出了多少代码，在完成每个难关之后显示！\n\n---\n\n注意到最后一关有一点困难了吗？这是一个
          **挑战** 难题。挑战难题意味着扩展学生们能达到的边界。要明确说明的是，我们希望学生去尝试，但不应该要求他们完成了，才表示本课成功了。\n\n<img
          src=\"https://images.code.org/e3b9903cf4acc68be5c01c4118b3d53d-image-1434152749660.JPG\"
          width=\"450px\" style=\"margin-right:45px; border-radius:10px;\">  \n\n---\n\n**现在花一些时间来看看顺序（包括编程和算法）是如何在计算机科学基础教案中介绍的，并思考如何在课堂上实现这些建议的活动。**\n\n"
      OPD-K5 Stage3Start:
        markdown: |
          # 顺序 > 阶段概述

          <img src="https://images.code.org/06b4f5c946f2a47176706352d9dbbb56-image-1434152393531.JPG" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          完成第 4 阶段后，可以：

          - 定义 "算法" 和 "程序"
          - 使用代码模块编程
          - 在班级应用上思考

          > **本阶段的期望：** 在接下来的关卡中，将从线下课程计划开始，来介绍概念，以展示如何班级的学生介绍想法。然后，将提供视频指导，介绍一系列难题，并进行学习。为了完成难题，需要使用代码块编写代码。这些课程来自课程 A，该课程适用于幼儿园学生。最后，将有机会思考如何向学生传授这一概念。此阶段可能需要 10-30 分钟。

          准备好了？开始吧！
      OPD-K5 Stage3aGo:
        content1: 描述
        markdown: "# 序列 > 线下课程\n\n如前所述，会在线下课程中介绍计算机科学的主题。然后，会将这些活动过渡到在线课程。从这些好玩并且有好的现在课程开始，来介绍概念。接着，学生们在线上课程中就熟悉了这些概念，就能将在线课程与线下活动联系起来了。\n\n对于要经过的变成阶段，也会从线下课程示例开始。通读课程计划，并观看附带的视频，思考如何在课堂中与学生进行实践。\n<br/>\n***\n<br/>\n从顺序开始。从根本上看，计算机科学的风格就是
          **顺序的**。顺序是一些事物相互跟随的特殊排列。在这些难关中，要为指令找到正确的顺序，来告诉计算机做什么。指令的列表叫做 **算法**。一旦算法被编码成了能被计算机读取的语言，就成为了
          **程序**。\n<br/>\n<br/>\n\n**1. 查看课程 A 的 \"[快乐地图](https://curriculum.code.org/csf/coursea/5/)\"
          课程计划。**\n<br/>\n记住，课程 A 是为幼儿园学生设计的。顺序也会在其它课程中介绍，可以在本页底部找到这些课程的示例。\n\n<br/>\n\n**2.
          观看学生视频：快乐地图**\n<br/>\n可以向学生展示这段视频，以帮助介绍顺序的概念，并开始线下课程。\n\n[![](https://images.code.org/f00fb02e8f24d57e88d396eb0f2c5cce-image-1571253011379.09.54
          PM.png)](https://youtube.com/watch?v=hrnhiKAQ1_k)\n\n[不能打开视频？点击这里](http://videos.code.org/2014/C1-happy-maps-unplugged.mp4)
          \ \n\n<br/>\n\n**3. 观看教师视频：如何主持 \"快乐地图\"。**\n<br/>\n\n[![](https://images.code.org/ab93b99493bfe68acc24aaaaf66d4129-image-1571253013543.10.01
          PM.png)](https://youtube.com/watch?v=En6Bshuqljg)\n\n<br/>\n\n\n**4. 查看其它介绍顺序的线下课程：**\n\n-
          课程 A (幼儿园): [生活中的算法：种下种子](https://curriculum.code.org/csf-18/coursea/3/)\n-
          课程 B (1 年级): [我的机器人朋友（初级）](https://curriculum.code.org/csf-18/coursea/3/),
          [动一动，动一动](https://curriculum.code.org/csf-18/courseb/1/)\n- 课程 C (2 年级):
          [纸飞机](https://curriculum.code.org/csf-18/coursec/4/)\n- 课程 D (3 年级): [纸上画图编程](https://curriculum.code.org/csf-18/coursed/1/)\n-
          课程 E, 课程 F (4, 5 年级): [我的机器人朋友（高级）](https://curriculum.code.org/csf-18/coursee/1/)\n\n\n---\n\n\n>
          ## 反思\n> 如何像学生解释编程的概念（包括顺序和算法）？在<a href=\"http://forum.code.org/t/teaching-sequencing/408\">论坛上</a>分享。\n\n>
          <a href=\"http://forum.code.org/t/teaching-sequencing/408\" target=\"blank\"><button
          class=\"plc\">在论坛上讨论 >></button></a>\n\n在论坛中发表评论后，返回此处，然后点击下面的继续。\n\n下个阶段，会增加循环来让程序更复杂一些。\n"
      OPD-K5 Stage4Go:
        markdown: "# 循环 > 线下课程\n\n在这个阶段中，会看到将循环添加到有重复动作的程序中，会多么有效率。下个阶段，会编码 **如果语句**
          和其它条件语句。  \n<br/>\n\n**1. 观看 2 年级的课程 C \"[开始循环](https://levelbuilder.code.org/curriculum/coursec/7/Teacher)\"
          的课程计划：**\n<br/>课程 C 是为 2 年级学生准备的。循环也会在其它课程中介绍，可在页面下方找到这些课程的示例。\n\n<br/>\n\n**2.
          观看学生视频：开始循环**\n<br/>\n可以向学生展示这段视频，以帮助介绍循环的概念，并开始线下课程。\n\n[![](https://images.code.org/eb585fcc71f5f1d2fa4d3bcddcf74b8b-image-1571253274522.14.26
          PM.png)](https://www.youtube.com/watch?v=JoKTqHCni0M)\n\n[不能打开视频？点击这里](http://videos.code.org/2014/C1-getting-loopy.mp4)\n\n<br/>\n\n**3.
          观看教师视频：如何主持 \"开始循环\"**\n<br/>\n如果需要如何开始本节课的提示，可参考本视频。 \n[![](https://images.code.org/fc594434f8b6869b1db1872fc85ca309-image-1571253220717.13.14
          PM.png)](https://www.youtube.com/watch?v=Vo2woYRRogA)\n\n\n<br/>\n\n**4.
          查看其它介绍循环的线下课程：**\n\n- 课程 A (幼儿园): [快乐的循环](https://curriculum.code.org/csf-18/coursea/9/)\n-
          课程 B (1 年级): [我的循环机器人好友（初级）](https://curriculum.code.org/csf-18/courseb/8/)\n-
          课程 E, F (4, 5 年级): [我的循环机器人好友](https://curriculum.code.org/csf-18/coursee/6/)\n\n***\n\n>
          ## 反思\n> 如何向学生介绍循环的概念？<br><br> [在论坛中分享。](http://forum.code.org/t/teaching-loops-and-efficiency/405/1)\n\n>
          <a href=\"http://forum.code.org/t/teaching-loops-and-efficiency/405/1\"
          target=\"blank\"><button class=\"plc\">在论坛中讨论 >></button></a>\n\n在论坛中发表评论后，返回此处，然后单击下面的按钮进入下一阶段。\n\n"
      OPD-K5 Stage4Review:
        markdown: |
          # 循环 > 反思

          这个阶段中，探索了循环是如何让代码更有效率的。下个阶段，会看到条件语句如何帮助将逻辑加到程序里。

          **花一些时间，来看看在计算机科学基础教案中是如何介绍循环的。思考如何将建议的活动带到课堂上。**

          ![](https://images.code.org/c6dca0407f5a517823f7e71b8da3880b-image-1549050118354.jpg)
      OPD-K5 Stage4Start:
        markdown: |
          # 循环 > 第 5 阶段概述

          本阶段会在第一个程序的基础上，添加 **循环** 的核心概念。

          <img src="https://images.code.org/fcd3262b1c25e70426ac90e6f9fa65ac-image-1434152998854.JPG" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          完成第 5 阶段后，可以：

          - 练习编写简单的循环
          - 思考在课堂上的应用

          > **本阶段的期望：** 在接下来的内容中，会介绍来自课程 C （适用于 2 年级），重点关注于循环概念的一个线下课程和一系列的难题。要完成难题，需要用可视化、基于模块的方法编程。最后会有机会进行反思。此阶段可能需要 20-45 分钟。

          准备好了？开始！
      OPD-K5 Stage5Go:
        markdown: "# 条件语句 > 线下课程\n\n\n**1. 观看来自课程 D 的 \"[扑克牌与条件语句](https://curriculum.code.org/csf-18/coursed/13/)\"
          课程计划：** \n<br/>\n课程 D 是为 3 年级准备的。同样的课程也在课程 E 和课程 F 中。条件语句不在课程 A, B, 或 C
          中介绍。\n<br/><br/>\n\n**2. 观看学生视频：扑克牌与条件语句**\n<br/>\n可以向学生展示这段视频，以帮助介绍条件语句的概念，并开始线下课程。\n[![](https://images.code.org/3e6b0d2fc5a0beb4e6211d0571d190d3-image-1571253527382.18.41
          PM.png)](https://www.youtube.com/watch?v=UymN4lTL50s)\n<br/>\n[不能打开视频？点击这里](http://videos.code.org/2014/C2-conditionals-with-cards.mp4)\n\n<br/><br/>\n**3.
          观看教师课程示例视频： \"扑克牌与条件语句\"**\n<br/>\n 如果需要如何讲授本节课的提示，可参考本视频。 \n\n\n[![](https://images.code.org/3899707f84b1f69360c98f73c5a9c640-image-1571253595879.19.37
          PM.png)](https://www.youtube/watch?v=2m2Rn9VxHfU)\n\n[不能打开视频？点击这里](https://videos.code.org/levelbuilder/unplugged-lessoninaction-conditionalswithcards-mp4.mp4)\n\n<br/><br/>\n\n---\n\n>
          ## 反思\n> 如何向学生们解释条件语句的概念？[在论坛上分享](http://forum.code.org/t/teaching-conditionals/406/1).\n\n>
          <a href=\"http://forum.code.org/t/teaching-conditionals/406/1\" target=\"blank\"><button
          class=\"plc\">在论坛中讨论 >></button></a>\n\n 在论坛中发表评论后，返回此处，然后单击下面的按钮进入下一阶段。\n"
      OPD-K5 Stage5Review:
        markdown: "# 条件语句 > 反思\n\n在这个阶段中，探索了条件语句是如何帮助程序员将逻辑加入代码中。下个阶段，会看到函数是如何让编码到达新的水平。
          \ \n\n**花一些时间，来看看计算机科学基础教案中是如何介绍条件语句的，思考如何将建议的活动带到自己的课堂上。**\n\n![](https://images.code.org/6335e7aa128d84c96ac402005cd9a3bb-image-1549053033052.jpg)\n"
      OPD-K5 Stage5Start:
        markdown: |
          # 条件语句 > 阶段概述

          <img src="https://images.code.org/d2c2e06ce0bef52ae173a1de35b92af7-image-1470945682161.png" width="450px"  style="border-radius:10px; float:right; margin: 0 0 40px 40px;"/>

          现在，已经写了简单的程序，并通过循环来提高效率。这个阶段中，会探索 **如果语句**，来开始为程序加入逻辑。

          完成第 6 阶段后，可以：

          - 练习简单的条件语句编程
          - 思考在课堂上的应用

          >**本阶段的期望：** 首先会介绍来自课程 D（3 年级）的线下课程，来介绍条件语句的思想。然后，会完成一系列难题，来应用学到的条件语句。最后会有机会进行反思。本阶段可能需要 20-45 分钟。

          准备好了？开始！
      OPD-K5 Stage6Go:
        markdown: |
          # 函数 > 线下课程

          程序员会一直寻找方法让代码更有效率。其中一种方法是通过 **函数**，这能用于重用一段代码。

          **1. 观看来自课程 E 的 "[函数：写歌](https://curriculum.code.org/csf-18/coursee/14/)" 的课程计划。**
          <br/>
          课程 E 是为 4 年级准备的。函数不会在课程 A-D 中覆盖。

          <br/>

          **2. 观看学生视频：函数：写歌**
          <br/>
          可以向学生展示这段视频，以帮助介绍函数的概念，并开始线下课程。

          [![](https://images.code.org/7fe2de2239edca27f26ae77cd0dc4c35-image-1571253900570.24.39 PM.png)](https://youtube.com/watch?v=5iDCKkI6y2Y)

          <br/>

          [不能打开视频？点击这里](http://videos.code.org/2014/C3-songwriting-with-parameters.mp4)

          <br/>

          **3. 观看教师课程示例视频："函数：写歌"**
          <br/>
          如果需要如何讲授这节课的提示，可参考本视频。
          [![](https://images.code.org/cfa0204ea2de0de27dab274369069a58-image-1571253902872.24.46 PM.png)](https://youtube.com/watch?v=QuIMLel1mmw)
          [不能打开视频？点击这里](https://videos.code.org/levelbuilder/unplugged-lessoninaction-songwritingwithfunctions-mp4.mp4)
          <br/>

          ---

          > ## 反思
          > 如何向学生介绍函数的概念？在<a href="http://forum.code.org/t/teaching-functions/407/1" target="blank">论坛</a>上分享思考。

          > <a href="http://forum.code.org/t/teaching-functions/407/1" target="blank"><button class="plc">在论坛中讨论 >></button></a>

          在论坛中发表评论后，返回此处，然后单击下面的按钮进入下一阶段。
      OPD-K5 Stage6Review:
        markdown: |
          # 函数 > 反思

          本阶段中，探索了函数如何通过重用代码片段，让人成为更快更好的程序员。在下个阶段中，会学会事件的核心概念，并用编程技巧来测试它。

          **花点时间看看计算机科学基础教案是如何介绍函数的，并考虑如何在课堂中实践建议的活动。**

          ![](https://images.code.org/47e2d3956aaafb745e462f0017c2a2b1-image-1549053916687.jpg)
      OPD-K5 Stage6Start:
        markdown: |+
          # 函数 > 阶段概述

          <img src="https://images.code.org/6ac5cc9f26b87a62b0558947d4cfd457-image-1501267730981.jpg" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          在前几个阶段，学会了如何写程序，添加循环，使用条件。在这个阶段，会介绍 **函数** 的概念。

          完成第 7 阶段后，可以：

          - 练习编写简单的函数
          - 思考在课堂上的应用

          > **本阶段的期望：** 首先，会观看来自课程 E（4 年级），介绍函数的线下课程。然后会通过视频，以及练习一系列的难题来学习使用函数。还有机会思考自己的实践。本阶段可能需要 20-45 分钟。

          准备好了？开始！

      OPD-K5 Stage7Go:
        markdown: |+
          # 事件 > 线下活动

          <br/>

          **1. 观看来自课程 C 的 "[大事件](https://curriculum.code.org/csf-18/coursec/11/)" 课程计划。**
          <br/>
          课程 C 是为 2 年级学生准备的。事件会在从 A 到 F，每一阶段的计算机科学基础课程中。不是每个课程都有线下活动来覆盖事件，但可以查看页面下方课程 A 和课程 B 的线下活动。
          <br/><br/>

          **2. 观看学生视频：大事件**
          <br/>
          可以向学生展示这段视频，以帮助介绍事件的概念，并开始线下课程。

          [![](https://images.code.org/e5d8d5fc84416e34232f3e00142e5b2a-image-1571254248844.30.31 PM.png)](https://youtube.com/watch?v=u0WV9shCoak)

          [不能打开视频？点击这里](http://videos.code.org/2014/C1-bigevent-unplugged.mp4)
          <br/><br/>

          **3. 观看教师视频：如何主持 "大事件"**
          <br/>
          如果需要如何讲授这节课的提示，可参考本视频。

          [![](https://images.code.org/666ace3e1b7de917e112733112d358e4-image-1571254314712.31.50 PM.png)](https://youtube.com/watchv=aYECW6V8nQA)
          <br/><br/>

          **4. 观看其它介绍事件的线下课程：**

          - 课程 A, 课程 B (幼儿园，1 年级): [大事件（初级）](https://curriculum.code.org/csf-18/courseb/12/)

          ---

          > ## 反思
          > 何向学生介绍事件的概念？在<a href="http://forum.code.org/t/teaching-events/409/1">论坛</a>分享思考。

          > <a href="http://forum.code.org/t/teaching-events/409/1" target="blank"><button class="plc">在论坛上讨论 >></button></a>

          论坛中发表评论后，返回此处，然后单击下面的按钮进入下一阶段。


      OPD-K5 Stage7Start:
        markdown: "# 事件 > 阶段概述\n\n<img src=\"https://images.code.org/319df539d56b2795d659a56e9334a5fb-image-1434397946590.JPG\"
          width=\"450px\" style=\"border-radius: 10px; float: right; margin: 0 0 40px
          40px;\">\n\n现在，已经学会了顺序程序，添加循环，使用条件语句和函数。快要学完了！   \n\n本阶段中，会看一看 *事件*，这是计算机科学中另一个关键的概念。在探索事件时，将组合已经学会的知识，写出一些更复杂的程序。\n\n完成第
          8 阶段后，可以：\n\n- 练习编写简单的事件\n- 思考在课堂上的应用\n\n>**本阶段的期望：** 从来自课程 C （2 年级）的线下课程开始。然后会探索一些来自课程
          F（5 年级）的难题，来体验事件模块。最后有机会进行反思。本阶段可能需要 20-45 分钟。\n\n准备好了？开始！\n"
      OPD-K5 Stage8Go:
        markdown: |
          # 最佳实践 > 反思

          第 8 阶段介绍了许多教授计算机科学的最佳实践。花一些时间来思考，哪些策略会被用到自己的实践中。下个阶段中，会创建简单的计划，并反思整个课程。

          ## 在课堂上促进计算机科学学习时，将使用哪些策略？

          这是教师论坛中的一些示例：

          - **主持 "线下" 活动** 来学习核心概念 (点击[这里查看线下活动列表](https://code.org/curriculum/unplugged.)
          - 在课堂上实践 **"先问 3 个人，然后问我"** 的规则，让学生先寻求 3 个同学的帮助，然后再问老师同样的问题。这会减少大量需要单独回答的问题，并促进了同伴间的学习。
          - **冷静并坚持** 当问题出现时（总会出现的）。老师的反应会为学生定下基调。如果在最初出现问题时，老师表示 "我害怕技术。我要放弃。"。学生也会觉得可以这么做。
          - **引以为傲** 来对待他们的程序。展示它们，让它们能工作，并发布到线上。这是老师和学生应该庆贺的巨大成就。
          - **提出探索性问题** 给学生（甚至自己不知道答案的情况）。问问班级里有没有人知道答案。轻松的说 "我不知道；让我们一起弄清楚！"

          ---

          > ## 反思
          <a href ="http://forum.code.org/t/code-org-k5-professional-development-computer-science-pedagogy-6/14/4">在论坛上</a>查看更多方法，或加上自己的：

          > <a href="http://forum.code.org/t/code-org-k5-professional-development-computer-science-pedagogy-6/14/4" target="blank"><button class="plc">分享自己的方法 >></button></a>

          探索了论坛中的主题，并添加了自己的想法后，点击下列按钮继续第 10 阶段。
      OPD-K5 Stage8Start:
        markdown: "# 最佳实践 > 阶段概述\n\n<img src=\"https://images.code.org/1faca2c2dd1c9bd64ab5def347524d9c-image-1434398377360.JPG\"
          width=\"450px\" style=\"border-radius:10px; float:right; margin: 0 0 40px
          40px;\">\n\n**已经完成了本课程的大部分内容。祝贺！**   \n\n在第 1 阶段中，了解了课程信息。  \n在第 2 阶段中，将计算机科学作为一门科目进行了探索。
          \ \n在第 3 阶段中，准备好了掌握计算机科学的基础知识。  \n在第 4-8 阶段中，自己扮演了学生的角色。  \n现在，开始探索如何向年轻人传授所学知识。
          \ \n\n\n完成第 9 阶段后，可以：\n\n- 了解讲授计算机科学的最佳实践\n\n> ## 展望：\n> 本阶段会覆盖以下最佳实践：\n\n>-
          建立积极的课堂文化，支持自主学习，试验和失败\n- 知道何时以及如何应用其他学科领域的教学设计策略\n- 使用策略性的分组方法，如 \"结对编程\"\n-
          明确的讲授元认知的解决问题的策略\n- \"线下\" 在很少技术，或没有技术的情况下讲授核心概念\n- 其它 Code.org 教师社区建议的最佳实践\n\n还为您提供了与社区分享最佳实践的机会。\n"
      OPD-K5 Stage9Go:
        markdown: |
          # 计划 > 回顾

          <img src="https://images.code.org/34e1d20a6ae73e28c6c88c5981fd6be6-image-1434411459379.JPG" width="450px">

          本阶段中：

          - 回顾教师面板和其他 Code.org 资源
          - 规划如何将计算机科学融入自己的的实践中

          在第 11 阶段，即最后阶段中会：

          - 反思自己的学习
          - 为下一步继续学习做计划
          - 与对计算机科学教育感兴趣的全球教育工作者社区建立联系
      OPD-K5 Stage9Start:
        markdown: "# 计划 > 探索教师资源\n\n通过第 4-8 阶段，了解了计算机科学基础可用的一些 \"线下\" 和线上的学习资源，它们与当前学习的计算机科学概念一致。
          \n\n现在已经对如何编码以及如何教授计算机科学有了一些了解，是时候开始指定计划了。在这个阶段，会参观 Code.org 平台的 **[教师面板](http://studio.code.org/)**，和其它部分。
          \n\n完成第 10 阶段后，可以：\n\n- 浏览教师的资源\n- 浏览 Code.org **[教师面板](http://studio.code.org/)**\n-
          计划如何将计算机科学集成到实践中\n\n***\n\n下面是教师面板的截图。需要登录 Code.org 的教师账号才能看见它 - 登录后会是教师账号的默认界面。如果没有教师账号，可以
          **[免费注册](https://studio.code.org/users/sign_up)**。\n\n![](https://images.code.org/d6345709495f764a71d9cb0994dbd7e4-image-1549064603589.png)\n"
      OPD-K5 Using CS:
        markdown: "# 计划 > 为代码工作室课程做准备\n\n了解 Code Studio 如何为自己和学生进行课堂设置。\n\n## 第 1
          步：选择课程\n浏览 [小学课程页面](https://code.org/educate/curriculum/elementary-school)
          并从计算机科学基础 A-F 课程中找到课程计划和完整的课程。如果对初中或高中课程感兴趣，可以找到所有年级的内容 - 从学前到高中高年级，其中所有人。所有课程都是免费的。与同事讨论，以确定如何将课程教案与各种科目整合在一起。
          \n \n## 第 2 步：设置课堂小组\n设置课堂小组，可查看学生进度，打印学生的登录卡片，管理账号，打印可带回家的完成课程的证书。点击链接来
          [观看简介](https://code.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=56d32934-3f67-48db-98db-e66e9152df7b)，其演示了如何在
          Code.org 设置第一个计算机科学班级。 也可在 [支持文档](https://support.code.org/hc/en-us/articles/115000488132-Creating-a-classroom-section)
          中找到所有步骤。\n\n## Step 3: 第 3 步：将课程分配给小组\n点击正在教学的课程 -- 应该可看到下面这样的页面。点击 \"分配课程\"
          并将课程分配给某个小组。\n\n## 第 4 步：开始教学！\n所需要的只是一堂将计算机科学概念带入课堂的课程。一旦看到学生对计算机科学的热情，就可以进一步制定每日课程计划来指导学生，无需计算机即可进行的线下活动，以及与其他老师建立联系的论坛。\n\n\n\n"
      OPD-K5 Vocabulary:
        markdown: |
          # 计算机科学基础 > 关键词汇

          在开始学习计算机科学时，最重要的任务之一就是熟悉编程语言。在本课程和整个计算机科学基础资源中，我们使用与计算机科学行业相同的词汇。鼓励年轻学生学习和使用专业术语，使他们能够与他人交流并建立计算机科学知识，而无需稍后重新学习术语和概念。这些课程中使用的术语和概念，使用了大多数年轻学生应该能够理解的单词来定义的。

          这是计算机科学基础资源中使用的 [词汇表](http://code.org/curriculum/docs/k-5/glossary) ；在本课程中还将介绍其中大部分术语。现在不必学习所有这些单词。在此在线专业发展课程中，以及与学生一起使用课程时，请将该列表用作参考。

          <a href="http://code.org/curriculum/docs/k-5/glossary" target="blank"><button class="default">查看词汇表 >></button></a>

          > **教学技巧：** 最佳做法是用易于理解的语言介绍这些术语，将其与以前的经历联系起来，在适当的情况下在整个课程中（以及其他情况下）重复使用这些术语，并加强学生在口语中的使用和书面交流。
      OPD-K5 Welcome 2:
        markdown: |+
          # 开始 > 计算机科学基础课程

          Code.org 专业发展的目标是为像您这样的老师做好准备，以将计算机科学整合到课堂中，并支持成长为老师。完成本在线课程后，可以在课堂上教授以下一个或多个以下 Code.org 计算机科学基础课程：

           - **[课程 A](http://studio.code.org/s/coursea)**: 大约 12 小时 (幼儿园)
           - **[课程 B](http://studio.code.org/s/courseb)**: 大约 12 小时 (1 年级)
           - **[课程 C](http://studio.code.org/s/coursec)**: 大约 18 小时 (2 年级)
           - **[课程 D](http://studio.code.org/s/coursed)**: 大约 18 小时 (3 年级)
           - **[课程 E](http://studio.code.org/s/coursee)**: 大约 18 小时 (4 年级)
           - **[课程 F](http://studio.code.org/s/coursef)**: 大约 20 小时 (5 年级)
           - **[计算机科学 (CS) 基础 速成](http://studio.code.org/s/express)**: 大约 20 小时 (8+ 岁)
           - **[计算机科学 (CS) 基础 预速成](http://studio.code.org/s/pre-express)**: 大约 20 小时 (4-8 岁)


      OPD-K5 What is Mastery:
        markdown: |
          # 展望 > 什么是精通？

          在接下来的阶段，会精通计算机科学基本的核心概念：

          - 第 4 阶段：序列
          - 第 5 阶段：循环
          - 第 6 阶段：条件语句
          - 第 7 阶段：函数
          - 第 8 阶段：事件

          ## 什么是精通？

          我们将 "精通" 定义为能够执行以下操作：

          - 定义并解释核心概念的含义，以及它在计算机科学中为什么很重要
          - 编写使用此概念的简单程序 （通过可视化编程来解决难题）
          - 思考如何将概念集成到实践中

          在学习课程的过程中，将此列表用作守则。完成每个阶段时，问自己：

          - 我可以在初学层面上定义和解释这个特定核心概念的重要性吗？
          - 在这一阶段，我能否成功完成这些简单的题目？
          - 我对在课堂上如何使用它有一些想法吗？

          如果每个问题的答案都是肯定的，可进入下一阶段。如果对任何问题不确定，可考虑在继续前，重新进入这个阶段，或从学生端的代码工作室来浏览更多内容。

          ## 学习计算机科学时要记住的事情：

          - 计算机编程的世界发展的非常快，因而没人真正的精通。**我们都是学习者**。虽然所处的阶段不同，但一直都是学习者。
          - 每次回来时，都会觉得更适应。**没人会在第一次学习就成为专家。**
          - 不能绕过去，**编程的活动以及学习编程都需要时间，但任何人都能做到！**

          > **关键点：** 接下来的几个阶段不是要将您变成计算机科学家，而是能够足够适应这些基本概念，从而能够很高兴的与学生分享知识。

          ## "精通" 这些概念后，下一步是什么？

          在 **第 9 阶段**，会浏览 Code.org 的教师免费教案和资源。可以选择使用这些或其它资源。完成课程后，就能理解任何计算机科学教案的基础知识。

          在 **第 10 和 11 阶段**，会给出继续学习或准备在课堂上讲授这些概念的资源。
      OPD-K5 Why teach CS:
        markdown: |
          # 计算机科学基础 > 为什么要教授计算机科学？

          <img src="//code.org/images/edquote1.png" width="250px" style="margin-right:45px; float:left">

          研究表明，计算机科学会提升真实世界的批判性思维，创造力，解决问题的能力，以及参与度等技能。实际上，一份[最近的研究](https://medium.com/@codeorg/code-org-resourceful-teachers-higher-student-achievement-8be1efdec06e) 发现，在有资源教学了计算机科学基础课程后，在英语、数学和科学标准化测试中的分都会更高。

          如果不是 STEM 的老师，为什么要教授计算机科学？学完本课程后，会有自己的答案，但如果需要进一步的启发，可以观看此[视频集](http://code.org/educate/inspire) 来了解 "为什么"。如果需要对将计算机科学带入课堂进行解说，这些视频非常适合给学生、管理者、父母和社区观看。也可能也对CS教育的一些统计数据和证据感兴趣。

          <a href="http://code.org/educate/inspire" target="blank"><button class="default">Explore inspirational videos >></button></a><a href="http://code.org/promote" target="blank"><button class="default">浏览研究 >></button></a>

          花一些时间浏览研究，并记下发现的任何相关或有趣的事实或见解。
      OPD-K5 Younger Grades:
        markdown: |
          # 为什么要在低年级教授计算机科学？

          <img src="https://images.code.org/0149da542dae03da5f40b7b8aacf73c0-image-1434818868152.jpg" class="level-image">

          除了通过学习编程经验而带来的计算思维时间，在低年级讲授计算机科学，还能对学生和社会带来额外的好处 - 为创建技术领域带来更多的平等。

          如果等到高中或大学才介绍计算机科学，一些学生已经会认为计算机不适合他们，或与其他在课外学习过的学生相比长居太大。

          在 K-5 就将计算机科学带给学生们，与高中选课不同，这能让所有学生都了解这门课，并自己决定是否感兴趣。

          > ## 为什么认为讲授计算机科学是值得的？
          [发推特分享](https://twitter.com/teachcode) 并加上 @teachcode 标签，以便我们能反馈。

          > <a href="http://ctt.ec/Bfjw3" target="blank"><button class="default">在推特上分享 >></button></a><br><br>
          还没有推特账号？可以在 [Facebook](https://www.facebook.com/Code.org/) 或 [Instagram](https://www.instagram.com/codeorg/) 上找到我们。
      OPD-K5 Your Plan:
        markdown: |
          # 计划 > 自己的计划

          希望这一阶段能帮助介绍代码工作室上的可用资源。当考虑将来如何使用 code.org 或代码工作室资源中的任何内容教授计算机科学时，请花一点时间[与专业学习社区（PLC）分享自己的计划](http://forum.code.org/t/teaching-computer-science-your-plans/412)。

          与我们分享：

          - 课堂目标是什么？ 计算机科学或 code.org 资源将如何帮助实现这些目标？
          - 当实现了其中某些目标时，最兴奋的是什么？
          - 在尝试实现目标时会遇到哪些挑战？
          - 有什么社区可能能帮助回答的问题？

          发布初始的计划后，请随时重新访问[此话题](http://forum.code.org/t/teaching-computer-science-your-plans/412)，来向我们介绍最新的进展！

          <a href="http://forum.code.org/t/teaching-computer-science-your-plans/412" target="blank"><button class="plc">发布自己的计划 >></button></a>

          在论坛中发表评论后，返回此处，然后单击下面的按钮继续。
      OPD-Stage3Start:
        markdown: |
          # 展望 > 阶段概述

          <img src="https://images.code.org/0b8c948f309ae1df3d9920520e4a168c-image-1435004357188.JPG" width="450px" style="border-radius:10px;">

          完成此阶段后，可以：

          - 通过了解课程中接下来的内容，来准备好 "掌握基础知识"
      'Overview: Design Mode':
        markdown: |
          # 欢迎来到应用实验室设计模式
          应用实验室中的 "设计模式" 可以让拖放用户界面元素到应用中

          ### 词汇表
          * **用户界面（UI）** - 用户如何与计算机或应用交互。
          * **用户界面元素（UI Element）** 或目标，如按钮、图片、文本框、下拉菜单、屏幕等等。

          ## 示例

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          在应用区域的上方，会看见一组新的开关，能在 "设计模式" 和 "代码模式" 间切换。

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>添加元素非常简单，当需要的时候，将它拖放到应用中即可。元素在应用屏幕中之后，可以调整它的位置、大小，以及其它属性。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span><em>属性</em>选项卡会显示此元素可以修改的所有外观等属性。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span><strong>元素标识（ID）</strong> 很重要，这是如何在代码中引用元素的方式。稍后将讨论元素标识。</p>
          </div>

          ![](https://images.code.org/01a31ac3be66deb6d01a92a1edfffd21-image-1476726587662.png)


          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 66%; float: right">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>可将用户能看到的按钮文本随意修改。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span><strong>注意：</strong> 向下滚动可能看到元素其它在下面 "隐藏" 的属性。</p>
          </div>

          <div style="clear: both"></div>
          <hr>

          **现在试试吧！**
      'Overview: If Statements':
        markdown: |+
          # 如果语句

          ## 如果语句如何工作

          <img src="https://images.code.org/361556bbff61bf91e2c737f745582dff-image-1479418505481.png" style="float: right; margin-left: 20px; margin-right: 20px">

          如果语句能 *决定接下来运行哪些的代码*。

          右边的图显示了 JavaScript 中基本 `如果` 语句的元素。

          如果语句由两个基本的部分。

          1. 要被评估的条件 (会被计算为 **true** 或 **false** 的布尔表达式)
          2. *如果* 表达式满足，会运行的代码 - 在括号中

          ## 可运行的示例
          <img src="https://images.code.org/ca716e009ddb8dc397eb5a651a1ac2d7-image-1479420772852.png" style="display: block; margin: auto; float: right">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">1.</span>
          程序按照期望一行行执行。显示消息，然后提示用户输入数字。无论用户输入的是什么，都会保存到变量 <code>age</code> 中，然后运行下一行...
          </p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">2.</span>
          当遇到 <code>如果</code> 语句后，<em>第一件事</em>，是评估括号中的条件。会检查在程序当前的情况下，是否变量 <code>age</code> 的值大于或等于 18。如果是，表达式就会 "<strong>返回 true</strong>"。否则返回 false。
          </p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">3.</span>
          console.log 语句 <em>只</em> 会在表达式为 true （满足）时执行。花括号内的代码会，且只会，在表达式为 true 的时候执行。否则，整段代码都会被 <em>忽略</em>。
          </p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">4.</span>
          这是在如果语句花括号后，执行的第一行代码。这行代码 <em>始终</em> 都会执行，但如果用户输入的年龄小于 18，整个如果语句都会被跳过，只会显示 "Thanks for verifying"。  (会很快修复这里的尴尬)。

          </p>

          <div style="clear: both">&nbsp;</div>


      'Overview: Images':
        markdown: "# 图片\n\n## 输入网络上的图片地址\n\n<img src=\"https://images.code.org/acf4542eda586e7b73bc27dd8746848c-image-1477675154724.png\"
          style=\"width: 250px; float: right\">\n\n有几种方法获得图片的地址。  \n\n常用的方法（见右图）是，在网页上找到喜欢的图片，然后右击
          （或按住 ctrl 点击）并选择像 \"复制图片地址\" 这样的选项，然后粘贴到应用实验室的文本框中。\n\n如果不确定，还可以点击像 \"在新标签页打开图片\"
          这样的选项，这会单独打开图片，并在地址栏中显示图片的地址，可以将它复制粘贴到应用实验室中。\n\n**常见错误**：使用了 *图片所在网站* 的地址，而不是图片自己的地址。\n\n*
          确保获得的是图片文件的地址 - 一般是以 **.jpg**, **.gif** 或 **.png** 结尾。\n* 如果地址是这样开头的，通常是错误的：`https://www.google.com/search?q=cat&espv=2&biw=1497....`
          。\n\n\n## 上传自己的图片\n\n如果图片保存在自己的计算机中，可以通过 **资产管理器** 来上传到应用实验室。只需要 **点击上传文件**，然后根据屏幕上的对话框来选择。\n\n图片文件的类型必须是：**.jpg**,
          **.png**, 或 **.gif**\n\n图片上传之后，要通过 **选择** 来将 image 选成对应的图片文件。如果添加了多个文件，每次上传的文件都会列出来，然后可以从中选择
          *任何* 上传的文件。\n\n![](https://images.code.org/d64d7e3dadc882897e450b00a0fc6cb2-image-1476896824985.gif)\n\n###
          点击 继续 来试试！\n\n\n"
      'Overview: onEvent':
        markdown: |
          # 响应用户输入

          需要使用代码模式，来让它能实际响应用户。应用实验室会等待程序中某个 **事件** 发生，并响应。`onEvent` 模块指定了等待事件发生的界面元素。

          ## OnEvent

          <br><br>

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 4; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          切换到代码模式</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          从工具栏中拖出一个 <code>onEvent</code> 模块到工作区中。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          使用下拉框从界面元素中，选择出需要响应某个事件的元素。在设计模式中添加的所有元素的标识都在这里列出了。</p>
          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          使用下拉框菜单，来选择需要响应的事件<em>类型</em>。 (这里先使用 "click" )。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>
          在函数里添加，<em>当</em>用户触发此事件时，需要运行的代码。函数会在每次用户触发此事件时运行一次。</p>

          </div>

          ![](https://images.code.org/9b506faaaadf61338dc738a4eafb66b2-image-1476740205599.png)
      'Overview: setPosition':
        markdown: "# setPosition 和屏幕尺寸\n\n`setPosition` 命令可以将界面元素移动到屏幕上的任何位置。\n\n<img
          src=\"https://images.code.org/ee55080bb341528ca7e8ebc79f9f978b-image-1490369263385.27.12
          AM.png\" style=\"display: block; margin: auto\">\n\n需要将实际的数字填入 `setPosition`
          的参数，才能有效。 setPosition 的数字是 **屏幕的 x 和 y 坐标**。\n\n**提示：**\n\n* 0,0 是左上角。\n*
          通过离屏幕上 **左上角** 多少个像素，来指定位置。  \n* 屏幕大小是 **320 x 450 像素**。  \n* 可以将鼠标 **悬停在屏幕上**
          来查看任何点的 x、y 坐标。\n\n<div style=\"width: 100%; text-align: center\">\n<img
          src=\"https://images.code.org/8b346602d75f2877c64e1793b6a04302-image-1476889124747.png\">\n\n<img
          src=\"https://images.code.org/fc7e830fa2ea994b885c76618b484dfa-image-1476889137756.gif\">\n</div>\n"
      PicturingData-Unplugged:
        markdown: |
          # 描绘数据

          使用Play Lab 项目，搜集数据并进行预测。

          ![](https://images.code.org/606a78c09a01133a1bbc1aa9c76f3320-image-1557334268558.png)
      PowerOfWords-Unplugged:
        markdown: |
          # 语言的力量

          今天会学习在网络上应该做什么。
      PowerfulPasswords-Unplugged:
        markdown: |
          # 强大的密码

          了解人们使用密码的原因， 理解使用密码的好处， 并探索一个策略。用这个策略来创建和保存强大而安全的密码。

          ![](https://images.code.org/9e082a5564a289bccc8e2dd79a2cae9f-image-1557869939256.png)
      Prepare for your presentation:
        content1: 描述
        markdown: |
          # 项目演示

          该演示项目了！老师会提供关于如何演示工作的更多细节。
      Prepare for your presentation_2018:
        markdown: |
          # 项目演示

          该演示项目了！老师会提供关于如何演示工作的更多细节。
      PrivatePersonalInformation-Unplugged:
        markdown: |
          # 隐私和个人信息

          由常识教育开发，本课程关于信息是否适合在网上安全的分享。

          ![](https://images.code.org/872576b170b9d8aec9b29f684a1ad94e-image-1557878406833.png)
      RelayProgramming-Unplugged:
        markdown: |
          # 接力编程

          分成小组，一起来写出能画图的程序。
      Responding to User Input:
        markdown: |+
          # 响应用户输入

          设计模式非常容易为应用布置用户界面，但是需要深入研究代码模式，使其真正响应用户。

          在游戏实验室中，画图循环会一直运行，使用条件语句来检查用户输入，并进行交互。应用实验室，用另一种方式，等待响应应用里发生的某些 **事件**。这是应用实验室用来表示 "你好！有些事情发生了！" 的方法。这表示在不需要直接与应用交互时，不会运行任何代码，而代码会在这些事件发生时进行响应。
          总的来说，使应用通过触发函数，来响应事件的编码任务称为 **事件处理**。

          应用实验室中，所有事件都通过添加特殊的 `onEvent`（当事件发生时）模块来开始。使用方法：

          <br><br>

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 4; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          切换到代码模式</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          从工具箱中拖拽 <code>onEvent</code> 模块到工作区中。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          使用下拉框菜单，来选择需要设置响应某些事件的界面元素的<em>标识</em>。所有在设计模式添加的元素的标识都列在了这里。</p>
          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          使用下拉框菜单，来选择需要响应的事件<em>类型</em>。 (这里先使用 "click" ).</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>
          在函数里添加，<em>当</em>用户触发此事件时，需要运行的代码。函数会在每次用户触发此事件时运行一次。</p>

          </div>

          ![](https://images.code.org/9b506faaaadf61338dc738a4eafb66b2-image-1476740205599.png)

          ###  "Click" （点击）时改变屏幕

          在事件驱动的编程中了解以下内容很重要：

          * **用户触发事件** - 事件发生在当用户点击按钮，点击屏幕，移动鼠标，在键盘上输入，等等。
          * **事件触发代码** - 当事件发生或 "触发" 时，可以用来触发特定的 JavaScript 函数。

          应用实验室的 `onEvent` 模块是一种叫做 **事件监听器** 的事件处理函数。它将所有事件处理所需要的几个设置部分，打包为一个命令。这是标有所有内容的示例：

          <img src="//curriculum.code.org/images/applab/onEvent_diagram.png" style="display: block; margin: 20px auto">

          <div style="column-count: 3; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          这是当用户点击 <em>button1</em> 时触发执行的回调函数。在这里，将乌龟简单的向前移动了 25 像素。事件处理函数通常不只一行，这只是一个简单的示例。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          注意，此函数与以前见过的不同，它没有名字。又叫做 <em>回调函数</em>，这是个奇怪的术语。回调函数和普通函数的不同之处在于，不能直接从代码中调用。回调函数在指定的事件发生时，<strong>由系统来调用</strong>。回调函数是许多事件驱动编程中的常见模式。</p>
          </div>


          ### 接下来就要试试了！

      ScreenOutTheMean-Unplugged:
        markdown: |
          # 远离网络欺凌

          今天你将学习，如果网络上有些事情使您感到愤怒，悲伤或害怕，该怎么做。
      SimonSays-Unplugged:
        markdown: |
          # 西蒙说

          玩一玩游戏，想想需要什么命令来获得正确的结果。
      Social Sleuth_2018_2019:
        markdown: |+
          # 社交侦探

          需要<a href="https://docs.google.com/document/d/1A9q31rwrBA7tZZcZ3KZqjMb30UncM-eycwMvYgj9os4/edit#">社交侦探清单</a>来完成活动。

          ## 资料

          点击图片来打开每个资料。

          ### FaceSpace

          | FaceSpace: Lizzie Dell  |  FaceSpace: John T | FaceSpace: Haley G.  |
          | ---------  | ------ |  ------ |
          | <a href="https://codeprojects.org/F-S5X0IfPmaq09YxGCbOFt3yo4N4PibaA1FBsc4iSdU/" target="_blank">  <img src="https://images.code.org/178adb09adb079a9cf8f465453f9da34-image-1480624941354.42.11 PM.png" style="width:400px"> </a> | <a href="https://codeprojects.org/6qyeEpRZRNkkrkkEduW8G_VO0Y-W2Z6B2Xn5pbLsUpw/" target="_blank"><img src="https://images.code.org/5d141433497fc107a60f0c2e3c63cca8-image-1480624947223.41.59 PM.png" style="width:400px"></a>  |<a href="https://codeprojects.org/7vPoGl6YA2bop1bPaIwpYX4_ubrkEBBFau_8s3JGMoo/" target="_blank">  <img src="https://images.code.org/ced7e2ae3c4fc17b6e278de8339e9498-image-1480626229324.02.56 PM.png" style="width:400px"> </a> |


          ### Chirpr

          | Chirpr: @johnsnow  |  Chirpr:@flyinghail | Chirpr: @lillizard |
          | ---------  | ------ |  ------ |
          | <a href="https://codeprojects.org/F-CPrGMcIPZF27RUX8Z_0Qb4KFSCvlU96VSWV7IBD98/" target="_blank">  <img src="https://images.code.org/3a5e7e1136382288f1122354cf494783-image-1480625415782.49.59 PM.png" style="width:400px"> </a> | <a href="https://codeprojects.org/Kff1I24rG71I-TnC--Uw5hTqZUAWO3iTzzHRHQ3h90U/" target="_blank">  <img src="https://images.code.org/c4ae8d208cfd5cb211d74f1ca4259210-image-1480627944701.31.37 PM.png" style="width:400px"> </a> |<a href="https://codeprojects.org/c4e3JuM-nCcmYF4XbbxpJ4pX51wyClVZCDYr6HiMyHg/" target="_blank">  <img src="https://images.code.org/42fc1b77b07fbcb4d143a32f1208296f-image-1493301869142.03.52 AM.png" style="width:400px"> </a> |


          ### instantframe

          | instantframe: johnsnow  | instantframe: @photolizzie | instantframe:@desertrider |
          | ---------  | ------ |  ------ |
          | <a href="https://codeprojects.org/5Zw4FvstrOYxANYH2HFbV_mVuY-QWfrsdgga9S3DGxs/" target="_blank">  <img src="https://images.code.org/290cb1409343d57ab5ab9be93085004d-image-1480625573589.51.31 PM.png" style="width:400px"> </a> | <a href="https://codeprojects.org/JXB8ULbAJJHzC-hHoiiZFxZBT4S32HwF0krGoXSzdE8/" target="_blank">  <img src="https://images.code.org/8e7de383b0747275a075ed9839a118d0-image-1480625641547.53.30 PM.png" style="width:400px"> </a> |<a href="https://codeprojects.org/xnZk6nZxi0FKMVkwKrsQjvbGWDIwqBW9zDmuCCseMpc/" target="_blank">  <img src="https://images.code.org/c52c51816ce248336a86e3e7f6ec2209-image-1480626143808.01.54 PM.png" style="width:400px"> </a> |

      Songwriting-Unplugged:
        markdown: |
          # 写歌

          用歌曲中副歌的概念，来学习定义和调用函数。
      'Technique: Frequency Analysis':
        content1: 描述
        markdown: "# 破解替换加密\n\n破解随机替换加密的最佳技术称为 **频率分析**\n\n解释来自：[维基百科](https://zh.wikipedia.org/wiki/%E9%A2%91%E7%8E%87%E5%88%86%E6%9E%90)\n\n*
          **频率分析** 是基于英语中每个字母，相对于其它字母出现的 *频率*。\n* 例如，给出一段英文文本，其中 *E*, *T*, *A* 和 *O*
          是最常出现的，而 *Z*, *Q* 和 *X* 很少出现。同样，*TH*, *ER*, *ON*, 和 *AN* 是最常出现的双字母组合。\n*
          事实上，几乎 *所有* 英语文本样本的字母分布大致相同。\n\n\n上一页版本的小部件版本旨在帮助 **通过频率分析来破解替换密码**。\n\n通过分析加密消息中字母的频率与典型的英语散文中字母的频率相比，可以缩小一些字母映射的范围。
          \n\n该工具会比较加密文本（橙色）中字母的频率与典型英语（蓝色）中的频率。\n\n### 提示：从哪里开始？\n\n1. 找到简短的单词，先
          \"破解\" 它们。知道多少个单字母词？（\"a\"）。非常常见的 3 个字母的单词是 \"the\"。\n2. 完成后，就可以开始替换一些常见的字母。凭直觉用这些部分替换来看看其它单词，并做出好的猜测。\n3.
          通过努力找到一些比较难的字母后，剩下的就非常快了。\n4. 比较字母频率，会得出非常有效的猜测。\n\n### 试一试：\n下面的动画显示了其他人是如何开始的。他们尝试过\n\n*
          首先通过频率来给字母排序。 \n* 找到一组可能映射到 `the` 的字符。  \n这是个好的开始！\n\n![](https://images.code.org/4c188dfb0b284810845285b83ce5bcd4-image-1473787694329.gif)\n\n##
          随机替换是好方法吗？\n* 练习了一会儿后，需要多长时间来破解一次随机替换加密？\n* 这个算法好不好？\n\n\n"
      Terminology Recap:
        content1: 描述
        markdown: "# 简要回顾\n\n使用 **凯撒加密法** 进行加密的信息非常容易被破解，在手头有计算工具的情况下就更容易了。现在你已经对字母位移密码的破解进行了一些练习
          （真是相当容易，不是吗？），来看一下更难的。\n\n**术语回顾：**\n\n* **加密** - 一个通过编码消息来保守秘密的过程，目的是使只有经过“授权”的某些人可以理解它。\n*
          **解密** - 加密的反过程，把一段经过加密的消息变回原始文本。\n* **加密法** - 进行加密的技术（或算法）的统称。\n* **凯撒加密法**
          - 一种通过对字母进行位移来实现加密的加密方法。\n* **破解加密** - 当你尝试在不知道加密法的所有细节时解码被加密过的消息，你就是在尝试
          **破解** 这个加密。 \n\n\n单击 继续 去 **下一个挑战**...\n\n\n"
      TheRightAppMarkdownLevel_2019:
        markdown: |
          # 正确的应用

          * 如今每个人都在使用计算机，尤其是智能手机。
          * 智能手机上的应用，能帮助人们做很多事情，例如与朋友聊天、听音乐、购物或浏览互联网。
          * 对于开发者而言，站在其他人的角度上，并从他们的需求出发来设计应用是颇为重要的！

          ![](https://images.code.org/fb17eeb9238d2f26c6ab40c9841517a7-image-1555611687284.png)
      Unit 1 Lesson 2 Overview:
        markdown: |
          #概述
          这一课中你将会学习一个正式问题的解决过程，这会帮助你构建解决各种各样问题的框架

          ##资料
          * [问题解决过程 - 活动指导](https://docs.google.com/document/d/1xEPMYIDy70fWCgyLymBNmxkE-6uJ7BYOXSmV8Vyt-SQ/export?format=pdf)
      Unit 1 Lesson 3 Overview:
        markdown: |
          #概述
          在这一课中，你将会把解决问题的过程应用在一系列问题中，去探索每一步骤怎样帮助你发展、怎样帮助你提高解决问题的能力

          ##资料
          * [解决问题 - 活动指导](https://docs.google.com/document/d/1cym5lMuy41CbvXYe7F57N2XfI6Afp0hJsHovhR0GD2M/export?format=pdf)
      Unit 1 Lesson 4 Overview:
        markdown: |
          #概述
          在这一课中，你会开始思考电脑是如何帮助人们解决一些特定的问题的，你将会学到每一台电脑的一些主要特点

          ##资料
          * [电脑是什么 - 活动指导](https://docs.google.com/document/d/1g4dPcsx2xADEZI0FiMYApLr0hh3_-89NDWd2y86sS6I/export?format=pdf)
      Unit 1 Lesson 6 Overview:
        markdown: |
          # 解决问题 - 计算机和逻辑：第 6 课 - 处理比特

          ## 背景

          这几颗中，会学习在处理前面设计的比特级的简单图像时，计算机如何处理这些二进制信息。

          # 资源

          * [像素过滤器](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/edit?usp=sharing) - 活动指南 ([PDF](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/export?format=doc))
      Unit 2 Lesson 10 Overview:
        markdown: |
          # 概述

          本课覆盖了 CSS 类和自定义颜色。学生们会首先学习如何使用 RGB (red - 红, green - 绿, blue - 蓝) 值来指定某个颜色，然后会将颜色用到新的使用 CSS 类的四季页面中。通过使用类，学生们可以为四季页面添加更多的样式，最后在个人网站上使用它们。
          ## 词汇表

          * **HTML 类** - 给元素相同的类名后，它们可以使用相同的样式。

          ## 引入的代码

          * [RGB 颜色](//studio.code.org/docs/weblab/rgb-color/)

          ## 资源

          * [RGB 颜色 - 活动指南](https://docs.google.com/document/d/1zTamyJ71sVJ2JM2A2meX6kwPu4FS82KA_TJEliTPIFo/export?format=pdf)
      Unit 2 Lesson 16 Overview:
        markdown: |
          # 概述

          在这个单元里的最后几天，班级会完成个人网站，从伙伴那里获得反馈，回顾专栏，并在网站上完成最后的修补。要完成本单元，每个人都要分享项目，并分享如何开发出来的。


          ## 资源

          * [完成个人网站 - 同伴评审](https://docs.google.com/document/d/1YMcd2-oBmcjJkW7sADlRKXnGqLdy7A3hxwm74dZlGPE/export?format=pdf)
          * [完成个人网站 - 项目指南](https://docs.google.com/document/d/15hP1rbdhWaOvcbN-KHCl3rgcNBoa0Wg2D1ZUVnkwNo0/export?format=pdf)
          * [完成个人网站 - 专栏](https://docs.google.com/document/d/1SmZaZymJbMQL04j3evH4O0PYkbtZ_l6W_6rvddB1alg/export?format=pdf)
      Unit 2 Lesson 7 Overview:
        markdown: |+
          # 概述

          本课介绍了 CSS，它被用于改变页面上元素的样式。本课学习了 CSS 规则集的基本语法，然后探索了 HTML 文本元素的一些属性。最后，让大家将文本样式应用到个人网站上。
          ## 词汇表

          * **CSS** - CSS 是 Cascading Style Sheets （级联样式表）的缩写。CSS 能根据某一些规则集来改变每个 HTML 元素的样式。
          * **CSS 选择器（Selector）** - 指明样式应用于哪些元素的代码。

          ## 引入的代码

          *  **[颜色](//studio.code.org/docs/weblab/color/)** - `color: value;`
          *  **[文本对齐](//studio.code.org/docs/weblab/text-align/)** - `text-align: value;`
          *  **[文本修饰](//studio.code.org/docs/weblab/Text-Dec/)** - `text-decoration: value;`
          *  **[字体](//studio.code.org/docs/weblab/font-family/)** - `font-family:value;`
          *  **[文字大小](//studio.code.org/docs/weblab/font-size/)** - `font-size:value;`

      Unit 2 Lesson 8 Overview:
        markdown: |+
          # 概述

          本课会继续介绍 CSS 样式属性，这次主要是非文本的元素。本课从调研并修改沙漠世界页面中新的 CSS 样式开始。然后，大家可以将新的知识应用到自己的个人网站中。

          ## 引入的代码

          *  **[背景颜色](//studio.code.org/docs/weblab/background-color/)** - `background-color: value;`
          *  **[浮动（float）](//studio.code.org/docs/weblab/float/)** - `float: value;`
          *  **[边距（margin）](//studio.code.org/docs/weblab/margin/)** - `margin: value;`
          *  **[宽度](//studio.code.org/docs/weblab/width/)** - `width: value;`
          *  **[高度](//studio.code.org/docs/weblab/height/)** - `height: value;`
          *  **[边框风格（border style）](//studio.code.org/docs/weblab/border-style/)** - `border-style: value;`
          *  **[边框宽度（border width）](//studio.code.org/docs/weblab/border-width/)** - `border-width: value;`
          *  **[边框颜色（border color）](//studio.code.org/docs/weblab/border-color/)** - `border-color: value;`

      behaviors 1 predict:
        answers:
        - text: 精灵图会旋转
          feedback: 错误。
        - text: 精灵图会缩小。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 精灵图会移动。
          feedback: 错误。
        - text: 精灵图会变化颜色。
          feedback: 错误
        questions:
        - text: 点击 "编辑" 按钮来看看 `神秘的行为` 是如何工作的。学习内部的代码，然后预测一下。
      behaviors 4 predict:
        answers:
        - text: 往左，再往下
          feedback: 错误。
        - text: 对角线
          correct: true
          feedback: 叮咚！答对啦！
        - text: 之字形
          feedback: '错误。 '
        - text: 往下，再往左
          feedback: 错误
        questions:
        - text: 预测一下。卫星会沿着那条路到达星系？
      courseC_multi_artist_prog6_predict1:
        answers:
        - text: 艺术家将会画一个等边三角形。
          feedback: 错误。艺术家画了一个正方形。
        - text: 艺术家将会画一条线。
          feedback: 错误。艺术家画了一个正方形。
        - text: 艺术家画了一个正方形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 艺术家画了一个正方形。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseC_multi_artist_prog6_predict1_2018:
        answers:
        - text: 艺术家将会画一个等边三角形。
          feedback: 错误。艺术家画了一个正方形。
        - text: 艺术家将会画一条线。
          feedback: 错误。艺术家画了一个正方形。
        - text: 艺术家将会画一个正方形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 艺术家画了一个正方形。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseC_multi_artist_prog6_predict1_2018_2019:
        answers:
        - text: 艺术家将会画一个等边三角形。
          feedback: 错误。艺术家画了一个正方形。
        - text: 艺术家将会画一条线。
          feedback: 错误。艺术家画了一个正方形。
        - text: 艺术家将会画一个正方形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 艺术家画了一个正方形。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseC_multi_harvester_loops11_predict1:
        answers:
        - text: '4'
          feedback: 错误。在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于12。
        - text: '12'
          correct: true
          feedback: 叮咚！答对啦！
        - text: '15'
          feedback: 错误。在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于12。
        - text: 我不知道。
          feedback: 在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于 12。
        questions:
        - text: 仔细查看下面的代码。你点击 "运行" 后, 农民会收集多少南瓜？
      courseC_multi_harvester_loops11_predict1_2018:
        answers:
        - text: '4'
          feedback: 错误。在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于12。
        - text: '12'
          correct: true
          feedback: 叮咚！答对啦！
        - text: '15'
          feedback: 错误。在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于12。
        - text: 我不知道。
          feedback: 在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于 12。
        questions:
        - text: 仔细查看下面的代码。你点击 "运行" 后, 农民会收集多少南瓜？
      courseC_multi_harvester_loops11_predict1_2018_2019:
        answers:
        - text: '4'
          feedback: 错误。在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于12。
        - text: '12'
          correct: true
          feedback: 叮咚！答对啦！
        - text: '15'
          feedback: 错误。在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于12。
        - text: 我不知道。
          feedback: 在每个循环中农民收集4个南瓜，执行了3个循环。4乘以3等于 12。
        questions:
        - text: 仔细查看下面的代码。你点击 "运行" 后, 农民会收集多少南瓜？
      courseC_multi_maze_debugging8_predict1:
        answers:
        - text: 这个程序不会失败。松鼠会到达橡子的位置。
          feedback: 不正确。斯奎特在最后转向时走错了路。
        - text: 松鼠在转最后一个弯的时候，它会走错路。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 松鼠走的路太少，最终不会到达橡子的位置。
          feedback: 不正确。在斯奎特转向错误的方向后，走的步数太少。
        - text: 我不知道。
          feedback: '第一个错误是斯奎特在最后转向时走错了路。 '
        questions:
        - text: 仔细看看下面的代码。 第一个造成错误的缺陷是什么？
      courseC_multi_maze_debugging8_predict1_2018:
        answers:
        - text: 这个程序不会失败。松鼠会到达橡子的位置。
          feedback: 不正确。斯奎特在最后转向时走错了路。
        - text: 松鼠在转最后一个弯的时候，它会走错路。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 松鼠走的路太少，最终不会到达橡子的位置。
          feedback: 不正确。在斯奎特转向错误的方向后，走的步数太少。
        - text: 我不知道。
          feedback: '第一个错误是斯奎特在最后转向时走错了路。 '
        questions:
        - text: 仔细看看下面的代码。 第一个让程序出错的缺陷是什么？
      courseC_multi_maze_debugging8_predict1_2018_2019:
        answers:
        - text: 这个程序不会失败。松鼠会到达橡子的位置。
          feedback: 不正确。斯奎特在最后转向时走错了路。
        - text: 松鼠在转最后一个弯的时候，它会走错路。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 松鼠走的路太少，最终不会到达橡子的位置。
          feedback: 不正确。在斯奎特转向错误的方向后，走的步数太少。
        - text: 我不知道。
          feedback: '第一个错误是斯奎特在最后转向时走错了路。 '
        questions:
        - text: 仔细看看下面的代码。 第一个让程序出错的缺陷是什么？
      courseC_multi_maze_programming8_predict1:
        answers:
        - text: 这只鸟最终会比猪少走一步。
          feedback: 错误。这段代码会把小鸟完美移动到猪的位置。
        - text: 小鸟会到达猪的位置。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 这只鸟将撞上 TNT 炸药。
          feedback: 错误。这段代码会把小鸟完美移动到猪的位置。
        - text: 我不知道。
          feedback: 这段代码会把小鸟完美地移动到猪的位置。
        questions:
        - text: 仔细阅读下面的代码。点击 "运行" 后，会发生什么？
      courseC_multi_maze_programming8_predict1_2018:
        answers:
        - text: 这只鸟最终会比猪少走一步。
          feedback: 错误。这段代码会把小鸟完美移动到猪的位置。
        - text: 小鸟会到达猪的位置。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 这只鸟将撞上 TNT 炸药。
          feedback: 错误。这段代码会把小鸟完美移动到猪的位置。
        - text: 我不知道。
          feedback: 这段代码会把小鸟完美地移动到猪的位置。
        questions:
        - text: 仔细阅读下面的代码。点击 "运行" 后，会发生什么？
      courseC_multi_maze_programming8_predict1_2018_2019:
        answers:
        - text: 这只鸟最终会比猪少走一步。
          feedback: 错误。这段代码会把小鸟完美移动到猪的位置。
        - text: 小鸟会到达猪的位置。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 这只鸟将撞上 TNT 炸药。
          feedback: 错误。这段代码会把小鸟完美移动到猪的位置。
        - text: 我不知道。
          feedback: 这段代码会把小鸟完美地移动到猪的位置。
        questions:
        - text: 仔细阅读下面的代码。点击 "运行" 后，会发生什么？
      courseC_multi_starWars_predict1:
        answers:
        - text: BB-8 将不会移动。
          feedback: 不正确。重复模块让 BB-8 向前移动 5 次。
        - text: BB-8 将只移动一格.
          feedback: 不正确。重复模块让 BB-8 向前移动 5 次。
        - text: BB-8 将移动 5次, 并得到所有的废金属
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不了解
          feedback: 循环模块将使 BB-8 向前移动5次。
        questions:
        - text: 当您单击 "运行" 时, 会发生什么情况？
      courseC_multi_starWars_predict1_2018:
        answers:
        - text: BB-8 将不会移动。
          feedback: 不正确。重复模块让 BB-8 向前移动 5 次。
        - text: BB-8 将只移动一格.
          feedback: 不正确。重复模块让 BB-8 向前移动 5 次。
        - text: BB-8 将移动 5次, 并得到所有的废金属
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不了解
          feedback: 循环模块将使 BB-8 向前移动5次。
        questions:
        - text: 当您单击 "运行" 时, 会发生什么情况？
      courseC_multi_starWars_predict1_2018_2019:
        answers:
        - text: BB-8 将不会移动。
          feedback: 不正确。重复模块让 BB-8 向前移动 5 次。
        - text: BB-8 将只移动一格.
          feedback: 不正确。重复模块让 BB-8 向前移动 5 次。
        - text: BB-8 将移动 5次, 并得到所有的废金属
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不了解
          feedback: 循环模块将使 BB-8 向前移动5次。
        questions:
        - text: 当您单击 "运行" 时, 会发生什么情况？
      courseC_multi_starWars_predict2:
        answers:
        - text: BB-8将在第一个循环中走得太远。
          feedback: 不正确。当 BB-8 需要往前移动 3 格时，第一个循环只能让它向前移动 2 格。
        - text: BB-8在第一个循环中走得不够远, 无法获得所有的废金属。
          correct: true
          feedback: 叮咚！答对啦！
        - text: BB-8将会毫无困难地收集所有的废金属。
          feedback: 不正确。当 BB-8 需要往前移动 3 格时，第一个循环只能让它向前移动 2 格。
        - text: 我不知道。
          feedback: 第一个循环只能让 BB-8 向前移动2格, 当它需要向前移动3格的时候。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseC_multi_starWars_predict2_2018:
        answers:
        - text: BB-8将在第一个循环中走得太远。
          feedback: 不正确。当 BB-8 需要往前移动 3 格时，第一个循环只能让它向前移动 2 格。
        - text: BB-8在第一个循环中走得不够远, 无法获得所有的废金属。
          correct: true
          feedback: 叮咚！答对啦！
        - text: BB-8将会毫无困难地收集所有的废金属。
          feedback: 不正确。当 BB-8 需要往前移动 3 格时，第一个循环只能让它向前移动 2 格。
        - text: 我不知道。
          feedback: 第一个循环只能让 BB-8 向前移动2格, 当它需要向前移动3格的时候。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseC_multi_starWars_predict2_2018_2019:
        answers:
        - text: BB-8将在第一个循环中走得太远。
          feedback: 不正确。当 BB-8 需要往前移动 3 格时，第一个循环只能让它向前移动 2 格。
        - text: BB-8在第一个循环中走得不够远, 无法获得所有的废金属。
          correct: true
          feedback: 叮咚！答对啦！
        - text: BB-8将会毫无困难地收集所有的废金属。
          feedback: 不正确。当 BB-8 需要往前移动 3 格时，第一个循环只能让它向前移动 2 格。
        - text: 我不知道。
          feedback: 第一个循环只能让 BB-8 向前移动2格, 当它需要向前移动3格的时候。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_external_binary1:
        markdown: "<h1>用二进制画画</h1>\n \n<h3>二进制是只用两个选项来表达信息的方法。在这里，用选项 <b>关</b> 和 <b>开</b>。\n<br/>\n用数字
          <b>0</b> 来表达 \"关\"，用数字 <b>1</b> 来表达 \"开\"。\n<br/>\n<table>\n<tr><td><img
          src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\"
          width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\"
          width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td
          align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\"
          float=\"left\"/><h3>这里有个可以遍历的 \"像素\" 网格，通过将某些正方形像素设置为开，来画出图形。</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
      courseD_external_binary1_2018:
        markdown: "<h1>用二进制画画</h1>\n \n<h3>二进制是只用两个选项来表达信息的方法。在这里，用选项 <b>关</b> 和 <b>开</b>。\n<br/>\n用数字
          <b>0</b> 来表达 \"关\"，用数字 <b>1</b> 来表达 \"开\"。\n<br/>\n<table>\n<tr><td><img
          src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\"
          width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\"
          width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td
          align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\"
          float=\"left\"/><h3>这里有个可以遍历的 \"像素\" 网格，通过将某些正方形像素设置为开，来画出图形。</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
      courseD_external_binary1_2018_2019:
        markdown: "<h1>用二进制画画</h1>\n \n<h3>二进制是只用两个选项来表达信息的方法。在这里，用选项 <b>关</b> 和 <b>开</b>。\n<br/>\n用数字
          <b>0</b> 来表达 \"关\"，用数字 <b>1</b> 来表达 \"开\"。\n<br/>\n<table>\n<tr><td><img
          src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\"
          width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\"
          width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td
          align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\"
          float=\"left\"/><h3>这里有个可以遍历的 \"像素\" 网格，通过将某些正方形像素设置为开，来画出图形。</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
      courseD_multi_artist_binary8_predict1:
        answers:
        - text: A
          feedback: 错误。
        - text: B
          feedback: 错误。
        - text: C
          feedback: 错误。
        - text: D
          correct: true
          feedback: 叮咚！答对啦！
        markdown: |+
          <table>
          <tr>

          <td style="padding: 0 30px 0 0;"> <b>A)</b> <img src="https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>B)</b> <img src="https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>C)</b> <img src="https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png" width="100px"/></td>


          <td style="padding: 0 20px 0 0;"> <b>D)</b> <img src="https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png" width="100px"/></td>
          </tr></table>
          <br/>

        questions:
        - text: 仔细看看下面的代码。当点击 "运行" 后，会生成哪个图形？
      courseD_multi_artist_binary8_predict1_2018:
        answers:
        - text: A
          feedback: 错误。
        - text: B
          feedback: 错误。
        - text: C
          feedback: 错误。
        - text: D
          correct: true
          feedback: 叮咚！答对啦！
        markdown: |+
          <table>
          <tr>

          <td style="padding: 0 30px 0 0;"> <b>A)</b> <img src="https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>B)</b> <img src="https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>C)</b> <img src="https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png" width="100px"/></td>


          <td style="padding: 0 20px 0 0;"> <b>D)</b> <img src="https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png" width="100px"/></td>
          </tr></table>
          <br/>

        questions:
        - text: 仔细看看下面的代码。当点击 "运行" 后，会生成哪个图形？
      courseD_multi_artist_binary8_predict1_2018_2019:
        answers:
        - text: A
          feedback: 错误。
        - text: B
          feedback: 错误。
        - text: C
          feedback: 错误。
        - text: D
          correct: true
          feedback: 叮咚！答对啦！
        markdown: |+
          <table>
          <tr>

          <td style="padding: 0 30px 0 0;"> <b>A)</b> <img src="https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>B)</b> <img src="https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>C)</b> <img src="https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png" width="100px"/></td>


          <td style="padding: 0 20px 0 0;"> <b>D)</b> <img src="https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png" width="100px"/></td>
          </tr></table>
          <br/>

        questions:
        - text: 仔细看看下面的代码。当点击 "运行" 后，会生成哪个图形？
      courseD_multi_artist_nestedLoops9_predict1:
        answers:
        - text: A
          correct: true
          feedback: 叮咚！答对啦！
        - text: B
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        - text: C
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        - text: 我不知道。
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: 仔细查看下面的代码。点击 "运行" 后，会画出哪个图形？
      courseD_multi_artist_nestedLoops9_predict1_2018:
        answers:
        - text: A
          correct: true
          feedback: 叮咚！答对啦！
        - text: B
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        - text: C
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        - text: 我不知道。
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: 仔细查看下面的代码。点击 "运行" 后，会画出哪个图形？
      courseD_multi_artist_nestedLoops9_predict1_2018_2019:
        answers:
        - text: A
          correct: true
          feedback: 叮咚！答对啦！
        - text: B
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        - text: C
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        - text: 我不知道。
          feedback: 错误。 内层的循环生成了一个正五边形, 外层的循环在一个圆圈中重复4次。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: 仔细查看下面的代码。点击 "运行" 后，会画出哪个图形？
      courseD_multi_bee_conditionals1_predict1:
        answers:
        - text: '蜜蜂会移动到云中，然后采花粉，不论云下是什么。 '
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        - text: 蜜蜂会移动到云中，只有在下面有花朵的情况下，才会尝试采花粉。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会移动到云中，然后什么都不做，不论云下是什么。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂会采花粉。
        - text: 我不知道。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        questions:
        - text: 云挡住了视线。在这朵云下可能有花。如果有 1 朵花，蜜蜂将需要收集 1 次花粉。如果没有花，蜜蜂就什么也不做。仔细查看下面的代码，在点击
            “运行” 后会发生什么？
      courseD_multi_bee_conditionals1_predict1_2018:
        answers:
        - text: '蜜蜂会移动到云中，然后采花粉，不论云下是什么。 '
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        - text: 蜜蜂会移动到云中，只有在下面有花朵的情况下，才会尝试采花粉。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会移动到云中，然后什么都不做，不论云下是什么。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂会采花粉。
        - text: 我不知道。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        questions:
        - text: 云挡住了视线。在这朵云下可能有花。如果有 1 朵花，蜜蜂将需要收集 1 次花粉。如果没有花，蜜蜂就什么也不做。仔细查看下面的代码，在点击
            “运行” 后会发生什么？
      courseD_multi_bee_conditionals1_predict1_2018_2019:
        answers:
        - text: '蜜蜂会移动到云中，然后采花粉，不论云下是什么。 '
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        - text: 蜜蜂会移动到云中，只有在下面有花朵的情况下，才会尝试采花粉。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会移动到云中，然后什么都不做，不论云下是什么。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂会采花粉。
        - text: 我不知道。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        questions:
        - text: 云挡住了视线。在这朵云下可能有花。如果有 1 朵花，蜜蜂将需要收集 1 次花粉。如果没有花，蜜蜂就什么也不做。仔细查看下面的代码，在点击
            “运行” 后会发生什么？
      courseD_multi_bee_conditionals7_predict2:
        answers:
        - text: 蜜蜂将会得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会从花朵和蜂窝中获取花粉。
          feedback: 错误。积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        - text: 蜜蜂会从花朵和蜂窝中获取蜂蜜。
          feedback: 错误。积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        - text: 我不知道。
          feedback: 积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        questions:
        - text: 仔细查看下面的代码，在点击 “运行” 后会发生什么？记住：每朵云下，蜜蜂要么酿 *一次* 蜂蜜，要么采 *一次* 花蜜。
      courseD_multi_bee_conditionals7_predict2_2018:
        answers:
        - text: 蜜蜂将会得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会从花朵和蜂窝中获取花粉。
          feedback: 错误。积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        - text: 蜜蜂会从花朵和蜂窝中获取蜂蜜。
          feedback: 错误。积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        - text: 我不知道。
          feedback: 积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        questions:
        - text: 仔细查看下面的代码，在点击 “运行” 后会发生什么？记住：每朵云下，蜜蜂要么酿 *一次* 蜂蜜，要么采 *一次* 花蜜。
      courseD_multi_bee_conditionals7_predict2_2018_2019:
        answers:
        - text: 蜜蜂将会得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会从花朵和蜂窝中获取花粉。
          feedback: 错误。积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        - text: 蜜蜂会从花朵和蜂窝中获取蜂蜜。
          feedback: 错误。积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        - text: 我不知道。
          feedback: 积木块 `如果在花上` 可以让蜜蜂得到每朵花的花粉，并在每个蜂窝中制作蜂蜜。
        questions:
        - text: 仔细查看下面的代码。在点击 “运行” 后会发生什么？记住：每朵云下，蜜蜂要么酿 *一次* 蜂蜜，要么采 *一次* 花蜜。
      courseD_multi_bee_nestedLoops2_predict1:
        answers:
        - text: 蜜蜂会向前移动，只能得到1个花蜜。
          feedback: 不正确。 蜜蜂重复"前进移动和收集花蜜的循环动作"来解决这个难题。
        - text: 蜜蜂只能得到2个花蜜。
          feedback: 不正确。 蜜蜂重复"前进移动和收集花蜜的循环动作"来解决这个难题。
        - text: 蜜蜂将会得到所有的花蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 蜜蜂重复"移动前进和收集花蜜"的循环动作，来解决这个难题。
        questions:
        - text: 仔细阅读下面的嵌套循环。 点击 "运行" 后，会发生什么？
      courseD_multi_bee_nestedLoops2_predict1_2018:
        answers:
        - text: 蜜蜂会向前移动，只能得到1个花蜜。
          feedback: 不正确。 蜜蜂重复"前进移动和收集花蜜的循环动作"来解决这个难题。
        - text: 蜜蜂只能得到2个花蜜。
          feedback: 不正确。 蜜蜂重复"前进移动和收集花蜜的循环动作"来解决这个难题。
        - text: 蜜蜂将会得到所有的花蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 蜜蜂重复"移动前进和收集花蜜"的循环动作，来解决这个难题。
        questions:
        - text: 仔细阅读下面的嵌套循环。 点击 "运行" 后，会发生什么？
      courseD_multi_bee_nestedLoops2_predict1_2018_2019:
        answers:
        - text: 蜜蜂会向前移动，只能得到1个花蜜。
          feedback: 不正确。 蜜蜂重复"前进移动和收集花蜜的循环动作"来解决这个难题。
        - text: 蜜蜂只能得到2个花蜜。
          feedback: 不正确。 蜜蜂重复"前进移动和收集花蜜的循环动作"来解决这个难题。
        - text: 蜜蜂将会得到所有的花蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 蜜蜂重复"移动前进和收集花蜜"的循环动作，来解决这个难题。
        questions:
        - text: 仔细阅读下面的嵌套循环。 点击 "运行" 后，会发生什么？
      courseD_multi_bee_nestedLoops9_predict2:
        answers:
        - text: '4'
          feedback: 错误。蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        - text: '8'
          correct: true
          feedback: 叮咚！答对啦！
        - text: '12'
          feedback: 错误。蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        - text: 我不知道。
          feedback: 蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        questions:
        - text: 仔细查看下面的代码。当你点击 "运行" 后，蜜蜂会采集多少蜂蜜？
      courseD_multi_bee_nestedLoops9_predict2_2018:
        answers:
        - text: '4'
          feedback: 错误。蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        - text: '8'
          correct: true
          feedback: 叮咚！答对啦！
        - text: '12'
          feedback: 错误。蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        - text: 我不知道。
          feedback: 蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        questions:
        - text: 仔细查看下面的代码。当你点击 "运行" 后，蜜蜂会采集多少蜂蜜？
      courseD_multi_bee_nestedLoops9_predict2_2018_2019:
        answers:
        - text: '4'
          feedback: 错误。蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        - text: '8'
          correct: true
          feedback: 叮咚！答对啦！
        - text: '12'
          feedback: 错误。蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        - text: 我不知道。
          feedback: 蜜蜂在向前移动的循环中采集了 2 个花蜜，接着在下面循环中收集了 2 个花蜜。 这两个循环在最外面循环的内部，被运行了两次。
            4 乘以 2 等于 8！
        questions:
        - text: 仔细查看下面的代码。当你点击 "运行" 后，蜜蜂会采集多少蜂蜜？
      courseD_multi_collector_debugging10_predict1:
        answers:
        - text: 在画正方形时，罗瑞尔转向了错误的方向。
          feedback: 错误。这个答案部分正确，循环没有运行足够多次数来获得所有的宝贝。
        - text: '循环没有运行足够的次数，来让罗瑞尔获得所有的宝藏。 '
          feedback: 错误。对了一部分，但蜜蜂在试着画正方形时，也转到了错误的路上。
        - text: 罗瑞尔转到了错误的路上，*并且* 循环数量不够让罗瑞尔获得所有的宝藏。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 罗瑞尔转到了错误的路上，*并且* 循环数量不够让罗瑞尔获得所有的宝藏。
        questions:
        - text: 仔细看看下面的代码。为什么在点击 "运行" 后，罗瑞尔不能收集到所有的宝藏？警告：这是一个棘手的问题，确保在回答前阅读了所有的选项！
      courseD_multi_farmer_condLoops9_predict1:
        answers:
        - text: 收割者将收获所有的农作物。
          feedback: 错误。没有收割南瓜的代码。
        - text: 收割者将不会收割她路过的农作物。
          feedback: 错误。代码会让收获者重复上楼梯的模式，并搜集路上尽可能多的玉米或莴苣。不会收集南瓜。
        - text: 收割者将收获到除了南瓜以外的所有农作物。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 代码会让收获者重复上楼梯的模式，并搜集路上尽可能多的玉米或莴苣。不会收集南瓜。
        markdown: |
          这一关中的幼苗会是玉米或莴苣。
          <br/>
        questions:
        - text: 仔细看看下面的代码。点击 "运行" 后，会发生什么？
      courseD_multi_farmer_condLoops9_predict1_2018:
        answers:
        - text: 收割者将收获所有的农作物。
          feedback: 错误。没有收割南瓜的代码。
        - text: 收割者将不会收割她路过的农作物。
          feedback: 错误。代码会让收获者重复上楼梯的模式，并搜集路上尽可能多的玉米或莴苣。不会收集南瓜。
        - text: 收割者将收获到除了南瓜以外的所有农作物。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 代码会让收获者重复上楼梯的模式，并搜集路上尽可能多的玉米或莴苣。不会收集南瓜。
        markdown: |
          这一关中的幼苗会是玉米或莴苣。
          <br/>
        questions:
        - text: 仔细看看下面的代码。点击 "运行" 后，会发生什么？
      courseD_multi_farmer_condLoops9_predict1_2018_2019:
        answers:
        - text: 收割者将收获所有的农作物。
          feedback: 错误。没有收割南瓜的代码。
        - text: 收割者将不会收割她路过的农作物。
          feedback: 错误。代码会让收获者重复上楼梯的模式，并搜集路上尽可能多的玉米或莴苣。不会收集南瓜。
        - text: 收割者将收获到除了南瓜以外的所有农作物。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 代码会让收获者重复上楼梯的模式，并搜集路上尽可能多的玉米或莴苣。不会收集南瓜。
        markdown: |
          这一关中的幼苗会是玉米或莴苣。
          <br/>
        questions:
        - text: 仔细看看下面的代码。点击 "运行" 后，会发生什么？
      courseD_multi_farmer_ramp13:
        answers:
        - text: 农夫会走到路的尽头，并且收割南瓜。
          feedback: 错误。积木块 `捡起南瓜` 在循环内，所以农夫每一步都会尝试摘南瓜，而不是只在最后摘。
        - text: 农夫会试着在每一个正方形内摘南瓜，但是一直都摘不到。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 农夫会移动4个格子，然后摘一个南瓜。
          feedback: 错误。积木块 `捡起南瓜` 在循环内，所以农夫每一步都会尝试摘南瓜，而不是只在最后摘。
        - text: 我不知道。
          feedback: 积木块“摘南瓜”在循环内，所以农夫每一步都会尝试摘南瓜，而不是直接结束。
        markdown: |+
          这一关用的模块和以前的很像。预测一下运行下面的代码后，会发生什么？


        questions:
        - {}
      courseD_multi_farmer_while10_predict2:
        answers:
        - text: 没东西了。只会剩下平地。
          feedback: 错误。没有任何代码用来清除土堆。
        - text: 代码将对土堆不产生任何影响。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 代码将对地上的坑不产生任何影响。
          feedback: 错误。’当‘ 循环会永远执行除非‘当’的条件是假, 但没有用于清除土堆的代码。
        - text: 我不知道。
          feedback: "’当‘ 循环会永远执行除非‘当’的条件是假, 但没有用于清除土堆的代码。"
        questions:
        - text: 请仔细查看下面的代码。这段代码的运行结果是什么？
      courseD_multi_farmer_while10_predict2_2018:
        answers:
        - text: 没东西了。代码只会剩下平地。
          feedback: 错误。没有任何代码用来清除土堆。
        - text: 代码将对土堆不产生任何影响。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 代码将对地上的坑不产生任何影响。
          feedback: 错误。’当‘ 循环会永远执行除非‘当’的条件是假, 但没有用于清除土堆的代码。
        - text: 我不知道。
          feedback: "’当‘ 循环会永远执行除非‘当’的条件是假, 但没有用于清除土堆的代码。"
        questions:
        - text: 请仔细查看下面的代码。这段代码的运行结果是什么？
      courseD_multi_farmer_while10_predict2_2018_2019:
        answers:
        - text: 没东西了。代码只会剩下平地。
          feedback: 错误。没有任何代码用来清除土堆。
        - text: 代码将对土堆不产生任何影响。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 代码将对地上的坑不产生任何影响。
          feedback: 错误。’当‘ 循环会永远执行除非‘当’的条件是假, 但没有用于清除土堆的代码。
        - text: 我不知道。
          feedback: "’当‘ 循环会永远执行除非‘当’的条件是假, 但没有用于清除土堆的代码。"
        questions:
        - text: 请仔细查看下面的代码。这段代码的运行结果是什么？
      courseD_multi_farmer_while4_predict1:
        answers:
        - text: 什么都不会发生。
          feedback: 不正确。农民一见到土堆就会去清除直到所有土堆被清除完毕。
        - text: 农夫永远不停止地清除土堆。
          feedback: 不正确。农民一见到土堆就会去清除直到所有土堆被清除完毕。
        - text: 农民一见到土堆就会去清除直到所有土堆被清除完毕。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 只要有土堆，农夫就会一直移除土，直到土堆消失。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_multi_farmer_while4_predict1_2018:
        answers:
        - text: 什么都不会发生。
          feedback: 不正确。农民一见到土堆就会去清除直到所有土堆被清除完毕。
        - text: 农夫永远不停止地清除土堆。
          feedback: 不正确。农民一见到土堆就会去清除直到所有土堆被清除完毕。
        - text: 农民一见到土堆就会去清除直到所有土堆被清除完毕。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 只要有土堆，农夫就会一直移除土，直到土堆消失。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_multi_farmer_while4_predict1_2018_2019:
        answers:
        - text: 什么都不会发生。
          feedback: 不正确。农民一见到土堆就会去清除直到所有土堆被清除完毕。
        - text: 农夫永远不停止地清除土堆。
          feedback: 不正确。农民一见到土堆就会去清除直到所有土堆被清除完毕。
        - text: 农民一见到土堆就会去清除直到所有土堆被清除完毕。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 只要有土堆，农夫就会一直移除土，直到土堆消失。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_multi_maze_until10_predict2:
        answers:
        - text: 僵尸会立即右转，然后被卡住。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 僵尸会到达向日葵。
          feedback: 错误。根据代码，在直走 *之前*，会检查是否可以右转走。因此，此关会失败。
        - text: 僵尸将在第一个路口右转，然后永远的绕着圈走。
          feedback: 错误。僵尸只会右转或直行。从不会左转，所以几乎立刻就卡住了。
        - text: 我不知道。
          feedback: 这个代码中，僵尸在右转之前，会先判断是否可以向前移动。正因如此，解谜失败。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_multi_maze_until10_predict2_2018:
        answers:
        - text: 僵尸会通过正确的路径, 最终会永远的来回走动。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 僵尸会到达向日葵。
          feedback: 错误。僵尸会通过正确的路径, 最终会永远的来回走动。
        - text: 僵尸将在第一个路口右转，然后永远的绕着圈走。
          feedback: 错误。僵尸会通过正确的路径, 最终会永远的来回走动。
        - text: 我不知道。
          feedback: 在这个代码中，僵尸将会通过正确的路径，最终会永远的来回走动。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_multi_maze_until10_predict2_2018_2019:
        answers:
        - text: 僵尸会通过正确的路径, 最终会永远的来回走动。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 僵尸会到达向日葵。
          feedback: 错误。僵尸会通过正确的路径, 最终会永远的来回走动。
        - text: 僵尸将在第一个路口右转，然后永远的绕着圈走。
          feedback: 错误。僵尸会通过正确的路径, 最终会永远的来回走动。
        - text: 我不知道。
          feedback: 在这个代码中，僵尸将会通过正确的路径，最终会永远的来回走动。
        questions:
        - text: 仔细阅读下面的代码。 点击 "运行" 后，会发生什么？
      courseD_multi_maze_until2_predict1:
        answers:
        - text: 小鸟不会移动。
          feedback: 错误。当有路时，代码会让小鸟往前移动，然后左转。重复如此，直到到达猪那里！
        - text: 小鸟会到达猪的位置。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 小鸟会撞上TNT炸药。
          feedback: 错误。当有安全的路时，代码会让小鸟往前移动，然后左转。重复如此，直到到达猪那里！
        - text: 我不知道。
          feedback: 当前面有路时，这只鸟会向前走然后左转，反复如此，直到达到猪的位置！
        questions:
        - text: 仔细阅读下面的代码。 当单击 "运行" 时，会发生什么？
      courseD_multi_maze_until2_predict1_2018:
        answers:
        - text: 小鸟不会移动。
          feedback: 错误。当有路时，代码会让小鸟往前移动，然后左转。重复如此，直到到达猪那里！
        - text: 小鸟会到达猪的位置。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 小鸟会撞上TNT炸药。
          feedback: 错误。当有安全的路时，代码会让小鸟往前移动，然后左转。重复如此，直到到达猪那里！
        - text: 我不知道。
          feedback: 当前面有路时，这只鸟会向前走然后左转，反复如此，直到达到猪的位置！
        questions:
        - text: 仔细阅读下面的代码。 当单击 "运行" 时，会发生什么？
      courseD_multi_maze_until2_predict1_2018_2019:
        answers:
        - text: 小鸟不会移动。
          feedback: 错误。当有路时，代码会让小鸟往前移动，然后左转。重复如此，直到到达猪那里！
        - text: 小鸟会到达猪的位置。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 小鸟会撞上TNT炸药。
          feedback: 错误。当有安全的路时，代码会让小鸟往前移动，然后左转。重复如此，直到到达猪那里！
        - text: 我不知道。
          feedback: 当前面有路时，这只鸟会向前走然后左转，反复如此，直到达到猪的位置！
        questions:
        - text: 仔细阅读下面的代码。 当单击 "运行" 时，会发生什么？
      courseD_multi_scrat_predict1:
        answers:
        - text: 什么也没发生。斯奎特完全不会动。
          feedback: 错误。将 `向前移动` 模块放到 '重复' 模块中，会让斯奎特向前移动 3 次。
        - text: 斯奎特会向前移动三次，转向，然后再次向前移动三次，让他到达橡子！
          correct: true
          feedback: 叮咚！答对啦！
        - text: 斯奎特会向前移动，然后转弯摔倒。
          feedback: 错误。将 `向前移动` 模块放到 '重复' 模块中，会让斯奎特向前移动 3 次。
        - text: 我不知道。
          feedback: 将 '向前移动' 模块放到 '重复' 模块中会让斯奎特向前移动 3 次。然后转向并再向前移动 3 次，就能到达橡子了！
        questions:
        - text: 此代码使用了一个新模块。你认为在你按下“运行”时会发生什么？
      courseE_multi_bee_functions_predict1:
        answers:
        - text: 同样的程序也会通过这一关。
          correct: true
          feedback: 正确！不管有多少数量的蜂蜜。函数都能解决。
        - text: 蜜蜂不会采集足够的蜂蜜。
          feedback: 错误。函数能够处理任何大于 0 个蜂蜜的数量。
        - text: 蜜蜂会试着酿很多蜂蜜。
          feedback: 错误。函数能够处理任何大于 0 个蜂蜜的数量。
        - text: 我不知道。
          feedback: 程序也能解决此问题。它能处理任何大于 0 的蜂蜜数量。
        questions:
        - text: 这和上一关的程序完全一样，但要手机的蜂蜜数量变了。点击 "运行" 后会发生什么？
      courseE_multi_farmer_functions11_predict:
        answers:
        - text: 收获者会采摘两个南瓜。
          feedback: 错误。收获者在到达玉米前，不会调用 "检查并捡起" 函数。
        - text: 收获者会采摘所有的南瓜。
          feedback: 错误。收获者在到达玉米前，不会调用 "检查并捡起" 函数。
        - text: 收获者会采摘莴苣。
          feedback: 错误。收获者只会转一次弯，并在玉米那里停下。
        - text: 收获者会采摘玉米。
          correct: true
          feedback: 叮咚！答对啦！
        questions:
        - text: 看看下面的函数定义。收获者会采摘什么？
      courseE_multi_farmer_functions11_predict_2018:
        answers:
        - text: 收获者会采摘两个南瓜。
          feedback: 错误。收获者会一直向前走到路的尽头，然后转向往回走，直到采摘了莴苣。
        - text: 收获者会采摘所有的南瓜。
          feedback: 错误。收获者会一直向前走到路的尽头，然后转向往回走，直到采摘了莴苣。
        - text: 收获者会采摘莴苣。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 收获者会采摘玉米。
          feedback: 错误。收获者会一直向前走到路的尽头，然后转向往回走，直到采摘了莴苣。
        questions:
        - text: 看看下面的函数定义。收获者会采摘什么？
      courseE_multi_farmer_functions11_predict_2018_2019:
        answers:
        - text: 收获者会采摘两个南瓜。
          feedback: 错误。收获者会一直向前走到路的尽头，然后转向往回走，直到采摘了莴苣。
        - text: 收获者会采摘所有的南瓜。
          feedback: 错误。收获者会一直向前走到路的尽头，然后转向往回走，直到采摘了莴苣。
        - text: 收获者会采摘莴苣。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 收获者会采摘玉米。
          feedback: 错误。收获者会一直向前走到路的尽头，然后转向往回走，直到采摘了莴苣。
        questions:
        - text: 看看下面的函数定义。收获者会采摘什么？
      courseE_prediction_artistFunction1:
        answers:
        - text: 什么都没有发生，函数没有被调用。
          feedback: 不正确！这个函数实际上在程序中被调用了两次。
        - text: 艺术家只会绘制一个正方形。
          feedback: 不正确！这个函数实际上在程序中被调用了两次。
        - text: 艺术家将绘制两个部分重叠的正方形。
          feedback: 不正确！正方形的每条边的长度只有100像素，但是艺术家在不同的函数之间跳跃了175像素。
        - text: 艺术家将绘制两个正方形，中间有空隙隔开。
          correct: true
          feedback: 正确的！该函数在程序中被调用两次，其间有一个跳转。
        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseE_prediction_artistFunction1_2018:
        answers:
        - text: 什么都没有发生，函数没有被调用。
          feedback: 不正确！这个函数实际上在程序中被调用了两次。
        - text: 艺术家只会绘制一个正方形。
          feedback: 不正确！这个函数实际上在程序中被调用了两次。
        - text: 艺术家将绘制两个部分重叠的正方形。
          feedback: 不正确！正方形的每条边的长度只有100像素，但是艺术家在不同的函数之间跳跃了175像素。
        - text: 艺术家将绘制两个正方形，中间有空隙隔开。
          correct: true
          feedback: 正确的！该函数在程序中被调用两次，其间有一个跳转。
        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseE_prediction_artistFunction1_2018_2019:
        answers:
        - text: 什么都没有发生，函数没有被调用。
          feedback: 不正确！这个函数实际上在程序中被调用了两次。
        - text: 艺术家只会绘制一个正方形。
          feedback: 不正确！这个函数实际上在程序中被调用了两次。
        - text: 艺术家将绘制两个部分重叠的正方形。
          feedback: 不正确！正方形的每条边的长度只有100像素，但是艺术家在不同的函数之间跳跃了175像素。
        - text: 艺术家将绘制两个正方形，中间有空隙隔开。
          correct: true
          feedback: 正确的！该函数在程序中被调用两次，其间有一个跳转。
        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseE_project_exemplars_2019:
        content1: 测试Markdown文本页面
        markdown: |+
          # 项目示例

          要开始最终项目了。在开始前，花些时间来看看示例项目。

          ## 精灵图实验室

          | 怪物跳舞 (精灵图实验室) | 纸杯蛋糕游戏 (精灵图实验室) |
          |---|---|
          | [![怪物跳舞 (精灵图实验室)](https://images.code.org/85838ca11b728dce3e1513515c4510e3-image-1556826303297.png "怪物跳舞 (精灵图实验室)")](https://studio.code.org/projects/spritelab/Cj3sVYGhWo2ujgwRoO1FscJazrDPT2qGfU59YXvFXxs/view) | [![Cupcake Game (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png "纸杯蛋糕游戏 (精灵图实验室)")](https://studio.code.org/projects/spritelab/YMEHR4ps9cDJ0sb4Ks0YrZcpcjGmc4OEiUudZHm-l6g/view) |
          | 试试为游戏添加文本或分数！ | 试试为游戏添加文本或分数！ |

          ## 小艺术家

          | 图案 (小艺术家) | 函数的花 (小艺术家) |
          |---|---|
          | [![图案 (小艺术家)](https://images.code.org/2432878706891dda080b69428ddc4a20-image-1556822714214.png "图案 (小艺术家)")](https://studio.code.org/projects/artist/TznMeJRa4SnHWJvUBEoNUw/view) | [![函数的花 (小艺术家)](https://images.code.org/1e6da38baf996dace44581572895a4b8-image-1556822184973.png "函数的花 (小艺术家)")](https://studio.code.org/projects/artist/4uGqFaTnc7V9B6IqCqj21Q/view) |
          | 用嵌套循环来创造！ | 用函数来创造！ |

      courseF_bee_variables_8a_2018:
        answers:
        - text: 蜜蜂不会收集任何花蜜，因为变量名称不是“收集”。
          feedback: 错误。变量的名称不会影响它的值。
        - text: 蜜蜂只会收集到2个花蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂将会得到所有的花蜜。
          feedback: 错误。在最后两个函数调用之前，变量被设置回0。
        - text: 我不知道。
          feedback: 在最后两个函数调用之前，变量被设置为 0，而在函数内每次都会加 1。所以最后蜜蜂会收集 2 个花蜜。
        questions:
        - text: 仔细查看下面的代码。蜜蜂最后会收集多少个花蜜？
        title: 小蜜蜂——多变量的应用
      courseF_bee_variables_8a_2018_2019:
        answers:
        - text: 蜜蜂不会收集任何花蜜，因为变量名称不是“收集”。
          feedback: 错误。变量的名称不会影响它的值。
        - text: 蜜蜂只会收集到2个花蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂将会得到所有的花蜜。
          feedback: 错误。在最后两个函数调用之前，变量被设置回0。
        - text: 我不知道。
          feedback: 在最后两个函数调用之前，变量被设置为 0，而在函数内每次都会加 1。所以最后蜜蜂会收集 2 个花蜜。
        questions:
        - text: 仔细查看下面的代码。蜜蜂最后会收集多少个花蜜？
        title: 小蜜蜂——多变量的应用
      courseF_external_variableConstant:
        markdown: |+
          <h2>变量的更多介绍</h2>

          <img src="https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png" style="padding-left: 30px; width:300px; float:right;"/>
          <h3>刚刚学习了使用变量的好办法……当作常量！
          将变量当作常量使用时，只用在程序中设置一次变量，点击"运行"后，就可以多次使用 *同样* 的值。</h3>
          <br/><hr/>
          <h3>在这个系列接下来的部分，会使用在程序中 *变化* 的变量。</h3>

      courseF_external_variableConstant_2018:
        markdown: |+
          <h2>变量的更多介绍</h2>


          <img src="https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png" style="padding-left: 30px; width:300px; float:right;"/>
          <h3>刚刚学习了使用变量的好办法……当作常量！
          将变量当作常量使用时，只用在程序中设置一次变量，点击 "运行" 后，就可以多次使用 *同样* 的值。</h3>
          <br/><hr/>
          <h3>在这个系列接下来的部分，会使用在程序中能 *变化* 的变量。</h3>

      courseF_external_variableConstant_2018_2019:
        markdown: |+
          <h2>变量的更多介绍</h2>


          <img src="https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png" style="padding-left: 30px; width:300px; float:right;"/>
          <h3>刚刚学习了使用变量的好办法……当作常量！
          将变量当作常量使用时，只用在程序中设置一次变量，点击 "运行" 后，就可以多次使用 *同样* 的值。</h3>
          <br/><hr/>
          <h3>在这个系列接下来的部分，会使用在程序中能 *变化* 的变量。</h3>

      courseF_markdown_algorithms_end:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"算法\"!**  \n\n\n\n### **算法是完成一个任务的一组步骤**. 有趣的是，算法的每一步都是由你决定的。\n\n###
          为机器写的算法，叫做 **程序**。 \n\n---\n\n## **要知道的词汇**\n\n* ### **算法（algorithm）** -
          完成一个任务的一组步骤\n\n* ### **程序（program）** - 被写成代码的一个算法，能在机器上运行\n"
      courseF_markdown_algorithms_intro:
        content1: 测试Markdown文本页面
        markdown: |
          # **在这节课中...**

          ### 有没有曾经想告诉人具体每一步该怎么做？他们有没有听你的？

          ### 今天，会一步一步告诉机器做什么 - 它会听你的！

          ---

          ## **要学习的模块**

          ![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)

          ![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)

          ![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)
      courseF_markdown_conditionals_end:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"条件语句\"！**\n\n### 条件语句在计算机科学中超级有用。想象一下，在登录喜欢的网站时，并输入了密码。网站会用条件语句来检查
          *是否* 输入的密码与对应用户名的密码匹配。 \n\n### `如果` 匹配，登录成功！ \n\n### `否则`，给用户显示错误。  \n\n---\n\n##
          **要知道的词汇**\n\n* ### **条件（condition）** - 在执行某个动作前，程序要检查的东西\n\n* ### **条件语句（conditionals）**
          - 只会在某些条件下运行的语句\n\n"
      courseF_markdown_conditionals_intro:
        content1: 测试Markdown文本页面
        markdown: "# **在这节课中...**\n\n### **条件** 是可以为真或者为假的一些事情。 \n\n### 将学习到程序中是如何使用条件来在
          `当`, `直到`, 或 `如果` 一些事情为真时发生的！\n---\n\n## **要知道的模块**\n\n![](https://images.code.org/8c6cc9ffa31c916fc970c67382d83b8d-image-1524770260439.png)\n\n![](https://images.code.org/c2fbbaf80b348d47ba2dac4497ae2624-image-1524770272898.png)\n\n![](https://images.code.org/6b90e2dfb025609f8762014ff0ba51dc-image-1524770241058.png)\n\n\n"
      courseF_markdown_debugging_end:
        content1: 测试Markdown文本页面
        markdown: |
          # **刚刚学会了 "调试"！**

          ### **缺陷（bug）表示有什么东西出错了。** 这是程序里的一个错误。当查找并修复这些错误时，就是在 ** 调试** 问题。

          ### 为了找到并修复所有的缺陷，必须练习 **坚持**，也就是不放弃。

          ---

          ## **要知道的词汇**

          * ### **缺陷（bug）** - 程序中不能正常工作的部分

          * ### **调试（debug）** - 找到并修复算法或程序中的问题

          * ### **坚持（persistence）** - 不放弃
      courseF_markdown_debugging_intro:
        content1: 测试Markdown文本页面
        markdown: "# 在这节课中...\n\n### 当想到虫子（bug）的时候，会想到什么？ \n\n### 大多数人想到虫子（bug）的时候，都会想到一些令人毛骨悚然的东西。在计算机科学里，虫子（bug）不是活的，但还是很麻烦。通常会将
          bug 称为 \"缺陷\"。\n\n### 这一关的难题已经解决了！但不是很快 - 看起来还不太好用。是不是有虫子（bug）？ \n\n---\n\n##
          要知道的模块\n\n![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)\n\n![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)\n\n![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)\n"
      courseF_markdown_forloops_end:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"计数循环\"！**\n\n### **计数循环是能够设置开始、结束、步长值的循环。**\n\n###
          这种新的 `重复` 循环能在循环运行的开始，结束，每次增加多少上，有更多的控制。\n\n### 更多的控制，意味着能更快的解决一些难题！ \n\n---\n\n##
          **要知道的词汇**\n\n### **计数循环（for loop）** - 计数循环是能够预定开始、结束和增量（步长）的循环\n\n"
      courseF_markdown_forloops_end_2019:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"计数循环\"！**\n\n### **计数循环是能够设置开始、结束、步长值的循环。**\n\n###
          这种新的 `重复` 循环能在循环运行的开始，结束，每次增加多少上，有更多的控制。\n\n### 更多的控制，意味着能更快的解决一些难题！ \n\n---\n\n##
          **要知道的词汇**\n\n### **计数循环（for loop）** - 计数循环是能够预定开始、结束和增量（步长）的循环\n\n"
      courseF_markdown_forloops_intro:
        content1: 测试Markdown文本页面
        markdown: |+
          # **在这节课中...**

          ### 今天要学习一种新的 `重复` 循环。这是要用的模块：

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### 好消息是，新循环会非常容易解决这样的问题！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_forloops_intro_2019:
        content1: 测试Markdown文本页面
        markdown: |+
          # **在这节课中...**

          ### 今天要学习一种新的 `重复` 循环。这是要用的模块：

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### 好消息是，新循环会非常容易解决这样的问题！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_loops_end:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"循环\"！**  \n\n### **循环是不断重复做某件事情。** 另一种说法是重复。\n\n###
          循环对重复的规律非常有用。先试试不用循环来写出程序，然后再找规律。这可能会有所帮助。\n\n### 当找到规律后，将它复制到 `重复` 模块中!\n\n---\n\n##
          **要知道的词汇**\n\n* ### **循环（loop）** - 不断地做某件事情\n\n* ### **重复（repeat）** - 再次做某件事情\n"
      courseF_markdown_loops_intro:
        content1: 测试Markdown文本页面
        markdown: "# 在这节课中...\n\n### 想象一下，希望角色向前移动 **5** 次。这还比较容易 - 只用拖出来 **5** 个向前移动模块。现在，想象一下，要让角色向前移动
          **5,000** 次！ \n\n### 拖出来 **5,000** 各模块需要多久？ \n\n### 希望有个简单的方法吗？有的！\n\n---\n\n##
          要知道的模块\n\n![](https://images.code.org/2d949be303e653f4ea203cc00f0b06c3-image-1524697677509.png)\n"
      courseF_markdown_nestedloops_end:
        content1: 测试Markdown文本页面
        markdown: |+
          # **刚刚学会了 "嵌套循环"！**

          ### **嵌套循环是将循环放到循环里** 想想它就像一个圈一样，另一个圈将其它东西都装在里面，而这个圈又在原先的圈里。

          ### 嵌套循环能够非常好的解决重复规律里的重复规律。如果用对了，会非常有用！

          ---

          ## **要知道的词汇**

          ### __嵌套循环（nested loops）__ - 循环里有循环

      courseF_markdown_nestedloops_intro:
        content1: 测试Markdown文本页面
        markdown: "# **在这节课中...**\n\n### 有没有好奇过，如果将循环 *放到另一个循环里* 会怎样？ \n\n### 可能只会循环得眼晕！\n\n###
          如果一个普通循环就能对重复的规律很有用了，那么循环套上循环会怎样呢？让我们试试吧！\n\n---\n\n## **要知道的模块**\n\n![](https://images.code.org/cecea12a6973648b56512ff0990da6fb-image-1524759116715.gif)\n"
      courseF_markdown_variables_end:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"变量\"！**\n\n### 要使用变量，需要一个名字和一个值。名字不能改变，但值可以。这样，可以在程序的任何位置，将名字作为值的占位符！
          \n\n---\n\n## **要知道的词汇**\n\n### **变量（variable）** - 一些可以变化的信息的占位符\n\n"
      courseF_markdown_variables_end_2019:
        content1: 测试Markdown文本页面
        markdown: "# **刚刚学会了 \"变量\"！**\n\n### 要使用变量，需要一个名字和一个值。名字不能改变，但值可以。这样，可以在程序的任何位置，将名字作为值的占位符！
          \n\n---\n\n## **要知道的词汇**\n\n### **变量（variable）** - 一些可以变化的信息的占位符\n\n"
      courseF_markdown_variables_intro:
        content1: 测试Markdown文本页面
        markdown: |+
          # **在这节课中...**

          ### *变量* 是一些能改变的信息的占位符。有了占位符，才能在稍后才能知道值得情况下，写出程序！


          ---

          ## **要知道的模块**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_markdown_variables_intro_2019:
        content1: 测试Markdown文本页面
        markdown: |+
          # **在这节课中...**

          ### *变量* 是一些能改变的信息的占位符。有了占位符，才能在稍后才能知道值得情况下，写出程序！


          ---

          ## **要知道的模块**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_multi_artist_for10_predict1:
        answers:
        - text: 艺术家将绘制一条直线，从画布的一侧到另一侧，同时线逐渐变粗。
          feedback: 错误。艺术家在“for”循环的迭代之间往返。
        - text: 艺术家将绘制一个螺旋图形，每次通过“for”循环，线会变得更长和更细。
          feedback: 错误。每次通过“for”循环，艺术家绘制的线会变得更长和更粗。
        - text: 艺术家将绘制一个螺旋图形，每次通过“for”循环，线会变得更长和更粗。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 错误。每次通过“for”循环，艺术家绘制的线会变得更长和更粗。
        markdown: |+
          使用 `计数循环` 中的计数器来改变此图形上笔刷的宽度。


        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseF_multi_artist_for10_predict1_2018:
        answers:
        - text: 艺术家将绘制一条直线，从画布的一侧到另一侧，同时线逐渐变粗。
          feedback: 错误。艺术家在“for”循环的迭代之间往返。
        - text: 艺术家将绘制一个螺旋图形，每次通过“for”循环，线会变得更长和更细。
          feedback: 错误。每次通过“for”循环，艺术家绘制的线会变得更长和更粗。
        - text: 艺术家将绘制一个螺旋图形，每次通过“for”循环，线会变得更长和更粗。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 错误。每次通过“for”循环，艺术家绘制的线会变得更长和更粗。
        markdown: |+
          使用 `计数循环` 中的计数器来改变此图形上笔刷的宽度。


        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseF_multi_artist_for10_predict1_2018_2019:
        answers:
        - text: 艺术家将绘制一条直线，从画布的一侧到另一侧，同时线逐渐变粗。
          feedback: 错误。艺术家在“for”循环的迭代之间往返。
        - text: 艺术家将绘制一个螺旋图形，每次通过“for”循环，线会变得更长和更细。
          feedback: 错误。每次通过“for”循环，艺术家绘制的线会变得更长和更粗。
        - text: 艺术家将绘制一个螺旋图形，每次通过“for”循环，线会变得更长和更粗。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 我不知道。
          feedback: 错误。每次通过“for”循环，艺术家绘制的线会变得更长和更粗。
        markdown: |+
          使用 `计数循环` 中的计数器来改变此图形上笔刷的宽度。


        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseF_multi_artist_fwp2_predict1:
        answers:
        - text: 小艺术家会用同一个函数画两个不同大小的盒子。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 小艺术家会用不同的函数画两个不同大小的盒子。
          feedback: 不正确。使用参数可以让单个函数有不同的结果。
        - text: 小艺术家会用不同的函数画两个相同大小的盒子。
          feedback: 不正确。使用参数可以让单个函数有不同的结果。
        - text: 我不知道。
          feedback: 程序使用参数来让单个函数创建出不同大小的盒子。
        markdown: |+
          已经为'画一个正方形'函数增加了参数。点击蓝色的"编辑"按钮来查看函数的定义。


        questions:
        - text: 运行程序会发生什么？
      courseF_multi_artist_variables3a_predict1:
        answers:
        - text: 艺术家将会绘制一个边长为50像素的三角形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 艺术家将绘制一个有50条边的多边形，其中每条边长为3个像素。
          feedback: 错误。 变量“长度”需要在“重复”循环中使用，才能实现。
        - text: 艺术家将绘制一个开放的图形，其中三条边分别旋转50度。
          feedback: 错误。 变量“长度”需要在“转x度”积木块中使用，才能实现。
        - text: 我不知道。
          feedback: "`length`（长度）变量设置为 50，并在`向前移动`模块中使用。因此艺术家会画一个边长为 50 像素的三角形。"
        questions:
        - text: 变量 "length"（长度）已设为 50。当单击 “运行” 时，会发生什么？
      courseF_multi_artist_variables3a_predict1_2018:
        answers:
        - text: 艺术家将会绘制一个边长为50像素的三角形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 艺术家将绘制一个有50条边的多边形，其中每条边长为3个像素。
          feedback: 错误。 变量“长度”需要在“重复”循环中使用，才能实现。
        - text: 艺术家将绘制一个开放的图形，其中三条边分别旋转50度。
          feedback: 错误。 变量“长度”需要在“转x度”积木块中使用，才能实现。
        - text: 我不知道。
          feedback: "`length`（长度）变量设置为 50，并在`向前移动`模块中使用。因此艺术家会画一个边长为 50 像素的三角形。"
        questions:
        - text: 变量 "length"（长度）已设为 50。当单击 “运行” 时，会发生什么？
      courseF_multi_artist_variables3a_predict1_2018_2019:
        answers:
        - text: 艺术家将会绘制一个边长为50像素的三角形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 艺术家将绘制一个有50条边的多边形，其中每条边长为3个像素。
          feedback: 错误。 变量“长度”需要在“重复”循环中使用，才能实现。
        - text: 艺术家将绘制一个开放的图形，其中三条边分别旋转50度。
          feedback: 错误。 变量“长度”需要在“转x度”积木块中使用，才能实现。
        - text: 我不知道。
          feedback: "`length`（长度）变量设置为 50，并在`向前移动`模块中使用。因此艺术家会画一个边长为 50 像素的三角形。"
        questions:
        - text: 变量 "length"（长度）已设为 50。当单击 “运行” 时，会发生什么？
      courseF_multi_bee_conditionals1_predict1:
        answers:
        - text: '蜜蜂会移动到云中，然后采花粉，不论云下是什么。 '
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        - text: 蜜蜂会移动到云中，只有在下面有花朵的情况下，才会尝试采花粉。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会移动到云中，然后什么都不做，不论云下是什么。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂会采花粉。
        - text: 我不知道。
          feedback: 错误。积木块 `如果在花上` 能确保，如果云下有花朵的话，蜜蜂只会采花粉。
        markdown: '云挡住了视线。云下面可能会有花。如果有花，蜜蜂要采集 **一次** 花蜜。

'
        questions:
        - text: 如果没有花，蜜蜂什么都不会做。仔细看看下面的代码。点击 "运行" 后会发生什么？
      courseF_multi_bee_conditionals7_predict2:
        answers:
        - text: 蜜蜂会在每朵花那里采花蜜，否则酿蜂蜜。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂会从花朵和蜂窝中获取花粉。
          feedback: 不正确。`如果在花上` 模块让蜜蜂能在每朵花上采花蜜，如果不是花就酿蜂蜜 (因此是蜂窝)。
        - text: 蜜蜂会从花朵和蜂窝中获取蜂蜜。
          feedback: 不正确。`如果在花上` 模块让蜜蜂能在每朵花上采花蜜，在蜂窝里酿蜂蜜。
        - text: 我不知道。
          feedback: "`如果在花上` 模块让蜜蜂能在每朵花上采花蜜，否则酿蜂蜜。"
        markdown: '有时，云会挡住花，有时会挡住蜂窝！不管哪种情况，每朵云下只会有 **一朵** 花或者 **一个** 蜂窝。

'
        questions:
        - text: 仔细阅读下面的代码。点击 "运行" 后，会发生什么？
      courseF_multi_bee_for3_predict1:
        answers:
        - text: 蜜蜂将向前移动，并收集所有花朵中的所有花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        - text: 蜜蜂将向前移动，并收集花朵中所有的花蜜，但是会有一朵花收集不到。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂将向前移动，并在每朵花中收集一个花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        - text: 蜜蜂将向前移动，并在尝试收集比花朵中更多的花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        markdown: |+
          啊！ 使用 `计数循环` 让这一关简单多了！


        questions:
        - text: 仔细阅读下面的代码。单击 "运行" 会发生什么情况？
      courseF_multi_bee_for3_predict1_2018:
        answers:
        - text: 蜜蜂将向前移动，并收集所有花朵中的所有花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        - text: 蜜蜂将向前移动，并收集花朵中所有的花蜜，但是会有一朵花收集不到。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂将向前移动，并在每朵花中收集一个花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        - text: 我不知道。
          feedback: "“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。"
        markdown: |+
          啊！ 使用 `计数循环` 让这一关简单多了！


        questions:
        - text: 仔细阅读下面的代码。当单击 "运行"，会发生什么情况？
      courseF_multi_bee_for3_predict1_2018_2019:
        answers:
        - text: 蜜蜂将向前移动，并收集所有花朵中的所有花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        - text: 蜜蜂将向前移动，并收集花朵中所有的花蜜，但是会有一朵花收集不到。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 蜜蜂将向前移动，并在每朵花中收集一个花蜜。
          feedback: 错误。“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。
        - text: 我不知道。
          feedback: "“for”循环将让蜜蜂收集正确数量的花蜜，但它的设置只能到达4朵花。"
        markdown: |+
          啊！ 使用 `计数循环` 让这一关简单多了！


        questions:
        - text: 仔细阅读下面的代码。当单击 "运行"，会发生什么情况？
      courseF_multi_bee_fwp9_predict1:
        answers:
        - text: 蜜蜂不会采集任何花蜜或蜂蜜。
          feedback: 不正确。函数被设置为通过参数来采集输入数量的所有花蜜或蜂蜜。
        - text: '蜜蜂会采集三个花蜜或蜂蜜，然后在楼梯图案上的两个花蜜或蜂蜜。 '
          correct: true
          feedback: 正确！函数被设置为通过参数来采集输入数量的所有花蜜或蜂蜜。
        - text: '在每次循环时，蜜蜂只会采集一个花蜜或蜂蜜。 '
          feedback: 不正确。函数被设置为通过参数来采集输入数量的所有花蜜或蜂蜜。
        - text: 我不知道。
          feedback: 点击查看函数的内容，它被设置为采集输入数量的花蜜或蜂蜜。
        markdown: |+
          在云下面，要么是正好有 1 个花蜜的花，或者正好 1 个蜂蜜的蜂窝。点击函数上蓝色的"编辑"按钮，在回答问题前看看函数里面是什么。


        questions:
        - text: 当您单击“运行”时，会发生什么情况？
      courseF_multi_playlab_variables4c_predictive1:
        answers:
        - text: 海盗会说，"很高兴见到你，阿里。"，就这样。
          correct: true
          feedback: '正确 '
        - text: 海盗会说，"很高兴见到你。"，就这样。
          feedback: 不正确。注意`连接`模块将提供的名字放入了海盗的句子中。
        - text: 海盗会说，"阿里"，就这样。
          feedback: 不正确。注意`连接`模块将提供的名字放入了海盗的句子中。
        - text: 我不知道。
          feedback: '不正确。注意`连接`模块将提供的名字（阿里）放入了海盗的句子中。 '
        markdown: "**这一关使用了叫做`问`的新模块。**\n\n`问`模块会停住程序，并提示用户输入一些文字。 \n\n不管用户输入了什么，都会保存在`问`模块后面的变量里。在这里变量是`name`（名称）。\n"
        questions:
        - text: 如果用户在提示时输入名字 "阿里"，会怎样？
      courseF_project_exemplars_2019:
        content1: 测试Markdown文本页面
        markdown: |+
          # 项目示例

          要开始最终项目了。开始前，花点时间来看看示例项目。

          ## 精灵图实验室

          | 纸杯蛋糕游戏 (精灵图实验室) | 直升机游戏 (精灵图实验室) |
          |---|---|
          | [![#纸杯蛋糕游戏 (精灵图实验室)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png)](https://studio.code.org/projects/spritelab/YMEHR4ps9cDJ0sb4Ks0YrZcpcjGmc4OEiUudZHm-l6g/view) | [![#直升机游戏 (精灵图实验室)](https://images.code.org/1a273fd447b952367792423a70c5087a-image-1556812149075.png)](https://studio.code.org/projects/spritelab/STSNFsfSpabSzZcZYC7o2HLgTz-vKlZm-vqRyp94pk4/view) |
          | 试试给游戏加上文字或分数！ | 试试给游戏加上文字或分数！ |

          ## 小艺术家

          | 花丛 (小艺术家) | 螺旋 (小艺术家) |
          |---|---|
          | [![花丛 (小艺术家)](https://images.code.org/0f5adf63c318eab8c8acb397d9db7f2a-image-1556821537577.png)](https://studio.code.org/projects/artist/MIMh2pV2IiLm1ZzaiA6N7kKvg534lFck3abLXTsvZU8/view) | [![螺旋 (小艺术家)](https://images.code.org/06514571a8cf2f8b0346006ac1adc219-image-1556819399386.png)](https://studio.code.org/projects/artist/66scPDPWa8RNNHkcXDaXdA/view) |
          | 用变量发挥创意！ | 用循环发挥创意！ |

      coursee_prediction_artistfunction2:
        answers:
        - text: 艺术家将正确解决谜题。
          feedback: 不正确。循环使用了“画多边形”，而不是“多一列多边形”。
        - text: 这位艺术家将在窗户形状内画四个正方形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 艺术家只画正方形的一条边。
          feedback: 不正确。该程序不调用“画一列多边形”。
        - text: 这位艺术家将画四个互相重叠的正方形。
          feedback: 不正确。在调用“画多边形”之间，循环转动了90度。
        questions:
        - text: 点击 "运行" 按钮后会发生什么？
      coursee_prediction_artistfunction2_2018:
        answers:
        - text: 艺术家将正确解决谜题。
          feedback: 不正确。循环使用了“画多边形”，而不是“多一列多边形”。
        - text: 这位艺术家将在窗户形状内画四个正方形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 艺术家只画正方形的一条边。
          feedback: 不正确。该程序不调用“画一列多边形”。
        - text: 这位艺术家将画四个互相重叠的正方形。
          feedback: 不正确。在调用“画多边形”之间，循环转动了90度。
        questions:
        - text: 点击 "运行" 按钮后会发生什么？
      coursee_prediction_artistfunction2_2018_2019:
        answers:
        - text: 艺术家将正确解决谜题。
          feedback: 不正确。循环使用了“画多边形”，而不是“多一列多边形”。
        - text: 这位艺术家将在窗户形状内画四个正方形。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 艺术家只画正方形的一条边。
          feedback: 不正确。该程序不调用“画一列多边形”。
        - text: 这位艺术家将画四个互相重叠的正方形。
          feedback: 不正确。在调用“画多边形”之间，循环转动了90度。
        questions:
        - text: 点击 "运行" 按钮后会发生什么？
      csd-post-survey-2017-levelgroup-2018-2nd-semester:
        title: 计算机科学发现课程 期末学生问卷
      csd-post-survey-2018-markdown-with-link-to-survey_v2:
        markdown: |+
          # 计算机科学发现课后问卷

          **你的输入和反馈对我们非常重要！** 我们会用它来：

          * 了解你的体验
          * 改进课程

          非常感谢花时间来帮助计算机科学发现变得更好！

          <a class="btn btn-large btn-success" href="/s/csd-post-survey-2018/stage/1/puzzle/1/page/1" target="top">点击这里完成计算机科学发现课后问卷！！！</a>

          (在新窗口中打开)

          <br>





      csd-post-survey-levelgroup-2018:
        title: 计算机科学发现课程 期末学生问卷
      csd-pre-survey-2017-levelgroup:
        markdown: |
          #概述
          班级作业是组队设计一个能装尽可能多硬币的铝箔船。当课程最后，小组回顾他们的活动经历、以及与解决的问题建立的联系时，他们就会主动完成剩下的课程。

          ##资料
          * [铝箔船](https://docs.google.com/document/d/1C5RMzH0811r8e2XdVbWV-GANm3uIar2_N8hI9jqX2rk/export?format=pdf) - 活动指导 (微软版(https://docs.google.com/document/d/1C5RMzH0811r8e2XdVbWV-GANm3uIar2_N8hI9jqX2rk/export?format=doc), [谷歌文档](https://docs.google.com/document/d/1C5RMzH0811r8e2XdVbWV-GANm3uIar2_N8hI9jqX2rk/copy))
      csd-pulse-check-survey-1-levelgroup U1Ch2:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U1Ch2_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U1Ch2_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U2Ch1:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U2Ch1_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U2Ch1_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U2Ch2:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U2Ch2_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U2Ch2_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U3Ch1:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U3Ch1_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U3Ch1_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U3Ch2:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U3Ch2_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U3Ch2_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U4Ch1:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U4Ch1_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U4Ch1_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U4Ch2:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U4Ch2_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U4Ch2_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U5Ch1:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U5Ch1_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U5Ch1_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U5Ch2:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U5Ch2_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U5Ch2_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U6Ch1:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U6Ch1_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U6Ch1_2018_2019:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U6Ch2:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U6Ch2_2018:
        title: 计算机科学发现快速问卷！
      csd-pulse-check-survey-1-levelgroup U6Ch2_2018_2019:
        title: 计算机科学发现快速问卷！
      grade2_multi_collector_A_predict1:
        answers:
        - text: 用这段代码让罗瑞尔收集4个宝贝
          feedback: 不正确。罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        - text: 罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 罗瑞尔要收集所有宝藏。
          feedback: 不正确。罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        - text: 我不知道。
          feedback: 罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        questions:
        - text: 仔细观察下面的代码。若程序运行至结束（忽略所有错误），罗瑞尔应该收集到多少宝藏？
      grade2_multi_collector_A_predict1_2018:
        answers:
        - text: 用这段代码让罗瑞尔收集4个宝贝
          feedback: 不正确。罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        - text: 罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 罗瑞尔要收集所有宝藏。
          feedback: 不正确。罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        - text: 我不知道。
          feedback: 罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        questions:
        - text: 仔细观察代码。你认为程序运行时会发生什么？
      grade2_multi_collector_A_predict1_2018_2019:
        answers:
        - text: 用这段代码让罗瑞尔收集4个宝贝
          feedback: 不正确。罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        - text: 罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
          correct: true
          feedback: 叮咚！答对啦！
        - text: 罗瑞尔要收集所有宝藏。
          feedback: 不正确。罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        - text: 我不知道。
          feedback: 罗瑞尔在没有任何东西的时候，试着收集宝藏，这造成了错误。
        questions:
        - text: 仔细观察代码。你认为程序运行时会发生什么？
      gradek1_activity_beNice:
        markdown: "# 在电脑实验室中表现\n  \n<br/><br/>    \n    \n<a href=\"https://docs.google.com/document/d/18KHX5NNlmXX1Eqt8u6LFRzto7PK4dIFNv-tr1F1joUQ/edit?usp=sharing\"
          target=\"_new\">\n<button>\n前往教学计划\n</button> \n</a>\n\n<br/><br/>\n<a class=\"btn
          btn-large btn-primary next-stage submitButton\">继续</a>\n"
